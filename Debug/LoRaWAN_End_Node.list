
LoRaWAN_End_Node.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000138  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000256f0  08000140  08000140  00010140  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00001808  08025830  08025830  00035830  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000054  08027038  08027038  00037038  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .ARM          000000f8  0802708c  0802708c  0003708c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08027184  08027184  0004023c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000008  08027184  08027184  00037184  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  0802718c  0802718c  0003718c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         0000023c  20000000  08027190  00040000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00001e58  2000023c  080273cc  0004023c  2**2
                  ALLOC
 10 ._user_heap_stack 00000a04  20002094  080273cc  00042094  2**0
                  ALLOC
 11 .ARM.attributes 0000002a  00000000  00000000  0004023c  2**0
                  CONTENTS, READONLY
 12 .debug_info   0008d215  00000000  00000000  00040266  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 0000d114  00000000  00000000  000cd47b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00004220  00000000  00000000  000da590  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00003da0  00000000  00000000  000de7b0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00032dd1  00000000  00000000  000e2550  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0004ac25  00000000  00000000  00115321  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000f8bbc  00000000  00000000  0015ff46  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000053  00000000  00000000  00258b02  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00012480  00000000  00000000  00258b58  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000140 <__do_global_dtors_aux>:
 8000140:	b510      	push	{r4, lr}
 8000142:	4c05      	ldr	r4, [pc, #20]	; (8000158 <__do_global_dtors_aux+0x18>)
 8000144:	7823      	ldrb	r3, [r4, #0]
 8000146:	b933      	cbnz	r3, 8000156 <__do_global_dtors_aux+0x16>
 8000148:	4b04      	ldr	r3, [pc, #16]	; (800015c <__do_global_dtors_aux+0x1c>)
 800014a:	b113      	cbz	r3, 8000152 <__do_global_dtors_aux+0x12>
 800014c:	4804      	ldr	r0, [pc, #16]	; (8000160 <__do_global_dtors_aux+0x20>)
 800014e:	f3af 8000 	nop.w
 8000152:	2301      	movs	r3, #1
 8000154:	7023      	strb	r3, [r4, #0]
 8000156:	bd10      	pop	{r4, pc}
 8000158:	2000023c 	.word	0x2000023c
 800015c:	00000000 	.word	0x00000000
 8000160:	08025818 	.word	0x08025818

08000164 <frame_dummy>:
 8000164:	b508      	push	{r3, lr}
 8000166:	4b03      	ldr	r3, [pc, #12]	; (8000174 <frame_dummy+0x10>)
 8000168:	b11b      	cbz	r3, 8000172 <frame_dummy+0xe>
 800016a:	4903      	ldr	r1, [pc, #12]	; (8000178 <frame_dummy+0x14>)
 800016c:	4803      	ldr	r0, [pc, #12]	; (800017c <frame_dummy+0x18>)
 800016e:	f3af 8000 	nop.w
 8000172:	bd08      	pop	{r3, pc}
 8000174:	00000000 	.word	0x00000000
 8000178:	20000240 	.word	0x20000240
 800017c:	08025818 	.word	0x08025818

08000180 <strlen>:
 8000180:	4603      	mov	r3, r0
 8000182:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000186:	2a00      	cmp	r2, #0
 8000188:	d1fb      	bne.n	8000182 <strlen+0x2>
 800018a:	1a18      	subs	r0, r3, r0
 800018c:	3801      	subs	r0, #1
 800018e:	4770      	bx	lr

08000190 <memchr>:
 8000190:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8000194:	2a10      	cmp	r2, #16
 8000196:	db2b      	blt.n	80001f0 <memchr+0x60>
 8000198:	f010 0f07 	tst.w	r0, #7
 800019c:	d008      	beq.n	80001b0 <memchr+0x20>
 800019e:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001a2:	3a01      	subs	r2, #1
 80001a4:	428b      	cmp	r3, r1
 80001a6:	d02d      	beq.n	8000204 <memchr+0x74>
 80001a8:	f010 0f07 	tst.w	r0, #7
 80001ac:	b342      	cbz	r2, 8000200 <memchr+0x70>
 80001ae:	d1f6      	bne.n	800019e <memchr+0xe>
 80001b0:	b4f0      	push	{r4, r5, r6, r7}
 80001b2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 80001b6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 80001ba:	f022 0407 	bic.w	r4, r2, #7
 80001be:	f07f 0700 	mvns.w	r7, #0
 80001c2:	2300      	movs	r3, #0
 80001c4:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 80001c8:	3c08      	subs	r4, #8
 80001ca:	ea85 0501 	eor.w	r5, r5, r1
 80001ce:	ea86 0601 	eor.w	r6, r6, r1
 80001d2:	fa85 f547 	uadd8	r5, r5, r7
 80001d6:	faa3 f587 	sel	r5, r3, r7
 80001da:	fa86 f647 	uadd8	r6, r6, r7
 80001de:	faa5 f687 	sel	r6, r5, r7
 80001e2:	b98e      	cbnz	r6, 8000208 <memchr+0x78>
 80001e4:	d1ee      	bne.n	80001c4 <memchr+0x34>
 80001e6:	bcf0      	pop	{r4, r5, r6, r7}
 80001e8:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001ec:	f002 0207 	and.w	r2, r2, #7
 80001f0:	b132      	cbz	r2, 8000200 <memchr+0x70>
 80001f2:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001f6:	3a01      	subs	r2, #1
 80001f8:	ea83 0301 	eor.w	r3, r3, r1
 80001fc:	b113      	cbz	r3, 8000204 <memchr+0x74>
 80001fe:	d1f8      	bne.n	80001f2 <memchr+0x62>
 8000200:	2000      	movs	r0, #0
 8000202:	4770      	bx	lr
 8000204:	3801      	subs	r0, #1
 8000206:	4770      	bx	lr
 8000208:	2d00      	cmp	r5, #0
 800020a:	bf06      	itte	eq
 800020c:	4635      	moveq	r5, r6
 800020e:	3803      	subeq	r0, #3
 8000210:	3807      	subne	r0, #7
 8000212:	f015 0f01 	tst.w	r5, #1
 8000216:	d107      	bne.n	8000228 <memchr+0x98>
 8000218:	3001      	adds	r0, #1
 800021a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800021e:	bf02      	ittt	eq
 8000220:	3001      	addeq	r0, #1
 8000222:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000226:	3001      	addeq	r0, #1
 8000228:	bcf0      	pop	{r4, r5, r6, r7}
 800022a:	3801      	subs	r0, #1
 800022c:	4770      	bx	lr
 800022e:	bf00      	nop

08000230 <__aeabi_drsub>:
 8000230:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 8000234:	e002      	b.n	800023c <__adddf3>
 8000236:	bf00      	nop

08000238 <__aeabi_dsub>:
 8000238:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

0800023c <__adddf3>:
 800023c:	b530      	push	{r4, r5, lr}
 800023e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 8000242:	ea4f 0543 	mov.w	r5, r3, lsl #1
 8000246:	ea94 0f05 	teq	r4, r5
 800024a:	bf08      	it	eq
 800024c:	ea90 0f02 	teqeq	r0, r2
 8000250:	bf1f      	itttt	ne
 8000252:	ea54 0c00 	orrsne.w	ip, r4, r0
 8000256:	ea55 0c02 	orrsne.w	ip, r5, r2
 800025a:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 800025e:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000262:	f000 80e2 	beq.w	800042a <__adddf3+0x1ee>
 8000266:	ea4f 5454 	mov.w	r4, r4, lsr #21
 800026a:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 800026e:	bfb8      	it	lt
 8000270:	426d      	neglt	r5, r5
 8000272:	dd0c      	ble.n	800028e <__adddf3+0x52>
 8000274:	442c      	add	r4, r5
 8000276:	ea80 0202 	eor.w	r2, r0, r2
 800027a:	ea81 0303 	eor.w	r3, r1, r3
 800027e:	ea82 0000 	eor.w	r0, r2, r0
 8000282:	ea83 0101 	eor.w	r1, r3, r1
 8000286:	ea80 0202 	eor.w	r2, r0, r2
 800028a:	ea81 0303 	eor.w	r3, r1, r3
 800028e:	2d36      	cmp	r5, #54	; 0x36
 8000290:	bf88      	it	hi
 8000292:	bd30      	pophi	{r4, r5, pc}
 8000294:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000298:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800029c:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 80002a0:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 80002a4:	d002      	beq.n	80002ac <__adddf3+0x70>
 80002a6:	4240      	negs	r0, r0
 80002a8:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80002ac:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 80002b0:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80002b4:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 80002b8:	d002      	beq.n	80002c0 <__adddf3+0x84>
 80002ba:	4252      	negs	r2, r2
 80002bc:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 80002c0:	ea94 0f05 	teq	r4, r5
 80002c4:	f000 80a7 	beq.w	8000416 <__adddf3+0x1da>
 80002c8:	f1a4 0401 	sub.w	r4, r4, #1
 80002cc:	f1d5 0e20 	rsbs	lr, r5, #32
 80002d0:	db0d      	blt.n	80002ee <__adddf3+0xb2>
 80002d2:	fa02 fc0e 	lsl.w	ip, r2, lr
 80002d6:	fa22 f205 	lsr.w	r2, r2, r5
 80002da:	1880      	adds	r0, r0, r2
 80002dc:	f141 0100 	adc.w	r1, r1, #0
 80002e0:	fa03 f20e 	lsl.w	r2, r3, lr
 80002e4:	1880      	adds	r0, r0, r2
 80002e6:	fa43 f305 	asr.w	r3, r3, r5
 80002ea:	4159      	adcs	r1, r3
 80002ec:	e00e      	b.n	800030c <__adddf3+0xd0>
 80002ee:	f1a5 0520 	sub.w	r5, r5, #32
 80002f2:	f10e 0e20 	add.w	lr, lr, #32
 80002f6:	2a01      	cmp	r2, #1
 80002f8:	fa03 fc0e 	lsl.w	ip, r3, lr
 80002fc:	bf28      	it	cs
 80002fe:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000302:	fa43 f305 	asr.w	r3, r3, r5
 8000306:	18c0      	adds	r0, r0, r3
 8000308:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800030c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000310:	d507      	bpl.n	8000322 <__adddf3+0xe6>
 8000312:	f04f 0e00 	mov.w	lr, #0
 8000316:	f1dc 0c00 	rsbs	ip, ip, #0
 800031a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800031e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000322:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 8000326:	d31b      	bcc.n	8000360 <__adddf3+0x124>
 8000328:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 800032c:	d30c      	bcc.n	8000348 <__adddf3+0x10c>
 800032e:	0849      	lsrs	r1, r1, #1
 8000330:	ea5f 0030 	movs.w	r0, r0, rrx
 8000334:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000338:	f104 0401 	add.w	r4, r4, #1
 800033c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8000340:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 8000344:	f080 809a 	bcs.w	800047c <__adddf3+0x240>
 8000348:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 800034c:	bf08      	it	eq
 800034e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000352:	f150 0000 	adcs.w	r0, r0, #0
 8000356:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800035a:	ea41 0105 	orr.w	r1, r1, r5
 800035e:	bd30      	pop	{r4, r5, pc}
 8000360:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 8000364:	4140      	adcs	r0, r0
 8000366:	eb41 0101 	adc.w	r1, r1, r1
 800036a:	3c01      	subs	r4, #1
 800036c:	bf28      	it	cs
 800036e:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 8000372:	d2e9      	bcs.n	8000348 <__adddf3+0x10c>
 8000374:	f091 0f00 	teq	r1, #0
 8000378:	bf04      	itt	eq
 800037a:	4601      	moveq	r1, r0
 800037c:	2000      	moveq	r0, #0
 800037e:	fab1 f381 	clz	r3, r1
 8000382:	bf08      	it	eq
 8000384:	3320      	addeq	r3, #32
 8000386:	f1a3 030b 	sub.w	r3, r3, #11
 800038a:	f1b3 0220 	subs.w	r2, r3, #32
 800038e:	da0c      	bge.n	80003aa <__adddf3+0x16e>
 8000390:	320c      	adds	r2, #12
 8000392:	dd08      	ble.n	80003a6 <__adddf3+0x16a>
 8000394:	f102 0c14 	add.w	ip, r2, #20
 8000398:	f1c2 020c 	rsb	r2, r2, #12
 800039c:	fa01 f00c 	lsl.w	r0, r1, ip
 80003a0:	fa21 f102 	lsr.w	r1, r1, r2
 80003a4:	e00c      	b.n	80003c0 <__adddf3+0x184>
 80003a6:	f102 0214 	add.w	r2, r2, #20
 80003aa:	bfd8      	it	le
 80003ac:	f1c2 0c20 	rsble	ip, r2, #32
 80003b0:	fa01 f102 	lsl.w	r1, r1, r2
 80003b4:	fa20 fc0c 	lsr.w	ip, r0, ip
 80003b8:	bfdc      	itt	le
 80003ba:	ea41 010c 	orrle.w	r1, r1, ip
 80003be:	4090      	lslle	r0, r2
 80003c0:	1ae4      	subs	r4, r4, r3
 80003c2:	bfa2      	ittt	ge
 80003c4:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 80003c8:	4329      	orrge	r1, r5
 80003ca:	bd30      	popge	{r4, r5, pc}
 80003cc:	ea6f 0404 	mvn.w	r4, r4
 80003d0:	3c1f      	subs	r4, #31
 80003d2:	da1c      	bge.n	800040e <__adddf3+0x1d2>
 80003d4:	340c      	adds	r4, #12
 80003d6:	dc0e      	bgt.n	80003f6 <__adddf3+0x1ba>
 80003d8:	f104 0414 	add.w	r4, r4, #20
 80003dc:	f1c4 0220 	rsb	r2, r4, #32
 80003e0:	fa20 f004 	lsr.w	r0, r0, r4
 80003e4:	fa01 f302 	lsl.w	r3, r1, r2
 80003e8:	ea40 0003 	orr.w	r0, r0, r3
 80003ec:	fa21 f304 	lsr.w	r3, r1, r4
 80003f0:	ea45 0103 	orr.w	r1, r5, r3
 80003f4:	bd30      	pop	{r4, r5, pc}
 80003f6:	f1c4 040c 	rsb	r4, r4, #12
 80003fa:	f1c4 0220 	rsb	r2, r4, #32
 80003fe:	fa20 f002 	lsr.w	r0, r0, r2
 8000402:	fa01 f304 	lsl.w	r3, r1, r4
 8000406:	ea40 0003 	orr.w	r0, r0, r3
 800040a:	4629      	mov	r1, r5
 800040c:	bd30      	pop	{r4, r5, pc}
 800040e:	fa21 f004 	lsr.w	r0, r1, r4
 8000412:	4629      	mov	r1, r5
 8000414:	bd30      	pop	{r4, r5, pc}
 8000416:	f094 0f00 	teq	r4, #0
 800041a:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 800041e:	bf06      	itte	eq
 8000420:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8000424:	3401      	addeq	r4, #1
 8000426:	3d01      	subne	r5, #1
 8000428:	e74e      	b.n	80002c8 <__adddf3+0x8c>
 800042a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800042e:	bf18      	it	ne
 8000430:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000434:	d029      	beq.n	800048a <__adddf3+0x24e>
 8000436:	ea94 0f05 	teq	r4, r5
 800043a:	bf08      	it	eq
 800043c:	ea90 0f02 	teqeq	r0, r2
 8000440:	d005      	beq.n	800044e <__adddf3+0x212>
 8000442:	ea54 0c00 	orrs.w	ip, r4, r0
 8000446:	bf04      	itt	eq
 8000448:	4619      	moveq	r1, r3
 800044a:	4610      	moveq	r0, r2
 800044c:	bd30      	pop	{r4, r5, pc}
 800044e:	ea91 0f03 	teq	r1, r3
 8000452:	bf1e      	ittt	ne
 8000454:	2100      	movne	r1, #0
 8000456:	2000      	movne	r0, #0
 8000458:	bd30      	popne	{r4, r5, pc}
 800045a:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 800045e:	d105      	bne.n	800046c <__adddf3+0x230>
 8000460:	0040      	lsls	r0, r0, #1
 8000462:	4149      	adcs	r1, r1
 8000464:	bf28      	it	cs
 8000466:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 800046a:	bd30      	pop	{r4, r5, pc}
 800046c:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 8000470:	bf3c      	itt	cc
 8000472:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 8000476:	bd30      	popcc	{r4, r5, pc}
 8000478:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 800047c:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 8000480:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8000484:	f04f 0000 	mov.w	r0, #0
 8000488:	bd30      	pop	{r4, r5, pc}
 800048a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800048e:	bf1a      	itte	ne
 8000490:	4619      	movne	r1, r3
 8000492:	4610      	movne	r0, r2
 8000494:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8000498:	bf1c      	itt	ne
 800049a:	460b      	movne	r3, r1
 800049c:	4602      	movne	r2, r0
 800049e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80004a2:	bf06      	itte	eq
 80004a4:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 80004a8:	ea91 0f03 	teqeq	r1, r3
 80004ac:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 80004b0:	bd30      	pop	{r4, r5, pc}
 80004b2:	bf00      	nop

080004b4 <__aeabi_ui2d>:
 80004b4:	f090 0f00 	teq	r0, #0
 80004b8:	bf04      	itt	eq
 80004ba:	2100      	moveq	r1, #0
 80004bc:	4770      	bxeq	lr
 80004be:	b530      	push	{r4, r5, lr}
 80004c0:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80004c4:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80004c8:	f04f 0500 	mov.w	r5, #0
 80004cc:	f04f 0100 	mov.w	r1, #0
 80004d0:	e750      	b.n	8000374 <__adddf3+0x138>
 80004d2:	bf00      	nop

080004d4 <__aeabi_i2d>:
 80004d4:	f090 0f00 	teq	r0, #0
 80004d8:	bf04      	itt	eq
 80004da:	2100      	moveq	r1, #0
 80004dc:	4770      	bxeq	lr
 80004de:	b530      	push	{r4, r5, lr}
 80004e0:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80004e4:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80004e8:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 80004ec:	bf48      	it	mi
 80004ee:	4240      	negmi	r0, r0
 80004f0:	f04f 0100 	mov.w	r1, #0
 80004f4:	e73e      	b.n	8000374 <__adddf3+0x138>
 80004f6:	bf00      	nop

080004f8 <__aeabi_f2d>:
 80004f8:	0042      	lsls	r2, r0, #1
 80004fa:	ea4f 01e2 	mov.w	r1, r2, asr #3
 80004fe:	ea4f 0131 	mov.w	r1, r1, rrx
 8000502:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000506:	bf1f      	itttt	ne
 8000508:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 800050c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000510:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8000514:	4770      	bxne	lr
 8000516:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 800051a:	bf08      	it	eq
 800051c:	4770      	bxeq	lr
 800051e:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 8000522:	bf04      	itt	eq
 8000524:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 8000528:	4770      	bxeq	lr
 800052a:	b530      	push	{r4, r5, lr}
 800052c:	f44f 7460 	mov.w	r4, #896	; 0x380
 8000530:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000534:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000538:	e71c      	b.n	8000374 <__adddf3+0x138>
 800053a:	bf00      	nop

0800053c <__aeabi_ul2d>:
 800053c:	ea50 0201 	orrs.w	r2, r0, r1
 8000540:	bf08      	it	eq
 8000542:	4770      	bxeq	lr
 8000544:	b530      	push	{r4, r5, lr}
 8000546:	f04f 0500 	mov.w	r5, #0
 800054a:	e00a      	b.n	8000562 <__aeabi_l2d+0x16>

0800054c <__aeabi_l2d>:
 800054c:	ea50 0201 	orrs.w	r2, r0, r1
 8000550:	bf08      	it	eq
 8000552:	4770      	bxeq	lr
 8000554:	b530      	push	{r4, r5, lr}
 8000556:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 800055a:	d502      	bpl.n	8000562 <__aeabi_l2d+0x16>
 800055c:	4240      	negs	r0, r0
 800055e:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000562:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000566:	f104 0432 	add.w	r4, r4, #50	; 0x32
 800056a:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 800056e:	f43f aed8 	beq.w	8000322 <__adddf3+0xe6>
 8000572:	f04f 0203 	mov.w	r2, #3
 8000576:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 800057a:	bf18      	it	ne
 800057c:	3203      	addne	r2, #3
 800057e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8000582:	bf18      	it	ne
 8000584:	3203      	addne	r2, #3
 8000586:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 800058a:	f1c2 0320 	rsb	r3, r2, #32
 800058e:	fa00 fc03 	lsl.w	ip, r0, r3
 8000592:	fa20 f002 	lsr.w	r0, r0, r2
 8000596:	fa01 fe03 	lsl.w	lr, r1, r3
 800059a:	ea40 000e 	orr.w	r0, r0, lr
 800059e:	fa21 f102 	lsr.w	r1, r1, r2
 80005a2:	4414      	add	r4, r2
 80005a4:	e6bd      	b.n	8000322 <__adddf3+0xe6>
 80005a6:	bf00      	nop

080005a8 <__aeabi_dmul>:
 80005a8:	b570      	push	{r4, r5, r6, lr}
 80005aa:	f04f 0cff 	mov.w	ip, #255	; 0xff
 80005ae:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 80005b2:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 80005b6:	bf1d      	ittte	ne
 80005b8:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80005bc:	ea94 0f0c 	teqne	r4, ip
 80005c0:	ea95 0f0c 	teqne	r5, ip
 80005c4:	f000 f8de 	bleq	8000784 <__aeabi_dmul+0x1dc>
 80005c8:	442c      	add	r4, r5
 80005ca:	ea81 0603 	eor.w	r6, r1, r3
 80005ce:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 80005d2:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 80005d6:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 80005da:	bf18      	it	ne
 80005dc:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 80005e0:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80005e4:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 80005e8:	d038      	beq.n	800065c <__aeabi_dmul+0xb4>
 80005ea:	fba0 ce02 	umull	ip, lr, r0, r2
 80005ee:	f04f 0500 	mov.w	r5, #0
 80005f2:	fbe1 e502 	umlal	lr, r5, r1, r2
 80005f6:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 80005fa:	fbe0 e503 	umlal	lr, r5, r0, r3
 80005fe:	f04f 0600 	mov.w	r6, #0
 8000602:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000606:	f09c 0f00 	teq	ip, #0
 800060a:	bf18      	it	ne
 800060c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000610:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 8000614:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 8000618:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 800061c:	d204      	bcs.n	8000628 <__aeabi_dmul+0x80>
 800061e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000622:	416d      	adcs	r5, r5
 8000624:	eb46 0606 	adc.w	r6, r6, r6
 8000628:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800062c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000630:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000634:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000638:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 800063c:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 8000640:	bf88      	it	hi
 8000642:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000646:	d81e      	bhi.n	8000686 <__aeabi_dmul+0xde>
 8000648:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 800064c:	bf08      	it	eq
 800064e:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 8000652:	f150 0000 	adcs.w	r0, r0, #0
 8000656:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800065a:	bd70      	pop	{r4, r5, r6, pc}
 800065c:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 8000660:	ea46 0101 	orr.w	r1, r6, r1
 8000664:	ea40 0002 	orr.w	r0, r0, r2
 8000668:	ea81 0103 	eor.w	r1, r1, r3
 800066c:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 8000670:	bfc2      	ittt	gt
 8000672:	ebd4 050c 	rsbsgt	r5, r4, ip
 8000676:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 800067a:	bd70      	popgt	{r4, r5, r6, pc}
 800067c:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000680:	f04f 0e00 	mov.w	lr, #0
 8000684:	3c01      	subs	r4, #1
 8000686:	f300 80ab 	bgt.w	80007e0 <__aeabi_dmul+0x238>
 800068a:	f114 0f36 	cmn.w	r4, #54	; 0x36
 800068e:	bfde      	ittt	le
 8000690:	2000      	movle	r0, #0
 8000692:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 8000696:	bd70      	pople	{r4, r5, r6, pc}
 8000698:	f1c4 0400 	rsb	r4, r4, #0
 800069c:	3c20      	subs	r4, #32
 800069e:	da35      	bge.n	800070c <__aeabi_dmul+0x164>
 80006a0:	340c      	adds	r4, #12
 80006a2:	dc1b      	bgt.n	80006dc <__aeabi_dmul+0x134>
 80006a4:	f104 0414 	add.w	r4, r4, #20
 80006a8:	f1c4 0520 	rsb	r5, r4, #32
 80006ac:	fa00 f305 	lsl.w	r3, r0, r5
 80006b0:	fa20 f004 	lsr.w	r0, r0, r4
 80006b4:	fa01 f205 	lsl.w	r2, r1, r5
 80006b8:	ea40 0002 	orr.w	r0, r0, r2
 80006bc:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 80006c0:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80006c4:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 80006c8:	fa21 f604 	lsr.w	r6, r1, r4
 80006cc:	eb42 0106 	adc.w	r1, r2, r6
 80006d0:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80006d4:	bf08      	it	eq
 80006d6:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80006da:	bd70      	pop	{r4, r5, r6, pc}
 80006dc:	f1c4 040c 	rsb	r4, r4, #12
 80006e0:	f1c4 0520 	rsb	r5, r4, #32
 80006e4:	fa00 f304 	lsl.w	r3, r0, r4
 80006e8:	fa20 f005 	lsr.w	r0, r0, r5
 80006ec:	fa01 f204 	lsl.w	r2, r1, r4
 80006f0:	ea40 0002 	orr.w	r0, r0, r2
 80006f4:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80006f8:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 80006fc:	f141 0100 	adc.w	r1, r1, #0
 8000700:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000704:	bf08      	it	eq
 8000706:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800070a:	bd70      	pop	{r4, r5, r6, pc}
 800070c:	f1c4 0520 	rsb	r5, r4, #32
 8000710:	fa00 f205 	lsl.w	r2, r0, r5
 8000714:	ea4e 0e02 	orr.w	lr, lr, r2
 8000718:	fa20 f304 	lsr.w	r3, r0, r4
 800071c:	fa01 f205 	lsl.w	r2, r1, r5
 8000720:	ea43 0302 	orr.w	r3, r3, r2
 8000724:	fa21 f004 	lsr.w	r0, r1, r4
 8000728:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800072c:	fa21 f204 	lsr.w	r2, r1, r4
 8000730:	ea20 0002 	bic.w	r0, r0, r2
 8000734:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000738:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800073c:	bf08      	it	eq
 800073e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000742:	bd70      	pop	{r4, r5, r6, pc}
 8000744:	f094 0f00 	teq	r4, #0
 8000748:	d10f      	bne.n	800076a <__aeabi_dmul+0x1c2>
 800074a:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 800074e:	0040      	lsls	r0, r0, #1
 8000750:	eb41 0101 	adc.w	r1, r1, r1
 8000754:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000758:	bf08      	it	eq
 800075a:	3c01      	subeq	r4, #1
 800075c:	d0f7      	beq.n	800074e <__aeabi_dmul+0x1a6>
 800075e:	ea41 0106 	orr.w	r1, r1, r6
 8000762:	f095 0f00 	teq	r5, #0
 8000766:	bf18      	it	ne
 8000768:	4770      	bxne	lr
 800076a:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 800076e:	0052      	lsls	r2, r2, #1
 8000770:	eb43 0303 	adc.w	r3, r3, r3
 8000774:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 8000778:	bf08      	it	eq
 800077a:	3d01      	subeq	r5, #1
 800077c:	d0f7      	beq.n	800076e <__aeabi_dmul+0x1c6>
 800077e:	ea43 0306 	orr.w	r3, r3, r6
 8000782:	4770      	bx	lr
 8000784:	ea94 0f0c 	teq	r4, ip
 8000788:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 800078c:	bf18      	it	ne
 800078e:	ea95 0f0c 	teqne	r5, ip
 8000792:	d00c      	beq.n	80007ae <__aeabi_dmul+0x206>
 8000794:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000798:	bf18      	it	ne
 800079a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800079e:	d1d1      	bne.n	8000744 <__aeabi_dmul+0x19c>
 80007a0:	ea81 0103 	eor.w	r1, r1, r3
 80007a4:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80007a8:	f04f 0000 	mov.w	r0, #0
 80007ac:	bd70      	pop	{r4, r5, r6, pc}
 80007ae:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80007b2:	bf06      	itte	eq
 80007b4:	4610      	moveq	r0, r2
 80007b6:	4619      	moveq	r1, r3
 80007b8:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80007bc:	d019      	beq.n	80007f2 <__aeabi_dmul+0x24a>
 80007be:	ea94 0f0c 	teq	r4, ip
 80007c2:	d102      	bne.n	80007ca <__aeabi_dmul+0x222>
 80007c4:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 80007c8:	d113      	bne.n	80007f2 <__aeabi_dmul+0x24a>
 80007ca:	ea95 0f0c 	teq	r5, ip
 80007ce:	d105      	bne.n	80007dc <__aeabi_dmul+0x234>
 80007d0:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 80007d4:	bf1c      	itt	ne
 80007d6:	4610      	movne	r0, r2
 80007d8:	4619      	movne	r1, r3
 80007da:	d10a      	bne.n	80007f2 <__aeabi_dmul+0x24a>
 80007dc:	ea81 0103 	eor.w	r1, r1, r3
 80007e0:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80007e4:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 80007e8:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80007ec:	f04f 0000 	mov.w	r0, #0
 80007f0:	bd70      	pop	{r4, r5, r6, pc}
 80007f2:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 80007f6:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 80007fa:	bd70      	pop	{r4, r5, r6, pc}

080007fc <__aeabi_ddiv>:
 80007fc:	b570      	push	{r4, r5, r6, lr}
 80007fe:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000802:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000806:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800080a:	bf1d      	ittte	ne
 800080c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000810:	ea94 0f0c 	teqne	r4, ip
 8000814:	ea95 0f0c 	teqne	r5, ip
 8000818:	f000 f8a7 	bleq	800096a <__aeabi_ddiv+0x16e>
 800081c:	eba4 0405 	sub.w	r4, r4, r5
 8000820:	ea81 0e03 	eor.w	lr, r1, r3
 8000824:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000828:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800082c:	f000 8088 	beq.w	8000940 <__aeabi_ddiv+0x144>
 8000830:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000834:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 8000838:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 800083c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 8000840:	ea4f 2202 	mov.w	r2, r2, lsl #8
 8000844:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 8000848:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 800084c:	ea4f 2600 	mov.w	r6, r0, lsl #8
 8000850:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 8000854:	429d      	cmp	r5, r3
 8000856:	bf08      	it	eq
 8000858:	4296      	cmpeq	r6, r2
 800085a:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 800085e:	f504 7440 	add.w	r4, r4, #768	; 0x300
 8000862:	d202      	bcs.n	800086a <__aeabi_ddiv+0x6e>
 8000864:	085b      	lsrs	r3, r3, #1
 8000866:	ea4f 0232 	mov.w	r2, r2, rrx
 800086a:	1ab6      	subs	r6, r6, r2
 800086c:	eb65 0503 	sbc.w	r5, r5, r3
 8000870:	085b      	lsrs	r3, r3, #1
 8000872:	ea4f 0232 	mov.w	r2, r2, rrx
 8000876:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 800087a:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 800087e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000882:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000886:	bf22      	ittt	cs
 8000888:	1ab6      	subcs	r6, r6, r2
 800088a:	4675      	movcs	r5, lr
 800088c:	ea40 000c 	orrcs.w	r0, r0, ip
 8000890:	085b      	lsrs	r3, r3, #1
 8000892:	ea4f 0232 	mov.w	r2, r2, rrx
 8000896:	ebb6 0e02 	subs.w	lr, r6, r2
 800089a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800089e:	bf22      	ittt	cs
 80008a0:	1ab6      	subcs	r6, r6, r2
 80008a2:	4675      	movcs	r5, lr
 80008a4:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 80008a8:	085b      	lsrs	r3, r3, #1
 80008aa:	ea4f 0232 	mov.w	r2, r2, rrx
 80008ae:	ebb6 0e02 	subs.w	lr, r6, r2
 80008b2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008b6:	bf22      	ittt	cs
 80008b8:	1ab6      	subcs	r6, r6, r2
 80008ba:	4675      	movcs	r5, lr
 80008bc:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 80008c0:	085b      	lsrs	r3, r3, #1
 80008c2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008c6:	ebb6 0e02 	subs.w	lr, r6, r2
 80008ca:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008ce:	bf22      	ittt	cs
 80008d0:	1ab6      	subcs	r6, r6, r2
 80008d2:	4675      	movcs	r5, lr
 80008d4:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 80008d8:	ea55 0e06 	orrs.w	lr, r5, r6
 80008dc:	d018      	beq.n	8000910 <__aeabi_ddiv+0x114>
 80008de:	ea4f 1505 	mov.w	r5, r5, lsl #4
 80008e2:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 80008e6:	ea4f 1606 	mov.w	r6, r6, lsl #4
 80008ea:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 80008ee:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 80008f2:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 80008f6:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 80008fa:	d1c0      	bne.n	800087e <__aeabi_ddiv+0x82>
 80008fc:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000900:	d10b      	bne.n	800091a <__aeabi_ddiv+0x11e>
 8000902:	ea41 0100 	orr.w	r1, r1, r0
 8000906:	f04f 0000 	mov.w	r0, #0
 800090a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 800090e:	e7b6      	b.n	800087e <__aeabi_ddiv+0x82>
 8000910:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000914:	bf04      	itt	eq
 8000916:	4301      	orreq	r1, r0
 8000918:	2000      	moveq	r0, #0
 800091a:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 800091e:	bf88      	it	hi
 8000920:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000924:	f63f aeaf 	bhi.w	8000686 <__aeabi_dmul+0xde>
 8000928:	ebb5 0c03 	subs.w	ip, r5, r3
 800092c:	bf04      	itt	eq
 800092e:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000932:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000936:	f150 0000 	adcs.w	r0, r0, #0
 800093a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800093e:	bd70      	pop	{r4, r5, r6, pc}
 8000940:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 8000944:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 8000948:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 800094c:	bfc2      	ittt	gt
 800094e:	ebd4 050c 	rsbsgt	r5, r4, ip
 8000952:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 8000956:	bd70      	popgt	{r4, r5, r6, pc}
 8000958:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 800095c:	f04f 0e00 	mov.w	lr, #0
 8000960:	3c01      	subs	r4, #1
 8000962:	e690      	b.n	8000686 <__aeabi_dmul+0xde>
 8000964:	ea45 0e06 	orr.w	lr, r5, r6
 8000968:	e68d      	b.n	8000686 <__aeabi_dmul+0xde>
 800096a:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 800096e:	ea94 0f0c 	teq	r4, ip
 8000972:	bf08      	it	eq
 8000974:	ea95 0f0c 	teqeq	r5, ip
 8000978:	f43f af3b 	beq.w	80007f2 <__aeabi_dmul+0x24a>
 800097c:	ea94 0f0c 	teq	r4, ip
 8000980:	d10a      	bne.n	8000998 <__aeabi_ddiv+0x19c>
 8000982:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000986:	f47f af34 	bne.w	80007f2 <__aeabi_dmul+0x24a>
 800098a:	ea95 0f0c 	teq	r5, ip
 800098e:	f47f af25 	bne.w	80007dc <__aeabi_dmul+0x234>
 8000992:	4610      	mov	r0, r2
 8000994:	4619      	mov	r1, r3
 8000996:	e72c      	b.n	80007f2 <__aeabi_dmul+0x24a>
 8000998:	ea95 0f0c 	teq	r5, ip
 800099c:	d106      	bne.n	80009ac <__aeabi_ddiv+0x1b0>
 800099e:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80009a2:	f43f aefd 	beq.w	80007a0 <__aeabi_dmul+0x1f8>
 80009a6:	4610      	mov	r0, r2
 80009a8:	4619      	mov	r1, r3
 80009aa:	e722      	b.n	80007f2 <__aeabi_dmul+0x24a>
 80009ac:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80009b0:	bf18      	it	ne
 80009b2:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80009b6:	f47f aec5 	bne.w	8000744 <__aeabi_dmul+0x19c>
 80009ba:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 80009be:	f47f af0d 	bne.w	80007dc <__aeabi_dmul+0x234>
 80009c2:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 80009c6:	f47f aeeb 	bne.w	80007a0 <__aeabi_dmul+0x1f8>
 80009ca:	e712      	b.n	80007f2 <__aeabi_dmul+0x24a>

080009cc <__gedf2>:
 80009cc:	f04f 3cff 	mov.w	ip, #4294967295
 80009d0:	e006      	b.n	80009e0 <__cmpdf2+0x4>
 80009d2:	bf00      	nop

080009d4 <__ledf2>:
 80009d4:	f04f 0c01 	mov.w	ip, #1
 80009d8:	e002      	b.n	80009e0 <__cmpdf2+0x4>
 80009da:	bf00      	nop

080009dc <__cmpdf2>:
 80009dc:	f04f 0c01 	mov.w	ip, #1
 80009e0:	f84d cd04 	str.w	ip, [sp, #-4]!
 80009e4:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 80009e8:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 80009ec:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 80009f0:	bf18      	it	ne
 80009f2:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 80009f6:	d01b      	beq.n	8000a30 <__cmpdf2+0x54>
 80009f8:	b001      	add	sp, #4
 80009fa:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 80009fe:	bf0c      	ite	eq
 8000a00:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a04:	ea91 0f03 	teqne	r1, r3
 8000a08:	bf02      	ittt	eq
 8000a0a:	ea90 0f02 	teqeq	r0, r2
 8000a0e:	2000      	moveq	r0, #0
 8000a10:	4770      	bxeq	lr
 8000a12:	f110 0f00 	cmn.w	r0, #0
 8000a16:	ea91 0f03 	teq	r1, r3
 8000a1a:	bf58      	it	pl
 8000a1c:	4299      	cmppl	r1, r3
 8000a1e:	bf08      	it	eq
 8000a20:	4290      	cmpeq	r0, r2
 8000a22:	bf2c      	ite	cs
 8000a24:	17d8      	asrcs	r0, r3, #31
 8000a26:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000a2a:	f040 0001 	orr.w	r0, r0, #1
 8000a2e:	4770      	bx	lr
 8000a30:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a34:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a38:	d102      	bne.n	8000a40 <__cmpdf2+0x64>
 8000a3a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000a3e:	d107      	bne.n	8000a50 <__cmpdf2+0x74>
 8000a40:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a44:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a48:	d1d6      	bne.n	80009f8 <__cmpdf2+0x1c>
 8000a4a:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000a4e:	d0d3      	beq.n	80009f8 <__cmpdf2+0x1c>
 8000a50:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000a54:	4770      	bx	lr
 8000a56:	bf00      	nop

08000a58 <__aeabi_cdrcmple>:
 8000a58:	4684      	mov	ip, r0
 8000a5a:	4610      	mov	r0, r2
 8000a5c:	4662      	mov	r2, ip
 8000a5e:	468c      	mov	ip, r1
 8000a60:	4619      	mov	r1, r3
 8000a62:	4663      	mov	r3, ip
 8000a64:	e000      	b.n	8000a68 <__aeabi_cdcmpeq>
 8000a66:	bf00      	nop

08000a68 <__aeabi_cdcmpeq>:
 8000a68:	b501      	push	{r0, lr}
 8000a6a:	f7ff ffb7 	bl	80009dc <__cmpdf2>
 8000a6e:	2800      	cmp	r0, #0
 8000a70:	bf48      	it	mi
 8000a72:	f110 0f00 	cmnmi.w	r0, #0
 8000a76:	bd01      	pop	{r0, pc}

08000a78 <__aeabi_dcmpeq>:
 8000a78:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a7c:	f7ff fff4 	bl	8000a68 <__aeabi_cdcmpeq>
 8000a80:	bf0c      	ite	eq
 8000a82:	2001      	moveq	r0, #1
 8000a84:	2000      	movne	r0, #0
 8000a86:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a8a:	bf00      	nop

08000a8c <__aeabi_dcmplt>:
 8000a8c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a90:	f7ff ffea 	bl	8000a68 <__aeabi_cdcmpeq>
 8000a94:	bf34      	ite	cc
 8000a96:	2001      	movcc	r0, #1
 8000a98:	2000      	movcs	r0, #0
 8000a9a:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a9e:	bf00      	nop

08000aa0 <__aeabi_dcmple>:
 8000aa0:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000aa4:	f7ff ffe0 	bl	8000a68 <__aeabi_cdcmpeq>
 8000aa8:	bf94      	ite	ls
 8000aaa:	2001      	movls	r0, #1
 8000aac:	2000      	movhi	r0, #0
 8000aae:	f85d fb08 	ldr.w	pc, [sp], #8
 8000ab2:	bf00      	nop

08000ab4 <__aeabi_dcmpge>:
 8000ab4:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000ab8:	f7ff ffce 	bl	8000a58 <__aeabi_cdrcmple>
 8000abc:	bf94      	ite	ls
 8000abe:	2001      	movls	r0, #1
 8000ac0:	2000      	movhi	r0, #0
 8000ac2:	f85d fb08 	ldr.w	pc, [sp], #8
 8000ac6:	bf00      	nop

08000ac8 <__aeabi_dcmpgt>:
 8000ac8:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000acc:	f7ff ffc4 	bl	8000a58 <__aeabi_cdrcmple>
 8000ad0:	bf34      	ite	cc
 8000ad2:	2001      	movcc	r0, #1
 8000ad4:	2000      	movcs	r0, #0
 8000ad6:	f85d fb08 	ldr.w	pc, [sp], #8
 8000ada:	bf00      	nop

08000adc <__aeabi_dcmpun>:
 8000adc:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000ae0:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000ae4:	d102      	bne.n	8000aec <__aeabi_dcmpun+0x10>
 8000ae6:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000aea:	d10a      	bne.n	8000b02 <__aeabi_dcmpun+0x26>
 8000aec:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000af0:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000af4:	d102      	bne.n	8000afc <__aeabi_dcmpun+0x20>
 8000af6:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000afa:	d102      	bne.n	8000b02 <__aeabi_dcmpun+0x26>
 8000afc:	f04f 0000 	mov.w	r0, #0
 8000b00:	4770      	bx	lr
 8000b02:	f04f 0001 	mov.w	r0, #1
 8000b06:	4770      	bx	lr

08000b08 <__aeabi_d2iz>:
 8000b08:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b0c:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000b10:	d215      	bcs.n	8000b3e <__aeabi_d2iz+0x36>
 8000b12:	d511      	bpl.n	8000b38 <__aeabi_d2iz+0x30>
 8000b14:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000b18:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000b1c:	d912      	bls.n	8000b44 <__aeabi_d2iz+0x3c>
 8000b1e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b22:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000b26:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000b2a:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000b2e:	fa23 f002 	lsr.w	r0, r3, r2
 8000b32:	bf18      	it	ne
 8000b34:	4240      	negne	r0, r0
 8000b36:	4770      	bx	lr
 8000b38:	f04f 0000 	mov.w	r0, #0
 8000b3c:	4770      	bx	lr
 8000b3e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000b42:	d105      	bne.n	8000b50 <__aeabi_d2iz+0x48>
 8000b44:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8000b48:	bf08      	it	eq
 8000b4a:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8000b4e:	4770      	bx	lr
 8000b50:	f04f 0000 	mov.w	r0, #0
 8000b54:	4770      	bx	lr
 8000b56:	bf00      	nop

08000b58 <__aeabi_d2f>:
 8000b58:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b5c:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8000b60:	bf24      	itt	cs
 8000b62:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 8000b66:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 8000b6a:	d90d      	bls.n	8000b88 <__aeabi_d2f+0x30>
 8000b6c:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000b70:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000b74:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000b78:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8000b7c:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000b80:	bf08      	it	eq
 8000b82:	f020 0001 	biceq.w	r0, r0, #1
 8000b86:	4770      	bx	lr
 8000b88:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 8000b8c:	d121      	bne.n	8000bd2 <__aeabi_d2f+0x7a>
 8000b8e:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 8000b92:	bfbc      	itt	lt
 8000b94:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 8000b98:	4770      	bxlt	lr
 8000b9a:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000b9e:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000ba2:	f1c2 0218 	rsb	r2, r2, #24
 8000ba6:	f1c2 0c20 	rsb	ip, r2, #32
 8000baa:	fa10 f30c 	lsls.w	r3, r0, ip
 8000bae:	fa20 f002 	lsr.w	r0, r0, r2
 8000bb2:	bf18      	it	ne
 8000bb4:	f040 0001 	orrne.w	r0, r0, #1
 8000bb8:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000bbc:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000bc0:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000bc4:	ea40 000c 	orr.w	r0, r0, ip
 8000bc8:	fa23 f302 	lsr.w	r3, r3, r2
 8000bcc:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000bd0:	e7cc      	b.n	8000b6c <__aeabi_d2f+0x14>
 8000bd2:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000bd6:	d107      	bne.n	8000be8 <__aeabi_d2f+0x90>
 8000bd8:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000bdc:	bf1e      	ittt	ne
 8000bde:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 8000be2:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 8000be6:	4770      	bxne	lr
 8000be8:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 8000bec:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000bf0:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000bf4:	4770      	bx	lr
 8000bf6:	bf00      	nop

08000bf8 <__aeabi_frsub>:
 8000bf8:	f080 4000 	eor.w	r0, r0, #2147483648	; 0x80000000
 8000bfc:	e002      	b.n	8000c04 <__addsf3>
 8000bfe:	bf00      	nop

08000c00 <__aeabi_fsub>:
 8000c00:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000

08000c04 <__addsf3>:
 8000c04:	0042      	lsls	r2, r0, #1
 8000c06:	bf1f      	itttt	ne
 8000c08:	ea5f 0341 	movsne.w	r3, r1, lsl #1
 8000c0c:	ea92 0f03 	teqne	r2, r3
 8000c10:	ea7f 6c22 	mvnsne.w	ip, r2, asr #24
 8000c14:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8000c18:	d06a      	beq.n	8000cf0 <__addsf3+0xec>
 8000c1a:	ea4f 6212 	mov.w	r2, r2, lsr #24
 8000c1e:	ebd2 6313 	rsbs	r3, r2, r3, lsr #24
 8000c22:	bfc1      	itttt	gt
 8000c24:	18d2      	addgt	r2, r2, r3
 8000c26:	4041      	eorgt	r1, r0
 8000c28:	4048      	eorgt	r0, r1
 8000c2a:	4041      	eorgt	r1, r0
 8000c2c:	bfb8      	it	lt
 8000c2e:	425b      	neglt	r3, r3
 8000c30:	2b19      	cmp	r3, #25
 8000c32:	bf88      	it	hi
 8000c34:	4770      	bxhi	lr
 8000c36:	f010 4f00 	tst.w	r0, #2147483648	; 0x80000000
 8000c3a:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000c3e:	f020 407f 	bic.w	r0, r0, #4278190080	; 0xff000000
 8000c42:	bf18      	it	ne
 8000c44:	4240      	negne	r0, r0
 8000c46:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000c4a:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
 8000c4e:	f021 417f 	bic.w	r1, r1, #4278190080	; 0xff000000
 8000c52:	bf18      	it	ne
 8000c54:	4249      	negne	r1, r1
 8000c56:	ea92 0f03 	teq	r2, r3
 8000c5a:	d03f      	beq.n	8000cdc <__addsf3+0xd8>
 8000c5c:	f1a2 0201 	sub.w	r2, r2, #1
 8000c60:	fa41 fc03 	asr.w	ip, r1, r3
 8000c64:	eb10 000c 	adds.w	r0, r0, ip
 8000c68:	f1c3 0320 	rsb	r3, r3, #32
 8000c6c:	fa01 f103 	lsl.w	r1, r1, r3
 8000c70:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
 8000c74:	d502      	bpl.n	8000c7c <__addsf3+0x78>
 8000c76:	4249      	negs	r1, r1
 8000c78:	eb60 0040 	sbc.w	r0, r0, r0, lsl #1
 8000c7c:	f5b0 0f00 	cmp.w	r0, #8388608	; 0x800000
 8000c80:	d313      	bcc.n	8000caa <__addsf3+0xa6>
 8000c82:	f1b0 7f80 	cmp.w	r0, #16777216	; 0x1000000
 8000c86:	d306      	bcc.n	8000c96 <__addsf3+0x92>
 8000c88:	0840      	lsrs	r0, r0, #1
 8000c8a:	ea4f 0131 	mov.w	r1, r1, rrx
 8000c8e:	f102 0201 	add.w	r2, r2, #1
 8000c92:	2afe      	cmp	r2, #254	; 0xfe
 8000c94:	d251      	bcs.n	8000d3a <__addsf3+0x136>
 8000c96:	f1b1 4f00 	cmp.w	r1, #2147483648	; 0x80000000
 8000c9a:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8000c9e:	bf08      	it	eq
 8000ca0:	f020 0001 	biceq.w	r0, r0, #1
 8000ca4:	ea40 0003 	orr.w	r0, r0, r3
 8000ca8:	4770      	bx	lr
 8000caa:	0049      	lsls	r1, r1, #1
 8000cac:	eb40 0000 	adc.w	r0, r0, r0
 8000cb0:	3a01      	subs	r2, #1
 8000cb2:	bf28      	it	cs
 8000cb4:	f5b0 0f00 	cmpcs.w	r0, #8388608	; 0x800000
 8000cb8:	d2ed      	bcs.n	8000c96 <__addsf3+0x92>
 8000cba:	fab0 fc80 	clz	ip, r0
 8000cbe:	f1ac 0c08 	sub.w	ip, ip, #8
 8000cc2:	ebb2 020c 	subs.w	r2, r2, ip
 8000cc6:	fa00 f00c 	lsl.w	r0, r0, ip
 8000cca:	bfaa      	itet	ge
 8000ccc:	eb00 50c2 	addge.w	r0, r0, r2, lsl #23
 8000cd0:	4252      	neglt	r2, r2
 8000cd2:	4318      	orrge	r0, r3
 8000cd4:	bfbc      	itt	lt
 8000cd6:	40d0      	lsrlt	r0, r2
 8000cd8:	4318      	orrlt	r0, r3
 8000cda:	4770      	bx	lr
 8000cdc:	f092 0f00 	teq	r2, #0
 8000ce0:	f481 0100 	eor.w	r1, r1, #8388608	; 0x800000
 8000ce4:	bf06      	itte	eq
 8000ce6:	f480 0000 	eoreq.w	r0, r0, #8388608	; 0x800000
 8000cea:	3201      	addeq	r2, #1
 8000cec:	3b01      	subne	r3, #1
 8000cee:	e7b5      	b.n	8000c5c <__addsf3+0x58>
 8000cf0:	ea4f 0341 	mov.w	r3, r1, lsl #1
 8000cf4:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8000cf8:	bf18      	it	ne
 8000cfa:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8000cfe:	d021      	beq.n	8000d44 <__addsf3+0x140>
 8000d00:	ea92 0f03 	teq	r2, r3
 8000d04:	d004      	beq.n	8000d10 <__addsf3+0x10c>
 8000d06:	f092 0f00 	teq	r2, #0
 8000d0a:	bf08      	it	eq
 8000d0c:	4608      	moveq	r0, r1
 8000d0e:	4770      	bx	lr
 8000d10:	ea90 0f01 	teq	r0, r1
 8000d14:	bf1c      	itt	ne
 8000d16:	2000      	movne	r0, #0
 8000d18:	4770      	bxne	lr
 8000d1a:	f012 4f7f 	tst.w	r2, #4278190080	; 0xff000000
 8000d1e:	d104      	bne.n	8000d2a <__addsf3+0x126>
 8000d20:	0040      	lsls	r0, r0, #1
 8000d22:	bf28      	it	cs
 8000d24:	f040 4000 	orrcs.w	r0, r0, #2147483648	; 0x80000000
 8000d28:	4770      	bx	lr
 8000d2a:	f112 7200 	adds.w	r2, r2, #33554432	; 0x2000000
 8000d2e:	bf3c      	itt	cc
 8000d30:	f500 0000 	addcc.w	r0, r0, #8388608	; 0x800000
 8000d34:	4770      	bxcc	lr
 8000d36:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
 8000d3a:	f043 40fe 	orr.w	r0, r3, #2130706432	; 0x7f000000
 8000d3e:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000d42:	4770      	bx	lr
 8000d44:	ea7f 6222 	mvns.w	r2, r2, asr #24
 8000d48:	bf16      	itet	ne
 8000d4a:	4608      	movne	r0, r1
 8000d4c:	ea7f 6323 	mvnseq.w	r3, r3, asr #24
 8000d50:	4601      	movne	r1, r0
 8000d52:	0242      	lsls	r2, r0, #9
 8000d54:	bf06      	itte	eq
 8000d56:	ea5f 2341 	movseq.w	r3, r1, lsl #9
 8000d5a:	ea90 0f01 	teqeq	r0, r1
 8000d5e:	f440 0080 	orrne.w	r0, r0, #4194304	; 0x400000
 8000d62:	4770      	bx	lr

08000d64 <__aeabi_ui2f>:
 8000d64:	f04f 0300 	mov.w	r3, #0
 8000d68:	e004      	b.n	8000d74 <__aeabi_i2f+0x8>
 8000d6a:	bf00      	nop

08000d6c <__aeabi_i2f>:
 8000d6c:	f010 4300 	ands.w	r3, r0, #2147483648	; 0x80000000
 8000d70:	bf48      	it	mi
 8000d72:	4240      	negmi	r0, r0
 8000d74:	ea5f 0c00 	movs.w	ip, r0
 8000d78:	bf08      	it	eq
 8000d7a:	4770      	bxeq	lr
 8000d7c:	f043 4396 	orr.w	r3, r3, #1258291200	; 0x4b000000
 8000d80:	4601      	mov	r1, r0
 8000d82:	f04f 0000 	mov.w	r0, #0
 8000d86:	e01c      	b.n	8000dc2 <__aeabi_l2f+0x2a>

08000d88 <__aeabi_ul2f>:
 8000d88:	ea50 0201 	orrs.w	r2, r0, r1
 8000d8c:	bf08      	it	eq
 8000d8e:	4770      	bxeq	lr
 8000d90:	f04f 0300 	mov.w	r3, #0
 8000d94:	e00a      	b.n	8000dac <__aeabi_l2f+0x14>
 8000d96:	bf00      	nop

08000d98 <__aeabi_l2f>:
 8000d98:	ea50 0201 	orrs.w	r2, r0, r1
 8000d9c:	bf08      	it	eq
 8000d9e:	4770      	bxeq	lr
 8000da0:	f011 4300 	ands.w	r3, r1, #2147483648	; 0x80000000
 8000da4:	d502      	bpl.n	8000dac <__aeabi_l2f+0x14>
 8000da6:	4240      	negs	r0, r0
 8000da8:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000dac:	ea5f 0c01 	movs.w	ip, r1
 8000db0:	bf02      	ittt	eq
 8000db2:	4684      	moveq	ip, r0
 8000db4:	4601      	moveq	r1, r0
 8000db6:	2000      	moveq	r0, #0
 8000db8:	f043 43b6 	orr.w	r3, r3, #1526726656	; 0x5b000000
 8000dbc:	bf08      	it	eq
 8000dbe:	f1a3 5380 	subeq.w	r3, r3, #268435456	; 0x10000000
 8000dc2:	f5a3 0300 	sub.w	r3, r3, #8388608	; 0x800000
 8000dc6:	fabc f28c 	clz	r2, ip
 8000dca:	3a08      	subs	r2, #8
 8000dcc:	eba3 53c2 	sub.w	r3, r3, r2, lsl #23
 8000dd0:	db10      	blt.n	8000df4 <__aeabi_l2f+0x5c>
 8000dd2:	fa01 fc02 	lsl.w	ip, r1, r2
 8000dd6:	4463      	add	r3, ip
 8000dd8:	fa00 fc02 	lsl.w	ip, r0, r2
 8000ddc:	f1c2 0220 	rsb	r2, r2, #32
 8000de0:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 8000de4:	fa20 f202 	lsr.w	r2, r0, r2
 8000de8:	eb43 0002 	adc.w	r0, r3, r2
 8000dec:	bf08      	it	eq
 8000dee:	f020 0001 	biceq.w	r0, r0, #1
 8000df2:	4770      	bx	lr
 8000df4:	f102 0220 	add.w	r2, r2, #32
 8000df8:	fa01 fc02 	lsl.w	ip, r1, r2
 8000dfc:	f1c2 0220 	rsb	r2, r2, #32
 8000e00:	ea50 004c 	orrs.w	r0, r0, ip, lsl #1
 8000e04:	fa21 f202 	lsr.w	r2, r1, r2
 8000e08:	eb43 0002 	adc.w	r0, r3, r2
 8000e0c:	bf08      	it	eq
 8000e0e:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 8000e12:	4770      	bx	lr

08000e14 <__aeabi_fmul>:
 8000e14:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000e18:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
 8000e1c:	bf1e      	ittt	ne
 8000e1e:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
 8000e22:	ea92 0f0c 	teqne	r2, ip
 8000e26:	ea93 0f0c 	teqne	r3, ip
 8000e2a:	d06f      	beq.n	8000f0c <__aeabi_fmul+0xf8>
 8000e2c:	441a      	add	r2, r3
 8000e2e:	ea80 0c01 	eor.w	ip, r0, r1
 8000e32:	0240      	lsls	r0, r0, #9
 8000e34:	bf18      	it	ne
 8000e36:	ea5f 2141 	movsne.w	r1, r1, lsl #9
 8000e3a:	d01e      	beq.n	8000e7a <__aeabi_fmul+0x66>
 8000e3c:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
 8000e40:	ea43 1050 	orr.w	r0, r3, r0, lsr #5
 8000e44:	ea43 1151 	orr.w	r1, r3, r1, lsr #5
 8000e48:	fba0 3101 	umull	r3, r1, r0, r1
 8000e4c:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
 8000e50:	f5b1 0f00 	cmp.w	r1, #8388608	; 0x800000
 8000e54:	bf3e      	ittt	cc
 8000e56:	0049      	lslcc	r1, r1, #1
 8000e58:	ea41 71d3 	orrcc.w	r1, r1, r3, lsr #31
 8000e5c:	005b      	lslcc	r3, r3, #1
 8000e5e:	ea40 0001 	orr.w	r0, r0, r1
 8000e62:	f162 027f 	sbc.w	r2, r2, #127	; 0x7f
 8000e66:	2afd      	cmp	r2, #253	; 0xfd
 8000e68:	d81d      	bhi.n	8000ea6 <__aeabi_fmul+0x92>
 8000e6a:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 8000e6e:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8000e72:	bf08      	it	eq
 8000e74:	f020 0001 	biceq.w	r0, r0, #1
 8000e78:	4770      	bx	lr
 8000e7a:	f090 0f00 	teq	r0, #0
 8000e7e:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
 8000e82:	bf08      	it	eq
 8000e84:	0249      	lsleq	r1, r1, #9
 8000e86:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
 8000e8a:	ea40 2051 	orr.w	r0, r0, r1, lsr #9
 8000e8e:	3a7f      	subs	r2, #127	; 0x7f
 8000e90:	bfc2      	ittt	gt
 8000e92:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
 8000e96:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
 8000e9a:	4770      	bxgt	lr
 8000e9c:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000ea0:	f04f 0300 	mov.w	r3, #0
 8000ea4:	3a01      	subs	r2, #1
 8000ea6:	dc5d      	bgt.n	8000f64 <__aeabi_fmul+0x150>
 8000ea8:	f112 0f19 	cmn.w	r2, #25
 8000eac:	bfdc      	itt	le
 8000eae:	f000 4000 	andle.w	r0, r0, #2147483648	; 0x80000000
 8000eb2:	4770      	bxle	lr
 8000eb4:	f1c2 0200 	rsb	r2, r2, #0
 8000eb8:	0041      	lsls	r1, r0, #1
 8000eba:	fa21 f102 	lsr.w	r1, r1, r2
 8000ebe:	f1c2 0220 	rsb	r2, r2, #32
 8000ec2:	fa00 fc02 	lsl.w	ip, r0, r2
 8000ec6:	ea5f 0031 	movs.w	r0, r1, rrx
 8000eca:	f140 0000 	adc.w	r0, r0, #0
 8000ece:	ea53 034c 	orrs.w	r3, r3, ip, lsl #1
 8000ed2:	bf08      	it	eq
 8000ed4:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 8000ed8:	4770      	bx	lr
 8000eda:	f092 0f00 	teq	r2, #0
 8000ede:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
 8000ee2:	bf02      	ittt	eq
 8000ee4:	0040      	lsleq	r0, r0, #1
 8000ee6:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
 8000eea:	3a01      	subeq	r2, #1
 8000eec:	d0f9      	beq.n	8000ee2 <__aeabi_fmul+0xce>
 8000eee:	ea40 000c 	orr.w	r0, r0, ip
 8000ef2:	f093 0f00 	teq	r3, #0
 8000ef6:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000efa:	bf02      	ittt	eq
 8000efc:	0049      	lsleq	r1, r1, #1
 8000efe:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
 8000f02:	3b01      	subeq	r3, #1
 8000f04:	d0f9      	beq.n	8000efa <__aeabi_fmul+0xe6>
 8000f06:	ea41 010c 	orr.w	r1, r1, ip
 8000f0a:	e78f      	b.n	8000e2c <__aeabi_fmul+0x18>
 8000f0c:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
 8000f10:	ea92 0f0c 	teq	r2, ip
 8000f14:	bf18      	it	ne
 8000f16:	ea93 0f0c 	teqne	r3, ip
 8000f1a:	d00a      	beq.n	8000f32 <__aeabi_fmul+0x11e>
 8000f1c:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
 8000f20:	bf18      	it	ne
 8000f22:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
 8000f26:	d1d8      	bne.n	8000eda <__aeabi_fmul+0xc6>
 8000f28:	ea80 0001 	eor.w	r0, r0, r1
 8000f2c:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
 8000f30:	4770      	bx	lr
 8000f32:	f090 0f00 	teq	r0, #0
 8000f36:	bf17      	itett	ne
 8000f38:	f090 4f00 	teqne	r0, #2147483648	; 0x80000000
 8000f3c:	4608      	moveq	r0, r1
 8000f3e:	f091 0f00 	teqne	r1, #0
 8000f42:	f091 4f00 	teqne	r1, #2147483648	; 0x80000000
 8000f46:	d014      	beq.n	8000f72 <__aeabi_fmul+0x15e>
 8000f48:	ea92 0f0c 	teq	r2, ip
 8000f4c:	d101      	bne.n	8000f52 <__aeabi_fmul+0x13e>
 8000f4e:	0242      	lsls	r2, r0, #9
 8000f50:	d10f      	bne.n	8000f72 <__aeabi_fmul+0x15e>
 8000f52:	ea93 0f0c 	teq	r3, ip
 8000f56:	d103      	bne.n	8000f60 <__aeabi_fmul+0x14c>
 8000f58:	024b      	lsls	r3, r1, #9
 8000f5a:	bf18      	it	ne
 8000f5c:	4608      	movne	r0, r1
 8000f5e:	d108      	bne.n	8000f72 <__aeabi_fmul+0x15e>
 8000f60:	ea80 0001 	eor.w	r0, r0, r1
 8000f64:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
 8000f68:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000f6c:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000f70:	4770      	bx	lr
 8000f72:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000f76:	f440 0040 	orr.w	r0, r0, #12582912	; 0xc00000
 8000f7a:	4770      	bx	lr

08000f7c <__aeabi_fdiv>:
 8000f7c:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000f80:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
 8000f84:	bf1e      	ittt	ne
 8000f86:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
 8000f8a:	ea92 0f0c 	teqne	r2, ip
 8000f8e:	ea93 0f0c 	teqne	r3, ip
 8000f92:	d069      	beq.n	8001068 <__aeabi_fdiv+0xec>
 8000f94:	eba2 0203 	sub.w	r2, r2, r3
 8000f98:	ea80 0c01 	eor.w	ip, r0, r1
 8000f9c:	0249      	lsls	r1, r1, #9
 8000f9e:	ea4f 2040 	mov.w	r0, r0, lsl #9
 8000fa2:	d037      	beq.n	8001014 <__aeabi_fdiv+0x98>
 8000fa4:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 8000fa8:	ea43 1111 	orr.w	r1, r3, r1, lsr #4
 8000fac:	ea43 1310 	orr.w	r3, r3, r0, lsr #4
 8000fb0:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
 8000fb4:	428b      	cmp	r3, r1
 8000fb6:	bf38      	it	cc
 8000fb8:	005b      	lslcc	r3, r3, #1
 8000fba:	f142 027d 	adc.w	r2, r2, #125	; 0x7d
 8000fbe:	f44f 0c00 	mov.w	ip, #8388608	; 0x800000
 8000fc2:	428b      	cmp	r3, r1
 8000fc4:	bf24      	itt	cs
 8000fc6:	1a5b      	subcs	r3, r3, r1
 8000fc8:	ea40 000c 	orrcs.w	r0, r0, ip
 8000fcc:	ebb3 0f51 	cmp.w	r3, r1, lsr #1
 8000fd0:	bf24      	itt	cs
 8000fd2:	eba3 0351 	subcs.w	r3, r3, r1, lsr #1
 8000fd6:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000fda:	ebb3 0f91 	cmp.w	r3, r1, lsr #2
 8000fde:	bf24      	itt	cs
 8000fe0:	eba3 0391 	subcs.w	r3, r3, r1, lsr #2
 8000fe4:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000fe8:	ebb3 0fd1 	cmp.w	r3, r1, lsr #3
 8000fec:	bf24      	itt	cs
 8000fee:	eba3 03d1 	subcs.w	r3, r3, r1, lsr #3
 8000ff2:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000ff6:	011b      	lsls	r3, r3, #4
 8000ff8:	bf18      	it	ne
 8000ffa:	ea5f 1c1c 	movsne.w	ip, ip, lsr #4
 8000ffe:	d1e0      	bne.n	8000fc2 <__aeabi_fdiv+0x46>
 8001000:	2afd      	cmp	r2, #253	; 0xfd
 8001002:	f63f af50 	bhi.w	8000ea6 <__aeabi_fmul+0x92>
 8001006:	428b      	cmp	r3, r1
 8001008:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 800100c:	bf08      	it	eq
 800100e:	f020 0001 	biceq.w	r0, r0, #1
 8001012:	4770      	bx	lr
 8001014:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
 8001018:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
 800101c:	327f      	adds	r2, #127	; 0x7f
 800101e:	bfc2      	ittt	gt
 8001020:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
 8001024:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
 8001028:	4770      	bxgt	lr
 800102a:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 800102e:	f04f 0300 	mov.w	r3, #0
 8001032:	3a01      	subs	r2, #1
 8001034:	e737      	b.n	8000ea6 <__aeabi_fmul+0x92>
 8001036:	f092 0f00 	teq	r2, #0
 800103a:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
 800103e:	bf02      	ittt	eq
 8001040:	0040      	lsleq	r0, r0, #1
 8001042:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
 8001046:	3a01      	subeq	r2, #1
 8001048:	d0f9      	beq.n	800103e <__aeabi_fdiv+0xc2>
 800104a:	ea40 000c 	orr.w	r0, r0, ip
 800104e:	f093 0f00 	teq	r3, #0
 8001052:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8001056:	bf02      	ittt	eq
 8001058:	0049      	lsleq	r1, r1, #1
 800105a:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
 800105e:	3b01      	subeq	r3, #1
 8001060:	d0f9      	beq.n	8001056 <__aeabi_fdiv+0xda>
 8001062:	ea41 010c 	orr.w	r1, r1, ip
 8001066:	e795      	b.n	8000f94 <__aeabi_fdiv+0x18>
 8001068:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
 800106c:	ea92 0f0c 	teq	r2, ip
 8001070:	d108      	bne.n	8001084 <__aeabi_fdiv+0x108>
 8001072:	0242      	lsls	r2, r0, #9
 8001074:	f47f af7d 	bne.w	8000f72 <__aeabi_fmul+0x15e>
 8001078:	ea93 0f0c 	teq	r3, ip
 800107c:	f47f af70 	bne.w	8000f60 <__aeabi_fmul+0x14c>
 8001080:	4608      	mov	r0, r1
 8001082:	e776      	b.n	8000f72 <__aeabi_fmul+0x15e>
 8001084:	ea93 0f0c 	teq	r3, ip
 8001088:	d104      	bne.n	8001094 <__aeabi_fdiv+0x118>
 800108a:	024b      	lsls	r3, r1, #9
 800108c:	f43f af4c 	beq.w	8000f28 <__aeabi_fmul+0x114>
 8001090:	4608      	mov	r0, r1
 8001092:	e76e      	b.n	8000f72 <__aeabi_fmul+0x15e>
 8001094:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
 8001098:	bf18      	it	ne
 800109a:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
 800109e:	d1ca      	bne.n	8001036 <__aeabi_fdiv+0xba>
 80010a0:	f030 4200 	bics.w	r2, r0, #2147483648	; 0x80000000
 80010a4:	f47f af5c 	bne.w	8000f60 <__aeabi_fmul+0x14c>
 80010a8:	f031 4300 	bics.w	r3, r1, #2147483648	; 0x80000000
 80010ac:	f47f af3c 	bne.w	8000f28 <__aeabi_fmul+0x114>
 80010b0:	e75f      	b.n	8000f72 <__aeabi_fmul+0x15e>
 80010b2:	bf00      	nop

080010b4 <__gesf2>:
 80010b4:	f04f 3cff 	mov.w	ip, #4294967295
 80010b8:	e006      	b.n	80010c8 <__cmpsf2+0x4>
 80010ba:	bf00      	nop

080010bc <__lesf2>:
 80010bc:	f04f 0c01 	mov.w	ip, #1
 80010c0:	e002      	b.n	80010c8 <__cmpsf2+0x4>
 80010c2:	bf00      	nop

080010c4 <__cmpsf2>:
 80010c4:	f04f 0c01 	mov.w	ip, #1
 80010c8:	f84d cd04 	str.w	ip, [sp, #-4]!
 80010cc:	ea4f 0240 	mov.w	r2, r0, lsl #1
 80010d0:	ea4f 0341 	mov.w	r3, r1, lsl #1
 80010d4:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 80010d8:	bf18      	it	ne
 80010da:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 80010de:	d011      	beq.n	8001104 <__cmpsf2+0x40>
 80010e0:	b001      	add	sp, #4
 80010e2:	ea52 0c53 	orrs.w	ip, r2, r3, lsr #1
 80010e6:	bf18      	it	ne
 80010e8:	ea90 0f01 	teqne	r0, r1
 80010ec:	bf58      	it	pl
 80010ee:	ebb2 0003 	subspl.w	r0, r2, r3
 80010f2:	bf88      	it	hi
 80010f4:	17c8      	asrhi	r0, r1, #31
 80010f6:	bf38      	it	cc
 80010f8:	ea6f 70e1 	mvncc.w	r0, r1, asr #31
 80010fc:	bf18      	it	ne
 80010fe:	f040 0001 	orrne.w	r0, r0, #1
 8001102:	4770      	bx	lr
 8001104:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8001108:	d102      	bne.n	8001110 <__cmpsf2+0x4c>
 800110a:	ea5f 2c40 	movs.w	ip, r0, lsl #9
 800110e:	d105      	bne.n	800111c <__cmpsf2+0x58>
 8001110:	ea7f 6c23 	mvns.w	ip, r3, asr #24
 8001114:	d1e4      	bne.n	80010e0 <__cmpsf2+0x1c>
 8001116:	ea5f 2c41 	movs.w	ip, r1, lsl #9
 800111a:	d0e1      	beq.n	80010e0 <__cmpsf2+0x1c>
 800111c:	f85d 0b04 	ldr.w	r0, [sp], #4
 8001120:	4770      	bx	lr
 8001122:	bf00      	nop

08001124 <__aeabi_cfrcmple>:
 8001124:	4684      	mov	ip, r0
 8001126:	4608      	mov	r0, r1
 8001128:	4661      	mov	r1, ip
 800112a:	e7ff      	b.n	800112c <__aeabi_cfcmpeq>

0800112c <__aeabi_cfcmpeq>:
 800112c:	b50f      	push	{r0, r1, r2, r3, lr}
 800112e:	f7ff ffc9 	bl	80010c4 <__cmpsf2>
 8001132:	2800      	cmp	r0, #0
 8001134:	bf48      	it	mi
 8001136:	f110 0f00 	cmnmi.w	r0, #0
 800113a:	bd0f      	pop	{r0, r1, r2, r3, pc}

0800113c <__aeabi_fcmpeq>:
 800113c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8001140:	f7ff fff4 	bl	800112c <__aeabi_cfcmpeq>
 8001144:	bf0c      	ite	eq
 8001146:	2001      	moveq	r0, #1
 8001148:	2000      	movne	r0, #0
 800114a:	f85d fb08 	ldr.w	pc, [sp], #8
 800114e:	bf00      	nop

08001150 <__aeabi_fcmplt>:
 8001150:	f84d ed08 	str.w	lr, [sp, #-8]!
 8001154:	f7ff ffea 	bl	800112c <__aeabi_cfcmpeq>
 8001158:	bf34      	ite	cc
 800115a:	2001      	movcc	r0, #1
 800115c:	2000      	movcs	r0, #0
 800115e:	f85d fb08 	ldr.w	pc, [sp], #8
 8001162:	bf00      	nop

08001164 <__aeabi_fcmple>:
 8001164:	f84d ed08 	str.w	lr, [sp, #-8]!
 8001168:	f7ff ffe0 	bl	800112c <__aeabi_cfcmpeq>
 800116c:	bf94      	ite	ls
 800116e:	2001      	movls	r0, #1
 8001170:	2000      	movhi	r0, #0
 8001172:	f85d fb08 	ldr.w	pc, [sp], #8
 8001176:	bf00      	nop

08001178 <__aeabi_fcmpge>:
 8001178:	f84d ed08 	str.w	lr, [sp, #-8]!
 800117c:	f7ff ffd2 	bl	8001124 <__aeabi_cfrcmple>
 8001180:	bf94      	ite	ls
 8001182:	2001      	movls	r0, #1
 8001184:	2000      	movhi	r0, #0
 8001186:	f85d fb08 	ldr.w	pc, [sp], #8
 800118a:	bf00      	nop

0800118c <__aeabi_fcmpgt>:
 800118c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8001190:	f7ff ffc8 	bl	8001124 <__aeabi_cfrcmple>
 8001194:	bf34      	ite	cc
 8001196:	2001      	movcc	r0, #1
 8001198:	2000      	movcs	r0, #0
 800119a:	f85d fb08 	ldr.w	pc, [sp], #8
 800119e:	bf00      	nop

080011a0 <__aeabi_fcmpun>:
 80011a0:	ea4f 0240 	mov.w	r2, r0, lsl #1
 80011a4:	ea4f 0341 	mov.w	r3, r1, lsl #1
 80011a8:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 80011ac:	d102      	bne.n	80011b4 <__aeabi_fcmpun+0x14>
 80011ae:	ea5f 2c40 	movs.w	ip, r0, lsl #9
 80011b2:	d108      	bne.n	80011c6 <__aeabi_fcmpun+0x26>
 80011b4:	ea7f 6c23 	mvns.w	ip, r3, asr #24
 80011b8:	d102      	bne.n	80011c0 <__aeabi_fcmpun+0x20>
 80011ba:	ea5f 2c41 	movs.w	ip, r1, lsl #9
 80011be:	d102      	bne.n	80011c6 <__aeabi_fcmpun+0x26>
 80011c0:	f04f 0000 	mov.w	r0, #0
 80011c4:	4770      	bx	lr
 80011c6:	f04f 0001 	mov.w	r0, #1
 80011ca:	4770      	bx	lr

080011cc <__aeabi_f2iz>:
 80011cc:	ea4f 0240 	mov.w	r2, r0, lsl #1
 80011d0:	f1b2 4ffe 	cmp.w	r2, #2130706432	; 0x7f000000
 80011d4:	d30f      	bcc.n	80011f6 <__aeabi_f2iz+0x2a>
 80011d6:	f04f 039e 	mov.w	r3, #158	; 0x9e
 80011da:	ebb3 6212 	subs.w	r2, r3, r2, lsr #24
 80011de:	d90d      	bls.n	80011fc <__aeabi_f2iz+0x30>
 80011e0:	ea4f 2300 	mov.w	r3, r0, lsl #8
 80011e4:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 80011e8:	f010 4f00 	tst.w	r0, #2147483648	; 0x80000000
 80011ec:	fa23 f002 	lsr.w	r0, r3, r2
 80011f0:	bf18      	it	ne
 80011f2:	4240      	negne	r0, r0
 80011f4:	4770      	bx	lr
 80011f6:	f04f 0000 	mov.w	r0, #0
 80011fa:	4770      	bx	lr
 80011fc:	f112 0f61 	cmn.w	r2, #97	; 0x61
 8001200:	d101      	bne.n	8001206 <__aeabi_f2iz+0x3a>
 8001202:	0242      	lsls	r2, r0, #9
 8001204:	d105      	bne.n	8001212 <__aeabi_f2iz+0x46>
 8001206:	f010 4000 	ands.w	r0, r0, #2147483648	; 0x80000000
 800120a:	bf08      	it	eq
 800120c:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8001210:	4770      	bx	lr
 8001212:	f04f 0000 	mov.w	r0, #0
 8001216:	4770      	bx	lr

08001218 <__aeabi_f2uiz>:
 8001218:	0042      	lsls	r2, r0, #1
 800121a:	d20e      	bcs.n	800123a <__aeabi_f2uiz+0x22>
 800121c:	f1b2 4ffe 	cmp.w	r2, #2130706432	; 0x7f000000
 8001220:	d30b      	bcc.n	800123a <__aeabi_f2uiz+0x22>
 8001222:	f04f 039e 	mov.w	r3, #158	; 0x9e
 8001226:	ebb3 6212 	subs.w	r2, r3, r2, lsr #24
 800122a:	d409      	bmi.n	8001240 <__aeabi_f2uiz+0x28>
 800122c:	ea4f 2300 	mov.w	r3, r0, lsl #8
 8001230:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8001234:	fa23 f002 	lsr.w	r0, r3, r2
 8001238:	4770      	bx	lr
 800123a:	f04f 0000 	mov.w	r0, #0
 800123e:	4770      	bx	lr
 8001240:	f112 0f61 	cmn.w	r2, #97	; 0x61
 8001244:	d101      	bne.n	800124a <__aeabi_f2uiz+0x32>
 8001246:	0242      	lsls	r2, r0, #9
 8001248:	d102      	bne.n	8001250 <__aeabi_f2uiz+0x38>
 800124a:	f04f 30ff 	mov.w	r0, #4294967295
 800124e:	4770      	bx	lr
 8001250:	f04f 0000 	mov.w	r0, #0
 8001254:	4770      	bx	lr
 8001256:	bf00      	nop

08001258 <__aeabi_uldivmod>:
 8001258:	b953      	cbnz	r3, 8001270 <__aeabi_uldivmod+0x18>
 800125a:	b94a      	cbnz	r2, 8001270 <__aeabi_uldivmod+0x18>
 800125c:	2900      	cmp	r1, #0
 800125e:	bf08      	it	eq
 8001260:	2800      	cmpeq	r0, #0
 8001262:	bf1c      	itt	ne
 8001264:	f04f 31ff 	movne.w	r1, #4294967295
 8001268:	f04f 30ff 	movne.w	r0, #4294967295
 800126c:	f001 b8be 	b.w	80023ec <__aeabi_idiv0>
 8001270:	f1ad 0c08 	sub.w	ip, sp, #8
 8001274:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8001278:	f000 f806 	bl	8001288 <__udivmoddi4>
 800127c:	f8dd e004 	ldr.w	lr, [sp, #4]
 8001280:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8001284:	b004      	add	sp, #16
 8001286:	4770      	bx	lr

08001288 <__udivmoddi4>:
 8001288:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800128c:	9e08      	ldr	r6, [sp, #32]
 800128e:	460d      	mov	r5, r1
 8001290:	4604      	mov	r4, r0
 8001292:	468e      	mov	lr, r1
 8001294:	2b00      	cmp	r3, #0
 8001296:	f040 8082 	bne.w	800139e <__udivmoddi4+0x116>
 800129a:	428a      	cmp	r2, r1
 800129c:	4617      	mov	r7, r2
 800129e:	d946      	bls.n	800132e <__udivmoddi4+0xa6>
 80012a0:	fab2 f282 	clz	r2, r2
 80012a4:	b14a      	cbz	r2, 80012ba <__udivmoddi4+0x32>
 80012a6:	f1c2 0120 	rsb	r1, r2, #32
 80012aa:	fa05 f302 	lsl.w	r3, r5, r2
 80012ae:	fa20 f101 	lsr.w	r1, r0, r1
 80012b2:	4097      	lsls	r7, r2
 80012b4:	ea41 0e03 	orr.w	lr, r1, r3
 80012b8:	4094      	lsls	r4, r2
 80012ba:	ea4f 4817 	mov.w	r8, r7, lsr #16
 80012be:	0c23      	lsrs	r3, r4, #16
 80012c0:	fbbe fcf8 	udiv	ip, lr, r8
 80012c4:	b2b9      	uxth	r1, r7
 80012c6:	fb08 ee1c 	mls	lr, r8, ip, lr
 80012ca:	ea43 430e 	orr.w	r3, r3, lr, lsl #16
 80012ce:	fb0c f001 	mul.w	r0, ip, r1
 80012d2:	4298      	cmp	r0, r3
 80012d4:	d90a      	bls.n	80012ec <__udivmoddi4+0x64>
 80012d6:	18fb      	adds	r3, r7, r3
 80012d8:	f10c 35ff 	add.w	r5, ip, #4294967295
 80012dc:	f080 8116 	bcs.w	800150c <__udivmoddi4+0x284>
 80012e0:	4298      	cmp	r0, r3
 80012e2:	f240 8113 	bls.w	800150c <__udivmoddi4+0x284>
 80012e6:	f1ac 0c02 	sub.w	ip, ip, #2
 80012ea:	443b      	add	r3, r7
 80012ec:	1a1b      	subs	r3, r3, r0
 80012ee:	b2a4      	uxth	r4, r4
 80012f0:	fbb3 f0f8 	udiv	r0, r3, r8
 80012f4:	fb08 3310 	mls	r3, r8, r0, r3
 80012f8:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 80012fc:	fb00 f101 	mul.w	r1, r0, r1
 8001300:	42a1      	cmp	r1, r4
 8001302:	d909      	bls.n	8001318 <__udivmoddi4+0x90>
 8001304:	193c      	adds	r4, r7, r4
 8001306:	f100 33ff 	add.w	r3, r0, #4294967295
 800130a:	f080 8101 	bcs.w	8001510 <__udivmoddi4+0x288>
 800130e:	42a1      	cmp	r1, r4
 8001310:	f240 80fe 	bls.w	8001510 <__udivmoddi4+0x288>
 8001314:	3802      	subs	r0, #2
 8001316:	443c      	add	r4, r7
 8001318:	1a64      	subs	r4, r4, r1
 800131a:	ea40 400c 	orr.w	r0, r0, ip, lsl #16
 800131e:	2100      	movs	r1, #0
 8001320:	b11e      	cbz	r6, 800132a <__udivmoddi4+0xa2>
 8001322:	40d4      	lsrs	r4, r2
 8001324:	2300      	movs	r3, #0
 8001326:	e9c6 4300 	strd	r4, r3, [r6]
 800132a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800132e:	b902      	cbnz	r2, 8001332 <__udivmoddi4+0xaa>
 8001330:	deff      	udf	#255	; 0xff
 8001332:	fab2 f282 	clz	r2, r2
 8001336:	2a00      	cmp	r2, #0
 8001338:	d14f      	bne.n	80013da <__udivmoddi4+0x152>
 800133a:	1bcb      	subs	r3, r1, r7
 800133c:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8001340:	fa1f f887 	uxth.w	r8, r7
 8001344:	2101      	movs	r1, #1
 8001346:	fbb3 fcfe 	udiv	ip, r3, lr
 800134a:	0c25      	lsrs	r5, r4, #16
 800134c:	fb0e 331c 	mls	r3, lr, ip, r3
 8001350:	ea45 4503 	orr.w	r5, r5, r3, lsl #16
 8001354:	fb08 f30c 	mul.w	r3, r8, ip
 8001358:	42ab      	cmp	r3, r5
 800135a:	d907      	bls.n	800136c <__udivmoddi4+0xe4>
 800135c:	197d      	adds	r5, r7, r5
 800135e:	f10c 30ff 	add.w	r0, ip, #4294967295
 8001362:	d202      	bcs.n	800136a <__udivmoddi4+0xe2>
 8001364:	42ab      	cmp	r3, r5
 8001366:	f200 80e7 	bhi.w	8001538 <__udivmoddi4+0x2b0>
 800136a:	4684      	mov	ip, r0
 800136c:	1aed      	subs	r5, r5, r3
 800136e:	b2a3      	uxth	r3, r4
 8001370:	fbb5 f0fe 	udiv	r0, r5, lr
 8001374:	fb0e 5510 	mls	r5, lr, r0, r5
 8001378:	ea43 4405 	orr.w	r4, r3, r5, lsl #16
 800137c:	fb08 f800 	mul.w	r8, r8, r0
 8001380:	45a0      	cmp	r8, r4
 8001382:	d907      	bls.n	8001394 <__udivmoddi4+0x10c>
 8001384:	193c      	adds	r4, r7, r4
 8001386:	f100 33ff 	add.w	r3, r0, #4294967295
 800138a:	d202      	bcs.n	8001392 <__udivmoddi4+0x10a>
 800138c:	45a0      	cmp	r8, r4
 800138e:	f200 80d7 	bhi.w	8001540 <__udivmoddi4+0x2b8>
 8001392:	4618      	mov	r0, r3
 8001394:	eba4 0408 	sub.w	r4, r4, r8
 8001398:	ea40 400c 	orr.w	r0, r0, ip, lsl #16
 800139c:	e7c0      	b.n	8001320 <__udivmoddi4+0x98>
 800139e:	428b      	cmp	r3, r1
 80013a0:	d908      	bls.n	80013b4 <__udivmoddi4+0x12c>
 80013a2:	2e00      	cmp	r6, #0
 80013a4:	f000 80af 	beq.w	8001506 <__udivmoddi4+0x27e>
 80013a8:	2100      	movs	r1, #0
 80013aa:	e9c6 0500 	strd	r0, r5, [r6]
 80013ae:	4608      	mov	r0, r1
 80013b0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80013b4:	fab3 f183 	clz	r1, r3
 80013b8:	2900      	cmp	r1, #0
 80013ba:	d14b      	bne.n	8001454 <__udivmoddi4+0x1cc>
 80013bc:	42ab      	cmp	r3, r5
 80013be:	d302      	bcc.n	80013c6 <__udivmoddi4+0x13e>
 80013c0:	4282      	cmp	r2, r0
 80013c2:	f200 80b7 	bhi.w	8001534 <__udivmoddi4+0x2ac>
 80013c6:	1a84      	subs	r4, r0, r2
 80013c8:	eb65 0303 	sbc.w	r3, r5, r3
 80013cc:	2001      	movs	r0, #1
 80013ce:	469e      	mov	lr, r3
 80013d0:	2e00      	cmp	r6, #0
 80013d2:	d0aa      	beq.n	800132a <__udivmoddi4+0xa2>
 80013d4:	e9c6 4e00 	strd	r4, lr, [r6]
 80013d8:	e7a7      	b.n	800132a <__udivmoddi4+0xa2>
 80013da:	f1c2 0c20 	rsb	ip, r2, #32
 80013de:	fa01 f302 	lsl.w	r3, r1, r2
 80013e2:	4097      	lsls	r7, r2
 80013e4:	fa20 f00c 	lsr.w	r0, r0, ip
 80013e8:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 80013ec:	fa21 fc0c 	lsr.w	ip, r1, ip
 80013f0:	4318      	orrs	r0, r3
 80013f2:	fbbc f1fe 	udiv	r1, ip, lr
 80013f6:	0c05      	lsrs	r5, r0, #16
 80013f8:	fb0e cc11 	mls	ip, lr, r1, ip
 80013fc:	fa1f f887 	uxth.w	r8, r7
 8001400:	ea45 450c 	orr.w	r5, r5, ip, lsl #16
 8001404:	fb01 f308 	mul.w	r3, r1, r8
 8001408:	42ab      	cmp	r3, r5
 800140a:	fa04 f402 	lsl.w	r4, r4, r2
 800140e:	d909      	bls.n	8001424 <__udivmoddi4+0x19c>
 8001410:	197d      	adds	r5, r7, r5
 8001412:	f101 3cff 	add.w	ip, r1, #4294967295
 8001416:	f080 808b 	bcs.w	8001530 <__udivmoddi4+0x2a8>
 800141a:	42ab      	cmp	r3, r5
 800141c:	f240 8088 	bls.w	8001530 <__udivmoddi4+0x2a8>
 8001420:	3902      	subs	r1, #2
 8001422:	443d      	add	r5, r7
 8001424:	1aeb      	subs	r3, r5, r3
 8001426:	b285      	uxth	r5, r0
 8001428:	fbb3 f0fe 	udiv	r0, r3, lr
 800142c:	fb0e 3310 	mls	r3, lr, r0, r3
 8001430:	ea45 4503 	orr.w	r5, r5, r3, lsl #16
 8001434:	fb00 f308 	mul.w	r3, r0, r8
 8001438:	42ab      	cmp	r3, r5
 800143a:	d907      	bls.n	800144c <__udivmoddi4+0x1c4>
 800143c:	197d      	adds	r5, r7, r5
 800143e:	f100 3cff 	add.w	ip, r0, #4294967295
 8001442:	d271      	bcs.n	8001528 <__udivmoddi4+0x2a0>
 8001444:	42ab      	cmp	r3, r5
 8001446:	d96f      	bls.n	8001528 <__udivmoddi4+0x2a0>
 8001448:	3802      	subs	r0, #2
 800144a:	443d      	add	r5, r7
 800144c:	1aeb      	subs	r3, r5, r3
 800144e:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 8001452:	e778      	b.n	8001346 <__udivmoddi4+0xbe>
 8001454:	f1c1 0c20 	rsb	ip, r1, #32
 8001458:	408b      	lsls	r3, r1
 800145a:	fa22 f70c 	lsr.w	r7, r2, ip
 800145e:	431f      	orrs	r7, r3
 8001460:	fa20 f40c 	lsr.w	r4, r0, ip
 8001464:	fa05 f301 	lsl.w	r3, r5, r1
 8001468:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 800146c:	fa25 f50c 	lsr.w	r5, r5, ip
 8001470:	431c      	orrs	r4, r3
 8001472:	0c23      	lsrs	r3, r4, #16
 8001474:	fbb5 f9fe 	udiv	r9, r5, lr
 8001478:	fa1f f887 	uxth.w	r8, r7
 800147c:	fb0e 5519 	mls	r5, lr, r9, r5
 8001480:	ea43 4505 	orr.w	r5, r3, r5, lsl #16
 8001484:	fb09 fa08 	mul.w	sl, r9, r8
 8001488:	45aa      	cmp	sl, r5
 800148a:	fa02 f201 	lsl.w	r2, r2, r1
 800148e:	fa00 f301 	lsl.w	r3, r0, r1
 8001492:	d908      	bls.n	80014a6 <__udivmoddi4+0x21e>
 8001494:	197d      	adds	r5, r7, r5
 8001496:	f109 30ff 	add.w	r0, r9, #4294967295
 800149a:	d247      	bcs.n	800152c <__udivmoddi4+0x2a4>
 800149c:	45aa      	cmp	sl, r5
 800149e:	d945      	bls.n	800152c <__udivmoddi4+0x2a4>
 80014a0:	f1a9 0902 	sub.w	r9, r9, #2
 80014a4:	443d      	add	r5, r7
 80014a6:	eba5 050a 	sub.w	r5, r5, sl
 80014aa:	b2a4      	uxth	r4, r4
 80014ac:	fbb5 f0fe 	udiv	r0, r5, lr
 80014b0:	fb0e 5510 	mls	r5, lr, r0, r5
 80014b4:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
 80014b8:	fb00 f808 	mul.w	r8, r0, r8
 80014bc:	45a0      	cmp	r8, r4
 80014be:	d907      	bls.n	80014d0 <__udivmoddi4+0x248>
 80014c0:	193c      	adds	r4, r7, r4
 80014c2:	f100 35ff 	add.w	r5, r0, #4294967295
 80014c6:	d22d      	bcs.n	8001524 <__udivmoddi4+0x29c>
 80014c8:	45a0      	cmp	r8, r4
 80014ca:	d92b      	bls.n	8001524 <__udivmoddi4+0x29c>
 80014cc:	3802      	subs	r0, #2
 80014ce:	443c      	add	r4, r7
 80014d0:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
 80014d4:	eba4 0408 	sub.w	r4, r4, r8
 80014d8:	fba0 8902 	umull	r8, r9, r0, r2
 80014dc:	454c      	cmp	r4, r9
 80014de:	46c6      	mov	lr, r8
 80014e0:	464d      	mov	r5, r9
 80014e2:	d319      	bcc.n	8001518 <__udivmoddi4+0x290>
 80014e4:	d016      	beq.n	8001514 <__udivmoddi4+0x28c>
 80014e6:	b15e      	cbz	r6, 8001500 <__udivmoddi4+0x278>
 80014e8:	ebb3 020e 	subs.w	r2, r3, lr
 80014ec:	eb64 0405 	sbc.w	r4, r4, r5
 80014f0:	fa04 fc0c 	lsl.w	ip, r4, ip
 80014f4:	40ca      	lsrs	r2, r1
 80014f6:	ea4c 0202 	orr.w	r2, ip, r2
 80014fa:	40cc      	lsrs	r4, r1
 80014fc:	e9c6 2400 	strd	r2, r4, [r6]
 8001500:	2100      	movs	r1, #0
 8001502:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001506:	4631      	mov	r1, r6
 8001508:	4630      	mov	r0, r6
 800150a:	e70e      	b.n	800132a <__udivmoddi4+0xa2>
 800150c:	46ac      	mov	ip, r5
 800150e:	e6ed      	b.n	80012ec <__udivmoddi4+0x64>
 8001510:	4618      	mov	r0, r3
 8001512:	e701      	b.n	8001318 <__udivmoddi4+0x90>
 8001514:	4543      	cmp	r3, r8
 8001516:	d2e6      	bcs.n	80014e6 <__udivmoddi4+0x25e>
 8001518:	ebb8 0e02 	subs.w	lr, r8, r2
 800151c:	eb69 0507 	sbc.w	r5, r9, r7
 8001520:	3801      	subs	r0, #1
 8001522:	e7e0      	b.n	80014e6 <__udivmoddi4+0x25e>
 8001524:	4628      	mov	r0, r5
 8001526:	e7d3      	b.n	80014d0 <__udivmoddi4+0x248>
 8001528:	4660      	mov	r0, ip
 800152a:	e78f      	b.n	800144c <__udivmoddi4+0x1c4>
 800152c:	4681      	mov	r9, r0
 800152e:	e7ba      	b.n	80014a6 <__udivmoddi4+0x21e>
 8001530:	4661      	mov	r1, ip
 8001532:	e777      	b.n	8001424 <__udivmoddi4+0x19c>
 8001534:	4608      	mov	r0, r1
 8001536:	e74b      	b.n	80013d0 <__udivmoddi4+0x148>
 8001538:	f1ac 0c02 	sub.w	ip, ip, #2
 800153c:	443d      	add	r5, r7
 800153e:	e715      	b.n	800136c <__udivmoddi4+0xe4>
 8001540:	3802      	subs	r0, #2
 8001542:	443c      	add	r4, r7
 8001544:	e726      	b.n	8001394 <__udivmoddi4+0x10c>
 8001546:	bf00      	nop

08001548 <selfrel_offset31>:
 8001548:	6803      	ldr	r3, [r0, #0]
 800154a:	005a      	lsls	r2, r3, #1
 800154c:	bf4c      	ite	mi
 800154e:	f043 4300 	orrmi.w	r3, r3, #2147483648	; 0x80000000
 8001552:	f023 4300 	bicpl.w	r3, r3, #2147483648	; 0x80000000
 8001556:	4418      	add	r0, r3
 8001558:	4770      	bx	lr
 800155a:	bf00      	nop

0800155c <search_EIT_table>:
 800155c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8001560:	b329      	cbz	r1, 80015ae <search_EIT_table+0x52>
 8001562:	1e4f      	subs	r7, r1, #1
 8001564:	4604      	mov	r4, r0
 8001566:	4615      	mov	r5, r2
 8001568:	463e      	mov	r6, r7
 800156a:	f04f 0800 	mov.w	r8, #0
 800156e:	eb08 0106 	add.w	r1, r8, r6
 8001572:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 8001576:	1049      	asrs	r1, r1, #1
 8001578:	eb04 09c1 	add.w	r9, r4, r1, lsl #3
 800157c:	4648      	mov	r0, r9
 800157e:	f7ff ffe3 	bl	8001548 <selfrel_offset31>
 8001582:	4603      	mov	r3, r0
 8001584:	00c8      	lsls	r0, r1, #3
 8001586:	3008      	adds	r0, #8
 8001588:	428f      	cmp	r7, r1
 800158a:	4420      	add	r0, r4
 800158c:	d009      	beq.n	80015a2 <search_EIT_table+0x46>
 800158e:	42ab      	cmp	r3, r5
 8001590:	d809      	bhi.n	80015a6 <search_EIT_table+0x4a>
 8001592:	f7ff ffd9 	bl	8001548 <selfrel_offset31>
 8001596:	3801      	subs	r0, #1
 8001598:	42a8      	cmp	r0, r5
 800159a:	d20a      	bcs.n	80015b2 <search_EIT_table+0x56>
 800159c:	f101 0801 	add.w	r8, r1, #1
 80015a0:	e7e5      	b.n	800156e <search_EIT_table+0x12>
 80015a2:	42ab      	cmp	r3, r5
 80015a4:	d905      	bls.n	80015b2 <search_EIT_table+0x56>
 80015a6:	4588      	cmp	r8, r1
 80015a8:	d001      	beq.n	80015ae <search_EIT_table+0x52>
 80015aa:	1e4e      	subs	r6, r1, #1
 80015ac:	e7df      	b.n	800156e <search_EIT_table+0x12>
 80015ae:	f04f 0900 	mov.w	r9, #0
 80015b2:	4648      	mov	r0, r9
 80015b4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

080015b8 <__gnu_unwind_get_pr_addr>:
 80015b8:	2801      	cmp	r0, #1
 80015ba:	d007      	beq.n	80015cc <__gnu_unwind_get_pr_addr+0x14>
 80015bc:	2802      	cmp	r0, #2
 80015be:	d007      	beq.n	80015d0 <__gnu_unwind_get_pr_addr+0x18>
 80015c0:	4b04      	ldr	r3, [pc, #16]	; (80015d4 <__gnu_unwind_get_pr_addr+0x1c>)
 80015c2:	2800      	cmp	r0, #0
 80015c4:	bf0c      	ite	eq
 80015c6:	4618      	moveq	r0, r3
 80015c8:	2000      	movne	r0, #0
 80015ca:	4770      	bx	lr
 80015cc:	4802      	ldr	r0, [pc, #8]	; (80015d8 <__gnu_unwind_get_pr_addr+0x20>)
 80015ce:	4770      	bx	lr
 80015d0:	4802      	ldr	r0, [pc, #8]	; (80015dc <__gnu_unwind_get_pr_addr+0x24>)
 80015d2:	4770      	bx	lr
 80015d4:	08001c7d 	.word	0x08001c7d
 80015d8:	08001c81 	.word	0x08001c81
 80015dc:	08001c85 	.word	0x08001c85

080015e0 <get_eit_entry>:
 80015e0:	b530      	push	{r4, r5, lr}
 80015e2:	4b23      	ldr	r3, [pc, #140]	; (8001670 <get_eit_entry+0x90>)
 80015e4:	b083      	sub	sp, #12
 80015e6:	4604      	mov	r4, r0
 80015e8:	1e8d      	subs	r5, r1, #2
 80015ea:	b33b      	cbz	r3, 800163c <get_eit_entry+0x5c>
 80015ec:	a901      	add	r1, sp, #4
 80015ee:	4628      	mov	r0, r5
 80015f0:	f3af 8000 	nop.w
 80015f4:	b1e8      	cbz	r0, 8001632 <get_eit_entry+0x52>
 80015f6:	9901      	ldr	r1, [sp, #4]
 80015f8:	462a      	mov	r2, r5
 80015fa:	f7ff ffaf 	bl	800155c <search_EIT_table>
 80015fe:	4601      	mov	r1, r0
 8001600:	b1b8      	cbz	r0, 8001632 <get_eit_entry+0x52>
 8001602:	f7ff ffa1 	bl	8001548 <selfrel_offset31>
 8001606:	684b      	ldr	r3, [r1, #4]
 8001608:	64a0      	str	r0, [r4, #72]	; 0x48
 800160a:	2b01      	cmp	r3, #1
 800160c:	d02b      	beq.n	8001666 <get_eit_entry+0x86>
 800160e:	2b00      	cmp	r3, #0
 8001610:	f101 0004 	add.w	r0, r1, #4
 8001614:	db23      	blt.n	800165e <get_eit_entry+0x7e>
 8001616:	f7ff ff97 	bl	8001548 <selfrel_offset31>
 800161a:	2300      	movs	r3, #0
 800161c:	e9c4 0313 	strd	r0, r3, [r4, #76]	; 0x4c
 8001620:	6803      	ldr	r3, [r0, #0]
 8001622:	2b00      	cmp	r3, #0
 8001624:	db10      	blt.n	8001648 <get_eit_entry+0x68>
 8001626:	f7ff ff8f 	bl	8001548 <selfrel_offset31>
 800162a:	6120      	str	r0, [r4, #16]
 800162c:	2000      	movs	r0, #0
 800162e:	b003      	add	sp, #12
 8001630:	bd30      	pop	{r4, r5, pc}
 8001632:	2300      	movs	r3, #0
 8001634:	2009      	movs	r0, #9
 8001636:	6123      	str	r3, [r4, #16]
 8001638:	b003      	add	sp, #12
 800163a:	bd30      	pop	{r4, r5, pc}
 800163c:	490d      	ldr	r1, [pc, #52]	; (8001674 <get_eit_entry+0x94>)
 800163e:	480e      	ldr	r0, [pc, #56]	; (8001678 <get_eit_entry+0x98>)
 8001640:	1a09      	subs	r1, r1, r0
 8001642:	10c9      	asrs	r1, r1, #3
 8001644:	9101      	str	r1, [sp, #4]
 8001646:	e7d7      	b.n	80015f8 <get_eit_entry+0x18>
 8001648:	f3c3 6003 	ubfx	r0, r3, #24, #4
 800164c:	f7ff ffb4 	bl	80015b8 <__gnu_unwind_get_pr_addr>
 8001650:	2800      	cmp	r0, #0
 8001652:	6120      	str	r0, [r4, #16]
 8001654:	bf14      	ite	ne
 8001656:	2000      	movne	r0, #0
 8001658:	2009      	moveq	r0, #9
 800165a:	b003      	add	sp, #12
 800165c:	bd30      	pop	{r4, r5, pc}
 800165e:	2301      	movs	r3, #1
 8001660:	e9c4 0313 	strd	r0, r3, [r4, #76]	; 0x4c
 8001664:	e7dc      	b.n	8001620 <get_eit_entry+0x40>
 8001666:	2300      	movs	r3, #0
 8001668:	6123      	str	r3, [r4, #16]
 800166a:	2005      	movs	r0, #5
 800166c:	e7df      	b.n	800162e <get_eit_entry+0x4e>
 800166e:	bf00      	nop
 8001670:	00000000 	.word	0x00000000
 8001674:	08027184 	.word	0x08027184
 8001678:	0802708c 	.word	0x0802708c

0800167c <restore_non_core_regs>:
 800167c:	6803      	ldr	r3, [r0, #0]
 800167e:	07da      	lsls	r2, r3, #31
 8001680:	b510      	push	{r4, lr}
 8001682:	4604      	mov	r4, r0
 8001684:	d406      	bmi.n	8001694 <restore_non_core_regs+0x18>
 8001686:	079b      	lsls	r3, r3, #30
 8001688:	f100 0048 	add.w	r0, r0, #72	; 0x48
 800168c:	d509      	bpl.n	80016a2 <restore_non_core_regs+0x26>
 800168e:	f000 fc4b 	bl	8001f28 <__gnu_Unwind_Restore_VFP_D>
 8001692:	6823      	ldr	r3, [r4, #0]
 8001694:	0759      	lsls	r1, r3, #29
 8001696:	d509      	bpl.n	80016ac <restore_non_core_regs+0x30>
 8001698:	071a      	lsls	r2, r3, #28
 800169a:	d50e      	bpl.n	80016ba <restore_non_core_regs+0x3e>
 800169c:	06db      	lsls	r3, r3, #27
 800169e:	d513      	bpl.n	80016c8 <restore_non_core_regs+0x4c>
 80016a0:	bd10      	pop	{r4, pc}
 80016a2:	f000 fc39 	bl	8001f18 <__gnu_Unwind_Restore_VFP>
 80016a6:	6823      	ldr	r3, [r4, #0]
 80016a8:	0759      	lsls	r1, r3, #29
 80016aa:	d4f5      	bmi.n	8001698 <restore_non_core_regs+0x1c>
 80016ac:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 80016b0:	f000 fc42 	bl	8001f38 <__gnu_Unwind_Restore_VFP_D_16_to_31>
 80016b4:	6823      	ldr	r3, [r4, #0]
 80016b6:	071a      	lsls	r2, r3, #28
 80016b8:	d4f0      	bmi.n	800169c <restore_non_core_regs+0x20>
 80016ba:	f504 70a8 	add.w	r0, r4, #336	; 0x150
 80016be:	f000 fc43 	bl	8001f48 <__gnu_Unwind_Restore_WMMXD>
 80016c2:	6823      	ldr	r3, [r4, #0]
 80016c4:	06db      	lsls	r3, r3, #27
 80016c6:	d4eb      	bmi.n	80016a0 <restore_non_core_regs+0x24>
 80016c8:	f504 70e8 	add.w	r0, r4, #464	; 0x1d0
 80016cc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80016d0:	f000 bc7e 	b.w	8001fd0 <__gnu_Unwind_Restore_WMMXC>

080016d4 <_Unwind_decode_typeinfo_ptr.isra.0>:
 80016d4:	4603      	mov	r3, r0
 80016d6:	6800      	ldr	r0, [r0, #0]
 80016d8:	b100      	cbz	r0, 80016dc <_Unwind_decode_typeinfo_ptr.isra.0+0x8>
 80016da:	4418      	add	r0, r3
 80016dc:	4770      	bx	lr
 80016de:	bf00      	nop

080016e0 <__gnu_unwind_24bit.isra.0>:
 80016e0:	2009      	movs	r0, #9
 80016e2:	4770      	bx	lr

080016e4 <_Unwind_DebugHook>:
 80016e4:	4770      	bx	lr
 80016e6:	bf00      	nop

080016e8 <unwind_phase2>:
 80016e8:	b570      	push	{r4, r5, r6, lr}
 80016ea:	4604      	mov	r4, r0
 80016ec:	460e      	mov	r6, r1
 80016ee:	6c31      	ldr	r1, [r6, #64]	; 0x40
 80016f0:	4620      	mov	r0, r4
 80016f2:	f7ff ff75 	bl	80015e0 <get_eit_entry>
 80016f6:	4605      	mov	r5, r0
 80016f8:	b988      	cbnz	r0, 800171e <unwind_phase2+0x36>
 80016fa:	6c33      	ldr	r3, [r6, #64]	; 0x40
 80016fc:	6163      	str	r3, [r4, #20]
 80016fe:	4632      	mov	r2, r6
 8001700:	6923      	ldr	r3, [r4, #16]
 8001702:	4621      	mov	r1, r4
 8001704:	2001      	movs	r0, #1
 8001706:	4798      	blx	r3
 8001708:	2808      	cmp	r0, #8
 800170a:	d0f0      	beq.n	80016ee <unwind_phase2+0x6>
 800170c:	2807      	cmp	r0, #7
 800170e:	d106      	bne.n	800171e <unwind_phase2+0x36>
 8001710:	4628      	mov	r0, r5
 8001712:	6c31      	ldr	r1, [r6, #64]	; 0x40
 8001714:	f7ff ffe6 	bl	80016e4 <_Unwind_DebugHook>
 8001718:	1d30      	adds	r0, r6, #4
 800171a:	f000 fbf1 	bl	8001f00 <__restore_core_regs>
 800171e:	f024 f82f 	bl	8025780 <abort>
 8001722:	bf00      	nop

08001724 <unwind_phase2_forced>:
 8001724:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8001728:	1d0d      	adds	r5, r1, #4
 800172a:	4606      	mov	r6, r0
 800172c:	4614      	mov	r4, r2
 800172e:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8001730:	f5ad 7d72 	sub.w	sp, sp, #968	; 0x3c8
 8001734:	f10d 0c0c 	add.w	ip, sp, #12
 8001738:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800173c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800173e:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8001742:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8001744:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8001748:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 800174c:	ad02      	add	r5, sp, #8
 800174e:	68f7      	ldr	r7, [r6, #12]
 8001750:	f8d6 8018 	ldr.w	r8, [r6, #24]
 8001754:	e88c 000f 	stmia.w	ip, {r0, r1, r2, r3}
 8001758:	2300      	movs	r3, #0
 800175a:	602b      	str	r3, [r5, #0]
 800175c:	e021      	b.n	80017a2 <unwind_phase2_forced+0x7e>
 800175e:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 8001760:	6173      	str	r3, [r6, #20]
 8001762:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
 8001766:	4629      	mov	r1, r5
 8001768:	a87a      	add	r0, sp, #488	; 0x1e8
 800176a:	f023 ffdd 	bl	8025728 <memcpy>
 800176e:	6933      	ldr	r3, [r6, #16]
 8001770:	aa7a      	add	r2, sp, #488	; 0x1e8
 8001772:	4631      	mov	r1, r6
 8001774:	4650      	mov	r0, sl
 8001776:	4798      	blx	r3
 8001778:	9b88      	ldr	r3, [sp, #544]	; 0x220
 800177a:	e9cd 5800 	strd	r5, r8, [sp]
 800177e:	4621      	mov	r1, r4
 8001780:	646b      	str	r3, [r5, #68]	; 0x44
 8001782:	4681      	mov	r9, r0
 8001784:	4633      	mov	r3, r6
 8001786:	4632      	mov	r2, r6
 8001788:	2001      	movs	r0, #1
 800178a:	47b8      	blx	r7
 800178c:	4604      	mov	r4, r0
 800178e:	b9e8      	cbnz	r0, 80017cc <unwind_phase2_forced+0xa8>
 8001790:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
 8001794:	a97a      	add	r1, sp, #488	; 0x1e8
 8001796:	4628      	mov	r0, r5
 8001798:	f023 ffc6 	bl	8025728 <memcpy>
 800179c:	f1b9 0f08 	cmp.w	r9, #8
 80017a0:	d11b      	bne.n	80017da <unwind_phase2_forced+0xb6>
 80017a2:	6c29      	ldr	r1, [r5, #64]	; 0x40
 80017a4:	4630      	mov	r0, r6
 80017a6:	f7ff ff1b 	bl	80015e0 <get_eit_entry>
 80017aa:	3409      	adds	r4, #9
 80017ac:	fa5f fa84 	uxtb.w	sl, r4
 80017b0:	4681      	mov	r9, r0
 80017b2:	2800      	cmp	r0, #0
 80017b4:	d0d3      	beq.n	800175e <unwind_phase2_forced+0x3a>
 80017b6:	6bab      	ldr	r3, [r5, #56]	; 0x38
 80017b8:	f04a 0110 	orr.w	r1, sl, #16
 80017bc:	e9cd 5800 	strd	r5, r8, [sp]
 80017c0:	4632      	mov	r2, r6
 80017c2:	646b      	str	r3, [r5, #68]	; 0x44
 80017c4:	2001      	movs	r0, #1
 80017c6:	4633      	mov	r3, r6
 80017c8:	47b8      	blx	r7
 80017ca:	b108      	cbz	r0, 80017d0 <unwind_phase2_forced+0xac>
 80017cc:	f04f 0909 	mov.w	r9, #9
 80017d0:	4648      	mov	r0, r9
 80017d2:	f50d 7d72 	add.w	sp, sp, #968	; 0x3c8
 80017d6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80017da:	f1b9 0f07 	cmp.w	r9, #7
 80017de:	d1f5      	bne.n	80017cc <unwind_phase2_forced+0xa8>
 80017e0:	4620      	mov	r0, r4
 80017e2:	6c29      	ldr	r1, [r5, #64]	; 0x40
 80017e4:	f7ff ff7e 	bl	80016e4 <_Unwind_DebugHook>
 80017e8:	a803      	add	r0, sp, #12
 80017ea:	f000 fb89 	bl	8001f00 <__restore_core_regs>
 80017ee:	bf00      	nop

080017f0 <_Unwind_GetCFA>:
 80017f0:	6c40      	ldr	r0, [r0, #68]	; 0x44
 80017f2:	4770      	bx	lr

080017f4 <__gnu_Unwind_RaiseException>:
 80017f4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80017f6:	6bcb      	ldr	r3, [r1, #60]	; 0x3c
 80017f8:	640b      	str	r3, [r1, #64]	; 0x40
 80017fa:	1d0e      	adds	r6, r1, #4
 80017fc:	460f      	mov	r7, r1
 80017fe:	4605      	mov	r5, r0
 8001800:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
 8001802:	b0f9      	sub	sp, #484	; 0x1e4
 8001804:	ac01      	add	r4, sp, #4
 8001806:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8001808:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
 800180a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800180c:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
 800180e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8001810:	e896 000f 	ldmia.w	r6, {r0, r1, r2, r3}
 8001814:	f04f 36ff 	mov.w	r6, #4294967295
 8001818:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 800181c:	9600      	str	r6, [sp, #0]
 800181e:	e006      	b.n	800182e <__gnu_Unwind_RaiseException+0x3a>
 8001820:	692b      	ldr	r3, [r5, #16]
 8001822:	466a      	mov	r2, sp
 8001824:	4629      	mov	r1, r5
 8001826:	4798      	blx	r3
 8001828:	2808      	cmp	r0, #8
 800182a:	4604      	mov	r4, r0
 800182c:	d108      	bne.n	8001840 <__gnu_Unwind_RaiseException+0x4c>
 800182e:	9910      	ldr	r1, [sp, #64]	; 0x40
 8001830:	4628      	mov	r0, r5
 8001832:	f7ff fed5 	bl	80015e0 <get_eit_entry>
 8001836:	2800      	cmp	r0, #0
 8001838:	d0f2      	beq.n	8001820 <__gnu_Unwind_RaiseException+0x2c>
 800183a:	2009      	movs	r0, #9
 800183c:	b079      	add	sp, #484	; 0x1e4
 800183e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001840:	4668      	mov	r0, sp
 8001842:	f7ff ff1b 	bl	800167c <restore_non_core_regs>
 8001846:	2c06      	cmp	r4, #6
 8001848:	d1f7      	bne.n	800183a <__gnu_Unwind_RaiseException+0x46>
 800184a:	4639      	mov	r1, r7
 800184c:	4628      	mov	r0, r5
 800184e:	f7ff ff4b 	bl	80016e8 <unwind_phase2>
 8001852:	bf00      	nop

08001854 <__gnu_Unwind_ForcedUnwind>:
 8001854:	b430      	push	{r4, r5}
 8001856:	6bdd      	ldr	r5, [r3, #60]	; 0x3c
 8001858:	60c1      	str	r1, [r0, #12]
 800185a:	6182      	str	r2, [r0, #24]
 800185c:	4619      	mov	r1, r3
 800185e:	641d      	str	r5, [r3, #64]	; 0x40
 8001860:	2200      	movs	r2, #0
 8001862:	bc30      	pop	{r4, r5}
 8001864:	e75e      	b.n	8001724 <unwind_phase2_forced>
 8001866:	bf00      	nop

08001868 <__gnu_Unwind_Resume>:
 8001868:	b570      	push	{r4, r5, r6, lr}
 800186a:	68c6      	ldr	r6, [r0, #12]
 800186c:	6943      	ldr	r3, [r0, #20]
 800186e:	640b      	str	r3, [r1, #64]	; 0x40
 8001870:	b9ae      	cbnz	r6, 800189e <__gnu_Unwind_Resume+0x36>
 8001872:	6903      	ldr	r3, [r0, #16]
 8001874:	460a      	mov	r2, r1
 8001876:	4604      	mov	r4, r0
 8001878:	460d      	mov	r5, r1
 800187a:	4601      	mov	r1, r0
 800187c:	2002      	movs	r0, #2
 800187e:	4798      	blx	r3
 8001880:	2807      	cmp	r0, #7
 8001882:	d005      	beq.n	8001890 <__gnu_Unwind_Resume+0x28>
 8001884:	2808      	cmp	r0, #8
 8001886:	d10f      	bne.n	80018a8 <__gnu_Unwind_Resume+0x40>
 8001888:	4629      	mov	r1, r5
 800188a:	4620      	mov	r0, r4
 800188c:	f7ff ff2c 	bl	80016e8 <unwind_phase2>
 8001890:	4630      	mov	r0, r6
 8001892:	6c29      	ldr	r1, [r5, #64]	; 0x40
 8001894:	f7ff ff26 	bl	80016e4 <_Unwind_DebugHook>
 8001898:	1d28      	adds	r0, r5, #4
 800189a:	f000 fb31 	bl	8001f00 <__restore_core_regs>
 800189e:	2201      	movs	r2, #1
 80018a0:	f7ff ff40 	bl	8001724 <unwind_phase2_forced>
 80018a4:	f023 ff6c 	bl	8025780 <abort>
 80018a8:	f023 ff6a 	bl	8025780 <abort>

080018ac <__gnu_Unwind_Resume_or_Rethrow>:
 80018ac:	68c2      	ldr	r2, [r0, #12]
 80018ae:	b11a      	cbz	r2, 80018b8 <__gnu_Unwind_Resume_or_Rethrow+0xc>
 80018b0:	6bca      	ldr	r2, [r1, #60]	; 0x3c
 80018b2:	640a      	str	r2, [r1, #64]	; 0x40
 80018b4:	2200      	movs	r2, #0
 80018b6:	e735      	b.n	8001724 <unwind_phase2_forced>
 80018b8:	e79c      	b.n	80017f4 <__gnu_Unwind_RaiseException>
 80018ba:	bf00      	nop

080018bc <_Unwind_Complete>:
 80018bc:	4770      	bx	lr
 80018be:	bf00      	nop

080018c0 <_Unwind_DeleteException>:
 80018c0:	6883      	ldr	r3, [r0, #8]
 80018c2:	4601      	mov	r1, r0
 80018c4:	b10b      	cbz	r3, 80018ca <_Unwind_DeleteException+0xa>
 80018c6:	2001      	movs	r0, #1
 80018c8:	4718      	bx	r3
 80018ca:	4770      	bx	lr

080018cc <_Unwind_VRS_Get>:
 80018cc:	2901      	cmp	r1, #1
 80018ce:	d012      	beq.n	80018f6 <_Unwind_VRS_Get+0x2a>
 80018d0:	d809      	bhi.n	80018e6 <_Unwind_VRS_Get+0x1a>
 80018d2:	b973      	cbnz	r3, 80018f2 <_Unwind_VRS_Get+0x26>
 80018d4:	2a0f      	cmp	r2, #15
 80018d6:	d80c      	bhi.n	80018f2 <_Unwind_VRS_Get+0x26>
 80018d8:	eb00 0282 	add.w	r2, r0, r2, lsl #2
 80018dc:	4618      	mov	r0, r3
 80018de:	6853      	ldr	r3, [r2, #4]
 80018e0:	9a00      	ldr	r2, [sp, #0]
 80018e2:	6013      	str	r3, [r2, #0]
 80018e4:	4770      	bx	lr
 80018e6:	3903      	subs	r1, #3
 80018e8:	2901      	cmp	r1, #1
 80018ea:	bf94      	ite	ls
 80018ec:	2001      	movls	r0, #1
 80018ee:	2002      	movhi	r0, #2
 80018f0:	4770      	bx	lr
 80018f2:	2002      	movs	r0, #2
 80018f4:	4770      	bx	lr
 80018f6:	4608      	mov	r0, r1
 80018f8:	4770      	bx	lr
 80018fa:	bf00      	nop

080018fc <_Unwind_GetGR>:
 80018fc:	b510      	push	{r4, lr}
 80018fe:	b084      	sub	sp, #16
 8001900:	2300      	movs	r3, #0
 8001902:	ac03      	add	r4, sp, #12
 8001904:	460a      	mov	r2, r1
 8001906:	9400      	str	r4, [sp, #0]
 8001908:	4619      	mov	r1, r3
 800190a:	f7ff ffdf 	bl	80018cc <_Unwind_VRS_Get>
 800190e:	9803      	ldr	r0, [sp, #12]
 8001910:	b004      	add	sp, #16
 8001912:	bd10      	pop	{r4, pc}

08001914 <_Unwind_VRS_Set>:
 8001914:	2901      	cmp	r1, #1
 8001916:	d012      	beq.n	800193e <_Unwind_VRS_Set+0x2a>
 8001918:	d809      	bhi.n	800192e <_Unwind_VRS_Set+0x1a>
 800191a:	b973      	cbnz	r3, 800193a <_Unwind_VRS_Set+0x26>
 800191c:	2a0f      	cmp	r2, #15
 800191e:	d80c      	bhi.n	800193a <_Unwind_VRS_Set+0x26>
 8001920:	eb00 0082 	add.w	r0, r0, r2, lsl #2
 8001924:	9a00      	ldr	r2, [sp, #0]
 8001926:	6812      	ldr	r2, [r2, #0]
 8001928:	6042      	str	r2, [r0, #4]
 800192a:	4618      	mov	r0, r3
 800192c:	4770      	bx	lr
 800192e:	3903      	subs	r1, #3
 8001930:	2901      	cmp	r1, #1
 8001932:	bf94      	ite	ls
 8001934:	2001      	movls	r0, #1
 8001936:	2002      	movhi	r0, #2
 8001938:	4770      	bx	lr
 800193a:	2002      	movs	r0, #2
 800193c:	4770      	bx	lr
 800193e:	4608      	mov	r0, r1
 8001940:	4770      	bx	lr
 8001942:	bf00      	nop

08001944 <_Unwind_SetGR>:
 8001944:	b510      	push	{r4, lr}
 8001946:	b084      	sub	sp, #16
 8001948:	2300      	movs	r3, #0
 800194a:	ac03      	add	r4, sp, #12
 800194c:	9203      	str	r2, [sp, #12]
 800194e:	9400      	str	r4, [sp, #0]
 8001950:	460a      	mov	r2, r1
 8001952:	4619      	mov	r1, r3
 8001954:	f7ff ffde 	bl	8001914 <_Unwind_VRS_Set>
 8001958:	b004      	add	sp, #16
 800195a:	bd10      	pop	{r4, pc}

0800195c <__gnu_Unwind_Backtrace>:
 800195c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800195e:	6bd3      	ldr	r3, [r2, #60]	; 0x3c
 8001960:	6413      	str	r3, [r2, #64]	; 0x40
 8001962:	1d15      	adds	r5, r2, #4
 8001964:	468c      	mov	ip, r1
 8001966:	4606      	mov	r6, r0
 8001968:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800196a:	f5ad 7d0f 	sub.w	sp, sp, #572	; 0x23c
 800196e:	ac17      	add	r4, sp, #92	; 0x5c
 8001970:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8001972:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8001974:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8001976:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8001978:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800197a:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 800197e:	f04f 37ff 	mov.w	r7, #4294967295
 8001982:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 8001986:	4665      	mov	r5, ip
 8001988:	9716      	str	r7, [sp, #88]	; 0x58
 800198a:	e010      	b.n	80019ae <__gnu_Unwind_Backtrace+0x52>
 800198c:	f7ff ffda 	bl	8001944 <_Unwind_SetGR>
 8001990:	4629      	mov	r1, r5
 8001992:	a816      	add	r0, sp, #88	; 0x58
 8001994:	47b0      	blx	r6
 8001996:	4603      	mov	r3, r0
 8001998:	aa16      	add	r2, sp, #88	; 0x58
 800199a:	4669      	mov	r1, sp
 800199c:	2008      	movs	r0, #8
 800199e:	b983      	cbnz	r3, 80019c2 <__gnu_Unwind_Backtrace+0x66>
 80019a0:	9b04      	ldr	r3, [sp, #16]
 80019a2:	4798      	blx	r3
 80019a4:	2805      	cmp	r0, #5
 80019a6:	4604      	mov	r4, r0
 80019a8:	d00c      	beq.n	80019c4 <__gnu_Unwind_Backtrace+0x68>
 80019aa:	2809      	cmp	r0, #9
 80019ac:	d009      	beq.n	80019c2 <__gnu_Unwind_Backtrace+0x66>
 80019ae:	9926      	ldr	r1, [sp, #152]	; 0x98
 80019b0:	4668      	mov	r0, sp
 80019b2:	f7ff fe15 	bl	80015e0 <get_eit_entry>
 80019b6:	4603      	mov	r3, r0
 80019b8:	466a      	mov	r2, sp
 80019ba:	210c      	movs	r1, #12
 80019bc:	a816      	add	r0, sp, #88	; 0x58
 80019be:	2b00      	cmp	r3, #0
 80019c0:	d0e4      	beq.n	800198c <__gnu_Unwind_Backtrace+0x30>
 80019c2:	2409      	movs	r4, #9
 80019c4:	a816      	add	r0, sp, #88	; 0x58
 80019c6:	f7ff fe59 	bl	800167c <restore_non_core_regs>
 80019ca:	4620      	mov	r0, r4
 80019cc:	f50d 7d0f 	add.w	sp, sp, #572	; 0x23c
 80019d0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80019d2:	bf00      	nop

080019d4 <__gnu_unwind_pr_common>:
 80019d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80019d8:	6ccc      	ldr	r4, [r1, #76]	; 0x4c
 80019da:	b089      	sub	sp, #36	; 0x24
 80019dc:	460d      	mov	r5, r1
 80019de:	f854 1b04 	ldr.w	r1, [r4], #4
 80019e2:	9406      	str	r4, [sp, #24]
 80019e4:	4617      	mov	r7, r2
 80019e6:	f000 0803 	and.w	r8, r0, #3
 80019ea:	461e      	mov	r6, r3
 80019ec:	2b00      	cmp	r3, #0
 80019ee:	d079      	beq.n	8001ae4 <__gnu_unwind_pr_common+0x110>
 80019f0:	0c0b      	lsrs	r3, r1, #16
 80019f2:	b2da      	uxtb	r2, r3
 80019f4:	0409      	lsls	r1, r1, #16
 80019f6:	f88d 301d 	strb.w	r3, [sp, #29]
 80019fa:	2302      	movs	r3, #2
 80019fc:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 8001a00:	9105      	str	r1, [sp, #20]
 8001a02:	f88d 301c 	strb.w	r3, [sp, #28]
 8001a06:	6d2b      	ldr	r3, [r5, #80]	; 0x50
 8001a08:	f1b8 0f02 	cmp.w	r8, #2
 8001a0c:	bf08      	it	eq
 8001a0e:	6bac      	ldreq	r4, [r5, #56]	; 0x38
 8001a10:	f013 0301 	ands.w	r3, r3, #1
 8001a14:	d00c      	beq.n	8001a30 <__gnu_unwind_pr_common+0x5c>
 8001a16:	4638      	mov	r0, r7
 8001a18:	a905      	add	r1, sp, #20
 8001a1a:	f000 fb73 	bl	8002104 <__gnu_unwind_execute>
 8001a1e:	b918      	cbnz	r0, 8001a28 <__gnu_unwind_pr_common+0x54>
 8001a20:	2008      	movs	r0, #8
 8001a22:	b009      	add	sp, #36	; 0x24
 8001a24:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8001a28:	2009      	movs	r0, #9
 8001a2a:	b009      	add	sp, #36	; 0x24
 8001a2c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8001a30:	f8d4 a000 	ldr.w	sl, [r4]
 8001a34:	f1ba 0f00 	cmp.w	sl, #0
 8001a38:	d0ed      	beq.n	8001a16 <__gnu_unwind_pr_common+0x42>
 8001a3a:	9301      	str	r3, [sp, #4]
 8001a3c:	f000 0308 	and.w	r3, r0, #8
 8001a40:	9302      	str	r3, [sp, #8]
 8001a42:	2e02      	cmp	r6, #2
 8001a44:	d04a      	beq.n	8001adc <__gnu_unwind_pr_common+0x108>
 8001a46:	f8b4 a000 	ldrh.w	sl, [r4]
 8001a4a:	f8b4 9002 	ldrh.w	r9, [r4, #2]
 8001a4e:	3404      	adds	r4, #4
 8001a50:	6caa      	ldr	r2, [r5, #72]	; 0x48
 8001a52:	f029 0b01 	bic.w	fp, r9, #1
 8001a56:	210f      	movs	r1, #15
 8001a58:	4638      	mov	r0, r7
 8001a5a:	4493      	add	fp, r2
 8001a5c:	f7ff ff4e 	bl	80018fc <_Unwind_GetGR>
 8001a60:	4583      	cmp	fp, r0
 8001a62:	d839      	bhi.n	8001ad8 <__gnu_unwind_pr_common+0x104>
 8001a64:	f02a 0201 	bic.w	r2, sl, #1
 8001a68:	445a      	add	r2, fp
 8001a6a:	4282      	cmp	r2, r0
 8001a6c:	bf94      	ite	ls
 8001a6e:	2000      	movls	r0, #0
 8001a70:	2001      	movhi	r0, #1
 8001a72:	ea4f 0349 	mov.w	r3, r9, lsl #1
 8001a76:	f003 0302 	and.w	r3, r3, #2
 8001a7a:	f00a 0a01 	and.w	sl, sl, #1
 8001a7e:	ea43 030a 	orr.w	r3, r3, sl
 8001a82:	2b01      	cmp	r3, #1
 8001a84:	d049      	beq.n	8001b1a <__gnu_unwind_pr_common+0x146>
 8001a86:	2b02      	cmp	r3, #2
 8001a88:	d032      	beq.n	8001af0 <__gnu_unwind_pr_common+0x11c>
 8001a8a:	2b00      	cmp	r3, #0
 8001a8c:	d1cc      	bne.n	8001a28 <__gnu_unwind_pr_common+0x54>
 8001a8e:	f1b8 0f00 	cmp.w	r8, #0
 8001a92:	d002      	beq.n	8001a9a <__gnu_unwind_pr_common+0xc6>
 8001a94:	2800      	cmp	r0, #0
 8001a96:	f040 80cd 	bne.w	8001c34 <__gnu_unwind_pr_common+0x260>
 8001a9a:	3404      	adds	r4, #4
 8001a9c:	f8d4 a000 	ldr.w	sl, [r4]
 8001aa0:	f1ba 0f00 	cmp.w	sl, #0
 8001aa4:	d1cd      	bne.n	8001a42 <__gnu_unwind_pr_common+0x6e>
 8001aa6:	a905      	add	r1, sp, #20
 8001aa8:	4638      	mov	r0, r7
 8001aaa:	f000 fb2b 	bl	8002104 <__gnu_unwind_execute>
 8001aae:	2800      	cmp	r0, #0
 8001ab0:	d1ba      	bne.n	8001a28 <__gnu_unwind_pr_common+0x54>
 8001ab2:	9b01      	ldr	r3, [sp, #4]
 8001ab4:	2b00      	cmp	r3, #0
 8001ab6:	d0b3      	beq.n	8001a20 <__gnu_unwind_pr_common+0x4c>
 8001ab8:	210f      	movs	r1, #15
 8001aba:	4638      	mov	r0, r7
 8001abc:	f7ff ff1e 	bl	80018fc <_Unwind_GetGR>
 8001ac0:	210e      	movs	r1, #14
 8001ac2:	4602      	mov	r2, r0
 8001ac4:	4638      	mov	r0, r7
 8001ac6:	f7ff ff3d 	bl	8001944 <_Unwind_SetGR>
 8001aca:	4638      	mov	r0, r7
 8001acc:	4a6a      	ldr	r2, [pc, #424]	; (8001c78 <__gnu_unwind_pr_common+0x2a4>)
 8001ace:	210f      	movs	r1, #15
 8001ad0:	f7ff ff38 	bl	8001944 <_Unwind_SetGR>
 8001ad4:	2007      	movs	r0, #7
 8001ad6:	e7a8      	b.n	8001a2a <__gnu_unwind_pr_common+0x56>
 8001ad8:	2000      	movs	r0, #0
 8001ada:	e7ca      	b.n	8001a72 <__gnu_unwind_pr_common+0x9e>
 8001adc:	f8d4 9004 	ldr.w	r9, [r4, #4]
 8001ae0:	3408      	adds	r4, #8
 8001ae2:	e7b5      	b.n	8001a50 <__gnu_unwind_pr_common+0x7c>
 8001ae4:	0209      	lsls	r1, r1, #8
 8001ae6:	2303      	movs	r3, #3
 8001ae8:	9105      	str	r1, [sp, #20]
 8001aea:	f8ad 301c 	strh.w	r3, [sp, #28]
 8001aee:	e78a      	b.n	8001a06 <__gnu_unwind_pr_common+0x32>
 8001af0:	6823      	ldr	r3, [r4, #0]
 8001af2:	f023 4b00 	bic.w	fp, r3, #2147483648	; 0x80000000
 8001af6:	f1b8 0f00 	cmp.w	r8, #0
 8001afa:	d145      	bne.n	8001b88 <__gnu_unwind_pr_common+0x1b4>
 8001afc:	b128      	cbz	r0, 8001b0a <__gnu_unwind_pr_common+0x136>
 8001afe:	9a02      	ldr	r2, [sp, #8]
 8001b00:	2a00      	cmp	r2, #0
 8001b02:	d05c      	beq.n	8001bbe <__gnu_unwind_pr_common+0x1ea>
 8001b04:	f1bb 0f00 	cmp.w	fp, #0
 8001b08:	d074      	beq.n	8001bf4 <__gnu_unwind_pr_common+0x220>
 8001b0a:	2b00      	cmp	r3, #0
 8001b0c:	da00      	bge.n	8001b10 <__gnu_unwind_pr_common+0x13c>
 8001b0e:	3404      	adds	r4, #4
 8001b10:	f10b 0b01 	add.w	fp, fp, #1
 8001b14:	eb04 048b 	add.w	r4, r4, fp, lsl #2
 8001b18:	e7c0      	b.n	8001a9c <__gnu_unwind_pr_common+0xc8>
 8001b1a:	f1b8 0f00 	cmp.w	r8, #0
 8001b1e:	d119      	bne.n	8001b54 <__gnu_unwind_pr_common+0x180>
 8001b20:	b1b0      	cbz	r0, 8001b50 <__gnu_unwind_pr_common+0x17c>
 8001b22:	e9d4 2300 	ldrd	r2, r3, [r4]
 8001b26:	1c99      	adds	r1, r3, #2
 8001b28:	ea4f 72d2 	mov.w	r2, r2, lsr #31
 8001b2c:	f43f af7c 	beq.w	8001a28 <__gnu_unwind_pr_common+0x54>
 8001b30:	f105 0158 	add.w	r1, r5, #88	; 0x58
 8001b34:	3301      	adds	r3, #1
 8001b36:	9104      	str	r1, [sp, #16]
 8001b38:	f000 8090 	beq.w	8001c5c <__gnu_unwind_pr_common+0x288>
 8001b3c:	1d20      	adds	r0, r4, #4
 8001b3e:	f7ff fdc9 	bl	80016d4 <_Unwind_decode_typeinfo_ptr.isra.0>
 8001b42:	ab04      	add	r3, sp, #16
 8001b44:	4601      	mov	r1, r0
 8001b46:	4628      	mov	r0, r5
 8001b48:	f3af 8000 	nop.w
 8001b4c:	2800      	cmp	r0, #0
 8001b4e:	d15b      	bne.n	8001c08 <__gnu_unwind_pr_common+0x234>
 8001b50:	3408      	adds	r4, #8
 8001b52:	e7a3      	b.n	8001a9c <__gnu_unwind_pr_common+0xc8>
 8001b54:	210d      	movs	r1, #13
 8001b56:	4638      	mov	r0, r7
 8001b58:	f8d5 9020 	ldr.w	r9, [r5, #32]
 8001b5c:	f7ff fece 	bl	80018fc <_Unwind_GetGR>
 8001b60:	4581      	cmp	r9, r0
 8001b62:	d1f5      	bne.n	8001b50 <__gnu_unwind_pr_common+0x17c>
 8001b64:	6aab      	ldr	r3, [r5, #40]	; 0x28
 8001b66:	429c      	cmp	r4, r3
 8001b68:	d1f2      	bne.n	8001b50 <__gnu_unwind_pr_common+0x17c>
 8001b6a:	4620      	mov	r0, r4
 8001b6c:	f7ff fcec 	bl	8001548 <selfrel_offset31>
 8001b70:	210f      	movs	r1, #15
 8001b72:	4602      	mov	r2, r0
 8001b74:	4638      	mov	r0, r7
 8001b76:	f7ff fee5 	bl	8001944 <_Unwind_SetGR>
 8001b7a:	4638      	mov	r0, r7
 8001b7c:	462a      	mov	r2, r5
 8001b7e:	2100      	movs	r1, #0
 8001b80:	f7ff fee0 	bl	8001944 <_Unwind_SetGR>
 8001b84:	2007      	movs	r0, #7
 8001b86:	e750      	b.n	8001a2a <__gnu_unwind_pr_common+0x56>
 8001b88:	210d      	movs	r1, #13
 8001b8a:	4638      	mov	r0, r7
 8001b8c:	f8d5 9020 	ldr.w	r9, [r5, #32]
 8001b90:	f7ff feb4 	bl	80018fc <_Unwind_GetGR>
 8001b94:	4581      	cmp	r9, r0
 8001b96:	d001      	beq.n	8001b9c <__gnu_unwind_pr_common+0x1c8>
 8001b98:	6823      	ldr	r3, [r4, #0]
 8001b9a:	e7b6      	b.n	8001b0a <__gnu_unwind_pr_common+0x136>
 8001b9c:	6aab      	ldr	r3, [r5, #40]	; 0x28
 8001b9e:	429c      	cmp	r4, r3
 8001ba0:	d1fa      	bne.n	8001b98 <__gnu_unwind_pr_common+0x1c4>
 8001ba2:	2204      	movs	r2, #4
 8001ba4:	2100      	movs	r1, #0
 8001ba6:	e9c5 120b 	strd	r1, r2, [r5, #44]	; 0x2c
 8001baa:	18a3      	adds	r3, r4, r2
 8001bac:	f8c5 b028 	str.w	fp, [r5, #40]	; 0x28
 8001bb0:	636b      	str	r3, [r5, #52]	; 0x34
 8001bb2:	6823      	ldr	r3, [r4, #0]
 8001bb4:	428b      	cmp	r3, r1
 8001bb6:	db59      	blt.n	8001c6c <__gnu_unwind_pr_common+0x298>
 8001bb8:	2301      	movs	r3, #1
 8001bba:	9301      	str	r3, [sp, #4]
 8001bbc:	e7a8      	b.n	8001b10 <__gnu_unwind_pr_common+0x13c>
 8001bbe:	f105 0358 	add.w	r3, r5, #88	; 0x58
 8001bc2:	f8cd 800c 	str.w	r8, [sp, #12]
 8001bc6:	f104 0a04 	add.w	sl, r4, #4
 8001bca:	46b0      	mov	r8, r6
 8001bcc:	4691      	mov	r9, r2
 8001bce:	461e      	mov	r6, r3
 8001bd0:	e00d      	b.n	8001bee <__gnu_unwind_pr_common+0x21a>
 8001bd2:	9604      	str	r6, [sp, #16]
 8001bd4:	f7ff fd7e 	bl	80016d4 <_Unwind_decode_typeinfo_ptr.isra.0>
 8001bd8:	ab04      	add	r3, sp, #16
 8001bda:	4601      	mov	r1, r0
 8001bdc:	2200      	movs	r2, #0
 8001bde:	4628      	mov	r0, r5
 8001be0:	f3af 8000 	nop.w
 8001be4:	f109 0901 	add.w	r9, r9, #1
 8001be8:	f10a 0a04 	add.w	sl, sl, #4
 8001bec:	b9e8      	cbnz	r0, 8001c2a <__gnu_unwind_pr_common+0x256>
 8001bee:	45d9      	cmp	r9, fp
 8001bf0:	4650      	mov	r0, sl
 8001bf2:	d1ee      	bne.n	8001bd2 <__gnu_unwind_pr_common+0x1fe>
 8001bf4:	4638      	mov	r0, r7
 8001bf6:	210d      	movs	r1, #13
 8001bf8:	f7ff fe80 	bl	80018fc <_Unwind_GetGR>
 8001bfc:	9b04      	ldr	r3, [sp, #16]
 8001bfe:	6228      	str	r0, [r5, #32]
 8001c00:	e9c5 3409 	strd	r3, r4, [r5, #36]	; 0x24
 8001c04:	2006      	movs	r0, #6
 8001c06:	e710      	b.n	8001a2a <__gnu_unwind_pr_common+0x56>
 8001c08:	4681      	mov	r9, r0
 8001c0a:	210d      	movs	r1, #13
 8001c0c:	4638      	mov	r0, r7
 8001c0e:	f7ff fe75 	bl	80018fc <_Unwind_GetGR>
 8001c12:	f1b9 0f02 	cmp.w	r9, #2
 8001c16:	6228      	str	r0, [r5, #32]
 8001c18:	d125      	bne.n	8001c66 <__gnu_unwind_pr_common+0x292>
 8001c1a:	462b      	mov	r3, r5
 8001c1c:	9a04      	ldr	r2, [sp, #16]
 8001c1e:	f843 2f2c 	str.w	r2, [r3, #44]!
 8001c22:	626b      	str	r3, [r5, #36]	; 0x24
 8001c24:	62ac      	str	r4, [r5, #40]	; 0x28
 8001c26:	2006      	movs	r0, #6
 8001c28:	e6ff      	b.n	8001a2a <__gnu_unwind_pr_common+0x56>
 8001c2a:	4646      	mov	r6, r8
 8001c2c:	6823      	ldr	r3, [r4, #0]
 8001c2e:	f8dd 800c 	ldr.w	r8, [sp, #12]
 8001c32:	e76a      	b.n	8001b0a <__gnu_unwind_pr_common+0x136>
 8001c34:	4620      	mov	r0, r4
 8001c36:	f7ff fc87 	bl	8001548 <selfrel_offset31>
 8001c3a:	3404      	adds	r4, #4
 8001c3c:	4602      	mov	r2, r0
 8001c3e:	63ac      	str	r4, [r5, #56]	; 0x38
 8001c40:	4628      	mov	r0, r5
 8001c42:	4614      	mov	r4, r2
 8001c44:	f3af 8000 	nop.w
 8001c48:	2800      	cmp	r0, #0
 8001c4a:	f43f aeed 	beq.w	8001a28 <__gnu_unwind_pr_common+0x54>
 8001c4e:	4638      	mov	r0, r7
 8001c50:	4622      	mov	r2, r4
 8001c52:	210f      	movs	r1, #15
 8001c54:	f7ff fe76 	bl	8001944 <_Unwind_SetGR>
 8001c58:	2007      	movs	r0, #7
 8001c5a:	e6e6      	b.n	8001a2a <__gnu_unwind_pr_common+0x56>
 8001c5c:	4638      	mov	r0, r7
 8001c5e:	210d      	movs	r1, #13
 8001c60:	f7ff fe4c 	bl	80018fc <_Unwind_GetGR>
 8001c64:	6228      	str	r0, [r5, #32]
 8001c66:	9b04      	ldr	r3, [sp, #16]
 8001c68:	626b      	str	r3, [r5, #36]	; 0x24
 8001c6a:	e7db      	b.n	8001c24 <__gnu_unwind_pr_common+0x250>
 8001c6c:	f10b 0001 	add.w	r0, fp, #1
 8001c70:	eb04 0080 	add.w	r0, r4, r0, lsl #2
 8001c74:	e77a      	b.n	8001b6c <__gnu_unwind_pr_common+0x198>
 8001c76:	bf00      	nop
 8001c78:	00000000 	.word	0x00000000

08001c7c <__aeabi_unwind_cpp_pr0>:
 8001c7c:	2300      	movs	r3, #0
 8001c7e:	e6a9      	b.n	80019d4 <__gnu_unwind_pr_common>

08001c80 <__aeabi_unwind_cpp_pr1>:
 8001c80:	2301      	movs	r3, #1
 8001c82:	e6a7      	b.n	80019d4 <__gnu_unwind_pr_common>

08001c84 <__aeabi_unwind_cpp_pr2>:
 8001c84:	2302      	movs	r3, #2
 8001c86:	e6a5      	b.n	80019d4 <__gnu_unwind_pr_common>

08001c88 <_Unwind_VRS_Pop>:
 8001c88:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8001c8c:	4606      	mov	r6, r0
 8001c8e:	b0c3      	sub	sp, #268	; 0x10c
 8001c90:	4615      	mov	r5, r2
 8001c92:	461c      	mov	r4, r3
 8001c94:	2904      	cmp	r1, #4
 8001c96:	f200 80b9 	bhi.w	8001e0c <_Unwind_VRS_Pop+0x184>
 8001c9a:	e8df f001 	tbb	[pc, r1]
 8001c9e:	539a      	.short	0x539a
 8001ca0:	29b7      	.short	0x29b7
 8001ca2:	03          	.byte	0x03
 8001ca3:	00          	.byte	0x00
 8001ca4:	2c00      	cmp	r4, #0
 8001ca6:	f040 80b1 	bne.w	8001e0c <_Unwind_VRS_Pop+0x184>
 8001caa:	2a10      	cmp	r2, #16
 8001cac:	f200 80ae 	bhi.w	8001e0c <_Unwind_VRS_Pop+0x184>
 8001cb0:	6803      	ldr	r3, [r0, #0]
 8001cb2:	06d8      	lsls	r0, r3, #27
 8001cb4:	f100 80f3 	bmi.w	8001e9e <_Unwind_VRS_Pop+0x216>
 8001cb8:	af20      	add	r7, sp, #128	; 0x80
 8001cba:	4638      	mov	r0, r7
 8001cbc:	f000 f992 	bl	8001fe4 <__gnu_Unwind_Save_WMMXC>
 8001cc0:	6bb0      	ldr	r0, [r6, #56]	; 0x38
 8001cc2:	2300      	movs	r3, #0
 8001cc4:	2401      	movs	r4, #1
 8001cc6:	fa04 f203 	lsl.w	r2, r4, r3
 8001cca:	422a      	tst	r2, r5
 8001ccc:	4601      	mov	r1, r0
 8001cce:	d004      	beq.n	8001cda <_Unwind_VRS_Pop+0x52>
 8001cd0:	f851 2b04 	ldr.w	r2, [r1], #4
 8001cd4:	f847 2023 	str.w	r2, [r7, r3, lsl #2]
 8001cd8:	4608      	mov	r0, r1
 8001cda:	3301      	adds	r3, #1
 8001cdc:	2b04      	cmp	r3, #4
 8001cde:	d1f2      	bne.n	8001cc6 <_Unwind_VRS_Pop+0x3e>
 8001ce0:	63b0      	str	r0, [r6, #56]	; 0x38
 8001ce2:	4638      	mov	r0, r7
 8001ce4:	f000 f974 	bl	8001fd0 <__gnu_Unwind_Restore_WMMXC>
 8001ce8:	2000      	movs	r0, #0
 8001cea:	b043      	add	sp, #268	; 0x10c
 8001cec:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8001cf0:	2c03      	cmp	r4, #3
 8001cf2:	f040 808b 	bne.w	8001e0c <_Unwind_VRS_Pop+0x184>
 8001cf6:	b294      	uxth	r4, r2
 8001cf8:	eb04 4312 	add.w	r3, r4, r2, lsr #16
 8001cfc:	2b10      	cmp	r3, #16
 8001cfe:	ea4f 4512 	mov.w	r5, r2, lsr #16
 8001d02:	f200 8083 	bhi.w	8001e0c <_Unwind_VRS_Pop+0x184>
 8001d06:	6803      	ldr	r3, [r0, #0]
 8001d08:	071f      	lsls	r7, r3, #28
 8001d0a:	f100 80d0 	bmi.w	8001eae <_Unwind_VRS_Pop+0x226>
 8001d0e:	af20      	add	r7, sp, #128	; 0x80
 8001d10:	4638      	mov	r0, r7
 8001d12:	f000 f93b 	bl	8001f8c <__gnu_Unwind_Save_WMMXD>
 8001d16:	eb07 01c5 	add.w	r1, r7, r5, lsl #3
 8001d1a:	6bb5      	ldr	r5, [r6, #56]	; 0x38
 8001d1c:	b154      	cbz	r4, 8001d34 <_Unwind_VRS_Pop+0xac>
 8001d1e:	460b      	mov	r3, r1
 8001d20:	1ae8      	subs	r0, r5, r3
 8001d22:	eb01 01c4 	add.w	r1, r1, r4, lsl #3
 8001d26:	00e4      	lsls	r4, r4, #3
 8001d28:	581a      	ldr	r2, [r3, r0]
 8001d2a:	f843 2b04 	str.w	r2, [r3], #4
 8001d2e:	428b      	cmp	r3, r1
 8001d30:	d1fa      	bne.n	8001d28 <_Unwind_VRS_Pop+0xa0>
 8001d32:	4425      	add	r5, r4
 8001d34:	4638      	mov	r0, r7
 8001d36:	63b5      	str	r5, [r6, #56]	; 0x38
 8001d38:	f000 f906 	bl	8001f48 <__gnu_Unwind_Restore_WMMXD>
 8001d3c:	2000      	movs	r0, #0
 8001d3e:	b043      	add	sp, #268	; 0x10c
 8001d40:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8001d44:	2c01      	cmp	r4, #1
 8001d46:	ea4f 4812 	mov.w	r8, r2, lsr #16
 8001d4a:	b295      	uxth	r5, r2
 8001d4c:	d05a      	beq.n	8001e04 <_Unwind_VRS_Pop+0x17c>
 8001d4e:	2c05      	cmp	r4, #5
 8001d50:	d15c      	bne.n	8001e0c <_Unwind_VRS_Pop+0x184>
 8001d52:	eb08 0905 	add.w	r9, r8, r5
 8001d56:	f1b9 0f20 	cmp.w	r9, #32
 8001d5a:	d857      	bhi.n	8001e0c <_Unwind_VRS_Pop+0x184>
 8001d5c:	f1b8 0f0f 	cmp.w	r8, #15
 8001d60:	d977      	bls.n	8001e52 <_Unwind_VRS_Pop+0x1ca>
 8001d62:	46a9      	mov	r9, r5
 8001d64:	2d00      	cmp	r5, #0
 8001d66:	f040 8088 	bne.w	8001e7a <_Unwind_VRS_Pop+0x1f2>
 8001d6a:	6bb3      	ldr	r3, [r6, #56]	; 0x38
 8001d6c:	b36d      	cbz	r5, 8001dca <_Unwind_VRS_Pop+0x142>
 8001d6e:	af20      	add	r7, sp, #128	; 0x80
 8001d70:	f04f 0900 	mov.w	r9, #0
 8001d74:	eb07 07c8 	add.w	r7, r7, r8, lsl #3
 8001d78:	3f04      	subs	r7, #4
 8001d7a:	eb03 05c5 	add.w	r5, r3, r5, lsl #3
 8001d7e:	f853 1b04 	ldr.w	r1, [r3], #4
 8001d82:	f847 1f04 	str.w	r1, [r7, #4]!
 8001d86:	42ab      	cmp	r3, r5
 8001d88:	d1f9      	bne.n	8001d7e <_Unwind_VRS_Pop+0xf6>
 8001d8a:	f1b9 0f00 	cmp.w	r9, #0
 8001d8e:	d00f      	beq.n	8001db0 <_Unwind_VRS_Pop+0x128>
 8001d90:	466f      	mov	r7, sp
 8001d92:	4641      	mov	r1, r8
 8001d94:	2910      	cmp	r1, #16
 8001d96:	bf38      	it	cc
 8001d98:	2110      	movcc	r1, #16
 8001d9a:	eb07 01c1 	add.w	r1, r7, r1, lsl #3
 8001d9e:	3984      	subs	r1, #132	; 0x84
 8001da0:	eb03 05c9 	add.w	r5, r3, r9, lsl #3
 8001da4:	f853 0b04 	ldr.w	r0, [r3], #4
 8001da8:	f841 0f04 	str.w	r0, [r1, #4]!
 8001dac:	42ab      	cmp	r3, r5
 8001dae:	d1f9      	bne.n	8001da4 <_Unwind_VRS_Pop+0x11c>
 8001db0:	2c01      	cmp	r4, #1
 8001db2:	f000 8084 	beq.w	8001ebe <_Unwind_VRS_Pop+0x236>
 8001db6:	f1b8 0f0f 	cmp.w	r8, #15
 8001dba:	63b5      	str	r5, [r6, #56]	; 0x38
 8001dbc:	d945      	bls.n	8001e4a <_Unwind_VRS_Pop+0x1c2>
 8001dbe:	f1b9 0f00 	cmp.w	r9, #0
 8001dc2:	d002      	beq.n	8001dca <_Unwind_VRS_Pop+0x142>
 8001dc4:	4668      	mov	r0, sp
 8001dc6:	f000 f8b7 	bl	8001f38 <__gnu_Unwind_Restore_VFP_D_16_to_31>
 8001dca:	2000      	movs	r0, #0
 8001dcc:	b043      	add	sp, #268	; 0x10c
 8001dce:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8001dd2:	b9dc      	cbnz	r4, 8001e0c <_Unwind_VRS_Pop+0x184>
 8001dd4:	6b87      	ldr	r7, [r0, #56]	; 0x38
 8001dd6:	4623      	mov	r3, r4
 8001dd8:	2001      	movs	r0, #1
 8001dda:	b294      	uxth	r4, r2
 8001ddc:	f106 0c04 	add.w	ip, r6, #4
 8001de0:	fa00 f203 	lsl.w	r2, r0, r3
 8001de4:	4222      	tst	r2, r4
 8001de6:	4639      	mov	r1, r7
 8001de8:	d004      	beq.n	8001df4 <_Unwind_VRS_Pop+0x16c>
 8001dea:	f851 2b04 	ldr.w	r2, [r1], #4
 8001dee:	f84c 2023 	str.w	r2, [ip, r3, lsl #2]
 8001df2:	460f      	mov	r7, r1
 8001df4:	3301      	adds	r3, #1
 8001df6:	2b10      	cmp	r3, #16
 8001df8:	d1f2      	bne.n	8001de0 <_Unwind_VRS_Pop+0x158>
 8001dfa:	f415 5000 	ands.w	r0, r5, #8192	; 0x2000
 8001dfe:	d1e4      	bne.n	8001dca <_Unwind_VRS_Pop+0x142>
 8001e00:	63b7      	str	r7, [r6, #56]	; 0x38
 8001e02:	e004      	b.n	8001e0e <_Unwind_VRS_Pop+0x186>
 8001e04:	eb08 0305 	add.w	r3, r8, r5
 8001e08:	2b10      	cmp	r3, #16
 8001e0a:	d903      	bls.n	8001e14 <_Unwind_VRS_Pop+0x18c>
 8001e0c:	2002      	movs	r0, #2
 8001e0e:	b043      	add	sp, #268	; 0x10c
 8001e10:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8001e14:	f1b8 0f0f 	cmp.w	r8, #15
 8001e18:	d8f8      	bhi.n	8001e0c <_Unwind_VRS_Pop+0x184>
 8001e1a:	6833      	ldr	r3, [r6, #0]
 8001e1c:	07da      	lsls	r2, r3, #31
 8001e1e:	d506      	bpl.n	8001e2e <_Unwind_VRS_Pop+0x1a6>
 8001e20:	4630      	mov	r0, r6
 8001e22:	f023 0303 	bic.w	r3, r3, #3
 8001e26:	f840 3b48 	str.w	r3, [r0], #72
 8001e2a:	f000 f879 	bl	8001f20 <__gnu_Unwind_Save_VFP>
 8001e2e:	af20      	add	r7, sp, #128	; 0x80
 8001e30:	4638      	mov	r0, r7
 8001e32:	f000 f875 	bl	8001f20 <__gnu_Unwind_Save_VFP>
 8001e36:	6bb3      	ldr	r3, [r6, #56]	; 0x38
 8001e38:	2d00      	cmp	r5, #0
 8001e3a:	d199      	bne.n	8001d70 <_Unwind_VRS_Pop+0xe8>
 8001e3c:	461d      	mov	r5, r3
 8001e3e:	3504      	adds	r5, #4
 8001e40:	63b5      	str	r5, [r6, #56]	; 0x38
 8001e42:	4638      	mov	r0, r7
 8001e44:	f000 f868 	bl	8001f18 <__gnu_Unwind_Restore_VFP>
 8001e48:	e7bf      	b.n	8001dca <_Unwind_VRS_Pop+0x142>
 8001e4a:	a820      	add	r0, sp, #128	; 0x80
 8001e4c:	f000 f86c 	bl	8001f28 <__gnu_Unwind_Restore_VFP_D>
 8001e50:	e7b5      	b.n	8001dbe <_Unwind_VRS_Pop+0x136>
 8001e52:	f1b9 0f10 	cmp.w	r9, #16
 8001e56:	d940      	bls.n	8001eda <_Unwind_VRS_Pop+0x252>
 8001e58:	f1a9 0910 	sub.w	r9, r9, #16
 8001e5c:	6833      	ldr	r3, [r6, #0]
 8001e5e:	07d9      	lsls	r1, r3, #31
 8001e60:	d508      	bpl.n	8001e74 <_Unwind_VRS_Pop+0x1ec>
 8001e62:	f023 0301 	bic.w	r3, r3, #1
 8001e66:	4630      	mov	r0, r6
 8001e68:	f043 0302 	orr.w	r3, r3, #2
 8001e6c:	f840 3b48 	str.w	r3, [r0], #72
 8001e70:	f000 f85e 	bl	8001f30 <__gnu_Unwind_Save_VFP_D>
 8001e74:	f1b9 0f00 	cmp.w	r9, #0
 8001e78:	d032      	beq.n	8001ee0 <_Unwind_VRS_Pop+0x258>
 8001e7a:	6833      	ldr	r3, [r6, #0]
 8001e7c:	075a      	lsls	r2, r3, #29
 8001e7e:	d420      	bmi.n	8001ec2 <_Unwind_VRS_Pop+0x23a>
 8001e80:	f1b8 0f0f 	cmp.w	r8, #15
 8001e84:	d925      	bls.n	8001ed2 <_Unwind_VRS_Pop+0x24a>
 8001e86:	466f      	mov	r7, sp
 8001e88:	4638      	mov	r0, r7
 8001e8a:	f1c8 0510 	rsb	r5, r8, #16
 8001e8e:	f000 f857 	bl	8001f40 <__gnu_Unwind_Save_VFP_D_16_to_31>
 8001e92:	2d00      	cmp	r5, #0
 8001e94:	6bb3      	ldr	r3, [r6, #56]	; 0x38
 8001e96:	f77f af7c 	ble.w	8001d92 <_Unwind_VRS_Pop+0x10a>
 8001e9a:	af20      	add	r7, sp, #128	; 0x80
 8001e9c:	e76a      	b.n	8001d74 <_Unwind_VRS_Pop+0xec>
 8001e9e:	f023 0310 	bic.w	r3, r3, #16
 8001ea2:	6033      	str	r3, [r6, #0]
 8001ea4:	f506 70e8 	add.w	r0, r6, #464	; 0x1d0
 8001ea8:	f000 f89c 	bl	8001fe4 <__gnu_Unwind_Save_WMMXC>
 8001eac:	e704      	b.n	8001cb8 <_Unwind_VRS_Pop+0x30>
 8001eae:	f023 0308 	bic.w	r3, r3, #8
 8001eb2:	6003      	str	r3, [r0, #0]
 8001eb4:	f500 70a8 	add.w	r0, r0, #336	; 0x150
 8001eb8:	f000 f868 	bl	8001f8c <__gnu_Unwind_Save_WMMXD>
 8001ebc:	e727      	b.n	8001d0e <_Unwind_VRS_Pop+0x86>
 8001ebe:	af20      	add	r7, sp, #128	; 0x80
 8001ec0:	e7bd      	b.n	8001e3e <_Unwind_VRS_Pop+0x1b6>
 8001ec2:	4630      	mov	r0, r6
 8001ec4:	f023 0304 	bic.w	r3, r3, #4
 8001ec8:	f840 3bd0 	str.w	r3, [r0], #208
 8001ecc:	f000 f838 	bl	8001f40 <__gnu_Unwind_Save_VFP_D_16_to_31>
 8001ed0:	e7d6      	b.n	8001e80 <_Unwind_VRS_Pop+0x1f8>
 8001ed2:	a820      	add	r0, sp, #128	; 0x80
 8001ed4:	f000 f82c 	bl	8001f30 <__gnu_Unwind_Save_VFP_D>
 8001ed8:	e7d5      	b.n	8001e86 <_Unwind_VRS_Pop+0x1fe>
 8001eda:	f04f 0900 	mov.w	r9, #0
 8001ede:	e7bd      	b.n	8001e5c <_Unwind_VRS_Pop+0x1d4>
 8001ee0:	f1b8 0f0f 	cmp.w	r8, #15
 8001ee4:	f63f af41 	bhi.w	8001d6a <_Unwind_VRS_Pop+0xe2>
 8001ee8:	af20      	add	r7, sp, #128	; 0x80
 8001eea:	4638      	mov	r0, r7
 8001eec:	f000 f820 	bl	8001f30 <__gnu_Unwind_Save_VFP_D>
 8001ef0:	6bb3      	ldr	r3, [r6, #56]	; 0x38
 8001ef2:	2d00      	cmp	r5, #0
 8001ef4:	f47f af3c 	bne.w	8001d70 <_Unwind_VRS_Pop+0xe8>
 8001ef8:	4638      	mov	r0, r7
 8001efa:	f000 f815 	bl	8001f28 <__gnu_Unwind_Restore_VFP_D>
 8001efe:	e764      	b.n	8001dca <_Unwind_VRS_Pop+0x142>

08001f00 <__restore_core_regs>:
 8001f00:	f100 0134 	add.w	r1, r0, #52	; 0x34
 8001f04:	e891 0038 	ldmia.w	r1, {r3, r4, r5}
 8001f08:	469c      	mov	ip, r3
 8001f0a:	46a6      	mov	lr, r4
 8001f0c:	f84c 5d04 	str.w	r5, [ip, #-4]!
 8001f10:	e890 0fff 	ldmia.w	r0, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp}
 8001f14:	46e5      	mov	sp, ip
 8001f16:	bd00      	pop	{pc}

08001f18 <__gnu_Unwind_Restore_VFP>:
 8001f18:	ec90 0b21 	fldmiax	r0, {d0-d15}	;@ Deprecated
 8001f1c:	4770      	bx	lr
 8001f1e:	bf00      	nop

08001f20 <__gnu_Unwind_Save_VFP>:
 8001f20:	ec80 0b21 	fstmiax	r0, {d0-d15}	;@ Deprecated
 8001f24:	4770      	bx	lr
 8001f26:	bf00      	nop

08001f28 <__gnu_Unwind_Restore_VFP_D>:
 8001f28:	ec90 0b20 	vldmia	r0, {d0-d15}
 8001f2c:	4770      	bx	lr
 8001f2e:	bf00      	nop

08001f30 <__gnu_Unwind_Save_VFP_D>:
 8001f30:	ec80 0b20 	vstmia	r0, {d0-d15}
 8001f34:	4770      	bx	lr
 8001f36:	bf00      	nop

08001f38 <__gnu_Unwind_Restore_VFP_D_16_to_31>:
 8001f38:	ecd0 0b20 	vldmia	r0, {d16-d31}
 8001f3c:	4770      	bx	lr
 8001f3e:	bf00      	nop

08001f40 <__gnu_Unwind_Save_VFP_D_16_to_31>:
 8001f40:	ecc0 0b20 	vstmia	r0, {d16-d31}
 8001f44:	4770      	bx	lr
 8001f46:	bf00      	nop

08001f48 <__gnu_Unwind_Restore_WMMXD>:
 8001f48:	ecf0 0102 	ldfe	f0, [r0], #8
 8001f4c:	ecf0 1102 	ldfe	f1, [r0], #8
 8001f50:	ecf0 2102 	ldfe	f2, [r0], #8
 8001f54:	ecf0 3102 	ldfe	f3, [r0], #8
 8001f58:	ecf0 4102 	ldfe	f4, [r0], #8
 8001f5c:	ecf0 5102 	ldfe	f5, [r0], #8
 8001f60:	ecf0 6102 	ldfe	f6, [r0], #8
 8001f64:	ecf0 7102 	ldfe	f7, [r0], #8
 8001f68:	ecf0 8102 	ldfp	f0, [r0], #8
 8001f6c:	ecf0 9102 	ldfp	f1, [r0], #8
 8001f70:	ecf0 a102 	ldfp	f2, [r0], #8
 8001f74:	ecf0 b102 	ldfp	f3, [r0], #8
 8001f78:	ecf0 c102 	ldfp	f4, [r0], #8
 8001f7c:	ecf0 d102 	ldfp	f5, [r0], #8
 8001f80:	ecf0 e102 	ldfp	f6, [r0], #8
 8001f84:	ecf0 f102 	ldfp	f7, [r0], #8
 8001f88:	4770      	bx	lr
 8001f8a:	bf00      	nop

08001f8c <__gnu_Unwind_Save_WMMXD>:
 8001f8c:	ece0 0102 	stfe	f0, [r0], #8
 8001f90:	ece0 1102 	stfe	f1, [r0], #8
 8001f94:	ece0 2102 	stfe	f2, [r0], #8
 8001f98:	ece0 3102 	stfe	f3, [r0], #8
 8001f9c:	ece0 4102 	stfe	f4, [r0], #8
 8001fa0:	ece0 5102 	stfe	f5, [r0], #8
 8001fa4:	ece0 6102 	stfe	f6, [r0], #8
 8001fa8:	ece0 7102 	stfe	f7, [r0], #8
 8001fac:	ece0 8102 	stfp	f0, [r0], #8
 8001fb0:	ece0 9102 	stfp	f1, [r0], #8
 8001fb4:	ece0 a102 	stfp	f2, [r0], #8
 8001fb8:	ece0 b102 	stfp	f3, [r0], #8
 8001fbc:	ece0 c102 	stfp	f4, [r0], #8
 8001fc0:	ece0 d102 	stfp	f5, [r0], #8
 8001fc4:	ece0 e102 	stfp	f6, [r0], #8
 8001fc8:	ece0 f102 	stfp	f7, [r0], #8
 8001fcc:	4770      	bx	lr
 8001fce:	bf00      	nop

08001fd0 <__gnu_Unwind_Restore_WMMXC>:
 8001fd0:	fcb0 8101 	ldc2	1, cr8, [r0], #4
 8001fd4:	fcb0 9101 	ldc2	1, cr9, [r0], #4
 8001fd8:	fcb0 a101 	ldc2	1, cr10, [r0], #4
 8001fdc:	fcb0 b101 	ldc2	1, cr11, [r0], #4
 8001fe0:	4770      	bx	lr
 8001fe2:	bf00      	nop

08001fe4 <__gnu_Unwind_Save_WMMXC>:
 8001fe4:	fca0 8101 	stc2	1, cr8, [r0], #4
 8001fe8:	fca0 9101 	stc2	1, cr9, [r0], #4
 8001fec:	fca0 a101 	stc2	1, cr10, [r0], #4
 8001ff0:	fca0 b101 	stc2	1, cr11, [r0], #4
 8001ff4:	4770      	bx	lr
 8001ff6:	bf00      	nop

08001ff8 <_Unwind_RaiseException>:
 8001ff8:	46ec      	mov	ip, sp
 8001ffa:	b500      	push	{lr}
 8001ffc:	e92d 5000 	stmdb	sp!, {ip, lr}
 8002000:	e92d 1fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
 8002004:	f04f 0300 	mov.w	r3, #0
 8002008:	e92d 000c 	stmdb	sp!, {r2, r3}
 800200c:	a901      	add	r1, sp, #4
 800200e:	f7ff fbf1 	bl	80017f4 <__gnu_Unwind_RaiseException>
 8002012:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
 8002016:	b012      	add	sp, #72	; 0x48
 8002018:	4770      	bx	lr
 800201a:	bf00      	nop

0800201c <_Unwind_Resume>:
 800201c:	46ec      	mov	ip, sp
 800201e:	b500      	push	{lr}
 8002020:	e92d 5000 	stmdb	sp!, {ip, lr}
 8002024:	e92d 1fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
 8002028:	f04f 0300 	mov.w	r3, #0
 800202c:	e92d 000c 	stmdb	sp!, {r2, r3}
 8002030:	a901      	add	r1, sp, #4
 8002032:	f7ff fc19 	bl	8001868 <__gnu_Unwind_Resume>
 8002036:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
 800203a:	b012      	add	sp, #72	; 0x48
 800203c:	4770      	bx	lr
 800203e:	bf00      	nop

08002040 <_Unwind_Resume_or_Rethrow>:
 8002040:	46ec      	mov	ip, sp
 8002042:	b500      	push	{lr}
 8002044:	e92d 5000 	stmdb	sp!, {ip, lr}
 8002048:	e92d 1fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
 800204c:	f04f 0300 	mov.w	r3, #0
 8002050:	e92d 000c 	stmdb	sp!, {r2, r3}
 8002054:	a901      	add	r1, sp, #4
 8002056:	f7ff fc29 	bl	80018ac <__gnu_Unwind_Resume_or_Rethrow>
 800205a:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
 800205e:	b012      	add	sp, #72	; 0x48
 8002060:	4770      	bx	lr
 8002062:	bf00      	nop

08002064 <_Unwind_ForcedUnwind>:
 8002064:	46ec      	mov	ip, sp
 8002066:	b500      	push	{lr}
 8002068:	e92d 5000 	stmdb	sp!, {ip, lr}
 800206c:	e92d 1fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
 8002070:	f04f 0300 	mov.w	r3, #0
 8002074:	e92d 000c 	stmdb	sp!, {r2, r3}
 8002078:	ab01      	add	r3, sp, #4
 800207a:	f7ff fbeb 	bl	8001854 <__gnu_Unwind_ForcedUnwind>
 800207e:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
 8002082:	b012      	add	sp, #72	; 0x48
 8002084:	4770      	bx	lr
 8002086:	bf00      	nop

08002088 <_Unwind_Backtrace>:
 8002088:	46ec      	mov	ip, sp
 800208a:	b500      	push	{lr}
 800208c:	e92d 5000 	stmdb	sp!, {ip, lr}
 8002090:	e92d 1fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
 8002094:	f04f 0300 	mov.w	r3, #0
 8002098:	e92d 000c 	stmdb	sp!, {r2, r3}
 800209c:	aa01      	add	r2, sp, #4
 800209e:	f7ff fc5d 	bl	800195c <__gnu_Unwind_Backtrace>
 80020a2:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
 80020a6:	b012      	add	sp, #72	; 0x48
 80020a8:	4770      	bx	lr
 80020aa:	bf00      	nop

080020ac <next_unwind_byte>:
 80020ac:	7a02      	ldrb	r2, [r0, #8]
 80020ae:	b97a      	cbnz	r2, 80020d0 <next_unwind_byte+0x24>
 80020b0:	7a43      	ldrb	r3, [r0, #9]
 80020b2:	b1a3      	cbz	r3, 80020de <next_unwind_byte+0x32>
 80020b4:	6842      	ldr	r2, [r0, #4]
 80020b6:	3b01      	subs	r3, #1
 80020b8:	b410      	push	{r4}
 80020ba:	7243      	strb	r3, [r0, #9]
 80020bc:	6813      	ldr	r3, [r2, #0]
 80020be:	2103      	movs	r1, #3
 80020c0:	1d14      	adds	r4, r2, #4
 80020c2:	7201      	strb	r1, [r0, #8]
 80020c4:	021a      	lsls	r2, r3, #8
 80020c6:	6044      	str	r4, [r0, #4]
 80020c8:	6002      	str	r2, [r0, #0]
 80020ca:	bc10      	pop	{r4}
 80020cc:	0e18      	lsrs	r0, r3, #24
 80020ce:	4770      	bx	lr
 80020d0:	6803      	ldr	r3, [r0, #0]
 80020d2:	3a01      	subs	r2, #1
 80020d4:	7202      	strb	r2, [r0, #8]
 80020d6:	021a      	lsls	r2, r3, #8
 80020d8:	6002      	str	r2, [r0, #0]
 80020da:	0e18      	lsrs	r0, r3, #24
 80020dc:	4770      	bx	lr
 80020de:	20b0      	movs	r0, #176	; 0xb0
 80020e0:	4770      	bx	lr
 80020e2:	bf00      	nop

080020e4 <_Unwind_GetGR.constprop.0>:
 80020e4:	b500      	push	{lr}
 80020e6:	b085      	sub	sp, #20
 80020e8:	aa03      	add	r2, sp, #12
 80020ea:	2300      	movs	r3, #0
 80020ec:	9200      	str	r2, [sp, #0]
 80020ee:	4619      	mov	r1, r3
 80020f0:	220c      	movs	r2, #12
 80020f2:	f7ff fbeb 	bl	80018cc <_Unwind_VRS_Get>
 80020f6:	9803      	ldr	r0, [sp, #12]
 80020f8:	b005      	add	sp, #20
 80020fa:	f85d fb04 	ldr.w	pc, [sp], #4
 80020fe:	bf00      	nop

08002100 <unwind_UCB_from_context>:
 8002100:	e7f0      	b.n	80020e4 <_Unwind_GetGR.constprop.0>
 8002102:	bf00      	nop

08002104 <__gnu_unwind_execute>:
 8002104:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8002108:	4605      	mov	r5, r0
 800210a:	b085      	sub	sp, #20
 800210c:	460e      	mov	r6, r1
 800210e:	f04f 0800 	mov.w	r8, #0
 8002112:	4630      	mov	r0, r6
 8002114:	f7ff ffca 	bl	80020ac <next_unwind_byte>
 8002118:	28b0      	cmp	r0, #176	; 0xb0
 800211a:	4604      	mov	r4, r0
 800211c:	f000 80b2 	beq.w	8002284 <__gnu_unwind_execute+0x180>
 8002120:	0607      	lsls	r7, r0, #24
 8002122:	d520      	bpl.n	8002166 <__gnu_unwind_execute+0x62>
 8002124:	f000 03f0 	and.w	r3, r0, #240	; 0xf0
 8002128:	2b80      	cmp	r3, #128	; 0x80
 800212a:	d04d      	beq.n	80021c8 <__gnu_unwind_execute+0xc4>
 800212c:	2b90      	cmp	r3, #144	; 0x90
 800212e:	d036      	beq.n	800219e <__gnu_unwind_execute+0x9a>
 8002130:	2ba0      	cmp	r3, #160	; 0xa0
 8002132:	d060      	beq.n	80021f6 <__gnu_unwind_execute+0xf2>
 8002134:	2bb0      	cmp	r3, #176	; 0xb0
 8002136:	d074      	beq.n	8002222 <__gnu_unwind_execute+0x11e>
 8002138:	2bc0      	cmp	r3, #192	; 0xc0
 800213a:	f000 808b 	beq.w	8002254 <__gnu_unwind_execute+0x150>
 800213e:	f000 03f8 	and.w	r3, r0, #248	; 0xf8
 8002142:	2bd0      	cmp	r3, #208	; 0xd0
 8002144:	d10b      	bne.n	800215e <__gnu_unwind_execute+0x5a>
 8002146:	f000 0207 	and.w	r2, r0, #7
 800214a:	3201      	adds	r2, #1
 800214c:	f442 2200 	orr.w	r2, r2, #524288	; 0x80000
 8002150:	2305      	movs	r3, #5
 8002152:	2101      	movs	r1, #1
 8002154:	4628      	mov	r0, r5
 8002156:	f7ff fd97 	bl	8001c88 <_Unwind_VRS_Pop>
 800215a:	2800      	cmp	r0, #0
 800215c:	d0d9      	beq.n	8002112 <__gnu_unwind_execute+0xe>
 800215e:	2009      	movs	r0, #9
 8002160:	b005      	add	sp, #20
 8002162:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8002166:	f10d 090c 	add.w	r9, sp, #12
 800216a:	2300      	movs	r3, #0
 800216c:	4619      	mov	r1, r3
 800216e:	0087      	lsls	r7, r0, #2
 8002170:	f8cd 9000 	str.w	r9, [sp]
 8002174:	220d      	movs	r2, #13
 8002176:	4628      	mov	r0, r5
 8002178:	f7ff fba8 	bl	80018cc <_Unwind_VRS_Get>
 800217c:	b2ff      	uxtb	r7, r7
 800217e:	9b03      	ldr	r3, [sp, #12]
 8002180:	f8cd 9000 	str.w	r9, [sp]
 8002184:	3704      	adds	r7, #4
 8002186:	0660      	lsls	r0, r4, #25
 8002188:	bf4c      	ite	mi
 800218a:	1bdf      	submi	r7, r3, r7
 800218c:	18ff      	addpl	r7, r7, r3
 800218e:	2300      	movs	r3, #0
 8002190:	4619      	mov	r1, r3
 8002192:	220d      	movs	r2, #13
 8002194:	4628      	mov	r0, r5
 8002196:	9703      	str	r7, [sp, #12]
 8002198:	f7ff fbbc 	bl	8001914 <_Unwind_VRS_Set>
 800219c:	e7b9      	b.n	8002112 <__gnu_unwind_execute+0xe>
 800219e:	f000 030d 	and.w	r3, r0, #13
 80021a2:	2b0d      	cmp	r3, #13
 80021a4:	d0db      	beq.n	800215e <__gnu_unwind_execute+0x5a>
 80021a6:	af03      	add	r7, sp, #12
 80021a8:	2300      	movs	r3, #0
 80021aa:	f000 020f 	and.w	r2, r0, #15
 80021ae:	4619      	mov	r1, r3
 80021b0:	9700      	str	r7, [sp, #0]
 80021b2:	4628      	mov	r0, r5
 80021b4:	f7ff fb8a 	bl	80018cc <_Unwind_VRS_Get>
 80021b8:	2300      	movs	r3, #0
 80021ba:	9700      	str	r7, [sp, #0]
 80021bc:	4619      	mov	r1, r3
 80021be:	220d      	movs	r2, #13
 80021c0:	4628      	mov	r0, r5
 80021c2:	f7ff fba7 	bl	8001914 <_Unwind_VRS_Set>
 80021c6:	e7a4      	b.n	8002112 <__gnu_unwind_execute+0xe>
 80021c8:	4630      	mov	r0, r6
 80021ca:	f7ff ff6f 	bl	80020ac <next_unwind_byte>
 80021ce:	0224      	lsls	r4, r4, #8
 80021d0:	4320      	orrs	r0, r4
 80021d2:	f5b0 4f00 	cmp.w	r0, #32768	; 0x8000
 80021d6:	d0c2      	beq.n	800215e <__gnu_unwind_execute+0x5a>
 80021d8:	0104      	lsls	r4, r0, #4
 80021da:	2300      	movs	r3, #0
 80021dc:	b2a2      	uxth	r2, r4
 80021de:	4619      	mov	r1, r3
 80021e0:	4628      	mov	r0, r5
 80021e2:	f7ff fd51 	bl	8001c88 <_Unwind_VRS_Pop>
 80021e6:	2800      	cmp	r0, #0
 80021e8:	d1b9      	bne.n	800215e <__gnu_unwind_execute+0x5a>
 80021ea:	f414 4f00 	tst.w	r4, #32768	; 0x8000
 80021ee:	bf18      	it	ne
 80021f0:	f04f 0801 	movne.w	r8, #1
 80021f4:	e78d      	b.n	8002112 <__gnu_unwind_execute+0xe>
 80021f6:	43c2      	mvns	r2, r0
 80021f8:	f002 0307 	and.w	r3, r2, #7
 80021fc:	f44f 627f 	mov.w	r2, #4080	; 0xff0
 8002200:	411a      	asrs	r2, r3
 8002202:	0701      	lsls	r1, r0, #28
 8002204:	f402 627f 	and.w	r2, r2, #4080	; 0xff0
 8002208:	f04f 0300 	mov.w	r3, #0
 800220c:	bf48      	it	mi
 800220e:	f442 4280 	orrmi.w	r2, r2, #16384	; 0x4000
 8002212:	4619      	mov	r1, r3
 8002214:	4628      	mov	r0, r5
 8002216:	f7ff fd37 	bl	8001c88 <_Unwind_VRS_Pop>
 800221a:	2800      	cmp	r0, #0
 800221c:	f43f af79 	beq.w	8002112 <__gnu_unwind_execute+0xe>
 8002220:	e79d      	b.n	800215e <__gnu_unwind_execute+0x5a>
 8002222:	28b1      	cmp	r0, #177	; 0xb1
 8002224:	d033      	beq.n	800228e <__gnu_unwind_execute+0x18a>
 8002226:	28b2      	cmp	r0, #178	; 0xb2
 8002228:	f000 808b 	beq.w	8002342 <__gnu_unwind_execute+0x23e>
 800222c:	28b3      	cmp	r0, #179	; 0xb3
 800222e:	d039      	beq.n	80022a4 <__gnu_unwind_execute+0x1a0>
 8002230:	f000 03fc 	and.w	r3, r0, #252	; 0xfc
 8002234:	2bb4      	cmp	r3, #180	; 0xb4
 8002236:	d092      	beq.n	800215e <__gnu_unwind_execute+0x5a>
 8002238:	f000 0207 	and.w	r2, r0, #7
 800223c:	3201      	adds	r2, #1
 800223e:	2301      	movs	r3, #1
 8002240:	f442 2200 	orr.w	r2, r2, #524288	; 0x80000
 8002244:	4619      	mov	r1, r3
 8002246:	4628      	mov	r0, r5
 8002248:	f7ff fd1e 	bl	8001c88 <_Unwind_VRS_Pop>
 800224c:	2800      	cmp	r0, #0
 800224e:	f43f af60 	beq.w	8002112 <__gnu_unwind_execute+0xe>
 8002252:	e784      	b.n	800215e <__gnu_unwind_execute+0x5a>
 8002254:	28c6      	cmp	r0, #198	; 0xc6
 8002256:	d042      	beq.n	80022de <__gnu_unwind_execute+0x1da>
 8002258:	28c7      	cmp	r0, #199	; 0xc7
 800225a:	d04c      	beq.n	80022f6 <__gnu_unwind_execute+0x1f2>
 800225c:	f000 03f8 	and.w	r3, r0, #248	; 0xf8
 8002260:	2bc0      	cmp	r3, #192	; 0xc0
 8002262:	d05b      	beq.n	800231c <__gnu_unwind_execute+0x218>
 8002264:	28c8      	cmp	r0, #200	; 0xc8
 8002266:	d060      	beq.n	800232a <__gnu_unwind_execute+0x226>
 8002268:	28c9      	cmp	r0, #201	; 0xc9
 800226a:	f47f af78 	bne.w	800215e <__gnu_unwind_execute+0x5a>
 800226e:	4630      	mov	r0, r6
 8002270:	f7ff ff1c 	bl	80020ac <next_unwind_byte>
 8002274:	0302      	lsls	r2, r0, #12
 8002276:	f000 000f 	and.w	r0, r0, #15
 800227a:	f402 2270 	and.w	r2, r2, #983040	; 0xf0000
 800227e:	3001      	adds	r0, #1
 8002280:	4302      	orrs	r2, r0
 8002282:	e765      	b.n	8002150 <__gnu_unwind_execute+0x4c>
 8002284:	f1b8 0f00 	cmp.w	r8, #0
 8002288:	d018      	beq.n	80022bc <__gnu_unwind_execute+0x1b8>
 800228a:	2000      	movs	r0, #0
 800228c:	e768      	b.n	8002160 <__gnu_unwind_execute+0x5c>
 800228e:	4630      	mov	r0, r6
 8002290:	f7ff ff0c 	bl	80020ac <next_unwind_byte>
 8002294:	4602      	mov	r2, r0
 8002296:	2800      	cmp	r0, #0
 8002298:	f43f af61 	beq.w	800215e <__gnu_unwind_execute+0x5a>
 800229c:	f010 03f0 	ands.w	r3, r0, #240	; 0xf0
 80022a0:	d0d0      	beq.n	8002244 <__gnu_unwind_execute+0x140>
 80022a2:	e75c      	b.n	800215e <__gnu_unwind_execute+0x5a>
 80022a4:	4630      	mov	r0, r6
 80022a6:	f7ff ff01 	bl	80020ac <next_unwind_byte>
 80022aa:	0301      	lsls	r1, r0, #12
 80022ac:	f000 000f 	and.w	r0, r0, #15
 80022b0:	f401 2170 	and.w	r1, r1, #983040	; 0xf0000
 80022b4:	1c42      	adds	r2, r0, #1
 80022b6:	2301      	movs	r3, #1
 80022b8:	430a      	orrs	r2, r1
 80022ba:	e7c3      	b.n	8002244 <__gnu_unwind_execute+0x140>
 80022bc:	ac03      	add	r4, sp, #12
 80022be:	4643      	mov	r3, r8
 80022c0:	220e      	movs	r2, #14
 80022c2:	4641      	mov	r1, r8
 80022c4:	9400      	str	r4, [sp, #0]
 80022c6:	4628      	mov	r0, r5
 80022c8:	f7ff fb00 	bl	80018cc <_Unwind_VRS_Get>
 80022cc:	9400      	str	r4, [sp, #0]
 80022ce:	4628      	mov	r0, r5
 80022d0:	4643      	mov	r3, r8
 80022d2:	220f      	movs	r2, #15
 80022d4:	4641      	mov	r1, r8
 80022d6:	f7ff fb1d 	bl	8001914 <_Unwind_VRS_Set>
 80022da:	4640      	mov	r0, r8
 80022dc:	e740      	b.n	8002160 <__gnu_unwind_execute+0x5c>
 80022de:	4630      	mov	r0, r6
 80022e0:	f7ff fee4 	bl	80020ac <next_unwind_byte>
 80022e4:	0301      	lsls	r1, r0, #12
 80022e6:	f000 000f 	and.w	r0, r0, #15
 80022ea:	f401 2170 	and.w	r1, r1, #983040	; 0xf0000
 80022ee:	1c42      	adds	r2, r0, #1
 80022f0:	2303      	movs	r3, #3
 80022f2:	430a      	orrs	r2, r1
 80022f4:	e7a6      	b.n	8002244 <__gnu_unwind_execute+0x140>
 80022f6:	4630      	mov	r0, r6
 80022f8:	f7ff fed8 	bl	80020ac <next_unwind_byte>
 80022fc:	4602      	mov	r2, r0
 80022fe:	2800      	cmp	r0, #0
 8002300:	f43f af2d 	beq.w	800215e <__gnu_unwind_execute+0x5a>
 8002304:	f010 03f0 	ands.w	r3, r0, #240	; 0xf0
 8002308:	f47f af29 	bne.w	800215e <__gnu_unwind_execute+0x5a>
 800230c:	2104      	movs	r1, #4
 800230e:	4628      	mov	r0, r5
 8002310:	f7ff fcba 	bl	8001c88 <_Unwind_VRS_Pop>
 8002314:	2800      	cmp	r0, #0
 8002316:	f43f aefc 	beq.w	8002112 <__gnu_unwind_execute+0xe>
 800231a:	e720      	b.n	800215e <__gnu_unwind_execute+0x5a>
 800231c:	f000 020f 	and.w	r2, r0, #15
 8002320:	3201      	adds	r2, #1
 8002322:	2303      	movs	r3, #3
 8002324:	f442 2220 	orr.w	r2, r2, #655360	; 0xa0000
 8002328:	e78c      	b.n	8002244 <__gnu_unwind_execute+0x140>
 800232a:	4630      	mov	r0, r6
 800232c:	f7ff febe 	bl	80020ac <next_unwind_byte>
 8002330:	f000 02f0 	and.w	r2, r0, #240	; 0xf0
 8002334:	f000 030f 	and.w	r3, r0, #15
 8002338:	3210      	adds	r2, #16
 800233a:	3301      	adds	r3, #1
 800233c:	ea43 3202 	orr.w	r2, r3, r2, lsl #12
 8002340:	e706      	b.n	8002150 <__gnu_unwind_execute+0x4c>
 8002342:	2300      	movs	r3, #0
 8002344:	f10d 090c 	add.w	r9, sp, #12
 8002348:	220d      	movs	r2, #13
 800234a:	4619      	mov	r1, r3
 800234c:	f8cd 9000 	str.w	r9, [sp]
 8002350:	4628      	mov	r0, r5
 8002352:	f7ff fabb 	bl	80018cc <_Unwind_VRS_Get>
 8002356:	4630      	mov	r0, r6
 8002358:	f7ff fea8 	bl	80020ac <next_unwind_byte>
 800235c:	0602      	lsls	r2, r0, #24
 800235e:	f04f 0702 	mov.w	r7, #2
 8002362:	d50c      	bpl.n	800237e <__gnu_unwind_execute+0x27a>
 8002364:	9b03      	ldr	r3, [sp, #12]
 8002366:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 800236a:	40b8      	lsls	r0, r7
 800236c:	4403      	add	r3, r0
 800236e:	4630      	mov	r0, r6
 8002370:	9303      	str	r3, [sp, #12]
 8002372:	f7ff fe9b 	bl	80020ac <next_unwind_byte>
 8002376:	0603      	lsls	r3, r0, #24
 8002378:	f107 0707 	add.w	r7, r7, #7
 800237c:	d4f2      	bmi.n	8002364 <__gnu_unwind_execute+0x260>
 800237e:	9b03      	ldr	r3, [sp, #12]
 8002380:	f8cd 9000 	str.w	r9, [sp]
 8002384:	f000 047f 	and.w	r4, r0, #127	; 0x7f
 8002388:	f503 7201 	add.w	r2, r3, #516	; 0x204
 800238c:	40bc      	lsls	r4, r7
 800238e:	2300      	movs	r3, #0
 8002390:	4414      	add	r4, r2
 8002392:	4619      	mov	r1, r3
 8002394:	220d      	movs	r2, #13
 8002396:	4628      	mov	r0, r5
 8002398:	9403      	str	r4, [sp, #12]
 800239a:	f7ff fabb 	bl	8001914 <_Unwind_VRS_Set>
 800239e:	e6b8      	b.n	8002112 <__gnu_unwind_execute+0xe>

080023a0 <__gnu_unwind_frame>:
 80023a0:	b510      	push	{r4, lr}
 80023a2:	6cc2      	ldr	r2, [r0, #76]	; 0x4c
 80023a4:	b084      	sub	sp, #16
 80023a6:	6853      	ldr	r3, [r2, #4]
 80023a8:	2403      	movs	r4, #3
 80023aa:	f88d 400c 	strb.w	r4, [sp, #12]
 80023ae:	021b      	lsls	r3, r3, #8
 80023b0:	f102 0408 	add.w	r4, r2, #8
 80023b4:	4608      	mov	r0, r1
 80023b6:	79d2      	ldrb	r2, [r2, #7]
 80023b8:	9301      	str	r3, [sp, #4]
 80023ba:	a901      	add	r1, sp, #4
 80023bc:	9402      	str	r4, [sp, #8]
 80023be:	f88d 200d 	strb.w	r2, [sp, #13]
 80023c2:	f7ff fe9f 	bl	8002104 <__gnu_unwind_execute>
 80023c6:	b004      	add	sp, #16
 80023c8:	bd10      	pop	{r4, pc}
 80023ca:	bf00      	nop

080023cc <_Unwind_GetRegionStart>:
 80023cc:	b508      	push	{r3, lr}
 80023ce:	f7ff fe97 	bl	8002100 <unwind_UCB_from_context>
 80023d2:	6c80      	ldr	r0, [r0, #72]	; 0x48
 80023d4:	bd08      	pop	{r3, pc}
 80023d6:	bf00      	nop

080023d8 <_Unwind_GetLanguageSpecificData>:
 80023d8:	b508      	push	{r3, lr}
 80023da:	f7ff fe91 	bl	8002100 <unwind_UCB_from_context>
 80023de:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 80023e0:	79c3      	ldrb	r3, [r0, #7]
 80023e2:	3302      	adds	r3, #2
 80023e4:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 80023e8:	bd08      	pop	{r3, pc}
 80023ea:	bf00      	nop

080023ec <__aeabi_idiv0>:
 80023ec:	4770      	bx	lr
 80023ee:	bf00      	nop

080023f0 <_ZN15Adafruit_BME680C1Ev>:
 80023f0:	b480      	push	{r7}
 80023f2:	b083      	sub	sp, #12
 80023f4:	af00      	add	r7, sp, #0
 80023f6:	6078      	str	r0, [r7, #4]
 80023f8:	687b      	ldr	r3, [r7, #4]
 80023fa:	22ff      	movs	r2, #255	; 0xff
 80023fc:	771a      	strb	r2, [r3, #28]
 80023fe:	687b      	ldr	r3, [r7, #4]
 8002400:	2200      	movs	r2, #0
 8002402:	621a      	str	r2, [r3, #32]
 8002404:	687b      	ldr	r3, [r7, #4]
 8002406:	2200      	movs	r2, #0
 8002408:	849a      	strh	r2, [r3, #36]	; 0x24
 800240a:	4b11      	ldr	r3, [pc, #68]	; (8002450 <_ZN15Adafruit_BME680C1Ev+0x60>)
 800240c:	22ff      	movs	r2, #255	; 0xff
 800240e:	701a      	strb	r2, [r3, #0]
 8002410:	4b10      	ldr	r3, [pc, #64]	; (8002454 <_ZN15Adafruit_BME680C1Ev+0x64>)
 8002412:	22ff      	movs	r2, #255	; 0xff
 8002414:	701a      	strb	r2, [r3, #0]
 8002416:	4b10      	ldr	r3, [pc, #64]	; (8002458 <_ZN15Adafruit_BME680C1Ev+0x68>)
 8002418:	22ff      	movs	r2, #255	; 0xff
 800241a:	701a      	strb	r2, [r3, #0]
 800241c:	687b      	ldr	r3, [r7, #4]
 800241e:	2200      	movs	r2, #0
 8002420:	751a      	strb	r2, [r3, #20]
 8002422:	687b      	ldr	r3, [r7, #4]
 8002424:	7d1a      	ldrb	r2, [r3, #20]
 8002426:	687b      	ldr	r3, [r7, #4]
 8002428:	74da      	strb	r2, [r3, #19]
 800242a:	687b      	ldr	r3, [r7, #4]
 800242c:	7cda      	ldrb	r2, [r3, #19]
 800242e:	687b      	ldr	r3, [r7, #4]
 8002430:	749a      	strb	r2, [r3, #18]
 8002432:	687b      	ldr	r3, [r7, #4]
 8002434:	7c9a      	ldrb	r2, [r3, #18]
 8002436:	687b      	ldr	r3, [r7, #4]
 8002438:	745a      	strb	r2, [r3, #17]
 800243a:	687b      	ldr	r3, [r7, #4]
 800243c:	7c5a      	ldrb	r2, [r3, #17]
 800243e:	687b      	ldr	r3, [r7, #4]
 8002440:	741a      	strb	r2, [r3, #16]
 8002442:	687b      	ldr	r3, [r7, #4]
 8002444:	4618      	mov	r0, r3
 8002446:	370c      	adds	r7, #12
 8002448:	46bd      	mov	sp, r7
 800244a:	bc80      	pop	{r7}
 800244c:	4770      	bx	lr
 800244e:	bf00      	nop
 8002450:	20000258 	.word	0x20000258
 8002454:	20000259 	.word	0x20000259
 8002458:	2000025a 	.word	0x2000025a

0800245c <_Z5i2cOkv>:
 800245c:	b580      	push	{r7, lr}
 800245e:	af00      	add	r7, sp, #0
 8002460:	4b06      	ldr	r3, [pc, #24]	; (800247c <_Z5i2cOkv+0x20>)
 8002462:	2200      	movs	r2, #0
 8002464:	601a      	str	r2, [r3, #0]
 8002466:	4b06      	ldr	r3, [pc, #24]	; (8002480 <_Z5i2cOkv+0x24>)
 8002468:	2201      	movs	r2, #1
 800246a:	701a      	strb	r2, [r3, #0]
 800246c:	2064      	movs	r0, #100	; 0x64
 800246e:	f003 ffb8 	bl	80063e2 <HAL_Delay>
 8002472:	4b03      	ldr	r3, [pc, #12]	; (8002480 <_Z5i2cOkv+0x24>)
 8002474:	781b      	ldrb	r3, [r3, #0]
 8002476:	4618      	mov	r0, r3
 8002478:	bd80      	pop	{r7, pc}
 800247a:	bf00      	nop
 800247c:	2000025c 	.word	0x2000025c
 8002480:	20000000 	.word	0x20000000

08002484 <_ZN13SFE_UBLOX_GPSC1Ev>:
 8002484:	b480      	push	{r7}
 8002486:	b083      	sub	sp, #12
 8002488:	af00      	add	r7, sp, #0
 800248a:	6078      	str	r0, [r7, #4]
 800248c:	687b      	ldr	r3, [r7, #4]
 800248e:	22ff      	movs	r2, #255	; 0xff
 8002490:	701a      	strb	r2, [r3, #0]
 8002492:	687b      	ldr	r3, [r7, #4]
 8002494:	2200      	movs	r2, #0
 8002496:	f8a3 20f4 	strh.w	r2, [r3, #244]	; 0xf4
 800249a:	687b      	ldr	r3, [r7, #4]
 800249c:	2200      	movs	r2, #0
 800249e:	f883 2234 	strb.w	r2, [r3, #564]	; 0x234
 80024a2:	687b      	ldr	r3, [r7, #4]
 80024a4:	2200      	movs	r2, #0
 80024a6:	f883 2235 	strb.w	r2, [r3, #565]	; 0x235
 80024aa:	687b      	ldr	r3, [r7, #4]
 80024ac:	2200      	movs	r2, #0
 80024ae:	f883 2236 	strb.w	r2, [r3, #566]	; 0x236
 80024b2:	687b      	ldr	r3, [r7, #4]
 80024b4:	2242      	movs	r2, #66	; 0x42
 80024b6:	f883 2237 	strb.w	r2, [r3, #567]	; 0x237
 80024ba:	687b      	ldr	r3, [r7, #4]
 80024bc:	2200      	movs	r2, #0
 80024be:	f883 2238 	strb.w	r2, [r3, #568]	; 0x238
 80024c2:	687b      	ldr	r3, [r7, #4]
 80024c4:	2200      	movs	r2, #0
 80024c6:	f883 2239 	strb.w	r2, [r3, #569]	; 0x239
 80024ca:	687b      	ldr	r3, [r7, #4]
 80024cc:	2200      	movs	r2, #0
 80024ce:	f883 2340 	strb.w	r2, [r3, #832]	; 0x340
 80024d2:	687b      	ldr	r3, [r7, #4]
 80024d4:	2200      	movs	r2, #0
 80024d6:	f883 2341 	strb.w	r2, [r3, #833]	; 0x341
 80024da:	687b      	ldr	r3, [r7, #4]
 80024dc:	2200      	movs	r2, #0
 80024de:	f8a3 2342 	strh.w	r2, [r3, #834]	; 0x342
 80024e2:	687b      	ldr	r3, [r7, #4]
 80024e4:	2200      	movs	r2, #0
 80024e6:	f8a3 2344 	strh.w	r2, [r3, #836]	; 0x344
 80024ea:	687b      	ldr	r3, [r7, #4]
 80024ec:	2200      	movs	r2, #0
 80024ee:	f8a3 2346 	strh.w	r2, [r3, #838]	; 0x346
 80024f2:	687b      	ldr	r3, [r7, #4]
 80024f4:	f203 223a 	addw	r2, r3, #570	; 0x23a
 80024f8:	687b      	ldr	r3, [r7, #4]
 80024fa:	f8c3 2348 	str.w	r2, [r3, #840]	; 0x348
 80024fe:	687b      	ldr	r3, [r7, #4]
 8002500:	2200      	movs	r2, #0
 8002502:	f883 234c 	strb.w	r2, [r3, #844]	; 0x34c
 8002506:	687b      	ldr	r3, [r7, #4]
 8002508:	2200      	movs	r2, #0
 800250a:	f883 234d 	strb.w	r2, [r3, #845]	; 0x34d
 800250e:	687b      	ldr	r3, [r7, #4]
 8002510:	2202      	movs	r2, #2
 8002512:	f883 234e 	strb.w	r2, [r3, #846]	; 0x34e
 8002516:	687b      	ldr	r3, [r7, #4]
 8002518:	2202      	movs	r2, #2
 800251a:	f883 234f 	strb.w	r2, [r3, #847]	; 0x34f
 800251e:	687b      	ldr	r3, [r7, #4]
 8002520:	2200      	movs	r2, #0
 8002522:	f883 2350 	strb.w	r2, [r3, #848]	; 0x350
 8002526:	687b      	ldr	r3, [r7, #4]
 8002528:	2200      	movs	r2, #0
 800252a:	f883 2351 	strb.w	r2, [r3, #849]	; 0x351
 800252e:	687b      	ldr	r3, [r7, #4]
 8002530:	2200      	movs	r2, #0
 8002532:	f8a3 2352 	strh.w	r2, [r3, #850]	; 0x352
 8002536:	687b      	ldr	r3, [r7, #4]
 8002538:	2200      	movs	r2, #0
 800253a:	f8a3 2354 	strh.w	r2, [r3, #852]	; 0x354
 800253e:	687b      	ldr	r3, [r7, #4]
 8002540:	2200      	movs	r2, #0
 8002542:	f8a3 2356 	strh.w	r2, [r3, #854]	; 0x356
 8002546:	687b      	ldr	r3, [r7, #4]
 8002548:	f503 720f 	add.w	r2, r3, #572	; 0x23c
 800254c:	687b      	ldr	r3, [r7, #4]
 800254e:	f8c3 2358 	str.w	r2, [r3, #856]	; 0x358
 8002552:	687b      	ldr	r3, [r7, #4]
 8002554:	2200      	movs	r2, #0
 8002556:	f883 235c 	strb.w	r2, [r3, #860]	; 0x35c
 800255a:	687b      	ldr	r3, [r7, #4]
 800255c:	2200      	movs	r2, #0
 800255e:	f883 235d 	strb.w	r2, [r3, #861]	; 0x35d
 8002562:	687b      	ldr	r3, [r7, #4]
 8002564:	2202      	movs	r2, #2
 8002566:	f883 235e 	strb.w	r2, [r3, #862]	; 0x35e
 800256a:	687b      	ldr	r3, [r7, #4]
 800256c:	2202      	movs	r2, #2
 800256e:	f883 235f 	strb.w	r2, [r3, #863]	; 0x35f
 8002572:	687b      	ldr	r3, [r7, #4]
 8002574:	2200      	movs	r2, #0
 8002576:	f883 2360 	strb.w	r2, [r3, #864]	; 0x360
 800257a:	687b      	ldr	r3, [r7, #4]
 800257c:	2200      	movs	r2, #0
 800257e:	f883 2361 	strb.w	r2, [r3, #865]	; 0x361
 8002582:	687b      	ldr	r3, [r7, #4]
 8002584:	2200      	movs	r2, #0
 8002586:	f8a3 2362 	strh.w	r2, [r3, #866]	; 0x362
 800258a:	687b      	ldr	r3, [r7, #4]
 800258c:	2200      	movs	r2, #0
 800258e:	f8a3 2364 	strh.w	r2, [r3, #868]	; 0x364
 8002592:	687b      	ldr	r3, [r7, #4]
 8002594:	2200      	movs	r2, #0
 8002596:	f8a3 2366 	strh.w	r2, [r3, #870]	; 0x366
 800259a:	687b      	ldr	r3, [r7, #4]
 800259c:	f503 724f 	add.w	r2, r3, #828	; 0x33c
 80025a0:	687b      	ldr	r3, [r7, #4]
 80025a2:	f8c3 2368 	str.w	r2, [r3, #872]	; 0x368
 80025a6:	687b      	ldr	r3, [r7, #4]
 80025a8:	2200      	movs	r2, #0
 80025aa:	f883 236c 	strb.w	r2, [r3, #876]	; 0x36c
 80025ae:	687b      	ldr	r3, [r7, #4]
 80025b0:	2200      	movs	r2, #0
 80025b2:	f883 236d 	strb.w	r2, [r3, #877]	; 0x36d
 80025b6:	687b      	ldr	r3, [r7, #4]
 80025b8:	2202      	movs	r2, #2
 80025ba:	f883 236e 	strb.w	r2, [r3, #878]	; 0x36e
 80025be:	687b      	ldr	r3, [r7, #4]
 80025c0:	2202      	movs	r2, #2
 80025c2:	f883 236f 	strb.w	r2, [r3, #879]	; 0x36f
 80025c6:	687b      	ldr	r3, [r7, #4]
 80025c8:	2200      	movs	r2, #0
 80025ca:	f883 2370 	strb.w	r2, [r3, #880]	; 0x370
 80025ce:	687b      	ldr	r3, [r7, #4]
 80025d0:	2202      	movs	r2, #2
 80025d2:	f883 2371 	strb.w	r2, [r3, #881]	; 0x371
 80025d6:	687b      	ldr	r3, [r7, #4]
 80025d8:	2264      	movs	r2, #100	; 0x64
 80025da:	f883 2372 	strb.w	r2, [r3, #882]	; 0x372
 80025de:	687b      	ldr	r3, [r7, #4]
 80025e0:	2200      	movs	r2, #0
 80025e2:	f8c3 2374 	str.w	r2, [r3, #884]	; 0x374
 80025e6:	687b      	ldr	r3, [r7, #4]
 80025e8:	2200      	movs	r2, #0
 80025ea:	f883 2378 	strb.w	r2, [r3, #888]	; 0x378
 80025ee:	687b      	ldr	r3, [r7, #4]
 80025f0:	2201      	movs	r2, #1
 80025f2:	f883 2379 	strb.w	r2, [r3, #889]	; 0x379
 80025f6:	687b      	ldr	r3, [r7, #4]
 80025f8:	2200      	movs	r2, #0
 80025fa:	f883 237a 	strb.w	r2, [r3, #890]	; 0x37a
 80025fe:	687b      	ldr	r3, [r7, #4]
 8002600:	2201      	movs	r2, #1
 8002602:	f883 237b 	strb.w	r2, [r3, #891]	; 0x37b
 8002606:	687b      	ldr	r3, [r7, #4]
 8002608:	2200      	movs	r2, #0
 800260a:	f883 237c 	strb.w	r2, [r3, #892]	; 0x37c
 800260e:	687b      	ldr	r3, [r7, #4]
 8002610:	2201      	movs	r2, #1
 8002612:	f883 237d 	strb.w	r2, [r3, #893]	; 0x37d
 8002616:	687b      	ldr	r3, [r7, #4]
 8002618:	2200      	movs	r2, #0
 800261a:	f883 237e 	strb.w	r2, [r3, #894]	; 0x37e
 800261e:	687b      	ldr	r3, [r7, #4]
 8002620:	2201      	movs	r2, #1
 8002622:	f883 237f 	strb.w	r2, [r3, #895]	; 0x37f
 8002626:	687b      	ldr	r3, [r7, #4]
 8002628:	2200      	movs	r2, #0
 800262a:	f883 2380 	strb.w	r2, [r3, #896]	; 0x380
 800262e:	687b      	ldr	r3, [r7, #4]
 8002630:	2201      	movs	r2, #1
 8002632:	f883 2381 	strb.w	r2, [r3, #897]	; 0x381
 8002636:	687b      	ldr	r3, [r7, #4]
 8002638:	2200      	movs	r2, #0
 800263a:	f883 2382 	strb.w	r2, [r3, #898]	; 0x382
 800263e:	687b      	ldr	r3, [r7, #4]
 8002640:	2201      	movs	r2, #1
 8002642:	f883 2383 	strb.w	r2, [r3, #899]	; 0x383
 8002646:	687b      	ldr	r3, [r7, #4]
 8002648:	2200      	movs	r2, #0
 800264a:	f8a3 2398 	strh.w	r2, [r3, #920]	; 0x398
 800264e:	687b      	ldr	r3, [r7, #4]
 8002650:	2200      	movs	r2, #0
 8002652:	711a      	strb	r2, [r3, #4]
 8002654:	687a      	ldr	r2, [r7, #4]
 8002656:	f892 338c 	ldrb.w	r3, [r2, #908]	; 0x38c
 800265a:	f36f 03c3 	bfc	r3, #3, #1
 800265e:	f882 338c 	strb.w	r3, [r2, #908]	; 0x38c
 8002662:	687b      	ldr	r3, [r7, #4]
 8002664:	4618      	mov	r0, r3
 8002666:	370c      	adds	r7, #12
 8002668:	46bd      	mov	sp, r7
 800266a:	bc80      	pop	{r7}
 800266c:	4770      	bx	lr

0800266e <_ZN13SFE_UBLOX_GPS5beginEh>:
 800266e:	b580      	push	{r7, lr}
 8002670:	b082      	sub	sp, #8
 8002672:	af00      	add	r7, sp, #0
 8002674:	6078      	str	r0, [r7, #4]
 8002676:	460b      	mov	r3, r1
 8002678:	70fb      	strb	r3, [r7, #3]
 800267a:	687b      	ldr	r3, [r7, #4]
 800267c:	2200      	movs	r2, #0
 800267e:	f883 2236 	strb.w	r2, [r3, #566]	; 0x236
 8002682:	687b      	ldr	r3, [r7, #4]
 8002684:	78fa      	ldrb	r2, [r7, #3]
 8002686:	f883 2237 	strb.w	r2, [r3, #567]	; 0x237
 800268a:	f240 414c 	movw	r1, #1100	; 0x44c
 800268e:	6878      	ldr	r0, [r7, #4]
 8002690:	f001 fbee 	bl	8003e70 <_ZN13SFE_UBLOX_GPS11isConnectedEt>
 8002694:	4603      	mov	r3, r0
 8002696:	4618      	mov	r0, r3
 8002698:	3708      	adds	r7, #8
 800269a:	46bd      	mov	sp, r7
 800269c:	bd80      	pop	{r7, pc}

0800269e <_ZN13SFE_UBLOX_GPS18checkUbloxInternalEP9ubxPackethh>:
 800269e:	b580      	push	{r7, lr}
 80026a0:	b084      	sub	sp, #16
 80026a2:	af00      	add	r7, sp, #0
 80026a4:	60f8      	str	r0, [r7, #12]
 80026a6:	60b9      	str	r1, [r7, #8]
 80026a8:	4611      	mov	r1, r2
 80026aa:	461a      	mov	r2, r3
 80026ac:	460b      	mov	r3, r1
 80026ae:	71fb      	strb	r3, [r7, #7]
 80026b0:	4613      	mov	r3, r2
 80026b2:	71bb      	strb	r3, [r7, #6]
 80026b4:	68fb      	ldr	r3, [r7, #12]
 80026b6:	f893 3236 	ldrb.w	r3, [r3, #566]	; 0x236
 80026ba:	2b00      	cmp	r3, #0
 80026bc:	d107      	bne.n	80026ce <_ZN13SFE_UBLOX_GPS18checkUbloxInternalEP9ubxPackethh+0x30>
 80026be:	79bb      	ldrb	r3, [r7, #6]
 80026c0:	79fa      	ldrb	r2, [r7, #7]
 80026c2:	68b9      	ldr	r1, [r7, #8]
 80026c4:	68f8      	ldr	r0, [r7, #12]
 80026c6:	f000 f807 	bl	80026d8 <_ZN13SFE_UBLOX_GPS13checkUbloxI2CEP9ubxPackethh>
 80026ca:	4603      	mov	r3, r0
 80026cc:	e000      	b.n	80026d0 <_ZN13SFE_UBLOX_GPS18checkUbloxInternalEP9ubxPackethh+0x32>
 80026ce:	2300      	movs	r3, #0
 80026d0:	4618      	mov	r0, r3
 80026d2:	3710      	adds	r7, #16
 80026d4:	46bd      	mov	sp, r7
 80026d6:	bd80      	pop	{r7, pc}

080026d8 <_ZN13SFE_UBLOX_GPS13checkUbloxI2CEP9ubxPackethh>:
 80026d8:	b580      	push	{r7, lr}
 80026da:	b0aa      	sub	sp, #168	; 0xa8
 80026dc:	af02      	add	r7, sp, #8
 80026de:	60f8      	str	r0, [r7, #12]
 80026e0:	60b9      	str	r1, [r7, #8]
 80026e2:	4611      	mov	r1, r2
 80026e4:	461a      	mov	r2, r3
 80026e6:	460b      	mov	r3, r1
 80026e8:	71fb      	strb	r3, [r7, #7]
 80026ea:	4613      	mov	r3, r2
 80026ec:	71bb      	strb	r3, [r7, #6]
 80026ee:	2300      	movs	r3, #0
 80026f0:	f8a7 3090 	strh.w	r3, [r7, #144]	; 0x90
 80026f4:	f003 fe6e 	bl	80063d4 <HAL_GetTick>
 80026f8:	4602      	mov	r2, r0
 80026fa:	68fb      	ldr	r3, [r7, #12]
 80026fc:	f8d3 3374 	ldr.w	r3, [r3, #884]	; 0x374
 8002700:	1ad3      	subs	r3, r2, r3
 8002702:	68fa      	ldr	r2, [r7, #12]
 8002704:	f892 2372 	ldrb.w	r2, [r2, #882]	; 0x372
 8002708:	4293      	cmp	r3, r2
 800270a:	bf2c      	ite	cs
 800270c:	2301      	movcs	r3, #1
 800270e:	2300      	movcc	r3, #0
 8002710:	b2db      	uxtb	r3, r3
 8002712:	2b00      	cmp	r3, #0
 8002714:	f000 80ae 	beq.w	8002874 <_ZN13SFE_UBLOX_GPS13checkUbloxI2CEP9ubxPackethh+0x19c>
 8002718:	23fd      	movs	r3, #253	; 0xfd
 800271a:	f887 3094 	strb.w	r3, [r7, #148]	; 0x94
 800271e:	f107 0294 	add.w	r2, r7, #148	; 0x94
 8002722:	2300      	movs	r3, #0
 8002724:	9300      	str	r3, [sp, #0]
 8002726:	2301      	movs	r3, #1
 8002728:	2184      	movs	r1, #132	; 0x84
 800272a:	4855      	ldr	r0, [pc, #340]	; (8002880 <_ZN13SFE_UBLOX_GPS13checkUbloxI2CEP9ubxPackethh+0x1a8>)
 800272c:	f006 fe9a 	bl	8009464 <HAL_I2C_Master_Seq_Transmit_DMA>
 8002730:	4603      	mov	r3, r0
 8002732:	461a      	mov	r2, r3
 8002734:	4b53      	ldr	r3, [pc, #332]	; (8002884 <_ZN13SFE_UBLOX_GPS13checkUbloxI2CEP9ubxPackethh+0x1ac>)
 8002736:	701a      	strb	r2, [r3, #0]
 8002738:	f7ff fe90 	bl	800245c <_Z5i2cOkv>
 800273c:	f107 0210 	add.w	r2, r7, #16
 8002740:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 8002744:	9300      	str	r3, [sp, #0]
 8002746:	2302      	movs	r3, #2
 8002748:	2185      	movs	r1, #133	; 0x85
 800274a:	484d      	ldr	r0, [pc, #308]	; (8002880 <_ZN13SFE_UBLOX_GPS13checkUbloxI2CEP9ubxPackethh+0x1a8>)
 800274c:	f006 ff8e 	bl	800966c <HAL_I2C_Master_Seq_Receive_DMA>
 8002750:	4603      	mov	r3, r0
 8002752:	461a      	mov	r2, r3
 8002754:	4b4b      	ldr	r3, [pc, #300]	; (8002884 <_ZN13SFE_UBLOX_GPS13checkUbloxI2CEP9ubxPackethh+0x1ac>)
 8002756:	701a      	strb	r2, [r3, #0]
 8002758:	f7ff fe80 	bl	800245c <_Z5i2cOkv>
 800275c:	7c3b      	ldrb	r3, [r7, #16]
 800275e:	f887 309b 	strb.w	r3, [r7, #155]	; 0x9b
 8002762:	7c7b      	ldrb	r3, [r7, #17]
 8002764:	f887 309a 	strb.w	r3, [r7, #154]	; 0x9a
 8002768:	f897 309a 	ldrb.w	r3, [r7, #154]	; 0x9a
 800276c:	2bff      	cmp	r3, #255	; 0xff
 800276e:	d107      	bne.n	8002780 <_ZN13SFE_UBLOX_GPS13checkUbloxI2CEP9ubxPackethh+0xa8>
 8002770:	f003 fe30 	bl	80063d4 <HAL_GetTick>
 8002774:	4602      	mov	r2, r0
 8002776:	68fb      	ldr	r3, [r7, #12]
 8002778:	f8c3 2374 	str.w	r2, [r3, #884]	; 0x374
 800277c:	2300      	movs	r3, #0
 800277e:	e07a      	b.n	8002876 <_ZN13SFE_UBLOX_GPS13checkUbloxI2CEP9ubxPackethh+0x19e>
 8002780:	f897 309b 	ldrb.w	r3, [r7, #155]	; 0x9b
 8002784:	021b      	lsls	r3, r3, #8
 8002786:	b21a      	sxth	r2, r3
 8002788:	f897 309a 	ldrb.w	r3, [r7, #154]	; 0x9a
 800278c:	b21b      	sxth	r3, r3
 800278e:	4313      	orrs	r3, r2
 8002790:	b21b      	sxth	r3, r3
 8002792:	b29a      	uxth	r2, r3
 8002794:	4b3c      	ldr	r3, [pc, #240]	; (8002888 <_ZN13SFE_UBLOX_GPS13checkUbloxI2CEP9ubxPackethh+0x1b0>)
 8002796:	801a      	strh	r2, [r3, #0]
 8002798:	4b3b      	ldr	r3, [pc, #236]	; (8002888 <_ZN13SFE_UBLOX_GPS13checkUbloxI2CEP9ubxPackethh+0x1b0>)
 800279a:	881b      	ldrh	r3, [r3, #0]
 800279c:	2b00      	cmp	r3, #0
 800279e:	d107      	bne.n	80027b0 <_ZN13SFE_UBLOX_GPS13checkUbloxI2CEP9ubxPackethh+0xd8>
 80027a0:	f003 fe18 	bl	80063d4 <HAL_GetTick>
 80027a4:	4602      	mov	r2, r0
 80027a6:	68fb      	ldr	r3, [r7, #12]
 80027a8:	f8c3 2374 	str.w	r2, [r3, #884]	; 0x374
 80027ac:	2300      	movs	r3, #0
 80027ae:	e062      	b.n	8002876 <_ZN13SFE_UBLOX_GPS13checkUbloxI2CEP9ubxPackethh+0x19e>
 80027b0:	4b35      	ldr	r3, [pc, #212]	; (8002888 <_ZN13SFE_UBLOX_GPS13checkUbloxI2CEP9ubxPackethh+0x1b0>)
 80027b2:	881b      	ldrh	r3, [r3, #0]
 80027b4:	b21b      	sxth	r3, r3
 80027b6:	2b00      	cmp	r3, #0
 80027b8:	da06      	bge.n	80027c8 <_ZN13SFE_UBLOX_GPS13checkUbloxI2CEP9ubxPackethh+0xf0>
 80027ba:	4b33      	ldr	r3, [pc, #204]	; (8002888 <_ZN13SFE_UBLOX_GPS13checkUbloxI2CEP9ubxPackethh+0x1b0>)
 80027bc:	881b      	ldrh	r3, [r3, #0]
 80027be:	f3c3 030e 	ubfx	r3, r3, #0, #15
 80027c2:	b29a      	uxth	r2, r3
 80027c4:	4b30      	ldr	r3, [pc, #192]	; (8002888 <_ZN13SFE_UBLOX_GPS13checkUbloxI2CEP9ubxPackethh+0x1b0>)
 80027c6:	801a      	strh	r2, [r3, #0]
 80027c8:	4b2f      	ldr	r3, [pc, #188]	; (8002888 <_ZN13SFE_UBLOX_GPS13checkUbloxI2CEP9ubxPackethh+0x1b0>)
 80027ca:	881b      	ldrh	r3, [r3, #0]
 80027cc:	2b01      	cmp	r3, #1
 80027ce:	d944      	bls.n	800285a <_ZN13SFE_UBLOX_GPS13checkUbloxI2CEP9ubxPackethh+0x182>
 80027d0:	4b2d      	ldr	r3, [pc, #180]	; (8002888 <_ZN13SFE_UBLOX_GPS13checkUbloxI2CEP9ubxPackethh+0x1b0>)
 80027d2:	881b      	ldrh	r3, [r3, #0]
 80027d4:	2bff      	cmp	r3, #255	; 0xff
 80027d6:	d840      	bhi.n	800285a <_ZN13SFE_UBLOX_GPS13checkUbloxI2CEP9ubxPackethh+0x182>
 80027d8:	23ff      	movs	r3, #255	; 0xff
 80027da:	f887 3094 	strb.w	r3, [r7, #148]	; 0x94
 80027de:	f107 0294 	add.w	r2, r7, #148	; 0x94
 80027e2:	2300      	movs	r3, #0
 80027e4:	9300      	str	r3, [sp, #0]
 80027e6:	2301      	movs	r3, #1
 80027e8:	2184      	movs	r1, #132	; 0x84
 80027ea:	4825      	ldr	r0, [pc, #148]	; (8002880 <_ZN13SFE_UBLOX_GPS13checkUbloxI2CEP9ubxPackethh+0x1a8>)
 80027ec:	f006 fe3a 	bl	8009464 <HAL_I2C_Master_Seq_Transmit_DMA>
 80027f0:	4603      	mov	r3, r0
 80027f2:	461a      	mov	r2, r3
 80027f4:	4b23      	ldr	r3, [pc, #140]	; (8002884 <_ZN13SFE_UBLOX_GPS13checkUbloxI2CEP9ubxPackethh+0x1ac>)
 80027f6:	701a      	strb	r2, [r3, #0]
 80027f8:	f7ff fe30 	bl	800245c <_Z5i2cOkv>
 80027fc:	4b22      	ldr	r3, [pc, #136]	; (8002888 <_ZN13SFE_UBLOX_GPS13checkUbloxI2CEP9ubxPackethh+0x1b0>)
 80027fe:	881b      	ldrh	r3, [r3, #0]
 8002800:	f107 0210 	add.w	r2, r7, #16
 8002804:	f04f 7100 	mov.w	r1, #33554432	; 0x2000000
 8002808:	9100      	str	r1, [sp, #0]
 800280a:	2185      	movs	r1, #133	; 0x85
 800280c:	481c      	ldr	r0, [pc, #112]	; (8002880 <_ZN13SFE_UBLOX_GPS13checkUbloxI2CEP9ubxPackethh+0x1a8>)
 800280e:	f006 ff2d 	bl	800966c <HAL_I2C_Master_Seq_Receive_DMA>
 8002812:	4603      	mov	r3, r0
 8002814:	461a      	mov	r2, r3
 8002816:	4b1b      	ldr	r3, [pc, #108]	; (8002884 <_ZN13SFE_UBLOX_GPS13checkUbloxI2CEP9ubxPackethh+0x1ac>)
 8002818:	701a      	strb	r2, [r3, #0]
 800281a:	f7ff fe1f 	bl	800245c <_Z5i2cOkv>
 800281e:	2300      	movs	r3, #0
 8002820:	f8c7 309c 	str.w	r3, [r7, #156]	; 0x9c
 8002824:	4b18      	ldr	r3, [pc, #96]	; (8002888 <_ZN13SFE_UBLOX_GPS13checkUbloxI2CEP9ubxPackethh+0x1b0>)
 8002826:	881b      	ldrh	r3, [r3, #0]
 8002828:	461a      	mov	r2, r3
 800282a:	f8d7 309c 	ldr.w	r3, [r7, #156]	; 0x9c
 800282e:	4293      	cmp	r3, r2
 8002830:	da13      	bge.n	800285a <_ZN13SFE_UBLOX_GPS13checkUbloxI2CEP9ubxPackethh+0x182>
 8002832:	f107 0210 	add.w	r2, r7, #16
 8002836:	f8d7 309c 	ldr.w	r3, [r7, #156]	; 0x9c
 800283a:	4413      	add	r3, r2
 800283c:	7819      	ldrb	r1, [r3, #0]
 800283e:	79fa      	ldrb	r2, [r7, #7]
 8002840:	79bb      	ldrb	r3, [r7, #6]
 8002842:	9300      	str	r3, [sp, #0]
 8002844:	4613      	mov	r3, r2
 8002846:	68ba      	ldr	r2, [r7, #8]
 8002848:	68f8      	ldr	r0, [r7, #12]
 800284a:	f000 f81f 	bl	800288c <_ZN13SFE_UBLOX_GPS7processEhP9ubxPackethh>
 800284e:	f8d7 309c 	ldr.w	r3, [r7, #156]	; 0x9c
 8002852:	3301      	adds	r3, #1
 8002854:	f8c7 309c 	str.w	r3, [r7, #156]	; 0x9c
 8002858:	e7e4      	b.n	8002824 <_ZN13SFE_UBLOX_GPS13checkUbloxI2CEP9ubxPackethh+0x14c>
 800285a:	4b0b      	ldr	r3, [pc, #44]	; (8002888 <_ZN13SFE_UBLOX_GPS13checkUbloxI2CEP9ubxPackethh+0x1b0>)
 800285c:	881b      	ldrh	r3, [r3, #0]
 800285e:	2bff      	cmp	r3, #255	; 0xff
 8002860:	d908      	bls.n	8002874 <_ZN13SFE_UBLOX_GPS13checkUbloxI2CEP9ubxPackethh+0x19c>
 8002862:	f107 0290 	add.w	r2, r7, #144	; 0x90
 8002866:	230a      	movs	r3, #10
 8002868:	9300      	str	r3, [sp, #0]
 800286a:	2301      	movs	r3, #1
 800286c:	2166      	movs	r1, #102	; 0x66
 800286e:	4804      	ldr	r0, [pc, #16]	; (8002880 <_ZN13SFE_UBLOX_GPS13checkUbloxI2CEP9ubxPackethh+0x1a8>)
 8002870:	f006 fd04 	bl	800927c <HAL_I2C_Master_Transmit>
 8002874:	2301      	movs	r3, #1
 8002876:	4618      	mov	r0, r3
 8002878:	37a0      	adds	r7, #160	; 0xa0
 800287a:	46bd      	mov	sp, r7
 800287c:	bd80      	pop	{r7, pc}
 800287e:	bf00      	nop
 8002880:	20000884 	.word	0x20000884
 8002884:	2000025b 	.word	0x2000025b
 8002888:	20000260 	.word	0x20000260

0800288c <_ZN13SFE_UBLOX_GPS7processEhP9ubxPackethh>:
 800288c:	b580      	push	{r7, lr}
 800288e:	b086      	sub	sp, #24
 8002890:	af02      	add	r7, sp, #8
 8002892:	60f8      	str	r0, [r7, #12]
 8002894:	607a      	str	r2, [r7, #4]
 8002896:	461a      	mov	r2, r3
 8002898:	460b      	mov	r3, r1
 800289a:	72fb      	strb	r3, [r7, #11]
 800289c:	4613      	mov	r3, r2
 800289e:	72bb      	strb	r3, [r7, #10]
 80028a0:	68fb      	ldr	r3, [r7, #12]
 80028a2:	f893 3234 	ldrb.w	r3, [r3, #564]	; 0x234
 80028a6:	2b00      	cmp	r3, #0
 80028a8:	d004      	beq.n	80028b4 <_ZN13SFE_UBLOX_GPS7processEhP9ubxPackethh+0x28>
 80028aa:	68fb      	ldr	r3, [r7, #12]
 80028ac:	f893 3234 	ldrb.w	r3, [r3, #564]	; 0x234
 80028b0:	2b01      	cmp	r3, #1
 80028b2:	d12a      	bne.n	800290a <_ZN13SFE_UBLOX_GPS7processEhP9ubxPackethh+0x7e>
 80028b4:	7afb      	ldrb	r3, [r7, #11]
 80028b6:	2bb5      	cmp	r3, #181	; 0xb5
 80028b8:	d114      	bne.n	80028e4 <_ZN13SFE_UBLOX_GPS7processEhP9ubxPackethh+0x58>
 80028ba:	68fb      	ldr	r3, [r7, #12]
 80028bc:	2200      	movs	r2, #0
 80028be:	f8a3 2384 	strh.w	r2, [r3, #900]	; 0x384
 80028c2:	68fb      	ldr	r3, [r7, #12]
 80028c4:	2202      	movs	r2, #2
 80028c6:	f883 2234 	strb.w	r2, [r3, #564]	; 0x234
 80028ca:	68fb      	ldr	r3, [r7, #12]
 80028cc:	2200      	movs	r2, #0
 80028ce:	f8a3 2364 	strh.w	r2, [r3, #868]	; 0x364
 80028d2:	68fb      	ldr	r3, [r7, #12]
 80028d4:	2200      	movs	r2, #0
 80028d6:	f883 2370 	strb.w	r2, [r3, #880]	; 0x370
 80028da:	68fb      	ldr	r3, [r7, #12]
 80028dc:	2202      	movs	r2, #2
 80028de:	f883 2371 	strb.w	r2, [r3, #881]	; 0x371
 80028e2:	e012      	b.n	800290a <_ZN13SFE_UBLOX_GPS7processEhP9ubxPackethh+0x7e>
 80028e4:	7afb      	ldrb	r3, [r7, #11]
 80028e6:	2b24      	cmp	r3, #36	; 0x24
 80028e8:	d104      	bne.n	80028f4 <_ZN13SFE_UBLOX_GPS7processEhP9ubxPackethh+0x68>
 80028ea:	68fb      	ldr	r3, [r7, #12]
 80028ec:	2201      	movs	r2, #1
 80028ee:	f883 2234 	strb.w	r2, [r3, #564]	; 0x234
 80028f2:	e00a      	b.n	800290a <_ZN13SFE_UBLOX_GPS7processEhP9ubxPackethh+0x7e>
 80028f4:	7afb      	ldrb	r3, [r7, #11]
 80028f6:	2bd3      	cmp	r3, #211	; 0xd3
 80028f8:	d107      	bne.n	800290a <_ZN13SFE_UBLOX_GPS7processEhP9ubxPackethh+0x7e>
 80028fa:	68fb      	ldr	r3, [r7, #12]
 80028fc:	2200      	movs	r2, #0
 80028fe:	f8a3 20f4 	strh.w	r2, [r3, #244]	; 0xf4
 8002902:	68fb      	ldr	r3, [r7, #12]
 8002904:	2203      	movs	r2, #3
 8002906:	f883 2234 	strb.w	r2, [r3, #564]	; 0x234
 800290a:	68fb      	ldr	r3, [r7, #12]
 800290c:	f893 3234 	ldrb.w	r3, [r3, #564]	; 0x234
 8002910:	2b02      	cmp	r3, #2
 8002912:	f040 81b5 	bne.w	8002c80 <_ZN13SFE_UBLOX_GPS7processEhP9ubxPackethh+0x3f4>
 8002916:	68fb      	ldr	r3, [r7, #12]
 8002918:	f8b3 3384 	ldrh.w	r3, [r3, #900]	; 0x384
 800291c:	2b00      	cmp	r3, #0
 800291e:	d107      	bne.n	8002930 <_ZN13SFE_UBLOX_GPS7processEhP9ubxPackethh+0xa4>
 8002920:	7afb      	ldrb	r3, [r7, #11]
 8002922:	2bb5      	cmp	r3, #181	; 0xb5
 8002924:	d004      	beq.n	8002930 <_ZN13SFE_UBLOX_GPS7processEhP9ubxPackethh+0xa4>
 8002926:	68fb      	ldr	r3, [r7, #12]
 8002928:	2200      	movs	r2, #0
 800292a:	f883 2234 	strb.w	r2, [r3, #564]	; 0x234
 800292e:	e173      	b.n	8002c18 <_ZN13SFE_UBLOX_GPS7processEhP9ubxPackethh+0x38c>
 8002930:	68fb      	ldr	r3, [r7, #12]
 8002932:	f8b3 3384 	ldrh.w	r3, [r3, #900]	; 0x384
 8002936:	2b01      	cmp	r3, #1
 8002938:	d107      	bne.n	800294a <_ZN13SFE_UBLOX_GPS7processEhP9ubxPackethh+0xbe>
 800293a:	7afb      	ldrb	r3, [r7, #11]
 800293c:	2b62      	cmp	r3, #98	; 0x62
 800293e:	d004      	beq.n	800294a <_ZN13SFE_UBLOX_GPS7processEhP9ubxPackethh+0xbe>
 8002940:	68fb      	ldr	r3, [r7, #12]
 8002942:	2200      	movs	r2, #0
 8002944:	f883 2234 	strb.w	r2, [r3, #564]	; 0x234
 8002948:	e166      	b.n	8002c18 <_ZN13SFE_UBLOX_GPS7processEhP9ubxPackethh+0x38c>
 800294a:	68fb      	ldr	r3, [r7, #12]
 800294c:	f8b3 3384 	ldrh.w	r3, [r3, #900]	; 0x384
 8002950:	2b02      	cmp	r3, #2
 8002952:	d119      	bne.n	8002988 <_ZN13SFE_UBLOX_GPS7processEhP9ubxPackethh+0xfc>
 8002954:	68fb      	ldr	r3, [r7, #12]
 8002956:	7afa      	ldrb	r2, [r7, #11]
 8002958:	f883 2360 	strb.w	r2, [r3, #864]	; 0x360
 800295c:	68fb      	ldr	r3, [r7, #12]
 800295e:	2200      	movs	r2, #0
 8002960:	f883 2386 	strb.w	r2, [r3, #902]	; 0x386
 8002964:	68fb      	ldr	r3, [r7, #12]
 8002966:	2200      	movs	r2, #0
 8002968:	f883 2387 	strb.w	r2, [r3, #903]	; 0x387
 800296c:	68fb      	ldr	r3, [r7, #12]
 800296e:	2200      	movs	r2, #0
 8002970:	f8a3 2364 	strh.w	r2, [r3, #868]	; 0x364
 8002974:	68fb      	ldr	r3, [r7, #12]
 8002976:	2202      	movs	r2, #2
 8002978:	f883 236e 	strb.w	r2, [r3, #878]	; 0x36e
 800297c:	687b      	ldr	r3, [r7, #4]
 800297e:	88da      	ldrh	r2, [r3, #6]
 8002980:	68fb      	ldr	r3, [r7, #12]
 8002982:	f8a3 2366 	strh.w	r2, [r3, #870]	; 0x366
 8002986:	e147      	b.n	8002c18 <_ZN13SFE_UBLOX_GPS7processEhP9ubxPackethh+0x38c>
 8002988:	68fb      	ldr	r3, [r7, #12]
 800298a:	f8b3 3384 	ldrh.w	r3, [r3, #900]	; 0x384
 800298e:	2b03      	cmp	r3, #3
 8002990:	f040 80a5 	bne.w	8002ade <_ZN13SFE_UBLOX_GPS7processEhP9ubxPackethh+0x252>
 8002994:	68fb      	ldr	r3, [r7, #12]
 8002996:	7afa      	ldrb	r2, [r7, #11]
 8002998:	f883 2361 	strb.w	r2, [r3, #865]	; 0x361
 800299c:	68fb      	ldr	r3, [r7, #12]
 800299e:	f893 3360 	ldrb.w	r3, [r3, #864]	; 0x360
 80029a2:	2b05      	cmp	r3, #5
 80029a4:	f000 8138 	beq.w	8002c18 <_ZN13SFE_UBLOX_GPS7processEhP9ubxPackethh+0x38c>
 80029a8:	68fb      	ldr	r3, [r7, #12]
 80029aa:	f893 3360 	ldrb.w	r3, [r3, #864]	; 0x360
 80029ae:	7aba      	ldrb	r2, [r7, #10]
 80029b0:	429a      	cmp	r2, r3
 80029b2:	d119      	bne.n	80029e8 <_ZN13SFE_UBLOX_GPS7processEhP9ubxPackethh+0x15c>
 80029b4:	68fb      	ldr	r3, [r7, #12]
 80029b6:	f893 3361 	ldrb.w	r3, [r3, #865]	; 0x361
 80029ba:	7e3a      	ldrb	r2, [r7, #24]
 80029bc:	429a      	cmp	r2, r3
 80029be:	d113      	bne.n	80029e8 <_ZN13SFE_UBLOX_GPS7processEhP9ubxPackethh+0x15c>
 80029c0:	68fb      	ldr	r3, [r7, #12]
 80029c2:	2200      	movs	r2, #0
 80029c4:	f883 2371 	strb.w	r2, [r3, #881]	; 0x371
 80029c8:	68fb      	ldr	r3, [r7, #12]
 80029ca:	f893 2360 	ldrb.w	r2, [r3, #864]	; 0x360
 80029ce:	687b      	ldr	r3, [r7, #4]
 80029d0:	701a      	strb	r2, [r3, #0]
 80029d2:	68fb      	ldr	r3, [r7, #12]
 80029d4:	f893 2361 	ldrb.w	r2, [r3, #865]	; 0x361
 80029d8:	687b      	ldr	r3, [r7, #4]
 80029da:	705a      	strb	r2, [r3, #1]
 80029dc:	68fb      	ldr	r3, [r7, #12]
 80029de:	f8b3 2364 	ldrh.w	r2, [r3, #868]	; 0x364
 80029e2:	687b      	ldr	r3, [r7, #4]
 80029e4:	809a      	strh	r2, [r3, #4]
 80029e6:	e117      	b.n	8002c18 <_ZN13SFE_UBLOX_GPS7processEhP9ubxPackethh+0x38c>
 80029e8:	68fb      	ldr	r3, [r7, #12]
 80029ea:	f893 3360 	ldrb.w	r3, [r3, #864]	; 0x360
 80029ee:	7aba      	ldrb	r2, [r7, #10]
 80029f0:	429a      	cmp	r2, r3
 80029f2:	d134      	bne.n	8002a5e <_ZN13SFE_UBLOX_GPS7processEhP9ubxPackethh+0x1d2>
 80029f4:	68fb      	ldr	r3, [r7, #12]
 80029f6:	f893 3361 	ldrb.w	r3, [r3, #865]	; 0x361
 80029fa:	2b07      	cmp	r3, #7
 80029fc:	d105      	bne.n	8002a0a <_ZN13SFE_UBLOX_GPS7processEhP9ubxPackethh+0x17e>
 80029fe:	7e3b      	ldrb	r3, [r7, #24]
 8002a00:	2b14      	cmp	r3, #20
 8002a02:	d018      	beq.n	8002a36 <_ZN13SFE_UBLOX_GPS7processEhP9ubxPackethh+0x1aa>
 8002a04:	7e3b      	ldrb	r3, [r7, #24]
 8002a06:	2b04      	cmp	r3, #4
 8002a08:	d015      	beq.n	8002a36 <_ZN13SFE_UBLOX_GPS7processEhP9ubxPackethh+0x1aa>
 8002a0a:	68fb      	ldr	r3, [r7, #12]
 8002a0c:	f893 3361 	ldrb.w	r3, [r3, #865]	; 0x361
 8002a10:	2b14      	cmp	r3, #20
 8002a12:	d105      	bne.n	8002a20 <_ZN13SFE_UBLOX_GPS7processEhP9ubxPackethh+0x194>
 8002a14:	7e3b      	ldrb	r3, [r7, #24]
 8002a16:	2b07      	cmp	r3, #7
 8002a18:	d00d      	beq.n	8002a36 <_ZN13SFE_UBLOX_GPS7processEhP9ubxPackethh+0x1aa>
 8002a1a:	7e3b      	ldrb	r3, [r7, #24]
 8002a1c:	2b04      	cmp	r3, #4
 8002a1e:	d00a      	beq.n	8002a36 <_ZN13SFE_UBLOX_GPS7processEhP9ubxPackethh+0x1aa>
 8002a20:	68fb      	ldr	r3, [r7, #12]
 8002a22:	f893 3361 	ldrb.w	r3, [r3, #865]	; 0x361
 8002a26:	2b04      	cmp	r3, #4
 8002a28:	d119      	bne.n	8002a5e <_ZN13SFE_UBLOX_GPS7processEhP9ubxPackethh+0x1d2>
 8002a2a:	7e3b      	ldrb	r3, [r7, #24]
 8002a2c:	2b07      	cmp	r3, #7
 8002a2e:	d002      	beq.n	8002a36 <_ZN13SFE_UBLOX_GPS7processEhP9ubxPackethh+0x1aa>
 8002a30:	7e3b      	ldrb	r3, [r7, #24]
 8002a32:	2b14      	cmp	r3, #20
 8002a34:	d113      	bne.n	8002a5e <_ZN13SFE_UBLOX_GPS7processEhP9ubxPackethh+0x1d2>
 8002a36:	68fb      	ldr	r3, [r7, #12]
 8002a38:	2200      	movs	r2, #0
 8002a3a:	f883 2371 	strb.w	r2, [r3, #881]	; 0x371
 8002a3e:	68fb      	ldr	r3, [r7, #12]
 8002a40:	f893 2360 	ldrb.w	r2, [r3, #864]	; 0x360
 8002a44:	687b      	ldr	r3, [r7, #4]
 8002a46:	701a      	strb	r2, [r3, #0]
 8002a48:	68fb      	ldr	r3, [r7, #12]
 8002a4a:	f893 2361 	ldrb.w	r2, [r3, #865]	; 0x361
 8002a4e:	687b      	ldr	r3, [r7, #4]
 8002a50:	705a      	strb	r2, [r3, #1]
 8002a52:	68fb      	ldr	r3, [r7, #12]
 8002a54:	f8b3 2364 	ldrh.w	r2, [r3, #868]	; 0x364
 8002a58:	687b      	ldr	r3, [r7, #4]
 8002a5a:	809a      	strh	r2, [r3, #4]
 8002a5c:	e0dc      	b.n	8002c18 <_ZN13SFE_UBLOX_GPS7processEhP9ubxPackethh+0x38c>
 8002a5e:	68fb      	ldr	r3, [r7, #12]
 8002a60:	f893 3360 	ldrb.w	r3, [r3, #864]	; 0x360
 8002a64:	7aba      	ldrb	r2, [r7, #10]
 8002a66:	429a      	cmp	r2, r3
 8002a68:	d134      	bne.n	8002ad4 <_ZN13SFE_UBLOX_GPS7processEhP9ubxPackethh+0x248>
 8002a6a:	68fb      	ldr	r3, [r7, #12]
 8002a6c:	f893 3361 	ldrb.w	r3, [r3, #865]	; 0x361
 8002a70:	2b01      	cmp	r3, #1
 8002a72:	d105      	bne.n	8002a80 <_ZN13SFE_UBLOX_GPS7processEhP9ubxPackethh+0x1f4>
 8002a74:	7e3b      	ldrb	r3, [r7, #24]
 8002a76:	2b02      	cmp	r3, #2
 8002a78:	d018      	beq.n	8002aac <_ZN13SFE_UBLOX_GPS7processEhP9ubxPackethh+0x220>
 8002a7a:	7e3b      	ldrb	r3, [r7, #24]
 8002a7c:	2b00      	cmp	r3, #0
 8002a7e:	d015      	beq.n	8002aac <_ZN13SFE_UBLOX_GPS7processEhP9ubxPackethh+0x220>
 8002a80:	68fb      	ldr	r3, [r7, #12]
 8002a82:	f893 3361 	ldrb.w	r3, [r3, #865]	; 0x361
 8002a86:	2b02      	cmp	r3, #2
 8002a88:	d105      	bne.n	8002a96 <_ZN13SFE_UBLOX_GPS7processEhP9ubxPackethh+0x20a>
 8002a8a:	7e3b      	ldrb	r3, [r7, #24]
 8002a8c:	2b01      	cmp	r3, #1
 8002a8e:	d00d      	beq.n	8002aac <_ZN13SFE_UBLOX_GPS7processEhP9ubxPackethh+0x220>
 8002a90:	7e3b      	ldrb	r3, [r7, #24]
 8002a92:	2b00      	cmp	r3, #0
 8002a94:	d00a      	beq.n	8002aac <_ZN13SFE_UBLOX_GPS7processEhP9ubxPackethh+0x220>
 8002a96:	68fb      	ldr	r3, [r7, #12]
 8002a98:	f893 3361 	ldrb.w	r3, [r3, #865]	; 0x361
 8002a9c:	2b00      	cmp	r3, #0
 8002a9e:	d119      	bne.n	8002ad4 <_ZN13SFE_UBLOX_GPS7processEhP9ubxPackethh+0x248>
 8002aa0:	7e3b      	ldrb	r3, [r7, #24]
 8002aa2:	2b01      	cmp	r3, #1
 8002aa4:	d002      	beq.n	8002aac <_ZN13SFE_UBLOX_GPS7processEhP9ubxPackethh+0x220>
 8002aa6:	7e3b      	ldrb	r3, [r7, #24]
 8002aa8:	2b02      	cmp	r3, #2
 8002aaa:	d113      	bne.n	8002ad4 <_ZN13SFE_UBLOX_GPS7processEhP9ubxPackethh+0x248>
 8002aac:	68fb      	ldr	r3, [r7, #12]
 8002aae:	2200      	movs	r2, #0
 8002ab0:	f883 2371 	strb.w	r2, [r3, #881]	; 0x371
 8002ab4:	68fb      	ldr	r3, [r7, #12]
 8002ab6:	f893 2360 	ldrb.w	r2, [r3, #864]	; 0x360
 8002aba:	687b      	ldr	r3, [r7, #4]
 8002abc:	701a      	strb	r2, [r3, #0]
 8002abe:	68fb      	ldr	r3, [r7, #12]
 8002ac0:	f893 2361 	ldrb.w	r2, [r3, #865]	; 0x361
 8002ac4:	687b      	ldr	r3, [r7, #4]
 8002ac6:	705a      	strb	r2, [r3, #1]
 8002ac8:	68fb      	ldr	r3, [r7, #12]
 8002aca:	f8b3 2364 	ldrh.w	r2, [r3, #868]	; 0x364
 8002ace:	687b      	ldr	r3, [r7, #4]
 8002ad0:	809a      	strh	r2, [r3, #4]
 8002ad2:	e0a1      	b.n	8002c18 <_ZN13SFE_UBLOX_GPS7processEhP9ubxPackethh+0x38c>
 8002ad4:	68fb      	ldr	r3, [r7, #12]
 8002ad6:	2201      	movs	r2, #1
 8002ad8:	f883 2370 	strb.w	r2, [r3, #880]	; 0x370
 8002adc:	e09c      	b.n	8002c18 <_ZN13SFE_UBLOX_GPS7processEhP9ubxPackethh+0x38c>
 8002ade:	68fb      	ldr	r3, [r7, #12]
 8002ae0:	f8b3 3384 	ldrh.w	r3, [r3, #900]	; 0x384
 8002ae4:	2b04      	cmp	r3, #4
 8002ae6:	d105      	bne.n	8002af4 <_ZN13SFE_UBLOX_GPS7processEhP9ubxPackethh+0x268>
 8002ae8:	7afb      	ldrb	r3, [r7, #11]
 8002aea:	b29a      	uxth	r2, r3
 8002aec:	68fb      	ldr	r3, [r7, #12]
 8002aee:	f8a3 2362 	strh.w	r2, [r3, #866]	; 0x362
 8002af2:	e091      	b.n	8002c18 <_ZN13SFE_UBLOX_GPS7processEhP9ubxPackethh+0x38c>
 8002af4:	68fb      	ldr	r3, [r7, #12]
 8002af6:	f8b3 3384 	ldrh.w	r3, [r3, #900]	; 0x384
 8002afa:	2b05      	cmp	r3, #5
 8002afc:	d10d      	bne.n	8002b1a <_ZN13SFE_UBLOX_GPS7processEhP9ubxPackethh+0x28e>
 8002afe:	68fb      	ldr	r3, [r7, #12]
 8002b00:	f8b3 3362 	ldrh.w	r3, [r3, #866]	; 0x362
 8002b04:	b21a      	sxth	r2, r3
 8002b06:	7afb      	ldrb	r3, [r7, #11]
 8002b08:	021b      	lsls	r3, r3, #8
 8002b0a:	b21b      	sxth	r3, r3
 8002b0c:	4313      	orrs	r3, r2
 8002b0e:	b21b      	sxth	r3, r3
 8002b10:	b29a      	uxth	r2, r3
 8002b12:	68fb      	ldr	r3, [r7, #12]
 8002b14:	f8a3 2362 	strh.w	r2, [r3, #866]	; 0x362
 8002b18:	e07e      	b.n	8002c18 <_ZN13SFE_UBLOX_GPS7processEhP9ubxPackethh+0x38c>
 8002b1a:	68fb      	ldr	r3, [r7, #12]
 8002b1c:	f8b3 3384 	ldrh.w	r3, [r3, #900]	; 0x384
 8002b20:	2b06      	cmp	r3, #6
 8002b22:	d10f      	bne.n	8002b44 <_ZN13SFE_UBLOX_GPS7processEhP9ubxPackethh+0x2b8>
 8002b24:	68fb      	ldr	r3, [r7, #12]
 8002b26:	f8b3 3362 	ldrh.w	r3, [r3, #866]	; 0x362
 8002b2a:	2b00      	cmp	r3, #0
 8002b2c:	d104      	bne.n	8002b38 <_ZN13SFE_UBLOX_GPS7processEhP9ubxPackethh+0x2ac>
 8002b2e:	68fb      	ldr	r3, [r7, #12]
 8002b30:	7afa      	ldrb	r2, [r7, #11]
 8002b32:	f883 236c 	strb.w	r2, [r3, #876]	; 0x36c
 8002b36:	e06f      	b.n	8002c18 <_ZN13SFE_UBLOX_GPS7processEhP9ubxPackethh+0x38c>
 8002b38:	68fb      	ldr	r3, [r7, #12]
 8002b3a:	f8d3 3368 	ldr.w	r3, [r3, #872]	; 0x368
 8002b3e:	7afa      	ldrb	r2, [r7, #11]
 8002b40:	701a      	strb	r2, [r3, #0]
 8002b42:	e069      	b.n	8002c18 <_ZN13SFE_UBLOX_GPS7processEhP9ubxPackethh+0x38c>
 8002b44:	68fb      	ldr	r3, [r7, #12]
 8002b46:	f8b3 3384 	ldrh.w	r3, [r3, #900]	; 0x384
 8002b4a:	2b07      	cmp	r3, #7
 8002b4c:	d164      	bne.n	8002c18 <_ZN13SFE_UBLOX_GPS7processEhP9ubxPackethh+0x38c>
 8002b4e:	68fb      	ldr	r3, [r7, #12]
 8002b50:	f8b3 3362 	ldrh.w	r3, [r3, #866]	; 0x362
 8002b54:	2b00      	cmp	r3, #0
 8002b56:	d104      	bne.n	8002b62 <_ZN13SFE_UBLOX_GPS7processEhP9ubxPackethh+0x2d6>
 8002b58:	68fb      	ldr	r3, [r7, #12]
 8002b5a:	7afa      	ldrb	r2, [r7, #11]
 8002b5c:	f883 236d 	strb.w	r2, [r3, #877]	; 0x36d
 8002b60:	e00f      	b.n	8002b82 <_ZN13SFE_UBLOX_GPS7processEhP9ubxPackethh+0x2f6>
 8002b62:	68fb      	ldr	r3, [r7, #12]
 8002b64:	f8b3 3362 	ldrh.w	r3, [r3, #866]	; 0x362
 8002b68:	2b01      	cmp	r3, #1
 8002b6a:	d104      	bne.n	8002b76 <_ZN13SFE_UBLOX_GPS7processEhP9ubxPackethh+0x2ea>
 8002b6c:	68fb      	ldr	r3, [r7, #12]
 8002b6e:	7afa      	ldrb	r2, [r7, #11]
 8002b70:	f883 236c 	strb.w	r2, [r3, #876]	; 0x36c
 8002b74:	e005      	b.n	8002b82 <_ZN13SFE_UBLOX_GPS7processEhP9ubxPackethh+0x2f6>
 8002b76:	68fb      	ldr	r3, [r7, #12]
 8002b78:	f8d3 3368 	ldr.w	r3, [r3, #872]	; 0x368
 8002b7c:	3301      	adds	r3, #1
 8002b7e:	7afa      	ldrb	r2, [r7, #11]
 8002b80:	701a      	strb	r2, [r3, #0]
 8002b82:	68fb      	ldr	r3, [r7, #12]
 8002b84:	f893 3371 	ldrb.w	r3, [r3, #881]	; 0x371
 8002b88:	2b02      	cmp	r3, #2
 8002b8a:	d145      	bne.n	8002c18 <_ZN13SFE_UBLOX_GPS7processEhP9ubxPackethh+0x38c>
 8002b8c:	68fb      	ldr	r3, [r7, #12]
 8002b8e:	f893 3360 	ldrb.w	r3, [r3, #864]	; 0x360
 8002b92:	2b05      	cmp	r3, #5
 8002b94:	d140      	bne.n	8002c18 <_ZN13SFE_UBLOX_GPS7processEhP9ubxPackethh+0x38c>
 8002b96:	68fb      	ldr	r3, [r7, #12]
 8002b98:	f8d3 3368 	ldr.w	r3, [r3, #872]	; 0x368
 8002b9c:	781b      	ldrb	r3, [r3, #0]
 8002b9e:	7aba      	ldrb	r2, [r7, #10]
 8002ba0:	429a      	cmp	r2, r3
 8002ba2:	d139      	bne.n	8002c18 <_ZN13SFE_UBLOX_GPS7processEhP9ubxPackethh+0x38c>
 8002ba4:	68fb      	ldr	r3, [r7, #12]
 8002ba6:	f8d3 3368 	ldr.w	r3, [r3, #872]	; 0x368
 8002baa:	3301      	adds	r3, #1
 8002bac:	781b      	ldrb	r3, [r3, #0]
 8002bae:	7e3a      	ldrb	r2, [r7, #24]
 8002bb0:	429a      	cmp	r2, r3
 8002bb2:	d131      	bne.n	8002c18 <_ZN13SFE_UBLOX_GPS7processEhP9ubxPackethh+0x38c>
 8002bb4:	68fb      	ldr	r3, [r7, #12]
 8002bb6:	f8b3 3362 	ldrh.w	r3, [r3, #866]	; 0x362
 8002bba:	2b02      	cmp	r3, #2
 8002bbc:	d12c      	bne.n	8002c18 <_ZN13SFE_UBLOX_GPS7processEhP9ubxPackethh+0x38c>
 8002bbe:	68fb      	ldr	r3, [r7, #12]
 8002bc0:	2201      	movs	r2, #1
 8002bc2:	f883 2371 	strb.w	r2, [r3, #881]	; 0x371
 8002bc6:	68fb      	ldr	r3, [r7, #12]
 8002bc8:	f893 2360 	ldrb.w	r2, [r3, #864]	; 0x360
 8002bcc:	68fb      	ldr	r3, [r7, #12]
 8002bce:	f883 2340 	strb.w	r2, [r3, #832]	; 0x340
 8002bd2:	68fb      	ldr	r3, [r7, #12]
 8002bd4:	f893 2361 	ldrb.w	r2, [r3, #865]	; 0x361
 8002bd8:	68fb      	ldr	r3, [r7, #12]
 8002bda:	f883 2341 	strb.w	r2, [r3, #833]	; 0x341
 8002bde:	68fb      	ldr	r3, [r7, #12]
 8002be0:	f8b3 2362 	ldrh.w	r2, [r3, #866]	; 0x362
 8002be4:	68fb      	ldr	r3, [r7, #12]
 8002be6:	f8a3 2342 	strh.w	r2, [r3, #834]	; 0x342
 8002bea:	68fb      	ldr	r3, [r7, #12]
 8002bec:	f8b3 2364 	ldrh.w	r2, [r3, #868]	; 0x364
 8002bf0:	68fb      	ldr	r3, [r7, #12]
 8002bf2:	f8a3 2344 	strh.w	r2, [r3, #836]	; 0x344
 8002bf6:	68fb      	ldr	r3, [r7, #12]
 8002bf8:	f8d3 2368 	ldr.w	r2, [r3, #872]	; 0x368
 8002bfc:	68fb      	ldr	r3, [r7, #12]
 8002bfe:	f8d3 3348 	ldr.w	r3, [r3, #840]	; 0x348
 8002c02:	7812      	ldrb	r2, [r2, #0]
 8002c04:	701a      	strb	r2, [r3, #0]
 8002c06:	68fb      	ldr	r3, [r7, #12]
 8002c08:	f8d3 2368 	ldr.w	r2, [r3, #872]	; 0x368
 8002c0c:	68fb      	ldr	r3, [r7, #12]
 8002c0e:	f8d3 3348 	ldr.w	r3, [r3, #840]	; 0x348
 8002c12:	3301      	adds	r3, #1
 8002c14:	7852      	ldrb	r2, [r2, #1]
 8002c16:	701a      	strb	r2, [r3, #0]
 8002c18:	68fb      	ldr	r3, [r7, #12]
 8002c1a:	f893 3371 	ldrb.w	r3, [r3, #881]	; 0x371
 8002c1e:	2b01      	cmp	r3, #1
 8002c20:	d10b      	bne.n	8002c3a <_ZN13SFE_UBLOX_GPS7processEhP9ubxPackethh+0x3ae>
 8002c22:	68fb      	ldr	r3, [r7, #12]
 8002c24:	f503 7250 	add.w	r2, r3, #832	; 0x340
 8002c28:	7ab8      	ldrb	r0, [r7, #10]
 8002c2a:	7af9      	ldrb	r1, [r7, #11]
 8002c2c:	7e3b      	ldrb	r3, [r7, #24]
 8002c2e:	9300      	str	r3, [sp, #0]
 8002c30:	4603      	mov	r3, r0
 8002c32:	68f8      	ldr	r0, [r7, #12]
 8002c34:	f000 f89c 	bl	8002d70 <_ZN13SFE_UBLOX_GPS10processUBXEhP9ubxPackethh>
 8002c38:	e019      	b.n	8002c6e <_ZN13SFE_UBLOX_GPS7processEhP9ubxPackethh+0x3e2>
 8002c3a:	68fb      	ldr	r3, [r7, #12]
 8002c3c:	f893 3371 	ldrb.w	r3, [r3, #881]	; 0x371
 8002c40:	2b00      	cmp	r3, #0
 8002c42:	d109      	bne.n	8002c58 <_ZN13SFE_UBLOX_GPS7processEhP9ubxPackethh+0x3cc>
 8002c44:	7aba      	ldrb	r2, [r7, #10]
 8002c46:	7af9      	ldrb	r1, [r7, #11]
 8002c48:	7e3b      	ldrb	r3, [r7, #24]
 8002c4a:	9300      	str	r3, [sp, #0]
 8002c4c:	4613      	mov	r3, r2
 8002c4e:	687a      	ldr	r2, [r7, #4]
 8002c50:	68f8      	ldr	r0, [r7, #12]
 8002c52:	f000 f88d 	bl	8002d70 <_ZN13SFE_UBLOX_GPS10processUBXEhP9ubxPackethh>
 8002c56:	e00a      	b.n	8002c6e <_ZN13SFE_UBLOX_GPS7processEhP9ubxPackethh+0x3e2>
 8002c58:	68fb      	ldr	r3, [r7, #12]
 8002c5a:	f503 7258 	add.w	r2, r3, #864	; 0x360
 8002c5e:	7ab8      	ldrb	r0, [r7, #10]
 8002c60:	7af9      	ldrb	r1, [r7, #11]
 8002c62:	7e3b      	ldrb	r3, [r7, #24]
 8002c64:	9300      	str	r3, [sp, #0]
 8002c66:	4603      	mov	r3, r0
 8002c68:	68f8      	ldr	r0, [r7, #12]
 8002c6a:	f000 f881 	bl	8002d70 <_ZN13SFE_UBLOX_GPS10processUBXEhP9ubxPackethh>
 8002c6e:	68fb      	ldr	r3, [r7, #12]
 8002c70:	f8b3 3384 	ldrh.w	r3, [r3, #900]	; 0x384
 8002c74:	3301      	adds	r3, #1
 8002c76:	b29a      	uxth	r2, r3
 8002c78:	68fb      	ldr	r3, [r7, #12]
 8002c7a:	f8a3 2384 	strh.w	r2, [r3, #900]	; 0x384
 8002c7e:	e014      	b.n	8002caa <_ZN13SFE_UBLOX_GPS7processEhP9ubxPackethh+0x41e>
 8002c80:	68fb      	ldr	r3, [r7, #12]
 8002c82:	f893 3234 	ldrb.w	r3, [r3, #564]	; 0x234
 8002c86:	2b01      	cmp	r3, #1
 8002c88:	d105      	bne.n	8002c96 <_ZN13SFE_UBLOX_GPS7processEhP9ubxPackethh+0x40a>
 8002c8a:	7afb      	ldrb	r3, [r7, #11]
 8002c8c:	4619      	mov	r1, r3
 8002c8e:	68f8      	ldr	r0, [r7, #12]
 8002c90:	f000 f80f 	bl	8002cb2 <_ZN13SFE_UBLOX_GPS11processNMEAEc>
 8002c94:	e009      	b.n	8002caa <_ZN13SFE_UBLOX_GPS7processEhP9ubxPackethh+0x41e>
 8002c96:	68fb      	ldr	r3, [r7, #12]
 8002c98:	f893 3234 	ldrb.w	r3, [r3, #564]	; 0x234
 8002c9c:	2b03      	cmp	r3, #3
 8002c9e:	d104      	bne.n	8002caa <_ZN13SFE_UBLOX_GPS7processEhP9ubxPackethh+0x41e>
 8002ca0:	7afb      	ldrb	r3, [r7, #11]
 8002ca2:	4619      	mov	r1, r3
 8002ca4:	68f8      	ldr	r0, [r7, #12]
 8002ca6:	f000 f80f 	bl	8002cc8 <_ZN13SFE_UBLOX_GPS16processRTCMframeEh>
 8002caa:	bf00      	nop
 8002cac:	3710      	adds	r7, #16
 8002cae:	46bd      	mov	sp, r7
 8002cb0:	bd80      	pop	{r7, pc}

08002cb2 <_ZN13SFE_UBLOX_GPS11processNMEAEc>:
 8002cb2:	b480      	push	{r7}
 8002cb4:	b083      	sub	sp, #12
 8002cb6:	af00      	add	r7, sp, #0
 8002cb8:	6078      	str	r0, [r7, #4]
 8002cba:	460b      	mov	r3, r1
 8002cbc:	70fb      	strb	r3, [r7, #3]
 8002cbe:	bf00      	nop
 8002cc0:	370c      	adds	r7, #12
 8002cc2:	46bd      	mov	sp, r7
 8002cc4:	bc80      	pop	{r7}
 8002cc6:	4770      	bx	lr

08002cc8 <_ZN13SFE_UBLOX_GPS16processRTCMframeEh>:
 8002cc8:	b580      	push	{r7, lr}
 8002cca:	b082      	sub	sp, #8
 8002ccc:	af00      	add	r7, sp, #0
 8002cce:	6078      	str	r0, [r7, #4]
 8002cd0:	460b      	mov	r3, r1
 8002cd2:	70fb      	strb	r3, [r7, #3]
 8002cd4:	687b      	ldr	r3, [r7, #4]
 8002cd6:	f8b3 30f4 	ldrh.w	r3, [r3, #244]	; 0xf4
 8002cda:	2b01      	cmp	r3, #1
 8002cdc:	d109      	bne.n	8002cf2 <_ZN13SFE_UBLOX_GPS16processRTCMframeEh+0x2a>
 8002cde:	78fb      	ldrb	r3, [r7, #3]
 8002ce0:	021b      	lsls	r3, r3, #8
 8002ce2:	b29b      	uxth	r3, r3
 8002ce4:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8002ce8:	b29a      	uxth	r2, r3
 8002cea:	687b      	ldr	r3, [r7, #4]
 8002cec:	f8a3 2398 	strh.w	r2, [r3, #920]	; 0x398
 8002cf0:	e016      	b.n	8002d20 <_ZN13SFE_UBLOX_GPS16processRTCMframeEh+0x58>
 8002cf2:	687b      	ldr	r3, [r7, #4]
 8002cf4:	f8b3 30f4 	ldrh.w	r3, [r3, #244]	; 0xf4
 8002cf8:	2b02      	cmp	r3, #2
 8002cfa:	d111      	bne.n	8002d20 <_ZN13SFE_UBLOX_GPS16processRTCMframeEh+0x58>
 8002cfc:	687b      	ldr	r3, [r7, #4]
 8002cfe:	f8b3 2398 	ldrh.w	r2, [r3, #920]	; 0x398
 8002d02:	78fb      	ldrb	r3, [r7, #3]
 8002d04:	b29b      	uxth	r3, r3
 8002d06:	4313      	orrs	r3, r2
 8002d08:	b29a      	uxth	r2, r3
 8002d0a:	687b      	ldr	r3, [r7, #4]
 8002d0c:	f8a3 2398 	strh.w	r2, [r3, #920]	; 0x398
 8002d10:	687b      	ldr	r3, [r7, #4]
 8002d12:	f8b3 3398 	ldrh.w	r3, [r3, #920]	; 0x398
 8002d16:	3306      	adds	r3, #6
 8002d18:	b29a      	uxth	r2, r3
 8002d1a:	687b      	ldr	r3, [r7, #4]
 8002d1c:	f8a3 2398 	strh.w	r2, [r3, #920]	; 0x398
 8002d20:	687b      	ldr	r3, [r7, #4]
 8002d22:	f8b3 30f4 	ldrh.w	r3, [r3, #244]	; 0xf4
 8002d26:	3301      	adds	r3, #1
 8002d28:	b29a      	uxth	r2, r3
 8002d2a:	687b      	ldr	r3, [r7, #4]
 8002d2c:	f8a3 20f4 	strh.w	r2, [r3, #244]	; 0xf4
 8002d30:	78fb      	ldrb	r3, [r7, #3]
 8002d32:	4619      	mov	r1, r3
 8002d34:	6878      	ldr	r0, [r7, #4]
 8002d36:	f000 f810 	bl	8002d5a <_ZN13SFE_UBLOX_GPS11processRTCMEh>
 8002d3a:	687b      	ldr	r3, [r7, #4]
 8002d3c:	f8b3 20f4 	ldrh.w	r2, [r3, #244]	; 0xf4
 8002d40:	687b      	ldr	r3, [r7, #4]
 8002d42:	f8b3 3398 	ldrh.w	r3, [r3, #920]	; 0x398
 8002d46:	429a      	cmp	r2, r3
 8002d48:	d103      	bne.n	8002d52 <_ZN13SFE_UBLOX_GPS16processRTCMframeEh+0x8a>
 8002d4a:	687b      	ldr	r3, [r7, #4]
 8002d4c:	2200      	movs	r2, #0
 8002d4e:	f883 2234 	strb.w	r2, [r3, #564]	; 0x234
 8002d52:	bf00      	nop
 8002d54:	3708      	adds	r7, #8
 8002d56:	46bd      	mov	sp, r7
 8002d58:	bd80      	pop	{r7, pc}

08002d5a <_ZN13SFE_UBLOX_GPS11processRTCMEh>:
 8002d5a:	b480      	push	{r7}
 8002d5c:	b083      	sub	sp, #12
 8002d5e:	af00      	add	r7, sp, #0
 8002d60:	6078      	str	r0, [r7, #4]
 8002d62:	460b      	mov	r3, r1
 8002d64:	70fb      	strb	r3, [r7, #3]
 8002d66:	bf00      	nop
 8002d68:	370c      	adds	r7, #12
 8002d6a:	46bd      	mov	sp, r7
 8002d6c:	bc80      	pop	{r7}
 8002d6e:	4770      	bx	lr

08002d70 <_ZN13SFE_UBLOX_GPS10processUBXEhP9ubxPackethh>:
 8002d70:	b580      	push	{r7, lr}
 8002d72:	b086      	sub	sp, #24
 8002d74:	af00      	add	r7, sp, #0
 8002d76:	60f8      	str	r0, [r7, #12]
 8002d78:	607a      	str	r2, [r7, #4]
 8002d7a:	461a      	mov	r2, r3
 8002d7c:	460b      	mov	r3, r1
 8002d7e:	72fb      	strb	r3, [r7, #11]
 8002d80:	4613      	mov	r3, r2
 8002d82:	72bb      	strb	r3, [r7, #10]
 8002d84:	68fb      	ldr	r3, [r7, #12]
 8002d86:	f893 3371 	ldrb.w	r3, [r3, #881]	; 0x371
 8002d8a:	2b00      	cmp	r3, #0
 8002d8c:	d102      	bne.n	8002d94 <_ZN13SFE_UBLOX_GPS10processUBXEhP9ubxPackethh+0x24>
 8002d8e:	f44f 7380 	mov.w	r3, #256	; 0x100
 8002d92:	e000      	b.n	8002d96 <_ZN13SFE_UBLOX_GPS10processUBXEhP9ubxPackethh+0x26>
 8002d94:	2302      	movs	r3, #2
 8002d96:	613b      	str	r3, [r7, #16]
 8002d98:	2300      	movs	r3, #0
 8002d9a:	75fb      	strb	r3, [r7, #23]
 8002d9c:	687b      	ldr	r3, [r7, #4]
 8002d9e:	885b      	ldrh	r3, [r3, #2]
 8002da0:	3303      	adds	r3, #3
 8002da2:	687a      	ldr	r2, [r7, #4]
 8002da4:	8892      	ldrh	r2, [r2, #4]
 8002da6:	4293      	cmp	r3, r2
 8002da8:	db04      	blt.n	8002db4 <_ZN13SFE_UBLOX_GPS10processUBXEhP9ubxPackethh+0x44>
 8002daa:	7afb      	ldrb	r3, [r7, #11]
 8002dac:	4619      	mov	r1, r3
 8002dae:	68f8      	ldr	r0, [r7, #12]
 8002db0:	f001 f8f7 	bl	8003fa2 <_ZN13SFE_UBLOX_GPS13addToChecksumEh>
 8002db4:	687b      	ldr	r3, [r7, #4]
 8002db6:	889b      	ldrh	r3, [r3, #4]
 8002db8:	2b00      	cmp	r3, #0
 8002dba:	d103      	bne.n	8002dc4 <_ZN13SFE_UBLOX_GPS10processUBXEhP9ubxPackethh+0x54>
 8002dbc:	687b      	ldr	r3, [r7, #4]
 8002dbe:	7afa      	ldrb	r2, [r7, #11]
 8002dc0:	701a      	strb	r2, [r3, #0]
 8002dc2:	e15e      	b.n	8003082 <_ZN13SFE_UBLOX_GPS10processUBXEhP9ubxPackethh+0x312>
 8002dc4:	687b      	ldr	r3, [r7, #4]
 8002dc6:	889b      	ldrh	r3, [r3, #4]
 8002dc8:	2b01      	cmp	r3, #1
 8002dca:	d103      	bne.n	8002dd4 <_ZN13SFE_UBLOX_GPS10processUBXEhP9ubxPackethh+0x64>
 8002dcc:	687b      	ldr	r3, [r7, #4]
 8002dce:	7afa      	ldrb	r2, [r7, #11]
 8002dd0:	705a      	strb	r2, [r3, #1]
 8002dd2:	e156      	b.n	8003082 <_ZN13SFE_UBLOX_GPS10processUBXEhP9ubxPackethh+0x312>
 8002dd4:	687b      	ldr	r3, [r7, #4]
 8002dd6:	889b      	ldrh	r3, [r3, #4]
 8002dd8:	2b02      	cmp	r3, #2
 8002dda:	d104      	bne.n	8002de6 <_ZN13SFE_UBLOX_GPS10processUBXEhP9ubxPackethh+0x76>
 8002ddc:	7afb      	ldrb	r3, [r7, #11]
 8002dde:	b29a      	uxth	r2, r3
 8002de0:	687b      	ldr	r3, [r7, #4]
 8002de2:	805a      	strh	r2, [r3, #2]
 8002de4:	e14d      	b.n	8003082 <_ZN13SFE_UBLOX_GPS10processUBXEhP9ubxPackethh+0x312>
 8002de6:	687b      	ldr	r3, [r7, #4]
 8002de8:	889b      	ldrh	r3, [r3, #4]
 8002dea:	2b03      	cmp	r3, #3
 8002dec:	d10b      	bne.n	8002e06 <_ZN13SFE_UBLOX_GPS10processUBXEhP9ubxPackethh+0x96>
 8002dee:	687b      	ldr	r3, [r7, #4]
 8002df0:	885b      	ldrh	r3, [r3, #2]
 8002df2:	b21a      	sxth	r2, r3
 8002df4:	7afb      	ldrb	r3, [r7, #11]
 8002df6:	021b      	lsls	r3, r3, #8
 8002df8:	b21b      	sxth	r3, r3
 8002dfa:	4313      	orrs	r3, r2
 8002dfc:	b21b      	sxth	r3, r3
 8002dfe:	b29a      	uxth	r2, r3
 8002e00:	687b      	ldr	r3, [r7, #4]
 8002e02:	805a      	strh	r2, [r3, #2]
 8002e04:	e13d      	b.n	8003082 <_ZN13SFE_UBLOX_GPS10processUBXEhP9ubxPackethh+0x312>
 8002e06:	687b      	ldr	r3, [r7, #4]
 8002e08:	889b      	ldrh	r3, [r3, #4]
 8002e0a:	461a      	mov	r2, r3
 8002e0c:	687b      	ldr	r3, [r7, #4]
 8002e0e:	885b      	ldrh	r3, [r3, #2]
 8002e10:	3304      	adds	r3, #4
 8002e12:	429a      	cmp	r2, r3
 8002e14:	d103      	bne.n	8002e1e <_ZN13SFE_UBLOX_GPS10processUBXEhP9ubxPackethh+0xae>
 8002e16:	687b      	ldr	r3, [r7, #4]
 8002e18:	7afa      	ldrb	r2, [r7, #11]
 8002e1a:	731a      	strb	r2, [r3, #12]
 8002e1c:	e131      	b.n	8003082 <_ZN13SFE_UBLOX_GPS10processUBXEhP9ubxPackethh+0x312>
 8002e1e:	687b      	ldr	r3, [r7, #4]
 8002e20:	889b      	ldrh	r3, [r3, #4]
 8002e22:	461a      	mov	r2, r3
 8002e24:	687b      	ldr	r3, [r7, #4]
 8002e26:	885b      	ldrh	r3, [r3, #2]
 8002e28:	3305      	adds	r3, #5
 8002e2a:	429a      	cmp	r2, r3
 8002e2c:	f040 80fb 	bne.w	8003026 <_ZN13SFE_UBLOX_GPS10processUBXEhP9ubxPackethh+0x2b6>
 8002e30:	687b      	ldr	r3, [r7, #4]
 8002e32:	7afa      	ldrb	r2, [r7, #11]
 8002e34:	735a      	strb	r2, [r3, #13]
 8002e36:	68fb      	ldr	r3, [r7, #12]
 8002e38:	2200      	movs	r2, #0
 8002e3a:	f883 2234 	strb.w	r2, [r3, #564]	; 0x234
 8002e3e:	687b      	ldr	r3, [r7, #4]
 8002e40:	7b1a      	ldrb	r2, [r3, #12]
 8002e42:	68fb      	ldr	r3, [r7, #12]
 8002e44:	f893 3386 	ldrb.w	r3, [r3, #902]	; 0x386
 8002e48:	429a      	cmp	r2, r3
 8002e4a:	f040 80b6 	bne.w	8002fba <_ZN13SFE_UBLOX_GPS10processUBXEhP9ubxPackethh+0x24a>
 8002e4e:	687b      	ldr	r3, [r7, #4]
 8002e50:	7b5a      	ldrb	r2, [r3, #13]
 8002e52:	68fb      	ldr	r3, [r7, #12]
 8002e54:	f893 3387 	ldrb.w	r3, [r3, #903]	; 0x387
 8002e58:	429a      	cmp	r2, r3
 8002e5a:	f040 80ae 	bne.w	8002fba <_ZN13SFE_UBLOX_GPS10processUBXEhP9ubxPackethh+0x24a>
 8002e5e:	687b      	ldr	r3, [r7, #4]
 8002e60:	2201      	movs	r2, #1
 8002e62:	739a      	strb	r2, [r3, #14]
 8002e64:	687b      	ldr	r3, [r7, #4]
 8002e66:	781b      	ldrb	r3, [r3, #0]
 8002e68:	7aba      	ldrb	r2, [r7, #10]
 8002e6a:	429a      	cmp	r2, r3
 8002e6c:	d109      	bne.n	8002e82 <_ZN13SFE_UBLOX_GPS10processUBXEhP9ubxPackethh+0x112>
 8002e6e:	687b      	ldr	r3, [r7, #4]
 8002e70:	785b      	ldrb	r3, [r3, #1]
 8002e72:	f897 2020 	ldrb.w	r2, [r7, #32]
 8002e76:	429a      	cmp	r2, r3
 8002e78:	d103      	bne.n	8002e82 <_ZN13SFE_UBLOX_GPS10processUBXEhP9ubxPackethh+0x112>
 8002e7a:	687b      	ldr	r3, [r7, #4]
 8002e7c:	2201      	movs	r2, #1
 8002e7e:	73da      	strb	r2, [r3, #15]
 8002e80:	e088      	b.n	8002f94 <_ZN13SFE_UBLOX_GPS10processUBXEhP9ubxPackethh+0x224>
 8002e82:	687b      	ldr	r3, [r7, #4]
 8002e84:	781b      	ldrb	r3, [r3, #0]
 8002e86:	2b05      	cmp	r3, #5
 8002e88:	d115      	bne.n	8002eb6 <_ZN13SFE_UBLOX_GPS10processUBXEhP9ubxPackethh+0x146>
 8002e8a:	687b      	ldr	r3, [r7, #4]
 8002e8c:	785b      	ldrb	r3, [r3, #1]
 8002e8e:	2b01      	cmp	r3, #1
 8002e90:	d111      	bne.n	8002eb6 <_ZN13SFE_UBLOX_GPS10processUBXEhP9ubxPackethh+0x146>
 8002e92:	687b      	ldr	r3, [r7, #4]
 8002e94:	689b      	ldr	r3, [r3, #8]
 8002e96:	781b      	ldrb	r3, [r3, #0]
 8002e98:	7aba      	ldrb	r2, [r7, #10]
 8002e9a:	429a      	cmp	r2, r3
 8002e9c:	d10b      	bne.n	8002eb6 <_ZN13SFE_UBLOX_GPS10processUBXEhP9ubxPackethh+0x146>
 8002e9e:	687b      	ldr	r3, [r7, #4]
 8002ea0:	689b      	ldr	r3, [r3, #8]
 8002ea2:	3301      	adds	r3, #1
 8002ea4:	781b      	ldrb	r3, [r3, #0]
 8002ea6:	f897 2020 	ldrb.w	r2, [r7, #32]
 8002eaa:	429a      	cmp	r2, r3
 8002eac:	d103      	bne.n	8002eb6 <_ZN13SFE_UBLOX_GPS10processUBXEhP9ubxPackethh+0x146>
 8002eae:	687b      	ldr	r3, [r7, #4]
 8002eb0:	2201      	movs	r2, #1
 8002eb2:	73da      	strb	r2, [r3, #15]
 8002eb4:	e06e      	b.n	8002f94 <_ZN13SFE_UBLOX_GPS10processUBXEhP9ubxPackethh+0x224>
 8002eb6:	687b      	ldr	r3, [r7, #4]
 8002eb8:	781b      	ldrb	r3, [r3, #0]
 8002eba:	2b05      	cmp	r3, #5
 8002ebc:	d115      	bne.n	8002eea <_ZN13SFE_UBLOX_GPS10processUBXEhP9ubxPackethh+0x17a>
 8002ebe:	687b      	ldr	r3, [r7, #4]
 8002ec0:	785b      	ldrb	r3, [r3, #1]
 8002ec2:	2b00      	cmp	r3, #0
 8002ec4:	d111      	bne.n	8002eea <_ZN13SFE_UBLOX_GPS10processUBXEhP9ubxPackethh+0x17a>
 8002ec6:	687b      	ldr	r3, [r7, #4]
 8002ec8:	689b      	ldr	r3, [r3, #8]
 8002eca:	781b      	ldrb	r3, [r3, #0]
 8002ecc:	7aba      	ldrb	r2, [r7, #10]
 8002ece:	429a      	cmp	r2, r3
 8002ed0:	d10b      	bne.n	8002eea <_ZN13SFE_UBLOX_GPS10processUBXEhP9ubxPackethh+0x17a>
 8002ed2:	687b      	ldr	r3, [r7, #4]
 8002ed4:	689b      	ldr	r3, [r3, #8]
 8002ed6:	3301      	adds	r3, #1
 8002ed8:	781b      	ldrb	r3, [r3, #0]
 8002eda:	f897 2020 	ldrb.w	r2, [r7, #32]
 8002ede:	429a      	cmp	r2, r3
 8002ee0:	d103      	bne.n	8002eea <_ZN13SFE_UBLOX_GPS10processUBXEhP9ubxPackethh+0x17a>
 8002ee2:	687b      	ldr	r3, [r7, #4]
 8002ee4:	2203      	movs	r2, #3
 8002ee6:	73da      	strb	r2, [r3, #15]
 8002ee8:	e054      	b.n	8002f94 <_ZN13SFE_UBLOX_GPS10processUBXEhP9ubxPackethh+0x224>
 8002eea:	687b      	ldr	r3, [r7, #4]
 8002eec:	781b      	ldrb	r3, [r3, #0]
 8002eee:	7aba      	ldrb	r2, [r7, #10]
 8002ef0:	429a      	cmp	r2, r3
 8002ef2:	d123      	bne.n	8002f3c <_ZN13SFE_UBLOX_GPS10processUBXEhP9ubxPackethh+0x1cc>
 8002ef4:	687b      	ldr	r3, [r7, #4]
 8002ef6:	785b      	ldrb	r3, [r3, #1]
 8002ef8:	2b07      	cmp	r3, #7
 8002efa:	d107      	bne.n	8002f0c <_ZN13SFE_UBLOX_GPS10processUBXEhP9ubxPackethh+0x19c>
 8002efc:	f897 3020 	ldrb.w	r3, [r7, #32]
 8002f00:	2b14      	cmp	r3, #20
 8002f02:	d044      	beq.n	8002f8e <_ZN13SFE_UBLOX_GPS10processUBXEhP9ubxPackethh+0x21e>
 8002f04:	f897 3020 	ldrb.w	r3, [r7, #32]
 8002f08:	2b04      	cmp	r3, #4
 8002f0a:	d040      	beq.n	8002f8e <_ZN13SFE_UBLOX_GPS10processUBXEhP9ubxPackethh+0x21e>
 8002f0c:	687b      	ldr	r3, [r7, #4]
 8002f0e:	785b      	ldrb	r3, [r3, #1]
 8002f10:	2b14      	cmp	r3, #20
 8002f12:	d107      	bne.n	8002f24 <_ZN13SFE_UBLOX_GPS10processUBXEhP9ubxPackethh+0x1b4>
 8002f14:	f897 3020 	ldrb.w	r3, [r7, #32]
 8002f18:	2b07      	cmp	r3, #7
 8002f1a:	d038      	beq.n	8002f8e <_ZN13SFE_UBLOX_GPS10processUBXEhP9ubxPackethh+0x21e>
 8002f1c:	f897 3020 	ldrb.w	r3, [r7, #32]
 8002f20:	2b04      	cmp	r3, #4
 8002f22:	d034      	beq.n	8002f8e <_ZN13SFE_UBLOX_GPS10processUBXEhP9ubxPackethh+0x21e>
 8002f24:	687b      	ldr	r3, [r7, #4]
 8002f26:	785b      	ldrb	r3, [r3, #1]
 8002f28:	2b04      	cmp	r3, #4
 8002f2a:	d107      	bne.n	8002f3c <_ZN13SFE_UBLOX_GPS10processUBXEhP9ubxPackethh+0x1cc>
 8002f2c:	f897 3020 	ldrb.w	r3, [r7, #32]
 8002f30:	2b07      	cmp	r3, #7
 8002f32:	d02c      	beq.n	8002f8e <_ZN13SFE_UBLOX_GPS10processUBXEhP9ubxPackethh+0x21e>
 8002f34:	f897 3020 	ldrb.w	r3, [r7, #32]
 8002f38:	2b14      	cmp	r3, #20
 8002f3a:	d028      	beq.n	8002f8e <_ZN13SFE_UBLOX_GPS10processUBXEhP9ubxPackethh+0x21e>
 8002f3c:	687b      	ldr	r3, [r7, #4]
 8002f3e:	781b      	ldrb	r3, [r3, #0]
 8002f40:	7aba      	ldrb	r2, [r7, #10]
 8002f42:	429a      	cmp	r2, r3
 8002f44:	d126      	bne.n	8002f94 <_ZN13SFE_UBLOX_GPS10processUBXEhP9ubxPackethh+0x224>
 8002f46:	687b      	ldr	r3, [r7, #4]
 8002f48:	785b      	ldrb	r3, [r3, #1]
 8002f4a:	2b01      	cmp	r3, #1
 8002f4c:	d107      	bne.n	8002f5e <_ZN13SFE_UBLOX_GPS10processUBXEhP9ubxPackethh+0x1ee>
 8002f4e:	f897 3020 	ldrb.w	r3, [r7, #32]
 8002f52:	2b02      	cmp	r3, #2
 8002f54:	d01d      	beq.n	8002f92 <_ZN13SFE_UBLOX_GPS10processUBXEhP9ubxPackethh+0x222>
 8002f56:	f897 3020 	ldrb.w	r3, [r7, #32]
 8002f5a:	2b00      	cmp	r3, #0
 8002f5c:	d019      	beq.n	8002f92 <_ZN13SFE_UBLOX_GPS10processUBXEhP9ubxPackethh+0x222>
 8002f5e:	687b      	ldr	r3, [r7, #4]
 8002f60:	785b      	ldrb	r3, [r3, #1]
 8002f62:	2b02      	cmp	r3, #2
 8002f64:	d107      	bne.n	8002f76 <_ZN13SFE_UBLOX_GPS10processUBXEhP9ubxPackethh+0x206>
 8002f66:	f897 3020 	ldrb.w	r3, [r7, #32]
 8002f6a:	2b01      	cmp	r3, #1
 8002f6c:	d011      	beq.n	8002f92 <_ZN13SFE_UBLOX_GPS10processUBXEhP9ubxPackethh+0x222>
 8002f6e:	f897 3020 	ldrb.w	r3, [r7, #32]
 8002f72:	2b00      	cmp	r3, #0
 8002f74:	d00d      	beq.n	8002f92 <_ZN13SFE_UBLOX_GPS10processUBXEhP9ubxPackethh+0x222>
 8002f76:	687b      	ldr	r3, [r7, #4]
 8002f78:	785b      	ldrb	r3, [r3, #1]
 8002f7a:	2b00      	cmp	r3, #0
 8002f7c:	d10a      	bne.n	8002f94 <_ZN13SFE_UBLOX_GPS10processUBXEhP9ubxPackethh+0x224>
 8002f7e:	f897 3020 	ldrb.w	r3, [r7, #32]
 8002f82:	2b01      	cmp	r3, #1
 8002f84:	d006      	beq.n	8002f94 <_ZN13SFE_UBLOX_GPS10processUBXEhP9ubxPackethh+0x224>
 8002f86:	f897 3020 	ldrb.w	r3, [r7, #32]
 8002f8a:	2b02      	cmp	r3, #2
 8002f8c:	e002      	b.n	8002f94 <_ZN13SFE_UBLOX_GPS10processUBXEhP9ubxPackethh+0x224>
 8002f8e:	bf00      	nop
 8002f90:	e000      	b.n	8002f94 <_ZN13SFE_UBLOX_GPS10processUBXEhP9ubxPackethh+0x224>
 8002f92:	bf00      	nop
 8002f94:	68fb      	ldr	r3, [r7, #12]
 8002f96:	f893 3238 	ldrb.w	r3, [r3, #568]	; 0x238
 8002f9a:	2b01      	cmp	r3, #1
 8002f9c:	d103      	bne.n	8002fa6 <_ZN13SFE_UBLOX_GPS10processUBXEhP9ubxPackethh+0x236>
 8002f9e:	6879      	ldr	r1, [r7, #4]
 8002fa0:	68f8      	ldr	r0, [r7, #12]
 8002fa2:	f001 f81d 	bl	8003fe0 <_ZN13SFE_UBLOX_GPS11printPacketEP9ubxPacket>
 8002fa6:	68fb      	ldr	r3, [r7, #12]
 8002fa8:	f893 3370 	ldrb.w	r3, [r3, #880]	; 0x370
 8002fac:	2b00      	cmp	r3, #0
 8002fae:	d168      	bne.n	8003082 <_ZN13SFE_UBLOX_GPS10processUBXEhP9ubxPackethh+0x312>
 8002fb0:	6879      	ldr	r1, [r7, #4]
 8002fb2:	68f8      	ldr	r0, [r7, #12]
 8002fb4:	f000 f880 	bl	80030b8 <_ZN13SFE_UBLOX_GPS16processUBXpacketEP9ubxPacket>
 8002fb8:	e063      	b.n	8003082 <_ZN13SFE_UBLOX_GPS10processUBXEhP9ubxPackethh+0x312>
 8002fba:	687b      	ldr	r3, [r7, #4]
 8002fbc:	2200      	movs	r2, #0
 8002fbe:	739a      	strb	r2, [r3, #14]
 8002fc0:	687b      	ldr	r3, [r7, #4]
 8002fc2:	781b      	ldrb	r3, [r3, #0]
 8002fc4:	7aba      	ldrb	r2, [r7, #10]
 8002fc6:	429a      	cmp	r2, r3
 8002fc8:	d109      	bne.n	8002fde <_ZN13SFE_UBLOX_GPS10processUBXEhP9ubxPackethh+0x26e>
 8002fca:	687b      	ldr	r3, [r7, #4]
 8002fcc:	785b      	ldrb	r3, [r3, #1]
 8002fce:	f897 2020 	ldrb.w	r2, [r7, #32]
 8002fd2:	429a      	cmp	r2, r3
 8002fd4:	d103      	bne.n	8002fde <_ZN13SFE_UBLOX_GPS10processUBXEhP9ubxPackethh+0x26e>
 8002fd6:	687b      	ldr	r3, [r7, #4]
 8002fd8:	2200      	movs	r2, #0
 8002fda:	73da      	strb	r2, [r3, #15]
 8002fdc:	e014      	b.n	8003008 <_ZN13SFE_UBLOX_GPS10processUBXEhP9ubxPackethh+0x298>
 8002fde:	687b      	ldr	r3, [r7, #4]
 8002fe0:	781b      	ldrb	r3, [r3, #0]
 8002fe2:	2b05      	cmp	r3, #5
 8002fe4:	d110      	bne.n	8003008 <_ZN13SFE_UBLOX_GPS10processUBXEhP9ubxPackethh+0x298>
 8002fe6:	687b      	ldr	r3, [r7, #4]
 8002fe8:	689b      	ldr	r3, [r3, #8]
 8002fea:	781b      	ldrb	r3, [r3, #0]
 8002fec:	7aba      	ldrb	r2, [r7, #10]
 8002fee:	429a      	cmp	r2, r3
 8002ff0:	d10a      	bne.n	8003008 <_ZN13SFE_UBLOX_GPS10processUBXEhP9ubxPackethh+0x298>
 8002ff2:	687b      	ldr	r3, [r7, #4]
 8002ff4:	689b      	ldr	r3, [r3, #8]
 8002ff6:	3301      	adds	r3, #1
 8002ff8:	781b      	ldrb	r3, [r3, #0]
 8002ffa:	f897 2020 	ldrb.w	r2, [r7, #32]
 8002ffe:	429a      	cmp	r2, r3
 8003000:	d102      	bne.n	8003008 <_ZN13SFE_UBLOX_GPS10processUBXEhP9ubxPackethh+0x298>
 8003002:	687b      	ldr	r3, [r7, #4]
 8003004:	2200      	movs	r2, #0
 8003006:	73da      	strb	r2, [r3, #15]
 8003008:	68fb      	ldr	r3, [r7, #12]
 800300a:	f893 3238 	ldrb.w	r3, [r3, #568]	; 0x238
 800300e:	2b01      	cmp	r3, #1
 8003010:	d004      	beq.n	800301c <_ZN13SFE_UBLOX_GPS10processUBXEhP9ubxPackethh+0x2ac>
 8003012:	68fb      	ldr	r3, [r7, #12]
 8003014:	f893 3239 	ldrb.w	r3, [r3, #569]	; 0x239
 8003018:	2b01      	cmp	r3, #1
 800301a:	d132      	bne.n	8003082 <_ZN13SFE_UBLOX_GPS10processUBXEhP9ubxPackethh+0x312>
 800301c:	6879      	ldr	r1, [r7, #4]
 800301e:	68f8      	ldr	r0, [r7, #12]
 8003020:	f000 ffde 	bl	8003fe0 <_ZN13SFE_UBLOX_GPS11printPacketEP9ubxPacket>
 8003024:	e02d      	b.n	8003082 <_ZN13SFE_UBLOX_GPS10processUBXEhP9ubxPackethh+0x312>
 8003026:	687b      	ldr	r3, [r7, #4]
 8003028:	88db      	ldrh	r3, [r3, #6]
 800302a:	82bb      	strh	r3, [r7, #20]
 800302c:	687b      	ldr	r3, [r7, #4]
 800302e:	781b      	ldrb	r3, [r3, #0]
 8003030:	2b01      	cmp	r3, #1
 8003032:	d105      	bne.n	8003040 <_ZN13SFE_UBLOX_GPS10processUBXEhP9ubxPackethh+0x2d0>
 8003034:	687b      	ldr	r3, [r7, #4]
 8003036:	785b      	ldrb	r3, [r3, #1]
 8003038:	2b07      	cmp	r3, #7
 800303a:	d101      	bne.n	8003040 <_ZN13SFE_UBLOX_GPS10processUBXEhP9ubxPackethh+0x2d0>
 800303c:	2300      	movs	r3, #0
 800303e:	82bb      	strh	r3, [r7, #20]
 8003040:	68fb      	ldr	r3, [r7, #12]
 8003042:	f893 3370 	ldrb.w	r3, [r3, #880]	; 0x370
 8003046:	2b00      	cmp	r3, #0
 8003048:	d11b      	bne.n	8003082 <_ZN13SFE_UBLOX_GPS10processUBXEhP9ubxPackethh+0x312>
 800304a:	687b      	ldr	r3, [r7, #4]
 800304c:	889b      	ldrh	r3, [r3, #4]
 800304e:	1eda      	subs	r2, r3, #3
 8003050:	8abb      	ldrh	r3, [r7, #20]
 8003052:	429a      	cmp	r2, r3
 8003054:	dd15      	ble.n	8003082 <_ZN13SFE_UBLOX_GPS10processUBXEhP9ubxPackethh+0x312>
 8003056:	687b      	ldr	r3, [r7, #4]
 8003058:	889b      	ldrh	r3, [r3, #4]
 800305a:	1f1a      	subs	r2, r3, #4
 800305c:	8abb      	ldrh	r3, [r7, #20]
 800305e:	1ad3      	subs	r3, r2, r3
 8003060:	461a      	mov	r2, r3
 8003062:	693b      	ldr	r3, [r7, #16]
 8003064:	4293      	cmp	r3, r2
 8003066:	d90a      	bls.n	800307e <_ZN13SFE_UBLOX_GPS10processUBXEhP9ubxPackethh+0x30e>
 8003068:	687b      	ldr	r3, [r7, #4]
 800306a:	689b      	ldr	r3, [r3, #8]
 800306c:	687a      	ldr	r2, [r7, #4]
 800306e:	8892      	ldrh	r2, [r2, #4]
 8003070:	1f11      	subs	r1, r2, #4
 8003072:	8aba      	ldrh	r2, [r7, #20]
 8003074:	1a8a      	subs	r2, r1, r2
 8003076:	4413      	add	r3, r2
 8003078:	7afa      	ldrb	r2, [r7, #11]
 800307a:	701a      	strb	r2, [r3, #0]
 800307c:	e001      	b.n	8003082 <_ZN13SFE_UBLOX_GPS10processUBXEhP9ubxPackethh+0x312>
 800307e:	2301      	movs	r3, #1
 8003080:	75fb      	strb	r3, [r7, #23]
 8003082:	687b      	ldr	r3, [r7, #4]
 8003084:	889b      	ldrh	r3, [r3, #4]
 8003086:	3301      	adds	r3, #1
 8003088:	b29a      	uxth	r2, r3
 800308a:	687b      	ldr	r3, [r7, #4]
 800308c:	809a      	strh	r2, [r3, #4]
 800308e:	7dfb      	ldrb	r3, [r7, #23]
 8003090:	2b00      	cmp	r3, #0
 8003092:	d104      	bne.n	800309e <_ZN13SFE_UBLOX_GPS10processUBXEhP9ubxPackethh+0x32e>
 8003094:	687b      	ldr	r3, [r7, #4]
 8003096:	889b      	ldrh	r3, [r3, #4]
 8003098:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800309c:	d107      	bne.n	80030ae <_ZN13SFE_UBLOX_GPS10processUBXEhP9ubxPackethh+0x33e>
 800309e:	68fb      	ldr	r3, [r7, #12]
 80030a0:	2200      	movs	r2, #0
 80030a2:	f883 2234 	strb.w	r2, [r3, #564]	; 0x234
 80030a6:	68fb      	ldr	r3, [r7, #12]
 80030a8:	f893 3238 	ldrb.w	r3, [r3, #568]	; 0x238
 80030ac:	2b01      	cmp	r3, #1
 80030ae:	bf00      	nop
 80030b0:	3718      	adds	r7, #24
 80030b2:	46bd      	mov	sp, r7
 80030b4:	bd80      	pop	{r7, pc}
	...

080030b8 <_ZN13SFE_UBLOX_GPS16processUBXpacketEP9ubxPacket>:
 80030b8:	b580      	push	{r7, lr}
 80030ba:	b086      	sub	sp, #24
 80030bc:	af00      	add	r7, sp, #0
 80030be:	6078      	str	r0, [r7, #4]
 80030c0:	6039      	str	r1, [r7, #0]
 80030c2:	683b      	ldr	r3, [r7, #0]
 80030c4:	781b      	ldrb	r3, [r3, #0]
 80030c6:	2b01      	cmp	r3, #1
 80030c8:	d004      	beq.n	80030d4 <_ZN13SFE_UBLOX_GPS16processUBXpacketEP9ubxPacket+0x1c>
 80030ca:	2b28      	cmp	r3, #40	; 0x28
 80030cc:	f000 83a4 	beq.w	8003818 <_ZN13SFE_UBLOX_GPS16processUBXpacketEP9ubxPacket+0x760>
 80030d0:	f000 bd98 	b.w	8003c04 <_ZN13SFE_UBLOX_GPS16processUBXpacketEP9ubxPacket+0xb4c>
 80030d4:	683b      	ldr	r3, [r7, #0]
 80030d6:	785b      	ldrb	r3, [r3, #1]
 80030d8:	2b07      	cmp	r3, #7
 80030da:	f040 8258 	bne.w	800358e <_ZN13SFE_UBLOX_GPS16processUBXpacketEP9ubxPacket+0x4d6>
 80030de:	683b      	ldr	r3, [r7, #0]
 80030e0:	885b      	ldrh	r3, [r3, #2]
 80030e2:	2b5c      	cmp	r3, #92	; 0x5c
 80030e4:	f040 8253 	bne.w	800358e <_ZN13SFE_UBLOX_GPS16processUBXpacketEP9ubxPacket+0x4d6>
 80030e8:	2300      	movs	r3, #0
 80030ea:	60fb      	str	r3, [r7, #12]
 80030ec:	2100      	movs	r1, #0
 80030ee:	6878      	ldr	r0, [r7, #4]
 80030f0:	f001 f9a4 	bl	800443c <_ZN13SFE_UBLOX_GPS11extractLongEh>
 80030f4:	4602      	mov	r2, r0
 80030f6:	687b      	ldr	r3, [r7, #4]
 80030f8:	f8c3 20d0 	str.w	r2, [r3, #208]	; 0xd0
 80030fc:	2100      	movs	r1, #0
 80030fe:	6878      	ldr	r0, [r7, #4]
 8003100:	f001 f99c 	bl	800443c <_ZN13SFE_UBLOX_GPS11extractLongEh>
 8003104:	4602      	mov	r2, r0
 8003106:	4bc9      	ldr	r3, [pc, #804]	; (800342c <_ZN13SFE_UBLOX_GPS16processUBXpacketEP9ubxPacket+0x374>)
 8003108:	fba3 1302 	umull	r1, r3, r3, r2
 800310c:	099b      	lsrs	r3, r3, #6
 800310e:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8003112:	fb01 f303 	mul.w	r3, r1, r3
 8003116:	1ad3      	subs	r3, r2, r3
 8003118:	b29a      	uxth	r2, r3
 800311a:	687b      	ldr	r3, [r7, #4]
 800311c:	f8a3 2078 	strh.w	r2, [r3, #120]	; 0x78
 8003120:	2104      	movs	r1, #4
 8003122:	6878      	ldr	r0, [r7, #4]
 8003124:	f001 f9d1 	bl	80044ca <_ZN13SFE_UBLOX_GPS10extractIntEh>
 8003128:	4603      	mov	r3, r0
 800312a:	461a      	mov	r2, r3
 800312c:	687b      	ldr	r3, [r7, #4]
 800312e:	f8a3 2070 	strh.w	r2, [r3, #112]	; 0x70
 8003132:	2106      	movs	r1, #6
 8003134:	6878      	ldr	r0, [r7, #4]
 8003136:	f001 f9ff 	bl	8004538 <_ZN13SFE_UBLOX_GPS11extractByteEh>
 800313a:	4603      	mov	r3, r0
 800313c:	461a      	mov	r2, r3
 800313e:	687b      	ldr	r3, [r7, #4]
 8003140:	f883 2072 	strb.w	r2, [r3, #114]	; 0x72
 8003144:	2107      	movs	r1, #7
 8003146:	6878      	ldr	r0, [r7, #4]
 8003148:	f001 f9f6 	bl	8004538 <_ZN13SFE_UBLOX_GPS11extractByteEh>
 800314c:	4603      	mov	r3, r0
 800314e:	461a      	mov	r2, r3
 8003150:	687b      	ldr	r3, [r7, #4]
 8003152:	f883 2073 	strb.w	r2, [r3, #115]	; 0x73
 8003156:	2108      	movs	r1, #8
 8003158:	6878      	ldr	r0, [r7, #4]
 800315a:	f001 f9ed 	bl	8004538 <_ZN13SFE_UBLOX_GPS11extractByteEh>
 800315e:	4603      	mov	r3, r0
 8003160:	461a      	mov	r2, r3
 8003162:	687b      	ldr	r3, [r7, #4]
 8003164:	f883 2074 	strb.w	r2, [r3, #116]	; 0x74
 8003168:	2109      	movs	r1, #9
 800316a:	6878      	ldr	r0, [r7, #4]
 800316c:	f001 f9e4 	bl	8004538 <_ZN13SFE_UBLOX_GPS11extractByteEh>
 8003170:	4603      	mov	r3, r0
 8003172:	461a      	mov	r2, r3
 8003174:	687b      	ldr	r3, [r7, #4]
 8003176:	f883 2075 	strb.w	r2, [r3, #117]	; 0x75
 800317a:	210a      	movs	r1, #10
 800317c:	6878      	ldr	r0, [r7, #4]
 800317e:	f001 f9db 	bl	8004538 <_ZN13SFE_UBLOX_GPS11extractByteEh>
 8003182:	4603      	mov	r3, r0
 8003184:	461a      	mov	r2, r3
 8003186:	687b      	ldr	r3, [r7, #4]
 8003188:	f883 2076 	strb.w	r2, [r3, #118]	; 0x76
 800318c:	210b      	movs	r1, #11
 800318e:	6878      	ldr	r0, [r7, #4]
 8003190:	f001 f9d2 	bl	8004538 <_ZN13SFE_UBLOX_GPS11extractByteEh>
 8003194:	4603      	mov	r3, r0
 8003196:	f003 0301 	and.w	r3, r3, #1
 800319a:	2b00      	cmp	r3, #0
 800319c:	bf14      	ite	ne
 800319e:	2301      	movne	r3, #1
 80031a0:	2300      	moveq	r3, #0
 80031a2:	b2da      	uxtb	r2, r3
 80031a4:	687b      	ldr	r3, [r7, #4]
 80031a6:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80
 80031aa:	210b      	movs	r1, #11
 80031ac:	6878      	ldr	r0, [r7, #4]
 80031ae:	f001 f9c3 	bl	8004538 <_ZN13SFE_UBLOX_GPS11extractByteEh>
 80031b2:	4603      	mov	r3, r0
 80031b4:	f003 0302 	and.w	r3, r3, #2
 80031b8:	2b00      	cmp	r3, #0
 80031ba:	bf14      	ite	ne
 80031bc:	2301      	movne	r3, #1
 80031be:	2300      	moveq	r3, #0
 80031c0:	b2da      	uxtb	r2, r3
 80031c2:	687b      	ldr	r3, [r7, #4]
 80031c4:	f883 2081 	strb.w	r2, [r3, #129]	; 0x81
 80031c8:	2110      	movs	r1, #16
 80031ca:	6878      	ldr	r0, [r7, #4]
 80031cc:	f001 f96b 	bl	80044a6 <_ZN13SFE_UBLOX_GPS17extractSignedLongEh>
 80031d0:	4602      	mov	r2, r0
 80031d2:	687b      	ldr	r3, [r7, #4]
 80031d4:	67da      	str	r2, [r3, #124]	; 0x7c
 80031d6:	2114      	movs	r1, #20
 80031d8:	6878      	ldr	r0, [r7, #4]
 80031da:	f001 f9ad 	bl	8004538 <_ZN13SFE_UBLOX_GPS11extractByteEh>
 80031de:	4603      	mov	r3, r0
 80031e0:	461a      	mov	r2, r3
 80031e2:	687b      	ldr	r3, [r7, #4]
 80031e4:	f883 20ad 	strb.w	r2, [r3, #173]	; 0xad
 80031e8:	2115      	movs	r1, #21
 80031ea:	6878      	ldr	r0, [r7, #4]
 80031ec:	f001 f9a4 	bl	8004538 <_ZN13SFE_UBLOX_GPS11extractByteEh>
 80031f0:	4603      	mov	r3, r0
 80031f2:	f003 0301 	and.w	r3, r3, #1
 80031f6:	2b00      	cmp	r3, #0
 80031f8:	bf14      	ite	ne
 80031fa:	2301      	movne	r3, #1
 80031fc:	2300      	moveq	r3, #0
 80031fe:	b2da      	uxtb	r2, r3
 8003200:	687b      	ldr	r3, [r7, #4]
 8003202:	f883 2082 	strb.w	r2, [r3, #130]	; 0x82
 8003206:	2115      	movs	r1, #21
 8003208:	6878      	ldr	r0, [r7, #4]
 800320a:	f001 f995 	bl	8004538 <_ZN13SFE_UBLOX_GPS11extractByteEh>
 800320e:	4603      	mov	r3, r0
 8003210:	f003 0302 	and.w	r3, r3, #2
 8003214:	2b00      	cmp	r3, #0
 8003216:	bf14      	ite	ne
 8003218:	2301      	movne	r3, #1
 800321a:	2300      	moveq	r3, #0
 800321c:	b2da      	uxtb	r2, r3
 800321e:	687b      	ldr	r3, [r7, #4]
 8003220:	f883 2083 	strb.w	r2, [r3, #131]	; 0x83
 8003224:	2115      	movs	r1, #21
 8003226:	6878      	ldr	r0, [r7, #4]
 8003228:	f001 f986 	bl	8004538 <_ZN13SFE_UBLOX_GPS11extractByteEh>
 800322c:	4603      	mov	r3, r0
 800322e:	119b      	asrs	r3, r3, #6
 8003230:	b2da      	uxtb	r2, r3
 8003232:	687b      	ldr	r3, [r7, #4]
 8003234:	f883 20ae 	strb.w	r2, [r3, #174]	; 0xae
 8003238:	2115      	movs	r1, #21
 800323a:	6878      	ldr	r0, [r7, #4]
 800323c:	f001 f97c 	bl	8004538 <_ZN13SFE_UBLOX_GPS11extractByteEh>
 8003240:	4603      	mov	r3, r0
 8003242:	f003 0320 	and.w	r3, r3, #32
 8003246:	2b00      	cmp	r3, #0
 8003248:	bf14      	ite	ne
 800324a:	2301      	movne	r3, #1
 800324c:	2300      	moveq	r3, #0
 800324e:	b2da      	uxtb	r2, r3
 8003250:	687b      	ldr	r3, [r7, #4]
 8003252:	f883 2084 	strb.w	r2, [r3, #132]	; 0x84
 8003256:	2117      	movs	r1, #23
 8003258:	6878      	ldr	r0, [r7, #4]
 800325a:	f001 f96d 	bl	8004538 <_ZN13SFE_UBLOX_GPS11extractByteEh>
 800325e:	4603      	mov	r3, r0
 8003260:	461a      	mov	r2, r3
 8003262:	687b      	ldr	r3, [r7, #4]
 8003264:	f883 20ac 	strb.w	r2, [r3, #172]	; 0xac
 8003268:	2118      	movs	r1, #24
 800326a:	6878      	ldr	r0, [r7, #4]
 800326c:	f001 f91b 	bl	80044a6 <_ZN13SFE_UBLOX_GPS17extractSignedLongEh>
 8003270:	4602      	mov	r2, r0
 8003272:	687b      	ldr	r3, [r7, #4]
 8003274:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
 8003278:	211c      	movs	r1, #28
 800327a:	6878      	ldr	r0, [r7, #4]
 800327c:	f001 f913 	bl	80044a6 <_ZN13SFE_UBLOX_GPS17extractSignedLongEh>
 8003280:	4602      	mov	r2, r0
 8003282:	687b      	ldr	r3, [r7, #4]
 8003284:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
 8003288:	2120      	movs	r1, #32
 800328a:	6878      	ldr	r0, [r7, #4]
 800328c:	f001 f90b 	bl	80044a6 <_ZN13SFE_UBLOX_GPS17extractSignedLongEh>
 8003290:	4602      	mov	r2, r0
 8003292:	687b      	ldr	r3, [r7, #4]
 8003294:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
 8003298:	2124      	movs	r1, #36	; 0x24
 800329a:	6878      	ldr	r0, [r7, #4]
 800329c:	f001 f903 	bl	80044a6 <_ZN13SFE_UBLOX_GPS17extractSignedLongEh>
 80032a0:	4602      	mov	r2, r0
 80032a2:	687b      	ldr	r3, [r7, #4]
 80032a4:	f8c3 2094 	str.w	r2, [r3, #148]	; 0x94
 80032a8:	2128      	movs	r1, #40	; 0x28
 80032aa:	6878      	ldr	r0, [r7, #4]
 80032ac:	f001 f8c6 	bl	800443c <_ZN13SFE_UBLOX_GPS11extractLongEh>
 80032b0:	4602      	mov	r2, r0
 80032b2:	687b      	ldr	r3, [r7, #4]
 80032b4:	f8c3 2098 	str.w	r2, [r3, #152]	; 0x98
 80032b8:	212c      	movs	r1, #44	; 0x2c
 80032ba:	6878      	ldr	r0, [r7, #4]
 80032bc:	f001 f8be 	bl	800443c <_ZN13SFE_UBLOX_GPS11extractLongEh>
 80032c0:	4602      	mov	r2, r0
 80032c2:	687b      	ldr	r3, [r7, #4]
 80032c4:	f8c3 209c 	str.w	r2, [r3, #156]	; 0x9c
 80032c8:	2130      	movs	r1, #48	; 0x30
 80032ca:	6878      	ldr	r0, [r7, #4]
 80032cc:	f001 f8eb 	bl	80044a6 <_ZN13SFE_UBLOX_GPS17extractSignedLongEh>
 80032d0:	4602      	mov	r2, r0
 80032d2:	687b      	ldr	r3, [r7, #4]
 80032d4:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
 80032d8:	2134      	movs	r1, #52	; 0x34
 80032da:	6878      	ldr	r0, [r7, #4]
 80032dc:	f001 f8e3 	bl	80044a6 <_ZN13SFE_UBLOX_GPS17extractSignedLongEh>
 80032e0:	4602      	mov	r2, r0
 80032e2:	687b      	ldr	r3, [r7, #4]
 80032e4:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4
 80032e8:	2138      	movs	r1, #56	; 0x38
 80032ea:	6878      	ldr	r0, [r7, #4]
 80032ec:	f001 f8db 	bl	80044a6 <_ZN13SFE_UBLOX_GPS17extractSignedLongEh>
 80032f0:	4602      	mov	r2, r0
 80032f2:	687b      	ldr	r3, [r7, #4]
 80032f4:	f8c3 20a8 	str.w	r2, [r3, #168]	; 0xa8
 80032f8:	213c      	movs	r1, #60	; 0x3c
 80032fa:	6878      	ldr	r0, [r7, #4]
 80032fc:	f001 f8d3 	bl	80044a6 <_ZN13SFE_UBLOX_GPS17extractSignedLongEh>
 8003300:	4602      	mov	r2, r0
 8003302:	687b      	ldr	r3, [r7, #4]
 8003304:	f8c3 20b0 	str.w	r2, [r3, #176]	; 0xb0
 8003308:	2140      	movs	r1, #64	; 0x40
 800330a:	6878      	ldr	r0, [r7, #4]
 800330c:	f001 f8cb 	bl	80044a6 <_ZN13SFE_UBLOX_GPS17extractSignedLongEh>
 8003310:	4602      	mov	r2, r0
 8003312:	687b      	ldr	r3, [r7, #4]
 8003314:	f8c3 20b4 	str.w	r2, [r3, #180]	; 0xb4
 8003318:	2144      	movs	r1, #68	; 0x44
 800331a:	6878      	ldr	r0, [r7, #4]
 800331c:	f001 f88e 	bl	800443c <_ZN13SFE_UBLOX_GPS11extractLongEh>
 8003320:	4602      	mov	r2, r0
 8003322:	687b      	ldr	r3, [r7, #4]
 8003324:	f8c3 20b8 	str.w	r2, [r3, #184]	; 0xb8
 8003328:	2148      	movs	r1, #72	; 0x48
 800332a:	6878      	ldr	r0, [r7, #4]
 800332c:	f001 f886 	bl	800443c <_ZN13SFE_UBLOX_GPS11extractLongEh>
 8003330:	4602      	mov	r2, r0
 8003332:	687b      	ldr	r3, [r7, #4]
 8003334:	f8c3 20bc 	str.w	r2, [r3, #188]	; 0xbc
 8003338:	214c      	movs	r1, #76	; 0x4c
 800333a:	6878      	ldr	r0, [r7, #4]
 800333c:	f001 f8c5 	bl	80044ca <_ZN13SFE_UBLOX_GPS10extractIntEh>
 8003340:	4603      	mov	r3, r0
 8003342:	461a      	mov	r2, r3
 8003344:	687b      	ldr	r3, [r7, #4]
 8003346:	f8a3 20c0 	strh.w	r2, [r3, #192]	; 0xc0
 800334a:	214e      	movs	r1, #78	; 0x4e
 800334c:	6878      	ldr	r0, [r7, #4]
 800334e:	f001 f8f3 	bl	8004538 <_ZN13SFE_UBLOX_GPS11extractByteEh>
 8003352:	4603      	mov	r3, r0
 8003354:	f003 0301 	and.w	r3, r3, #1
 8003358:	2b00      	cmp	r3, #0
 800335a:	bf14      	ite	ne
 800335c:	2301      	movne	r3, #1
 800335e:	2300      	moveq	r3, #0
 8003360:	b2da      	uxtb	r2, r3
 8003362:	687b      	ldr	r3, [r7, #4]
 8003364:	f883 20c2 	strb.w	r2, [r3, #194]	; 0xc2
 8003368:	2154      	movs	r1, #84	; 0x54
 800336a:	6878      	ldr	r0, [r7, #4]
 800336c:	f001 f89b 	bl	80044a6 <_ZN13SFE_UBLOX_GPS17extractSignedLongEh>
 8003370:	4602      	mov	r2, r0
 8003372:	687b      	ldr	r3, [r7, #4]
 8003374:	f8c3 20c4 	str.w	r2, [r3, #196]	; 0xc4
 8003378:	2158      	movs	r1, #88	; 0x58
 800337a:	6878      	ldr	r0, [r7, #4]
 800337c:	f001 f8c9 	bl	8004512 <_ZN13SFE_UBLOX_GPS16extractSignedIntEa>
 8003380:	4603      	mov	r3, r0
 8003382:	461a      	mov	r2, r3
 8003384:	687b      	ldr	r3, [r7, #4]
 8003386:	f8a3 20c8 	strh.w	r2, [r3, #200]	; 0xc8
 800338a:	215a      	movs	r1, #90	; 0x5a
 800338c:	6878      	ldr	r0, [r7, #4]
 800338e:	f001 f89c 	bl	80044ca <_ZN13SFE_UBLOX_GPS10extractIntEh>
 8003392:	4603      	mov	r3, r0
 8003394:	461a      	mov	r2, r3
 8003396:	687b      	ldr	r3, [r7, #4]
 8003398:	f8a3 20ca 	strh.w	r2, [r3, #202]	; 0xca
 800339c:	687a      	ldr	r2, [r7, #4]
 800339e:	f892 3388 	ldrb.w	r3, [r2, #904]	; 0x388
 80033a2:	f043 0301 	orr.w	r3, r3, #1
 80033a6:	f882 3388 	strb.w	r3, [r2, #904]	; 0x388
 80033aa:	687a      	ldr	r2, [r7, #4]
 80033ac:	f892 3388 	ldrb.w	r3, [r2, #904]	; 0x388
 80033b0:	f043 0302 	orr.w	r3, r3, #2
 80033b4:	f882 3388 	strb.w	r3, [r2, #904]	; 0x388
 80033b8:	687a      	ldr	r2, [r7, #4]
 80033ba:	f892 3388 	ldrb.w	r3, [r2, #904]	; 0x388
 80033be:	f043 0304 	orr.w	r3, r3, #4
 80033c2:	f882 3388 	strb.w	r3, [r2, #904]	; 0x388
 80033c6:	687a      	ldr	r2, [r7, #4]
 80033c8:	f892 3388 	ldrb.w	r3, [r2, #904]	; 0x388
 80033cc:	f043 0308 	orr.w	r3, r3, #8
 80033d0:	f882 3388 	strb.w	r3, [r2, #904]	; 0x388
 80033d4:	687a      	ldr	r2, [r7, #4]
 80033d6:	f892 3388 	ldrb.w	r3, [r2, #904]	; 0x388
 80033da:	f043 0310 	orr.w	r3, r3, #16
 80033de:	f882 3388 	strb.w	r3, [r2, #904]	; 0x388
 80033e2:	687a      	ldr	r2, [r7, #4]
 80033e4:	f892 3388 	ldrb.w	r3, [r2, #904]	; 0x388
 80033e8:	f043 0320 	orr.w	r3, r3, #32
 80033ec:	f882 3388 	strb.w	r3, [r2, #904]	; 0x388
 80033f0:	687a      	ldr	r2, [r7, #4]
 80033f2:	f892 3388 	ldrb.w	r3, [r2, #904]	; 0x388
 80033f6:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80033fa:	f882 3388 	strb.w	r3, [r2, #904]	; 0x388
 80033fe:	687a      	ldr	r2, [r7, #4]
 8003400:	f892 3388 	ldrb.w	r3, [r2, #904]	; 0x388
 8003404:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8003408:	f882 3388 	strb.w	r3, [r2, #904]	; 0x388
 800340c:	687a      	ldr	r2, [r7, #4]
 800340e:	f892 3389 	ldrb.w	r3, [r2, #905]	; 0x389
 8003412:	f043 0301 	orr.w	r3, r3, #1
 8003416:	f882 3389 	strb.w	r3, [r2, #905]	; 0x389
 800341a:	687a      	ldr	r2, [r7, #4]
 800341c:	f892 3389 	ldrb.w	r3, [r2, #905]	; 0x389
 8003420:	f043 0302 	orr.w	r3, r3, #2
 8003424:	f882 3389 	strb.w	r3, [r2, #905]	; 0x389
 8003428:	687a      	ldr	r2, [r7, #4]
 800342a:	e001      	b.n	8003430 <_ZN13SFE_UBLOX_GPS16processUBXpacketEP9ubxPacket+0x378>
 800342c:	10624dd3 	.word	0x10624dd3
 8003430:	f892 3389 	ldrb.w	r3, [r2, #905]	; 0x389
 8003434:	f043 0304 	orr.w	r3, r3, #4
 8003438:	f882 3389 	strb.w	r3, [r2, #905]	; 0x389
 800343c:	687a      	ldr	r2, [r7, #4]
 800343e:	f892 3389 	ldrb.w	r3, [r2, #905]	; 0x389
 8003442:	f043 0308 	orr.w	r3, r3, #8
 8003446:	f882 3389 	strb.w	r3, [r2, #905]	; 0x389
 800344a:	687a      	ldr	r2, [r7, #4]
 800344c:	f892 3389 	ldrb.w	r3, [r2, #905]	; 0x389
 8003450:	f043 0310 	orr.w	r3, r3, #16
 8003454:	f882 3389 	strb.w	r3, [r2, #905]	; 0x389
 8003458:	687a      	ldr	r2, [r7, #4]
 800345a:	f892 3389 	ldrb.w	r3, [r2, #905]	; 0x389
 800345e:	f043 0320 	orr.w	r3, r3, #32
 8003462:	f882 3389 	strb.w	r3, [r2, #905]	; 0x389
 8003466:	687a      	ldr	r2, [r7, #4]
 8003468:	f892 3389 	ldrb.w	r3, [r2, #905]	; 0x389
 800346c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8003470:	f882 3389 	strb.w	r3, [r2, #905]	; 0x389
 8003474:	687a      	ldr	r2, [r7, #4]
 8003476:	f892 3389 	ldrb.w	r3, [r2, #905]	; 0x389
 800347a:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800347e:	f882 3389 	strb.w	r3, [r2, #905]	; 0x389
 8003482:	687a      	ldr	r2, [r7, #4]
 8003484:	f892 338a 	ldrb.w	r3, [r2, #906]	; 0x38a
 8003488:	f043 0301 	orr.w	r3, r3, #1
 800348c:	f882 338a 	strb.w	r3, [r2, #906]	; 0x38a
 8003490:	687a      	ldr	r2, [r7, #4]
 8003492:	f892 338a 	ldrb.w	r3, [r2, #906]	; 0x38a
 8003496:	f043 0302 	orr.w	r3, r3, #2
 800349a:	f882 338a 	strb.w	r3, [r2, #906]	; 0x38a
 800349e:	687a      	ldr	r2, [r7, #4]
 80034a0:	f892 338a 	ldrb.w	r3, [r2, #906]	; 0x38a
 80034a4:	f043 0304 	orr.w	r3, r3, #4
 80034a8:	f882 338a 	strb.w	r3, [r2, #906]	; 0x38a
 80034ac:	687a      	ldr	r2, [r7, #4]
 80034ae:	f892 338a 	ldrb.w	r3, [r2, #906]	; 0x38a
 80034b2:	f043 0308 	orr.w	r3, r3, #8
 80034b6:	f882 338a 	strb.w	r3, [r2, #906]	; 0x38a
 80034ba:	687a      	ldr	r2, [r7, #4]
 80034bc:	f892 338a 	ldrb.w	r3, [r2, #906]	; 0x38a
 80034c0:	f043 0310 	orr.w	r3, r3, #16
 80034c4:	f882 338a 	strb.w	r3, [r2, #906]	; 0x38a
 80034c8:	687a      	ldr	r2, [r7, #4]
 80034ca:	f892 338a 	ldrb.w	r3, [r2, #906]	; 0x38a
 80034ce:	f043 0320 	orr.w	r3, r3, #32
 80034d2:	f882 338a 	strb.w	r3, [r2, #906]	; 0x38a
 80034d6:	687a      	ldr	r2, [r7, #4]
 80034d8:	f892 338a 	ldrb.w	r3, [r2, #906]	; 0x38a
 80034dc:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80034e0:	f882 338a 	strb.w	r3, [r2, #906]	; 0x38a
 80034e4:	687a      	ldr	r2, [r7, #4]
 80034e6:	f892 338a 	ldrb.w	r3, [r2, #906]	; 0x38a
 80034ea:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80034ee:	f882 338a 	strb.w	r3, [r2, #906]	; 0x38a
 80034f2:	687a      	ldr	r2, [r7, #4]
 80034f4:	f892 338b 	ldrb.w	r3, [r2, #907]	; 0x38b
 80034f8:	f043 0301 	orr.w	r3, r3, #1
 80034fc:	f882 338b 	strb.w	r3, [r2, #907]	; 0x38b
 8003500:	687a      	ldr	r2, [r7, #4]
 8003502:	f892 338b 	ldrb.w	r3, [r2, #907]	; 0x38b
 8003506:	f043 0302 	orr.w	r3, r3, #2
 800350a:	f882 338b 	strb.w	r3, [r2, #907]	; 0x38b
 800350e:	687a      	ldr	r2, [r7, #4]
 8003510:	f892 338b 	ldrb.w	r3, [r2, #907]	; 0x38b
 8003514:	f043 0304 	orr.w	r3, r3, #4
 8003518:	f882 338b 	strb.w	r3, [r2, #907]	; 0x38b
 800351c:	687a      	ldr	r2, [r7, #4]
 800351e:	f892 338b 	ldrb.w	r3, [r2, #907]	; 0x38b
 8003522:	f043 0308 	orr.w	r3, r3, #8
 8003526:	f882 338b 	strb.w	r3, [r2, #907]	; 0x38b
 800352a:	687a      	ldr	r2, [r7, #4]
 800352c:	f892 338b 	ldrb.w	r3, [r2, #907]	; 0x38b
 8003530:	f043 0310 	orr.w	r3, r3, #16
 8003534:	f882 338b 	strb.w	r3, [r2, #907]	; 0x38b
 8003538:	687a      	ldr	r2, [r7, #4]
 800353a:	f892 338b 	ldrb.w	r3, [r2, #907]	; 0x38b
 800353e:	f043 0320 	orr.w	r3, r3, #32
 8003542:	f882 338b 	strb.w	r3, [r2, #907]	; 0x38b
 8003546:	687a      	ldr	r2, [r7, #4]
 8003548:	f892 338b 	ldrb.w	r3, [r2, #907]	; 0x38b
 800354c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8003550:	f882 338b 	strb.w	r3, [r2, #907]	; 0x38b
 8003554:	687a      	ldr	r2, [r7, #4]
 8003556:	f892 338b 	ldrb.w	r3, [r2, #907]	; 0x38b
 800355a:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800355e:	f882 338b 	strb.w	r3, [r2, #907]	; 0x38b
 8003562:	687a      	ldr	r2, [r7, #4]
 8003564:	f892 338c 	ldrb.w	r3, [r2, #908]	; 0x38c
 8003568:	f043 0301 	orr.w	r3, r3, #1
 800356c:	f882 338c 	strb.w	r3, [r2, #908]	; 0x38c
 8003570:	687a      	ldr	r2, [r7, #4]
 8003572:	f892 338c 	ldrb.w	r3, [r2, #908]	; 0x38c
 8003576:	f043 0302 	orr.w	r3, r3, #2
 800357a:	f882 338c 	strb.w	r3, [r2, #908]	; 0x38c
 800357e:	687a      	ldr	r2, [r7, #4]
 8003580:	f892 338c 	ldrb.w	r3, [r2, #908]	; 0x38c
 8003584:	f043 0304 	orr.w	r3, r3, #4
 8003588:	f882 338c 	strb.w	r3, [r2, #908]	; 0x38c
 800358c:	e143      	b.n	8003816 <_ZN13SFE_UBLOX_GPS16processUBXpacketEP9ubxPacket+0x75e>
 800358e:	683b      	ldr	r3, [r7, #0]
 8003590:	785b      	ldrb	r3, [r3, #1]
 8003592:	2b14      	cmp	r3, #20
 8003594:	f040 80bd 	bne.w	8003712 <_ZN13SFE_UBLOX_GPS16processUBXpacketEP9ubxPacket+0x65a>
 8003598:	683b      	ldr	r3, [r7, #0]
 800359a:	885b      	ldrh	r3, [r3, #2]
 800359c:	2b24      	cmp	r3, #36	; 0x24
 800359e:	f040 80b8 	bne.w	8003712 <_ZN13SFE_UBLOX_GPS16processUBXpacketEP9ubxPacket+0x65a>
 80035a2:	2104      	movs	r1, #4
 80035a4:	6878      	ldr	r0, [r7, #4]
 80035a6:	f000 ff49 	bl	800443c <_ZN13SFE_UBLOX_GPS11extractLongEh>
 80035aa:	4602      	mov	r2, r0
 80035ac:	687b      	ldr	r3, [r7, #4]
 80035ae:	f8c3 20d0 	str.w	r2, [r3, #208]	; 0xd0
 80035b2:	2108      	movs	r1, #8
 80035b4:	6878      	ldr	r0, [r7, #4]
 80035b6:	f000 ff76 	bl	80044a6 <_ZN13SFE_UBLOX_GPS17extractSignedLongEh>
 80035ba:	4602      	mov	r2, r0
 80035bc:	687b      	ldr	r3, [r7, #4]
 80035be:	f8c3 20d8 	str.w	r2, [r3, #216]	; 0xd8
 80035c2:	210c      	movs	r1, #12
 80035c4:	6878      	ldr	r0, [r7, #4]
 80035c6:	f000 ff6e 	bl	80044a6 <_ZN13SFE_UBLOX_GPS17extractSignedLongEh>
 80035ca:	4602      	mov	r2, r0
 80035cc:	687b      	ldr	r3, [r7, #4]
 80035ce:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
 80035d2:	2110      	movs	r1, #16
 80035d4:	6878      	ldr	r0, [r7, #4]
 80035d6:	f000 ff66 	bl	80044a6 <_ZN13SFE_UBLOX_GPS17extractSignedLongEh>
 80035da:	4602      	mov	r2, r0
 80035dc:	687b      	ldr	r3, [r7, #4]
 80035de:	f8c3 20dc 	str.w	r2, [r3, #220]	; 0xdc
 80035e2:	2114      	movs	r1, #20
 80035e4:	6878      	ldr	r0, [r7, #4]
 80035e6:	f000 ff5e 	bl	80044a6 <_ZN13SFE_UBLOX_GPS17extractSignedLongEh>
 80035ea:	4602      	mov	r2, r0
 80035ec:	687b      	ldr	r3, [r7, #4]
 80035ee:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 80035f2:	2118      	movs	r1, #24
 80035f4:	6878      	ldr	r0, [r7, #4]
 80035f6:	f000 ffaf 	bl	8004558 <_ZN13SFE_UBLOX_GPS17extractSignedCharEh>
 80035fa:	4603      	mov	r3, r0
 80035fc:	461a      	mov	r2, r3
 80035fe:	687b      	ldr	r3, [r7, #4]
 8003600:	f883 20f3 	strb.w	r2, [r3, #243]	; 0xf3
 8003604:	2119      	movs	r1, #25
 8003606:	6878      	ldr	r0, [r7, #4]
 8003608:	f000 ffa6 	bl	8004558 <_ZN13SFE_UBLOX_GPS17extractSignedCharEh>
 800360c:	4603      	mov	r3, r0
 800360e:	461a      	mov	r2, r3
 8003610:	687b      	ldr	r3, [r7, #4]
 8003612:	f883 20f2 	strb.w	r2, [r3, #242]	; 0xf2
 8003616:	211a      	movs	r1, #26
 8003618:	6878      	ldr	r0, [r7, #4]
 800361a:	f000 ff9d 	bl	8004558 <_ZN13SFE_UBLOX_GPS17extractSignedCharEh>
 800361e:	4603      	mov	r3, r0
 8003620:	461a      	mov	r2, r3
 8003622:	687b      	ldr	r3, [r7, #4]
 8003624:	f883 20f0 	strb.w	r2, [r3, #240]	; 0xf0
 8003628:	211b      	movs	r1, #27
 800362a:	6878      	ldr	r0, [r7, #4]
 800362c:	f000 ff94 	bl	8004558 <_ZN13SFE_UBLOX_GPS17extractSignedCharEh>
 8003630:	4603      	mov	r3, r0
 8003632:	461a      	mov	r2, r3
 8003634:	687b      	ldr	r3, [r7, #4]
 8003636:	f883 20f1 	strb.w	r2, [r3, #241]	; 0xf1
 800363a:	211c      	movs	r1, #28
 800363c:	6878      	ldr	r0, [r7, #4]
 800363e:	f000 fefd 	bl	800443c <_ZN13SFE_UBLOX_GPS11extractLongEh>
 8003642:	4602      	mov	r2, r0
 8003644:	687b      	ldr	r3, [r7, #4]
 8003646:	f8c3 20e8 	str.w	r2, [r3, #232]	; 0xe8
 800364a:	2120      	movs	r1, #32
 800364c:	6878      	ldr	r0, [r7, #4]
 800364e:	f000 fef5 	bl	800443c <_ZN13SFE_UBLOX_GPS11extractLongEh>
 8003652:	4602      	mov	r2, r0
 8003654:	687b      	ldr	r3, [r7, #4]
 8003656:	f8c3 20ec 	str.w	r2, [r3, #236]	; 0xec
 800365a:	687a      	ldr	r2, [r7, #4]
 800365c:	f892 3390 	ldrb.w	r3, [r2, #912]	; 0x390
 8003660:	f043 0301 	orr.w	r3, r3, #1
 8003664:	f882 3390 	strb.w	r3, [r2, #912]	; 0x390
 8003668:	687a      	ldr	r2, [r7, #4]
 800366a:	f892 3390 	ldrb.w	r3, [r2, #912]	; 0x390
 800366e:	f043 0304 	orr.w	r3, r3, #4
 8003672:	f882 3390 	strb.w	r3, [r2, #912]	; 0x390
 8003676:	687a      	ldr	r2, [r7, #4]
 8003678:	f892 3391 	ldrb.w	r3, [r2, #913]	; 0x391
 800367c:	f043 0308 	orr.w	r3, r3, #8
 8003680:	f882 3391 	strb.w	r3, [r2, #913]	; 0x391
 8003684:	687a      	ldr	r2, [r7, #4]
 8003686:	f892 3390 	ldrb.w	r3, [r2, #912]	; 0x390
 800368a:	f043 0308 	orr.w	r3, r3, #8
 800368e:	f882 3390 	strb.w	r3, [r2, #912]	; 0x390
 8003692:	687a      	ldr	r2, [r7, #4]
 8003694:	f892 3391 	ldrb.w	r3, [r2, #913]	; 0x391
 8003698:	f043 0310 	orr.w	r3, r3, #16
 800369c:	f882 3391 	strb.w	r3, [r2, #913]	; 0x391
 80036a0:	687a      	ldr	r2, [r7, #4]
 80036a2:	f892 3390 	ldrb.w	r3, [r2, #912]	; 0x390
 80036a6:	f043 0310 	orr.w	r3, r3, #16
 80036aa:	f882 3390 	strb.w	r3, [r2, #912]	; 0x390
 80036ae:	687a      	ldr	r2, [r7, #4]
 80036b0:	f892 3391 	ldrb.w	r3, [r2, #913]	; 0x391
 80036b4:	f043 0302 	orr.w	r3, r3, #2
 80036b8:	f882 3391 	strb.w	r3, [r2, #913]	; 0x391
 80036bc:	687a      	ldr	r2, [r7, #4]
 80036be:	f892 3390 	ldrb.w	r3, [r2, #912]	; 0x390
 80036c2:	f043 0320 	orr.w	r3, r3, #32
 80036c6:	f882 3390 	strb.w	r3, [r2, #912]	; 0x390
 80036ca:	687a      	ldr	r2, [r7, #4]
 80036cc:	f892 3391 	ldrb.w	r3, [r2, #913]	; 0x391
 80036d0:	f043 0304 	orr.w	r3, r3, #4
 80036d4:	f882 3391 	strb.w	r3, [r2, #913]	; 0x391
 80036d8:	687a      	ldr	r2, [r7, #4]
 80036da:	f892 3390 	ldrb.w	r3, [r2, #912]	; 0x390
 80036de:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80036e2:	f882 3390 	strb.w	r3, [r2, #912]	; 0x390
 80036e6:	687a      	ldr	r2, [r7, #4]
 80036e8:	f892 3390 	ldrb.w	r3, [r2, #912]	; 0x390
 80036ec:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80036f0:	f882 3390 	strb.w	r3, [r2, #912]	; 0x390
 80036f4:	687a      	ldr	r2, [r7, #4]
 80036f6:	f892 3391 	ldrb.w	r3, [r2, #913]	; 0x391
 80036fa:	f043 0301 	orr.w	r3, r3, #1
 80036fe:	f882 3391 	strb.w	r3, [r2, #913]	; 0x391
 8003702:	687a      	ldr	r2, [r7, #4]
 8003704:	f892 3388 	ldrb.w	r3, [r2, #904]	; 0x388
 8003708:	f043 0301 	orr.w	r3, r3, #1
 800370c:	f882 3388 	strb.w	r3, [r2, #904]	; 0x388
 8003710:	e081      	b.n	8003816 <_ZN13SFE_UBLOX_GPS16processUBXpacketEP9ubxPacket+0x75e>
 8003712:	683b      	ldr	r3, [r7, #0]
 8003714:	785b      	ldrb	r3, [r3, #1]
 8003716:	2b04      	cmp	r3, #4
 8003718:	f040 8273 	bne.w	8003c02 <_ZN13SFE_UBLOX_GPS16processUBXpacketEP9ubxPacket+0xb4a>
 800371c:	683b      	ldr	r3, [r7, #0]
 800371e:	885b      	ldrh	r3, [r3, #2]
 8003720:	2b12      	cmp	r3, #18
 8003722:	f040 826e 	bne.w	8003c02 <_ZN13SFE_UBLOX_GPS16processUBXpacketEP9ubxPacket+0xb4a>
 8003726:	2104      	movs	r1, #4
 8003728:	6878      	ldr	r0, [r7, #4]
 800372a:	f000 fece 	bl	80044ca <_ZN13SFE_UBLOX_GPS10extractIntEh>
 800372e:	4603      	mov	r3, r0
 8003730:	461a      	mov	r2, r3
 8003732:	687b      	ldr	r3, [r7, #4]
 8003734:	f8a3 20f6 	strh.w	r2, [r3, #246]	; 0xf6
 8003738:	2106      	movs	r1, #6
 800373a:	6878      	ldr	r0, [r7, #4]
 800373c:	f000 fec5 	bl	80044ca <_ZN13SFE_UBLOX_GPS10extractIntEh>
 8003740:	4603      	mov	r3, r0
 8003742:	461a      	mov	r2, r3
 8003744:	687b      	ldr	r3, [r7, #4]
 8003746:	f8a3 20f8 	strh.w	r2, [r3, #248]	; 0xf8
 800374a:	2108      	movs	r1, #8
 800374c:	6878      	ldr	r0, [r7, #4]
 800374e:	f000 febc 	bl	80044ca <_ZN13SFE_UBLOX_GPS10extractIntEh>
 8003752:	4603      	mov	r3, r0
 8003754:	461a      	mov	r2, r3
 8003756:	687b      	ldr	r3, [r7, #4]
 8003758:	f8a3 20fa 	strh.w	r2, [r3, #250]	; 0xfa
 800375c:	210a      	movs	r1, #10
 800375e:	6878      	ldr	r0, [r7, #4]
 8003760:	f000 feb3 	bl	80044ca <_ZN13SFE_UBLOX_GPS10extractIntEh>
 8003764:	4603      	mov	r3, r0
 8003766:	461a      	mov	r2, r3
 8003768:	687b      	ldr	r3, [r7, #4]
 800376a:	f8a3 20fc 	strh.w	r2, [r3, #252]	; 0xfc
 800376e:	210c      	movs	r1, #12
 8003770:	6878      	ldr	r0, [r7, #4]
 8003772:	f000 feaa 	bl	80044ca <_ZN13SFE_UBLOX_GPS10extractIntEh>
 8003776:	4603      	mov	r3, r0
 8003778:	461a      	mov	r2, r3
 800377a:	687b      	ldr	r3, [r7, #4]
 800377c:	f8a3 20fe 	strh.w	r2, [r3, #254]	; 0xfe
 8003780:	210e      	movs	r1, #14
 8003782:	6878      	ldr	r0, [r7, #4]
 8003784:	f000 fea1 	bl	80044ca <_ZN13SFE_UBLOX_GPS10extractIntEh>
 8003788:	4603      	mov	r3, r0
 800378a:	461a      	mov	r2, r3
 800378c:	687b      	ldr	r3, [r7, #4]
 800378e:	f8a3 2100 	strh.w	r2, [r3, #256]	; 0x100
 8003792:	2110      	movs	r1, #16
 8003794:	6878      	ldr	r0, [r7, #4]
 8003796:	f000 fe98 	bl	80044ca <_ZN13SFE_UBLOX_GPS10extractIntEh>
 800379a:	4603      	mov	r3, r0
 800379c:	461a      	mov	r2, r3
 800379e:	687b      	ldr	r3, [r7, #4]
 80037a0:	f8a3 2102 	strh.w	r2, [r3, #258]	; 0x102
 80037a4:	687a      	ldr	r2, [r7, #4]
 80037a6:	f892 3392 	ldrb.w	r3, [r2, #914]	; 0x392
 80037aa:	f043 0301 	orr.w	r3, r3, #1
 80037ae:	f882 3392 	strb.w	r3, [r2, #914]	; 0x392
 80037b2:	687a      	ldr	r2, [r7, #4]
 80037b4:	f892 3392 	ldrb.w	r3, [r2, #914]	; 0x392
 80037b8:	f043 0302 	orr.w	r3, r3, #2
 80037bc:	f882 3392 	strb.w	r3, [r2, #914]	; 0x392
 80037c0:	687a      	ldr	r2, [r7, #4]
 80037c2:	f892 3392 	ldrb.w	r3, [r2, #914]	; 0x392
 80037c6:	f043 0304 	orr.w	r3, r3, #4
 80037ca:	f882 3392 	strb.w	r3, [r2, #914]	; 0x392
 80037ce:	687a      	ldr	r2, [r7, #4]
 80037d0:	f892 3392 	ldrb.w	r3, [r2, #914]	; 0x392
 80037d4:	f043 0308 	orr.w	r3, r3, #8
 80037d8:	f882 3392 	strb.w	r3, [r2, #914]	; 0x392
 80037dc:	687a      	ldr	r2, [r7, #4]
 80037de:	f892 3392 	ldrb.w	r3, [r2, #914]	; 0x392
 80037e2:	f043 0310 	orr.w	r3, r3, #16
 80037e6:	f882 3392 	strb.w	r3, [r2, #914]	; 0x392
 80037ea:	687a      	ldr	r2, [r7, #4]
 80037ec:	f892 3392 	ldrb.w	r3, [r2, #914]	; 0x392
 80037f0:	f043 0320 	orr.w	r3, r3, #32
 80037f4:	f882 3392 	strb.w	r3, [r2, #914]	; 0x392
 80037f8:	687a      	ldr	r2, [r7, #4]
 80037fa:	f892 3392 	ldrb.w	r3, [r2, #914]	; 0x392
 80037fe:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8003802:	f882 3392 	strb.w	r3, [r2, #914]	; 0x392
 8003806:	687a      	ldr	r2, [r7, #4]
 8003808:	f892 3392 	ldrb.w	r3, [r2, #914]	; 0x392
 800380c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8003810:	f882 3392 	strb.w	r3, [r2, #914]	; 0x392
 8003814:	e1f5      	b.n	8003c02 <_ZN13SFE_UBLOX_GPS16processUBXpacketEP9ubxPacket+0xb4a>
 8003816:	e1f4      	b.n	8003c02 <_ZN13SFE_UBLOX_GPS16processUBXpacketEP9ubxPacket+0xb4a>
 8003818:	683b      	ldr	r3, [r7, #0]
 800381a:	785b      	ldrb	r3, [r3, #1]
 800381c:	2b01      	cmp	r3, #1
 800381e:	d140      	bne.n	80038a2 <_ZN13SFE_UBLOX_GPS16processUBXpacketEP9ubxPacket+0x7ea>
 8003820:	683b      	ldr	r3, [r7, #0]
 8003822:	885b      	ldrh	r3, [r3, #2]
 8003824:	2b20      	cmp	r3, #32
 8003826:	d13c      	bne.n	80038a2 <_ZN13SFE_UBLOX_GPS16processUBXpacketEP9ubxPacket+0x7ea>
 8003828:	2100      	movs	r1, #0
 800382a:	6878      	ldr	r0, [r7, #4]
 800382c:	f000 fe06 	bl	800443c <_ZN13SFE_UBLOX_GPS11extractLongEh>
 8003830:	4602      	mov	r2, r0
 8003832:	687b      	ldr	r3, [r7, #4]
 8003834:	f8c3 21a8 	str.w	r2, [r3, #424]	; 0x1a8
 8003838:	2108      	movs	r1, #8
 800383a:	6878      	ldr	r0, [r7, #4]
 800383c:	f000 fe33 	bl	80044a6 <_ZN13SFE_UBLOX_GPS17extractSignedLongEh>
 8003840:	4602      	mov	r2, r0
 8003842:	687b      	ldr	r3, [r7, #4]
 8003844:	f8c3 21ac 	str.w	r2, [r3, #428]	; 0x1ac
 8003848:	210c      	movs	r1, #12
 800384a:	6878      	ldr	r0, [r7, #4]
 800384c:	f000 fe2b 	bl	80044a6 <_ZN13SFE_UBLOX_GPS17extractSignedLongEh>
 8003850:	4602      	mov	r2, r0
 8003852:	687b      	ldr	r3, [r7, #4]
 8003854:	f8c3 21b0 	str.w	r2, [r3, #432]	; 0x1b0
 8003858:	2110      	movs	r1, #16
 800385a:	6878      	ldr	r0, [r7, #4]
 800385c:	f000 fe23 	bl	80044a6 <_ZN13SFE_UBLOX_GPS17extractSignedLongEh>
 8003860:	4602      	mov	r2, r0
 8003862:	687b      	ldr	r3, [r7, #4]
 8003864:	f8c3 21b4 	str.w	r2, [r3, #436]	; 0x1b4
 8003868:	2114      	movs	r1, #20
 800386a:	6878      	ldr	r0, [r7, #4]
 800386c:	f000 fde6 	bl	800443c <_ZN13SFE_UBLOX_GPS11extractLongEh>
 8003870:	4602      	mov	r2, r0
 8003872:	687b      	ldr	r3, [r7, #4]
 8003874:	f8c3 21b8 	str.w	r2, [r3, #440]	; 0x1b8
 8003878:	2118      	movs	r1, #24
 800387a:	6878      	ldr	r0, [r7, #4]
 800387c:	f000 fdde 	bl	800443c <_ZN13SFE_UBLOX_GPS11extractLongEh>
 8003880:	4602      	mov	r2, r0
 8003882:	687b      	ldr	r3, [r7, #4]
 8003884:	f8c3 21bc 	str.w	r2, [r3, #444]	; 0x1bc
 8003888:	211c      	movs	r1, #28
 800388a:	6878      	ldr	r0, [r7, #4]
 800388c:	f000 fdd6 	bl	800443c <_ZN13SFE_UBLOX_GPS11extractLongEh>
 8003890:	4602      	mov	r2, r0
 8003892:	687b      	ldr	r3, [r7, #4]
 8003894:	f8c3 21c0 	str.w	r2, [r3, #448]	; 0x1c0
 8003898:	687b      	ldr	r3, [r7, #4]
 800389a:	2201      	movs	r2, #1
 800389c:	f883 2394 	strb.w	r2, [r3, #916]	; 0x394
 80038a0:	e1b0      	b.n	8003c04 <_ZN13SFE_UBLOX_GPS16processUBXpacketEP9ubxPacket+0xb4c>
 80038a2:	683b      	ldr	r3, [r7, #0]
 80038a4:	785b      	ldrb	r3, [r3, #1]
 80038a6:	2b02      	cmp	r3, #2
 80038a8:	f040 8089 	bne.w	80039be <_ZN13SFE_UBLOX_GPS16processUBXpacketEP9ubxPacket+0x906>
 80038ac:	683b      	ldr	r3, [r7, #0]
 80038ae:	885b      	ldrh	r3, [r3, #2]
 80038b0:	2b24      	cmp	r3, #36	; 0x24
 80038b2:	f040 8084 	bne.w	80039be <_ZN13SFE_UBLOX_GPS16processUBXpacketEP9ubxPacket+0x906>
 80038b6:	2108      	movs	r1, #8
 80038b8:	6878      	ldr	r0, [r7, #4]
 80038ba:	f000 fdbf 	bl	800443c <_ZN13SFE_UBLOX_GPS11extractLongEh>
 80038be:	4602      	mov	r2, r0
 80038c0:	687b      	ldr	r3, [r7, #4]
 80038c2:	f8c3 21cc 	str.w	r2, [r3, #460]	; 0x1cc
 80038c6:	210c      	movs	r1, #12
 80038c8:	6878      	ldr	r0, [r7, #4]
 80038ca:	f000 fdec 	bl	80044a6 <_ZN13SFE_UBLOX_GPS17extractSignedLongEh>
 80038ce:	4602      	mov	r2, r0
 80038d0:	687b      	ldr	r3, [r7, #4]
 80038d2:	f8c3 21d0 	str.w	r2, [r3, #464]	; 0x1d0
 80038d6:	2110      	movs	r1, #16
 80038d8:	6878      	ldr	r0, [r7, #4]
 80038da:	f000 fde4 	bl	80044a6 <_ZN13SFE_UBLOX_GPS17extractSignedLongEh>
 80038de:	4602      	mov	r2, r0
 80038e0:	687b      	ldr	r3, [r7, #4]
 80038e2:	f8c3 21d4 	str.w	r2, [r3, #468]	; 0x1d4
 80038e6:	2114      	movs	r1, #20
 80038e8:	6878      	ldr	r0, [r7, #4]
 80038ea:	f000 fddc 	bl	80044a6 <_ZN13SFE_UBLOX_GPS17extractSignedLongEh>
 80038ee:	4602      	mov	r2, r0
 80038f0:	687b      	ldr	r3, [r7, #4]
 80038f2:	f8c3 21d8 	str.w	r2, [r3, #472]	; 0x1d8
 80038f6:	2118      	movs	r1, #24
 80038f8:	6878      	ldr	r0, [r7, #4]
 80038fa:	f000 fdd4 	bl	80044a6 <_ZN13SFE_UBLOX_GPS17extractSignedLongEh>
 80038fe:	4602      	mov	r2, r0
 8003900:	687b      	ldr	r3, [r7, #4]
 8003902:	f8c3 21dc 	str.w	r2, [r3, #476]	; 0x1dc
 8003906:	211c      	movs	r1, #28
 8003908:	6878      	ldr	r0, [r7, #4]
 800390a:	f000 fdcc 	bl	80044a6 <_ZN13SFE_UBLOX_GPS17extractSignedLongEh>
 800390e:	4602      	mov	r2, r0
 8003910:	687b      	ldr	r3, [r7, #4]
 8003912:	f8c3 21e0 	str.w	r2, [r3, #480]	; 0x1e0
 8003916:	2120      	movs	r1, #32
 8003918:	6878      	ldr	r0, [r7, #4]
 800391a:	f000 fdc4 	bl	80044a6 <_ZN13SFE_UBLOX_GPS17extractSignedLongEh>
 800391e:	4602      	mov	r2, r0
 8003920:	687b      	ldr	r3, [r7, #4]
 8003922:	f8c3 21e4 	str.w	r2, [r3, #484]	; 0x1e4
 8003926:	2100      	movs	r1, #0
 8003928:	6878      	ldr	r0, [r7, #4]
 800392a:	f000 fd87 	bl	800443c <_ZN13SFE_UBLOX_GPS11extractLongEh>
 800392e:	6178      	str	r0, [r7, #20]
 8003930:	697b      	ldr	r3, [r7, #20]
 8003932:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8003936:	2b00      	cmp	r3, #0
 8003938:	bf14      	ite	ne
 800393a:	2301      	movne	r3, #1
 800393c:	2300      	moveq	r3, #0
 800393e:	b2da      	uxtb	r2, r3
 8003940:	687b      	ldr	r3, [r7, #4]
 8003942:	f883 21c4 	strb.w	r2, [r3, #452]	; 0x1c4
 8003946:	697b      	ldr	r3, [r7, #20]
 8003948:	f403 7300 	and.w	r3, r3, #512	; 0x200
 800394c:	2b00      	cmp	r3, #0
 800394e:	bf14      	ite	ne
 8003950:	2301      	movne	r3, #1
 8003952:	2300      	moveq	r3, #0
 8003954:	b2da      	uxtb	r2, r3
 8003956:	687b      	ldr	r3, [r7, #4]
 8003958:	f883 21c5 	strb.w	r2, [r3, #453]	; 0x1c5
 800395c:	697b      	ldr	r3, [r7, #20]
 800395e:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8003962:	2b00      	cmp	r3, #0
 8003964:	bf14      	ite	ne
 8003966:	2301      	movne	r3, #1
 8003968:	2300      	moveq	r3, #0
 800396a:	b2da      	uxtb	r2, r3
 800396c:	687b      	ldr	r3, [r7, #4]
 800396e:	f883 21c6 	strb.w	r2, [r3, #454]	; 0x1c6
 8003972:	697b      	ldr	r3, [r7, #20]
 8003974:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 8003978:	2b00      	cmp	r3, #0
 800397a:	bf14      	ite	ne
 800397c:	2301      	movne	r3, #1
 800397e:	2300      	moveq	r3, #0
 8003980:	b2da      	uxtb	r2, r3
 8003982:	687b      	ldr	r3, [r7, #4]
 8003984:	f883 21c7 	strb.w	r2, [r3, #455]	; 0x1c7
 8003988:	697b      	ldr	r3, [r7, #20]
 800398a:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 800398e:	2b00      	cmp	r3, #0
 8003990:	bf14      	ite	ne
 8003992:	2301      	movne	r3, #1
 8003994:	2300      	moveq	r3, #0
 8003996:	b2da      	uxtb	r2, r3
 8003998:	687b      	ldr	r3, [r7, #4]
 800399a:	f883 21c8 	strb.w	r2, [r3, #456]	; 0x1c8
 800399e:	697b      	ldr	r3, [r7, #20]
 80039a0:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
 80039a4:	2b00      	cmp	r3, #0
 80039a6:	bf14      	ite	ne
 80039a8:	2301      	movne	r3, #1
 80039aa:	2300      	moveq	r3, #0
 80039ac:	b2da      	uxtb	r2, r3
 80039ae:	687b      	ldr	r3, [r7, #4]
 80039b0:	f883 21c9 	strb.w	r2, [r3, #457]	; 0x1c9
 80039b4:	687b      	ldr	r3, [r7, #4]
 80039b6:	2201      	movs	r2, #1
 80039b8:	f883 2395 	strb.w	r2, [r3, #917]	; 0x395
 80039bc:	e122      	b.n	8003c04 <_ZN13SFE_UBLOX_GPS16processUBXpacketEP9ubxPacket+0xb4c>
 80039be:	683b      	ldr	r3, [r7, #0]
 80039c0:	785b      	ldrb	r3, [r3, #1]
 80039c2:	2b00      	cmp	r3, #0
 80039c4:	f040 811e 	bne.w	8003c04 <_ZN13SFE_UBLOX_GPS16processUBXpacketEP9ubxPacket+0xb4c>
 80039c8:	683b      	ldr	r3, [r7, #0]
 80039ca:	885b      	ldrh	r3, [r3, #2]
 80039cc:	2b48      	cmp	r3, #72	; 0x48
 80039ce:	f040 8119 	bne.w	8003c04 <_ZN13SFE_UBLOX_GPS16processUBXpacketEP9ubxPacket+0xb4c>
 80039d2:	2100      	movs	r1, #0
 80039d4:	6878      	ldr	r0, [r7, #4]
 80039d6:	f000 fd31 	bl	800443c <_ZN13SFE_UBLOX_GPS11extractLongEh>
 80039da:	4602      	mov	r2, r0
 80039dc:	687b      	ldr	r3, [r7, #4]
 80039de:	f8c3 21e8 	str.w	r2, [r3, #488]	; 0x1e8
 80039e2:	2104      	movs	r1, #4
 80039e4:	6878      	ldr	r0, [r7, #4]
 80039e6:	f000 fd70 	bl	80044ca <_ZN13SFE_UBLOX_GPS10extractIntEh>
 80039ea:	4603      	mov	r3, r0
 80039ec:	461a      	mov	r2, r3
 80039ee:	687b      	ldr	r3, [r7, #4]
 80039f0:	f8a3 21ec 	strh.w	r2, [r3, #492]	; 0x1ec
 80039f4:	2106      	movs	r1, #6
 80039f6:	6878      	ldr	r0, [r7, #4]
 80039f8:	f000 fd9e 	bl	8004538 <_ZN13SFE_UBLOX_GPS11extractByteEh>
 80039fc:	4603      	mov	r3, r0
 80039fe:	461a      	mov	r2, r3
 8003a00:	687b      	ldr	r3, [r7, #4]
 8003a02:	f883 21ee 	strb.w	r2, [r3, #494]	; 0x1ee
 8003a06:	2107      	movs	r1, #7
 8003a08:	6878      	ldr	r0, [r7, #4]
 8003a0a:	f000 fd95 	bl	8004538 <_ZN13SFE_UBLOX_GPS11extractByteEh>
 8003a0e:	4603      	mov	r3, r0
 8003a10:	461a      	mov	r2, r3
 8003a12:	687b      	ldr	r3, [r7, #4]
 8003a14:	f883 21ef 	strb.w	r2, [r3, #495]	; 0x1ef
 8003a18:	2108      	movs	r1, #8
 8003a1a:	6878      	ldr	r0, [r7, #4]
 8003a1c:	f000 fd8c 	bl	8004538 <_ZN13SFE_UBLOX_GPS11extractByteEh>
 8003a20:	4603      	mov	r3, r0
 8003a22:	461a      	mov	r2, r3
 8003a24:	687b      	ldr	r3, [r7, #4]
 8003a26:	f883 21f0 	strb.w	r2, [r3, #496]	; 0x1f0
 8003a2a:	2109      	movs	r1, #9
 8003a2c:	6878      	ldr	r0, [r7, #4]
 8003a2e:	f000 fd83 	bl	8004538 <_ZN13SFE_UBLOX_GPS11extractByteEh>
 8003a32:	4603      	mov	r3, r0
 8003a34:	461a      	mov	r2, r3
 8003a36:	687b      	ldr	r3, [r7, #4]
 8003a38:	f883 21f1 	strb.w	r2, [r3, #497]	; 0x1f1
 8003a3c:	210a      	movs	r1, #10
 8003a3e:	6878      	ldr	r0, [r7, #4]
 8003a40:	f000 fd7a 	bl	8004538 <_ZN13SFE_UBLOX_GPS11extractByteEh>
 8003a44:	4603      	mov	r3, r0
 8003a46:	461a      	mov	r2, r3
 8003a48:	687b      	ldr	r3, [r7, #4]
 8003a4a:	f883 21f2 	strb.w	r2, [r3, #498]	; 0x1f2
 8003a4e:	210c      	movs	r1, #12
 8003a50:	6878      	ldr	r0, [r7, #4]
 8003a52:	f000 fd28 	bl	80044a6 <_ZN13SFE_UBLOX_GPS17extractSignedLongEh>
 8003a56:	4602      	mov	r2, r0
 8003a58:	687b      	ldr	r3, [r7, #4]
 8003a5a:	f8c3 21f8 	str.w	r2, [r3, #504]	; 0x1f8
 8003a5e:	2110      	movs	r1, #16
 8003a60:	6878      	ldr	r0, [r7, #4]
 8003a62:	f000 fd69 	bl	8004538 <_ZN13SFE_UBLOX_GPS11extractByteEh>
 8003a66:	4603      	mov	r3, r0
 8003a68:	461a      	mov	r2, r3
 8003a6a:	687b      	ldr	r3, [r7, #4]
 8003a6c:	f883 21fc 	strb.w	r2, [r3, #508]	; 0x1fc
 8003a70:	2114      	movs	r1, #20
 8003a72:	6878      	ldr	r0, [r7, #4]
 8003a74:	f000 fd17 	bl	80044a6 <_ZN13SFE_UBLOX_GPS17extractSignedLongEh>
 8003a78:	4602      	mov	r2, r0
 8003a7a:	687b      	ldr	r3, [r7, #4]
 8003a7c:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 8003a80:	2118      	movs	r1, #24
 8003a82:	6878      	ldr	r0, [r7, #4]
 8003a84:	f000 fd0f 	bl	80044a6 <_ZN13SFE_UBLOX_GPS17extractSignedLongEh>
 8003a88:	4602      	mov	r2, r0
 8003a8a:	687b      	ldr	r3, [r7, #4]
 8003a8c:	f8c3 2208 	str.w	r2, [r3, #520]	; 0x208
 8003a90:	211c      	movs	r1, #28
 8003a92:	6878      	ldr	r0, [r7, #4]
 8003a94:	f000 fd07 	bl	80044a6 <_ZN13SFE_UBLOX_GPS17extractSignedLongEh>
 8003a98:	4602      	mov	r2, r0
 8003a9a:	687b      	ldr	r3, [r7, #4]
 8003a9c:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 8003aa0:	2120      	movs	r1, #32
 8003aa2:	6878      	ldr	r0, [r7, #4]
 8003aa4:	f000 fcff 	bl	80044a6 <_ZN13SFE_UBLOX_GPS17extractSignedLongEh>
 8003aa8:	4602      	mov	r2, r0
 8003aaa:	687b      	ldr	r3, [r7, #4]
 8003aac:	f8c3 2210 	str.w	r2, [r3, #528]	; 0x210
 8003ab0:	2124      	movs	r1, #36	; 0x24
 8003ab2:	6878      	ldr	r0, [r7, #4]
 8003ab4:	f000 fcf7 	bl	80044a6 <_ZN13SFE_UBLOX_GPS17extractSignedLongEh>
 8003ab8:	4602      	mov	r2, r0
 8003aba:	687b      	ldr	r3, [r7, #4]
 8003abc:	f8c3 2214 	str.w	r2, [r3, #532]	; 0x214
 8003ac0:	2128      	movs	r1, #40	; 0x28
 8003ac2:	6878      	ldr	r0, [r7, #4]
 8003ac4:	f000 fcef 	bl	80044a6 <_ZN13SFE_UBLOX_GPS17extractSignedLongEh>
 8003ac8:	4602      	mov	r2, r0
 8003aca:	687b      	ldr	r3, [r7, #4]
 8003acc:	f8c3 2218 	str.w	r2, [r3, #536]	; 0x218
 8003ad0:	212c      	movs	r1, #44	; 0x2c
 8003ad2:	6878      	ldr	r0, [r7, #4]
 8003ad4:	f000 fce7 	bl	80044a6 <_ZN13SFE_UBLOX_GPS17extractSignedLongEh>
 8003ad8:	4602      	mov	r2, r0
 8003ada:	687b      	ldr	r3, [r7, #4]
 8003adc:	f8c3 221c 	str.w	r2, [r3, #540]	; 0x21c
 8003ae0:	2130      	movs	r1, #48	; 0x30
 8003ae2:	6878      	ldr	r0, [r7, #4]
 8003ae4:	f000 fcdf 	bl	80044a6 <_ZN13SFE_UBLOX_GPS17extractSignedLongEh>
 8003ae8:	4602      	mov	r2, r0
 8003aea:	687b      	ldr	r3, [r7, #4]
 8003aec:	f8c3 2220 	str.w	r2, [r3, #544]	; 0x220
 8003af0:	2134      	movs	r1, #52	; 0x34
 8003af2:	6878      	ldr	r0, [r7, #4]
 8003af4:	f000 fca2 	bl	800443c <_ZN13SFE_UBLOX_GPS11extractLongEh>
 8003af8:	4602      	mov	r2, r0
 8003afa:	687b      	ldr	r3, [r7, #4]
 8003afc:	f8c3 2224 	str.w	r2, [r3, #548]	; 0x224
 8003b00:	2138      	movs	r1, #56	; 0x38
 8003b02:	6878      	ldr	r0, [r7, #4]
 8003b04:	f000 fc9a 	bl	800443c <_ZN13SFE_UBLOX_GPS11extractLongEh>
 8003b08:	4602      	mov	r2, r0
 8003b0a:	687b      	ldr	r3, [r7, #4]
 8003b0c:	f8c3 2228 	str.w	r2, [r3, #552]	; 0x228
 8003b10:	213c      	movs	r1, #60	; 0x3c
 8003b12:	6878      	ldr	r0, [r7, #4]
 8003b14:	f000 fc92 	bl	800443c <_ZN13SFE_UBLOX_GPS11extractLongEh>
 8003b18:	4602      	mov	r2, r0
 8003b1a:	687b      	ldr	r3, [r7, #4]
 8003b1c:	f8c3 222c 	str.w	r2, [r3, #556]	; 0x22c
 8003b20:	2140      	movs	r1, #64	; 0x40
 8003b22:	6878      	ldr	r0, [r7, #4]
 8003b24:	f000 fc8a 	bl	800443c <_ZN13SFE_UBLOX_GPS11extractLongEh>
 8003b28:	4602      	mov	r2, r0
 8003b2a:	687b      	ldr	r3, [r7, #4]
 8003b2c:	f8c3 2230 	str.w	r2, [r3, #560]	; 0x230
 8003b30:	210b      	movs	r1, #11
 8003b32:	6878      	ldr	r0, [r7, #4]
 8003b34:	f000 fd00 	bl	8004538 <_ZN13SFE_UBLOX_GPS11extractByteEh>
 8003b38:	4603      	mov	r3, r0
 8003b3a:	74fb      	strb	r3, [r7, #19]
 8003b3c:	7cfb      	ldrb	r3, [r7, #19]
 8003b3e:	f003 0301 	and.w	r3, r3, #1
 8003b42:	2b00      	cmp	r3, #0
 8003b44:	bfcc      	ite	gt
 8003b46:	2301      	movgt	r3, #1
 8003b48:	2300      	movle	r3, #0
 8003b4a:	b2da      	uxtb	r2, r3
 8003b4c:	687b      	ldr	r3, [r7, #4]
 8003b4e:	f883 21f3 	strb.w	r2, [r3, #499]	; 0x1f3
 8003b52:	7cfb      	ldrb	r3, [r7, #19]
 8003b54:	f003 0302 	and.w	r3, r3, #2
 8003b58:	2b00      	cmp	r3, #0
 8003b5a:	bfcc      	ite	gt
 8003b5c:	2301      	movgt	r3, #1
 8003b5e:	2300      	movle	r3, #0
 8003b60:	b2da      	uxtb	r2, r3
 8003b62:	687b      	ldr	r3, [r7, #4]
 8003b64:	f883 21f4 	strb.w	r2, [r3, #500]	; 0x1f4
 8003b68:	7cfb      	ldrb	r3, [r7, #19]
 8003b6a:	f003 0304 	and.w	r3, r3, #4
 8003b6e:	2b00      	cmp	r3, #0
 8003b70:	bfcc      	ite	gt
 8003b72:	2301      	movgt	r3, #1
 8003b74:	2300      	movle	r3, #0
 8003b76:	b2da      	uxtb	r2, r3
 8003b78:	687b      	ldr	r3, [r7, #4]
 8003b7a:	f883 21f5 	strb.w	r2, [r3, #501]	; 0x1f5
 8003b7e:	2111      	movs	r1, #17
 8003b80:	6878      	ldr	r0, [r7, #4]
 8003b82:	f000 fcd9 	bl	8004538 <_ZN13SFE_UBLOX_GPS11extractByteEh>
 8003b86:	4603      	mov	r3, r0
 8003b88:	74bb      	strb	r3, [r7, #18]
 8003b8a:	7cbb      	ldrb	r3, [r7, #18]
 8003b8c:	f003 0301 	and.w	r3, r3, #1
 8003b90:	2b00      	cmp	r3, #0
 8003b92:	bfcc      	ite	gt
 8003b94:	2301      	movgt	r3, #1
 8003b96:	2300      	movle	r3, #0
 8003b98:	b2da      	uxtb	r2, r3
 8003b9a:	687b      	ldr	r3, [r7, #4]
 8003b9c:	f883 21fd 	strb.w	r2, [r3, #509]	; 0x1fd
 8003ba0:	7cbb      	ldrb	r3, [r7, #18]
 8003ba2:	f003 0302 	and.w	r3, r3, #2
 8003ba6:	2b00      	cmp	r3, #0
 8003ba8:	bfcc      	ite	gt
 8003baa:	2301      	movgt	r3, #1
 8003bac:	2300      	movle	r3, #0
 8003bae:	b2da      	uxtb	r2, r3
 8003bb0:	687b      	ldr	r3, [r7, #4]
 8003bb2:	f883 21fe 	strb.w	r2, [r3, #510]	; 0x1fe
 8003bb6:	7cbb      	ldrb	r3, [r7, #18]
 8003bb8:	f003 0304 	and.w	r3, r3, #4
 8003bbc:	2b00      	cmp	r3, #0
 8003bbe:	bfcc      	ite	gt
 8003bc0:	2301      	movgt	r3, #1
 8003bc2:	2300      	movle	r3, #0
 8003bc4:	b2da      	uxtb	r2, r3
 8003bc6:	687b      	ldr	r3, [r7, #4]
 8003bc8:	f883 21ff 	strb.w	r2, [r3, #511]	; 0x1ff
 8003bcc:	7cbb      	ldrb	r3, [r7, #18]
 8003bce:	f003 0308 	and.w	r3, r3, #8
 8003bd2:	2b00      	cmp	r3, #0
 8003bd4:	bfcc      	ite	gt
 8003bd6:	2301      	movgt	r3, #1
 8003bd8:	2300      	movle	r3, #0
 8003bda:	b2da      	uxtb	r2, r3
 8003bdc:	687b      	ldr	r3, [r7, #4]
 8003bde:	f883 2200 	strb.w	r2, [r3, #512]	; 0x200
 8003be2:	7cbb      	ldrb	r3, [r7, #18]
 8003be4:	f003 0310 	and.w	r3, r3, #16
 8003be8:	2b00      	cmp	r3, #0
 8003bea:	bfcc      	ite	gt
 8003bec:	2301      	movgt	r3, #1
 8003bee:	2300      	movle	r3, #0
 8003bf0:	b2da      	uxtb	r2, r3
 8003bf2:	687b      	ldr	r3, [r7, #4]
 8003bf4:	f883 2201 	strb.w	r2, [r3, #513]	; 0x201
 8003bf8:	687b      	ldr	r3, [r7, #4]
 8003bfa:	2201      	movs	r2, #1
 8003bfc:	f883 2396 	strb.w	r2, [r3, #918]	; 0x396
 8003c00:	e000      	b.n	8003c04 <_ZN13SFE_UBLOX_GPS16processUBXpacketEP9ubxPacket+0xb4c>
 8003c02:	bf00      	nop
 8003c04:	bf00      	nop
 8003c06:	3718      	adds	r7, #24
 8003c08:	46bd      	mov	sp, r7
 8003c0a:	bd80      	pop	{r7, pc}

08003c0c <_ZN13SFE_UBLOX_GPS11sendCommandEP9ubxPackett>:
 8003c0c:	b580      	push	{r7, lr}
 8003c0e:	b088      	sub	sp, #32
 8003c10:	af02      	add	r7, sp, #8
 8003c12:	60f8      	str	r0, [r7, #12]
 8003c14:	60b9      	str	r1, [r7, #8]
 8003c16:	4613      	mov	r3, r2
 8003c18:	80fb      	strh	r3, [r7, #6]
 8003c1a:	2300      	movs	r3, #0
 8003c1c:	82bb      	strh	r3, [r7, #20]
 8003c1e:	2300      	movs	r3, #0
 8003c20:	75fb      	strb	r3, [r7, #23]
 8003c22:	68b9      	ldr	r1, [r7, #8]
 8003c24:	68f8      	ldr	r0, [r7, #12]
 8003c26:	f000 f94b 	bl	8003ec0 <_ZN13SFE_UBLOX_GPS12calcChecksumEP9ubxPacket>
 8003c2a:	68fb      	ldr	r3, [r7, #12]
 8003c2c:	f893 3238 	ldrb.w	r3, [r3, #568]	; 0x238
 8003c30:	2b01      	cmp	r3, #1
 8003c32:	d103      	bne.n	8003c3c <_ZN13SFE_UBLOX_GPS11sendCommandEP9ubxPackett+0x30>
 8003c34:	68b9      	ldr	r1, [r7, #8]
 8003c36:	68f8      	ldr	r0, [r7, #12]
 8003c38:	f000 f9d2 	bl	8003fe0 <_ZN13SFE_UBLOX_GPS11printPacketEP9ubxPacket>
 8003c3c:	68fb      	ldr	r3, [r7, #12]
 8003c3e:	f893 3236 	ldrb.w	r3, [r3, #566]	; 0x236
 8003c42:	2b00      	cmp	r3, #0
 8003c44:	d10c      	bne.n	8003c60 <_ZN13SFE_UBLOX_GPS11sendCommandEP9ubxPackett+0x54>
 8003c46:	88fb      	ldrh	r3, [r7, #6]
 8003c48:	461a      	mov	r2, r3
 8003c4a:	68b9      	ldr	r1, [r7, #8]
 8003c4c:	68f8      	ldr	r0, [r7, #12]
 8003c4e:	f000 f837 	bl	8003cc0 <_ZN13SFE_UBLOX_GPS14sendI2cCommandEP9ubxPackett>
 8003c52:	4603      	mov	r3, r0
 8003c54:	75fb      	strb	r3, [r7, #23]
 8003c56:	7dfb      	ldrb	r3, [r7, #23]
 8003c58:	2b00      	cmp	r3, #0
 8003c5a:	d00a      	beq.n	8003c72 <_ZN13SFE_UBLOX_GPS11sendCommandEP9ubxPackett+0x66>
 8003c5c:	7dfb      	ldrb	r3, [r7, #23]
 8003c5e:	e02b      	b.n	8003cb8 <_ZN13SFE_UBLOX_GPS11sendCommandEP9ubxPackett+0xac>
 8003c60:	68fb      	ldr	r3, [r7, #12]
 8003c62:	f893 3236 	ldrb.w	r3, [r3, #566]	; 0x236
 8003c66:	2b01      	cmp	r3, #1
 8003c68:	d103      	bne.n	8003c72 <_ZN13SFE_UBLOX_GPS11sendCommandEP9ubxPackett+0x66>
 8003c6a:	68b9      	ldr	r1, [r7, #8]
 8003c6c:	68f8      	ldr	r0, [r7, #12]
 8003c6e:	f000 f8e9 	bl	8003e44 <_ZN13SFE_UBLOX_GPS17sendSerialCommandEP9ubxPacket>
 8003c72:	88fb      	ldrh	r3, [r7, #6]
 8003c74:	2b00      	cmp	r3, #0
 8003c76:	d01e      	beq.n	8003cb6 <_ZN13SFE_UBLOX_GPS11sendCommandEP9ubxPackett+0xaa>
 8003c78:	68bb      	ldr	r3, [r7, #8]
 8003c7a:	781b      	ldrb	r3, [r3, #0]
 8003c7c:	2b06      	cmp	r3, #6
 8003c7e:	d10d      	bne.n	8003c9c <_ZN13SFE_UBLOX_GPS11sendCommandEP9ubxPackett+0x90>
 8003c80:	68bb      	ldr	r3, [r7, #8]
 8003c82:	781a      	ldrb	r2, [r3, #0]
 8003c84:	68bb      	ldr	r3, [r7, #8]
 8003c86:	7859      	ldrb	r1, [r3, #1]
 8003c88:	88fb      	ldrh	r3, [r7, #6]
 8003c8a:	9300      	str	r3, [sp, #0]
 8003c8c:	460b      	mov	r3, r1
 8003c8e:	68b9      	ldr	r1, [r7, #8]
 8003c90:	68f8      	ldr	r0, [r7, #12]
 8003c92:	f000 f9b1 	bl	8003ff8 <_ZN13SFE_UBLOX_GPS18waitForACKResponseEP9ubxPackethht>
 8003c96:	4603      	mov	r3, r0
 8003c98:	75fb      	strb	r3, [r7, #23]
 8003c9a:	e00c      	b.n	8003cb6 <_ZN13SFE_UBLOX_GPS11sendCommandEP9ubxPackett+0xaa>
 8003c9c:	68bb      	ldr	r3, [r7, #8]
 8003c9e:	781a      	ldrb	r2, [r3, #0]
 8003ca0:	68bb      	ldr	r3, [r7, #8]
 8003ca2:	7859      	ldrb	r1, [r3, #1]
 8003ca4:	88fb      	ldrh	r3, [r7, #6]
 8003ca6:	9300      	str	r3, [sp, #0]
 8003ca8:	460b      	mov	r3, r1
 8003caa:	68b9      	ldr	r1, [r7, #8]
 8003cac:	68f8      	ldr	r0, [r7, #12]
 8003cae:	f000 fa80 	bl	80041b2 <_ZN13SFE_UBLOX_GPS20waitForNoACKResponseEP9ubxPackethht>
 8003cb2:	4603      	mov	r3, r0
 8003cb4:	75fb      	strb	r3, [r7, #23]
 8003cb6:	7dfb      	ldrb	r3, [r7, #23]
 8003cb8:	4618      	mov	r0, r3
 8003cba:	3718      	adds	r7, #24
 8003cbc:	46bd      	mov	sp, r7
 8003cbe:	bd80      	pop	{r7, pc}

08003cc0 <_ZN13SFE_UBLOX_GPS14sendI2cCommandEP9ubxPackett>:
 8003cc0:	b580      	push	{r7, lr}
 8003cc2:	b08a      	sub	sp, #40	; 0x28
 8003cc4:	af02      	add	r7, sp, #8
 8003cc6:	60f8      	str	r0, [r7, #12]
 8003cc8:	60b9      	str	r1, [r7, #8]
 8003cca:	4613      	mov	r3, r2
 8003ccc:	80fb      	strh	r3, [r7, #6]
 8003cce:	23ff      	movs	r3, #255	; 0xff
 8003cd0:	743b      	strb	r3, [r7, #16]
 8003cd2:	f107 0210 	add.w	r2, r7, #16
 8003cd6:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 8003cda:	9300      	str	r3, [sp, #0]
 8003cdc:	2301      	movs	r3, #1
 8003cde:	2184      	movs	r1, #132	; 0x84
 8003ce0:	4856      	ldr	r0, [pc, #344]	; (8003e3c <_ZN13SFE_UBLOX_GPS14sendI2cCommandEP9ubxPackett+0x17c>)
 8003ce2:	f005 fbbf 	bl	8009464 <HAL_I2C_Master_Seq_Transmit_DMA>
 8003ce6:	4603      	mov	r3, r0
 8003ce8:	461a      	mov	r2, r3
 8003cea:	4b55      	ldr	r3, [pc, #340]	; (8003e40 <_ZN13SFE_UBLOX_GPS14sendI2cCommandEP9ubxPackett+0x180>)
 8003cec:	701a      	strb	r2, [r3, #0]
 8003cee:	2004      	movs	r0, #4
 8003cf0:	f002 fb77 	bl	80063e2 <HAL_Delay>
 8003cf4:	2004      	movs	r0, #4
 8003cf6:	f002 fb74 	bl	80063e2 <HAL_Delay>
 8003cfa:	f7fe fbaf 	bl	800245c <_Z5i2cOkv>
 8003cfe:	23b5      	movs	r3, #181	; 0xb5
 8003d00:	743b      	strb	r3, [r7, #16]
 8003d02:	2362      	movs	r3, #98	; 0x62
 8003d04:	747b      	strb	r3, [r7, #17]
 8003d06:	68bb      	ldr	r3, [r7, #8]
 8003d08:	781b      	ldrb	r3, [r3, #0]
 8003d0a:	74bb      	strb	r3, [r7, #18]
 8003d0c:	68bb      	ldr	r3, [r7, #8]
 8003d0e:	785b      	ldrb	r3, [r3, #1]
 8003d10:	74fb      	strb	r3, [r7, #19]
 8003d12:	68bb      	ldr	r3, [r7, #8]
 8003d14:	885b      	ldrh	r3, [r3, #2]
 8003d16:	b2db      	uxtb	r3, r3
 8003d18:	753b      	strb	r3, [r7, #20]
 8003d1a:	68bb      	ldr	r3, [r7, #8]
 8003d1c:	885b      	ldrh	r3, [r3, #2]
 8003d1e:	121b      	asrs	r3, r3, #8
 8003d20:	b2db      	uxtb	r3, r3
 8003d22:	757b      	strb	r3, [r7, #21]
 8003d24:	f107 0210 	add.w	r2, r7, #16
 8003d28:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 8003d2c:	9300      	str	r3, [sp, #0]
 8003d2e:	2306      	movs	r3, #6
 8003d30:	2184      	movs	r1, #132	; 0x84
 8003d32:	4842      	ldr	r0, [pc, #264]	; (8003e3c <_ZN13SFE_UBLOX_GPS14sendI2cCommandEP9ubxPackett+0x17c>)
 8003d34:	f005 fb96 	bl	8009464 <HAL_I2C_Master_Seq_Transmit_DMA>
 8003d38:	4603      	mov	r3, r0
 8003d3a:	461a      	mov	r2, r3
 8003d3c:	4b40      	ldr	r3, [pc, #256]	; (8003e40 <_ZN13SFE_UBLOX_GPS14sendI2cCommandEP9ubxPackett+0x180>)
 8003d3e:	701a      	strb	r2, [r3, #0]
 8003d40:	f7fe fb8c 	bl	800245c <_Z5i2cOkv>
 8003d44:	68bb      	ldr	r3, [r7, #8]
 8003d46:	885b      	ldrh	r3, [r3, #2]
 8003d48:	83fb      	strh	r3, [r7, #30]
 8003d4a:	2300      	movs	r3, #0
 8003d4c:	83bb      	strh	r3, [r7, #28]
 8003d4e:	8bfb      	ldrh	r3, [r7, #30]
 8003d50:	2b01      	cmp	r3, #1
 8003d52:	d93f      	bls.n	8003dd4 <_ZN13SFE_UBLOX_GPS14sendI2cCommandEP9ubxPackett+0x114>
 8003d54:	8bfb      	ldrh	r3, [r7, #30]
 8003d56:	76fb      	strb	r3, [r7, #27]
 8003d58:	68fb      	ldr	r3, [r7, #12]
 8003d5a:	781b      	ldrb	r3, [r3, #0]
 8003d5c:	7efa      	ldrb	r2, [r7, #27]
 8003d5e:	429a      	cmp	r2, r3
 8003d60:	d902      	bls.n	8003d68 <_ZN13SFE_UBLOX_GPS14sendI2cCommandEP9ubxPackett+0xa8>
 8003d62:	68fb      	ldr	r3, [r7, #12]
 8003d64:	781b      	ldrb	r3, [r3, #0]
 8003d66:	76fb      	strb	r3, [r7, #27]
 8003d68:	68fb      	ldr	r3, [r7, #12]
 8003d6a:	781b      	ldrb	r3, [r3, #0]
 8003d6c:	b29b      	uxth	r3, r3
 8003d6e:	8bfa      	ldrh	r2, [r7, #30]
 8003d70:	429a      	cmp	r2, r3
 8003d72:	d911      	bls.n	8003d98 <_ZN13SFE_UBLOX_GPS14sendI2cCommandEP9ubxPackett+0xd8>
 8003d74:	68bb      	ldr	r3, [r7, #8]
 8003d76:	689a      	ldr	r2, [r3, #8]
 8003d78:	8bbb      	ldrh	r3, [r7, #28]
 8003d7a:	441a      	add	r2, r3
 8003d7c:	7efb      	ldrb	r3, [r7, #27]
 8003d7e:	b29b      	uxth	r3, r3
 8003d80:	f04f 7180 	mov.w	r1, #16777216	; 0x1000000
 8003d84:	9100      	str	r1, [sp, #0]
 8003d86:	2184      	movs	r1, #132	; 0x84
 8003d88:	482c      	ldr	r0, [pc, #176]	; (8003e3c <_ZN13SFE_UBLOX_GPS14sendI2cCommandEP9ubxPackett+0x17c>)
 8003d8a:	f005 fb6b 	bl	8009464 <HAL_I2C_Master_Seq_Transmit_DMA>
 8003d8e:	4603      	mov	r3, r0
 8003d90:	461a      	mov	r2, r3
 8003d92:	4b2b      	ldr	r3, [pc, #172]	; (8003e40 <_ZN13SFE_UBLOX_GPS14sendI2cCommandEP9ubxPackett+0x180>)
 8003d94:	701a      	strb	r2, [r3, #0]
 8003d96:	e010      	b.n	8003dba <_ZN13SFE_UBLOX_GPS14sendI2cCommandEP9ubxPackett+0xfa>
 8003d98:	68bb      	ldr	r3, [r7, #8]
 8003d9a:	689a      	ldr	r2, [r3, #8]
 8003d9c:	8bbb      	ldrh	r3, [r7, #28]
 8003d9e:	441a      	add	r2, r3
 8003da0:	7efb      	ldrb	r3, [r7, #27]
 8003da2:	b29b      	uxth	r3, r3
 8003da4:	f04f 7100 	mov.w	r1, #33554432	; 0x2000000
 8003da8:	9100      	str	r1, [sp, #0]
 8003daa:	2184      	movs	r1, #132	; 0x84
 8003dac:	4823      	ldr	r0, [pc, #140]	; (8003e3c <_ZN13SFE_UBLOX_GPS14sendI2cCommandEP9ubxPackett+0x17c>)
 8003dae:	f005 fb59 	bl	8009464 <HAL_I2C_Master_Seq_Transmit_DMA>
 8003db2:	4603      	mov	r3, r0
 8003db4:	461a      	mov	r2, r3
 8003db6:	4b22      	ldr	r3, [pc, #136]	; (8003e40 <_ZN13SFE_UBLOX_GPS14sendI2cCommandEP9ubxPackett+0x180>)
 8003db8:	701a      	strb	r2, [r3, #0]
 8003dba:	f7fe fb4f 	bl	800245c <_Z5i2cOkv>
 8003dbe:	7efb      	ldrb	r3, [r7, #27]
 8003dc0:	b29a      	uxth	r2, r3
 8003dc2:	8bbb      	ldrh	r3, [r7, #28]
 8003dc4:	4413      	add	r3, r2
 8003dc6:	83bb      	strh	r3, [r7, #28]
 8003dc8:	7efb      	ldrb	r3, [r7, #27]
 8003dca:	b29b      	uxth	r3, r3
 8003dcc:	8bfa      	ldrh	r2, [r7, #30]
 8003dce:	1ad3      	subs	r3, r2, r3
 8003dd0:	83fb      	strh	r3, [r7, #30]
 8003dd2:	e7bc      	b.n	8003d4e <_ZN13SFE_UBLOX_GPS14sendI2cCommandEP9ubxPackett+0x8e>
 8003dd4:	8bfb      	ldrh	r3, [r7, #30]
 8003dd6:	2b01      	cmp	r3, #1
 8003dd8:	d10f      	bne.n	8003dfa <_ZN13SFE_UBLOX_GPS14sendI2cCommandEP9ubxPackett+0x13a>
 8003dda:	68bb      	ldr	r3, [r7, #8]
 8003ddc:	689a      	ldr	r2, [r3, #8]
 8003dde:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 8003de2:	9300      	str	r3, [sp, #0]
 8003de4:	2301      	movs	r3, #1
 8003de6:	2184      	movs	r1, #132	; 0x84
 8003de8:	4814      	ldr	r0, [pc, #80]	; (8003e3c <_ZN13SFE_UBLOX_GPS14sendI2cCommandEP9ubxPackett+0x17c>)
 8003dea:	f005 fb3b 	bl	8009464 <HAL_I2C_Master_Seq_Transmit_DMA>
 8003dee:	4603      	mov	r3, r0
 8003df0:	461a      	mov	r2, r3
 8003df2:	4b13      	ldr	r3, [pc, #76]	; (8003e40 <_ZN13SFE_UBLOX_GPS14sendI2cCommandEP9ubxPackett+0x180>)
 8003df4:	701a      	strb	r2, [r3, #0]
 8003df6:	f7fe fb31 	bl	800245c <_Z5i2cOkv>
 8003dfa:	68bb      	ldr	r3, [r7, #8]
 8003dfc:	7b1b      	ldrb	r3, [r3, #12]
 8003dfe:	743b      	strb	r3, [r7, #16]
 8003e00:	68bb      	ldr	r3, [r7, #8]
 8003e02:	7b5b      	ldrb	r3, [r3, #13]
 8003e04:	747b      	strb	r3, [r7, #17]
 8003e06:	f107 0210 	add.w	r2, r7, #16
 8003e0a:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 8003e0e:	9300      	str	r3, [sp, #0]
 8003e10:	2302      	movs	r3, #2
 8003e12:	2184      	movs	r1, #132	; 0x84
 8003e14:	4809      	ldr	r0, [pc, #36]	; (8003e3c <_ZN13SFE_UBLOX_GPS14sendI2cCommandEP9ubxPackett+0x17c>)
 8003e16:	f005 fb25 	bl	8009464 <HAL_I2C_Master_Seq_Transmit_DMA>
 8003e1a:	4603      	mov	r3, r0
 8003e1c:	461a      	mov	r2, r3
 8003e1e:	4b08      	ldr	r3, [pc, #32]	; (8003e40 <_ZN13SFE_UBLOX_GPS14sendI2cCommandEP9ubxPackett+0x180>)
 8003e20:	701a      	strb	r2, [r3, #0]
 8003e22:	f7fe fb1b 	bl	800245c <_Z5i2cOkv>
 8003e26:	4b06      	ldr	r3, [pc, #24]	; (8003e40 <_ZN13SFE_UBLOX_GPS14sendI2cCommandEP9ubxPackett+0x180>)
 8003e28:	781b      	ldrb	r3, [r3, #0]
 8003e2a:	2b00      	cmp	r3, #0
 8003e2c:	d001      	beq.n	8003e32 <_ZN13SFE_UBLOX_GPS14sendI2cCommandEP9ubxPackett+0x172>
 8003e2e:	230c      	movs	r3, #12
 8003e30:	e000      	b.n	8003e34 <_ZN13SFE_UBLOX_GPS14sendI2cCommandEP9ubxPackett+0x174>
 8003e32:	2300      	movs	r3, #0
 8003e34:	4618      	mov	r0, r3
 8003e36:	3720      	adds	r7, #32
 8003e38:	46bd      	mov	sp, r7
 8003e3a:	bd80      	pop	{r7, pc}
 8003e3c:	20000884 	.word	0x20000884
 8003e40:	2000025b 	.word	0x2000025b

08003e44 <_ZN13SFE_UBLOX_GPS17sendSerialCommandEP9ubxPacket>:
 8003e44:	b480      	push	{r7}
 8003e46:	b085      	sub	sp, #20
 8003e48:	af00      	add	r7, sp, #0
 8003e4a:	6078      	str	r0, [r7, #4]
 8003e4c:	6039      	str	r1, [r7, #0]
 8003e4e:	2300      	movs	r3, #0
 8003e50:	60fb      	str	r3, [r7, #12]
 8003e52:	683b      	ldr	r3, [r7, #0]
 8003e54:	885b      	ldrh	r3, [r3, #2]
 8003e56:	461a      	mov	r2, r3
 8003e58:	68fb      	ldr	r3, [r7, #12]
 8003e5a:	4293      	cmp	r3, r2
 8003e5c:	da03      	bge.n	8003e66 <_ZN13SFE_UBLOX_GPS17sendSerialCommandEP9ubxPacket+0x22>
 8003e5e:	68fb      	ldr	r3, [r7, #12]
 8003e60:	3301      	adds	r3, #1
 8003e62:	60fb      	str	r3, [r7, #12]
 8003e64:	e7f5      	b.n	8003e52 <_ZN13SFE_UBLOX_GPS17sendSerialCommandEP9ubxPacket+0xe>
 8003e66:	bf00      	nop
 8003e68:	3714      	adds	r7, #20
 8003e6a:	46bd      	mov	sp, r7
 8003e6c:	bc80      	pop	{r7}
 8003e6e:	4770      	bx	lr

08003e70 <_ZN13SFE_UBLOX_GPS11isConnectedEt>:
 8003e70:	b580      	push	{r7, lr}
 8003e72:	b082      	sub	sp, #8
 8003e74:	af00      	add	r7, sp, #0
 8003e76:	6078      	str	r0, [r7, #4]
 8003e78:	460b      	mov	r3, r1
 8003e7a:	807b      	strh	r3, [r7, #2]
 8003e7c:	687b      	ldr	r3, [r7, #4]
 8003e7e:	2206      	movs	r2, #6
 8003e80:	f883 2350 	strb.w	r2, [r3, #848]	; 0x350
 8003e84:	687b      	ldr	r3, [r7, #4]
 8003e86:	2208      	movs	r2, #8
 8003e88:	f883 2351 	strb.w	r2, [r3, #849]	; 0x351
 8003e8c:	687b      	ldr	r3, [r7, #4]
 8003e8e:	2200      	movs	r2, #0
 8003e90:	f8a3 2352 	strh.w	r2, [r3, #850]	; 0x352
 8003e94:	687b      	ldr	r3, [r7, #4]
 8003e96:	2200      	movs	r2, #0
 8003e98:	f8a3 2356 	strh.w	r2, [r3, #854]	; 0x356
 8003e9c:	687b      	ldr	r3, [r7, #4]
 8003e9e:	f503 7354 	add.w	r3, r3, #848	; 0x350
 8003ea2:	887a      	ldrh	r2, [r7, #2]
 8003ea4:	4619      	mov	r1, r3
 8003ea6:	6878      	ldr	r0, [r7, #4]
 8003ea8:	f7ff feb0 	bl	8003c0c <_ZN13SFE_UBLOX_GPS11sendCommandEP9ubxPackett>
 8003eac:	4603      	mov	r3, r0
 8003eae:	2b0b      	cmp	r3, #11
 8003eb0:	bf0c      	ite	eq
 8003eb2:	2301      	moveq	r3, #1
 8003eb4:	2300      	movne	r3, #0
 8003eb6:	b2db      	uxtb	r3, r3
 8003eb8:	4618      	mov	r0, r3
 8003eba:	3708      	adds	r7, #8
 8003ebc:	46bd      	mov	sp, r7
 8003ebe:	bd80      	pop	{r7, pc}

08003ec0 <_ZN13SFE_UBLOX_GPS12calcChecksumEP9ubxPacket>:
 8003ec0:	b480      	push	{r7}
 8003ec2:	b085      	sub	sp, #20
 8003ec4:	af00      	add	r7, sp, #0
 8003ec6:	6078      	str	r0, [r7, #4]
 8003ec8:	6039      	str	r1, [r7, #0]
 8003eca:	683b      	ldr	r3, [r7, #0]
 8003ecc:	2200      	movs	r2, #0
 8003ece:	731a      	strb	r2, [r3, #12]
 8003ed0:	683b      	ldr	r3, [r7, #0]
 8003ed2:	2200      	movs	r2, #0
 8003ed4:	735a      	strb	r2, [r3, #13]
 8003ed6:	683b      	ldr	r3, [r7, #0]
 8003ed8:	7b1a      	ldrb	r2, [r3, #12]
 8003eda:	683b      	ldr	r3, [r7, #0]
 8003edc:	781b      	ldrb	r3, [r3, #0]
 8003ede:	4413      	add	r3, r2
 8003ee0:	b2da      	uxtb	r2, r3
 8003ee2:	683b      	ldr	r3, [r7, #0]
 8003ee4:	731a      	strb	r2, [r3, #12]
 8003ee6:	683b      	ldr	r3, [r7, #0]
 8003ee8:	7b5a      	ldrb	r2, [r3, #13]
 8003eea:	683b      	ldr	r3, [r7, #0]
 8003eec:	7b1b      	ldrb	r3, [r3, #12]
 8003eee:	4413      	add	r3, r2
 8003ef0:	b2da      	uxtb	r2, r3
 8003ef2:	683b      	ldr	r3, [r7, #0]
 8003ef4:	735a      	strb	r2, [r3, #13]
 8003ef6:	683b      	ldr	r3, [r7, #0]
 8003ef8:	7b1a      	ldrb	r2, [r3, #12]
 8003efa:	683b      	ldr	r3, [r7, #0]
 8003efc:	785b      	ldrb	r3, [r3, #1]
 8003efe:	4413      	add	r3, r2
 8003f00:	b2da      	uxtb	r2, r3
 8003f02:	683b      	ldr	r3, [r7, #0]
 8003f04:	731a      	strb	r2, [r3, #12]
 8003f06:	683b      	ldr	r3, [r7, #0]
 8003f08:	7b5a      	ldrb	r2, [r3, #13]
 8003f0a:	683b      	ldr	r3, [r7, #0]
 8003f0c:	7b1b      	ldrb	r3, [r3, #12]
 8003f0e:	4413      	add	r3, r2
 8003f10:	b2da      	uxtb	r2, r3
 8003f12:	683b      	ldr	r3, [r7, #0]
 8003f14:	735a      	strb	r2, [r3, #13]
 8003f16:	683b      	ldr	r3, [r7, #0]
 8003f18:	7b1a      	ldrb	r2, [r3, #12]
 8003f1a:	683b      	ldr	r3, [r7, #0]
 8003f1c:	885b      	ldrh	r3, [r3, #2]
 8003f1e:	b2db      	uxtb	r3, r3
 8003f20:	4413      	add	r3, r2
 8003f22:	b2da      	uxtb	r2, r3
 8003f24:	683b      	ldr	r3, [r7, #0]
 8003f26:	731a      	strb	r2, [r3, #12]
 8003f28:	683b      	ldr	r3, [r7, #0]
 8003f2a:	7b5a      	ldrb	r2, [r3, #13]
 8003f2c:	683b      	ldr	r3, [r7, #0]
 8003f2e:	7b1b      	ldrb	r3, [r3, #12]
 8003f30:	4413      	add	r3, r2
 8003f32:	b2da      	uxtb	r2, r3
 8003f34:	683b      	ldr	r3, [r7, #0]
 8003f36:	735a      	strb	r2, [r3, #13]
 8003f38:	683b      	ldr	r3, [r7, #0]
 8003f3a:	7b1a      	ldrb	r2, [r3, #12]
 8003f3c:	683b      	ldr	r3, [r7, #0]
 8003f3e:	885b      	ldrh	r3, [r3, #2]
 8003f40:	121b      	asrs	r3, r3, #8
 8003f42:	b2db      	uxtb	r3, r3
 8003f44:	4413      	add	r3, r2
 8003f46:	b2da      	uxtb	r2, r3
 8003f48:	683b      	ldr	r3, [r7, #0]
 8003f4a:	731a      	strb	r2, [r3, #12]
 8003f4c:	683b      	ldr	r3, [r7, #0]
 8003f4e:	7b5a      	ldrb	r2, [r3, #13]
 8003f50:	683b      	ldr	r3, [r7, #0]
 8003f52:	7b1b      	ldrb	r3, [r3, #12]
 8003f54:	4413      	add	r3, r2
 8003f56:	b2da      	uxtb	r2, r3
 8003f58:	683b      	ldr	r3, [r7, #0]
 8003f5a:	735a      	strb	r2, [r3, #13]
 8003f5c:	2300      	movs	r3, #0
 8003f5e:	81fb      	strh	r3, [r7, #14]
 8003f60:	683b      	ldr	r3, [r7, #0]
 8003f62:	885b      	ldrh	r3, [r3, #2]
 8003f64:	89fa      	ldrh	r2, [r7, #14]
 8003f66:	429a      	cmp	r2, r3
 8003f68:	d216      	bcs.n	8003f98 <_ZN13SFE_UBLOX_GPS12calcChecksumEP9ubxPacket+0xd8>
 8003f6a:	683b      	ldr	r3, [r7, #0]
 8003f6c:	7b1a      	ldrb	r2, [r3, #12]
 8003f6e:	683b      	ldr	r3, [r7, #0]
 8003f70:	6899      	ldr	r1, [r3, #8]
 8003f72:	89fb      	ldrh	r3, [r7, #14]
 8003f74:	440b      	add	r3, r1
 8003f76:	781b      	ldrb	r3, [r3, #0]
 8003f78:	4413      	add	r3, r2
 8003f7a:	b2da      	uxtb	r2, r3
 8003f7c:	683b      	ldr	r3, [r7, #0]
 8003f7e:	731a      	strb	r2, [r3, #12]
 8003f80:	683b      	ldr	r3, [r7, #0]
 8003f82:	7b5a      	ldrb	r2, [r3, #13]
 8003f84:	683b      	ldr	r3, [r7, #0]
 8003f86:	7b1b      	ldrb	r3, [r3, #12]
 8003f88:	4413      	add	r3, r2
 8003f8a:	b2da      	uxtb	r2, r3
 8003f8c:	683b      	ldr	r3, [r7, #0]
 8003f8e:	735a      	strb	r2, [r3, #13]
 8003f90:	89fb      	ldrh	r3, [r7, #14]
 8003f92:	3301      	adds	r3, #1
 8003f94:	81fb      	strh	r3, [r7, #14]
 8003f96:	e7e3      	b.n	8003f60 <_ZN13SFE_UBLOX_GPS12calcChecksumEP9ubxPacket+0xa0>
 8003f98:	bf00      	nop
 8003f9a:	3714      	adds	r7, #20
 8003f9c:	46bd      	mov	sp, r7
 8003f9e:	bc80      	pop	{r7}
 8003fa0:	4770      	bx	lr

08003fa2 <_ZN13SFE_UBLOX_GPS13addToChecksumEh>:
 8003fa2:	b480      	push	{r7}
 8003fa4:	b083      	sub	sp, #12
 8003fa6:	af00      	add	r7, sp, #0
 8003fa8:	6078      	str	r0, [r7, #4]
 8003faa:	460b      	mov	r3, r1
 8003fac:	70fb      	strb	r3, [r7, #3]
 8003fae:	687b      	ldr	r3, [r7, #4]
 8003fb0:	f893 2386 	ldrb.w	r2, [r3, #902]	; 0x386
 8003fb4:	78fb      	ldrb	r3, [r7, #3]
 8003fb6:	4413      	add	r3, r2
 8003fb8:	b2da      	uxtb	r2, r3
 8003fba:	687b      	ldr	r3, [r7, #4]
 8003fbc:	f883 2386 	strb.w	r2, [r3, #902]	; 0x386
 8003fc0:	687b      	ldr	r3, [r7, #4]
 8003fc2:	f893 2387 	ldrb.w	r2, [r3, #903]	; 0x387
 8003fc6:	687b      	ldr	r3, [r7, #4]
 8003fc8:	f893 3386 	ldrb.w	r3, [r3, #902]	; 0x386
 8003fcc:	4413      	add	r3, r2
 8003fce:	b2da      	uxtb	r2, r3
 8003fd0:	687b      	ldr	r3, [r7, #4]
 8003fd2:	f883 2387 	strb.w	r2, [r3, #903]	; 0x387
 8003fd6:	bf00      	nop
 8003fd8:	370c      	adds	r7, #12
 8003fda:	46bd      	mov	sp, r7
 8003fdc:	bc80      	pop	{r7}
 8003fde:	4770      	bx	lr

08003fe0 <_ZN13SFE_UBLOX_GPS11printPacketEP9ubxPacket>:
 8003fe0:	b580      	push	{r7, lr}
 8003fe2:	b082      	sub	sp, #8
 8003fe4:	af00      	add	r7, sp, #0
 8003fe6:	6078      	str	r0, [r7, #4]
 8003fe8:	6039      	str	r1, [r7, #0]
 8003fea:	2001      	movs	r0, #1
 8003fec:	f002 f9f9 	bl	80063e2 <HAL_Delay>
 8003ff0:	bf00      	nop
 8003ff2:	3708      	adds	r7, #8
 8003ff4:	46bd      	mov	sp, r7
 8003ff6:	bd80      	pop	{r7, pc}

08003ff8 <_ZN13SFE_UBLOX_GPS18waitForACKResponseEP9ubxPackethht>:
 8003ff8:	b580      	push	{r7, lr}
 8003ffa:	b086      	sub	sp, #24
 8003ffc:	af00      	add	r7, sp, #0
 8003ffe:	60f8      	str	r0, [r7, #12]
 8004000:	60b9      	str	r1, [r7, #8]
 8004002:	4611      	mov	r1, r2
 8004004:	461a      	mov	r2, r3
 8004006:	460b      	mov	r3, r1
 8004008:	71fb      	strb	r3, [r7, #7]
 800400a:	4613      	mov	r3, r2
 800400c:	71bb      	strb	r3, [r7, #6]
 800400e:	68bb      	ldr	r3, [r7, #8]
 8004010:	2202      	movs	r2, #2
 8004012:	739a      	strb	r2, [r3, #14]
 8004014:	68fb      	ldr	r3, [r7, #12]
 8004016:	2202      	movs	r2, #2
 8004018:	f883 234e 	strb.w	r2, [r3, #846]	; 0x34e
 800401c:	68fb      	ldr	r3, [r7, #12]
 800401e:	2202      	movs	r2, #2
 8004020:	f883 236e 	strb.w	r2, [r3, #878]	; 0x36e
 8004024:	68bb      	ldr	r3, [r7, #8]
 8004026:	2202      	movs	r2, #2
 8004028:	73da      	strb	r2, [r3, #15]
 800402a:	68fb      	ldr	r3, [r7, #12]
 800402c:	2202      	movs	r2, #2
 800402e:	f883 234f 	strb.w	r2, [r3, #847]	; 0x34f
 8004032:	68fb      	ldr	r3, [r7, #12]
 8004034:	2202      	movs	r2, #2
 8004036:	f883 236f 	strb.w	r2, [r3, #879]	; 0x36f
 800403a:	f002 f9cb 	bl	80063d4 <HAL_GetTick>
 800403e:	6178      	str	r0, [r7, #20]
 8004040:	f002 f9c8 	bl	80063d4 <HAL_GetTick>
 8004044:	4602      	mov	r2, r0
 8004046:	697b      	ldr	r3, [r7, #20]
 8004048:	1ad2      	subs	r2, r2, r3
 800404a:	8c3b      	ldrh	r3, [r7, #32]
 800404c:	429a      	cmp	r2, r3
 800404e:	bf34      	ite	cc
 8004050:	2301      	movcc	r3, #1
 8004052:	2300      	movcs	r3, #0
 8004054:	b2db      	uxtb	r3, r3
 8004056:	2b00      	cmp	r3, #0
 8004058:	f000 808d 	beq.w	8004176 <_ZN13SFE_UBLOX_GPS18waitForACKResponseEP9ubxPackethht+0x17e>
 800405c:	79bb      	ldrb	r3, [r7, #6]
 800405e:	79fa      	ldrb	r2, [r7, #7]
 8004060:	68b9      	ldr	r1, [r7, #8]
 8004062:	68f8      	ldr	r0, [r7, #12]
 8004064:	f7fe fb1b 	bl	800269e <_ZN13SFE_UBLOX_GPS18checkUbloxInternalEP9ubxPackethh>
 8004068:	4603      	mov	r3, r0
 800406a:	2b01      	cmp	r3, #1
 800406c:	bf0c      	ite	eq
 800406e:	2301      	moveq	r3, #1
 8004070:	2300      	movne	r3, #0
 8004072:	b2db      	uxtb	r3, r3
 8004074:	2b00      	cmp	r3, #0
 8004076:	d07a      	beq.n	800416e <_ZN13SFE_UBLOX_GPS18waitForACKResponseEP9ubxPackethht+0x176>
 8004078:	68bb      	ldr	r3, [r7, #8]
 800407a:	7bdb      	ldrb	r3, [r3, #15]
 800407c:	2b01      	cmp	r3, #1
 800407e:	d114      	bne.n	80040aa <_ZN13SFE_UBLOX_GPS18waitForACKResponseEP9ubxPackethht+0xb2>
 8004080:	68fb      	ldr	r3, [r7, #12]
 8004082:	f893 334f 	ldrb.w	r3, [r3, #847]	; 0x34f
 8004086:	2b01      	cmp	r3, #1
 8004088:	d10f      	bne.n	80040aa <_ZN13SFE_UBLOX_GPS18waitForACKResponseEP9ubxPackethht+0xb2>
 800408a:	68bb      	ldr	r3, [r7, #8]
 800408c:	7b9b      	ldrb	r3, [r3, #14]
 800408e:	2b01      	cmp	r3, #1
 8004090:	d10b      	bne.n	80040aa <_ZN13SFE_UBLOX_GPS18waitForACKResponseEP9ubxPackethht+0xb2>
 8004092:	68bb      	ldr	r3, [r7, #8]
 8004094:	781b      	ldrb	r3, [r3, #0]
 8004096:	79fa      	ldrb	r2, [r7, #7]
 8004098:	429a      	cmp	r2, r3
 800409a:	d106      	bne.n	80040aa <_ZN13SFE_UBLOX_GPS18waitForACKResponseEP9ubxPackethht+0xb2>
 800409c:	68bb      	ldr	r3, [r7, #8]
 800409e:	785b      	ldrb	r3, [r3, #1]
 80040a0:	79ba      	ldrb	r2, [r7, #6]
 80040a2:	429a      	cmp	r2, r3
 80040a4:	d101      	bne.n	80040aa <_ZN13SFE_UBLOX_GPS18waitForACKResponseEP9ubxPackethht+0xb2>
 80040a6:	230b      	movs	r3, #11
 80040a8:	e07f      	b.n	80041aa <_ZN13SFE_UBLOX_GPS18waitForACKResponseEP9ubxPackethht+0x1b2>
 80040aa:	68bb      	ldr	r3, [r7, #8]
 80040ac:	7bdb      	ldrb	r3, [r3, #15]
 80040ae:	2b02      	cmp	r3, #2
 80040b0:	d106      	bne.n	80040c0 <_ZN13SFE_UBLOX_GPS18waitForACKResponseEP9ubxPackethht+0xc8>
 80040b2:	68fb      	ldr	r3, [r7, #12]
 80040b4:	f893 334f 	ldrb.w	r3, [r3, #847]	; 0x34f
 80040b8:	2b01      	cmp	r3, #1
 80040ba:	d101      	bne.n	80040c0 <_ZN13SFE_UBLOX_GPS18waitForACKResponseEP9ubxPackethht+0xc8>
 80040bc:	230a      	movs	r3, #10
 80040be:	e074      	b.n	80041aa <_ZN13SFE_UBLOX_GPS18waitForACKResponseEP9ubxPackethht+0x1b2>
 80040c0:	68bb      	ldr	r3, [r7, #8]
 80040c2:	7bdb      	ldrb	r3, [r3, #15]
 80040c4:	2b01      	cmp	r3, #1
 80040c6:	d110      	bne.n	80040ea <_ZN13SFE_UBLOX_GPS18waitForACKResponseEP9ubxPackethht+0xf2>
 80040c8:	68fb      	ldr	r3, [r7, #12]
 80040ca:	f893 334f 	ldrb.w	r3, [r3, #847]	; 0x34f
 80040ce:	2b01      	cmp	r3, #1
 80040d0:	d10b      	bne.n	80040ea <_ZN13SFE_UBLOX_GPS18waitForACKResponseEP9ubxPackethht+0xf2>
 80040d2:	68bb      	ldr	r3, [r7, #8]
 80040d4:	781b      	ldrb	r3, [r3, #0]
 80040d6:	79fa      	ldrb	r2, [r7, #7]
 80040d8:	429a      	cmp	r2, r3
 80040da:	d104      	bne.n	80040e6 <_ZN13SFE_UBLOX_GPS18waitForACKResponseEP9ubxPackethht+0xee>
 80040dc:	68bb      	ldr	r3, [r7, #8]
 80040de:	785b      	ldrb	r3, [r3, #1]
 80040e0:	79ba      	ldrb	r2, [r7, #6]
 80040e2:	429a      	cmp	r2, r3
 80040e4:	d001      	beq.n	80040ea <_ZN13SFE_UBLOX_GPS18waitForACKResponseEP9ubxPackethht+0xf2>
 80040e6:	230d      	movs	r3, #13
 80040e8:	e05f      	b.n	80041aa <_ZN13SFE_UBLOX_GPS18waitForACKResponseEP9ubxPackethht+0x1b2>
 80040ea:	68fb      	ldr	r3, [r7, #12]
 80040ec:	f893 334f 	ldrb.w	r3, [r3, #847]	; 0x34f
 80040f0:	2b01      	cmp	r3, #1
 80040f2:	d109      	bne.n	8004108 <_ZN13SFE_UBLOX_GPS18waitForACKResponseEP9ubxPackethht+0x110>
 80040f4:	68bb      	ldr	r3, [r7, #8]
 80040f6:	7bdb      	ldrb	r3, [r3, #15]
 80040f8:	2b00      	cmp	r3, #0
 80040fa:	d105      	bne.n	8004108 <_ZN13SFE_UBLOX_GPS18waitForACKResponseEP9ubxPackethht+0x110>
 80040fc:	68bb      	ldr	r3, [r7, #8]
 80040fe:	7b9b      	ldrb	r3, [r3, #14]
 8004100:	2b00      	cmp	r3, #0
 8004102:	d101      	bne.n	8004108 <_ZN13SFE_UBLOX_GPS18waitForACKResponseEP9ubxPackethht+0x110>
 8004104:	2302      	movs	r3, #2
 8004106:	e050      	b.n	80041aa <_ZN13SFE_UBLOX_GPS18waitForACKResponseEP9ubxPackethht+0x1b2>
 8004108:	68fb      	ldr	r3, [r7, #12]
 800410a:	f893 334f 	ldrb.w	r3, [r3, #847]	; 0x34f
 800410e:	2b03      	cmp	r3, #3
 8004110:	d101      	bne.n	8004116 <_ZN13SFE_UBLOX_GPS18waitForACKResponseEP9ubxPackethht+0x11e>
 8004112:	2304      	movs	r3, #4
 8004114:	e049      	b.n	80041aa <_ZN13SFE_UBLOX_GPS18waitForACKResponseEP9ubxPackethht+0x1b2>
 8004116:	68bb      	ldr	r3, [r7, #8]
 8004118:	7bdb      	ldrb	r3, [r3, #15]
 800411a:	2b01      	cmp	r3, #1
 800411c:	d114      	bne.n	8004148 <_ZN13SFE_UBLOX_GPS18waitForACKResponseEP9ubxPackethht+0x150>
 800411e:	68fb      	ldr	r3, [r7, #12]
 8004120:	f893 334f 	ldrb.w	r3, [r3, #847]	; 0x34f
 8004124:	2b00      	cmp	r3, #0
 8004126:	d10f      	bne.n	8004148 <_ZN13SFE_UBLOX_GPS18waitForACKResponseEP9ubxPackethht+0x150>
 8004128:	68bb      	ldr	r3, [r7, #8]
 800412a:	7b9b      	ldrb	r3, [r3, #14]
 800412c:	2b01      	cmp	r3, #1
 800412e:	d10b      	bne.n	8004148 <_ZN13SFE_UBLOX_GPS18waitForACKResponseEP9ubxPackethht+0x150>
 8004130:	68bb      	ldr	r3, [r7, #8]
 8004132:	781b      	ldrb	r3, [r3, #0]
 8004134:	79fa      	ldrb	r2, [r7, #7]
 8004136:	429a      	cmp	r2, r3
 8004138:	d106      	bne.n	8004148 <_ZN13SFE_UBLOX_GPS18waitForACKResponseEP9ubxPackethht+0x150>
 800413a:	68bb      	ldr	r3, [r7, #8]
 800413c:	785b      	ldrb	r3, [r3, #1]
 800413e:	79ba      	ldrb	r2, [r7, #6]
 8004140:	429a      	cmp	r2, r3
 8004142:	d101      	bne.n	8004148 <_ZN13SFE_UBLOX_GPS18waitForACKResponseEP9ubxPackethht+0x150>
 8004144:	230b      	movs	r3, #11
 8004146:	e030      	b.n	80041aa <_ZN13SFE_UBLOX_GPS18waitForACKResponseEP9ubxPackethht+0x1b2>
 8004148:	68bb      	ldr	r3, [r7, #8]
 800414a:	7bdb      	ldrb	r3, [r3, #15]
 800414c:	2b00      	cmp	r3, #0
 800414e:	d106      	bne.n	800415e <_ZN13SFE_UBLOX_GPS18waitForACKResponseEP9ubxPackethht+0x166>
 8004150:	68fb      	ldr	r3, [r7, #12]
 8004152:	f893 334f 	ldrb.w	r3, [r3, #847]	; 0x34f
 8004156:	2b00      	cmp	r3, #0
 8004158:	d101      	bne.n	800415e <_ZN13SFE_UBLOX_GPS18waitForACKResponseEP9ubxPackethht+0x166>
 800415a:	2301      	movs	r3, #1
 800415c:	e025      	b.n	80041aa <_ZN13SFE_UBLOX_GPS18waitForACKResponseEP9ubxPackethht+0x1b2>
 800415e:	68bb      	ldr	r3, [r7, #8]
 8004160:	7bdb      	ldrb	r3, [r3, #15]
 8004162:	2b01      	cmp	r3, #1
 8004164:	d103      	bne.n	800416e <_ZN13SFE_UBLOX_GPS18waitForACKResponseEP9ubxPackethht+0x176>
 8004166:	68fb      	ldr	r3, [r7, #12]
 8004168:	f893 334f 	ldrb.w	r3, [r3, #847]	; 0x34f
 800416c:	2b02      	cmp	r3, #2
 800416e:	2001      	movs	r0, #1
 8004170:	f002 f937 	bl	80063e2 <HAL_Delay>
 8004174:	e764      	b.n	8004040 <_ZN13SFE_UBLOX_GPS18waitForACKResponseEP9ubxPackethht+0x48>
 8004176:	68bb      	ldr	r3, [r7, #8]
 8004178:	7bdb      	ldrb	r3, [r3, #15]
 800417a:	2b01      	cmp	r3, #1
 800417c:	d114      	bne.n	80041a8 <_ZN13SFE_UBLOX_GPS18waitForACKResponseEP9ubxPackethht+0x1b0>
 800417e:	68fb      	ldr	r3, [r7, #12]
 8004180:	f893 334f 	ldrb.w	r3, [r3, #847]	; 0x34f
 8004184:	2b02      	cmp	r3, #2
 8004186:	d10f      	bne.n	80041a8 <_ZN13SFE_UBLOX_GPS18waitForACKResponseEP9ubxPackethht+0x1b0>
 8004188:	68bb      	ldr	r3, [r7, #8]
 800418a:	7b9b      	ldrb	r3, [r3, #14]
 800418c:	2b01      	cmp	r3, #1
 800418e:	d10b      	bne.n	80041a8 <_ZN13SFE_UBLOX_GPS18waitForACKResponseEP9ubxPackethht+0x1b0>
 8004190:	68bb      	ldr	r3, [r7, #8]
 8004192:	781b      	ldrb	r3, [r3, #0]
 8004194:	79fa      	ldrb	r2, [r7, #7]
 8004196:	429a      	cmp	r2, r3
 8004198:	d106      	bne.n	80041a8 <_ZN13SFE_UBLOX_GPS18waitForACKResponseEP9ubxPackethht+0x1b0>
 800419a:	68bb      	ldr	r3, [r7, #8]
 800419c:	785b      	ldrb	r3, [r3, #1]
 800419e:	79ba      	ldrb	r2, [r7, #6]
 80041a0:	429a      	cmp	r2, r3
 80041a2:	d101      	bne.n	80041a8 <_ZN13SFE_UBLOX_GPS18waitForACKResponseEP9ubxPackethht+0x1b0>
 80041a4:	230b      	movs	r3, #11
 80041a6:	e000      	b.n	80041aa <_ZN13SFE_UBLOX_GPS18waitForACKResponseEP9ubxPackethht+0x1b2>
 80041a8:	2303      	movs	r3, #3
 80041aa:	4618      	mov	r0, r3
 80041ac:	3718      	adds	r7, #24
 80041ae:	46bd      	mov	sp, r7
 80041b0:	bd80      	pop	{r7, pc}

080041b2 <_ZN13SFE_UBLOX_GPS20waitForNoACKResponseEP9ubxPackethht>:
 80041b2:	b580      	push	{r7, lr}
 80041b4:	b086      	sub	sp, #24
 80041b6:	af00      	add	r7, sp, #0
 80041b8:	60f8      	str	r0, [r7, #12]
 80041ba:	60b9      	str	r1, [r7, #8]
 80041bc:	4611      	mov	r1, r2
 80041be:	461a      	mov	r2, r3
 80041c0:	460b      	mov	r3, r1
 80041c2:	71fb      	strb	r3, [r7, #7]
 80041c4:	4613      	mov	r3, r2
 80041c6:	71bb      	strb	r3, [r7, #6]
 80041c8:	68bb      	ldr	r3, [r7, #8]
 80041ca:	2202      	movs	r2, #2
 80041cc:	739a      	strb	r2, [r3, #14]
 80041ce:	68fb      	ldr	r3, [r7, #12]
 80041d0:	2202      	movs	r2, #2
 80041d2:	f883 234e 	strb.w	r2, [r3, #846]	; 0x34e
 80041d6:	68fb      	ldr	r3, [r7, #12]
 80041d8:	2202      	movs	r2, #2
 80041da:	f883 236e 	strb.w	r2, [r3, #878]	; 0x36e
 80041de:	68bb      	ldr	r3, [r7, #8]
 80041e0:	2202      	movs	r2, #2
 80041e2:	73da      	strb	r2, [r3, #15]
 80041e4:	68fb      	ldr	r3, [r7, #12]
 80041e6:	2202      	movs	r2, #2
 80041e8:	f883 234f 	strb.w	r2, [r3, #847]	; 0x34f
 80041ec:	68fb      	ldr	r3, [r7, #12]
 80041ee:	2202      	movs	r2, #2
 80041f0:	f883 236f 	strb.w	r2, [r3, #879]	; 0x36f
 80041f4:	f002 f8ee 	bl	80063d4 <HAL_GetTick>
 80041f8:	6178      	str	r0, [r7, #20]
 80041fa:	f002 f8eb 	bl	80063d4 <HAL_GetTick>
 80041fe:	4602      	mov	r2, r0
 8004200:	697b      	ldr	r3, [r7, #20]
 8004202:	1ad2      	subs	r2, r2, r3
 8004204:	8c3b      	ldrh	r3, [r7, #32]
 8004206:	429a      	cmp	r2, r3
 8004208:	bf34      	ite	cc
 800420a:	2301      	movcc	r3, #1
 800420c:	2300      	movcs	r3, #0
 800420e:	b2db      	uxtb	r3, r3
 8004210:	2b00      	cmp	r3, #0
 8004212:	d043      	beq.n	800429c <_ZN13SFE_UBLOX_GPS20waitForNoACKResponseEP9ubxPackethht+0xea>
 8004214:	79bb      	ldrb	r3, [r7, #6]
 8004216:	79fa      	ldrb	r2, [r7, #7]
 8004218:	68b9      	ldr	r1, [r7, #8]
 800421a:	68f8      	ldr	r0, [r7, #12]
 800421c:	f7fe fa3f 	bl	800269e <_ZN13SFE_UBLOX_GPS18checkUbloxInternalEP9ubxPackethh>
 8004220:	4603      	mov	r3, r0
 8004222:	2b01      	cmp	r3, #1
 8004224:	bf0c      	ite	eq
 8004226:	2301      	moveq	r3, #1
 8004228:	2300      	movne	r3, #0
 800422a:	b2db      	uxtb	r3, r3
 800422c:	2b00      	cmp	r3, #0
 800422e:	d031      	beq.n	8004294 <_ZN13SFE_UBLOX_GPS20waitForNoACKResponseEP9ubxPackethht+0xe2>
 8004230:	68bb      	ldr	r3, [r7, #8]
 8004232:	7bdb      	ldrb	r3, [r3, #15]
 8004234:	2b01      	cmp	r3, #1
 8004236:	d10f      	bne.n	8004258 <_ZN13SFE_UBLOX_GPS20waitForNoACKResponseEP9ubxPackethht+0xa6>
 8004238:	68bb      	ldr	r3, [r7, #8]
 800423a:	7b9b      	ldrb	r3, [r3, #14]
 800423c:	2b01      	cmp	r3, #1
 800423e:	d10b      	bne.n	8004258 <_ZN13SFE_UBLOX_GPS20waitForNoACKResponseEP9ubxPackethht+0xa6>
 8004240:	68bb      	ldr	r3, [r7, #8]
 8004242:	781b      	ldrb	r3, [r3, #0]
 8004244:	79fa      	ldrb	r2, [r7, #7]
 8004246:	429a      	cmp	r2, r3
 8004248:	d106      	bne.n	8004258 <_ZN13SFE_UBLOX_GPS20waitForNoACKResponseEP9ubxPackethht+0xa6>
 800424a:	68bb      	ldr	r3, [r7, #8]
 800424c:	785b      	ldrb	r3, [r3, #1]
 800424e:	79ba      	ldrb	r2, [r7, #6]
 8004250:	429a      	cmp	r2, r3
 8004252:	d101      	bne.n	8004258 <_ZN13SFE_UBLOX_GPS20waitForNoACKResponseEP9ubxPackethht+0xa6>
 8004254:	230b      	movs	r3, #11
 8004256:	e022      	b.n	800429e <_ZN13SFE_UBLOX_GPS20waitForNoACKResponseEP9ubxPackethht+0xec>
 8004258:	68bb      	ldr	r3, [r7, #8]
 800425a:	7bdb      	ldrb	r3, [r3, #15]
 800425c:	2b01      	cmp	r3, #1
 800425e:	d10b      	bne.n	8004278 <_ZN13SFE_UBLOX_GPS20waitForNoACKResponseEP9ubxPackethht+0xc6>
 8004260:	68bb      	ldr	r3, [r7, #8]
 8004262:	781b      	ldrb	r3, [r3, #0]
 8004264:	79fa      	ldrb	r2, [r7, #7]
 8004266:	429a      	cmp	r2, r3
 8004268:	d104      	bne.n	8004274 <_ZN13SFE_UBLOX_GPS20waitForNoACKResponseEP9ubxPackethht+0xc2>
 800426a:	68bb      	ldr	r3, [r7, #8]
 800426c:	785b      	ldrb	r3, [r3, #1]
 800426e:	79ba      	ldrb	r2, [r7, #6]
 8004270:	429a      	cmp	r2, r3
 8004272:	d001      	beq.n	8004278 <_ZN13SFE_UBLOX_GPS20waitForNoACKResponseEP9ubxPackethht+0xc6>
 8004274:	230d      	movs	r3, #13
 8004276:	e012      	b.n	800429e <_ZN13SFE_UBLOX_GPS20waitForNoACKResponseEP9ubxPackethht+0xec>
 8004278:	68bb      	ldr	r3, [r7, #8]
 800427a:	7bdb      	ldrb	r3, [r3, #15]
 800427c:	2b02      	cmp	r3, #2
 800427e:	d103      	bne.n	8004288 <_ZN13SFE_UBLOX_GPS20waitForNoACKResponseEP9ubxPackethht+0xd6>
 8004280:	68bb      	ldr	r3, [r7, #8]
 8004282:	7b9b      	ldrb	r3, [r3, #14]
 8004284:	2b01      	cmp	r3, #1
 8004286:	d005      	beq.n	8004294 <_ZN13SFE_UBLOX_GPS20waitForNoACKResponseEP9ubxPackethht+0xe2>
 8004288:	68bb      	ldr	r3, [r7, #8]
 800428a:	7bdb      	ldrb	r3, [r3, #15]
 800428c:	2b00      	cmp	r3, #0
 800428e:	d101      	bne.n	8004294 <_ZN13SFE_UBLOX_GPS20waitForNoACKResponseEP9ubxPackethht+0xe2>
 8004290:	2302      	movs	r3, #2
 8004292:	e004      	b.n	800429e <_ZN13SFE_UBLOX_GPS20waitForNoACKResponseEP9ubxPackethht+0xec>
 8004294:	2001      	movs	r0, #1
 8004296:	f002 f8a4 	bl	80063e2 <HAL_Delay>
 800429a:	e7ae      	b.n	80041fa <_ZN13SFE_UBLOX_GPS20waitForNoACKResponseEP9ubxPackethht+0x48>
 800429c:	2303      	movs	r3, #3
 800429e:	4618      	mov	r0, r3
 80042a0:	3718      	adds	r7, #24
 80042a2:	46bd      	mov	sp, r7
 80042a4:	bd80      	pop	{r7, pc}

080042a6 <_ZN13SFE_UBLOX_GPS17saveConfigurationEt>:
 80042a6:	b580      	push	{r7, lr}
 80042a8:	b084      	sub	sp, #16
 80042aa:	af00      	add	r7, sp, #0
 80042ac:	6078      	str	r0, [r7, #4]
 80042ae:	460b      	mov	r3, r1
 80042b0:	807b      	strh	r3, [r7, #2]
 80042b2:	687b      	ldr	r3, [r7, #4]
 80042b4:	2206      	movs	r2, #6
 80042b6:	f883 2350 	strb.w	r2, [r3, #848]	; 0x350
 80042ba:	687b      	ldr	r3, [r7, #4]
 80042bc:	2209      	movs	r2, #9
 80042be:	f883 2351 	strb.w	r2, [r3, #849]	; 0x351
 80042c2:	687b      	ldr	r3, [r7, #4]
 80042c4:	220c      	movs	r2, #12
 80042c6:	f8a3 2352 	strh.w	r2, [r3, #850]	; 0x352
 80042ca:	687b      	ldr	r3, [r7, #4]
 80042cc:	2200      	movs	r2, #0
 80042ce:	f8a3 2356 	strh.w	r2, [r3, #854]	; 0x356
 80042d2:	2300      	movs	r3, #0
 80042d4:	73fb      	strb	r3, [r7, #15]
 80042d6:	7bfb      	ldrb	r3, [r7, #15]
 80042d8:	687a      	ldr	r2, [r7, #4]
 80042da:	f8b2 2352 	ldrh.w	r2, [r2, #850]	; 0x352
 80042de:	4293      	cmp	r3, r2
 80042e0:	da0a      	bge.n	80042f8 <_ZN13SFE_UBLOX_GPS17saveConfigurationEt+0x52>
 80042e2:	687b      	ldr	r3, [r7, #4]
 80042e4:	f8d3 2358 	ldr.w	r2, [r3, #856]	; 0x358
 80042e8:	7bfb      	ldrb	r3, [r7, #15]
 80042ea:	4413      	add	r3, r2
 80042ec:	2200      	movs	r2, #0
 80042ee:	701a      	strb	r2, [r3, #0]
 80042f0:	7bfb      	ldrb	r3, [r7, #15]
 80042f2:	3301      	adds	r3, #1
 80042f4:	73fb      	strb	r3, [r7, #15]
 80042f6:	e7ee      	b.n	80042d6 <_ZN13SFE_UBLOX_GPS17saveConfigurationEt+0x30>
 80042f8:	687b      	ldr	r3, [r7, #4]
 80042fa:	f8d3 3358 	ldr.w	r3, [r3, #856]	; 0x358
 80042fe:	3304      	adds	r3, #4
 8004300:	22ff      	movs	r2, #255	; 0xff
 8004302:	701a      	strb	r2, [r3, #0]
 8004304:	687b      	ldr	r3, [r7, #4]
 8004306:	f8d3 3358 	ldr.w	r3, [r3, #856]	; 0x358
 800430a:	3305      	adds	r3, #5
 800430c:	22ff      	movs	r2, #255	; 0xff
 800430e:	701a      	strb	r2, [r3, #0]
 8004310:	687b      	ldr	r3, [r7, #4]
 8004312:	f503 7354 	add.w	r3, r3, #848	; 0x350
 8004316:	887a      	ldrh	r2, [r7, #2]
 8004318:	4619      	mov	r1, r3
 800431a:	6878      	ldr	r0, [r7, #4]
 800431c:	f7ff fc76 	bl	8003c0c <_ZN13SFE_UBLOX_GPS11sendCommandEP9ubxPackett>
 8004320:	4603      	mov	r3, r0
 8004322:	2b0a      	cmp	r3, #10
 8004324:	bf0c      	ite	eq
 8004326:	2301      	moveq	r3, #1
 8004328:	2300      	movne	r3, #0
 800432a:	b2db      	uxtb	r3, r3
 800432c:	4618      	mov	r0, r3
 800432e:	3710      	adds	r7, #16
 8004330:	46bd      	mov	sp, r7
 8004332:	bd80      	pop	{r7, pc}

08004334 <_ZN13SFE_UBLOX_GPS15getPortSettingsEht>:
 8004334:	b580      	push	{r7, lr}
 8004336:	b082      	sub	sp, #8
 8004338:	af00      	add	r7, sp, #0
 800433a:	6078      	str	r0, [r7, #4]
 800433c:	460b      	mov	r3, r1
 800433e:	70fb      	strb	r3, [r7, #3]
 8004340:	4613      	mov	r3, r2
 8004342:	803b      	strh	r3, [r7, #0]
 8004344:	687b      	ldr	r3, [r7, #4]
 8004346:	2206      	movs	r2, #6
 8004348:	f883 2350 	strb.w	r2, [r3, #848]	; 0x350
 800434c:	687b      	ldr	r3, [r7, #4]
 800434e:	2200      	movs	r2, #0
 8004350:	f883 2351 	strb.w	r2, [r3, #849]	; 0x351
 8004354:	687b      	ldr	r3, [r7, #4]
 8004356:	2201      	movs	r2, #1
 8004358:	f8a3 2352 	strh.w	r2, [r3, #850]	; 0x352
 800435c:	687b      	ldr	r3, [r7, #4]
 800435e:	2200      	movs	r2, #0
 8004360:	f8a3 2356 	strh.w	r2, [r3, #854]	; 0x356
 8004364:	687b      	ldr	r3, [r7, #4]
 8004366:	78fa      	ldrb	r2, [r7, #3]
 8004368:	f883 223c 	strb.w	r2, [r3, #572]	; 0x23c
 800436c:	687b      	ldr	r3, [r7, #4]
 800436e:	f503 7354 	add.w	r3, r3, #848	; 0x350
 8004372:	883a      	ldrh	r2, [r7, #0]
 8004374:	4619      	mov	r1, r3
 8004376:	6878      	ldr	r0, [r7, #4]
 8004378:	f7ff fc48 	bl	8003c0c <_ZN13SFE_UBLOX_GPS11sendCommandEP9ubxPackett>
 800437c:	4603      	mov	r3, r0
 800437e:	2b0b      	cmp	r3, #11
 8004380:	bf0c      	ite	eq
 8004382:	2301      	moveq	r3, #1
 8004384:	2300      	movne	r3, #0
 8004386:	b2db      	uxtb	r3, r3
 8004388:	4618      	mov	r0, r3
 800438a:	3708      	adds	r7, #8
 800438c:	46bd      	mov	sp, r7
 800438e:	bd80      	pop	{r7, pc}

08004390 <_ZN13SFE_UBLOX_GPS13setPortOutputEhht>:
 8004390:	b580      	push	{r7, lr}
 8004392:	b082      	sub	sp, #8
 8004394:	af00      	add	r7, sp, #0
 8004396:	6078      	str	r0, [r7, #4]
 8004398:	4608      	mov	r0, r1
 800439a:	4611      	mov	r1, r2
 800439c:	461a      	mov	r2, r3
 800439e:	4603      	mov	r3, r0
 80043a0:	70fb      	strb	r3, [r7, #3]
 80043a2:	460b      	mov	r3, r1
 80043a4:	70bb      	strb	r3, [r7, #2]
 80043a6:	4613      	mov	r3, r2
 80043a8:	803b      	strh	r3, [r7, #0]
 80043aa:	883a      	ldrh	r2, [r7, #0]
 80043ac:	78fb      	ldrb	r3, [r7, #3]
 80043ae:	4619      	mov	r1, r3
 80043b0:	6878      	ldr	r0, [r7, #4]
 80043b2:	f7ff ffbf 	bl	8004334 <_ZN13SFE_UBLOX_GPS15getPortSettingsEht>
 80043b6:	4603      	mov	r3, r0
 80043b8:	2b00      	cmp	r3, #0
 80043ba:	bf0c      	ite	eq
 80043bc:	2301      	moveq	r3, #1
 80043be:	2300      	movne	r3, #0
 80043c0:	b2db      	uxtb	r3, r3
 80043c2:	2b00      	cmp	r3, #0
 80043c4:	d001      	beq.n	80043ca <_ZN13SFE_UBLOX_GPS13setPortOutputEhht+0x3a>
 80043c6:	2300      	movs	r3, #0
 80043c8:	e021      	b.n	800440e <_ZN13SFE_UBLOX_GPS13setPortOutputEhht+0x7e>
 80043ca:	687b      	ldr	r3, [r7, #4]
 80043cc:	2206      	movs	r2, #6
 80043ce:	f883 2350 	strb.w	r2, [r3, #848]	; 0x350
 80043d2:	687b      	ldr	r3, [r7, #4]
 80043d4:	2200      	movs	r2, #0
 80043d6:	f883 2351 	strb.w	r2, [r3, #849]	; 0x351
 80043da:	687b      	ldr	r3, [r7, #4]
 80043dc:	2214      	movs	r2, #20
 80043de:	f8a3 2352 	strh.w	r2, [r3, #850]	; 0x352
 80043e2:	687b      	ldr	r3, [r7, #4]
 80043e4:	2200      	movs	r2, #0
 80043e6:	f8a3 2356 	strh.w	r2, [r3, #854]	; 0x356
 80043ea:	687b      	ldr	r3, [r7, #4]
 80043ec:	78ba      	ldrb	r2, [r7, #2]
 80043ee:	f883 224a 	strb.w	r2, [r3, #586]	; 0x24a
 80043f2:	687b      	ldr	r3, [r7, #4]
 80043f4:	f503 7354 	add.w	r3, r3, #848	; 0x350
 80043f8:	883a      	ldrh	r2, [r7, #0]
 80043fa:	4619      	mov	r1, r3
 80043fc:	6878      	ldr	r0, [r7, #4]
 80043fe:	f7ff fc05 	bl	8003c0c <_ZN13SFE_UBLOX_GPS11sendCommandEP9ubxPackett>
 8004402:	4603      	mov	r3, r0
 8004404:	2b0a      	cmp	r3, #10
 8004406:	bf0c      	ite	eq
 8004408:	2301      	moveq	r3, #1
 800440a:	2300      	movne	r3, #0
 800440c:	b2db      	uxtb	r3, r3
 800440e:	4618      	mov	r0, r3
 8004410:	3708      	adds	r7, #8
 8004412:	46bd      	mov	sp, r7
 8004414:	bd80      	pop	{r7, pc}

08004416 <_ZN13SFE_UBLOX_GPS12setI2COutputEht>:
 8004416:	b580      	push	{r7, lr}
 8004418:	b082      	sub	sp, #8
 800441a:	af00      	add	r7, sp, #0
 800441c:	6078      	str	r0, [r7, #4]
 800441e:	460b      	mov	r3, r1
 8004420:	70fb      	strb	r3, [r7, #3]
 8004422:	4613      	mov	r3, r2
 8004424:	803b      	strh	r3, [r7, #0]
 8004426:	883b      	ldrh	r3, [r7, #0]
 8004428:	78fa      	ldrb	r2, [r7, #3]
 800442a:	2100      	movs	r1, #0
 800442c:	6878      	ldr	r0, [r7, #4]
 800442e:	f7ff ffaf 	bl	8004390 <_ZN13SFE_UBLOX_GPS13setPortOutputEhht>
 8004432:	4603      	mov	r3, r0
 8004434:	4618      	mov	r0, r3
 8004436:	3708      	adds	r7, #8
 8004438:	46bd      	mov	sp, r7
 800443a:	bd80      	pop	{r7, pc}

0800443c <_ZN13SFE_UBLOX_GPS11extractLongEh>:
 800443c:	b480      	push	{r7}
 800443e:	b085      	sub	sp, #20
 8004440:	af00      	add	r7, sp, #0
 8004442:	6078      	str	r0, [r7, #4]
 8004444:	460b      	mov	r3, r1
 8004446:	70fb      	strb	r3, [r7, #3]
 8004448:	2300      	movs	r3, #0
 800444a:	60fb      	str	r3, [r7, #12]
 800444c:	78fb      	ldrb	r3, [r7, #3]
 800444e:	687a      	ldr	r2, [r7, #4]
 8004450:	4413      	add	r3, r2
 8004452:	f893 323c 	ldrb.w	r3, [r3, #572]	; 0x23c
 8004456:	461a      	mov	r2, r3
 8004458:	68fb      	ldr	r3, [r7, #12]
 800445a:	4313      	orrs	r3, r2
 800445c:	60fb      	str	r3, [r7, #12]
 800445e:	78fb      	ldrb	r3, [r7, #3]
 8004460:	3301      	adds	r3, #1
 8004462:	687a      	ldr	r2, [r7, #4]
 8004464:	4413      	add	r3, r2
 8004466:	f893 323c 	ldrb.w	r3, [r3, #572]	; 0x23c
 800446a:	021b      	lsls	r3, r3, #8
 800446c:	68fa      	ldr	r2, [r7, #12]
 800446e:	4313      	orrs	r3, r2
 8004470:	60fb      	str	r3, [r7, #12]
 8004472:	78fb      	ldrb	r3, [r7, #3]
 8004474:	3302      	adds	r3, #2
 8004476:	687a      	ldr	r2, [r7, #4]
 8004478:	4413      	add	r3, r2
 800447a:	f893 323c 	ldrb.w	r3, [r3, #572]	; 0x23c
 800447e:	041b      	lsls	r3, r3, #16
 8004480:	68fa      	ldr	r2, [r7, #12]
 8004482:	4313      	orrs	r3, r2
 8004484:	60fb      	str	r3, [r7, #12]
 8004486:	78fb      	ldrb	r3, [r7, #3]
 8004488:	3303      	adds	r3, #3
 800448a:	687a      	ldr	r2, [r7, #4]
 800448c:	4413      	add	r3, r2
 800448e:	f893 323c 	ldrb.w	r3, [r3, #572]	; 0x23c
 8004492:	061b      	lsls	r3, r3, #24
 8004494:	68fa      	ldr	r2, [r7, #12]
 8004496:	4313      	orrs	r3, r2
 8004498:	60fb      	str	r3, [r7, #12]
 800449a:	68fb      	ldr	r3, [r7, #12]
 800449c:	4618      	mov	r0, r3
 800449e:	3714      	adds	r7, #20
 80044a0:	46bd      	mov	sp, r7
 80044a2:	bc80      	pop	{r7}
 80044a4:	4770      	bx	lr

080044a6 <_ZN13SFE_UBLOX_GPS17extractSignedLongEh>:
 80044a6:	b580      	push	{r7, lr}
 80044a8:	b084      	sub	sp, #16
 80044aa:	af00      	add	r7, sp, #0
 80044ac:	6078      	str	r0, [r7, #4]
 80044ae:	460b      	mov	r3, r1
 80044b0:	70fb      	strb	r3, [r7, #3]
 80044b2:	78fb      	ldrb	r3, [r7, #3]
 80044b4:	4619      	mov	r1, r3
 80044b6:	6878      	ldr	r0, [r7, #4]
 80044b8:	f7ff ffc0 	bl	800443c <_ZN13SFE_UBLOX_GPS11extractLongEh>
 80044bc:	4603      	mov	r3, r0
 80044be:	60fb      	str	r3, [r7, #12]
 80044c0:	68fb      	ldr	r3, [r7, #12]
 80044c2:	4618      	mov	r0, r3
 80044c4:	3710      	adds	r7, #16
 80044c6:	46bd      	mov	sp, r7
 80044c8:	bd80      	pop	{r7, pc}

080044ca <_ZN13SFE_UBLOX_GPS10extractIntEh>:
 80044ca:	b480      	push	{r7}
 80044cc:	b085      	sub	sp, #20
 80044ce:	af00      	add	r7, sp, #0
 80044d0:	6078      	str	r0, [r7, #4]
 80044d2:	460b      	mov	r3, r1
 80044d4:	70fb      	strb	r3, [r7, #3]
 80044d6:	2300      	movs	r3, #0
 80044d8:	81fb      	strh	r3, [r7, #14]
 80044da:	78fb      	ldrb	r3, [r7, #3]
 80044dc:	687a      	ldr	r2, [r7, #4]
 80044de:	4413      	add	r3, r2
 80044e0:	f893 323c 	ldrb.w	r3, [r3, #572]	; 0x23c
 80044e4:	b29a      	uxth	r2, r3
 80044e6:	89fb      	ldrh	r3, [r7, #14]
 80044e8:	4313      	orrs	r3, r2
 80044ea:	81fb      	strh	r3, [r7, #14]
 80044ec:	78fb      	ldrb	r3, [r7, #3]
 80044ee:	3301      	adds	r3, #1
 80044f0:	687a      	ldr	r2, [r7, #4]
 80044f2:	4413      	add	r3, r2
 80044f4:	f893 323c 	ldrb.w	r3, [r3, #572]	; 0x23c
 80044f8:	021b      	lsls	r3, r3, #8
 80044fa:	b21a      	sxth	r2, r3
 80044fc:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8004500:	4313      	orrs	r3, r2
 8004502:	b21b      	sxth	r3, r3
 8004504:	81fb      	strh	r3, [r7, #14]
 8004506:	89fb      	ldrh	r3, [r7, #14]
 8004508:	4618      	mov	r0, r3
 800450a:	3714      	adds	r7, #20
 800450c:	46bd      	mov	sp, r7
 800450e:	bc80      	pop	{r7}
 8004510:	4770      	bx	lr

08004512 <_ZN13SFE_UBLOX_GPS16extractSignedIntEa>:
 8004512:	b580      	push	{r7, lr}
 8004514:	b084      	sub	sp, #16
 8004516:	af00      	add	r7, sp, #0
 8004518:	6078      	str	r0, [r7, #4]
 800451a:	460b      	mov	r3, r1
 800451c:	70fb      	strb	r3, [r7, #3]
 800451e:	78fb      	ldrb	r3, [r7, #3]
 8004520:	4619      	mov	r1, r3
 8004522:	6878      	ldr	r0, [r7, #4]
 8004524:	f7ff ffd1 	bl	80044ca <_ZN13SFE_UBLOX_GPS10extractIntEh>
 8004528:	4603      	mov	r3, r0
 800452a:	81bb      	strh	r3, [r7, #12]
 800452c:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 8004530:	4618      	mov	r0, r3
 8004532:	3710      	adds	r7, #16
 8004534:	46bd      	mov	sp, r7
 8004536:	bd80      	pop	{r7, pc}

08004538 <_ZN13SFE_UBLOX_GPS11extractByteEh>:
 8004538:	b480      	push	{r7}
 800453a:	b083      	sub	sp, #12
 800453c:	af00      	add	r7, sp, #0
 800453e:	6078      	str	r0, [r7, #4]
 8004540:	460b      	mov	r3, r1
 8004542:	70fb      	strb	r3, [r7, #3]
 8004544:	78fb      	ldrb	r3, [r7, #3]
 8004546:	687a      	ldr	r2, [r7, #4]
 8004548:	4413      	add	r3, r2
 800454a:	f893 323c 	ldrb.w	r3, [r3, #572]	; 0x23c
 800454e:	4618      	mov	r0, r3
 8004550:	370c      	adds	r7, #12
 8004552:	46bd      	mov	sp, r7
 8004554:	bc80      	pop	{r7}
 8004556:	4770      	bx	lr

08004558 <_ZN13SFE_UBLOX_GPS17extractSignedCharEh>:
 8004558:	b480      	push	{r7}
 800455a:	b083      	sub	sp, #12
 800455c:	af00      	add	r7, sp, #0
 800455e:	6078      	str	r0, [r7, #4]
 8004560:	460b      	mov	r3, r1
 8004562:	70fb      	strb	r3, [r7, #3]
 8004564:	78fb      	ldrb	r3, [r7, #3]
 8004566:	687a      	ldr	r2, [r7, #4]
 8004568:	4413      	add	r3, r2
 800456a:	f893 323c 	ldrb.w	r3, [r3, #572]	; 0x23c
 800456e:	b25b      	sxtb	r3, r3
 8004570:	4618      	mov	r0, r3
 8004572:	370c      	adds	r7, #12
 8004574:	46bd      	mov	sp, r7
 8004576:	bc80      	pop	{r7}
 8004578:	4770      	bx	lr

0800457a <_ZN13SFE_UBLOX_GPS7getYearEt>:
 800457a:	b580      	push	{r7, lr}
 800457c:	b082      	sub	sp, #8
 800457e:	af00      	add	r7, sp, #0
 8004580:	6078      	str	r0, [r7, #4]
 8004582:	460b      	mov	r3, r1
 8004584:	807b      	strh	r3, [r7, #2]
 8004586:	687b      	ldr	r3, [r7, #4]
 8004588:	f893 3388 	ldrb.w	r3, [r3, #904]	; 0x388
 800458c:	f003 0302 	and.w	r3, r3, #2
 8004590:	b2db      	uxtb	r3, r3
 8004592:	2b00      	cmp	r3, #0
 8004594:	d104      	bne.n	80045a0 <_ZN13SFE_UBLOX_GPS7getYearEt+0x26>
 8004596:	887b      	ldrh	r3, [r7, #2]
 8004598:	4619      	mov	r1, r3
 800459a:	6878      	ldr	r0, [r7, #4]
 800459c:	f000 f8b3 	bl	8004706 <_ZN13SFE_UBLOX_GPS6getPVTEt>
 80045a0:	687a      	ldr	r2, [r7, #4]
 80045a2:	f892 3388 	ldrb.w	r3, [r2, #904]	; 0x388
 80045a6:	f36f 0341 	bfc	r3, #1, #1
 80045aa:	f882 3388 	strb.w	r3, [r2, #904]	; 0x388
 80045ae:	687b      	ldr	r3, [r7, #4]
 80045b0:	f8b3 3070 	ldrh.w	r3, [r3, #112]	; 0x70
 80045b4:	4618      	mov	r0, r3
 80045b6:	3708      	adds	r7, #8
 80045b8:	46bd      	mov	sp, r7
 80045ba:	bd80      	pop	{r7, pc}

080045bc <_ZN13SFE_UBLOX_GPS8getMonthEt>:
 80045bc:	b580      	push	{r7, lr}
 80045be:	b082      	sub	sp, #8
 80045c0:	af00      	add	r7, sp, #0
 80045c2:	6078      	str	r0, [r7, #4]
 80045c4:	460b      	mov	r3, r1
 80045c6:	807b      	strh	r3, [r7, #2]
 80045c8:	687b      	ldr	r3, [r7, #4]
 80045ca:	f893 3388 	ldrb.w	r3, [r3, #904]	; 0x388
 80045ce:	f003 0304 	and.w	r3, r3, #4
 80045d2:	b2db      	uxtb	r3, r3
 80045d4:	2b00      	cmp	r3, #0
 80045d6:	d104      	bne.n	80045e2 <_ZN13SFE_UBLOX_GPS8getMonthEt+0x26>
 80045d8:	887b      	ldrh	r3, [r7, #2]
 80045da:	4619      	mov	r1, r3
 80045dc:	6878      	ldr	r0, [r7, #4]
 80045de:	f000 f892 	bl	8004706 <_ZN13SFE_UBLOX_GPS6getPVTEt>
 80045e2:	687a      	ldr	r2, [r7, #4]
 80045e4:	f892 3388 	ldrb.w	r3, [r2, #904]	; 0x388
 80045e8:	f36f 0382 	bfc	r3, #2, #1
 80045ec:	f882 3388 	strb.w	r3, [r2, #904]	; 0x388
 80045f0:	687b      	ldr	r3, [r7, #4]
 80045f2:	f893 3072 	ldrb.w	r3, [r3, #114]	; 0x72
 80045f6:	4618      	mov	r0, r3
 80045f8:	3708      	adds	r7, #8
 80045fa:	46bd      	mov	sp, r7
 80045fc:	bd80      	pop	{r7, pc}

080045fe <_ZN13SFE_UBLOX_GPS6getDayEt>:
 80045fe:	b580      	push	{r7, lr}
 8004600:	b082      	sub	sp, #8
 8004602:	af00      	add	r7, sp, #0
 8004604:	6078      	str	r0, [r7, #4]
 8004606:	460b      	mov	r3, r1
 8004608:	807b      	strh	r3, [r7, #2]
 800460a:	687b      	ldr	r3, [r7, #4]
 800460c:	f893 3388 	ldrb.w	r3, [r3, #904]	; 0x388
 8004610:	f003 0308 	and.w	r3, r3, #8
 8004614:	b2db      	uxtb	r3, r3
 8004616:	2b00      	cmp	r3, #0
 8004618:	d104      	bne.n	8004624 <_ZN13SFE_UBLOX_GPS6getDayEt+0x26>
 800461a:	887b      	ldrh	r3, [r7, #2]
 800461c:	4619      	mov	r1, r3
 800461e:	6878      	ldr	r0, [r7, #4]
 8004620:	f000 f871 	bl	8004706 <_ZN13SFE_UBLOX_GPS6getPVTEt>
 8004624:	687a      	ldr	r2, [r7, #4]
 8004626:	f892 3388 	ldrb.w	r3, [r2, #904]	; 0x388
 800462a:	f36f 03c3 	bfc	r3, #3, #1
 800462e:	f882 3388 	strb.w	r3, [r2, #904]	; 0x388
 8004632:	687b      	ldr	r3, [r7, #4]
 8004634:	f893 3073 	ldrb.w	r3, [r3, #115]	; 0x73
 8004638:	4618      	mov	r0, r3
 800463a:	3708      	adds	r7, #8
 800463c:	46bd      	mov	sp, r7
 800463e:	bd80      	pop	{r7, pc}

08004640 <_ZN13SFE_UBLOX_GPS7getHourEt>:
 8004640:	b580      	push	{r7, lr}
 8004642:	b082      	sub	sp, #8
 8004644:	af00      	add	r7, sp, #0
 8004646:	6078      	str	r0, [r7, #4]
 8004648:	460b      	mov	r3, r1
 800464a:	807b      	strh	r3, [r7, #2]
 800464c:	687b      	ldr	r3, [r7, #4]
 800464e:	f893 3388 	ldrb.w	r3, [r3, #904]	; 0x388
 8004652:	f003 0310 	and.w	r3, r3, #16
 8004656:	b2db      	uxtb	r3, r3
 8004658:	2b00      	cmp	r3, #0
 800465a:	d104      	bne.n	8004666 <_ZN13SFE_UBLOX_GPS7getHourEt+0x26>
 800465c:	887b      	ldrh	r3, [r7, #2]
 800465e:	4619      	mov	r1, r3
 8004660:	6878      	ldr	r0, [r7, #4]
 8004662:	f000 f850 	bl	8004706 <_ZN13SFE_UBLOX_GPS6getPVTEt>
 8004666:	687a      	ldr	r2, [r7, #4]
 8004668:	f892 3388 	ldrb.w	r3, [r2, #904]	; 0x388
 800466c:	f36f 1304 	bfc	r3, #4, #1
 8004670:	f882 3388 	strb.w	r3, [r2, #904]	; 0x388
 8004674:	687b      	ldr	r3, [r7, #4]
 8004676:	f893 3074 	ldrb.w	r3, [r3, #116]	; 0x74
 800467a:	4618      	mov	r0, r3
 800467c:	3708      	adds	r7, #8
 800467e:	46bd      	mov	sp, r7
 8004680:	bd80      	pop	{r7, pc}

08004682 <_ZN13SFE_UBLOX_GPS9getMinuteEt>:
 8004682:	b580      	push	{r7, lr}
 8004684:	b082      	sub	sp, #8
 8004686:	af00      	add	r7, sp, #0
 8004688:	6078      	str	r0, [r7, #4]
 800468a:	460b      	mov	r3, r1
 800468c:	807b      	strh	r3, [r7, #2]
 800468e:	687b      	ldr	r3, [r7, #4]
 8004690:	f893 3388 	ldrb.w	r3, [r3, #904]	; 0x388
 8004694:	f003 0320 	and.w	r3, r3, #32
 8004698:	b2db      	uxtb	r3, r3
 800469a:	2b00      	cmp	r3, #0
 800469c:	d104      	bne.n	80046a8 <_ZN13SFE_UBLOX_GPS9getMinuteEt+0x26>
 800469e:	887b      	ldrh	r3, [r7, #2]
 80046a0:	4619      	mov	r1, r3
 80046a2:	6878      	ldr	r0, [r7, #4]
 80046a4:	f000 f82f 	bl	8004706 <_ZN13SFE_UBLOX_GPS6getPVTEt>
 80046a8:	687a      	ldr	r2, [r7, #4]
 80046aa:	f892 3388 	ldrb.w	r3, [r2, #904]	; 0x388
 80046ae:	f36f 1345 	bfc	r3, #5, #1
 80046b2:	f882 3388 	strb.w	r3, [r2, #904]	; 0x388
 80046b6:	687b      	ldr	r3, [r7, #4]
 80046b8:	f893 3075 	ldrb.w	r3, [r3, #117]	; 0x75
 80046bc:	4618      	mov	r0, r3
 80046be:	3708      	adds	r7, #8
 80046c0:	46bd      	mov	sp, r7
 80046c2:	bd80      	pop	{r7, pc}

080046c4 <_ZN13SFE_UBLOX_GPS9getSecondEt>:
 80046c4:	b580      	push	{r7, lr}
 80046c6:	b082      	sub	sp, #8
 80046c8:	af00      	add	r7, sp, #0
 80046ca:	6078      	str	r0, [r7, #4]
 80046cc:	460b      	mov	r3, r1
 80046ce:	807b      	strh	r3, [r7, #2]
 80046d0:	687b      	ldr	r3, [r7, #4]
 80046d2:	f893 3388 	ldrb.w	r3, [r3, #904]	; 0x388
 80046d6:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80046da:	b2db      	uxtb	r3, r3
 80046dc:	2b00      	cmp	r3, #0
 80046de:	d104      	bne.n	80046ea <_ZN13SFE_UBLOX_GPS9getSecondEt+0x26>
 80046e0:	887b      	ldrh	r3, [r7, #2]
 80046e2:	4619      	mov	r1, r3
 80046e4:	6878      	ldr	r0, [r7, #4]
 80046e6:	f000 f80e 	bl	8004706 <_ZN13SFE_UBLOX_GPS6getPVTEt>
 80046ea:	687a      	ldr	r2, [r7, #4]
 80046ec:	f892 3388 	ldrb.w	r3, [r2, #904]	; 0x388
 80046f0:	f36f 1386 	bfc	r3, #6, #1
 80046f4:	f882 3388 	strb.w	r3, [r2, #904]	; 0x388
 80046f8:	687b      	ldr	r3, [r7, #4]
 80046fa:	f893 3076 	ldrb.w	r3, [r3, #118]	; 0x76
 80046fe:	4618      	mov	r0, r3
 8004700:	3708      	adds	r7, #8
 8004702:	46bd      	mov	sp, r7
 8004704:	bd80      	pop	{r7, pc}

08004706 <_ZN13SFE_UBLOX_GPS6getPVTEt>:
 8004706:	b580      	push	{r7, lr}
 8004708:	b084      	sub	sp, #16
 800470a:	af00      	add	r7, sp, #0
 800470c:	6078      	str	r0, [r7, #4]
 800470e:	460b      	mov	r3, r1
 8004710:	807b      	strh	r3, [r7, #2]
 8004712:	687b      	ldr	r3, [r7, #4]
 8004714:	f893 3378 	ldrb.w	r3, [r3, #888]	; 0x378
 8004718:	2b00      	cmp	r3, #0
 800471a:	d018      	beq.n	800474e <_ZN13SFE_UBLOX_GPS6getPVTEt+0x48>
 800471c:	687b      	ldr	r3, [r7, #4]
 800471e:	f893 3379 	ldrb.w	r3, [r3, #889]	; 0x379
 8004722:	2b00      	cmp	r3, #0
 8004724:	d013      	beq.n	800474e <_ZN13SFE_UBLOX_GPS6getPVTEt+0x48>
 8004726:	687b      	ldr	r3, [r7, #4]
 8004728:	f503 7154 	add.w	r1, r3, #848	; 0x350
 800472c:	2307      	movs	r3, #7
 800472e:	2201      	movs	r2, #1
 8004730:	6878      	ldr	r0, [r7, #4]
 8004732:	f7fd ffb4 	bl	800269e <_ZN13SFE_UBLOX_GPS18checkUbloxInternalEP9ubxPackethh>
 8004736:	687b      	ldr	r3, [r7, #4]
 8004738:	f893 3389 	ldrb.w	r3, [r3, #905]	; 0x389
 800473c:	f003 0304 	and.w	r3, r3, #4
 8004740:	b2db      	uxtb	r3, r3
 8004742:	2b00      	cmp	r3, #0
 8004744:	bf14      	ite	ne
 8004746:	2301      	movne	r3, #1
 8004748:	2300      	moveq	r3, #0
 800474a:	b2db      	uxtb	r3, r3
 800474c:	e03e      	b.n	80047cc <_ZN13SFE_UBLOX_GPS6getPVTEt+0xc6>
 800474e:	687b      	ldr	r3, [r7, #4]
 8004750:	f893 3378 	ldrb.w	r3, [r3, #888]	; 0x378
 8004754:	2b00      	cmp	r3, #0
 8004756:	d009      	beq.n	800476c <_ZN13SFE_UBLOX_GPS6getPVTEt+0x66>
 8004758:	687b      	ldr	r3, [r7, #4]
 800475a:	f893 3379 	ldrb.w	r3, [r3, #889]	; 0x379
 800475e:	f083 0301 	eor.w	r3, r3, #1
 8004762:	b2db      	uxtb	r3, r3
 8004764:	2b00      	cmp	r3, #0
 8004766:	d001      	beq.n	800476c <_ZN13SFE_UBLOX_GPS6getPVTEt+0x66>
 8004768:	2300      	movs	r3, #0
 800476a:	e02f      	b.n	80047cc <_ZN13SFE_UBLOX_GPS6getPVTEt+0xc6>
 800476c:	687b      	ldr	r3, [r7, #4]
 800476e:	2201      	movs	r2, #1
 8004770:	f883 2350 	strb.w	r2, [r3, #848]	; 0x350
 8004774:	687b      	ldr	r3, [r7, #4]
 8004776:	2207      	movs	r2, #7
 8004778:	f883 2351 	strb.w	r2, [r3, #849]	; 0x351
 800477c:	687b      	ldr	r3, [r7, #4]
 800477e:	2200      	movs	r2, #0
 8004780:	f8a3 2352 	strh.w	r2, [r3, #850]	; 0x352
 8004784:	687b      	ldr	r3, [r7, #4]
 8004786:	f503 7354 	add.w	r3, r3, #848	; 0x350
 800478a:	887a      	ldrh	r2, [r7, #2]
 800478c:	4619      	mov	r1, r3
 800478e:	6878      	ldr	r0, [r7, #4]
 8004790:	f7ff fa3c 	bl	8003c0c <_ZN13SFE_UBLOX_GPS11sendCommandEP9ubxPackett>
 8004794:	4603      	mov	r3, r0
 8004796:	73fb      	strb	r3, [r7, #15]
 8004798:	7bfb      	ldrb	r3, [r7, #15]
 800479a:	2b0b      	cmp	r3, #11
 800479c:	d101      	bne.n	80047a2 <_ZN13SFE_UBLOX_GPS6getPVTEt+0x9c>
 800479e:	2301      	movs	r3, #1
 80047a0:	e014      	b.n	80047cc <_ZN13SFE_UBLOX_GPS6getPVTEt+0xc6>
 80047a2:	7bfb      	ldrb	r3, [r7, #15]
 80047a4:	2b0d      	cmp	r3, #13
 80047a6:	d106      	bne.n	80047b6 <_ZN13SFE_UBLOX_GPS6getPVTEt+0xb0>
 80047a8:	687b      	ldr	r3, [r7, #4]
 80047aa:	f893 3350 	ldrb.w	r3, [r3, #848]	; 0x350
 80047ae:	2b01      	cmp	r3, #1
 80047b0:	d101      	bne.n	80047b6 <_ZN13SFE_UBLOX_GPS6getPVTEt+0xb0>
 80047b2:	2301      	movs	r3, #1
 80047b4:	e00a      	b.n	80047cc <_ZN13SFE_UBLOX_GPS6getPVTEt+0xc6>
 80047b6:	7bfb      	ldrb	r3, [r7, #15]
 80047b8:	2b0d      	cmp	r3, #13
 80047ba:	d106      	bne.n	80047ca <_ZN13SFE_UBLOX_GPS6getPVTEt+0xc4>
 80047bc:	687b      	ldr	r3, [r7, #4]
 80047be:	f893 3350 	ldrb.w	r3, [r3, #848]	; 0x350
 80047c2:	2b28      	cmp	r3, #40	; 0x28
 80047c4:	d101      	bne.n	80047ca <_ZN13SFE_UBLOX_GPS6getPVTEt+0xc4>
 80047c6:	2300      	movs	r3, #0
 80047c8:	e000      	b.n	80047cc <_ZN13SFE_UBLOX_GPS6getPVTEt+0xc6>
 80047ca:	2300      	movs	r3, #0
 80047cc:	4618      	mov	r0, r3
 80047ce:	3710      	adds	r7, #16
 80047d0:	46bd      	mov	sp, r7
 80047d2:	bd80      	pop	{r7, pc}

080047d4 <_ZN13SFE_UBLOX_GPS19getPositionAccuracyEt>:
 80047d4:	b580      	push	{r7, lr}
 80047d6:	b084      	sub	sp, #16
 80047d8:	af00      	add	r7, sp, #0
 80047da:	6078      	str	r0, [r7, #4]
 80047dc:	460b      	mov	r3, r1
 80047de:	807b      	strh	r3, [r7, #2]
 80047e0:	687b      	ldr	r3, [r7, #4]
 80047e2:	2201      	movs	r2, #1
 80047e4:	f883 2350 	strb.w	r2, [r3, #848]	; 0x350
 80047e8:	687b      	ldr	r3, [r7, #4]
 80047ea:	2213      	movs	r2, #19
 80047ec:	f883 2351 	strb.w	r2, [r3, #849]	; 0x351
 80047f0:	687b      	ldr	r3, [r7, #4]
 80047f2:	2200      	movs	r2, #0
 80047f4:	f8a3 2352 	strh.w	r2, [r3, #850]	; 0x352
 80047f8:	687b      	ldr	r3, [r7, #4]
 80047fa:	2200      	movs	r2, #0
 80047fc:	f8a3 2356 	strh.w	r2, [r3, #854]	; 0x356
 8004800:	687b      	ldr	r3, [r7, #4]
 8004802:	f503 7354 	add.w	r3, r3, #848	; 0x350
 8004806:	887a      	ldrh	r2, [r7, #2]
 8004808:	4619      	mov	r1, r3
 800480a:	6878      	ldr	r0, [r7, #4]
 800480c:	f7ff f9fe 	bl	8003c0c <_ZN13SFE_UBLOX_GPS11sendCommandEP9ubxPackett>
 8004810:	4603      	mov	r3, r0
 8004812:	2b0b      	cmp	r3, #11
 8004814:	bf14      	ite	ne
 8004816:	2301      	movne	r3, #1
 8004818:	2300      	moveq	r3, #0
 800481a:	b2db      	uxtb	r3, r3
 800481c:	2b00      	cmp	r3, #0
 800481e:	d001      	beq.n	8004824 <_ZN13SFE_UBLOX_GPS19getPositionAccuracyEt+0x50>
 8004820:	2300      	movs	r3, #0
 8004822:	e01a      	b.n	800485a <_ZN13SFE_UBLOX_GPS19getPositionAccuracyEt+0x86>
 8004824:	2118      	movs	r1, #24
 8004826:	6878      	ldr	r0, [r7, #4]
 8004828:	f7ff fe08 	bl	800443c <_ZN13SFE_UBLOX_GPS11extractLongEh>
 800482c:	60f8      	str	r0, [r7, #12]
 800482e:	68f9      	ldr	r1, [r7, #12]
 8004830:	4b0c      	ldr	r3, [pc, #48]	; (8004864 <_ZN13SFE_UBLOX_GPS19getPositionAccuracyEt+0x90>)
 8004832:	fba3 2301 	umull	r2, r3, r3, r1
 8004836:	08da      	lsrs	r2, r3, #3
 8004838:	4613      	mov	r3, r2
 800483a:	009b      	lsls	r3, r3, #2
 800483c:	4413      	add	r3, r2
 800483e:	005b      	lsls	r3, r3, #1
 8004840:	1aca      	subs	r2, r1, r3
 8004842:	2a04      	cmp	r2, #4
 8004844:	d902      	bls.n	800484c <_ZN13SFE_UBLOX_GPS19getPositionAccuracyEt+0x78>
 8004846:	68fb      	ldr	r3, [r7, #12]
 8004848:	3305      	adds	r3, #5
 800484a:	60fb      	str	r3, [r7, #12]
 800484c:	68fb      	ldr	r3, [r7, #12]
 800484e:	4a05      	ldr	r2, [pc, #20]	; (8004864 <_ZN13SFE_UBLOX_GPS19getPositionAccuracyEt+0x90>)
 8004850:	fba2 2303 	umull	r2, r3, r2, r3
 8004854:	08db      	lsrs	r3, r3, #3
 8004856:	60fb      	str	r3, [r7, #12]
 8004858:	68fb      	ldr	r3, [r7, #12]
 800485a:	4618      	mov	r0, r3
 800485c:	3710      	adds	r7, #16
 800485e:	46bd      	mov	sp, r7
 8004860:	bd80      	pop	{r7, pc}
 8004862:	bf00      	nop
 8004864:	cccccccd 	.word	0xcccccccd

08004868 <_ZN13SFE_UBLOX_GPS11getLatitudeEt>:
 8004868:	b580      	push	{r7, lr}
 800486a:	b082      	sub	sp, #8
 800486c:	af00      	add	r7, sp, #0
 800486e:	6078      	str	r0, [r7, #4]
 8004870:	460b      	mov	r3, r1
 8004872:	807b      	strh	r3, [r7, #2]
 8004874:	687b      	ldr	r3, [r7, #4]
 8004876:	f893 3389 	ldrb.w	r3, [r3, #905]	; 0x389
 800487a:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
 800487e:	b2db      	uxtb	r3, r3
 8004880:	2b00      	cmp	r3, #0
 8004882:	d104      	bne.n	800488e <_ZN13SFE_UBLOX_GPS11getLatitudeEt+0x26>
 8004884:	887b      	ldrh	r3, [r7, #2]
 8004886:	4619      	mov	r1, r3
 8004888:	6878      	ldr	r0, [r7, #4]
 800488a:	f7ff ff3c 	bl	8004706 <_ZN13SFE_UBLOX_GPS6getPVTEt>
 800488e:	687a      	ldr	r2, [r7, #4]
 8004890:	f892 3389 	ldrb.w	r3, [r2, #905]	; 0x389
 8004894:	f36f 13c7 	bfc	r3, #7, #1
 8004898:	f882 3389 	strb.w	r3, [r2, #905]	; 0x389
 800489c:	687a      	ldr	r2, [r7, #4]
 800489e:	f892 3389 	ldrb.w	r3, [r2, #905]	; 0x389
 80048a2:	f36f 0382 	bfc	r3, #2, #1
 80048a6:	f882 3389 	strb.w	r3, [r2, #905]	; 0x389
 80048aa:	687b      	ldr	r3, [r7, #4]
 80048ac:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80048b0:	4618      	mov	r0, r3
 80048b2:	3708      	adds	r7, #8
 80048b4:	46bd      	mov	sp, r7
 80048b6:	bd80      	pop	{r7, pc}

080048b8 <_ZN13SFE_UBLOX_GPS12getLongitudeEt>:
 80048b8:	b580      	push	{r7, lr}
 80048ba:	b082      	sub	sp, #8
 80048bc:	af00      	add	r7, sp, #0
 80048be:	6078      	str	r0, [r7, #4]
 80048c0:	460b      	mov	r3, r1
 80048c2:	807b      	strh	r3, [r7, #2]
 80048c4:	687b      	ldr	r3, [r7, #4]
 80048c6:	f893 3389 	ldrb.w	r3, [r3, #905]	; 0x389
 80048ca:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80048ce:	b2db      	uxtb	r3, r3
 80048d0:	2b00      	cmp	r3, #0
 80048d2:	d104      	bne.n	80048de <_ZN13SFE_UBLOX_GPS12getLongitudeEt+0x26>
 80048d4:	887b      	ldrh	r3, [r7, #2]
 80048d6:	4619      	mov	r1, r3
 80048d8:	6878      	ldr	r0, [r7, #4]
 80048da:	f7ff ff14 	bl	8004706 <_ZN13SFE_UBLOX_GPS6getPVTEt>
 80048de:	687a      	ldr	r2, [r7, #4]
 80048e0:	f892 3389 	ldrb.w	r3, [r2, #905]	; 0x389
 80048e4:	f36f 1386 	bfc	r3, #6, #1
 80048e8:	f882 3389 	strb.w	r3, [r2, #905]	; 0x389
 80048ec:	687a      	ldr	r2, [r7, #4]
 80048ee:	f892 3389 	ldrb.w	r3, [r2, #905]	; 0x389
 80048f2:	f36f 0382 	bfc	r3, #2, #1
 80048f6:	f882 3389 	strb.w	r3, [r2, #905]	; 0x389
 80048fa:	687b      	ldr	r3, [r7, #4]
 80048fc:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8004900:	4618      	mov	r0, r3
 8004902:	3708      	adds	r7, #8
 8004904:	46bd      	mov	sp, r7
 8004906:	bd80      	pop	{r7, pc}

08004908 <_ZN13SFE_UBLOX_GPS11getAltitudeEt>:
 8004908:	b580      	push	{r7, lr}
 800490a:	b082      	sub	sp, #8
 800490c:	af00      	add	r7, sp, #0
 800490e:	6078      	str	r0, [r7, #4]
 8004910:	460b      	mov	r3, r1
 8004912:	807b      	strh	r3, [r7, #2]
 8004914:	687b      	ldr	r3, [r7, #4]
 8004916:	f893 338a 	ldrb.w	r3, [r3, #906]	; 0x38a
 800491a:	f003 0301 	and.w	r3, r3, #1
 800491e:	b2db      	uxtb	r3, r3
 8004920:	2b00      	cmp	r3, #0
 8004922:	d104      	bne.n	800492e <_ZN13SFE_UBLOX_GPS11getAltitudeEt+0x26>
 8004924:	887b      	ldrh	r3, [r7, #2]
 8004926:	4619      	mov	r1, r3
 8004928:	6878      	ldr	r0, [r7, #4]
 800492a:	f7ff feec 	bl	8004706 <_ZN13SFE_UBLOX_GPS6getPVTEt>
 800492e:	687a      	ldr	r2, [r7, #4]
 8004930:	f892 338a 	ldrb.w	r3, [r2, #906]	; 0x38a
 8004934:	f36f 0300 	bfc	r3, #0, #1
 8004938:	f882 338a 	strb.w	r3, [r2, #906]	; 0x38a
 800493c:	687a      	ldr	r2, [r7, #4]
 800493e:	f892 3389 	ldrb.w	r3, [r2, #905]	; 0x389
 8004942:	f36f 0382 	bfc	r3, #2, #1
 8004946:	f882 3389 	strb.w	r3, [r2, #905]	; 0x389
 800494a:	687b      	ldr	r3, [r7, #4]
 800494c:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8004950:	4618      	mov	r0, r3
 8004952:	3708      	adds	r7, #8
 8004954:	46bd      	mov	sp, r7
 8004956:	bd80      	pop	{r7, pc}

08004958 <_ZN13SFE_UBLOX_GPS6getSIVEt>:
 8004958:	b580      	push	{r7, lr}
 800495a:	b082      	sub	sp, #8
 800495c:	af00      	add	r7, sp, #0
 800495e:	6078      	str	r0, [r7, #4]
 8004960:	460b      	mov	r3, r1
 8004962:	807b      	strh	r3, [r7, #2]
 8004964:	687b      	ldr	r3, [r7, #4]
 8004966:	f893 338a 	ldrb.w	r3, [r3, #906]	; 0x38a
 800496a:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
 800496e:	b2db      	uxtb	r3, r3
 8004970:	2b00      	cmp	r3, #0
 8004972:	d104      	bne.n	800497e <_ZN13SFE_UBLOX_GPS6getSIVEt+0x26>
 8004974:	887b      	ldrh	r3, [r7, #2]
 8004976:	4619      	mov	r1, r3
 8004978:	6878      	ldr	r0, [r7, #4]
 800497a:	f7ff fec4 	bl	8004706 <_ZN13SFE_UBLOX_GPS6getPVTEt>
 800497e:	687a      	ldr	r2, [r7, #4]
 8004980:	f892 338a 	ldrb.w	r3, [r2, #906]	; 0x38a
 8004984:	f36f 13c7 	bfc	r3, #7, #1
 8004988:	f882 338a 	strb.w	r3, [r2, #906]	; 0x38a
 800498c:	687a      	ldr	r2, [r7, #4]
 800498e:	f892 3389 	ldrb.w	r3, [r2, #905]	; 0x389
 8004992:	f36f 0382 	bfc	r3, #2, #1
 8004996:	f882 3389 	strb.w	r3, [r2, #905]	; 0x389
 800499a:	687b      	ldr	r3, [r7, #4]
 800499c:	f893 30ac 	ldrb.w	r3, [r3, #172]	; 0xac
 80049a0:	4618      	mov	r0, r3
 80049a2:	3708      	adds	r7, #8
 80049a4:	46bd      	mov	sp, r7
 80049a6:	bd80      	pop	{r7, pc}

080049a8 <LL_APB2_GRP1_EnableClock>:
 80049a8:	b480      	push	{r7}
 80049aa:	b085      	sub	sp, #20
 80049ac:	af00      	add	r7, sp, #0
 80049ae:	6078      	str	r0, [r7, #4]
 80049b0:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 80049b4:	6e1a      	ldr	r2, [r3, #96]	; 0x60
 80049b6:	f04f 41b0 	mov.w	r1, #1476395008	; 0x58000000
 80049ba:	687b      	ldr	r3, [r7, #4]
 80049bc:	4313      	orrs	r3, r2
 80049be:	660b      	str	r3, [r1, #96]	; 0x60
 80049c0:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 80049c4:	6e1a      	ldr	r2, [r3, #96]	; 0x60
 80049c6:	687b      	ldr	r3, [r7, #4]
 80049c8:	4013      	ands	r3, r2
 80049ca:	60fb      	str	r3, [r7, #12]
 80049cc:	68fb      	ldr	r3, [r7, #12]
 80049ce:	bf00      	nop
 80049d0:	3714      	adds	r7, #20
 80049d2:	46bd      	mov	sp, r7
 80049d4:	bc80      	pop	{r7}
 80049d6:	4770      	bx	lr

080049d8 <LL_APB2_GRP1_DisableClock>:
 80049d8:	b480      	push	{r7}
 80049da:	b083      	sub	sp, #12
 80049dc:	af00      	add	r7, sp, #0
 80049de:	6078      	str	r0, [r7, #4]
 80049e0:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 80049e4:	6e1a      	ldr	r2, [r3, #96]	; 0x60
 80049e6:	687b      	ldr	r3, [r7, #4]
 80049e8:	43db      	mvns	r3, r3
 80049ea:	f04f 41b0 	mov.w	r1, #1476395008	; 0x58000000
 80049ee:	4013      	ands	r3, r2
 80049f0:	660b      	str	r3, [r1, #96]	; 0x60
 80049f2:	bf00      	nop
 80049f4:	370c      	adds	r7, #12
 80049f6:	46bd      	mov	sp, r7
 80049f8:	bc80      	pop	{r7}
 80049fa:	4770      	bx	lr

080049fc <MX_ADC_Init>:
 80049fc:	b580      	push	{r7, lr}
 80049fe:	af00      	add	r7, sp, #0
 8004a00:	4b23      	ldr	r3, [pc, #140]	; (8004a90 <MX_ADC_Init+0x94>)
 8004a02:	4a24      	ldr	r2, [pc, #144]	; (8004a94 <MX_ADC_Init+0x98>)
 8004a04:	601a      	str	r2, [r3, #0]
 8004a06:	4b22      	ldr	r3, [pc, #136]	; (8004a90 <MX_ADC_Init+0x94>)
 8004a08:	f04f 4200 	mov.w	r2, #2147483648	; 0x80000000
 8004a0c:	605a      	str	r2, [r3, #4]
 8004a0e:	4b20      	ldr	r3, [pc, #128]	; (8004a90 <MX_ADC_Init+0x94>)
 8004a10:	2200      	movs	r2, #0
 8004a12:	609a      	str	r2, [r3, #8]
 8004a14:	4b1e      	ldr	r3, [pc, #120]	; (8004a90 <MX_ADC_Init+0x94>)
 8004a16:	2200      	movs	r2, #0
 8004a18:	60da      	str	r2, [r3, #12]
 8004a1a:	4b1d      	ldr	r3, [pc, #116]	; (8004a90 <MX_ADC_Init+0x94>)
 8004a1c:	2200      	movs	r2, #0
 8004a1e:	611a      	str	r2, [r3, #16]
 8004a20:	4b1b      	ldr	r3, [pc, #108]	; (8004a90 <MX_ADC_Init+0x94>)
 8004a22:	2204      	movs	r2, #4
 8004a24:	615a      	str	r2, [r3, #20]
 8004a26:	4b1a      	ldr	r3, [pc, #104]	; (8004a90 <MX_ADC_Init+0x94>)
 8004a28:	2200      	movs	r2, #0
 8004a2a:	761a      	strb	r2, [r3, #24]
 8004a2c:	4b18      	ldr	r3, [pc, #96]	; (8004a90 <MX_ADC_Init+0x94>)
 8004a2e:	2200      	movs	r2, #0
 8004a30:	765a      	strb	r2, [r3, #25]
 8004a32:	4b17      	ldr	r3, [pc, #92]	; (8004a90 <MX_ADC_Init+0x94>)
 8004a34:	2200      	movs	r2, #0
 8004a36:	769a      	strb	r2, [r3, #26]
 8004a38:	4b15      	ldr	r3, [pc, #84]	; (8004a90 <MX_ADC_Init+0x94>)
 8004a3a:	2201      	movs	r2, #1
 8004a3c:	61da      	str	r2, [r3, #28]
 8004a3e:	4b14      	ldr	r3, [pc, #80]	; (8004a90 <MX_ADC_Init+0x94>)
 8004a40:	2200      	movs	r2, #0
 8004a42:	f883 2020 	strb.w	r2, [r3, #32]
 8004a46:	4b12      	ldr	r3, [pc, #72]	; (8004a90 <MX_ADC_Init+0x94>)
 8004a48:	2200      	movs	r2, #0
 8004a4a:	625a      	str	r2, [r3, #36]	; 0x24
 8004a4c:	4b10      	ldr	r3, [pc, #64]	; (8004a90 <MX_ADC_Init+0x94>)
 8004a4e:	2200      	movs	r2, #0
 8004a50:	629a      	str	r2, [r3, #40]	; 0x28
 8004a52:	4b0f      	ldr	r3, [pc, #60]	; (8004a90 <MX_ADC_Init+0x94>)
 8004a54:	2200      	movs	r2, #0
 8004a56:	f883 202c 	strb.w	r2, [r3, #44]	; 0x2c
 8004a5a:	4b0d      	ldr	r3, [pc, #52]	; (8004a90 <MX_ADC_Init+0x94>)
 8004a5c:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 8004a60:	631a      	str	r2, [r3, #48]	; 0x30
 8004a62:	4b0b      	ldr	r3, [pc, #44]	; (8004a90 <MX_ADC_Init+0x94>)
 8004a64:	2207      	movs	r2, #7
 8004a66:	635a      	str	r2, [r3, #52]	; 0x34
 8004a68:	4b09      	ldr	r3, [pc, #36]	; (8004a90 <MX_ADC_Init+0x94>)
 8004a6a:	2207      	movs	r2, #7
 8004a6c:	639a      	str	r2, [r3, #56]	; 0x38
 8004a6e:	4b08      	ldr	r3, [pc, #32]	; (8004a90 <MX_ADC_Init+0x94>)
 8004a70:	2200      	movs	r2, #0
 8004a72:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8004a76:	4b06      	ldr	r3, [pc, #24]	; (8004a90 <MX_ADC_Init+0x94>)
 8004a78:	2200      	movs	r2, #0
 8004a7a:	64da      	str	r2, [r3, #76]	; 0x4c
 8004a7c:	4804      	ldr	r0, [pc, #16]	; (8004a90 <MX_ADC_Init+0x94>)
 8004a7e:	f002 fd57 	bl	8007530 <HAL_ADC_Init>
 8004a82:	4603      	mov	r3, r0
 8004a84:	2b00      	cmp	r3, #0
 8004a86:	d001      	beq.n	8004a8c <MX_ADC_Init+0x90>
 8004a88:	f001 f888 	bl	8005b9c <Error_Handler>
 8004a8c:	bf00      	nop
 8004a8e:	bd80      	pop	{r7, pc}
 8004a90:	20001d24 	.word	0x20001d24
 8004a94:	40012400 	.word	0x40012400

08004a98 <HAL_ADC_MspInit>:
 8004a98:	b580      	push	{r7, lr}
 8004a9a:	b082      	sub	sp, #8
 8004a9c:	af00      	add	r7, sp, #0
 8004a9e:	6078      	str	r0, [r7, #4]
 8004aa0:	687b      	ldr	r3, [r7, #4]
 8004aa2:	681b      	ldr	r3, [r3, #0]
 8004aa4:	4a05      	ldr	r2, [pc, #20]	; (8004abc <HAL_ADC_MspInit+0x24>)
 8004aa6:	4293      	cmp	r3, r2
 8004aa8:	d103      	bne.n	8004ab2 <HAL_ADC_MspInit+0x1a>
 8004aaa:	f44f 7000 	mov.w	r0, #512	; 0x200
 8004aae:	f7ff ff7b 	bl	80049a8 <LL_APB2_GRP1_EnableClock>
 8004ab2:	bf00      	nop
 8004ab4:	3708      	adds	r7, #8
 8004ab6:	46bd      	mov	sp, r7
 8004ab8:	bd80      	pop	{r7, pc}
 8004aba:	bf00      	nop
 8004abc:	40012400 	.word	0x40012400

08004ac0 <HAL_ADC_MspDeInit>:
 8004ac0:	b580      	push	{r7, lr}
 8004ac2:	b082      	sub	sp, #8
 8004ac4:	af00      	add	r7, sp, #0
 8004ac6:	6078      	str	r0, [r7, #4]
 8004ac8:	687b      	ldr	r3, [r7, #4]
 8004aca:	681b      	ldr	r3, [r3, #0]
 8004acc:	4a05      	ldr	r2, [pc, #20]	; (8004ae4 <HAL_ADC_MspDeInit+0x24>)
 8004ace:	4293      	cmp	r3, r2
 8004ad0:	d103      	bne.n	8004ada <HAL_ADC_MspDeInit+0x1a>
 8004ad2:	f44f 7000 	mov.w	r0, #512	; 0x200
 8004ad6:	f7ff ff7f 	bl	80049d8 <LL_APB2_GRP1_DisableClock>
 8004ada:	bf00      	nop
 8004adc:	3708      	adds	r7, #8
 8004ade:	46bd      	mov	sp, r7
 8004ae0:	bd80      	pop	{r7, pc}
 8004ae2:	bf00      	nop
 8004ae4:	40012400 	.word	0x40012400

08004ae8 <SYS_InitMeasurement>:
 8004ae8:	b480      	push	{r7}
 8004aea:	af00      	add	r7, sp, #0
 8004aec:	4b03      	ldr	r3, [pc, #12]	; (8004afc <SYS_InitMeasurement+0x14>)
 8004aee:	4a04      	ldr	r2, [pc, #16]	; (8004b00 <SYS_InitMeasurement+0x18>)
 8004af0:	601a      	str	r2, [r3, #0]
 8004af2:	bf00      	nop
 8004af4:	46bd      	mov	sp, r7
 8004af6:	bc80      	pop	{r7}
 8004af8:	4770      	bx	lr
 8004afa:	bf00      	nop
 8004afc:	20001d24 	.word	0x20001d24
 8004b00:	40012400 	.word	0x40012400

08004b04 <SYS_GetTemperatureLevel>:
 8004b04:	b580      	push	{r7, lr}
 8004b06:	b086      	sub	sp, #24
 8004b08:	af02      	add	r7, sp, #8
 8004b0a:	2300      	movs	r3, #0
 8004b0c:	81fb      	strh	r3, [r7, #14]
 8004b0e:	2300      	movs	r3, #0
 8004b10:	60bb      	str	r3, [r7, #8]
 8004b12:	f000 f871 	bl	8004bf8 <SYS_GetBatteryLevel>
 8004b16:	4603      	mov	r3, r0
 8004b18:	80fb      	strh	r3, [r7, #6]
 8004b1a:	4830      	ldr	r0, [pc, #192]	; (8004bdc <SYS_GetTemperatureLevel+0xd8>)
 8004b1c:	f000 f8a0 	bl	8004c60 <ADC_ReadChannels>
 8004b20:	60b8      	str	r0, [r7, #8]
 8004b22:	4b2f      	ldr	r3, [pc, #188]	; (8004be0 <SYS_GetTemperatureLevel+0xdc>)
 8004b24:	881a      	ldrh	r2, [r3, #0]
 8004b26:	4b2f      	ldr	r3, [pc, #188]	; (8004be4 <SYS_GetTemperatureLevel+0xe0>)
 8004b28:	881b      	ldrh	r3, [r3, #0]
 8004b2a:	429a      	cmp	r2, r3
 8004b2c:	d026      	beq.n	8004b7c <SYS_GetTemperatureLevel+0x78>
 8004b2e:	4b2c      	ldr	r3, [pc, #176]	; (8004be0 <SYS_GetTemperatureLevel+0xdc>)
 8004b30:	881a      	ldrh	r2, [r3, #0]
 8004b32:	4b2c      	ldr	r3, [pc, #176]	; (8004be4 <SYS_GetTemperatureLevel+0xe0>)
 8004b34:	881b      	ldrh	r3, [r3, #0]
 8004b36:	429a      	cmp	r2, r3
 8004b38:	d01c      	beq.n	8004b74 <SYS_GetTemperatureLevel+0x70>
 8004b3a:	88fb      	ldrh	r3, [r7, #6]
 8004b3c:	68ba      	ldr	r2, [r7, #8]
 8004b3e:	fb02 f303 	mul.w	r3, r2, r3
 8004b42:	089b      	lsrs	r3, r3, #2
 8004b44:	4a28      	ldr	r2, [pc, #160]	; (8004be8 <SYS_GetTemperatureLevel+0xe4>)
 8004b46:	fba2 2303 	umull	r2, r3, r2, r3
 8004b4a:	095b      	lsrs	r3, r3, #5
 8004b4c:	461a      	mov	r2, r3
 8004b4e:	4b25      	ldr	r3, [pc, #148]	; (8004be4 <SYS_GetTemperatureLevel+0xe0>)
 8004b50:	881b      	ldrh	r3, [r3, #0]
 8004b52:	1ad3      	subs	r3, r2, r3
 8004b54:	2264      	movs	r2, #100	; 0x64
 8004b56:	fb02 f203 	mul.w	r2, r2, r3
 8004b5a:	4b21      	ldr	r3, [pc, #132]	; (8004be0 <SYS_GetTemperatureLevel+0xdc>)
 8004b5c:	881b      	ldrh	r3, [r3, #0]
 8004b5e:	4619      	mov	r1, r3
 8004b60:	4b20      	ldr	r3, [pc, #128]	; (8004be4 <SYS_GetTemperatureLevel+0xe0>)
 8004b62:	881b      	ldrh	r3, [r3, #0]
 8004b64:	1acb      	subs	r3, r1, r3
 8004b66:	fb92 f3f3 	sdiv	r3, r2, r3
 8004b6a:	b29b      	uxth	r3, r3
 8004b6c:	331e      	adds	r3, #30
 8004b6e:	b29b      	uxth	r3, r3
 8004b70:	b21b      	sxth	r3, r3
 8004b72:	e001      	b.n	8004b78 <SYS_GetTemperatureLevel+0x74>
 8004b74:	f647 73ff 	movw	r3, #32767	; 0x7fff
 8004b78:	81fb      	strh	r3, [r7, #14]
 8004b7a:	e01c      	b.n	8004bb6 <SYS_GetTemperatureLevel+0xb2>
 8004b7c:	88fb      	ldrh	r3, [r7, #6]
 8004b7e:	68ba      	ldr	r2, [r7, #8]
 8004b80:	fb02 f203 	mul.w	r2, r2, r3
 8004b84:	4b19      	ldr	r3, [pc, #100]	; (8004bec <SYS_GetTemperatureLevel+0xe8>)
 8004b86:	fba3 1302 	umull	r1, r3, r3, r2
 8004b8a:	1ad2      	subs	r2, r2, r3
 8004b8c:	0852      	lsrs	r2, r2, #1
 8004b8e:	4413      	add	r3, r2
 8004b90:	0adb      	lsrs	r3, r3, #11
 8004b92:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8004b96:	fb02 f303 	mul.w	r3, r2, r3
 8004b9a:	f5a3 2339 	sub.w	r3, r3, #757760	; 0xb9000
 8004b9e:	f5a3 630c 	sub.w	r3, r3, #2240	; 0x8c0
 8004ba2:	4a13      	ldr	r2, [pc, #76]	; (8004bf0 <SYS_GetTemperatureLevel+0xec>)
 8004ba4:	fb82 1203 	smull	r1, r2, r2, r3
 8004ba8:	1292      	asrs	r2, r2, #10
 8004baa:	17db      	asrs	r3, r3, #31
 8004bac:	1ad3      	subs	r3, r2, r3
 8004bae:	b29b      	uxth	r3, r3
 8004bb0:	331e      	adds	r3, #30
 8004bb2:	b29b      	uxth	r3, r3
 8004bb4:	81fb      	strh	r3, [r7, #14]
 8004bb6:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8004bba:	9300      	str	r3, [sp, #0]
 8004bbc:	4b0d      	ldr	r3, [pc, #52]	; (8004bf4 <SYS_GetTemperatureLevel+0xf0>)
 8004bbe:	2201      	movs	r2, #1
 8004bc0:	2100      	movs	r1, #0
 8004bc2:	2001      	movs	r0, #1
 8004bc4:	f01c fc82 	bl	80214cc <UTIL_ADV_TRACE_COND_FSend>
 8004bc8:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8004bcc:	021b      	lsls	r3, r3, #8
 8004bce:	81fb      	strh	r3, [r7, #14]
 8004bd0:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8004bd4:	4618      	mov	r0, r3
 8004bd6:	3710      	adds	r7, #16
 8004bd8:	46bd      	mov	sp, r7
 8004bda:	bd80      	pop	{r7, pc}
 8004bdc:	b0001000 	.word	0xb0001000
 8004be0:	1fff75c8 	.word	0x1fff75c8
 8004be4:	1fff75a8 	.word	0x1fff75a8
 8004be8:	09ee009f 	.word	0x09ee009f
 8004bec:	00100101 	.word	0x00100101
 8004bf0:	68db8bad 	.word	0x68db8bad
 8004bf4:	08025830 	.word	0x08025830

08004bf8 <SYS_GetBatteryLevel>:
 8004bf8:	b580      	push	{r7, lr}
 8004bfa:	b082      	sub	sp, #8
 8004bfc:	af00      	add	r7, sp, #0
 8004bfe:	2300      	movs	r3, #0
 8004c00:	80fb      	strh	r3, [r7, #6]
 8004c02:	2300      	movs	r3, #0
 8004c04:	603b      	str	r3, [r7, #0]
 8004c06:	4813      	ldr	r0, [pc, #76]	; (8004c54 <SYS_GetBatteryLevel+0x5c>)
 8004c08:	f000 f82a 	bl	8004c60 <ADC_ReadChannels>
 8004c0c:	6038      	str	r0, [r7, #0]
 8004c0e:	683b      	ldr	r3, [r7, #0]
 8004c10:	2b00      	cmp	r3, #0
 8004c12:	d102      	bne.n	8004c1a <SYS_GetBatteryLevel+0x22>
 8004c14:	2300      	movs	r3, #0
 8004c16:	80fb      	strh	r3, [r7, #6]
 8004c18:	e016      	b.n	8004c48 <SYS_GetBatteryLevel+0x50>
 8004c1a:	4b0f      	ldr	r3, [pc, #60]	; (8004c58 <SYS_GetBatteryLevel+0x60>)
 8004c1c:	881b      	ldrh	r3, [r3, #0]
 8004c1e:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8004c22:	4293      	cmp	r3, r2
 8004c24:	d00b      	beq.n	8004c3e <SYS_GetBatteryLevel+0x46>
 8004c26:	4b0c      	ldr	r3, [pc, #48]	; (8004c58 <SYS_GetBatteryLevel+0x60>)
 8004c28:	881b      	ldrh	r3, [r3, #0]
 8004c2a:	461a      	mov	r2, r3
 8004c2c:	f640 43e4 	movw	r3, #3300	; 0xce4
 8004c30:	fb03 f202 	mul.w	r2, r3, r2
 8004c34:	683b      	ldr	r3, [r7, #0]
 8004c36:	fbb2 f3f3 	udiv	r3, r2, r3
 8004c3a:	80fb      	strh	r3, [r7, #6]
 8004c3c:	e004      	b.n	8004c48 <SYS_GetBatteryLevel+0x50>
 8004c3e:	4a07      	ldr	r2, [pc, #28]	; (8004c5c <SYS_GetBatteryLevel+0x64>)
 8004c40:	683b      	ldr	r3, [r7, #0]
 8004c42:	fbb2 f3f3 	udiv	r3, r2, r3
 8004c46:	80fb      	strh	r3, [r7, #6]
 8004c48:	88fb      	ldrh	r3, [r7, #6]
 8004c4a:	4618      	mov	r0, r3
 8004c4c:	3708      	adds	r7, #8
 8004c4e:	46bd      	mov	sp, r7
 8004c50:	bd80      	pop	{r7, pc}
 8004c52:	bf00      	nop
 8004c54:	b4002000 	.word	0xb4002000
 8004c58:	1fff75aa 	.word	0x1fff75aa
 8004c5c:	004c08d8 	.word	0x004c08d8

08004c60 <ADC_ReadChannels>:
 8004c60:	b580      	push	{r7, lr}
 8004c62:	b086      	sub	sp, #24
 8004c64:	af00      	add	r7, sp, #0
 8004c66:	6078      	str	r0, [r7, #4]
 8004c68:	2300      	movs	r3, #0
 8004c6a:	617b      	str	r3, [r7, #20]
 8004c6c:	f107 0308 	add.w	r3, r7, #8
 8004c70:	2200      	movs	r2, #0
 8004c72:	601a      	str	r2, [r3, #0]
 8004c74:	605a      	str	r2, [r3, #4]
 8004c76:	609a      	str	r2, [r3, #8]
 8004c78:	f7ff fec0 	bl	80049fc <MX_ADC_Init>
 8004c7c:	481a      	ldr	r0, [pc, #104]	; (8004ce8 <ADC_ReadChannels+0x88>)
 8004c7e:	f003 fa1a 	bl	80080b6 <HAL_ADCEx_Calibration_Start>
 8004c82:	4603      	mov	r3, r0
 8004c84:	2b00      	cmp	r3, #0
 8004c86:	d001      	beq.n	8004c8c <ADC_ReadChannels+0x2c>
 8004c88:	f000 ff88 	bl	8005b9c <Error_Handler>
 8004c8c:	687b      	ldr	r3, [r7, #4]
 8004c8e:	60bb      	str	r3, [r7, #8]
 8004c90:	2300      	movs	r3, #0
 8004c92:	60fb      	str	r3, [r7, #12]
 8004c94:	2300      	movs	r3, #0
 8004c96:	613b      	str	r3, [r7, #16]
 8004c98:	f107 0308 	add.w	r3, r7, #8
 8004c9c:	4619      	mov	r1, r3
 8004c9e:	4812      	ldr	r0, [pc, #72]	; (8004ce8 <ADC_ReadChannels+0x88>)
 8004ca0:	f002 ff98 	bl	8007bd4 <HAL_ADC_ConfigChannel>
 8004ca4:	4603      	mov	r3, r0
 8004ca6:	2b00      	cmp	r3, #0
 8004ca8:	d001      	beq.n	8004cae <ADC_ReadChannels+0x4e>
 8004caa:	f000 ff77 	bl	8005b9c <Error_Handler>
 8004cae:	480e      	ldr	r0, [pc, #56]	; (8004ce8 <ADC_ReadChannels+0x88>)
 8004cb0:	f002 fe7c 	bl	80079ac <HAL_ADC_Start>
 8004cb4:	4603      	mov	r3, r0
 8004cb6:	2b00      	cmp	r3, #0
 8004cb8:	d001      	beq.n	8004cbe <ADC_ReadChannels+0x5e>
 8004cba:	f000 ff6f 	bl	8005b9c <Error_Handler>
 8004cbe:	f04f 31ff 	mov.w	r1, #4294967295
 8004cc2:	4809      	ldr	r0, [pc, #36]	; (8004ce8 <ADC_ReadChannels+0x88>)
 8004cc4:	f002 feea 	bl	8007a9c <HAL_ADC_PollForConversion>
 8004cc8:	4807      	ldr	r0, [pc, #28]	; (8004ce8 <ADC_ReadChannels+0x88>)
 8004cca:	f002 feb5 	bl	8007a38 <HAL_ADC_Stop>
 8004cce:	4806      	ldr	r0, [pc, #24]	; (8004ce8 <ADC_ReadChannels+0x88>)
 8004cd0:	f002 ff74 	bl	8007bbc <HAL_ADC_GetValue>
 8004cd4:	6178      	str	r0, [r7, #20]
 8004cd6:	4804      	ldr	r0, [pc, #16]	; (8004ce8 <ADC_ReadChannels+0x88>)
 8004cd8:	f002 fdec 	bl	80078b4 <HAL_ADC_DeInit>
 8004cdc:	697b      	ldr	r3, [r7, #20]
 8004cde:	4618      	mov	r0, r3
 8004ce0:	3718      	adds	r7, #24
 8004ce2:	46bd      	mov	sp, r7
 8004ce4:	bd80      	pop	{r7, pc}
 8004ce6:	bf00      	nop
 8004ce8:	20001d24 	.word	0x20001d24

08004cec <LL_AHB2_GRP1_EnableClock>:
 8004cec:	b480      	push	{r7}
 8004cee:	b085      	sub	sp, #20
 8004cf0:	af00      	add	r7, sp, #0
 8004cf2:	6078      	str	r0, [r7, #4]
 8004cf4:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8004cf8:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 8004cfa:	f04f 41b0 	mov.w	r1, #1476395008	; 0x58000000
 8004cfe:	687b      	ldr	r3, [r7, #4]
 8004d00:	4313      	orrs	r3, r2
 8004d02:	64cb      	str	r3, [r1, #76]	; 0x4c
 8004d04:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8004d08:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 8004d0a:	687b      	ldr	r3, [r7, #4]
 8004d0c:	4013      	ands	r3, r2
 8004d0e:	60fb      	str	r3, [r7, #12]
 8004d10:	68fb      	ldr	r3, [r7, #12]
 8004d12:	bf00      	nop
 8004d14:	3714      	adds	r7, #20
 8004d16:	46bd      	mov	sp, r7
 8004d18:	bc80      	pop	{r7}
 8004d1a:	4770      	bx	lr

08004d1c <SYS_LED_Init>:
 8004d1c:	b580      	push	{r7, lr}
 8004d1e:	b088      	sub	sp, #32
 8004d20:	af00      	add	r7, sp, #0
 8004d22:	4603      	mov	r3, r0
 8004d24:	71fb      	strb	r3, [r7, #7]
 8004d26:	f107 030c 	add.w	r3, r7, #12
 8004d2a:	2200      	movs	r2, #0
 8004d2c:	601a      	str	r2, [r3, #0]
 8004d2e:	605a      	str	r2, [r3, #4]
 8004d30:	609a      	str	r2, [r3, #8]
 8004d32:	60da      	str	r2, [r3, #12]
 8004d34:	611a      	str	r2, [r3, #16]
 8004d36:	2002      	movs	r0, #2
 8004d38:	f7ff ffd8 	bl	8004cec <LL_AHB2_GRP1_EnableClock>
 8004d3c:	79fb      	ldrb	r3, [r7, #7]
 8004d3e:	4a12      	ldr	r2, [pc, #72]	; (8004d88 <SYS_LED_Init+0x6c>)
 8004d40:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 8004d44:	60fb      	str	r3, [r7, #12]
 8004d46:	2301      	movs	r3, #1
 8004d48:	613b      	str	r3, [r7, #16]
 8004d4a:	2300      	movs	r3, #0
 8004d4c:	617b      	str	r3, [r7, #20]
 8004d4e:	2302      	movs	r3, #2
 8004d50:	61bb      	str	r3, [r7, #24]
 8004d52:	79fb      	ldrb	r3, [r7, #7]
 8004d54:	4a0d      	ldr	r2, [pc, #52]	; (8004d8c <SYS_LED_Init+0x70>)
 8004d56:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8004d5a:	f107 020c 	add.w	r2, r7, #12
 8004d5e:	4611      	mov	r1, r2
 8004d60:	4618      	mov	r0, r3
 8004d62:	f003 ff85 	bl	8008c70 <HAL_GPIO_Init>
 8004d66:	79fb      	ldrb	r3, [r7, #7]
 8004d68:	4a08      	ldr	r2, [pc, #32]	; (8004d8c <SYS_LED_Init+0x70>)
 8004d6a:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8004d6e:	79fb      	ldrb	r3, [r7, #7]
 8004d70:	4a05      	ldr	r2, [pc, #20]	; (8004d88 <SYS_LED_Init+0x6c>)
 8004d72:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 8004d76:	2200      	movs	r2, #0
 8004d78:	4619      	mov	r1, r3
 8004d7a:	f004 f9a7 	bl	80090cc <HAL_GPIO_WritePin>
 8004d7e:	2300      	movs	r3, #0
 8004d80:	4618      	mov	r0, r3
 8004d82:	3720      	adds	r7, #32
 8004d84:	46bd      	mov	sp, r7
 8004d86:	bd80      	pop	{r7, pc}
 8004d88:	08026284 	.word	0x08026284
 8004d8c:	20000004 	.word	0x20000004

08004d90 <SYS_LED_On>:
 8004d90:	b580      	push	{r7, lr}
 8004d92:	b082      	sub	sp, #8
 8004d94:	af00      	add	r7, sp, #0
 8004d96:	4603      	mov	r3, r0
 8004d98:	71fb      	strb	r3, [r7, #7]
 8004d9a:	79fb      	ldrb	r3, [r7, #7]
 8004d9c:	4a07      	ldr	r2, [pc, #28]	; (8004dbc <SYS_LED_On+0x2c>)
 8004d9e:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8004da2:	79fb      	ldrb	r3, [r7, #7]
 8004da4:	4a06      	ldr	r2, [pc, #24]	; (8004dc0 <SYS_LED_On+0x30>)
 8004da6:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 8004daa:	2201      	movs	r2, #1
 8004dac:	4619      	mov	r1, r3
 8004dae:	f004 f98d 	bl	80090cc <HAL_GPIO_WritePin>
 8004db2:	2300      	movs	r3, #0
 8004db4:	4618      	mov	r0, r3
 8004db6:	3708      	adds	r7, #8
 8004db8:	46bd      	mov	sp, r7
 8004dba:	bd80      	pop	{r7, pc}
 8004dbc:	20000004 	.word	0x20000004
 8004dc0:	08026284 	.word	0x08026284

08004dc4 <SYS_LED_Off>:
 8004dc4:	b580      	push	{r7, lr}
 8004dc6:	b082      	sub	sp, #8
 8004dc8:	af00      	add	r7, sp, #0
 8004dca:	4603      	mov	r3, r0
 8004dcc:	71fb      	strb	r3, [r7, #7]
 8004dce:	79fb      	ldrb	r3, [r7, #7]
 8004dd0:	4a07      	ldr	r2, [pc, #28]	; (8004df0 <SYS_LED_Off+0x2c>)
 8004dd2:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8004dd6:	79fb      	ldrb	r3, [r7, #7]
 8004dd8:	4a06      	ldr	r2, [pc, #24]	; (8004df4 <SYS_LED_Off+0x30>)
 8004dda:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 8004dde:	2200      	movs	r2, #0
 8004de0:	4619      	mov	r1, r3
 8004de2:	f004 f973 	bl	80090cc <HAL_GPIO_WritePin>
 8004de6:	2300      	movs	r3, #0
 8004de8:	4618      	mov	r0, r3
 8004dea:	3708      	adds	r7, #8
 8004dec:	46bd      	mov	sp, r7
 8004dee:	bd80      	pop	{r7, pc}
 8004df0:	20000004 	.word	0x20000004
 8004df4:	08026284 	.word	0x08026284

08004df8 <SYS_LED_Toggle>:
 8004df8:	b580      	push	{r7, lr}
 8004dfa:	b082      	sub	sp, #8
 8004dfc:	af00      	add	r7, sp, #0
 8004dfe:	4603      	mov	r3, r0
 8004e00:	71fb      	strb	r3, [r7, #7]
 8004e02:	79fb      	ldrb	r3, [r7, #7]
 8004e04:	4a07      	ldr	r2, [pc, #28]	; (8004e24 <SYS_LED_Toggle+0x2c>)
 8004e06:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 8004e0a:	79fb      	ldrb	r3, [r7, #7]
 8004e0c:	4906      	ldr	r1, [pc, #24]	; (8004e28 <SYS_LED_Toggle+0x30>)
 8004e0e:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 8004e12:	4619      	mov	r1, r3
 8004e14:	4610      	mov	r0, r2
 8004e16:	f004 f970 	bl	80090fa <HAL_GPIO_TogglePin>
 8004e1a:	2300      	movs	r3, #0
 8004e1c:	4618      	mov	r0, r3
 8004e1e:	3708      	adds	r7, #8
 8004e20:	46bd      	mov	sp, r7
 8004e22:	bd80      	pop	{r7, pc}
 8004e24:	20000004 	.word	0x20000004
 8004e28:	08026284 	.word	0x08026284

08004e2c <SYS_PB_Init>:
 8004e2c:	b580      	push	{r7, lr}
 8004e2e:	b088      	sub	sp, #32
 8004e30:	af00      	add	r7, sp, #0
 8004e32:	4603      	mov	r3, r0
 8004e34:	460a      	mov	r2, r1
 8004e36:	71fb      	strb	r3, [r7, #7]
 8004e38:	4613      	mov	r3, r2
 8004e3a:	71bb      	strb	r3, [r7, #6]
 8004e3c:	f107 030c 	add.w	r3, r7, #12
 8004e40:	2200      	movs	r2, #0
 8004e42:	601a      	str	r2, [r3, #0]
 8004e44:	605a      	str	r2, [r3, #4]
 8004e46:	609a      	str	r2, [r3, #8]
 8004e48:	60da      	str	r2, [r3, #12]
 8004e4a:	611a      	str	r2, [r3, #16]
 8004e4c:	79fb      	ldrb	r3, [r7, #7]
 8004e4e:	2b00      	cmp	r3, #0
 8004e50:	d103      	bne.n	8004e5a <SYS_PB_Init+0x2e>
 8004e52:	2001      	movs	r0, #1
 8004e54:	f7ff ff4a 	bl	8004cec <LL_AHB2_GRP1_EnableClock>
 8004e58:	e00c      	b.n	8004e74 <SYS_PB_Init+0x48>
 8004e5a:	79fb      	ldrb	r3, [r7, #7]
 8004e5c:	2b02      	cmp	r3, #2
 8004e5e:	d103      	bne.n	8004e68 <SYS_PB_Init+0x3c>
 8004e60:	2001      	movs	r0, #1
 8004e62:	f7ff ff43 	bl	8004cec <LL_AHB2_GRP1_EnableClock>
 8004e66:	e005      	b.n	8004e74 <SYS_PB_Init+0x48>
 8004e68:	79fb      	ldrb	r3, [r7, #7]
 8004e6a:	2b01      	cmp	r3, #1
 8004e6c:	d102      	bne.n	8004e74 <SYS_PB_Init+0x48>
 8004e6e:	2004      	movs	r0, #4
 8004e70:	f7ff ff3c 	bl	8004cec <LL_AHB2_GRP1_EnableClock>
 8004e74:	79fb      	ldrb	r3, [r7, #7]
 8004e76:	4a29      	ldr	r2, [pc, #164]	; (8004f1c <SYS_PB_Init+0xf0>)
 8004e78:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 8004e7c:	60fb      	str	r3, [r7, #12]
 8004e7e:	2301      	movs	r3, #1
 8004e80:	617b      	str	r3, [r7, #20]
 8004e82:	2302      	movs	r3, #2
 8004e84:	61bb      	str	r3, [r7, #24]
 8004e86:	79bb      	ldrb	r3, [r7, #6]
 8004e88:	2b00      	cmp	r3, #0
 8004e8a:	d10c      	bne.n	8004ea6 <SYS_PB_Init+0x7a>
 8004e8c:	2300      	movs	r3, #0
 8004e8e:	613b      	str	r3, [r7, #16]
 8004e90:	79fb      	ldrb	r3, [r7, #7]
 8004e92:	4a23      	ldr	r2, [pc, #140]	; (8004f20 <SYS_PB_Init+0xf4>)
 8004e94:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8004e98:	f107 020c 	add.w	r2, r7, #12
 8004e9c:	4611      	mov	r1, r2
 8004e9e:	4618      	mov	r0, r3
 8004ea0:	f003 fee6 	bl	8008c70 <HAL_GPIO_Init>
 8004ea4:	e034      	b.n	8004f10 <SYS_PB_Init+0xe4>
 8004ea6:	4b1f      	ldr	r3, [pc, #124]	; (8004f24 <SYS_PB_Init+0xf8>)
 8004ea8:	613b      	str	r3, [r7, #16]
 8004eaa:	79fb      	ldrb	r3, [r7, #7]
 8004eac:	4a1c      	ldr	r2, [pc, #112]	; (8004f20 <SYS_PB_Init+0xf4>)
 8004eae:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8004eb2:	f107 020c 	add.w	r2, r7, #12
 8004eb6:	4611      	mov	r1, r2
 8004eb8:	4618      	mov	r0, r3
 8004eba:	f003 fed9 	bl	8008c70 <HAL_GPIO_Init>
 8004ebe:	79fb      	ldrb	r3, [r7, #7]
 8004ec0:	00db      	lsls	r3, r3, #3
 8004ec2:	4a19      	ldr	r2, [pc, #100]	; (8004f28 <SYS_PB_Init+0xfc>)
 8004ec4:	441a      	add	r2, r3
 8004ec6:	79fb      	ldrb	r3, [r7, #7]
 8004ec8:	4918      	ldr	r1, [pc, #96]	; (8004f2c <SYS_PB_Init+0x100>)
 8004eca:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 8004ece:	4619      	mov	r1, r3
 8004ed0:	4610      	mov	r0, r2
 8004ed2:	f003 feba 	bl	8008c4a <HAL_EXTI_GetHandle>
 8004ed6:	79fb      	ldrb	r3, [r7, #7]
 8004ed8:	00db      	lsls	r3, r3, #3
 8004eda:	4a13      	ldr	r2, [pc, #76]	; (8004f28 <SYS_PB_Init+0xfc>)
 8004edc:	1898      	adds	r0, r3, r2
 8004ede:	79fb      	ldrb	r3, [r7, #7]
 8004ee0:	4a13      	ldr	r2, [pc, #76]	; (8004f30 <SYS_PB_Init+0x104>)
 8004ee2:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8004ee6:	461a      	mov	r2, r3
 8004ee8:	2100      	movs	r1, #0
 8004eea:	f003 fe95 	bl	8008c18 <HAL_EXTI_RegisterCallback>
 8004eee:	79fb      	ldrb	r3, [r7, #7]
 8004ef0:	4a10      	ldr	r2, [pc, #64]	; (8004f34 <SYS_PB_Init+0x108>)
 8004ef2:	56d0      	ldrsb	r0, [r2, r3]
 8004ef4:	79fb      	ldrb	r3, [r7, #7]
 8004ef6:	4a10      	ldr	r2, [pc, #64]	; (8004f38 <SYS_PB_Init+0x10c>)
 8004ef8:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8004efc:	2200      	movs	r2, #0
 8004efe:	4619      	mov	r1, r3
 8004f00:	f003 fa2d 	bl	800835e <HAL_NVIC_SetPriority>
 8004f04:	79fb      	ldrb	r3, [r7, #7]
 8004f06:	4a0b      	ldr	r2, [pc, #44]	; (8004f34 <SYS_PB_Init+0x108>)
 8004f08:	56d3      	ldrsb	r3, [r2, r3]
 8004f0a:	4618      	mov	r0, r3
 8004f0c:	f003 fa41 	bl	8008392 <HAL_NVIC_EnableIRQ>
 8004f10:	2300      	movs	r3, #0
 8004f12:	4618      	mov	r0, r3
 8004f14:	3720      	adds	r7, #32
 8004f16:	46bd      	mov	sp, r7
 8004f18:	bd80      	pop	{r7, pc}
 8004f1a:	bf00      	nop
 8004f1c:	0802628c 	.word	0x0802628c
 8004f20:	20000010 	.word	0x20000010
 8004f24:	10210000 	.word	0x10210000
 8004f28:	20001d88 	.word	0x20001d88
 8004f2c:	08026298 	.word	0x08026298
 8004f30:	2000001c 	.word	0x2000001c
 8004f34:	08026294 	.word	0x08026294
 8004f38:	20000028 	.word	0x20000028

08004f3c <SYS_PB_Callback>:
 8004f3c:	b480      	push	{r7}
 8004f3e:	b083      	sub	sp, #12
 8004f40:	af00      	add	r7, sp, #0
 8004f42:	4603      	mov	r3, r0
 8004f44:	71fb      	strb	r3, [r7, #7]
 8004f46:	bf00      	nop
 8004f48:	370c      	adds	r7, #12
 8004f4a:	46bd      	mov	sp, r7
 8004f4c:	bc80      	pop	{r7}
 8004f4e:	4770      	bx	lr

08004f50 <SYS_BUTTON1_EXTI_Callback>:
 8004f50:	b580      	push	{r7, lr}
 8004f52:	af00      	add	r7, sp, #0
 8004f54:	2000      	movs	r0, #0
 8004f56:	f7ff fff1 	bl	8004f3c <SYS_PB_Callback>
 8004f5a:	bf00      	nop
 8004f5c:	bd80      	pop	{r7, pc}

08004f5e <SYS_BUTTON3_EXTI_Callback>:
 8004f5e:	b580      	push	{r7, lr}
 8004f60:	af00      	add	r7, sp, #0
 8004f62:	2001      	movs	r0, #1
 8004f64:	f7ff ffea 	bl	8004f3c <SYS_PB_Callback>
 8004f68:	bf00      	nop
 8004f6a:	bd80      	pop	{r7, pc}

08004f6c <SYS_BUTTON2_EXTI_Callback>:
 8004f6c:	b580      	push	{r7, lr}
 8004f6e:	af00      	add	r7, sp, #0
 8004f70:	2002      	movs	r0, #2
 8004f72:	f7ff ffe3 	bl	8004f3c <SYS_PB_Callback>
 8004f76:	bf00      	nop
 8004f78:	bd80      	pop	{r7, pc}

08004f7a <LL_AHB1_GRP1_EnableClock>:
 8004f7a:	b480      	push	{r7}
 8004f7c:	b085      	sub	sp, #20
 8004f7e:	af00      	add	r7, sp, #0
 8004f80:	6078      	str	r0, [r7, #4]
 8004f82:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8004f86:	6c9a      	ldr	r2, [r3, #72]	; 0x48
 8004f88:	f04f 41b0 	mov.w	r1, #1476395008	; 0x58000000
 8004f8c:	687b      	ldr	r3, [r7, #4]
 8004f8e:	4313      	orrs	r3, r2
 8004f90:	648b      	str	r3, [r1, #72]	; 0x48
 8004f92:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8004f96:	6c9a      	ldr	r2, [r3, #72]	; 0x48
 8004f98:	687b      	ldr	r3, [r7, #4]
 8004f9a:	4013      	ands	r3, r2
 8004f9c:	60fb      	str	r3, [r7, #12]
 8004f9e:	68fb      	ldr	r3, [r7, #12]
 8004fa0:	bf00      	nop
 8004fa2:	3714      	adds	r7, #20
 8004fa4:	46bd      	mov	sp, r7
 8004fa6:	bc80      	pop	{r7}
 8004fa8:	4770      	bx	lr

08004faa <MX_DMA_Init>:
 8004faa:	b580      	push	{r7, lr}
 8004fac:	af00      	add	r7, sp, #0
 8004fae:	2004      	movs	r0, #4
 8004fb0:	f7ff ffe3 	bl	8004f7a <LL_AHB1_GRP1_EnableClock>
 8004fb4:	2001      	movs	r0, #1
 8004fb6:	f7ff ffe0 	bl	8004f7a <LL_AHB1_GRP1_EnableClock>
 8004fba:	2200      	movs	r2, #0
 8004fbc:	2100      	movs	r1, #0
 8004fbe:	200b      	movs	r0, #11
 8004fc0:	f003 f9cd 	bl	800835e <HAL_NVIC_SetPriority>
 8004fc4:	200b      	movs	r0, #11
 8004fc6:	f003 f9e4 	bl	8008392 <HAL_NVIC_EnableIRQ>
 8004fca:	2200      	movs	r2, #0
 8004fcc:	2100      	movs	r1, #0
 8004fce:	200c      	movs	r0, #12
 8004fd0:	f003 f9c5 	bl	800835e <HAL_NVIC_SetPriority>
 8004fd4:	200c      	movs	r0, #12
 8004fd6:	f003 f9dc 	bl	8008392 <HAL_NVIC_EnableIRQ>
 8004fda:	2200      	movs	r2, #0
 8004fdc:	2102      	movs	r1, #2
 8004fde:	200f      	movs	r0, #15
 8004fe0:	f003 f9bd 	bl	800835e <HAL_NVIC_SetPriority>
 8004fe4:	200f      	movs	r0, #15
 8004fe6:	f003 f9d4 	bl	8008392 <HAL_NVIC_EnableIRQ>
 8004fea:	bf00      	nop
 8004fec:	bd80      	pop	{r7, pc}

08004fee <LL_AHB2_GRP1_EnableClock>:
 8004fee:	b480      	push	{r7}
 8004ff0:	b085      	sub	sp, #20
 8004ff2:	af00      	add	r7, sp, #0
 8004ff4:	6078      	str	r0, [r7, #4]
 8004ff6:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8004ffa:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 8004ffc:	f04f 41b0 	mov.w	r1, #1476395008	; 0x58000000
 8005000:	687b      	ldr	r3, [r7, #4]
 8005002:	4313      	orrs	r3, r2
 8005004:	64cb      	str	r3, [r1, #76]	; 0x4c
 8005006:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 800500a:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 800500c:	687b      	ldr	r3, [r7, #4]
 800500e:	4013      	ands	r3, r2
 8005010:	60fb      	str	r3, [r7, #12]
 8005012:	68fb      	ldr	r3, [r7, #12]
 8005014:	bf00      	nop
 8005016:	3714      	adds	r7, #20
 8005018:	46bd      	mov	sp, r7
 800501a:	bc80      	pop	{r7}
 800501c:	4770      	bx	lr
	...

08005020 <MX_GPIO_Init>:
 8005020:	b580      	push	{r7, lr}
 8005022:	b086      	sub	sp, #24
 8005024:	af00      	add	r7, sp, #0
 8005026:	1d3b      	adds	r3, r7, #4
 8005028:	2200      	movs	r2, #0
 800502a:	601a      	str	r2, [r3, #0]
 800502c:	605a      	str	r2, [r3, #4]
 800502e:	609a      	str	r2, [r3, #8]
 8005030:	60da      	str	r2, [r3, #12]
 8005032:	611a      	str	r2, [r3, #16]
 8005034:	2001      	movs	r0, #1
 8005036:	f7ff ffda 	bl	8004fee <LL_AHB2_GRP1_EnableClock>
 800503a:	2002      	movs	r0, #2
 800503c:	f7ff ffd7 	bl	8004fee <LL_AHB2_GRP1_EnableClock>
 8005040:	2004      	movs	r0, #4
 8005042:	f7ff ffd4 	bl	8004fee <LL_AHB2_GRP1_EnableClock>
 8005046:	2200      	movs	r2, #0
 8005048:	f44f 417e 	mov.w	r1, #65024	; 0xfe00
 800504c:	4826      	ldr	r0, [pc, #152]	; (80050e8 <MX_GPIO_Init+0xc8>)
 800504e:	f004 f83d 	bl	80090cc <HAL_GPIO_WritePin>
 8005052:	2200      	movs	r2, #0
 8005054:	2138      	movs	r1, #56	; 0x38
 8005056:	4825      	ldr	r0, [pc, #148]	; (80050ec <MX_GPIO_Init+0xcc>)
 8005058:	f004 f838 	bl	80090cc <HAL_GPIO_WritePin>
 800505c:	f44f 437e 	mov.w	r3, #65024	; 0xfe00
 8005060:	607b      	str	r3, [r7, #4]
 8005062:	2301      	movs	r3, #1
 8005064:	60bb      	str	r3, [r7, #8]
 8005066:	2300      	movs	r3, #0
 8005068:	60fb      	str	r3, [r7, #12]
 800506a:	2300      	movs	r3, #0
 800506c:	613b      	str	r3, [r7, #16]
 800506e:	1d3b      	adds	r3, r7, #4
 8005070:	4619      	mov	r1, r3
 8005072:	481d      	ldr	r0, [pc, #116]	; (80050e8 <MX_GPIO_Init+0xc8>)
 8005074:	f003 fdfc 	bl	8008c70 <HAL_GPIO_Init>
 8005078:	2338      	movs	r3, #56	; 0x38
 800507a:	607b      	str	r3, [r7, #4]
 800507c:	2301      	movs	r3, #1
 800507e:	60bb      	str	r3, [r7, #8]
 8005080:	2300      	movs	r3, #0
 8005082:	60fb      	str	r3, [r7, #12]
 8005084:	2300      	movs	r3, #0
 8005086:	613b      	str	r3, [r7, #16]
 8005088:	1d3b      	adds	r3, r7, #4
 800508a:	4619      	mov	r1, r3
 800508c:	4817      	ldr	r0, [pc, #92]	; (80050ec <MX_GPIO_Init+0xcc>)
 800508e:	f003 fdef 	bl	8008c70 <HAL_GPIO_Init>
 8005092:	2303      	movs	r3, #3
 8005094:	607b      	str	r3, [r7, #4]
 8005096:	4b16      	ldr	r3, [pc, #88]	; (80050f0 <MX_GPIO_Init+0xd0>)
 8005098:	60bb      	str	r3, [r7, #8]
 800509a:	2300      	movs	r3, #0
 800509c:	60fb      	str	r3, [r7, #12]
 800509e:	1d3b      	adds	r3, r7, #4
 80050a0:	4619      	mov	r1, r3
 80050a2:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 80050a6:	f003 fde3 	bl	8008c70 <HAL_GPIO_Init>
 80050aa:	2340      	movs	r3, #64	; 0x40
 80050ac:	607b      	str	r3, [r7, #4]
 80050ae:	4b10      	ldr	r3, [pc, #64]	; (80050f0 <MX_GPIO_Init+0xd0>)
 80050b0:	60bb      	str	r3, [r7, #8]
 80050b2:	2300      	movs	r3, #0
 80050b4:	60fb      	str	r3, [r7, #12]
 80050b6:	1d3b      	adds	r3, r7, #4
 80050b8:	4619      	mov	r1, r3
 80050ba:	480c      	ldr	r0, [pc, #48]	; (80050ec <MX_GPIO_Init+0xcc>)
 80050bc:	f003 fdd8 	bl	8008c70 <HAL_GPIO_Init>
 80050c0:	2200      	movs	r2, #0
 80050c2:	2100      	movs	r1, #0
 80050c4:	2006      	movs	r0, #6
 80050c6:	f003 f94a 	bl	800835e <HAL_NVIC_SetPriority>
 80050ca:	2006      	movs	r0, #6
 80050cc:	f003 f961 	bl	8008392 <HAL_NVIC_EnableIRQ>
 80050d0:	2200      	movs	r2, #0
 80050d2:	2100      	movs	r1, #0
 80050d4:	2007      	movs	r0, #7
 80050d6:	f003 f942 	bl	800835e <HAL_NVIC_SetPriority>
 80050da:	2007      	movs	r0, #7
 80050dc:	f003 f959 	bl	8008392 <HAL_NVIC_EnableIRQ>
 80050e0:	bf00      	nop
 80050e2:	3718      	adds	r7, #24
 80050e4:	46bd      	mov	sp, r7
 80050e6:	bd80      	pop	{r7, pc}
 80050e8:	48000400 	.word	0x48000400
 80050ec:	48000800 	.word	0x48000800
 80050f0:	10110000 	.word	0x10110000

080050f4 <LL_AHB2_GRP1_EnableClock>:
 80050f4:	b480      	push	{r7}
 80050f6:	b085      	sub	sp, #20
 80050f8:	af00      	add	r7, sp, #0
 80050fa:	6078      	str	r0, [r7, #4]
 80050fc:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8005100:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 8005102:	f04f 41b0 	mov.w	r1, #1476395008	; 0x58000000
 8005106:	687b      	ldr	r3, [r7, #4]
 8005108:	4313      	orrs	r3, r2
 800510a:	64cb      	str	r3, [r1, #76]	; 0x4c
 800510c:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8005110:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 8005112:	687b      	ldr	r3, [r7, #4]
 8005114:	4013      	ands	r3, r2
 8005116:	60fb      	str	r3, [r7, #12]
 8005118:	68fb      	ldr	r3, [r7, #12]
 800511a:	bf00      	nop
 800511c:	3714      	adds	r7, #20
 800511e:	46bd      	mov	sp, r7
 8005120:	bc80      	pop	{r7}
 8005122:	4770      	bx	lr

08005124 <LL_APB1_GRP1_EnableClock>:
 8005124:	b480      	push	{r7}
 8005126:	b085      	sub	sp, #20
 8005128:	af00      	add	r7, sp, #0
 800512a:	6078      	str	r0, [r7, #4]
 800512c:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8005130:	6d9a      	ldr	r2, [r3, #88]	; 0x58
 8005132:	f04f 41b0 	mov.w	r1, #1476395008	; 0x58000000
 8005136:	687b      	ldr	r3, [r7, #4]
 8005138:	4313      	orrs	r3, r2
 800513a:	658b      	str	r3, [r1, #88]	; 0x58
 800513c:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8005140:	6d9a      	ldr	r2, [r3, #88]	; 0x58
 8005142:	687b      	ldr	r3, [r7, #4]
 8005144:	4013      	ands	r3, r2
 8005146:	60fb      	str	r3, [r7, #12]
 8005148:	68fb      	ldr	r3, [r7, #12]
 800514a:	bf00      	nop
 800514c:	3714      	adds	r7, #20
 800514e:	46bd      	mov	sp, r7
 8005150:	bc80      	pop	{r7}
 8005152:	4770      	bx	lr

08005154 <MX_I2C1_Init>:
 8005154:	b580      	push	{r7, lr}
 8005156:	af00      	add	r7, sp, #0
 8005158:	4b1b      	ldr	r3, [pc, #108]	; (80051c8 <MX_I2C1_Init+0x74>)
 800515a:	4a1c      	ldr	r2, [pc, #112]	; (80051cc <MX_I2C1_Init+0x78>)
 800515c:	601a      	str	r2, [r3, #0]
 800515e:	4b1a      	ldr	r3, [pc, #104]	; (80051c8 <MX_I2C1_Init+0x74>)
 8005160:	4a1b      	ldr	r2, [pc, #108]	; (80051d0 <MX_I2C1_Init+0x7c>)
 8005162:	605a      	str	r2, [r3, #4]
 8005164:	4b18      	ldr	r3, [pc, #96]	; (80051c8 <MX_I2C1_Init+0x74>)
 8005166:	2200      	movs	r2, #0
 8005168:	609a      	str	r2, [r3, #8]
 800516a:	4b17      	ldr	r3, [pc, #92]	; (80051c8 <MX_I2C1_Init+0x74>)
 800516c:	2201      	movs	r2, #1
 800516e:	60da      	str	r2, [r3, #12]
 8005170:	4b15      	ldr	r3, [pc, #84]	; (80051c8 <MX_I2C1_Init+0x74>)
 8005172:	2200      	movs	r2, #0
 8005174:	611a      	str	r2, [r3, #16]
 8005176:	4b14      	ldr	r3, [pc, #80]	; (80051c8 <MX_I2C1_Init+0x74>)
 8005178:	2200      	movs	r2, #0
 800517a:	615a      	str	r2, [r3, #20]
 800517c:	4b12      	ldr	r3, [pc, #72]	; (80051c8 <MX_I2C1_Init+0x74>)
 800517e:	2200      	movs	r2, #0
 8005180:	619a      	str	r2, [r3, #24]
 8005182:	4b11      	ldr	r3, [pc, #68]	; (80051c8 <MX_I2C1_Init+0x74>)
 8005184:	2200      	movs	r2, #0
 8005186:	61da      	str	r2, [r3, #28]
 8005188:	4b0f      	ldr	r3, [pc, #60]	; (80051c8 <MX_I2C1_Init+0x74>)
 800518a:	2200      	movs	r2, #0
 800518c:	621a      	str	r2, [r3, #32]
 800518e:	480e      	ldr	r0, [pc, #56]	; (80051c8 <MX_I2C1_Init+0x74>)
 8005190:	f003 ffe4 	bl	800915c <HAL_I2C_Init>
 8005194:	4603      	mov	r3, r0
 8005196:	2b00      	cmp	r3, #0
 8005198:	d001      	beq.n	800519e <MX_I2C1_Init+0x4a>
 800519a:	f000 fcff 	bl	8005b9c <Error_Handler>
 800519e:	2100      	movs	r1, #0
 80051a0:	4809      	ldr	r0, [pc, #36]	; (80051c8 <MX_I2C1_Init+0x74>)
 80051a2:	f005 ff94 	bl	800b0ce <HAL_I2CEx_ConfigAnalogFilter>
 80051a6:	4603      	mov	r3, r0
 80051a8:	2b00      	cmp	r3, #0
 80051aa:	d001      	beq.n	80051b0 <MX_I2C1_Init+0x5c>
 80051ac:	f000 fcf6 	bl	8005b9c <Error_Handler>
 80051b0:	2100      	movs	r1, #0
 80051b2:	4805      	ldr	r0, [pc, #20]	; (80051c8 <MX_I2C1_Init+0x74>)
 80051b4:	f005 ffd5 	bl	800b162 <HAL_I2CEx_ConfigDigitalFilter>
 80051b8:	4603      	mov	r3, r0
 80051ba:	2b00      	cmp	r3, #0
 80051bc:	d001      	beq.n	80051c2 <MX_I2C1_Init+0x6e>
 80051be:	f000 fced 	bl	8005b9c <Error_Handler>
 80051c2:	bf00      	nop
 80051c4:	bd80      	pop	{r7, pc}
 80051c6:	bf00      	nop
 80051c8:	20000884 	.word	0x20000884
 80051cc:	40005400 	.word	0x40005400
 80051d0:	20303e5d 	.word	0x20303e5d

080051d4 <HAL_I2C_MspInit>:
 80051d4:	b580      	push	{r7, lr}
 80051d6:	b096      	sub	sp, #88	; 0x58
 80051d8:	af00      	add	r7, sp, #0
 80051da:	6078      	str	r0, [r7, #4]
 80051dc:	f107 0344 	add.w	r3, r7, #68	; 0x44
 80051e0:	2200      	movs	r2, #0
 80051e2:	601a      	str	r2, [r3, #0]
 80051e4:	605a      	str	r2, [r3, #4]
 80051e6:	609a      	str	r2, [r3, #8]
 80051e8:	60da      	str	r2, [r3, #12]
 80051ea:	611a      	str	r2, [r3, #16]
 80051ec:	f107 030c 	add.w	r3, r7, #12
 80051f0:	2238      	movs	r2, #56	; 0x38
 80051f2:	2100      	movs	r1, #0
 80051f4:	4618      	mov	r0, r3
 80051f6:	f01f fae5 	bl	80247c4 <memset>
 80051fa:	687b      	ldr	r3, [r7, #4]
 80051fc:	681b      	ldr	r3, [r3, #0]
 80051fe:	4a5c      	ldr	r2, [pc, #368]	; (8005370 <HAL_I2C_MspInit+0x19c>)
 8005200:	4293      	cmp	r3, r2
 8005202:	f040 80b0 	bne.w	8005366 <HAL_I2C_MspInit+0x192>
 8005206:	2340      	movs	r3, #64	; 0x40
 8005208:	60fb      	str	r3, [r7, #12]
 800520a:	f44f 3340 	mov.w	r3, #196608	; 0x30000
 800520e:	623b      	str	r3, [r7, #32]
 8005210:	f107 030c 	add.w	r3, r7, #12
 8005214:	4618      	mov	r0, r3
 8005216:	f007 fb13 	bl	800c840 <HAL_RCCEx_PeriphCLKConfig>
 800521a:	4603      	mov	r3, r0
 800521c:	2b00      	cmp	r3, #0
 800521e:	d001      	beq.n	8005224 <HAL_I2C_MspInit+0x50>
 8005220:	f000 fcbc 	bl	8005b9c <Error_Handler>
 8005224:	2001      	movs	r0, #1
 8005226:	f7ff ff65 	bl	80050f4 <LL_AHB2_GRP1_EnableClock>
 800522a:	2002      	movs	r0, #2
 800522c:	f7ff ff62 	bl	80050f4 <LL_AHB2_GRP1_EnableClock>
 8005230:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8005234:	647b      	str	r3, [r7, #68]	; 0x44
 8005236:	2312      	movs	r3, #18
 8005238:	64bb      	str	r3, [r7, #72]	; 0x48
 800523a:	2301      	movs	r3, #1
 800523c:	64fb      	str	r3, [r7, #76]	; 0x4c
 800523e:	2300      	movs	r3, #0
 8005240:	653b      	str	r3, [r7, #80]	; 0x50
 8005242:	2304      	movs	r3, #4
 8005244:	657b      	str	r3, [r7, #84]	; 0x54
 8005246:	f107 0344 	add.w	r3, r7, #68	; 0x44
 800524a:	4619      	mov	r1, r3
 800524c:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 8005250:	f003 fd0e 	bl	8008c70 <HAL_GPIO_Init>
 8005254:	f44f 7380 	mov.w	r3, #256	; 0x100
 8005258:	647b      	str	r3, [r7, #68]	; 0x44
 800525a:	2312      	movs	r3, #18
 800525c:	64bb      	str	r3, [r7, #72]	; 0x48
 800525e:	2301      	movs	r3, #1
 8005260:	64fb      	str	r3, [r7, #76]	; 0x4c
 8005262:	2300      	movs	r3, #0
 8005264:	653b      	str	r3, [r7, #80]	; 0x50
 8005266:	2304      	movs	r3, #4
 8005268:	657b      	str	r3, [r7, #84]	; 0x54
 800526a:	f107 0344 	add.w	r3, r7, #68	; 0x44
 800526e:	4619      	mov	r1, r3
 8005270:	4840      	ldr	r0, [pc, #256]	; (8005374 <HAL_I2C_MspInit+0x1a0>)
 8005272:	f003 fcfd 	bl	8008c70 <HAL_GPIO_Init>
 8005276:	f44f 1000 	mov.w	r0, #2097152	; 0x200000
 800527a:	f7ff ff53 	bl	8005124 <LL_APB1_GRP1_EnableClock>
 800527e:	4b3e      	ldr	r3, [pc, #248]	; (8005378 <HAL_I2C_MspInit+0x1a4>)
 8005280:	4a3e      	ldr	r2, [pc, #248]	; (800537c <HAL_I2C_MspInit+0x1a8>)
 8005282:	601a      	str	r2, [r3, #0]
 8005284:	4b3c      	ldr	r3, [pc, #240]	; (8005378 <HAL_I2C_MspInit+0x1a4>)
 8005286:	220b      	movs	r2, #11
 8005288:	605a      	str	r2, [r3, #4]
 800528a:	4b3b      	ldr	r3, [pc, #236]	; (8005378 <HAL_I2C_MspInit+0x1a4>)
 800528c:	2200      	movs	r2, #0
 800528e:	609a      	str	r2, [r3, #8]
 8005290:	4b39      	ldr	r3, [pc, #228]	; (8005378 <HAL_I2C_MspInit+0x1a4>)
 8005292:	2200      	movs	r2, #0
 8005294:	60da      	str	r2, [r3, #12]
 8005296:	4b38      	ldr	r3, [pc, #224]	; (8005378 <HAL_I2C_MspInit+0x1a4>)
 8005298:	2280      	movs	r2, #128	; 0x80
 800529a:	611a      	str	r2, [r3, #16]
 800529c:	4b36      	ldr	r3, [pc, #216]	; (8005378 <HAL_I2C_MspInit+0x1a4>)
 800529e:	2200      	movs	r2, #0
 80052a0:	615a      	str	r2, [r3, #20]
 80052a2:	4b35      	ldr	r3, [pc, #212]	; (8005378 <HAL_I2C_MspInit+0x1a4>)
 80052a4:	2200      	movs	r2, #0
 80052a6:	619a      	str	r2, [r3, #24]
 80052a8:	4b33      	ldr	r3, [pc, #204]	; (8005378 <HAL_I2C_MspInit+0x1a4>)
 80052aa:	2200      	movs	r2, #0
 80052ac:	61da      	str	r2, [r3, #28]
 80052ae:	4b32      	ldr	r3, [pc, #200]	; (8005378 <HAL_I2C_MspInit+0x1a4>)
 80052b0:	2200      	movs	r2, #0
 80052b2:	621a      	str	r2, [r3, #32]
 80052b4:	4830      	ldr	r0, [pc, #192]	; (8005378 <HAL_I2C_MspInit+0x1a4>)
 80052b6:	f003 f889 	bl	80083cc <HAL_DMA_Init>
 80052ba:	4603      	mov	r3, r0
 80052bc:	2b00      	cmp	r3, #0
 80052be:	d001      	beq.n	80052c4 <HAL_I2C_MspInit+0xf0>
 80052c0:	f000 fc6c 	bl	8005b9c <Error_Handler>
 80052c4:	2110      	movs	r1, #16
 80052c6:	482c      	ldr	r0, [pc, #176]	; (8005378 <HAL_I2C_MspInit+0x1a4>)
 80052c8:	f003 fbcd 	bl	8008a66 <HAL_DMA_ConfigChannelAttributes>
 80052cc:	4603      	mov	r3, r0
 80052ce:	2b00      	cmp	r3, #0
 80052d0:	d001      	beq.n	80052d6 <HAL_I2C_MspInit+0x102>
 80052d2:	f000 fc63 	bl	8005b9c <Error_Handler>
 80052d6:	687b      	ldr	r3, [r7, #4]
 80052d8:	4a27      	ldr	r2, [pc, #156]	; (8005378 <HAL_I2C_MspInit+0x1a4>)
 80052da:	63da      	str	r2, [r3, #60]	; 0x3c
 80052dc:	4a26      	ldr	r2, [pc, #152]	; (8005378 <HAL_I2C_MspInit+0x1a4>)
 80052de:	687b      	ldr	r3, [r7, #4]
 80052e0:	6293      	str	r3, [r2, #40]	; 0x28
 80052e2:	4b27      	ldr	r3, [pc, #156]	; (8005380 <HAL_I2C_MspInit+0x1ac>)
 80052e4:	4a27      	ldr	r2, [pc, #156]	; (8005384 <HAL_I2C_MspInit+0x1b0>)
 80052e6:	601a      	str	r2, [r3, #0]
 80052e8:	4b25      	ldr	r3, [pc, #148]	; (8005380 <HAL_I2C_MspInit+0x1ac>)
 80052ea:	220c      	movs	r2, #12
 80052ec:	605a      	str	r2, [r3, #4]
 80052ee:	4b24      	ldr	r3, [pc, #144]	; (8005380 <HAL_I2C_MspInit+0x1ac>)
 80052f0:	2210      	movs	r2, #16
 80052f2:	609a      	str	r2, [r3, #8]
 80052f4:	4b22      	ldr	r3, [pc, #136]	; (8005380 <HAL_I2C_MspInit+0x1ac>)
 80052f6:	2200      	movs	r2, #0
 80052f8:	60da      	str	r2, [r3, #12]
 80052fa:	4b21      	ldr	r3, [pc, #132]	; (8005380 <HAL_I2C_MspInit+0x1ac>)
 80052fc:	2280      	movs	r2, #128	; 0x80
 80052fe:	611a      	str	r2, [r3, #16]
 8005300:	4b1f      	ldr	r3, [pc, #124]	; (8005380 <HAL_I2C_MspInit+0x1ac>)
 8005302:	2200      	movs	r2, #0
 8005304:	615a      	str	r2, [r3, #20]
 8005306:	4b1e      	ldr	r3, [pc, #120]	; (8005380 <HAL_I2C_MspInit+0x1ac>)
 8005308:	2200      	movs	r2, #0
 800530a:	619a      	str	r2, [r3, #24]
 800530c:	4b1c      	ldr	r3, [pc, #112]	; (8005380 <HAL_I2C_MspInit+0x1ac>)
 800530e:	2200      	movs	r2, #0
 8005310:	61da      	str	r2, [r3, #28]
 8005312:	4b1b      	ldr	r3, [pc, #108]	; (8005380 <HAL_I2C_MspInit+0x1ac>)
 8005314:	2200      	movs	r2, #0
 8005316:	621a      	str	r2, [r3, #32]
 8005318:	4819      	ldr	r0, [pc, #100]	; (8005380 <HAL_I2C_MspInit+0x1ac>)
 800531a:	f003 f857 	bl	80083cc <HAL_DMA_Init>
 800531e:	4603      	mov	r3, r0
 8005320:	2b00      	cmp	r3, #0
 8005322:	d001      	beq.n	8005328 <HAL_I2C_MspInit+0x154>
 8005324:	f000 fc3a 	bl	8005b9c <Error_Handler>
 8005328:	2110      	movs	r1, #16
 800532a:	4815      	ldr	r0, [pc, #84]	; (8005380 <HAL_I2C_MspInit+0x1ac>)
 800532c:	f003 fb9b 	bl	8008a66 <HAL_DMA_ConfigChannelAttributes>
 8005330:	4603      	mov	r3, r0
 8005332:	2b00      	cmp	r3, #0
 8005334:	d001      	beq.n	800533a <HAL_I2C_MspInit+0x166>
 8005336:	f000 fc31 	bl	8005b9c <Error_Handler>
 800533a:	687b      	ldr	r3, [r7, #4]
 800533c:	4a10      	ldr	r2, [pc, #64]	; (8005380 <HAL_I2C_MspInit+0x1ac>)
 800533e:	639a      	str	r2, [r3, #56]	; 0x38
 8005340:	4a0f      	ldr	r2, [pc, #60]	; (8005380 <HAL_I2C_MspInit+0x1ac>)
 8005342:	687b      	ldr	r3, [r7, #4]
 8005344:	6293      	str	r3, [r2, #40]	; 0x28
 8005346:	2200      	movs	r2, #0
 8005348:	2100      	movs	r1, #0
 800534a:	201e      	movs	r0, #30
 800534c:	f003 f807 	bl	800835e <HAL_NVIC_SetPriority>
 8005350:	201e      	movs	r0, #30
 8005352:	f003 f81e 	bl	8008392 <HAL_NVIC_EnableIRQ>
 8005356:	2200      	movs	r2, #0
 8005358:	2100      	movs	r1, #0
 800535a:	201f      	movs	r0, #31
 800535c:	f002 ffff 	bl	800835e <HAL_NVIC_SetPriority>
 8005360:	201f      	movs	r0, #31
 8005362:	f003 f816 	bl	8008392 <HAL_NVIC_EnableIRQ>
 8005366:	bf00      	nop
 8005368:	3758      	adds	r7, #88	; 0x58
 800536a:	46bd      	mov	sp, r7
 800536c:	bd80      	pop	{r7, pc}
 800536e:	bf00      	nop
 8005370:	40005400 	.word	0x40005400
 8005374:	48000400 	.word	0x48000400
 8005378:	20001e00 	.word	0x20001e00
 800537c:	40020008 	.word	0x40020008
 8005380:	20001da0 	.word	0x20001da0
 8005384:	4002001c 	.word	0x4002001c

08005388 <LL_RCC_LSE_SetDriveCapability>:
  *         @arg @ref LL_RCC_LSEDRIVE_MEDIUMHIGH
  *         @arg @ref LL_RCC_LSEDRIVE_HIGH
  * @retval None
  */
__STATIC_INLINE void LL_RCC_LSE_SetDriveCapability(uint32_t LSEDrive)
{
 8005388:	b480      	push	{r7}
 800538a:	b083      	sub	sp, #12
 800538c:	af00      	add	r7, sp, #0
 800538e:	6078      	str	r0, [r7, #4]
  MODIFY_REG(RCC->BDCR, RCC_BDCR_LSEDRV, LSEDrive);
 8005390:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8005394:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8005398:	f023 0218 	bic.w	r2, r3, #24
 800539c:	f04f 41b0 	mov.w	r1, #1476395008	; 0x58000000
 80053a0:	687b      	ldr	r3, [r7, #4]
 80053a2:	4313      	orrs	r3, r2
 80053a4:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
}
 80053a8:	bf00      	nop
 80053aa:	370c      	adds	r7, #12
 80053ac:	46bd      	mov	sp, r7
 80053ae:	bc80      	pop	{r7}
 80053b0:	4770      	bx	lr

080053b2 <_ZSt5atan2ff>:
  using ::atan2;

#ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
  inline _GLIBCXX_CONSTEXPR float
  atan2(float __y, float __x)
  { return __builtin_atan2f(__y, __x); }
 80053b2:	b580      	push	{r7, lr}
 80053b4:	b082      	sub	sp, #8
 80053b6:	af00      	add	r7, sp, #0
 80053b8:	6078      	str	r0, [r7, #4]
 80053ba:	6039      	str	r1, [r7, #0]
 80053bc:	6839      	ldr	r1, [r7, #0]
 80053be:	6878      	ldr	r0, [r7, #4]
 80053c0:	f01c fca0 	bl	8021d04 <atan2f>
 80053c4:	4603      	mov	r3, r0
 80053c6:	4618      	mov	r0, r3
 80053c8:	3708      	adds	r7, #8
 80053ca:	46bd      	mov	sp, r7
 80053cc:	bd80      	pop	{r7, pc}

080053ce <_ZSt3cosf>:
  using ::cos;

#ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
  inline _GLIBCXX_CONSTEXPR float
  cos(float __x)
  { return __builtin_cosf(__x); }
 80053ce:	b580      	push	{r7, lr}
 80053d0:	b082      	sub	sp, #8
 80053d2:	af00      	add	r7, sp, #0
 80053d4:	6078      	str	r0, [r7, #4]
 80053d6:	6878      	ldr	r0, [r7, #4]
 80053d8:	f01c fbb4 	bl	8021b44 <cosf>
 80053dc:	4603      	mov	r3, r0
 80053de:	4618      	mov	r0, r3
 80053e0:	3708      	adds	r7, #8
 80053e2:	46bd      	mov	sp, r7
 80053e4:	bd80      	pop	{r7, pc}

080053e6 <_ZSt4sqrtf>:
  using ::sqrt;

#ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
  inline _GLIBCXX_CONSTEXPR float
  sqrt(float __x)
  { return __builtin_sqrtf(__x); }
 80053e6:	b580      	push	{r7, lr}
 80053e8:	b082      	sub	sp, #8
 80053ea:	af00      	add	r7, sp, #0
 80053ec:	6078      	str	r0, [r7, #4]
 80053ee:	6878      	ldr	r0, [r7, #4]
 80053f0:	f01c fc8a 	bl	8021d08 <sqrtf>
 80053f4:	4603      	mov	r3, r0
 80053f6:	4618      	mov	r0, r3
 80053f8:	3708      	adds	r7, #8
 80053fa:	46bd      	mov	sp, r7
 80053fc:	bd80      	pop	{r7, pc}
	...

08005400 <_Z8setupGPSv>:


//void setupGPS();
//void loopGPS();

void setupGPS() {
 8005400:	b580      	push	{r7, lr}
 8005402:	b082      	sub	sp, #8
 8005404:	af02      	add	r7, sp, #8

	HAL_I2C_Master_Transmit( &hi2c1, ( 0x15 << 1 ), i2cDataXX, 1, 10 );
 8005406:	230a      	movs	r3, #10
 8005408:	9300      	str	r3, [sp, #0]
 800540a:	2301      	movs	r3, #1
 800540c:	4a10      	ldr	r2, [pc, #64]	; (8005450 <_Z8setupGPSv+0x50>)
 800540e:	212a      	movs	r1, #42	; 0x2a
 8005410:	4810      	ldr	r0, [pc, #64]	; (8005454 <_Z8setupGPSv+0x54>)
 8005412:	f003 ff33 	bl	800927c <HAL_I2C_Master_Transmit>
  while (myUblox.begin(0x42) == false) //Connect to the Ublox module using Wire port
 8005416:	2142      	movs	r1, #66	; 0x42
 8005418:	480f      	ldr	r0, [pc, #60]	; (8005458 <_Z8setupGPSv+0x58>)
 800541a:	f7fd f928 	bl	800266e <_ZN13SFE_UBLOX_GPS5beginEh>
 800541e:	4603      	mov	r3, r0
 8005420:	2b00      	cmp	r3, #0
 8005422:	bf0c      	ite	eq
 8005424:	2301      	moveq	r3, #1
 8005426:	2300      	movne	r3, #0
 8005428:	b2db      	uxtb	r3, r3
 800542a:	2b00      	cmp	r3, #0
 800542c:	d003      	beq.n	8005436 <_Z8setupGPSv+0x36>
  {
    HAL_Delay(1);
 800542e:	2001      	movs	r0, #1
 8005430:	f000 ffd7 	bl	80063e2 <HAL_Delay>
  while (myUblox.begin(0x42) == false) //Connect to the Ublox module using Wire port
 8005434:	e7ef      	b.n	8005416 <_Z8setupGPSv+0x16>
//	APP_LOG(TS_ON, VLEVEL_M, "Enters SETUP GPS in function \r\n");
		//HAL_I2C_Master_Transmit( &hi2c2, ( 0x16 << 1 ), i2cDataXX, 1, 10 );
  }

  myUblox.setI2COutput(COM_TYPE_UBX); //Set the I2C port to output UBX only (turn off NMEA noise)
 8005436:	22fa      	movs	r2, #250	; 0xfa
 8005438:	2101      	movs	r1, #1
 800543a:	4807      	ldr	r0, [pc, #28]	; (8005458 <_Z8setupGPSv+0x58>)
 800543c:	f7fe ffeb 	bl	8004416 <_ZN13SFE_UBLOX_GPS12setI2COutputEht>

  myUblox.saveConfiguration(); //Save the current settings to flash and BBR
 8005440:	f240 414c 	movw	r1, #1100	; 0x44c
 8005444:	4804      	ldr	r0, [pc, #16]	; (8005458 <_Z8setupGPSv+0x58>)
 8005446:	f7fe ff2e 	bl	80042a6 <_ZN13SFE_UBLOX_GPS17saveConfigurationEt>

}
 800544a:	bf00      	nop
 800544c:	46bd      	mov	sp, r7
 800544e:	bd80      	pop	{r7, pc}
 8005450:	20000600 	.word	0x20000600
 8005454:	20000884 	.word	0x20000884
 8005458:	20000264 	.word	0x20000264

0800545c <_Z7loopGPSPlS_>:

void loopGPS(long *lati, long *longi ) {
 800545c:	b580      	push	{r7, lr}
 800545e:	b08a      	sub	sp, #40	; 0x28
 8005460:	af00      	add	r7, sp, #0
 8005462:	6078      	str	r0, [r7, #4]
 8005464:	6039      	str	r1, [r7, #0]
  bool timeValid = false, dateValid = false;
 8005466:	2300      	movs	r3, #0
 8005468:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 800546c:	2300      	movs	r3, #0
 800546e:	f887 3026 	strb.w	r3, [r7, #38]	; 0x26
  //Query module only every second. Doing it more often will just cause I2C traffic.
  //The module only responds when a new position is available
  if ( HAL_GetTick() - lastTime > 1000 ) {
 8005472:	f000 ffaf 	bl	80063d4 <HAL_GetTick>
 8005476:	4603      	mov	r3, r0
 8005478:	4a36      	ldr	r2, [pc, #216]	; (8005554 <_Z7loopGPSPlS_+0xf8>)
 800547a:	6812      	ldr	r2, [r2, #0]
 800547c:	1a9b      	subs	r3, r3, r2
 800547e:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8005482:	bf8c      	ite	hi
 8005484:	2301      	movhi	r3, #1
 8005486:	2300      	movls	r3, #0
 8005488:	b2db      	uxtb	r3, r3
 800548a:	2b00      	cmp	r3, #0
 800548c:	d05e      	beq.n	800554c <_Z7loopGPSPlS_+0xf0>
    lastTime = HAL_GetTick(); //Update the timer
 800548e:	f000 ffa1 	bl	80063d4 <HAL_GetTick>
 8005492:	4603      	mov	r3, r0
 8005494:	461a      	mov	r2, r3
 8005496:	4b2f      	ldr	r3, [pc, #188]	; (8005554 <_Z7loopGPSPlS_+0xf8>)
 8005498:	601a      	str	r2, [r3, #0]
    long latitude = myUblox.getLatitude();
 800549a:	f240 414c 	movw	r1, #1100	; 0x44c
 800549e:	482e      	ldr	r0, [pc, #184]	; (8005558 <_Z7loopGPSPlS_+0xfc>)
 80054a0:	f7ff f9e2 	bl	8004868 <_ZN13SFE_UBLOX_GPS11getLatitudeEt>
 80054a4:	4603      	mov	r3, r0
 80054a6:	623b      	str	r3, [r7, #32]
	long longitude = myUblox.getLongitude();
 80054a8:	f240 414c 	movw	r1, #1100	; 0x44c
 80054ac:	482a      	ldr	r0, [pc, #168]	; (8005558 <_Z7loopGPSPlS_+0xfc>)
 80054ae:	f7ff fa03 	bl	80048b8 <_ZN13SFE_UBLOX_GPS12getLongitudeEt>
 80054b2:	4603      	mov	r3, r0
 80054b4:	61fb      	str	r3, [r7, #28]
    long altitude = myUblox.getAltitude();
 80054b6:	f240 414c 	movw	r1, #1100	; 0x44c
 80054ba:	4827      	ldr	r0, [pc, #156]	; (8005558 <_Z7loopGPSPlS_+0xfc>)
 80054bc:	f7ff fa24 	bl	8004908 <_ZN13SFE_UBLOX_GPS11getAltitudeEt>
 80054c0:	4603      	mov	r3, r0
 80054c2:	61bb      	str	r3, [r7, #24]
    long accuracy = myUblox.getPositionAccuracy();
 80054c4:	f240 414c 	movw	r1, #1100	; 0x44c
 80054c8:	4823      	ldr	r0, [pc, #140]	; (8005558 <_Z7loopGPSPlS_+0xfc>)
 80054ca:	f7ff f983 	bl	80047d4 <_ZN13SFE_UBLOX_GPS19getPositionAccuracyEt>
 80054ce:	4603      	mov	r3, r0
 80054d0:	617b      	str	r3, [r7, #20]

    *longi = longitude;
 80054d2:	683b      	ldr	r3, [r7, #0]
 80054d4:	69fa      	ldr	r2, [r7, #28]
 80054d6:	601a      	str	r2, [r3, #0]
    *lati = latitude;
 80054d8:	687b      	ldr	r3, [r7, #4]
 80054da:	6a3a      	ldr	r2, [r7, #32]
 80054dc:	601a      	str	r2, [r3, #0]

		//printf( "latitude: %ld longitude: %ld \n", latitude, longitude );

//    	APP_LOG(TS_ON, VLEVEL_M, "Lati: %d, Long: %d \r\n", latitude, longitude);

    byte SIV = myUblox.getSIV();
 80054de:	f240 414c 	movw	r1, #1100	; 0x44c
 80054e2:	481d      	ldr	r0, [pc, #116]	; (8005558 <_Z7loopGPSPlS_+0xfc>)
 80054e4:	f7ff fa38 	bl	8004958 <_ZN13SFE_UBLOX_GPS6getSIVEt>
 80054e8:	4603      	mov	r3, r0
 80054ea:	74fb      	strb	r3, [r7, #19]

    uint16_t Year = myUblox.getYear();
 80054ec:	f240 414c 	movw	r1, #1100	; 0x44c
 80054f0:	4819      	ldr	r0, [pc, #100]	; (8005558 <_Z7loopGPSPlS_+0xfc>)
 80054f2:	f7ff f842 	bl	800457a <_ZN13SFE_UBLOX_GPS7getYearEt>
 80054f6:	4603      	mov	r3, r0
 80054f8:	823b      	strh	r3, [r7, #16]
    uint16_t Month = myUblox.getMonth();
 80054fa:	f240 414c 	movw	r1, #1100	; 0x44c
 80054fe:	4816      	ldr	r0, [pc, #88]	; (8005558 <_Z7loopGPSPlS_+0xfc>)
 8005500:	f7ff f85c 	bl	80045bc <_ZN13SFE_UBLOX_GPS8getMonthEt>
 8005504:	4603      	mov	r3, r0
 8005506:	81fb      	strh	r3, [r7, #14]
    uint16_t Day = myUblox.getDay();
 8005508:	f240 414c 	movw	r1, #1100	; 0x44c
 800550c:	4812      	ldr	r0, [pc, #72]	; (8005558 <_Z7loopGPSPlS_+0xfc>)
 800550e:	f7ff f876 	bl	80045fe <_ZN13SFE_UBLOX_GPS6getDayEt>
 8005512:	4603      	mov	r3, r0
 8005514:	81bb      	strh	r3, [r7, #12]
    Hour = myUblox.getHour();
 8005516:	f240 414c 	movw	r1, #1100	; 0x44c
 800551a:	480f      	ldr	r0, [pc, #60]	; (8005558 <_Z7loopGPSPlS_+0xfc>)
 800551c:	f7ff f890 	bl	8004640 <_ZN13SFE_UBLOX_GPS7getHourEt>
 8005520:	4603      	mov	r3, r0
 8005522:	b29a      	uxth	r2, r3
 8005524:	4b0d      	ldr	r3, [pc, #52]	; (800555c <_Z7loopGPSPlS_+0x100>)
 8005526:	801a      	strh	r2, [r3, #0]
    Minute = myUblox.getMinute();
 8005528:	f240 414c 	movw	r1, #1100	; 0x44c
 800552c:	480a      	ldr	r0, [pc, #40]	; (8005558 <_Z7loopGPSPlS_+0xfc>)
 800552e:	f7ff f8a8 	bl	8004682 <_ZN13SFE_UBLOX_GPS9getMinuteEt>
 8005532:	4603      	mov	r3, r0
 8005534:	b29a      	uxth	r2, r3
 8005536:	4b0a      	ldr	r3, [pc, #40]	; (8005560 <_Z7loopGPSPlS_+0x104>)
 8005538:	801a      	strh	r2, [r3, #0]
    Second = myUblox.getSecond();
 800553a:	f240 414c 	movw	r1, #1100	; 0x44c
 800553e:	4806      	ldr	r0, [pc, #24]	; (8005558 <_Z7loopGPSPlS_+0xfc>)
 8005540:	f7ff f8c0 	bl	80046c4 <_ZN13SFE_UBLOX_GPS9getSecondEt>
 8005544:	4603      	mov	r3, r0
 8005546:	b29a      	uxth	r2, r3
 8005548:	4b06      	ldr	r3, [pc, #24]	; (8005564 <_Z7loopGPSPlS_+0x108>)
 800554a:	801a      	strh	r2, [r3, #0]
//		printf( "Hour: %2d Minute: %2d Second: %2d\n", Hour, Minute, Second );

//  timeValid = myGPS.getTimeValid();
//  dateValid = myGPS.getDateValid();
  }
}
 800554c:	bf00      	nop
 800554e:	3728      	adds	r7, #40	; 0x28
 8005550:	46bd      	mov	sp, r7
 8005552:	bd80      	pop	{r7, pc}
 8005554:	20000604 	.word	0x20000604
 8005558:	20000264 	.word	0x20000264
 800555c:	20000608 	.word	0x20000608
 8005560:	2000060a 	.word	0x2000060a
 8005564:	2000060c 	.word	0x2000060c

08005568 <_Z8degtoRadl>:

#define PI 3.14159265358979323846
#define EARTH_R 6371000.0				//approximation of earth radius in m
#define MIN_DIST 30						//minimum distance between measurement point

float degtoRad(long degrees){
 8005568:	b580      	push	{r7, lr}
 800556a:	b084      	sub	sp, #16
 800556c:	af00      	add	r7, sp, #0
 800556e:	6078      	str	r0, [r7, #4]

    float deg = (float)degrees/10000000;
 8005570:	6878      	ldr	r0, [r7, #4]
 8005572:	f7fb fbfb 	bl	8000d6c <__aeabi_i2f>
 8005576:	4603      	mov	r3, r0
 8005578:	4913      	ldr	r1, [pc, #76]	; (80055c8 <_Z8degtoRadl+0x60>)
 800557a:	4618      	mov	r0, r3
 800557c:	f7fb fcfe 	bl	8000f7c <__aeabi_fdiv>
 8005580:	4603      	mov	r3, r0
 8005582:	60fb      	str	r3, [r7, #12]
	float radians = (deg / 180.0)* PI ;
 8005584:	68f8      	ldr	r0, [r7, #12]
 8005586:	f7fa ffb7 	bl	80004f8 <__aeabi_f2d>
 800558a:	f04f 0200 	mov.w	r2, #0
 800558e:	4b0f      	ldr	r3, [pc, #60]	; (80055cc <_Z8degtoRadl+0x64>)
 8005590:	f7fb f934 	bl	80007fc <__aeabi_ddiv>
 8005594:	4602      	mov	r2, r0
 8005596:	460b      	mov	r3, r1
 8005598:	4610      	mov	r0, r2
 800559a:	4619      	mov	r1, r3
 800559c:	a308      	add	r3, pc, #32	; (adr r3, 80055c0 <_Z8degtoRadl+0x58>)
 800559e:	e9d3 2300 	ldrd	r2, r3, [r3]
 80055a2:	f7fb f801 	bl	80005a8 <__aeabi_dmul>
 80055a6:	4602      	mov	r2, r0
 80055a8:	460b      	mov	r3, r1
 80055aa:	4610      	mov	r0, r2
 80055ac:	4619      	mov	r1, r3
 80055ae:	f7fb fad3 	bl	8000b58 <__aeabi_d2f>
 80055b2:	4603      	mov	r3, r0
 80055b4:	60bb      	str	r3, [r7, #8]
	return radians;
 80055b6:	68bb      	ldr	r3, [r7, #8]
}
 80055b8:	4618      	mov	r0, r3
 80055ba:	3710      	adds	r7, #16
 80055bc:	46bd      	mov	sp, r7
 80055be:	bd80      	pop	{r7, pc}
 80055c0:	54442d18 	.word	0x54442d18
 80055c4:	400921fb 	.word	0x400921fb
 80055c8:	4b189680 	.word	0x4b189680
 80055cc:	40668000 	.word	0x40668000

080055d0 <_Z17haversineDistancePFflEllll>:


float haversineDistance(float (*f)(long), long longitude1, long latitude1, long longitude2, long latitude2 ){
 80055d0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80055d4:	b08b      	sub	sp, #44	; 0x2c
 80055d6:	af00      	add	r7, sp, #0
 80055d8:	60f8      	str	r0, [r7, #12]
 80055da:	60b9      	str	r1, [r7, #8]
 80055dc:	607a      	str	r2, [r7, #4]
 80055de:	603b      	str	r3, [r7, #0]

	float delta_lat = degtoRad(latitude2 - latitude1);
 80055e0:	6cba      	ldr	r2, [r7, #72]	; 0x48
 80055e2:	687b      	ldr	r3, [r7, #4]
 80055e4:	1ad3      	subs	r3, r2, r3
 80055e6:	4618      	mov	r0, r3
 80055e8:	f7ff ffbe 	bl	8005568 <_Z8degtoRadl>
 80055ec:	6278      	str	r0, [r7, #36]	; 0x24
	float delta_long = degtoRad(longitude2 - longitude1);
 80055ee:	683a      	ldr	r2, [r7, #0]
 80055f0:	68bb      	ldr	r3, [r7, #8]
 80055f2:	1ad3      	subs	r3, r2, r3
 80055f4:	4618      	mov	r0, r3
 80055f6:	f7ff ffb7 	bl	8005568 <_Z8degtoRadl>
 80055fa:	6238      	str	r0, [r7, #32]

	float a =  pow(   sin(  delta_lat/2.0 ), 2 ) + cos(degtoRad(latitude1))* cos(degtoRad(latitude2))*pow(sin(delta_long/2.0), 2);
 80055fc:	6a78      	ldr	r0, [r7, #36]	; 0x24
 80055fe:	f7fa ff7b 	bl	80004f8 <__aeabi_f2d>
 8005602:	f04f 0200 	mov.w	r2, #0
 8005606:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800560a:	f7fb f8f7 	bl	80007fc <__aeabi_ddiv>
 800560e:	4602      	mov	r2, r0
 8005610:	460b      	mov	r3, r1
 8005612:	4610      	mov	r0, r2
 8005614:	4619      	mov	r1, r3
 8005616:	f01c fa4f 	bl	8021ab8 <sin>
 800561a:	2202      	movs	r2, #2
 800561c:	f000 fac3 	bl	8005ba6 <_ZSt3powIdiEN9__gnu_cxx11__promote_2IT_T0_NS0_9__promoteIS2_XsrSt12__is_integerIS2_E7__valueEE6__typeENS4_IS3_XsrS5_IS3_E7__valueEE6__typeEE6__typeES2_S3_>
 8005620:	4604      	mov	r4, r0
 8005622:	460d      	mov	r5, r1
 8005624:	6878      	ldr	r0, [r7, #4]
 8005626:	f7ff ff9f 	bl	8005568 <_Z8degtoRadl>
 800562a:	4603      	mov	r3, r0
 800562c:	4618      	mov	r0, r3
 800562e:	f7ff fece 	bl	80053ce <_ZSt3cosf>
 8005632:	4606      	mov	r6, r0
 8005634:	6cb8      	ldr	r0, [r7, #72]	; 0x48
 8005636:	f7ff ff97 	bl	8005568 <_Z8degtoRadl>
 800563a:	4603      	mov	r3, r0
 800563c:	4618      	mov	r0, r3
 800563e:	f7ff fec6 	bl	80053ce <_ZSt3cosf>
 8005642:	4603      	mov	r3, r0
 8005644:	4619      	mov	r1, r3
 8005646:	4630      	mov	r0, r6
 8005648:	f7fb fbe4 	bl	8000e14 <__aeabi_fmul>
 800564c:	4603      	mov	r3, r0
 800564e:	4618      	mov	r0, r3
 8005650:	f7fa ff52 	bl	80004f8 <__aeabi_f2d>
 8005654:	4680      	mov	r8, r0
 8005656:	4689      	mov	r9, r1
 8005658:	6a38      	ldr	r0, [r7, #32]
 800565a:	f7fa ff4d 	bl	80004f8 <__aeabi_f2d>
 800565e:	f04f 0200 	mov.w	r2, #0
 8005662:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8005666:	f7fb f8c9 	bl	80007fc <__aeabi_ddiv>
 800566a:	4602      	mov	r2, r0
 800566c:	460b      	mov	r3, r1
 800566e:	4610      	mov	r0, r2
 8005670:	4619      	mov	r1, r3
 8005672:	f01c fa21 	bl	8021ab8 <sin>
 8005676:	2202      	movs	r2, #2
 8005678:	f000 fa95 	bl	8005ba6 <_ZSt3powIdiEN9__gnu_cxx11__promote_2IT_T0_NS0_9__promoteIS2_XsrSt12__is_integerIS2_E7__valueEE6__typeENS4_IS3_XsrS5_IS3_E7__valueEE6__typeEE6__typeES2_S3_>
 800567c:	4602      	mov	r2, r0
 800567e:	460b      	mov	r3, r1
 8005680:	4640      	mov	r0, r8
 8005682:	4649      	mov	r1, r9
 8005684:	f7fa ff90 	bl	80005a8 <__aeabi_dmul>
 8005688:	4602      	mov	r2, r0
 800568a:	460b      	mov	r3, r1
 800568c:	4620      	mov	r0, r4
 800568e:	4629      	mov	r1, r5
 8005690:	f7fa fdd4 	bl	800023c <__adddf3>
 8005694:	4602      	mov	r2, r0
 8005696:	460b      	mov	r3, r1
 8005698:	4610      	mov	r0, r2
 800569a:	4619      	mov	r1, r3
 800569c:	f7fb fa5c 	bl	8000b58 <__aeabi_d2f>
 80056a0:	4603      	mov	r3, r0
 80056a2:	61fb      	str	r3, [r7, #28]
    float c = 2*atan2(sqrt(a), sqrt(1-a));
 80056a4:	69f8      	ldr	r0, [r7, #28]
 80056a6:	f7ff fe9e 	bl	80053e6 <_ZSt4sqrtf>
 80056aa:	4604      	mov	r4, r0
 80056ac:	69f9      	ldr	r1, [r7, #28]
 80056ae:	f04f 507e 	mov.w	r0, #1065353216	; 0x3f800000
 80056b2:	f7fb faa5 	bl	8000c00 <__aeabi_fsub>
 80056b6:	4603      	mov	r3, r0
 80056b8:	4618      	mov	r0, r3
 80056ba:	f7ff fe94 	bl	80053e6 <_ZSt4sqrtf>
 80056be:	4603      	mov	r3, r0
 80056c0:	4619      	mov	r1, r3
 80056c2:	4620      	mov	r0, r4
 80056c4:	f7ff fe75 	bl	80053b2 <_ZSt5atan2ff>
 80056c8:	4603      	mov	r3, r0
 80056ca:	4619      	mov	r1, r3
 80056cc:	4618      	mov	r0, r3
 80056ce:	f7fb fa99 	bl	8000c04 <__addsf3>
 80056d2:	4603      	mov	r3, r0
 80056d4:	61bb      	str	r3, [r7, #24]

    float distance = EARTH_R * c;
 80056d6:	4906      	ldr	r1, [pc, #24]	; (80056f0 <_Z17haversineDistancePFflEllll+0x120>)
 80056d8:	69b8      	ldr	r0, [r7, #24]
 80056da:	f7fb fb9b 	bl	8000e14 <__aeabi_fmul>
 80056de:	4603      	mov	r3, r0
 80056e0:	617b      	str	r3, [r7, #20]
	return distance;
 80056e2:	697b      	ldr	r3, [r7, #20]
}
 80056e4:	4618      	mov	r0, r3
 80056e6:	372c      	adds	r7, #44	; 0x2c
 80056e8:	46bd      	mov	sp, r7
 80056ea:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80056ee:	bf00      	nop
 80056f0:	4ac26d70 	.word	0x4ac26d70

080056f4 <_Z8sendDatallaa>:

static uint8_t AppDataBufferMeasure[242];

static LmHandlerAppData_t measureMessage = {0, 0, AppDataBufferMeasure};

void sendData(long latitude, long longitude, int8_t rssi, int8_t snr){
 80056f4:	b580      	push	{r7, lr}
 80056f6:	b086      	sub	sp, #24
 80056f8:	af00      	add	r7, sp, #0
 80056fa:	60f8      	str	r0, [r7, #12]
 80056fc:	60b9      	str	r1, [r7, #8]
 80056fe:	4611      	mov	r1, r2
 8005700:	461a      	mov	r2, r3
 8005702:	460b      	mov	r3, r1
 8005704:	71fb      	strb	r3, [r7, #7]
 8005706:	4613      	mov	r3, r2
 8005708:	71bb      	strb	r3, [r7, #6]

	uint32_t i = 0;
 800570a:	2300      	movs	r3, #0
 800570c:	617b      	str	r3, [r7, #20]

	LmHandlerErrorStatus_t sendErrorsMsg;
	LmHandlerMsgTypes_t feedbackConfirmData = LORAMAC_HANDLER_UNCONFIRMED_MSG;
 800570e:	2300      	movs	r3, #0
 8005710:	74fb      	strb	r3, [r7, #19]

	measureMessage.Port = 1;
 8005712:	4b37      	ldr	r3, [pc, #220]	; (80057f0 <_Z8sendDatallaa+0xfc>)
 8005714:	2201      	movs	r2, #1
 8005716:	701a      	strb	r2, [r3, #0]



	measureMessage.Buffer[i++] = (uint8_t) ((latitude >> 24) & 0xFF);
 8005718:	68fb      	ldr	r3, [r7, #12]
 800571a:	0e18      	lsrs	r0, r3, #24
 800571c:	4b34      	ldr	r3, [pc, #208]	; (80057f0 <_Z8sendDatallaa+0xfc>)
 800571e:	685a      	ldr	r2, [r3, #4]
 8005720:	697b      	ldr	r3, [r7, #20]
 8005722:	1c59      	adds	r1, r3, #1
 8005724:	6179      	str	r1, [r7, #20]
 8005726:	4413      	add	r3, r2
 8005728:	b2c2      	uxtb	r2, r0
 800572a:	701a      	strb	r2, [r3, #0]
	measureMessage.Buffer[i++] = (uint8_t) ((latitude >> 16) & 0xFF);
 800572c:	68fb      	ldr	r3, [r7, #12]
 800572e:	1418      	asrs	r0, r3, #16
 8005730:	4b2f      	ldr	r3, [pc, #188]	; (80057f0 <_Z8sendDatallaa+0xfc>)
 8005732:	685a      	ldr	r2, [r3, #4]
 8005734:	697b      	ldr	r3, [r7, #20]
 8005736:	1c59      	adds	r1, r3, #1
 8005738:	6179      	str	r1, [r7, #20]
 800573a:	4413      	add	r3, r2
 800573c:	b2c2      	uxtb	r2, r0
 800573e:	701a      	strb	r2, [r3, #0]
	measureMessage.Buffer[i++] = (uint8_t) ((latitude >> 8) & 0xFF);
 8005740:	68fb      	ldr	r3, [r7, #12]
 8005742:	1218      	asrs	r0, r3, #8
 8005744:	4b2a      	ldr	r3, [pc, #168]	; (80057f0 <_Z8sendDatallaa+0xfc>)
 8005746:	685a      	ldr	r2, [r3, #4]
 8005748:	697b      	ldr	r3, [r7, #20]
 800574a:	1c59      	adds	r1, r3, #1
 800574c:	6179      	str	r1, [r7, #20]
 800574e:	4413      	add	r3, r2
 8005750:	b2c2      	uxtb	r2, r0
 8005752:	701a      	strb	r2, [r3, #0]
	measureMessage.Buffer[i++] = (uint8_t) (latitude & 0xFF);
 8005754:	4b26      	ldr	r3, [pc, #152]	; (80057f0 <_Z8sendDatallaa+0xfc>)
 8005756:	685a      	ldr	r2, [r3, #4]
 8005758:	697b      	ldr	r3, [r7, #20]
 800575a:	1c59      	adds	r1, r3, #1
 800575c:	6179      	str	r1, [r7, #20]
 800575e:	4413      	add	r3, r2
 8005760:	68fa      	ldr	r2, [r7, #12]
 8005762:	b2d2      	uxtb	r2, r2
 8005764:	701a      	strb	r2, [r3, #0]

	measureMessage.Buffer[i++] = (uint8_t) ((longitude >> 24) & 0xFF);
 8005766:	68bb      	ldr	r3, [r7, #8]
 8005768:	0e18      	lsrs	r0, r3, #24
 800576a:	4b21      	ldr	r3, [pc, #132]	; (80057f0 <_Z8sendDatallaa+0xfc>)
 800576c:	685a      	ldr	r2, [r3, #4]
 800576e:	697b      	ldr	r3, [r7, #20]
 8005770:	1c59      	adds	r1, r3, #1
 8005772:	6179      	str	r1, [r7, #20]
 8005774:	4413      	add	r3, r2
 8005776:	b2c2      	uxtb	r2, r0
 8005778:	701a      	strb	r2, [r3, #0]
	measureMessage.Buffer[i++] = (uint8_t) ((longitude >> 16) & 0xFF);
 800577a:	68bb      	ldr	r3, [r7, #8]
 800577c:	1418      	asrs	r0, r3, #16
 800577e:	4b1c      	ldr	r3, [pc, #112]	; (80057f0 <_Z8sendDatallaa+0xfc>)
 8005780:	685a      	ldr	r2, [r3, #4]
 8005782:	697b      	ldr	r3, [r7, #20]
 8005784:	1c59      	adds	r1, r3, #1
 8005786:	6179      	str	r1, [r7, #20]
 8005788:	4413      	add	r3, r2
 800578a:	b2c2      	uxtb	r2, r0
 800578c:	701a      	strb	r2, [r3, #0]
	measureMessage.Buffer[i++] = (uint8_t) ((longitude >> 8) & 0xFF);
 800578e:	68bb      	ldr	r3, [r7, #8]
 8005790:	1218      	asrs	r0, r3, #8
 8005792:	4b17      	ldr	r3, [pc, #92]	; (80057f0 <_Z8sendDatallaa+0xfc>)
 8005794:	685a      	ldr	r2, [r3, #4]
 8005796:	697b      	ldr	r3, [r7, #20]
 8005798:	1c59      	adds	r1, r3, #1
 800579a:	6179      	str	r1, [r7, #20]
 800579c:	4413      	add	r3, r2
 800579e:	b2c2      	uxtb	r2, r0
 80057a0:	701a      	strb	r2, [r3, #0]
	measureMessage.Buffer[i++] = (uint8_t) (longitude & 0xFF);
 80057a2:	4b13      	ldr	r3, [pc, #76]	; (80057f0 <_Z8sendDatallaa+0xfc>)
 80057a4:	685a      	ldr	r2, [r3, #4]
 80057a6:	697b      	ldr	r3, [r7, #20]
 80057a8:	1c59      	adds	r1, r3, #1
 80057aa:	6179      	str	r1, [r7, #20]
 80057ac:	4413      	add	r3, r2
 80057ae:	68ba      	ldr	r2, [r7, #8]
 80057b0:	b2d2      	uxtb	r2, r2
 80057b2:	701a      	strb	r2, [r3, #0]

	measureMessage.Buffer[i++] = rssi;
 80057b4:	4b0e      	ldr	r3, [pc, #56]	; (80057f0 <_Z8sendDatallaa+0xfc>)
 80057b6:	685a      	ldr	r2, [r3, #4]
 80057b8:	697b      	ldr	r3, [r7, #20]
 80057ba:	1c59      	adds	r1, r3, #1
 80057bc:	6179      	str	r1, [r7, #20]
 80057be:	4413      	add	r3, r2
 80057c0:	79fa      	ldrb	r2, [r7, #7]
 80057c2:	701a      	strb	r2, [r3, #0]
	measureMessage.Buffer[i++] = snr;
 80057c4:	4b0a      	ldr	r3, [pc, #40]	; (80057f0 <_Z8sendDatallaa+0xfc>)
 80057c6:	685a      	ldr	r2, [r3, #4]
 80057c8:	697b      	ldr	r3, [r7, #20]
 80057ca:	1c59      	adds	r1, r3, #1
 80057cc:	6179      	str	r1, [r7, #20]
 80057ce:	4413      	add	r3, r2
 80057d0:	79ba      	ldrb	r2, [r7, #6]
 80057d2:	701a      	strb	r2, [r3, #0]

	measureMessage.BufferSize = i;
 80057d4:	697b      	ldr	r3, [r7, #20]
 80057d6:	b2da      	uxtb	r2, r3
 80057d8:	4b05      	ldr	r3, [pc, #20]	; (80057f0 <_Z8sendDatallaa+0xfc>)
 80057da:	705a      	strb	r2, [r3, #1]

	LmHandlerSend(&measureMessage, feedbackConfirmData, 0, false);
 80057dc:	7cf9      	ldrb	r1, [r7, #19]
 80057de:	2300      	movs	r3, #0
 80057e0:	2200      	movs	r2, #0
 80057e2:	4803      	ldr	r0, [pc, #12]	; (80057f0 <_Z8sendDatallaa+0xfc>)
 80057e4:	f00c fc0e 	bl	8012004 <LmHandlerSend>

//	measureMessage.BufferSize = 0;

}
 80057e8:	bf00      	nop
 80057ea:	3718      	adds	r7, #24
 80057ec:	46bd      	mov	sp, r7
 80057ee:	bd80      	pop	{r7, pc}
 80057f0:	20000034 	.word	0x20000034

080057f4 <_Z9gaugeRssiv>:

void gaugeRssi(void){
 80057f4:	b580      	push	{r7, lr}
 80057f6:	b084      	sub	sp, #16
 80057f8:	af00      	add	r7, sp, #0
	static uint8_t AppDataBuffer[242];

	LmHandlerErrorStatus_t sendErrorsFeedback;
	LmHandlerAppData_t triggerRssi = {0, 0, AppDataBuffer};
 80057fa:	2300      	movs	r3, #0
 80057fc:	713b      	strb	r3, [r7, #4]
 80057fe:	2300      	movs	r3, #0
 8005800:	717b      	strb	r3, [r7, #5]
 8005802:	4b08      	ldr	r3, [pc, #32]	; (8005824 <_Z9gaugeRssiv+0x30>)
 8005804:	60bb      	str	r3, [r7, #8]
	LmHandlerMsgTypes_t feedbackConfirm = LORAMAC_HANDLER_CONFIRMED_MSG;
 8005806:	2301      	movs	r3, #1
 8005808:	73fb      	strb	r3, [r7, #15]

//	triggerRssi.Buffer[0] = (uint8_t) 0x02;
	triggerRssi.BufferSize = 0;
 800580a:	2300      	movs	r3, #0
 800580c:	717b      	strb	r3, [r7, #5]

	LmHandlerSend(&triggerRssi, feedbackConfirm, 0, false);
 800580e:	7bf9      	ldrb	r1, [r7, #15]
 8005810:	1d38      	adds	r0, r7, #4
 8005812:	2300      	movs	r3, #0
 8005814:	2200      	movs	r2, #0
 8005816:	f00c fbf5 	bl	8012004 <LmHandlerSend>
}
 800581a:	bf00      	nop
 800581c:	3710      	adds	r7, #16
 800581e:	46bd      	mov	sp, r7
 8005820:	bd80      	pop	{r7, pc}
 8005822:	bf00      	nop
 8005824:	20000704 	.word	0x20000704

08005828 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8005828:	b580      	push	{r7, lr}
 800582a:	b08e      	sub	sp, #56	; 0x38
 800582c:	af02      	add	r7, sp, #8
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 800582e:	f001 fc97 	bl	8007160 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8005832:	f000 f953 	bl	8005adc <_Z18SystemClock_Configv>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8005836:	f7ff fbf3 	bl	8005020 <MX_GPIO_Init>
  MX_LoRaWAN_Init();					// mainly runs LoRaWAN_Init() function defined in lora_app.c
 800583a:	f00a f93b 	bl	800fab4 <MX_LoRaWAN_Init>
  MX_I2C1_Init();
 800583e:	f7ff fc89 	bl	8005154 <MX_I2C1_Init>
  MX_TIM1_Init();
 8005842:	f000 ffa1 	bl	8006788 <MX_TIM1_Init>
//APP_LOG(TS_ON, VLEVEL_M, "test: %d\r\n", test);
//}


#if doGPS == 1
	APP_LOG(TS_ON, VLEVEL_M, "Enters SETUP GPS \r\n");
 8005846:	4b90      	ldr	r3, [pc, #576]	; (8005a88 <main+0x260>)
 8005848:	2201      	movs	r2, #1
 800584a:	2100      	movs	r1, #0
 800584c:	2002      	movs	r0, #2
 800584e:	f01b fe3d 	bl	80214cc <UTIL_ADV_TRACE_COND_FSend>
	setupGPS();
 8005852:	f7ff fdd5 	bl	8005400 <_Z8setupGPSv>
	APP_LOG(TS_ON, VLEVEL_M, "EXIT SETUP GPS \r\n");
 8005856:	4b8d      	ldr	r3, [pc, #564]	; (8005a8c <main+0x264>)
 8005858:	2201      	movs	r2, #1
 800585a:	2100      	movs	r1, #0
 800585c:	2002      	movs	r0, #2
 800585e:	f01b fe35 	bl	80214cc <UTIL_ADV_TRACE_COND_FSend>

	long latitude, longitude;

//	long arrlatitude[10];
//	long arrlong[10];
	float distance = 0;
 8005862:	f04f 0300 	mov.w	r3, #0
 8005866:	62fb      	str	r3, [r7, #44]	; 0x2c
//	int arrInd = 0;
	bool firstrun = true;
 8005868:	2301      	movs	r3, #1
 800586a:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
  /* USER CODE BEGIN WHILE */
  while (1) {
	    //HAL_GPIO_TogglePin(GPIOB, LED1_Pin);
	    //myMX_GPIO_Init();
		//printf("... vor ... MX_LoRaWAN_Process() ... counter: %d \n", counter++);
	if ( (counter++ > 1000) && (mLockout == true) ) {
 800586e:	4b88      	ldr	r3, [pc, #544]	; (8005a90 <main+0x268>)
 8005870:	681b      	ldr	r3, [r3, #0]
 8005872:	1c5a      	adds	r2, r3, #1
 8005874:	4986      	ldr	r1, [pc, #536]	; (8005a90 <main+0x268>)
 8005876:	600a      	str	r2, [r1, #0]
 8005878:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 800587c:	dd05      	ble.n	800588a <main+0x62>
 800587e:	4b85      	ldr	r3, [pc, #532]	; (8005a94 <main+0x26c>)
 8005880:	781b      	ldrb	r3, [r3, #0]
 8005882:	2b01      	cmp	r3, #1
 8005884:	d101      	bne.n	800588a <main+0x62>
 8005886:	2301      	movs	r3, #1
 8005888:	e000      	b.n	800588c <main+0x64>
 800588a:	2300      	movs	r3, #0
 800588c:	2b00      	cmp	r3, #0
 800588e:	d013      	beq.n	80058b8 <main+0x90>
	  HAL_GPIO_TogglePin(GPIOB, LED1_Pin);
 8005890:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 8005894:	4880      	ldr	r0, [pc, #512]	; (8005a98 <main+0x270>)
 8005896:	f003 fc30 	bl	80090fa <HAL_GPIO_TogglePin>
	  APP_LOG(TS_ON, VLEVEL_M, "counter: %d\r\n", counter);
 800589a:	4b7d      	ldr	r3, [pc, #500]	; (8005a90 <main+0x268>)
 800589c:	681b      	ldr	r3, [r3, #0]
 800589e:	9300      	str	r3, [sp, #0]
 80058a0:	4b7e      	ldr	r3, [pc, #504]	; (8005a9c <main+0x274>)
 80058a2:	2201      	movs	r2, #1
 80058a4:	2100      	movs	r1, #0
 80058a6:	2002      	movs	r0, #2
 80058a8:	f01b fe10 	bl	80214cc <UTIL_ADV_TRACE_COND_FSend>
	  counter = 0;
 80058ac:	4b78      	ldr	r3, [pc, #480]	; (8005a90 <main+0x268>)
 80058ae:	2200      	movs	r2, #0
 80058b0:	601a      	str	r2, [r3, #0]
	  mLockout = false;
 80058b2:	4b78      	ldr	r3, [pc, #480]	; (8005a94 <main+0x26c>)
 80058b4:	2200      	movs	r2, #0
 80058b6:	701a      	strb	r2, [r3, #0]
//	  rxReceived = false;
	}
	if(mLockout ) {
 80058b8:	4b76      	ldr	r3, [pc, #472]	; (8005a94 <main+0x26c>)
 80058ba:	781b      	ldrb	r3, [r3, #0]
 80058bc:	2b00      	cmp	r3, #0
 80058be:	d007      	beq.n	80058d0 <main+0xa8>
		MX_LoRaWAN_Process();							// mainly runs UTIL_SEQ_Run() defined in stm32_seq.c
 80058c0:	f00a f906 	bl	800fad0 <MX_LoRaWAN_Process>
    	APP_LOG(TS_ON, VLEVEL_M, "Main LoRaprocess \r\n");
 80058c4:	4b76      	ldr	r3, [pc, #472]	; (8005aa0 <main+0x278>)
 80058c6:	2201      	movs	r2, #1
 80058c8:	2100      	movs	r1, #0
 80058ca:	2002      	movs	r0, #2
 80058cc:	f01b fdfe 	bl	80214cc <UTIL_ADV_TRACE_COND_FSend>
	}


    if(!isJoined && !mLockout){
 80058d0:	4b74      	ldr	r3, [pc, #464]	; (8005aa4 <main+0x27c>)
 80058d2:	781b      	ldrb	r3, [r3, #0]
 80058d4:	f083 0301 	eor.w	r3, r3, #1
 80058d8:	b2db      	uxtb	r3, r3
 80058da:	2b00      	cmp	r3, #0
 80058dc:	d010      	beq.n	8005900 <main+0xd8>
 80058de:	4b6d      	ldr	r3, [pc, #436]	; (8005a94 <main+0x26c>)
 80058e0:	781b      	ldrb	r3, [r3, #0]
 80058e2:	f083 0301 	eor.w	r3, r3, #1
 80058e6:	b2db      	uxtb	r3, r3
 80058e8:	2b00      	cmp	r3, #0
 80058ea:	d009      	beq.n	8005900 <main+0xd8>
    	mLockout = true;
 80058ec:	4b69      	ldr	r3, [pc, #420]	; (8005a94 <main+0x26c>)
 80058ee:	2201      	movs	r2, #1
 80058f0:	701a      	strb	r2, [r3, #0]
    	UTIL_SEQ_SetTask((1 << CFG_SEQ_Task_LoRaSendOnTxTimerOrButtonEvent), CFG_SEQ_Prio_0);
 80058f2:	2100      	movs	r1, #0
 80058f4:	2002      	movs	r0, #2
 80058f6:	f01b facd 	bl	8020e94 <UTIL_SEQ_SetTask>
    	HAL_Delay(50);
 80058fa:	2032      	movs	r0, #50	; 0x32
 80058fc:	f000 fd71 	bl	80063e2 <HAL_Delay>
    }
    if((counter%10)==0) {
 8005900:	4b63      	ldr	r3, [pc, #396]	; (8005a90 <main+0x268>)
 8005902:	6819      	ldr	r1, [r3, #0]
 8005904:	4b68      	ldr	r3, [pc, #416]	; (8005aa8 <main+0x280>)
 8005906:	fb83 2301 	smull	r2, r3, r3, r1
 800590a:	109a      	asrs	r2, r3, #2
 800590c:	17cb      	asrs	r3, r1, #31
 800590e:	1ad2      	subs	r2, r2, r3
 8005910:	4613      	mov	r3, r2
 8005912:	009b      	lsls	r3, r3, #2
 8005914:	4413      	add	r3, r2
 8005916:	005b      	lsls	r3, r3, #1
 8005918:	1aca      	subs	r2, r1, r3
 800591a:	2a00      	cmp	r2, #0
 800591c:	d105      	bne.n	800592a <main+0x102>
    	APP_LOG(TS_ON, VLEVEL_M, "While running \r\n");
 800591e:	4b63      	ldr	r3, [pc, #396]	; (8005aac <main+0x284>)
 8005920:	2201      	movs	r2, #1
 8005922:	2100      	movs	r1, #0
 8005924:	2002      	movs	r0, #2
 8005926:	f01b fdd1 	bl	80214cc <UTIL_ADV_TRACE_COND_FSend>
    }
    if(!mLockout && isJoined){
 800592a:	4b5a      	ldr	r3, [pc, #360]	; (8005a94 <main+0x26c>)
 800592c:	781b      	ldrb	r3, [r3, #0]
 800592e:	f083 0301 	eor.w	r3, r3, #1
 8005932:	b2db      	uxtb	r3, r3
 8005934:	2b00      	cmp	r3, #0
 8005936:	d09a      	beq.n	800586e <main+0x46>
 8005938:	4b5a      	ldr	r3, [pc, #360]	; (8005aa4 <main+0x27c>)
 800593a:	781b      	ldrb	r3, [r3, #0]
 800593c:	2b00      	cmp	r3, #0
 800593e:	d096      	beq.n	800586e <main+0x46>
    	APP_LOG(TS_ON, VLEVEL_M, "Main if \r\n");
 8005940:	4b5b      	ldr	r3, [pc, #364]	; (8005ab0 <main+0x288>)
 8005942:	2201      	movs	r2, #1
 8005944:	2100      	movs	r1, #0
 8005946:	2002      	movs	r0, #2
 8005948:	f01b fdc0 	bl	80214cc <UTIL_ADV_TRACE_COND_FSend>
		loopGPS(&latitude, &longitude);
 800594c:	f107 0220 	add.w	r2, r7, #32
 8005950:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8005954:	4611      	mov	r1, r2
 8005956:	4618      	mov	r0, r3
 8005958:	f7ff fd80 	bl	800545c <_Z7loopGPSPlS_>
	//		}else if(arrInd>0){
	//			distance = haversineDistance(degtoRad, arrlong[arrInd-1], arrlatitude[arrInd-1], arrlong[arrInd], arrlatitude[arrInd]);
	//			APP_LOG(TS_ON, VLEVEL_M, "Distance: if 2 %d \r\n", distance);
	//		}

		if(firstrun){
 800595c:	f897 302b 	ldrb.w	r3, [r7, #43]	; 0x2b
 8005960:	2b00      	cmp	r3, #0
 8005962:	d00b      	beq.n	800597c <main+0x154>
			// insert save of current rssi and maybe initiate send of message

//			gaugeRssi();

			SUBGRF_GetPacketStatus(&pktStatus);
 8005964:	1d3b      	adds	r3, r7, #4
 8005966:	4618      	mov	r0, r3
 8005968:	f01a fb64 	bl	8020034 <SUBGRF_GetPacketStatus>
			arrLastPoint[0] = latitude;
 800596c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800596e:	61bb      	str	r3, [r7, #24]
			arrLastPoint[1] = longitude;
 8005970:	6a3b      	ldr	r3, [r7, #32]
 8005972:	61fb      	str	r3, [r7, #28]

//			sendData(arrLastPoint[0], arrLastPoint[1]);

			firstrun = false;
 8005974:	2300      	movs	r3, #0
 8005976:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 800597a:	e011      	b.n	80059a0 <main+0x178>
		} else if ( !firstrun ) {
 800597c:	f897 302b 	ldrb.w	r3, [r7, #43]	; 0x2b
 8005980:	f083 0301 	eor.w	r3, r3, #1
 8005984:	b2db      	uxtb	r3, r3
 8005986:	2b00      	cmp	r3, #0
 8005988:	d00a      	beq.n	80059a0 <main+0x178>
			distance = haversineDistance(degtoRad, arrLastPoint[1], arrLastPoint[0], longitude, latitude);
 800598a:	69f9      	ldr	r1, [r7, #28]
 800598c:	69ba      	ldr	r2, [r7, #24]
 800598e:	6a38      	ldr	r0, [r7, #32]
 8005990:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8005992:	9300      	str	r3, [sp, #0]
 8005994:	4603      	mov	r3, r0
 8005996:	4847      	ldr	r0, [pc, #284]	; (8005ab4 <main+0x28c>)
 8005998:	f7ff fe1a 	bl	80055d0 <_Z17haversineDistancePFflEllll>
 800599c:	4603      	mov	r3, r0
 800599e:	62fb      	str	r3, [r7, #44]	; 0x2c
		}

		if((distance>MIN_DIST) || (counterExtra++ > 40)){
 80059a0:	4945      	ldr	r1, [pc, #276]	; (8005ab8 <main+0x290>)
 80059a2:	6af8      	ldr	r0, [r7, #44]	; 0x2c
 80059a4:	f7fb fbf2 	bl	800118c <__aeabi_fcmpgt>
 80059a8:	4603      	mov	r3, r0
 80059aa:	2b00      	cmp	r3, #0
 80059ac:	d106      	bne.n	80059bc <main+0x194>
 80059ae:	4b43      	ldr	r3, [pc, #268]	; (8005abc <main+0x294>)
 80059b0:	681b      	ldr	r3, [r3, #0]
 80059b2:	1c5a      	adds	r2, r3, #1
 80059b4:	4941      	ldr	r1, [pc, #260]	; (8005abc <main+0x294>)
 80059b6:	600a      	str	r2, [r1, #0]
 80059b8:	2b28      	cmp	r3, #40	; 0x28
 80059ba:	dd01      	ble.n	80059c0 <main+0x198>
 80059bc:	2301      	movs	r3, #1
 80059be:	e000      	b.n	80059c2 <main+0x19a>
 80059c0:	2300      	movs	r3, #0
 80059c2:	2b00      	cmp	r3, #0
 80059c4:	d038      	beq.n	8005a38 <main+0x210>
	    	APP_LOG(TS_ON, VLEVEL_M, "Gauge Rssi \r\n");
 80059c6:	4b3e      	ldr	r3, [pc, #248]	; (8005ac0 <main+0x298>)
 80059c8:	2201      	movs	r2, #1
 80059ca:	2100      	movs	r1, #0
 80059cc:	2002      	movs	r0, #2
 80059ce:	f01b fd7d 	bl	80214cc <UTIL_ADV_TRACE_COND_FSend>
			gaugeRssi();
 80059d2:	f7ff ff0f 	bl	80057f4 <_Z9gaugeRssiv>
			while(!rxReceived){
 80059d6:	4b3b      	ldr	r3, [pc, #236]	; (8005ac4 <main+0x29c>)
 80059d8:	781b      	ldrb	r3, [r3, #0]
 80059da:	2b00      	cmp	r3, #0
 80059dc:	d11c      	bne.n	8005a18 <main+0x1f0>
//				gaugeRssi();
				MX_LoRaWAN_Process();
 80059de:	f00a f877 	bl	800fad0 <MX_LoRaWAN_Process>
		    	APP_LOG(TS_ON, VLEVEL_M, "Waiting for MAC rxDone \r\n");
 80059e2:	4b39      	ldr	r3, [pc, #228]	; (8005ac8 <main+0x2a0>)
 80059e4:	2201      	movs	r2, #1
 80059e6:	2100      	movs	r1, #0
 80059e8:	2002      	movs	r0, #2
 80059ea:	f01b fd6f 	bl	80214cc <UTIL_ADV_TRACE_COND_FSend>
		    	if(waitrxTimeout++ > 3000){
 80059ee:	4b37      	ldr	r3, [pc, #220]	; (8005acc <main+0x2a4>)
 80059f0:	681b      	ldr	r3, [r3, #0]
 80059f2:	1c5a      	adds	r2, r3, #1
 80059f4:	4935      	ldr	r1, [pc, #212]	; (8005acc <main+0x2a4>)
 80059f6:	600a      	str	r2, [r1, #0]
 80059f8:	f640 32b8 	movw	r2, #3000	; 0xbb8
 80059fc:	4293      	cmp	r3, r2
 80059fe:	bfcc      	ite	gt
 8005a00:	2301      	movgt	r3, #1
 8005a02:	2300      	movle	r3, #0
 8005a04:	b2db      	uxtb	r3, r3
 8005a06:	2b00      	cmp	r3, #0
 8005a08:	d0e5      	beq.n	80059d6 <main+0x1ae>
		    		rxReceived = true;
 8005a0a:	4b2e      	ldr	r3, [pc, #184]	; (8005ac4 <main+0x29c>)
 8005a0c:	2201      	movs	r2, #1
 8005a0e:	701a      	strb	r2, [r3, #0]
		    		waitrxTimeout = 0;
 8005a10:	4b2e      	ldr	r3, [pc, #184]	; (8005acc <main+0x2a4>)
 8005a12:	2200      	movs	r2, #0
 8005a14:	601a      	str	r2, [r3, #0]
			while(!rxReceived){
 8005a16:	e7de      	b.n	80059d6 <main+0x1ae>
		    	}

			}
			rxReceived = true;
 8005a18:	4b2a      	ldr	r3, [pc, #168]	; (8005ac4 <main+0x29c>)
 8005a1a:	2201      	movs	r2, #1
 8005a1c:	701a      	strb	r2, [r3, #0]
			SUBGRF_GetPacketStatus(&pktStatus);
 8005a1e:	1d3b      	adds	r3, r7, #4
 8005a20:	4618      	mov	r0, r3
 8005a22:	f01a fb07 	bl	8020034 <SUBGRF_GetPacketStatus>
			APP_LOG(TS_ON, VLEVEL_M, "Reset rxReceived \r\n");
 8005a26:	4b2a      	ldr	r3, [pc, #168]	; (8005ad0 <main+0x2a8>)
 8005a28:	2201      	movs	r2, #1
 8005a2a:	2100      	movs	r1, #0
 8005a2c:	2002      	movs	r0, #2
 8005a2e:	f01b fd4d 	bl	80214cc <UTIL_ADV_TRACE_COND_FSend>
			counterExtra = 0;
 8005a32:	4b22      	ldr	r3, [pc, #136]	; (8005abc <main+0x294>)
 8005a34:	2200      	movs	r2, #0
 8005a36:	601a      	str	r2, [r3, #0]
		}



		if(rxReceived){
 8005a38:	4b22      	ldr	r3, [pc, #136]	; (8005ac4 <main+0x29c>)
 8005a3a:	781b      	ldrb	r3, [r3, #0]
 8005a3c:	2b00      	cmp	r3, #0
 8005a3e:	f43f af16 	beq.w	800586e <main+0x46>
			APP_LOG(TS_ON, VLEVEL_M, "Send if \r\n");
 8005a42:	4b24      	ldr	r3, [pc, #144]	; (8005ad4 <main+0x2ac>)
 8005a44:	2201      	movs	r2, #1
 8005a46:	2100      	movs	r1, #0
 8005a48:	2002      	movs	r0, #2
 8005a4a:	f01b fd3f 	bl	80214cc <UTIL_ADV_TRACE_COND_FSend>

			APP_LOG(TS_ON, VLEVEL_M, "RSSI: %d, SNR: %d \r\n", pktStatus.Params.LoRa.RssiPkt, pktStatus.Params.LoRa.SnrPkt);
 8005a4e:	f997 3010 	ldrsb.w	r3, [r7, #16]
 8005a52:	f997 2011 	ldrsb.w	r2, [r7, #17]
 8005a56:	9201      	str	r2, [sp, #4]
 8005a58:	9300      	str	r3, [sp, #0]
 8005a5a:	4b1f      	ldr	r3, [pc, #124]	; (8005ad8 <main+0x2b0>)
 8005a5c:	2201      	movs	r2, #1
 8005a5e:	2100      	movs	r1, #0
 8005a60:	2002      	movs	r0, #2
 8005a62:	f01b fd33 	bl	80214cc <UTIL_ADV_TRACE_COND_FSend>
			arrLastPoint[0] = latitude;
 8005a66:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8005a68:	61bb      	str	r3, [r7, #24]
			arrLastPoint[1] = longitude;
 8005a6a:	6a3b      	ldr	r3, [r7, #32]
 8005a6c:	61fb      	str	r3, [r7, #28]
			mLockout = true;
 8005a6e:	4b09      	ldr	r3, [pc, #36]	; (8005a94 <main+0x26c>)
 8005a70:	2201      	movs	r2, #1
 8005a72:	701a      	strb	r2, [r3, #0]
//			rxReceived = false;
//			UTIL_SEQ_SetTask((1 << CFG_SEQ_Task_LoRaSendOnTxTimerOrButtonEvent), CFG_SEQ_Prio_0);
			sendData(arrLastPoint[0], arrLastPoint[1], pktStatus.Params.LoRa.RssiPkt, pktStatus.Params.LoRa.SnrPkt);
 8005a74:	69b8      	ldr	r0, [r7, #24]
 8005a76:	69f9      	ldr	r1, [r7, #28]
 8005a78:	f997 2010 	ldrsb.w	r2, [r7, #16]
 8005a7c:	f997 3011 	ldrsb.w	r3, [r7, #17]
 8005a80:	f7ff fe38 	bl	80056f4 <_Z8sendDatallaa>
	if ( (counter++ > 1000) && (mLockout == true) ) {
 8005a84:	e6f3      	b.n	800586e <main+0x46>
 8005a86:	bf00      	nop
 8005a88:	08025858 	.word	0x08025858
 8005a8c:	0802586c 	.word	0x0802586c
 8005a90:	200007f8 	.word	0x200007f8
 8005a94:	200008d0 	.word	0x200008d0
 8005a98:	48000400 	.word	0x48000400
 8005a9c:	08025880 	.word	0x08025880
 8005aa0:	08025890 	.word	0x08025890
 8005aa4:	200008d1 	.word	0x200008d1
 8005aa8:	66666667 	.word	0x66666667
 8005aac:	080258a4 	.word	0x080258a4
 8005ab0:	080258b8 	.word	0x080258b8
 8005ab4:	08005569 	.word	0x08005569
 8005ab8:	41f00000 	.word	0x41f00000
 8005abc:	200007fc 	.word	0x200007fc
 8005ac0:	080258c4 	.word	0x080258c4
 8005ac4:	200008d2 	.word	0x200008d2
 8005ac8:	080258d4 	.word	0x080258d4
 8005acc:	20000800 	.word	0x20000800
 8005ad0:	080258f0 	.word	0x080258f0
 8005ad4:	08025904 	.word	0x08025904
 8005ad8:	08025910 	.word	0x08025910

08005adc <_Z18SystemClock_Configv>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8005adc:	b580      	push	{r7, lr}
 8005ade:	b09a      	sub	sp, #104	; 0x68
 8005ae0:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8005ae2:	f107 0320 	add.w	r3, r7, #32
 8005ae6:	2248      	movs	r2, #72	; 0x48
 8005ae8:	2100      	movs	r1, #0
 8005aea:	4618      	mov	r0, r3
 8005aec:	f01e fe6a 	bl	80247c4 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8005af0:	1d3b      	adds	r3, r7, #4
 8005af2:	2200      	movs	r2, #0
 8005af4:	601a      	str	r2, [r3, #0]
 8005af6:	605a      	str	r2, [r3, #4]
 8005af8:	609a      	str	r2, [r3, #8]
 8005afa:	60da      	str	r2, [r3, #12]
 8005afc:	611a      	str	r2, [r3, #16]
 8005afe:	615a      	str	r2, [r3, #20]
 8005b00:	619a      	str	r2, [r3, #24]

  /** Configure LSE Drive Capability
  */
  __HAL_RCC_LSEDRIVE_CONFIG(RCC_LSEDRIVE_LOW);
 8005b02:	2000      	movs	r0, #0
 8005b04:	f7ff fc40 	bl	8005388 <LL_RCC_LSE_SetDriveCapability>
  /** Configure the main internal regulator output voltage
  */
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8005b08:	4b23      	ldr	r3, [pc, #140]	; (8005b98 <_Z18SystemClock_Configv+0xbc>)
 8005b0a:	681b      	ldr	r3, [r3, #0]
 8005b0c:	f423 63c0 	bic.w	r3, r3, #1536	; 0x600
 8005b10:	4a21      	ldr	r2, [pc, #132]	; (8005b98 <_Z18SystemClock_Configv+0xbc>)
 8005b12:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8005b16:	6013      	str	r3, [r2, #0]
 8005b18:	4b1f      	ldr	r3, [pc, #124]	; (8005b98 <_Z18SystemClock_Configv+0xbc>)
 8005b1a:	681b      	ldr	r3, [r3, #0]
 8005b1c:	f403 63c0 	and.w	r3, r3, #1536	; 0x600
 8005b20:	603b      	str	r3, [r7, #0]
 8005b22:	683b      	ldr	r3, [r7, #0]
  /** Initializes the CPU, AHB and APB busses clocks
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_LSE|RCC_OSCILLATORTYPE_MSI;
 8005b24:	2324      	movs	r3, #36	; 0x24
 8005b26:	623b      	str	r3, [r7, #32]
  RCC_OscInitStruct.LSEState = RCC_LSE_ON;
 8005b28:	2381      	movs	r3, #129	; 0x81
 8005b2a:	62fb      	str	r3, [r7, #44]	; 0x2c
  RCC_OscInitStruct.MSIState = RCC_MSI_ON;
 8005b2c:	2301      	movs	r3, #1
 8005b2e:	643b      	str	r3, [r7, #64]	; 0x40
  RCC_OscInitStruct.MSICalibrationValue = RCC_MSICALIBRATION_DEFAULT;
 8005b30:	2300      	movs	r3, #0
 8005b32:	647b      	str	r3, [r7, #68]	; 0x44
  RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_11;
 8005b34:	23b0      	movs	r3, #176	; 0xb0
 8005b36:	64bb      	str	r3, [r7, #72]	; 0x48
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 8005b38:	2300      	movs	r3, #0
 8005b3a:	64fb      	str	r3, [r7, #76]	; 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8005b3c:	f107 0320 	add.w	r3, r7, #32
 8005b40:	4618      	mov	r0, r3
 8005b42:	f005 fefb 	bl	800b93c <HAL_RCC_OscConfig>
 8005b46:	4603      	mov	r3, r0
 8005b48:	2b00      	cmp	r3, #0
 8005b4a:	bf14      	ite	ne
 8005b4c:	2301      	movne	r3, #1
 8005b4e:	2300      	moveq	r3, #0
 8005b50:	b2db      	uxtb	r3, r3
 8005b52:	2b00      	cmp	r3, #0
 8005b54:	d001      	beq.n	8005b5a <_Z18SystemClock_Configv+0x7e>
  {
    Error_Handler();
 8005b56:	f000 f821 	bl	8005b9c <Error_Handler>
  }
  /** Configure the SYSCLKSource, HCLK, PCLK1 and PCLK2 clocks dividers
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK3|RCC_CLOCKTYPE_HCLK
 8005b5a:	234f      	movs	r3, #79	; 0x4f
 8005b5c:	607b      	str	r3, [r7, #4]
                              |RCC_CLOCKTYPE_SYSCLK|RCC_CLOCKTYPE_PCLK1
                              |RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_MSI;
 8005b5e:	2300      	movs	r3, #0
 8005b60:	60bb      	str	r3, [r7, #8]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8005b62:	2300      	movs	r3, #0
 8005b64:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 8005b66:	2300      	movs	r3, #0
 8005b68:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 8005b6a:	2300      	movs	r3, #0
 8005b6c:	617b      	str	r3, [r7, #20]
  RCC_ClkInitStruct.AHBCLK3Divider = RCC_SYSCLK_DIV1;
 8005b6e:	2300      	movs	r3, #0
 8005b70:	61fb      	str	r3, [r7, #28]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 8005b72:	1d3b      	adds	r3, r7, #4
 8005b74:	2102      	movs	r1, #2
 8005b76:	4618      	mov	r0, r3
 8005b78:	f006 fa7a 	bl	800c070 <HAL_RCC_ClockConfig>
 8005b7c:	4603      	mov	r3, r0
 8005b7e:	2b00      	cmp	r3, #0
 8005b80:	bf14      	ite	ne
 8005b82:	2301      	movne	r3, #1
 8005b84:	2300      	moveq	r3, #0
 8005b86:	b2db      	uxtb	r3, r3
 8005b88:	2b00      	cmp	r3, #0
 8005b8a:	d001      	beq.n	8005b90 <_Z18SystemClock_Configv+0xb4>
  {
    Error_Handler();
 8005b8c:	f000 f806 	bl	8005b9c <Error_Handler>
  }
}
 8005b90:	bf00      	nop
 8005b92:	3768      	adds	r7, #104	; 0x68
 8005b94:	46bd      	mov	sp, r7
 8005b96:	bd80      	pop	{r7, pc}
 8005b98:	58000400 	.word	0x58000400

08005b9c <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8005b9c:	b480      	push	{r7}
 8005b9e:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8005ba0:	b672      	cpsid	i
}
 8005ba2:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
	/* User can add his own implementation to report the HAL error return state */
	__disable_irq();
	while (1) {
 8005ba4:	e7fe      	b.n	8005ba4 <Error_Handler+0x8>

08005ba6 <_ZSt3powIdiEN9__gnu_cxx11__promote_2IT_T0_NS0_9__promoteIS2_XsrSt12__is_integerIS2_E7__valueEE6__typeENS4_IS3_XsrS5_IS3_E7__valueEE6__typeEE6__typeES2_S3_>:
    pow(_Tp __x, _Up __y)
 8005ba6:	b580      	push	{r7, lr}
 8005ba8:	b084      	sub	sp, #16
 8005baa:	af00      	add	r7, sp, #0
 8005bac:	e9c7 0102 	strd	r0, r1, [r7, #8]
 8005bb0:	607a      	str	r2, [r7, #4]
      return pow(__type(__x), __type(__y));
 8005bb2:	6878      	ldr	r0, [r7, #4]
 8005bb4:	f7fa fc8e 	bl	80004d4 <__aeabi_i2d>
 8005bb8:	4602      	mov	r2, r0
 8005bba:	460b      	mov	r3, r1
 8005bbc:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 8005bc0:	f01b fff4 	bl	8021bac <pow>
 8005bc4:	4602      	mov	r2, r0
 8005bc6:	460b      	mov	r3, r1
    }
 8005bc8:	4610      	mov	r0, r2
 8005bca:	4619      	mov	r1, r3
 8005bcc:	3710      	adds	r7, #16
 8005bce:	46bd      	mov	sp, r7
 8005bd0:	bd80      	pop	{r7, pc}
	...

08005bd4 <_Z41__static_initialization_and_destruction_0ii>:
	}
  /* USER CODE END Error_Handler_Debug */
}
 8005bd4:	b580      	push	{r7, lr}
 8005bd6:	b082      	sub	sp, #8
 8005bd8:	af00      	add	r7, sp, #0
 8005bda:	6078      	str	r0, [r7, #4]
 8005bdc:	6039      	str	r1, [r7, #0]
 8005bde:	687b      	ldr	r3, [r7, #4]
 8005be0:	2b01      	cmp	r3, #1
 8005be2:	d10a      	bne.n	8005bfa <_Z41__static_initialization_and_destruction_0ii+0x26>
 8005be4:	683b      	ldr	r3, [r7, #0]
 8005be6:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8005bea:	4293      	cmp	r3, r2
 8005bec:	d105      	bne.n	8005bfa <_Z41__static_initialization_and_destruction_0ii+0x26>
SFE_UBLOX_GPS myUblox;
 8005bee:	4805      	ldr	r0, [pc, #20]	; (8005c04 <_Z41__static_initialization_and_destruction_0ii+0x30>)
 8005bf0:	f7fc fc48 	bl	8002484 <_ZN13SFE_UBLOX_GPSC1Ev>
Adafruit_BME680 bme; // I2C
 8005bf4:	4804      	ldr	r0, [pc, #16]	; (8005c08 <_Z41__static_initialization_and_destruction_0ii+0x34>)
 8005bf6:	f7fc fbfb 	bl	80023f0 <_ZN15Adafruit_BME680C1Ev>
}
 8005bfa:	bf00      	nop
 8005bfc:	3708      	adds	r7, #8
 8005bfe:	46bd      	mov	sp, r7
 8005c00:	bd80      	pop	{r7, pc}
 8005c02:	bf00      	nop
 8005c04:	20000264 	.word	0x20000264
 8005c08:	20000804 	.word	0x20000804

08005c0c <_GLOBAL__sub_I_myUblox>:
 8005c0c:	b580      	push	{r7, lr}
 8005c0e:	af00      	add	r7, sp, #0
 8005c10:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8005c14:	2001      	movs	r0, #1
 8005c16:	f7ff ffdd 	bl	8005bd4 <_Z41__static_initialization_and_destruction_0ii>
 8005c1a:	bd80      	pop	{r7, pc}

08005c1c <LL_RCC_EnableRTC>:
 8005c1c:	b480      	push	{r7}
 8005c1e:	af00      	add	r7, sp, #0
 8005c20:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8005c24:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8005c28:	f04f 42b0 	mov.w	r2, #1476395008	; 0x58000000
 8005c2c:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8005c30:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
 8005c34:	bf00      	nop
 8005c36:	46bd      	mov	sp, r7
 8005c38:	bc80      	pop	{r7}
 8005c3a:	4770      	bx	lr

08005c3c <LL_APB1_GRP1_EnableClock>:
 8005c3c:	b480      	push	{r7}
 8005c3e:	b085      	sub	sp, #20
 8005c40:	af00      	add	r7, sp, #0
 8005c42:	6078      	str	r0, [r7, #4]
 8005c44:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8005c48:	6d9a      	ldr	r2, [r3, #88]	; 0x58
 8005c4a:	f04f 41b0 	mov.w	r1, #1476395008	; 0x58000000
 8005c4e:	687b      	ldr	r3, [r7, #4]
 8005c50:	4313      	orrs	r3, r2
 8005c52:	658b      	str	r3, [r1, #88]	; 0x58
 8005c54:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8005c58:	6d9a      	ldr	r2, [r3, #88]	; 0x58
 8005c5a:	687b      	ldr	r3, [r7, #4]
 8005c5c:	4013      	ands	r3, r2
 8005c5e:	60fb      	str	r3, [r7, #12]
 8005c60:	68fb      	ldr	r3, [r7, #12]
 8005c62:	bf00      	nop
 8005c64:	3714      	adds	r7, #20
 8005c66:	46bd      	mov	sp, r7
 8005c68:	bc80      	pop	{r7}
 8005c6a:	4770      	bx	lr

08005c6c <MX_RTC_Init>:
 8005c6c:	b580      	push	{r7, lr}
 8005c6e:	b08c      	sub	sp, #48	; 0x30
 8005c70:	af00      	add	r7, sp, #0
 8005c72:	1d3b      	adds	r3, r7, #4
 8005c74:	222c      	movs	r2, #44	; 0x2c
 8005c76:	2100      	movs	r1, #0
 8005c78:	4618      	mov	r0, r3
 8005c7a:	f01e fda3 	bl	80247c4 <memset>
 8005c7e:	4b22      	ldr	r3, [pc, #136]	; (8005d08 <MX_RTC_Init+0x9c>)
 8005c80:	4a22      	ldr	r2, [pc, #136]	; (8005d0c <MX_RTC_Init+0xa0>)
 8005c82:	601a      	str	r2, [r3, #0]
 8005c84:	4b20      	ldr	r3, [pc, #128]	; (8005d08 <MX_RTC_Init+0x9c>)
 8005c86:	221f      	movs	r2, #31
 8005c88:	609a      	str	r2, [r3, #8]
 8005c8a:	4b1f      	ldr	r3, [pc, #124]	; (8005d08 <MX_RTC_Init+0x9c>)
 8005c8c:	2200      	movs	r2, #0
 8005c8e:	611a      	str	r2, [r3, #16]
 8005c90:	4b1d      	ldr	r3, [pc, #116]	; (8005d08 <MX_RTC_Init+0x9c>)
 8005c92:	2200      	movs	r2, #0
 8005c94:	615a      	str	r2, [r3, #20]
 8005c96:	4b1c      	ldr	r3, [pc, #112]	; (8005d08 <MX_RTC_Init+0x9c>)
 8005c98:	2200      	movs	r2, #0
 8005c9a:	619a      	str	r2, [r3, #24]
 8005c9c:	4b1a      	ldr	r3, [pc, #104]	; (8005d08 <MX_RTC_Init+0x9c>)
 8005c9e:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8005ca2:	61da      	str	r2, [r3, #28]
 8005ca4:	4b18      	ldr	r3, [pc, #96]	; (8005d08 <MX_RTC_Init+0x9c>)
 8005ca6:	2200      	movs	r2, #0
 8005ca8:	621a      	str	r2, [r3, #32]
 8005caa:	4b17      	ldr	r3, [pc, #92]	; (8005d08 <MX_RTC_Init+0x9c>)
 8005cac:	f44f 7280 	mov.w	r2, #256	; 0x100
 8005cb0:	625a      	str	r2, [r3, #36]	; 0x24
 8005cb2:	4815      	ldr	r0, [pc, #84]	; (8005d08 <MX_RTC_Init+0x9c>)
 8005cb4:	f006 fede 	bl	800ca74 <HAL_RTC_Init>
 8005cb8:	4603      	mov	r3, r0
 8005cba:	2b00      	cmp	r3, #0
 8005cbc:	d001      	beq.n	8005cc2 <MX_RTC_Init+0x56>
 8005cbe:	f7ff ff6d 	bl	8005b9c <Error_Handler>
 8005cc2:	4811      	ldr	r0, [pc, #68]	; (8005d08 <MX_RTC_Init+0x9c>)
 8005cc4:	f007 f9b8 	bl	800d038 <HAL_RTCEx_SetSSRU_IT>
 8005cc8:	4603      	mov	r3, r0
 8005cca:	2b00      	cmp	r3, #0
 8005ccc:	d001      	beq.n	8005cd2 <MX_RTC_Init+0x66>
 8005cce:	f7ff ff65 	bl	8005b9c <Error_Handler>
 8005cd2:	2300      	movs	r3, #0
 8005cd4:	623b      	str	r3, [r7, #32]
 8005cd6:	2300      	movs	r3, #0
 8005cd8:	60bb      	str	r3, [r7, #8]
 8005cda:	2300      	movs	r3, #0
 8005cdc:	61bb      	str	r3, [r7, #24]
 8005cde:	f04f 5300 	mov.w	r3, #536870912	; 0x20000000
 8005ce2:	61fb      	str	r3, [r7, #28]
 8005ce4:	f44f 7380 	mov.w	r3, #256	; 0x100
 8005ce8:	62fb      	str	r3, [r7, #44]	; 0x2c
 8005cea:	1d3b      	adds	r3, r7, #4
 8005cec:	2201      	movs	r2, #1
 8005cee:	4619      	mov	r1, r3
 8005cf0:	4805      	ldr	r0, [pc, #20]	; (8005d08 <MX_RTC_Init+0x9c>)
 8005cf2:	f006 ff39 	bl	800cb68 <HAL_RTC_SetAlarm_IT>
 8005cf6:	4603      	mov	r3, r0
 8005cf8:	2b00      	cmp	r3, #0
 8005cfa:	d001      	beq.n	8005d00 <MX_RTC_Init+0x94>
 8005cfc:	f7ff ff4e 	bl	8005b9c <Error_Handler>
 8005d00:	bf00      	nop
 8005d02:	3730      	adds	r7, #48	; 0x30
 8005d04:	46bd      	mov	sp, r7
 8005d06:	bd80      	pop	{r7, pc}
 8005d08:	20001e60 	.word	0x20001e60
 8005d0c:	40002800 	.word	0x40002800

08005d10 <HAL_RTC_MspInit>:
 8005d10:	b580      	push	{r7, lr}
 8005d12:	b090      	sub	sp, #64	; 0x40
 8005d14:	af00      	add	r7, sp, #0
 8005d16:	6078      	str	r0, [r7, #4]
 8005d18:	f107 0308 	add.w	r3, r7, #8
 8005d1c:	2238      	movs	r2, #56	; 0x38
 8005d1e:	2100      	movs	r1, #0
 8005d20:	4618      	mov	r0, r3
 8005d22:	f01e fd4f 	bl	80247c4 <memset>
 8005d26:	687b      	ldr	r3, [r7, #4]
 8005d28:	681b      	ldr	r3, [r3, #0]
 8005d2a:	4a16      	ldr	r2, [pc, #88]	; (8005d84 <HAL_RTC_MspInit+0x74>)
 8005d2c:	4293      	cmp	r3, r2
 8005d2e:	d125      	bne.n	8005d7c <HAL_RTC_MspInit+0x6c>
 8005d30:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8005d34:	60bb      	str	r3, [r7, #8]
 8005d36:	f44f 7380 	mov.w	r3, #256	; 0x100
 8005d3a:	63fb      	str	r3, [r7, #60]	; 0x3c
 8005d3c:	f107 0308 	add.w	r3, r7, #8
 8005d40:	4618      	mov	r0, r3
 8005d42:	f006 fd7d 	bl	800c840 <HAL_RCCEx_PeriphCLKConfig>
 8005d46:	4603      	mov	r3, r0
 8005d48:	2b00      	cmp	r3, #0
 8005d4a:	d001      	beq.n	8005d50 <HAL_RTC_MspInit+0x40>
 8005d4c:	f7ff ff26 	bl	8005b9c <Error_Handler>
 8005d50:	f7ff ff64 	bl	8005c1c <LL_RCC_EnableRTC>
 8005d54:	f44f 6080 	mov.w	r0, #1024	; 0x400
 8005d58:	f7ff ff70 	bl	8005c3c <LL_APB1_GRP1_EnableClock>
 8005d5c:	2200      	movs	r2, #0
 8005d5e:	2100      	movs	r1, #0
 8005d60:	2002      	movs	r0, #2
 8005d62:	f002 fafc 	bl	800835e <HAL_NVIC_SetPriority>
 8005d66:	2002      	movs	r0, #2
 8005d68:	f002 fb13 	bl	8008392 <HAL_NVIC_EnableIRQ>
 8005d6c:	2200      	movs	r2, #0
 8005d6e:	2100      	movs	r1, #0
 8005d70:	202a      	movs	r0, #42	; 0x2a
 8005d72:	f002 faf4 	bl	800835e <HAL_NVIC_SetPriority>
 8005d76:	202a      	movs	r0, #42	; 0x2a
 8005d78:	f002 fb0b 	bl	8008392 <HAL_NVIC_EnableIRQ>
 8005d7c:	bf00      	nop
 8005d7e:	3740      	adds	r7, #64	; 0x40
 8005d80:	46bd      	mov	sp, r7
 8005d82:	bd80      	pop	{r7, pc}
 8005d84:	40002800 	.word	0x40002800

08005d88 <LL_PWR_ClearFlag_C1STOP_C1STB>:
 8005d88:	b480      	push	{r7}
 8005d8a:	af00      	add	r7, sp, #0
 8005d8c:	4b03      	ldr	r3, [pc, #12]	; (8005d9c <LL_PWR_ClearFlag_C1STOP_C1STB+0x14>)
 8005d8e:	2201      	movs	r2, #1
 8005d90:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
 8005d94:	bf00      	nop
 8005d96:	46bd      	mov	sp, r7
 8005d98:	bc80      	pop	{r7}
 8005d9a:	4770      	bx	lr
 8005d9c:	58000400 	.word	0x58000400

08005da0 <PWR_EnterOffMode>:
 8005da0:	b480      	push	{r7}
 8005da2:	af00      	add	r7, sp, #0
 8005da4:	bf00      	nop
 8005da6:	46bd      	mov	sp, r7
 8005da8:	bc80      	pop	{r7}
 8005daa:	4770      	bx	lr

08005dac <PWR_ExitOffMode>:
 8005dac:	b480      	push	{r7}
 8005dae:	af00      	add	r7, sp, #0
 8005db0:	bf00      	nop
 8005db2:	46bd      	mov	sp, r7
 8005db4:	bc80      	pop	{r7}
 8005db6:	4770      	bx	lr

08005db8 <PWR_EnterStopMode>:
 8005db8:	b580      	push	{r7, lr}
 8005dba:	af00      	add	r7, sp, #0
 8005dbc:	f001 fa02 	bl	80071c4 <HAL_SuspendTick>
 8005dc0:	f7ff ffe2 	bl	8005d88 <LL_PWR_ClearFlag_C1STOP_C1STB>
 8005dc4:	2001      	movs	r0, #1
 8005dc6:	f005 faa9 	bl	800b31c <HAL_PWREx_EnterSTOP2Mode>
 8005dca:	bf00      	nop
 8005dcc:	bd80      	pop	{r7, pc}

08005dce <PWR_ExitStopMode>:
 8005dce:	b580      	push	{r7, lr}
 8005dd0:	af00      	add	r7, sp, #0
 8005dd2:	f001 fa05 	bl	80071e0 <HAL_ResumeTick>
 8005dd6:	f001 f929 	bl	800702c <vcom_Resume>
 8005dda:	bf00      	nop
 8005ddc:	bd80      	pop	{r7, pc}

08005dde <PWR_EnterSleepMode>:
 8005dde:	b580      	push	{r7, lr}
 8005de0:	af00      	add	r7, sp, #0
 8005de2:	f001 f9ef 	bl	80071c4 <HAL_SuspendTick>
 8005de6:	2101      	movs	r1, #1
 8005de8:	2000      	movs	r0, #0
 8005dea:	f005 fa13 	bl	800b214 <HAL_PWR_EnterSLEEPMode>
 8005dee:	bf00      	nop
 8005df0:	bd80      	pop	{r7, pc}

08005df2 <PWR_ExitSleepMode>:
 8005df2:	b580      	push	{r7, lr}
 8005df4:	af00      	add	r7, sp, #0
 8005df6:	f001 f9f3 	bl	80071e0 <HAL_ResumeTick>
 8005dfa:	bf00      	nop
 8005dfc:	bd80      	pop	{r7, pc}

08005dfe <HAL_MspInit>:
 8005dfe:	b480      	push	{r7}
 8005e00:	af00      	add	r7, sp, #0
 8005e02:	bf00      	nop
 8005e04:	46bd      	mov	sp, r7
 8005e06:	bc80      	pop	{r7}
 8005e08:	4770      	bx	lr

08005e0a <NMI_Handler>:
 8005e0a:	b480      	push	{r7}
 8005e0c:	af00      	add	r7, sp, #0
 8005e0e:	e7fe      	b.n	8005e0e <NMI_Handler+0x4>

08005e10 <HardFault_Handler>:
 8005e10:	b480      	push	{r7}
 8005e12:	af00      	add	r7, sp, #0
 8005e14:	e7fe      	b.n	8005e14 <HardFault_Handler+0x4>

08005e16 <MemManage_Handler>:
 8005e16:	b480      	push	{r7}
 8005e18:	af00      	add	r7, sp, #0
 8005e1a:	e7fe      	b.n	8005e1a <MemManage_Handler+0x4>

08005e1c <BusFault_Handler>:
 8005e1c:	b480      	push	{r7}
 8005e1e:	af00      	add	r7, sp, #0
 8005e20:	e7fe      	b.n	8005e20 <BusFault_Handler+0x4>

08005e22 <UsageFault_Handler>:
 8005e22:	b480      	push	{r7}
 8005e24:	af00      	add	r7, sp, #0
 8005e26:	e7fe      	b.n	8005e26 <UsageFault_Handler+0x4>

08005e28 <SVC_Handler>:
 8005e28:	b480      	push	{r7}
 8005e2a:	af00      	add	r7, sp, #0
 8005e2c:	bf00      	nop
 8005e2e:	46bd      	mov	sp, r7
 8005e30:	bc80      	pop	{r7}
 8005e32:	4770      	bx	lr

08005e34 <DebugMon_Handler>:
 8005e34:	b480      	push	{r7}
 8005e36:	af00      	add	r7, sp, #0
 8005e38:	bf00      	nop
 8005e3a:	46bd      	mov	sp, r7
 8005e3c:	bc80      	pop	{r7}
 8005e3e:	4770      	bx	lr

08005e40 <PendSV_Handler>:
 8005e40:	b480      	push	{r7}
 8005e42:	af00      	add	r7, sp, #0
 8005e44:	bf00      	nop
 8005e46:	46bd      	mov	sp, r7
 8005e48:	bc80      	pop	{r7}
 8005e4a:	4770      	bx	lr

08005e4c <SysTick_Handler>:
 8005e4c:	b580      	push	{r7, lr}
 8005e4e:	af00      	add	r7, sp, #0
 8005e50:	f001 f9a6 	bl	80071a0 <HAL_IncTick>
 8005e54:	bf00      	nop
 8005e56:	bd80      	pop	{r7, pc}

08005e58 <TAMP_STAMP_LSECSS_SSRU_IRQHandler>:
 8005e58:	b580      	push	{r7, lr}
 8005e5a:	af00      	add	r7, sp, #0
 8005e5c:	4802      	ldr	r0, [pc, #8]	; (8005e68 <TAMP_STAMP_LSECSS_SSRU_IRQHandler+0x10>)
 8005e5e:	f007 f927 	bl	800d0b0 <HAL_RTCEx_SSRUIRQHandler>
 8005e62:	bf00      	nop
 8005e64:	bd80      	pop	{r7, pc}
 8005e66:	bf00      	nop
 8005e68:	20001e60 	.word	0x20001e60

08005e6c <EXTI0_IRQHandler>:
 8005e6c:	b580      	push	{r7, lr}
 8005e6e:	af00      	add	r7, sp, #0
 8005e70:	2001      	movs	r0, #1
 8005e72:	f003 f95b 	bl	800912c <HAL_GPIO_EXTI_IRQHandler>
 8005e76:	bf00      	nop
 8005e78:	bd80      	pop	{r7, pc}

08005e7a <EXTI1_IRQHandler>:
 8005e7a:	b580      	push	{r7, lr}
 8005e7c:	af00      	add	r7, sp, #0
 8005e7e:	2002      	movs	r0, #2
 8005e80:	f003 f954 	bl	800912c <HAL_GPIO_EXTI_IRQHandler>
 8005e84:	bf00      	nop
 8005e86:	bd80      	pop	{r7, pc}

08005e88 <DMA1_Channel1_IRQHandler>:
 8005e88:	b580      	push	{r7, lr}
 8005e8a:	af00      	add	r7, sp, #0
 8005e8c:	4802      	ldr	r0, [pc, #8]	; (8005e98 <DMA1_Channel1_IRQHandler+0x10>)
 8005e8e:	f002 fd17 	bl	80088c0 <HAL_DMA_IRQHandler>
 8005e92:	bf00      	nop
 8005e94:	bd80      	pop	{r7, pc}
 8005e96:	bf00      	nop
 8005e98:	20001e00 	.word	0x20001e00

08005e9c <DMA1_Channel2_IRQHandler>:
 8005e9c:	b580      	push	{r7, lr}
 8005e9e:	af00      	add	r7, sp, #0
 8005ea0:	4802      	ldr	r0, [pc, #8]	; (8005eac <DMA1_Channel2_IRQHandler+0x10>)
 8005ea2:	f002 fd0d 	bl	80088c0 <HAL_DMA_IRQHandler>
 8005ea6:	bf00      	nop
 8005ea8:	bd80      	pop	{r7, pc}
 8005eaa:	bf00      	nop
 8005eac:	20001da0 	.word	0x20001da0

08005eb0 <DMA1_Channel5_IRQHandler>:
 8005eb0:	b580      	push	{r7, lr}
 8005eb2:	af00      	add	r7, sp, #0
 8005eb4:	4802      	ldr	r0, [pc, #8]	; (8005ec0 <DMA1_Channel5_IRQHandler+0x10>)
 8005eb6:	f002 fd03 	bl	80088c0 <HAL_DMA_IRQHandler>
 8005eba:	bf00      	nop
 8005ebc:	bd80      	pop	{r7, pc}
 8005ebe:	bf00      	nop
 8005ec0:	20001ef0 	.word	0x20001ef0

08005ec4 <I2C1_EV_IRQHandler>:
 8005ec4:	b580      	push	{r7, lr}
 8005ec6:	af00      	add	r7, sp, #0
 8005ec8:	4802      	ldr	r0, [pc, #8]	; (8005ed4 <I2C1_EV_IRQHandler+0x10>)
 8005eca:	f003 fcd3 	bl	8009874 <HAL_I2C_EV_IRQHandler>
 8005ece:	bf00      	nop
 8005ed0:	bd80      	pop	{r7, pc}
 8005ed2:	bf00      	nop
 8005ed4:	20000884 	.word	0x20000884

08005ed8 <I2C1_ER_IRQHandler>:
 8005ed8:	b580      	push	{r7, lr}
 8005eda:	af00      	add	r7, sp, #0
 8005edc:	4802      	ldr	r0, [pc, #8]	; (8005ee8 <I2C1_ER_IRQHandler+0x10>)
 8005ede:	f003 fce3 	bl	80098a8 <HAL_I2C_ER_IRQHandler>
 8005ee2:	bf00      	nop
 8005ee4:	bd80      	pop	{r7, pc}
 8005ee6:	bf00      	nop
 8005ee8:	20000884 	.word	0x20000884

08005eec <USART2_IRQHandler>:
 8005eec:	b580      	push	{r7, lr}
 8005eee:	af00      	add	r7, sp, #0
 8005ef0:	4802      	ldr	r0, [pc, #8]	; (8005efc <USART2_IRQHandler+0x10>)
 8005ef2:	f008 f96d 	bl	800e1d0 <HAL_UART_IRQHandler>
 8005ef6:	bf00      	nop
 8005ef8:	bd80      	pop	{r7, pc}
 8005efa:	bf00      	nop
 8005efc:	20001f50 	.word	0x20001f50

08005f00 <RTC_Alarm_IRQHandler>:
 8005f00:	b580      	push	{r7, lr}
 8005f02:	af00      	add	r7, sp, #0
 8005f04:	4802      	ldr	r0, [pc, #8]	; (8005f10 <RTC_Alarm_IRQHandler+0x10>)
 8005f06:	f006 ff83 	bl	800ce10 <HAL_RTC_AlarmIRQHandler>
 8005f0a:	bf00      	nop
 8005f0c:	bd80      	pop	{r7, pc}
 8005f0e:	bf00      	nop
 8005f10:	20001e60 	.word	0x20001e60

08005f14 <SUBGHZ_Radio_IRQHandler>:
 8005f14:	b580      	push	{r7, lr}
 8005f16:	af00      	add	r7, sp, #0
 8005f18:	4802      	ldr	r0, [pc, #8]	; (8005f24 <SUBGHZ_Radio_IRQHandler+0x10>)
 8005f1a:	f007 fc31 	bl	800d780 <HAL_SUBGHZ_IRQHandler>
 8005f1e:	bf00      	nop
 8005f20:	bd80      	pop	{r7, pc}
 8005f22:	bf00      	nop
 8005f24:	20001e98 	.word	0x20001e98

08005f28 <LL_APB3_GRP1_EnableClock>:
 8005f28:	b480      	push	{r7}
 8005f2a:	b085      	sub	sp, #20
 8005f2c:	af00      	add	r7, sp, #0
 8005f2e:	6078      	str	r0, [r7, #4]
 8005f30:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8005f34:	6e5a      	ldr	r2, [r3, #100]	; 0x64
 8005f36:	f04f 41b0 	mov.w	r1, #1476395008	; 0x58000000
 8005f3a:	687b      	ldr	r3, [r7, #4]
 8005f3c:	4313      	orrs	r3, r2
 8005f3e:	664b      	str	r3, [r1, #100]	; 0x64
 8005f40:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8005f44:	6e5a      	ldr	r2, [r3, #100]	; 0x64
 8005f46:	687b      	ldr	r3, [r7, #4]
 8005f48:	4013      	ands	r3, r2
 8005f4a:	60fb      	str	r3, [r7, #12]
 8005f4c:	68fb      	ldr	r3, [r7, #12]
 8005f4e:	bf00      	nop
 8005f50:	3714      	adds	r7, #20
 8005f52:	46bd      	mov	sp, r7
 8005f54:	bc80      	pop	{r7}
 8005f56:	4770      	bx	lr

08005f58 <MX_SUBGHZ_Init>:
 8005f58:	b580      	push	{r7, lr}
 8005f5a:	af00      	add	r7, sp, #0
 8005f5c:	4b06      	ldr	r3, [pc, #24]	; (8005f78 <MX_SUBGHZ_Init+0x20>)
 8005f5e:	2208      	movs	r2, #8
 8005f60:	601a      	str	r2, [r3, #0]
 8005f62:	4805      	ldr	r0, [pc, #20]	; (8005f78 <MX_SUBGHZ_Init+0x20>)
 8005f64:	f007 f990 	bl	800d288 <HAL_SUBGHZ_Init>
 8005f68:	4603      	mov	r3, r0
 8005f6a:	2b00      	cmp	r3, #0
 8005f6c:	d001      	beq.n	8005f72 <MX_SUBGHZ_Init+0x1a>
 8005f6e:	f7ff fe15 	bl	8005b9c <Error_Handler>
 8005f72:	bf00      	nop
 8005f74:	bd80      	pop	{r7, pc}
 8005f76:	bf00      	nop
 8005f78:	20001e98 	.word	0x20001e98

08005f7c <HAL_SUBGHZ_MspInit>:
 8005f7c:	b580      	push	{r7, lr}
 8005f7e:	b082      	sub	sp, #8
 8005f80:	af00      	add	r7, sp, #0
 8005f82:	6078      	str	r0, [r7, #4]
 8005f84:	2001      	movs	r0, #1
 8005f86:	f7ff ffcf 	bl	8005f28 <LL_APB3_GRP1_EnableClock>
 8005f8a:	2200      	movs	r2, #0
 8005f8c:	2100      	movs	r1, #0
 8005f8e:	2032      	movs	r0, #50	; 0x32
 8005f90:	f002 f9e5 	bl	800835e <HAL_NVIC_SetPriority>
 8005f94:	2032      	movs	r0, #50	; 0x32
 8005f96:	f002 f9fc 	bl	8008392 <HAL_NVIC_EnableIRQ>
 8005f9a:	bf00      	nop
 8005f9c:	3708      	adds	r7, #8
 8005f9e:	46bd      	mov	sp, r7
 8005fa0:	bd80      	pop	{r7, pc}

08005fa2 <LL_RCC_SetClkAfterWakeFromStop>:
 8005fa2:	b480      	push	{r7}
 8005fa4:	b083      	sub	sp, #12
 8005fa6:	af00      	add	r7, sp, #0
 8005fa8:	6078      	str	r0, [r7, #4]
 8005faa:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8005fae:	689b      	ldr	r3, [r3, #8]
 8005fb0:	f423 4200 	bic.w	r2, r3, #32768	; 0x8000
 8005fb4:	f04f 41b0 	mov.w	r1, #1476395008	; 0x58000000
 8005fb8:	687b      	ldr	r3, [r7, #4]
 8005fba:	4313      	orrs	r3, r2
 8005fbc:	608b      	str	r3, [r1, #8]
 8005fbe:	bf00      	nop
 8005fc0:	370c      	adds	r7, #12
 8005fc2:	46bd      	mov	sp, r7
 8005fc4:	bc80      	pop	{r7}
 8005fc6:	4770      	bx	lr

08005fc8 <LL_AHB2_GRP1_EnableClock>:
 8005fc8:	b480      	push	{r7}
 8005fca:	b085      	sub	sp, #20
 8005fcc:	af00      	add	r7, sp, #0
 8005fce:	6078      	str	r0, [r7, #4]
 8005fd0:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8005fd4:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 8005fd6:	f04f 41b0 	mov.w	r1, #1476395008	; 0x58000000
 8005fda:	687b      	ldr	r3, [r7, #4]
 8005fdc:	4313      	orrs	r3, r2
 8005fde:	64cb      	str	r3, [r1, #76]	; 0x4c
 8005fe0:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8005fe4:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 8005fe6:	687b      	ldr	r3, [r7, #4]
 8005fe8:	4013      	ands	r3, r2
 8005fea:	60fb      	str	r3, [r7, #12]
 8005fec:	68fb      	ldr	r3, [r7, #12]
 8005fee:	bf00      	nop
 8005ff0:	3714      	adds	r7, #20
 8005ff2:	46bd      	mov	sp, r7
 8005ff4:	bc80      	pop	{r7}
 8005ff6:	4770      	bx	lr

08005ff8 <LL_AHB2_GRP1_DisableClock>:
 8005ff8:	b480      	push	{r7}
 8005ffa:	b083      	sub	sp, #12
 8005ffc:	af00      	add	r7, sp, #0
 8005ffe:	6078      	str	r0, [r7, #4]
 8006000:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8006004:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 8006006:	687b      	ldr	r3, [r7, #4]
 8006008:	43db      	mvns	r3, r3
 800600a:	f04f 41b0 	mov.w	r1, #1476395008	; 0x58000000
 800600e:	4013      	ands	r3, r2
 8006010:	64cb      	str	r3, [r1, #76]	; 0x4c
 8006012:	bf00      	nop
 8006014:	370c      	adds	r7, #12
 8006016:	46bd      	mov	sp, r7
 8006018:	bc80      	pop	{r7}
 800601a:	4770      	bx	lr

0800601c <LL_FLASH_GetUDN>:
 800601c:	b480      	push	{r7}
 800601e:	af00      	add	r7, sp, #0
 8006020:	4b02      	ldr	r3, [pc, #8]	; (800602c <LL_FLASH_GetUDN+0x10>)
 8006022:	681b      	ldr	r3, [r3, #0]
 8006024:	4618      	mov	r0, r3
 8006026:	46bd      	mov	sp, r7
 8006028:	bc80      	pop	{r7}
 800602a:	4770      	bx	lr
 800602c:	1fff7580 	.word	0x1fff7580

08006030 <LL_FLASH_GetDeviceID>:
 8006030:	b480      	push	{r7}
 8006032:	af00      	add	r7, sp, #0
 8006034:	4b03      	ldr	r3, [pc, #12]	; (8006044 <LL_FLASH_GetDeviceID+0x14>)
 8006036:	681b      	ldr	r3, [r3, #0]
 8006038:	b2db      	uxtb	r3, r3
 800603a:	4618      	mov	r0, r3
 800603c:	46bd      	mov	sp, r7
 800603e:	bc80      	pop	{r7}
 8006040:	4770      	bx	lr
 8006042:	bf00      	nop
 8006044:	1fff7584 	.word	0x1fff7584

08006048 <LL_FLASH_GetSTCompanyID>:
 8006048:	b480      	push	{r7}
 800604a:	af00      	add	r7, sp, #0
 800604c:	4b03      	ldr	r3, [pc, #12]	; (800605c <LL_FLASH_GetSTCompanyID+0x14>)
 800604e:	681b      	ldr	r3, [r3, #0]
 8006050:	0a1b      	lsrs	r3, r3, #8
 8006052:	4618      	mov	r0, r3
 8006054:	46bd      	mov	sp, r7
 8006056:	bc80      	pop	{r7}
 8006058:	4770      	bx	lr
 800605a:	bf00      	nop
 800605c:	1fff7584 	.word	0x1fff7584

08006060 <SystemApp_Init>:
 8006060:	b580      	push	{r7, lr}
 8006062:	af00      	add	r7, sp, #0
 8006064:	4811      	ldr	r0, [pc, #68]	; (80060ac <SystemApp_Init+0x4c>)
 8006066:	f01e fc3b 	bl	80248e0 <puts>
 800606a:	2000      	movs	r0, #0
 800606c:	f7ff ff99 	bl	8005fa2 <LL_RCC_SetClkAfterWakeFromStop>
 8006070:	f01a ff80 	bl	8020f74 <UTIL_TIMER_Init>
 8006074:	f000 f92a 	bl	80062cc <Gpio_PreInit>
 8006078:	f000 f9ec 	bl	8006454 <DBG_Init>
 800607c:	f01b fa0a 	bl	8021494 <UTIL_ADV_TRACE_Init>
 8006080:	480b      	ldr	r0, [pc, #44]	; (80060b0 <SystemApp_Init+0x50>)
 8006082:	f01b faa5 	bl	80215d0 <UTIL_ADV_TRACE_RegisterTimeStampFunction>
 8006086:	2002      	movs	r0, #2
 8006088:	f01b fab0 	bl	80215ec <UTIL_ADV_TRACE_SetVerboseLevel>
 800608c:	f7fe fd2c 	bl	8004ae8 <SYS_InitMeasurement>
 8006090:	f000 fa96 	bl	80065c0 <EnvSensors_Init>
 8006094:	f01a f9b4 	bl	8020400 <UTIL_LPM_Init>
 8006098:	2101      	movs	r1, #1
 800609a:	2001      	movs	r0, #1
 800609c:	f01a f9f0 	bl	8020480 <UTIL_LPM_SetOffMode>
 80060a0:	4804      	ldr	r0, [pc, #16]	; (80060b4 <SystemApp_Init+0x54>)
 80060a2:	f01e fc1d 	bl	80248e0 <puts>
 80060a6:	bf00      	nop
 80060a8:	bd80      	pop	{r7, pc}
 80060aa:	bf00      	nop
 80060ac:	08025928 	.word	0x08025928
 80060b0:	0800628d 	.word	0x0800628d
 80060b4:	08025944 	.word	0x08025944

080060b8 <UTIL_SEQ_Idle>:
 80060b8:	b580      	push	{r7, lr}
 80060ba:	af00      	add	r7, sp, #0
 80060bc:	f01a fa10 	bl	80204e0 <UTIL_LPM_EnterLowPower>
 80060c0:	bf00      	nop
 80060c2:	bd80      	pop	{r7, pc}

080060c4 <GetBatteryLevel>:
 80060c4:	b580      	push	{r7, lr}
 80060c6:	b084      	sub	sp, #16
 80060c8:	af02      	add	r7, sp, #8
 80060ca:	2300      	movs	r3, #0
 80060cc:	71fb      	strb	r3, [r7, #7]
 80060ce:	f7fe fd93 	bl	8004bf8 <SYS_GetBatteryLevel>
 80060d2:	4603      	mov	r3, r0
 80060d4:	80bb      	strh	r3, [r7, #4]
 80060d6:	88bb      	ldrh	r3, [r7, #4]
 80060d8:	f640 32b8 	movw	r2, #3000	; 0xbb8
 80060dc:	4293      	cmp	r3, r2
 80060de:	d902      	bls.n	80060e6 <GetBatteryLevel+0x22>
 80060e0:	23fe      	movs	r3, #254	; 0xfe
 80060e2:	71fb      	strb	r3, [r7, #7]
 80060e4:	e014      	b.n	8006110 <GetBatteryLevel+0x4c>
 80060e6:	88bb      	ldrh	r3, [r7, #4]
 80060e8:	f5b3 6fe1 	cmp.w	r3, #1800	; 0x708
 80060ec:	d202      	bcs.n	80060f4 <GetBatteryLevel+0x30>
 80060ee:	2300      	movs	r3, #0
 80060f0:	71fb      	strb	r3, [r7, #7]
 80060f2:	e00d      	b.n	8006110 <GetBatteryLevel+0x4c>
 80060f4:	88bb      	ldrh	r3, [r7, #4]
 80060f6:	f5a3 63e1 	sub.w	r3, r3, #1800	; 0x708
 80060fa:	461a      	mov	r2, r3
 80060fc:	4613      	mov	r3, r2
 80060fe:	01db      	lsls	r3, r3, #7
 8006100:	1a9b      	subs	r3, r3, r2
 8006102:	005b      	lsls	r3, r3, #1
 8006104:	461a      	mov	r2, r3
 8006106:	4b09      	ldr	r3, [pc, #36]	; (800612c <GetBatteryLevel+0x68>)
 8006108:	fba3 2302 	umull	r2, r3, r3, r2
 800610c:	09db      	lsrs	r3, r3, #7
 800610e:	71fb      	strb	r3, [r7, #7]
 8006110:	79fb      	ldrb	r3, [r7, #7]
 8006112:	9300      	str	r3, [sp, #0]
 8006114:	4b06      	ldr	r3, [pc, #24]	; (8006130 <GetBatteryLevel+0x6c>)
 8006116:	2201      	movs	r2, #1
 8006118:	2100      	movs	r1, #0
 800611a:	2002      	movs	r0, #2
 800611c:	f01b f9d6 	bl	80214cc <UTIL_ADV_TRACE_COND_FSend>
 8006120:	79fb      	ldrb	r3, [r7, #7]
 8006122:	4618      	mov	r0, r3
 8006124:	3708      	adds	r7, #8
 8006126:	46bd      	mov	sp, r7
 8006128:	bd80      	pop	{r7, pc}
 800612a:	bf00      	nop
 800612c:	1b4e81b5 	.word	0x1b4e81b5
 8006130:	08025968 	.word	0x08025968

08006134 <GetTemperatureLevel>:
 8006134:	b580      	push	{r7, lr}
 8006136:	b082      	sub	sp, #8
 8006138:	af00      	add	r7, sp, #0
 800613a:	2300      	movs	r3, #0
 800613c:	80fb      	strh	r3, [r7, #6]
 800613e:	f7fe fce1 	bl	8004b04 <SYS_GetTemperatureLevel>
 8006142:	4603      	mov	r3, r0
 8006144:	2b00      	cmp	r3, #0
 8006146:	da00      	bge.n	800614a <GetTemperatureLevel+0x16>
 8006148:	33ff      	adds	r3, #255	; 0xff
 800614a:	121b      	asrs	r3, r3, #8
 800614c:	b21b      	sxth	r3, r3
 800614e:	80fb      	strh	r3, [r7, #6]
 8006150:	88fb      	ldrh	r3, [r7, #6]
 8006152:	4618      	mov	r0, r3
 8006154:	3708      	adds	r7, #8
 8006156:	46bd      	mov	sp, r7
 8006158:	bd80      	pop	{r7, pc}

0800615a <GetUniqueId>:
 800615a:	b590      	push	{r4, r7, lr}
 800615c:	b087      	sub	sp, #28
 800615e:	af00      	add	r7, sp, #0
 8006160:	6078      	str	r0, [r7, #4]
 8006162:	2300      	movs	r3, #0
 8006164:	617b      	str	r3, [r7, #20]
 8006166:	f7ff ff59 	bl	800601c <LL_FLASH_GetUDN>
 800616a:	6178      	str	r0, [r7, #20]
 800616c:	697b      	ldr	r3, [r7, #20]
 800616e:	f1b3 3fff 	cmp.w	r3, #4294967295
 8006172:	d138      	bne.n	80061e6 <GetUniqueId+0x8c>
 8006174:	f001 f842 	bl	80071fc <HAL_GetUIDw0>
 8006178:	4604      	mov	r4, r0
 800617a:	f001 f853 	bl	8007224 <HAL_GetUIDw2>
 800617e:	4603      	mov	r3, r0
 8006180:	4423      	add	r3, r4
 8006182:	613b      	str	r3, [r7, #16]
 8006184:	f001 f844 	bl	8007210 <HAL_GetUIDw1>
 8006188:	60f8      	str	r0, [r7, #12]
 800618a:	693b      	ldr	r3, [r7, #16]
 800618c:	0e1a      	lsrs	r2, r3, #24
 800618e:	687b      	ldr	r3, [r7, #4]
 8006190:	3307      	adds	r3, #7
 8006192:	b2d2      	uxtb	r2, r2
 8006194:	701a      	strb	r2, [r3, #0]
 8006196:	693b      	ldr	r3, [r7, #16]
 8006198:	0c1a      	lsrs	r2, r3, #16
 800619a:	687b      	ldr	r3, [r7, #4]
 800619c:	3306      	adds	r3, #6
 800619e:	b2d2      	uxtb	r2, r2
 80061a0:	701a      	strb	r2, [r3, #0]
 80061a2:	693b      	ldr	r3, [r7, #16]
 80061a4:	0a1a      	lsrs	r2, r3, #8
 80061a6:	687b      	ldr	r3, [r7, #4]
 80061a8:	3305      	adds	r3, #5
 80061aa:	b2d2      	uxtb	r2, r2
 80061ac:	701a      	strb	r2, [r3, #0]
 80061ae:	687b      	ldr	r3, [r7, #4]
 80061b0:	3304      	adds	r3, #4
 80061b2:	693a      	ldr	r2, [r7, #16]
 80061b4:	b2d2      	uxtb	r2, r2
 80061b6:	701a      	strb	r2, [r3, #0]
 80061b8:	68fb      	ldr	r3, [r7, #12]
 80061ba:	0e1a      	lsrs	r2, r3, #24
 80061bc:	687b      	ldr	r3, [r7, #4]
 80061be:	3303      	adds	r3, #3
 80061c0:	b2d2      	uxtb	r2, r2
 80061c2:	701a      	strb	r2, [r3, #0]
 80061c4:	68fb      	ldr	r3, [r7, #12]
 80061c6:	0c1a      	lsrs	r2, r3, #16
 80061c8:	687b      	ldr	r3, [r7, #4]
 80061ca:	3302      	adds	r3, #2
 80061cc:	b2d2      	uxtb	r2, r2
 80061ce:	701a      	strb	r2, [r3, #0]
 80061d0:	68fb      	ldr	r3, [r7, #12]
 80061d2:	0a1a      	lsrs	r2, r3, #8
 80061d4:	687b      	ldr	r3, [r7, #4]
 80061d6:	3301      	adds	r3, #1
 80061d8:	b2d2      	uxtb	r2, r2
 80061da:	701a      	strb	r2, [r3, #0]
 80061dc:	68fb      	ldr	r3, [r7, #12]
 80061de:	b2da      	uxtb	r2, r3
 80061e0:	687b      	ldr	r3, [r7, #4]
 80061e2:	701a      	strb	r2, [r3, #0]
 80061e4:	e031      	b.n	800624a <GetUniqueId+0xf0>
 80061e6:	687b      	ldr	r3, [r7, #4]
 80061e8:	3307      	adds	r3, #7
 80061ea:	697a      	ldr	r2, [r7, #20]
 80061ec:	b2d2      	uxtb	r2, r2
 80061ee:	701a      	strb	r2, [r3, #0]
 80061f0:	697b      	ldr	r3, [r7, #20]
 80061f2:	0a1a      	lsrs	r2, r3, #8
 80061f4:	687b      	ldr	r3, [r7, #4]
 80061f6:	3306      	adds	r3, #6
 80061f8:	b2d2      	uxtb	r2, r2
 80061fa:	701a      	strb	r2, [r3, #0]
 80061fc:	697b      	ldr	r3, [r7, #20]
 80061fe:	0c1a      	lsrs	r2, r3, #16
 8006200:	687b      	ldr	r3, [r7, #4]
 8006202:	3305      	adds	r3, #5
 8006204:	b2d2      	uxtb	r2, r2
 8006206:	701a      	strb	r2, [r3, #0]
 8006208:	697b      	ldr	r3, [r7, #20]
 800620a:	0e1a      	lsrs	r2, r3, #24
 800620c:	687b      	ldr	r3, [r7, #4]
 800620e:	3304      	adds	r3, #4
 8006210:	b2d2      	uxtb	r2, r2
 8006212:	701a      	strb	r2, [r3, #0]
 8006214:	f7ff ff0c 	bl	8006030 <LL_FLASH_GetDeviceID>
 8006218:	6178      	str	r0, [r7, #20]
 800621a:	687b      	ldr	r3, [r7, #4]
 800621c:	3303      	adds	r3, #3
 800621e:	697a      	ldr	r2, [r7, #20]
 8006220:	b2d2      	uxtb	r2, r2
 8006222:	701a      	strb	r2, [r3, #0]
 8006224:	f7ff ff10 	bl	8006048 <LL_FLASH_GetSTCompanyID>
 8006228:	6178      	str	r0, [r7, #20]
 800622a:	687b      	ldr	r3, [r7, #4]
 800622c:	3302      	adds	r3, #2
 800622e:	697a      	ldr	r2, [r7, #20]
 8006230:	b2d2      	uxtb	r2, r2
 8006232:	701a      	strb	r2, [r3, #0]
 8006234:	697b      	ldr	r3, [r7, #20]
 8006236:	0a1a      	lsrs	r2, r3, #8
 8006238:	687b      	ldr	r3, [r7, #4]
 800623a:	3301      	adds	r3, #1
 800623c:	b2d2      	uxtb	r2, r2
 800623e:	701a      	strb	r2, [r3, #0]
 8006240:	697b      	ldr	r3, [r7, #20]
 8006242:	0c1b      	lsrs	r3, r3, #16
 8006244:	b2da      	uxtb	r2, r3
 8006246:	687b      	ldr	r3, [r7, #4]
 8006248:	701a      	strb	r2, [r3, #0]
 800624a:	bf00      	nop
 800624c:	371c      	adds	r7, #28
 800624e:	46bd      	mov	sp, r7
 8006250:	bd90      	pop	{r4, r7, pc}

08006252 <GetDevAddr>:
 8006252:	b590      	push	{r4, r7, lr}
 8006254:	b083      	sub	sp, #12
 8006256:	af00      	add	r7, sp, #0
 8006258:	2300      	movs	r3, #0
 800625a:	607b      	str	r3, [r7, #4]
 800625c:	f7ff fede 	bl	800601c <LL_FLASH_GetUDN>
 8006260:	6078      	str	r0, [r7, #4]
 8006262:	687b      	ldr	r3, [r7, #4]
 8006264:	f1b3 3fff 	cmp.w	r3, #4294967295
 8006268:	d10b      	bne.n	8006282 <GetDevAddr+0x30>
 800626a:	f000 ffc7 	bl	80071fc <HAL_GetUIDw0>
 800626e:	4604      	mov	r4, r0
 8006270:	f000 ffce 	bl	8007210 <HAL_GetUIDw1>
 8006274:	4603      	mov	r3, r0
 8006276:	405c      	eors	r4, r3
 8006278:	f000 ffd4 	bl	8007224 <HAL_GetUIDw2>
 800627c:	4603      	mov	r3, r0
 800627e:	4063      	eors	r3, r4
 8006280:	607b      	str	r3, [r7, #4]
 8006282:	687b      	ldr	r3, [r7, #4]
 8006284:	4618      	mov	r0, r3
 8006286:	370c      	adds	r7, #12
 8006288:	46bd      	mov	sp, r7
 800628a:	bd90      	pop	{r4, r7, pc}

0800628c <TimestampNow>:
 800628c:	b580      	push	{r7, lr}
 800628e:	b086      	sub	sp, #24
 8006290:	af02      	add	r7, sp, #8
 8006292:	6078      	str	r0, [r7, #4]
 8006294:	6039      	str	r1, [r7, #0]
 8006296:	f107 0308 	add.w	r3, r7, #8
 800629a:	4618      	mov	r0, r3
 800629c:	f01a fa30 	bl	8020700 <SysTimeGet>
 80062a0:	68bb      	ldr	r3, [r7, #8]
 80062a2:	f9b7 200c 	ldrsh.w	r2, [r7, #12]
 80062a6:	9200      	str	r2, [sp, #0]
 80062a8:	4a07      	ldr	r2, [pc, #28]	; (80062c8 <TimestampNow+0x3c>)
 80062aa:	2110      	movs	r1, #16
 80062ac:	6878      	ldr	r0, [r7, #4]
 80062ae:	f000 f871 	bl	8006394 <tiny_snprintf_like>
 80062b2:	6878      	ldr	r0, [r7, #4]
 80062b4:	f7f9 ff64 	bl	8000180 <strlen>
 80062b8:	4603      	mov	r3, r0
 80062ba:	b29a      	uxth	r2, r3
 80062bc:	683b      	ldr	r3, [r7, #0]
 80062be:	801a      	strh	r2, [r3, #0]
 80062c0:	bf00      	nop
 80062c2:	3710      	adds	r7, #16
 80062c4:	46bd      	mov	sp, r7
 80062c6:	bd80      	pop	{r7, pc}
 80062c8:	08025974 	.word	0x08025974

080062cc <Gpio_PreInit>:
 80062cc:	b580      	push	{r7, lr}
 80062ce:	b086      	sub	sp, #24
 80062d0:	af00      	add	r7, sp, #0
 80062d2:	4824      	ldr	r0, [pc, #144]	; (8006364 <Gpio_PreInit+0x98>)
 80062d4:	f01e fb04 	bl	80248e0 <puts>
 80062d8:	1d3b      	adds	r3, r7, #4
 80062da:	2200      	movs	r2, #0
 80062dc:	601a      	str	r2, [r3, #0]
 80062de:	605a      	str	r2, [r3, #4]
 80062e0:	609a      	str	r2, [r3, #8]
 80062e2:	60da      	str	r2, [r3, #12]
 80062e4:	611a      	str	r2, [r3, #16]
 80062e6:	2001      	movs	r0, #1
 80062e8:	f7ff fe6e 	bl	8005fc8 <LL_AHB2_GRP1_EnableClock>
 80062ec:	2002      	movs	r0, #2
 80062ee:	f7ff fe6b 	bl	8005fc8 <LL_AHB2_GRP1_EnableClock>
 80062f2:	2004      	movs	r0, #4
 80062f4:	f7ff fe68 	bl	8005fc8 <LL_AHB2_GRP1_EnableClock>
 80062f8:	2080      	movs	r0, #128	; 0x80
 80062fa:	f7ff fe65 	bl	8005fc8 <LL_AHB2_GRP1_EnableClock>
 80062fe:	2303      	movs	r3, #3
 8006300:	60bb      	str	r3, [r7, #8]
 8006302:	2300      	movs	r3, #0
 8006304:	60fb      	str	r3, [r7, #12]
 8006306:	f649 73ff 	movw	r3, #40959	; 0x9fff
 800630a:	607b      	str	r3, [r7, #4]
 800630c:	1d3b      	adds	r3, r7, #4
 800630e:	4619      	mov	r1, r3
 8006310:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 8006314:	f002 fcac 	bl	8008c70 <HAL_GPIO_Init>
 8006318:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800631c:	607b      	str	r3, [r7, #4]
 800631e:	1d3b      	adds	r3, r7, #4
 8006320:	4619      	mov	r1, r3
 8006322:	4811      	ldr	r0, [pc, #68]	; (8006368 <Gpio_PreInit+0x9c>)
 8006324:	f002 fca4 	bl	8008c70 <HAL_GPIO_Init>
 8006328:	1d3b      	adds	r3, r7, #4
 800632a:	4619      	mov	r1, r3
 800632c:	480f      	ldr	r0, [pc, #60]	; (800636c <Gpio_PreInit+0xa0>)
 800632e:	f002 fc9f 	bl	8008c70 <HAL_GPIO_Init>
 8006332:	1d3b      	adds	r3, r7, #4
 8006334:	4619      	mov	r1, r3
 8006336:	480e      	ldr	r0, [pc, #56]	; (8006370 <Gpio_PreInit+0xa4>)
 8006338:	f002 fc9a 	bl	8008c70 <HAL_GPIO_Init>
 800633c:	2001      	movs	r0, #1
 800633e:	f7ff fe5b 	bl	8005ff8 <LL_AHB2_GRP1_DisableClock>
 8006342:	2002      	movs	r0, #2
 8006344:	f7ff fe58 	bl	8005ff8 <LL_AHB2_GRP1_DisableClock>
 8006348:	2004      	movs	r0, #4
 800634a:	f7ff fe55 	bl	8005ff8 <LL_AHB2_GRP1_DisableClock>
 800634e:	2080      	movs	r0, #128	; 0x80
 8006350:	f7ff fe52 	bl	8005ff8 <LL_AHB2_GRP1_DisableClock>
 8006354:	4803      	ldr	r0, [pc, #12]	; (8006364 <Gpio_PreInit+0x98>)
 8006356:	f01e fac3 	bl	80248e0 <puts>
 800635a:	bf00      	nop
 800635c:	3718      	adds	r7, #24
 800635e:	46bd      	mov	sp, r7
 8006360:	bd80      	pop	{r7, pc}
 8006362:	bf00      	nop
 8006364:	08025980 	.word	0x08025980
 8006368:	48000400 	.word	0x48000400
 800636c:	48000800 	.word	0x48000800
 8006370:	48001c00 	.word	0x48001c00

08006374 <UTIL_ADV_TRACE_PreSendHook>:
 8006374:	b580      	push	{r7, lr}
 8006376:	af00      	add	r7, sp, #0
 8006378:	2101      	movs	r1, #1
 800637a:	2002      	movs	r0, #2
 800637c:	f01a f850 	bl	8020420 <UTIL_LPM_SetStopMode>
 8006380:	bf00      	nop
 8006382:	bd80      	pop	{r7, pc}

08006384 <UTIL_ADV_TRACE_PostSendHook>:
 8006384:	b580      	push	{r7, lr}
 8006386:	af00      	add	r7, sp, #0
 8006388:	2100      	movs	r1, #0
 800638a:	2002      	movs	r0, #2
 800638c:	f01a f848 	bl	8020420 <UTIL_LPM_SetStopMode>
 8006390:	bf00      	nop
 8006392:	bd80      	pop	{r7, pc}

08006394 <tiny_snprintf_like>:
 8006394:	b40c      	push	{r2, r3}
 8006396:	b580      	push	{r7, lr}
 8006398:	b084      	sub	sp, #16
 800639a:	af00      	add	r7, sp, #0
 800639c:	6078      	str	r0, [r7, #4]
 800639e:	6039      	str	r1, [r7, #0]
 80063a0:	f107 031c 	add.w	r3, r7, #28
 80063a4:	60fb      	str	r3, [r7, #12]
 80063a6:	6839      	ldr	r1, [r7, #0]
 80063a8:	68fb      	ldr	r3, [r7, #12]
 80063aa:	69ba      	ldr	r2, [r7, #24]
 80063ac:	6878      	ldr	r0, [r7, #4]
 80063ae:	f01a fb15 	bl	80209dc <tiny_vsnprintf_like>
 80063b2:	bf00      	nop
 80063b4:	3710      	adds	r7, #16
 80063b6:	46bd      	mov	sp, r7
 80063b8:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 80063bc:	b002      	add	sp, #8
 80063be:	4770      	bx	lr

080063c0 <HAL_InitTick>:
 80063c0:	b480      	push	{r7}
 80063c2:	b083      	sub	sp, #12
 80063c4:	af00      	add	r7, sp, #0
 80063c6:	6078      	str	r0, [r7, #4]
 80063c8:	2300      	movs	r3, #0
 80063ca:	4618      	mov	r0, r3
 80063cc:	370c      	adds	r7, #12
 80063ce:	46bd      	mov	sp, r7
 80063d0:	bc80      	pop	{r7}
 80063d2:	4770      	bx	lr

080063d4 <HAL_GetTick>:
 80063d4:	b580      	push	{r7, lr}
 80063d6:	af00      	add	r7, sp, #0
 80063d8:	f000 faf2 	bl	80069c0 <TIMER_IF_GetTimerValue>
 80063dc:	4603      	mov	r3, r0
 80063de:	4618      	mov	r0, r3
 80063e0:	bd80      	pop	{r7, pc}

080063e2 <HAL_Delay>:
 80063e2:	b580      	push	{r7, lr}
 80063e4:	b082      	sub	sp, #8
 80063e6:	af00      	add	r7, sp, #0
 80063e8:	6078      	str	r0, [r7, #4]
 80063ea:	687b      	ldr	r3, [r7, #4]
 80063ec:	4618      	mov	r0, r3
 80063ee:	f000 fb55 	bl	8006a9c <TIMER_IF_DelayMs>
 80063f2:	bf00      	nop
 80063f4:	3708      	adds	r7, #8
 80063f6:	46bd      	mov	sp, r7
 80063f8:	bd80      	pop	{r7, pc}

080063fa <LL_AHB2_GRP1_EnableClock>:
 80063fa:	b480      	push	{r7}
 80063fc:	b085      	sub	sp, #20
 80063fe:	af00      	add	r7, sp, #0
 8006400:	6078      	str	r0, [r7, #4]
 8006402:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8006406:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 8006408:	f04f 41b0 	mov.w	r1, #1476395008	; 0x58000000
 800640c:	687b      	ldr	r3, [r7, #4]
 800640e:	4313      	orrs	r3, r2
 8006410:	64cb      	str	r3, [r1, #76]	; 0x4c
 8006412:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8006416:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 8006418:	687b      	ldr	r3, [r7, #4]
 800641a:	4013      	ands	r3, r2
 800641c:	60fb      	str	r3, [r7, #12]
 800641e:	68fb      	ldr	r3, [r7, #12]
 8006420:	bf00      	nop
 8006422:	3714      	adds	r7, #20
 8006424:	46bd      	mov	sp, r7
 8006426:	bc80      	pop	{r7}
 8006428:	4770      	bx	lr
	...

0800642c <LL_EXTI_EnableIT_32_63>:
 800642c:	b480      	push	{r7}
 800642e:	b083      	sub	sp, #12
 8006430:	af00      	add	r7, sp, #0
 8006432:	6078      	str	r0, [r7, #4]
 8006434:	4b06      	ldr	r3, [pc, #24]	; (8006450 <LL_EXTI_EnableIT_32_63+0x24>)
 8006436:	f8d3 2090 	ldr.w	r2, [r3, #144]	; 0x90
 800643a:	4905      	ldr	r1, [pc, #20]	; (8006450 <LL_EXTI_EnableIT_32_63+0x24>)
 800643c:	687b      	ldr	r3, [r7, #4]
 800643e:	4313      	orrs	r3, r2
 8006440:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 8006444:	bf00      	nop
 8006446:	370c      	adds	r7, #12
 8006448:	46bd      	mov	sp, r7
 800644a:	bc80      	pop	{r7}
 800644c:	4770      	bx	lr
 800644e:	bf00      	nop
 8006450:	58000800 	.word	0x58000800

08006454 <DBG_Init>:
 8006454:	b580      	push	{r7, lr}
 8006456:	b086      	sub	sp, #24
 8006458:	af00      	add	r7, sp, #0
 800645a:	1d3b      	adds	r3, r7, #4
 800645c:	2200      	movs	r2, #0
 800645e:	601a      	str	r2, [r3, #0]
 8006460:	605a      	str	r2, [r3, #4]
 8006462:	609a      	str	r2, [r3, #8]
 8006464:	60da      	str	r2, [r3, #12]
 8006466:	611a      	str	r2, [r3, #16]
 8006468:	2002      	movs	r0, #2
 800646a:	f7ff ffc6 	bl	80063fa <LL_AHB2_GRP1_EnableClock>
 800646e:	2002      	movs	r0, #2
 8006470:	f7ff ffc3 	bl	80063fa <LL_AHB2_GRP1_EnableClock>
 8006474:	2002      	movs	r0, #2
 8006476:	f7ff ffc0 	bl	80063fa <LL_AHB2_GRP1_EnableClock>
 800647a:	2002      	movs	r0, #2
 800647c:	f7ff ffbd 	bl	80063fa <LL_AHB2_GRP1_EnableClock>
 8006480:	2301      	movs	r3, #1
 8006482:	60bb      	str	r3, [r7, #8]
 8006484:	2301      	movs	r3, #1
 8006486:	60fb      	str	r3, [r7, #12]
 8006488:	2303      	movs	r3, #3
 800648a:	613b      	str	r3, [r7, #16]
 800648c:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8006490:	607b      	str	r3, [r7, #4]
 8006492:	1d3b      	adds	r3, r7, #4
 8006494:	4619      	mov	r1, r3
 8006496:	4835      	ldr	r0, [pc, #212]	; (800656c <DBG_Init+0x118>)
 8006498:	f002 fbea 	bl	8008c70 <HAL_GPIO_Init>
 800649c:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 80064a0:	607b      	str	r3, [r7, #4]
 80064a2:	1d3b      	adds	r3, r7, #4
 80064a4:	4619      	mov	r1, r3
 80064a6:	4831      	ldr	r0, [pc, #196]	; (800656c <DBG_Init+0x118>)
 80064a8:	f002 fbe2 	bl	8008c70 <HAL_GPIO_Init>
 80064ac:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 80064b0:	607b      	str	r3, [r7, #4]
 80064b2:	1d3b      	adds	r3, r7, #4
 80064b4:	4619      	mov	r1, r3
 80064b6:	482d      	ldr	r0, [pc, #180]	; (800656c <DBG_Init+0x118>)
 80064b8:	f002 fbda 	bl	8008c70 <HAL_GPIO_Init>
 80064bc:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80064c0:	607b      	str	r3, [r7, #4]
 80064c2:	1d3b      	adds	r3, r7, #4
 80064c4:	4619      	mov	r1, r3
 80064c6:	4829      	ldr	r0, [pc, #164]	; (800656c <DBG_Init+0x118>)
 80064c8:	f002 fbd2 	bl	8008c70 <HAL_GPIO_Init>
 80064cc:	2200      	movs	r2, #0
 80064ce:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 80064d2:	4826      	ldr	r0, [pc, #152]	; (800656c <DBG_Init+0x118>)
 80064d4:	f002 fdfa 	bl	80090cc <HAL_GPIO_WritePin>
 80064d8:	2200      	movs	r2, #0
 80064da:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80064de:	4823      	ldr	r0, [pc, #140]	; (800656c <DBG_Init+0x118>)
 80064e0:	f002 fdf4 	bl	80090cc <HAL_GPIO_WritePin>
 80064e4:	2200      	movs	r2, #0
 80064e6:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 80064ea:	4820      	ldr	r0, [pc, #128]	; (800656c <DBG_Init+0x118>)
 80064ec:	f002 fdee 	bl	80090cc <HAL_GPIO_WritePin>
 80064f0:	2200      	movs	r2, #0
 80064f2:	f44f 6180 	mov.w	r1, #1024	; 0x400
 80064f6:	481d      	ldr	r0, [pc, #116]	; (800656c <DBG_Init+0x118>)
 80064f8:	f002 fde8 	bl	80090cc <HAL_GPIO_WritePin>
 80064fc:	2302      	movs	r3, #2
 80064fe:	60bb      	str	r3, [r7, #8]
 8006500:	2300      	movs	r3, #0
 8006502:	60fb      	str	r3, [r7, #12]
 8006504:	23f0      	movs	r3, #240	; 0xf0
 8006506:	607b      	str	r3, [r7, #4]
 8006508:	230d      	movs	r3, #13
 800650a:	617b      	str	r3, [r7, #20]
 800650c:	2001      	movs	r0, #1
 800650e:	f7ff ff74 	bl	80063fa <LL_AHB2_GRP1_EnableClock>
 8006512:	1d3b      	adds	r3, r7, #4
 8006514:	4619      	mov	r1, r3
 8006516:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 800651a:	f002 fba9 	bl	8008c70 <HAL_GPIO_Init>
 800651e:	2302      	movs	r3, #2
 8006520:	60bb      	str	r3, [r7, #8]
 8006522:	2300      	movs	r3, #0
 8006524:	60fb      	str	r3, [r7, #12]
 8006526:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 800652a:	607b      	str	r3, [r7, #4]
 800652c:	2306      	movs	r3, #6
 800652e:	617b      	str	r3, [r7, #20]
 8006530:	2001      	movs	r0, #1
 8006532:	f7ff ff62 	bl	80063fa <LL_AHB2_GRP1_EnableClock>
 8006536:	1d3b      	adds	r3, r7, #4
 8006538:	4619      	mov	r1, r3
 800653a:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 800653e:	f002 fb97 	bl	8008c70 <HAL_GPIO_Init>
 8006542:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8006546:	f04f 7180 	mov.w	r1, #16777216	; 0x1000000
 800654a:	2000      	movs	r0, #0
 800654c:	f005 fed2 	bl	800c2f4 <HAL_RCC_MCOConfig>
 8006550:	f44f 4080 	mov.w	r0, #16384	; 0x4000
 8006554:	f7ff ff6a 	bl	800642c <LL_EXTI_EnableIT_32_63>
 8006558:	f000 fe6e 	bl	8007238 <HAL_DBGMCU_EnableDBGSleepMode>
 800655c:	f000 fe72 	bl	8007244 <HAL_DBGMCU_EnableDBGStopMode>
 8006560:	f000 fe76 	bl	8007250 <HAL_DBGMCU_EnableDBGStandbyMode>
 8006564:	bf00      	nop
 8006566:	3718      	adds	r7, #24
 8006568:	46bd      	mov	sp, r7
 800656a:	bd80      	pop	{r7, pc}
 800656c:	48000400 	.word	0x48000400

08006570 <EnvSensors_Read>:
 8006570:	b480      	push	{r7}
 8006572:	b087      	sub	sp, #28
 8006574:	af00      	add	r7, sp, #0
 8006576:	6078      	str	r0, [r7, #4]
 8006578:	4b0c      	ldr	r3, [pc, #48]	; (80065ac <EnvSensors_Read+0x3c>)
 800657a:	617b      	str	r3, [r7, #20]
 800657c:	4b0c      	ldr	r3, [pc, #48]	; (80065b0 <EnvSensors_Read+0x40>)
 800657e:	613b      	str	r3, [r7, #16]
 8006580:	4b0c      	ldr	r3, [pc, #48]	; (80065b4 <EnvSensors_Read+0x44>)
 8006582:	60fb      	str	r3, [r7, #12]
 8006584:	687b      	ldr	r3, [r7, #4]
 8006586:	697a      	ldr	r2, [r7, #20]
 8006588:	609a      	str	r2, [r3, #8]
 800658a:	687b      	ldr	r3, [r7, #4]
 800658c:	693a      	ldr	r2, [r7, #16]
 800658e:	605a      	str	r2, [r3, #4]
 8006590:	687b      	ldr	r3, [r7, #4]
 8006592:	68fa      	ldr	r2, [r7, #12]
 8006594:	601a      	str	r2, [r3, #0]
 8006596:	687b      	ldr	r3, [r7, #4]
 8006598:	4a07      	ldr	r2, [pc, #28]	; (80065b8 <EnvSensors_Read+0x48>)
 800659a:	60da      	str	r2, [r3, #12]
 800659c:	687b      	ldr	r3, [r7, #4]
 800659e:	4a07      	ldr	r2, [pc, #28]	; (80065bc <EnvSensors_Read+0x4c>)
 80065a0:	611a      	str	r2, [r3, #16]
 80065a2:	bf00      	nop
 80065a4:	371c      	adds	r7, #28
 80065a6:	46bd      	mov	sp, r7
 80065a8:	bc80      	pop	{r7}
 80065aa:	4770      	bx	lr
 80065ac:	42480000 	.word	0x42480000
 80065b0:	41900000 	.word	0x41900000
 80065b4:	447a0000 	.word	0x447a0000
 80065b8:	003e090d 	.word	0x003e090d
 80065bc:	000503ab 	.word	0x000503ab

080065c0 <EnvSensors_Init>:
 80065c0:	b480      	push	{r7}
 80065c2:	af00      	add	r7, sp, #0
 80065c4:	bf00      	nop
 80065c6:	46bd      	mov	sp, r7
 80065c8:	bc80      	pop	{r7}
 80065ca:	4770      	bx	lr

080065cc <_getpid>:
 80065cc:	b480      	push	{r7}
 80065ce:	af00      	add	r7, sp, #0
 80065d0:	2301      	movs	r3, #1
 80065d2:	4618      	mov	r0, r3
 80065d4:	46bd      	mov	sp, r7
 80065d6:	bc80      	pop	{r7}
 80065d8:	4770      	bx	lr

080065da <_kill>:
 80065da:	b580      	push	{r7, lr}
 80065dc:	b082      	sub	sp, #8
 80065de:	af00      	add	r7, sp, #0
 80065e0:	6078      	str	r0, [r7, #4]
 80065e2:	6039      	str	r1, [r7, #0]
 80065e4:	f01e f8c4 	bl	8024770 <__errno>
 80065e8:	4603      	mov	r3, r0
 80065ea:	2216      	movs	r2, #22
 80065ec:	601a      	str	r2, [r3, #0]
 80065ee:	f04f 33ff 	mov.w	r3, #4294967295
 80065f2:	4618      	mov	r0, r3
 80065f4:	3708      	adds	r7, #8
 80065f6:	46bd      	mov	sp, r7
 80065f8:	bd80      	pop	{r7, pc}

080065fa <_exit>:
 80065fa:	b580      	push	{r7, lr}
 80065fc:	b082      	sub	sp, #8
 80065fe:	af00      	add	r7, sp, #0
 8006600:	6078      	str	r0, [r7, #4]
 8006602:	f04f 31ff 	mov.w	r1, #4294967295
 8006606:	6878      	ldr	r0, [r7, #4]
 8006608:	f7ff ffe7 	bl	80065da <_kill>
 800660c:	e7fe      	b.n	800660c <_exit+0x12>

0800660e <_read>:
 800660e:	b580      	push	{r7, lr}
 8006610:	b086      	sub	sp, #24
 8006612:	af00      	add	r7, sp, #0
 8006614:	60f8      	str	r0, [r7, #12]
 8006616:	60b9      	str	r1, [r7, #8]
 8006618:	607a      	str	r2, [r7, #4]
 800661a:	2300      	movs	r3, #0
 800661c:	617b      	str	r3, [r7, #20]
 800661e:	e00a      	b.n	8006636 <_read+0x28>
 8006620:	f3af 8000 	nop.w
 8006624:	4601      	mov	r1, r0
 8006626:	68bb      	ldr	r3, [r7, #8]
 8006628:	1c5a      	adds	r2, r3, #1
 800662a:	60ba      	str	r2, [r7, #8]
 800662c:	b2ca      	uxtb	r2, r1
 800662e:	701a      	strb	r2, [r3, #0]
 8006630:	697b      	ldr	r3, [r7, #20]
 8006632:	3301      	adds	r3, #1
 8006634:	617b      	str	r3, [r7, #20]
 8006636:	697a      	ldr	r2, [r7, #20]
 8006638:	687b      	ldr	r3, [r7, #4]
 800663a:	429a      	cmp	r2, r3
 800663c:	dbf0      	blt.n	8006620 <_read+0x12>
 800663e:	687b      	ldr	r3, [r7, #4]
 8006640:	4618      	mov	r0, r3
 8006642:	3718      	adds	r7, #24
 8006644:	46bd      	mov	sp, r7
 8006646:	bd80      	pop	{r7, pc}

08006648 <_write>:
 8006648:	b580      	push	{r7, lr}
 800664a:	b086      	sub	sp, #24
 800664c:	af00      	add	r7, sp, #0
 800664e:	60f8      	str	r0, [r7, #12]
 8006650:	60b9      	str	r1, [r7, #8]
 8006652:	607a      	str	r2, [r7, #4]
 8006654:	2300      	movs	r3, #0
 8006656:	617b      	str	r3, [r7, #20]
 8006658:	e009      	b.n	800666e <_write+0x26>
 800665a:	68bb      	ldr	r3, [r7, #8]
 800665c:	1c5a      	adds	r2, r3, #1
 800665e:	60ba      	str	r2, [r7, #8]
 8006660:	781b      	ldrb	r3, [r3, #0]
 8006662:	4618      	mov	r0, r3
 8006664:	f3af 8000 	nop.w
 8006668:	697b      	ldr	r3, [r7, #20]
 800666a:	3301      	adds	r3, #1
 800666c:	617b      	str	r3, [r7, #20]
 800666e:	697a      	ldr	r2, [r7, #20]
 8006670:	687b      	ldr	r3, [r7, #4]
 8006672:	429a      	cmp	r2, r3
 8006674:	dbf1      	blt.n	800665a <_write+0x12>
 8006676:	687b      	ldr	r3, [r7, #4]
 8006678:	4618      	mov	r0, r3
 800667a:	3718      	adds	r7, #24
 800667c:	46bd      	mov	sp, r7
 800667e:	bd80      	pop	{r7, pc}

08006680 <_close>:
 8006680:	b480      	push	{r7}
 8006682:	b083      	sub	sp, #12
 8006684:	af00      	add	r7, sp, #0
 8006686:	6078      	str	r0, [r7, #4]
 8006688:	f04f 33ff 	mov.w	r3, #4294967295
 800668c:	4618      	mov	r0, r3
 800668e:	370c      	adds	r7, #12
 8006690:	46bd      	mov	sp, r7
 8006692:	bc80      	pop	{r7}
 8006694:	4770      	bx	lr

08006696 <_fstat>:
 8006696:	b480      	push	{r7}
 8006698:	b083      	sub	sp, #12
 800669a:	af00      	add	r7, sp, #0
 800669c:	6078      	str	r0, [r7, #4]
 800669e:	6039      	str	r1, [r7, #0]
 80066a0:	683b      	ldr	r3, [r7, #0]
 80066a2:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 80066a6:	605a      	str	r2, [r3, #4]
 80066a8:	2300      	movs	r3, #0
 80066aa:	4618      	mov	r0, r3
 80066ac:	370c      	adds	r7, #12
 80066ae:	46bd      	mov	sp, r7
 80066b0:	bc80      	pop	{r7}
 80066b2:	4770      	bx	lr

080066b4 <_isatty>:
 80066b4:	b480      	push	{r7}
 80066b6:	b083      	sub	sp, #12
 80066b8:	af00      	add	r7, sp, #0
 80066ba:	6078      	str	r0, [r7, #4]
 80066bc:	2301      	movs	r3, #1
 80066be:	4618      	mov	r0, r3
 80066c0:	370c      	adds	r7, #12
 80066c2:	46bd      	mov	sp, r7
 80066c4:	bc80      	pop	{r7}
 80066c6:	4770      	bx	lr

080066c8 <_lseek>:
 80066c8:	b480      	push	{r7}
 80066ca:	b085      	sub	sp, #20
 80066cc:	af00      	add	r7, sp, #0
 80066ce:	60f8      	str	r0, [r7, #12]
 80066d0:	60b9      	str	r1, [r7, #8]
 80066d2:	607a      	str	r2, [r7, #4]
 80066d4:	2300      	movs	r3, #0
 80066d6:	4618      	mov	r0, r3
 80066d8:	3714      	adds	r7, #20
 80066da:	46bd      	mov	sp, r7
 80066dc:	bc80      	pop	{r7}
 80066de:	4770      	bx	lr

080066e0 <_sbrk>:
 80066e0:	b580      	push	{r7, lr}
 80066e2:	b086      	sub	sp, #24
 80066e4:	af00      	add	r7, sp, #0
 80066e6:	6078      	str	r0, [r7, #4]
 80066e8:	4a14      	ldr	r2, [pc, #80]	; (800673c <_sbrk+0x5c>)
 80066ea:	4b15      	ldr	r3, [pc, #84]	; (8006740 <_sbrk+0x60>)
 80066ec:	1ad3      	subs	r3, r2, r3
 80066ee:	617b      	str	r3, [r7, #20]
 80066f0:	697b      	ldr	r3, [r7, #20]
 80066f2:	613b      	str	r3, [r7, #16]
 80066f4:	4b13      	ldr	r3, [pc, #76]	; (8006744 <_sbrk+0x64>)
 80066f6:	681b      	ldr	r3, [r3, #0]
 80066f8:	2b00      	cmp	r3, #0
 80066fa:	d102      	bne.n	8006702 <_sbrk+0x22>
 80066fc:	4b11      	ldr	r3, [pc, #68]	; (8006744 <_sbrk+0x64>)
 80066fe:	4a12      	ldr	r2, [pc, #72]	; (8006748 <_sbrk+0x68>)
 8006700:	601a      	str	r2, [r3, #0]
 8006702:	4b10      	ldr	r3, [pc, #64]	; (8006744 <_sbrk+0x64>)
 8006704:	681a      	ldr	r2, [r3, #0]
 8006706:	687b      	ldr	r3, [r7, #4]
 8006708:	4413      	add	r3, r2
 800670a:	693a      	ldr	r2, [r7, #16]
 800670c:	429a      	cmp	r2, r3
 800670e:	d207      	bcs.n	8006720 <_sbrk+0x40>
 8006710:	f01e f82e 	bl	8024770 <__errno>
 8006714:	4603      	mov	r3, r0
 8006716:	220c      	movs	r2, #12
 8006718:	601a      	str	r2, [r3, #0]
 800671a:	f04f 33ff 	mov.w	r3, #4294967295
 800671e:	e009      	b.n	8006734 <_sbrk+0x54>
 8006720:	4b08      	ldr	r3, [pc, #32]	; (8006744 <_sbrk+0x64>)
 8006722:	681b      	ldr	r3, [r3, #0]
 8006724:	60fb      	str	r3, [r7, #12]
 8006726:	4b07      	ldr	r3, [pc, #28]	; (8006744 <_sbrk+0x64>)
 8006728:	681a      	ldr	r2, [r3, #0]
 800672a:	687b      	ldr	r3, [r7, #4]
 800672c:	4413      	add	r3, r2
 800672e:	4a05      	ldr	r2, [pc, #20]	; (8006744 <_sbrk+0x64>)
 8006730:	6013      	str	r3, [r2, #0]
 8006732:	68fb      	ldr	r3, [r7, #12]
 8006734:	4618      	mov	r0, r3
 8006736:	3718      	adds	r7, #24
 8006738:	46bd      	mov	sp, r7
 800673a:	bd80      	pop	{r7, pc}
 800673c:	20008000 	.word	0x20008000
 8006740:	00000800 	.word	0x00000800
 8006744:	200008d4 	.word	0x200008d4
 8006748:	20002098 	.word	0x20002098

0800674c <SystemInit>:
 800674c:	b480      	push	{r7}
 800674e:	af00      	add	r7, sp, #0
 8006750:	bf00      	nop
 8006752:	46bd      	mov	sp, r7
 8006754:	bc80      	pop	{r7}
 8006756:	4770      	bx	lr

08006758 <LL_APB2_GRP1_EnableClock>:
 8006758:	b480      	push	{r7}
 800675a:	b085      	sub	sp, #20
 800675c:	af00      	add	r7, sp, #0
 800675e:	6078      	str	r0, [r7, #4]
 8006760:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8006764:	6e1a      	ldr	r2, [r3, #96]	; 0x60
 8006766:	f04f 41b0 	mov.w	r1, #1476395008	; 0x58000000
 800676a:	687b      	ldr	r3, [r7, #4]
 800676c:	4313      	orrs	r3, r2
 800676e:	660b      	str	r3, [r1, #96]	; 0x60
 8006770:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8006774:	6e1a      	ldr	r2, [r3, #96]	; 0x60
 8006776:	687b      	ldr	r3, [r7, #4]
 8006778:	4013      	ands	r3, r2
 800677a:	60fb      	str	r3, [r7, #12]
 800677c:	68fb      	ldr	r3, [r7, #12]
 800677e:	bf00      	nop
 8006780:	3714      	adds	r7, #20
 8006782:	46bd      	mov	sp, r7
 8006784:	bc80      	pop	{r7}
 8006786:	4770      	bx	lr

08006788 <MX_TIM1_Init>:
 8006788:	b580      	push	{r7, lr}
 800678a:	b088      	sub	sp, #32
 800678c:	af00      	add	r7, sp, #0
 800678e:	f107 0310 	add.w	r3, r7, #16
 8006792:	2200      	movs	r2, #0
 8006794:	601a      	str	r2, [r3, #0]
 8006796:	605a      	str	r2, [r3, #4]
 8006798:	609a      	str	r2, [r3, #8]
 800679a:	60da      	str	r2, [r3, #12]
 800679c:	1d3b      	adds	r3, r7, #4
 800679e:	2200      	movs	r2, #0
 80067a0:	601a      	str	r2, [r3, #0]
 80067a2:	605a      	str	r2, [r3, #4]
 80067a4:	609a      	str	r2, [r3, #8]
 80067a6:	4b20      	ldr	r3, [pc, #128]	; (8006828 <MX_TIM1_Init+0xa0>)
 80067a8:	4a20      	ldr	r2, [pc, #128]	; (800682c <MX_TIM1_Init+0xa4>)
 80067aa:	601a      	str	r2, [r3, #0]
 80067ac:	4b1e      	ldr	r3, [pc, #120]	; (8006828 <MX_TIM1_Init+0xa0>)
 80067ae:	2200      	movs	r2, #0
 80067b0:	605a      	str	r2, [r3, #4]
 80067b2:	4b1d      	ldr	r3, [pc, #116]	; (8006828 <MX_TIM1_Init+0xa0>)
 80067b4:	2200      	movs	r2, #0
 80067b6:	609a      	str	r2, [r3, #8]
 80067b8:	4b1b      	ldr	r3, [pc, #108]	; (8006828 <MX_TIM1_Init+0xa0>)
 80067ba:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80067be:	60da      	str	r2, [r3, #12]
 80067c0:	4b19      	ldr	r3, [pc, #100]	; (8006828 <MX_TIM1_Init+0xa0>)
 80067c2:	2200      	movs	r2, #0
 80067c4:	611a      	str	r2, [r3, #16]
 80067c6:	4b18      	ldr	r3, [pc, #96]	; (8006828 <MX_TIM1_Init+0xa0>)
 80067c8:	2200      	movs	r2, #0
 80067ca:	615a      	str	r2, [r3, #20]
 80067cc:	4b16      	ldr	r3, [pc, #88]	; (8006828 <MX_TIM1_Init+0xa0>)
 80067ce:	2200      	movs	r2, #0
 80067d0:	619a      	str	r2, [r3, #24]
 80067d2:	4815      	ldr	r0, [pc, #84]	; (8006828 <MX_TIM1_Init+0xa0>)
 80067d4:	f007 f966 	bl	800daa4 <HAL_TIM_Base_Init>
 80067d8:	4603      	mov	r3, r0
 80067da:	2b00      	cmp	r3, #0
 80067dc:	d001      	beq.n	80067e2 <MX_TIM1_Init+0x5a>
 80067de:	f7ff f9dd 	bl	8005b9c <Error_Handler>
 80067e2:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80067e6:	613b      	str	r3, [r7, #16]
 80067e8:	f107 0310 	add.w	r3, r7, #16
 80067ec:	4619      	mov	r1, r3
 80067ee:	480e      	ldr	r0, [pc, #56]	; (8006828 <MX_TIM1_Init+0xa0>)
 80067f0:	f007 f9af 	bl	800db52 <HAL_TIM_ConfigClockSource>
 80067f4:	4603      	mov	r3, r0
 80067f6:	2b00      	cmp	r3, #0
 80067f8:	d001      	beq.n	80067fe <MX_TIM1_Init+0x76>
 80067fa:	f7ff f9cf 	bl	8005b9c <Error_Handler>
 80067fe:	2300      	movs	r3, #0
 8006800:	607b      	str	r3, [r7, #4]
 8006802:	2300      	movs	r3, #0
 8006804:	60bb      	str	r3, [r7, #8]
 8006806:	2300      	movs	r3, #0
 8006808:	60fb      	str	r3, [r7, #12]
 800680a:	1d3b      	adds	r3, r7, #4
 800680c:	4619      	mov	r1, r3
 800680e:	4806      	ldr	r0, [pc, #24]	; (8006828 <MX_TIM1_Init+0xa0>)
 8006810:	f007 fb60 	bl	800ded4 <HAL_TIMEx_MasterConfigSynchronization>
 8006814:	4603      	mov	r3, r0
 8006816:	2b00      	cmp	r3, #0
 8006818:	d001      	beq.n	800681e <MX_TIM1_Init+0x96>
 800681a:	f7ff f9bf 	bl	8005b9c <Error_Handler>
 800681e:	bf00      	nop
 8006820:	3720      	adds	r7, #32
 8006822:	46bd      	mov	sp, r7
 8006824:	bd80      	pop	{r7, pc}
 8006826:	bf00      	nop
 8006828:	20001ea4 	.word	0x20001ea4
 800682c:	40012c00 	.word	0x40012c00

08006830 <HAL_TIM_Base_MspInit>:
 8006830:	b580      	push	{r7, lr}
 8006832:	b082      	sub	sp, #8
 8006834:	af00      	add	r7, sp, #0
 8006836:	6078      	str	r0, [r7, #4]
 8006838:	687b      	ldr	r3, [r7, #4]
 800683a:	681b      	ldr	r3, [r3, #0]
 800683c:	4a05      	ldr	r2, [pc, #20]	; (8006854 <HAL_TIM_Base_MspInit+0x24>)
 800683e:	4293      	cmp	r3, r2
 8006840:	d103      	bne.n	800684a <HAL_TIM_Base_MspInit+0x1a>
 8006842:	f44f 6000 	mov.w	r0, #2048	; 0x800
 8006846:	f7ff ff87 	bl	8006758 <LL_APB2_GRP1_EnableClock>
 800684a:	bf00      	nop
 800684c:	3708      	adds	r7, #8
 800684e:	46bd      	mov	sp, r7
 8006850:	bd80      	pop	{r7, pc}
 8006852:	bf00      	nop
 8006854:	40012c00 	.word	0x40012c00

08006858 <LL_RTC_TIME_GetSubSecond>:
 8006858:	b480      	push	{r7}
 800685a:	b083      	sub	sp, #12
 800685c:	af00      	add	r7, sp, #0
 800685e:	6078      	str	r0, [r7, #4]
 8006860:	687b      	ldr	r3, [r7, #4]
 8006862:	689b      	ldr	r3, [r3, #8]
 8006864:	4618      	mov	r0, r3
 8006866:	370c      	adds	r7, #12
 8006868:	46bd      	mov	sp, r7
 800686a:	bc80      	pop	{r7}
 800686c:	4770      	bx	lr
	...

08006870 <TIMER_IF_Init>:
 8006870:	b580      	push	{r7, lr}
 8006872:	b082      	sub	sp, #8
 8006874:	af00      	add	r7, sp, #0
 8006876:	2300      	movs	r3, #0
 8006878:	71fb      	strb	r3, [r7, #7]
 800687a:	4b14      	ldr	r3, [pc, #80]	; (80068cc <TIMER_IF_Init+0x5c>)
 800687c:	781b      	ldrb	r3, [r3, #0]
 800687e:	f083 0301 	eor.w	r3, r3, #1
 8006882:	b2db      	uxtb	r3, r3
 8006884:	2b00      	cmp	r3, #0
 8006886:	d01b      	beq.n	80068c0 <TIMER_IF_Init+0x50>
 8006888:	4b11      	ldr	r3, [pc, #68]	; (80068d0 <TIMER_IF_Init+0x60>)
 800688a:	f04f 32ff 	mov.w	r2, #4294967295
 800688e:	631a      	str	r2, [r3, #48]	; 0x30
 8006890:	f7ff f9ec 	bl	8005c6c <MX_RTC_Init>
 8006894:	f000 f856 	bl	8006944 <TIMER_IF_StopTimer>
 8006898:	f44f 7180 	mov.w	r1, #256	; 0x100
 800689c:	480c      	ldr	r0, [pc, #48]	; (80068d0 <TIMER_IF_Init+0x60>)
 800689e:	f006 fa61 	bl	800cd64 <HAL_RTC_DeactivateAlarm>
 80068a2:	4b0b      	ldr	r3, [pc, #44]	; (80068d0 <TIMER_IF_Init+0x60>)
 80068a4:	f04f 32ff 	mov.w	r2, #4294967295
 80068a8:	631a      	str	r2, [r3, #48]	; 0x30
 80068aa:	4809      	ldr	r0, [pc, #36]	; (80068d0 <TIMER_IF_Init+0x60>)
 80068ac:	f006 fb92 	bl	800cfd4 <HAL_RTCEx_EnableBypassShadow>
 80068b0:	2000      	movs	r0, #0
 80068b2:	f000 f9a7 	bl	8006c04 <TIMER_IF_BkUp_Write_MSBticks>
 80068b6:	f000 f85f 	bl	8006978 <TIMER_IF_SetTimerContext>
 80068ba:	4b04      	ldr	r3, [pc, #16]	; (80068cc <TIMER_IF_Init+0x5c>)
 80068bc:	2201      	movs	r2, #1
 80068be:	701a      	strb	r2, [r3, #0]
 80068c0:	79fb      	ldrb	r3, [r7, #7]
 80068c2:	4618      	mov	r0, r3
 80068c4:	3708      	adds	r7, #8
 80068c6:	46bd      	mov	sp, r7
 80068c8:	bd80      	pop	{r7, pc}
 80068ca:	bf00      	nop
 80068cc:	200008d8 	.word	0x200008d8
 80068d0:	20001e60 	.word	0x20001e60

080068d4 <TIMER_IF_StartTimer>:
 80068d4:	b580      	push	{r7, lr}
 80068d6:	b08e      	sub	sp, #56	; 0x38
 80068d8:	af00      	add	r7, sp, #0
 80068da:	6078      	str	r0, [r7, #4]
 80068dc:	2300      	movs	r3, #0
 80068de:	f887 3037 	strb.w	r3, [r7, #55]	; 0x37
 80068e2:	f107 0308 	add.w	r3, r7, #8
 80068e6:	222c      	movs	r2, #44	; 0x2c
 80068e8:	2100      	movs	r1, #0
 80068ea:	4618      	mov	r0, r3
 80068ec:	f01d ff6a 	bl	80247c4 <memset>
 80068f0:	f000 f828 	bl	8006944 <TIMER_IF_StopTimer>
 80068f4:	4b11      	ldr	r3, [pc, #68]	; (800693c <TIMER_IF_StartTimer+0x68>)
 80068f6:	681b      	ldr	r3, [r3, #0]
 80068f8:	687a      	ldr	r2, [r7, #4]
 80068fa:	4413      	add	r3, r2
 80068fc:	607b      	str	r3, [r7, #4]
 80068fe:	2300      	movs	r3, #0
 8006900:	627b      	str	r3, [r7, #36]	; 0x24
 8006902:	687b      	ldr	r3, [r7, #4]
 8006904:	43db      	mvns	r3, r3
 8006906:	60fb      	str	r3, [r7, #12]
 8006908:	2300      	movs	r3, #0
 800690a:	61fb      	str	r3, [r7, #28]
 800690c:	f04f 5300 	mov.w	r3, #536870912	; 0x20000000
 8006910:	623b      	str	r3, [r7, #32]
 8006912:	f44f 7380 	mov.w	r3, #256	; 0x100
 8006916:	633b      	str	r3, [r7, #48]	; 0x30
 8006918:	f107 0308 	add.w	r3, r7, #8
 800691c:	2201      	movs	r2, #1
 800691e:	4619      	mov	r1, r3
 8006920:	4807      	ldr	r0, [pc, #28]	; (8006940 <TIMER_IF_StartTimer+0x6c>)
 8006922:	f006 f921 	bl	800cb68 <HAL_RTC_SetAlarm_IT>
 8006926:	4603      	mov	r3, r0
 8006928:	2b00      	cmp	r3, #0
 800692a:	d001      	beq.n	8006930 <TIMER_IF_StartTimer+0x5c>
 800692c:	f7ff f936 	bl	8005b9c <Error_Handler>
 8006930:	f897 3037 	ldrb.w	r3, [r7, #55]	; 0x37
 8006934:	4618      	mov	r0, r3
 8006936:	3738      	adds	r7, #56	; 0x38
 8006938:	46bd      	mov	sp, r7
 800693a:	bd80      	pop	{r7, pc}
 800693c:	200008dc 	.word	0x200008dc
 8006940:	20001e60 	.word	0x20001e60

08006944 <TIMER_IF_StopTimer>:
 8006944:	b580      	push	{r7, lr}
 8006946:	b082      	sub	sp, #8
 8006948:	af00      	add	r7, sp, #0
 800694a:	2300      	movs	r3, #0
 800694c:	71fb      	strb	r3, [r7, #7]
 800694e:	4b08      	ldr	r3, [pc, #32]	; (8006970 <TIMER_IF_StopTimer+0x2c>)
 8006950:	2201      	movs	r2, #1
 8006952:	65da      	str	r2, [r3, #92]	; 0x5c
 8006954:	f44f 7180 	mov.w	r1, #256	; 0x100
 8006958:	4806      	ldr	r0, [pc, #24]	; (8006974 <TIMER_IF_StopTimer+0x30>)
 800695a:	f006 fa03 	bl	800cd64 <HAL_RTC_DeactivateAlarm>
 800695e:	4b05      	ldr	r3, [pc, #20]	; (8006974 <TIMER_IF_StopTimer+0x30>)
 8006960:	f04f 32ff 	mov.w	r2, #4294967295
 8006964:	631a      	str	r2, [r3, #48]	; 0x30
 8006966:	79fb      	ldrb	r3, [r7, #7]
 8006968:	4618      	mov	r0, r3
 800696a:	3708      	adds	r7, #8
 800696c:	46bd      	mov	sp, r7
 800696e:	bd80      	pop	{r7, pc}
 8006970:	40002800 	.word	0x40002800
 8006974:	20001e60 	.word	0x20001e60

08006978 <TIMER_IF_SetTimerContext>:
 8006978:	b580      	push	{r7, lr}
 800697a:	af00      	add	r7, sp, #0
 800697c:	f000 f962 	bl	8006c44 <GetTimerTicks>
 8006980:	4603      	mov	r3, r0
 8006982:	4a03      	ldr	r2, [pc, #12]	; (8006990 <TIMER_IF_SetTimerContext+0x18>)
 8006984:	6013      	str	r3, [r2, #0]
 8006986:	4b02      	ldr	r3, [pc, #8]	; (8006990 <TIMER_IF_SetTimerContext+0x18>)
 8006988:	681b      	ldr	r3, [r3, #0]
 800698a:	4618      	mov	r0, r3
 800698c:	bd80      	pop	{r7, pc}
 800698e:	bf00      	nop
 8006990:	200008dc 	.word	0x200008dc

08006994 <TIMER_IF_GetTimerContext>:
 8006994:	b480      	push	{r7}
 8006996:	af00      	add	r7, sp, #0
 8006998:	4b02      	ldr	r3, [pc, #8]	; (80069a4 <TIMER_IF_GetTimerContext+0x10>)
 800699a:	681b      	ldr	r3, [r3, #0]
 800699c:	4618      	mov	r0, r3
 800699e:	46bd      	mov	sp, r7
 80069a0:	bc80      	pop	{r7}
 80069a2:	4770      	bx	lr
 80069a4:	200008dc 	.word	0x200008dc

080069a8 <TIMER_IF_GetTimerElapsedTime>:
 80069a8:	b580      	push	{r7, lr}
 80069aa:	af00      	add	r7, sp, #0
 80069ac:	f000 f94a 	bl	8006c44 <GetTimerTicks>
 80069b0:	4602      	mov	r2, r0
 80069b2:	4b02      	ldr	r3, [pc, #8]	; (80069bc <TIMER_IF_GetTimerElapsedTime+0x14>)
 80069b4:	681b      	ldr	r3, [r3, #0]
 80069b6:	1ad3      	subs	r3, r2, r3
 80069b8:	4618      	mov	r0, r3
 80069ba:	bd80      	pop	{r7, pc}
 80069bc:	200008dc 	.word	0x200008dc

080069c0 <TIMER_IF_GetTimerValue>:
 80069c0:	b580      	push	{r7, lr}
 80069c2:	af00      	add	r7, sp, #0
 80069c4:	4b05      	ldr	r3, [pc, #20]	; (80069dc <TIMER_IF_GetTimerValue+0x1c>)
 80069c6:	781b      	ldrb	r3, [r3, #0]
 80069c8:	2b00      	cmp	r3, #0
 80069ca:	d003      	beq.n	80069d4 <TIMER_IF_GetTimerValue+0x14>
 80069cc:	f000 f93a 	bl	8006c44 <GetTimerTicks>
 80069d0:	4603      	mov	r3, r0
 80069d2:	e000      	b.n	80069d6 <TIMER_IF_GetTimerValue+0x16>
 80069d4:	2300      	movs	r3, #0
 80069d6:	4618      	mov	r0, r3
 80069d8:	bd80      	pop	{r7, pc}
 80069da:	bf00      	nop
 80069dc:	200008d8 	.word	0x200008d8

080069e0 <TIMER_IF_GetMinimumTimeout>:
 80069e0:	b480      	push	{r7}
 80069e2:	af00      	add	r7, sp, #0
 80069e4:	2303      	movs	r3, #3
 80069e6:	4618      	mov	r0, r3
 80069e8:	46bd      	mov	sp, r7
 80069ea:	bc80      	pop	{r7}
 80069ec:	4770      	bx	lr

080069ee <TIMER_IF_Convert_ms2Tick>:
 80069ee:	b5b0      	push	{r4, r5, r7, lr}
 80069f0:	b082      	sub	sp, #8
 80069f2:	af00      	add	r7, sp, #0
 80069f4:	6078      	str	r0, [r7, #4]
 80069f6:	687b      	ldr	r3, [r7, #4]
 80069f8:	461a      	mov	r2, r3
 80069fa:	f04f 0300 	mov.w	r3, #0
 80069fe:	0d95      	lsrs	r5, r2, #22
 8006a00:	0294      	lsls	r4, r2, #10
 8006a02:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8006a06:	f04f 0300 	mov.w	r3, #0
 8006a0a:	4620      	mov	r0, r4
 8006a0c:	4629      	mov	r1, r5
 8006a0e:	f7fa fc23 	bl	8001258 <__aeabi_uldivmod>
 8006a12:	4602      	mov	r2, r0
 8006a14:	460b      	mov	r3, r1
 8006a16:	4613      	mov	r3, r2
 8006a18:	4618      	mov	r0, r3
 8006a1a:	3708      	adds	r7, #8
 8006a1c:	46bd      	mov	sp, r7
 8006a1e:	bdb0      	pop	{r4, r5, r7, pc}

08006a20 <TIMER_IF_Convert_Tick2ms>:
 8006a20:	b4b0      	push	{r4, r5, r7}
 8006a22:	b083      	sub	sp, #12
 8006a24:	af00      	add	r7, sp, #0
 8006a26:	6078      	str	r0, [r7, #4]
 8006a28:	687b      	ldr	r3, [r7, #4]
 8006a2a:	4618      	mov	r0, r3
 8006a2c:	f04f 0100 	mov.w	r1, #0
 8006a30:	4602      	mov	r2, r0
 8006a32:	460b      	mov	r3, r1
 8006a34:	f04f 0400 	mov.w	r4, #0
 8006a38:	f04f 0500 	mov.w	r5, #0
 8006a3c:	015d      	lsls	r5, r3, #5
 8006a3e:	ea45 65d2 	orr.w	r5, r5, r2, lsr #27
 8006a42:	0154      	lsls	r4, r2, #5
 8006a44:	4622      	mov	r2, r4
 8006a46:	462b      	mov	r3, r5
 8006a48:	1a12      	subs	r2, r2, r0
 8006a4a:	eb63 0301 	sbc.w	r3, r3, r1
 8006a4e:	f04f 0400 	mov.w	r4, #0
 8006a52:	f04f 0500 	mov.w	r5, #0
 8006a56:	009d      	lsls	r5, r3, #2
 8006a58:	ea45 7592 	orr.w	r5, r5, r2, lsr #30
 8006a5c:	0094      	lsls	r4, r2, #2
 8006a5e:	4622      	mov	r2, r4
 8006a60:	462b      	mov	r3, r5
 8006a62:	1812      	adds	r2, r2, r0
 8006a64:	eb41 0303 	adc.w	r3, r1, r3
 8006a68:	f04f 0000 	mov.w	r0, #0
 8006a6c:	f04f 0100 	mov.w	r1, #0
 8006a70:	00d9      	lsls	r1, r3, #3
 8006a72:	ea41 7152 	orr.w	r1, r1, r2, lsr #29
 8006a76:	00d0      	lsls	r0, r2, #3
 8006a78:	4602      	mov	r2, r0
 8006a7a:	460b      	mov	r3, r1
 8006a7c:	4610      	mov	r0, r2
 8006a7e:	4619      	mov	r1, r3
 8006a80:	f04f 0200 	mov.w	r2, #0
 8006a84:	f04f 0300 	mov.w	r3, #0
 8006a88:	0a82      	lsrs	r2, r0, #10
 8006a8a:	ea42 5281 	orr.w	r2, r2, r1, lsl #22
 8006a8e:	0a8b      	lsrs	r3, r1, #10
 8006a90:	4613      	mov	r3, r2
 8006a92:	4618      	mov	r0, r3
 8006a94:	370c      	adds	r7, #12
 8006a96:	46bd      	mov	sp, r7
 8006a98:	bcb0      	pop	{r4, r5, r7}
 8006a9a:	4770      	bx	lr

08006a9c <TIMER_IF_DelayMs>:
 8006a9c:	b580      	push	{r7, lr}
 8006a9e:	b084      	sub	sp, #16
 8006aa0:	af00      	add	r7, sp, #0
 8006aa2:	6078      	str	r0, [r7, #4]
 8006aa4:	6878      	ldr	r0, [r7, #4]
 8006aa6:	f7ff ffa2 	bl	80069ee <TIMER_IF_Convert_ms2Tick>
 8006aaa:	60f8      	str	r0, [r7, #12]
 8006aac:	f000 f8ca 	bl	8006c44 <GetTimerTicks>
 8006ab0:	60b8      	str	r0, [r7, #8]
 8006ab2:	e000      	b.n	8006ab6 <TIMER_IF_DelayMs+0x1a>
 8006ab4:	bf00      	nop
 8006ab6:	f000 f8c5 	bl	8006c44 <GetTimerTicks>
 8006aba:	4602      	mov	r2, r0
 8006abc:	68bb      	ldr	r3, [r7, #8]
 8006abe:	1ad3      	subs	r3, r2, r3
 8006ac0:	68fa      	ldr	r2, [r7, #12]
 8006ac2:	429a      	cmp	r2, r3
 8006ac4:	d8f6      	bhi.n	8006ab4 <TIMER_IF_DelayMs+0x18>
 8006ac6:	bf00      	nop
 8006ac8:	bf00      	nop
 8006aca:	3710      	adds	r7, #16
 8006acc:	46bd      	mov	sp, r7
 8006ace:	bd80      	pop	{r7, pc}

08006ad0 <HAL_RTC_AlarmAEventCallback>:
 8006ad0:	b580      	push	{r7, lr}
 8006ad2:	b082      	sub	sp, #8
 8006ad4:	af00      	add	r7, sp, #0
 8006ad6:	6078      	str	r0, [r7, #4]
 8006ad8:	f01a fb9a 	bl	8021210 <UTIL_TIMER_IRQ_Handler>
 8006adc:	bf00      	nop
 8006ade:	3708      	adds	r7, #8
 8006ae0:	46bd      	mov	sp, r7
 8006ae2:	bd80      	pop	{r7, pc}

08006ae4 <HAL_RTCEx_SSRUEventCallback>:
 8006ae4:	b580      	push	{r7, lr}
 8006ae6:	b084      	sub	sp, #16
 8006ae8:	af00      	add	r7, sp, #0
 8006aea:	6078      	str	r0, [r7, #4]
 8006aec:	f000 f89a 	bl	8006c24 <TIMER_IF_BkUp_Read_MSBticks>
 8006af0:	60f8      	str	r0, [r7, #12]
 8006af2:	68fb      	ldr	r3, [r7, #12]
 8006af4:	3301      	adds	r3, #1
 8006af6:	4618      	mov	r0, r3
 8006af8:	f000 f884 	bl	8006c04 <TIMER_IF_BkUp_Write_MSBticks>
 8006afc:	bf00      	nop
 8006afe:	3710      	adds	r7, #16
 8006b00:	46bd      	mov	sp, r7
 8006b02:	bd80      	pop	{r7, pc}

08006b04 <TIMER_IF_GetTime>:
 8006b04:	e92d 43b0 	stmdb	sp!, {r4, r5, r7, r8, r9, lr}
 8006b08:	b088      	sub	sp, #32
 8006b0a:	af00      	add	r7, sp, #0
 8006b0c:	6078      	str	r0, [r7, #4]
 8006b0e:	f000 f899 	bl	8006c44 <GetTimerTicks>
 8006b12:	61f8      	str	r0, [r7, #28]
 8006b14:	f000 f886 	bl	8006c24 <TIMER_IF_BkUp_Read_MSBticks>
 8006b18:	61b8      	str	r0, [r7, #24]
 8006b1a:	69bb      	ldr	r3, [r7, #24]
 8006b1c:	4618      	mov	r0, r3
 8006b1e:	f04f 0100 	mov.w	r1, #0
 8006b22:	f04f 0200 	mov.w	r2, #0
 8006b26:	f04f 0300 	mov.w	r3, #0
 8006b2a:	0003      	movs	r3, r0
 8006b2c:	2200      	movs	r2, #0
 8006b2e:	69f9      	ldr	r1, [r7, #28]
 8006b30:	4608      	mov	r0, r1
 8006b32:	f04f 0100 	mov.w	r1, #0
 8006b36:	eb12 0800 	adds.w	r8, r2, r0
 8006b3a:	eb43 0901 	adc.w	r9, r3, r1
 8006b3e:	e9c7 8904 	strd	r8, r9, [r7, #16]
 8006b42:	e9d7 0104 	ldrd	r0, r1, [r7, #16]
 8006b46:	f04f 0200 	mov.w	r2, #0
 8006b4a:	f04f 0300 	mov.w	r3, #0
 8006b4e:	0a82      	lsrs	r2, r0, #10
 8006b50:	ea42 5281 	orr.w	r2, r2, r1, lsl #22
 8006b54:	0a8b      	lsrs	r3, r1, #10
 8006b56:	4613      	mov	r3, r2
 8006b58:	60fb      	str	r3, [r7, #12]
 8006b5a:	693b      	ldr	r3, [r7, #16]
 8006b5c:	461a      	mov	r2, r3
 8006b5e:	f04f 0300 	mov.w	r3, #0
 8006b62:	f240 30ff 	movw	r0, #1023	; 0x3ff
 8006b66:	f04f 0100 	mov.w	r1, #0
 8006b6a:	ea02 0400 	and.w	r4, r2, r0
 8006b6e:	ea03 0501 	and.w	r5, r3, r1
 8006b72:	e9c7 4504 	strd	r4, r5, [r7, #16]
 8006b76:	693b      	ldr	r3, [r7, #16]
 8006b78:	4618      	mov	r0, r3
 8006b7a:	f7ff ff51 	bl	8006a20 <TIMER_IF_Convert_Tick2ms>
 8006b7e:	4603      	mov	r3, r0
 8006b80:	b29a      	uxth	r2, r3
 8006b82:	687b      	ldr	r3, [r7, #4]
 8006b84:	801a      	strh	r2, [r3, #0]
 8006b86:	68fb      	ldr	r3, [r7, #12]
 8006b88:	4618      	mov	r0, r3
 8006b8a:	3720      	adds	r7, #32
 8006b8c:	46bd      	mov	sp, r7
 8006b8e:	e8bd 83b0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, pc}
	...

08006b94 <TIMER_IF_BkUp_Write_Seconds>:
 8006b94:	b580      	push	{r7, lr}
 8006b96:	b082      	sub	sp, #8
 8006b98:	af00      	add	r7, sp, #0
 8006b9a:	6078      	str	r0, [r7, #4]
 8006b9c:	687a      	ldr	r2, [r7, #4]
 8006b9e:	2100      	movs	r1, #0
 8006ba0:	4803      	ldr	r0, [pc, #12]	; (8006bb0 <TIMER_IF_BkUp_Write_Seconds+0x1c>)
 8006ba2:	f006 faa9 	bl	800d0f8 <HAL_RTCEx_BKUPWrite>
 8006ba6:	bf00      	nop
 8006ba8:	3708      	adds	r7, #8
 8006baa:	46bd      	mov	sp, r7
 8006bac:	bd80      	pop	{r7, pc}
 8006bae:	bf00      	nop
 8006bb0:	20001e60 	.word	0x20001e60

08006bb4 <TIMER_IF_BkUp_Write_SubSeconds>:
 8006bb4:	b580      	push	{r7, lr}
 8006bb6:	b082      	sub	sp, #8
 8006bb8:	af00      	add	r7, sp, #0
 8006bba:	6078      	str	r0, [r7, #4]
 8006bbc:	687a      	ldr	r2, [r7, #4]
 8006bbe:	2101      	movs	r1, #1
 8006bc0:	4803      	ldr	r0, [pc, #12]	; (8006bd0 <TIMER_IF_BkUp_Write_SubSeconds+0x1c>)
 8006bc2:	f006 fa99 	bl	800d0f8 <HAL_RTCEx_BKUPWrite>
 8006bc6:	bf00      	nop
 8006bc8:	3708      	adds	r7, #8
 8006bca:	46bd      	mov	sp, r7
 8006bcc:	bd80      	pop	{r7, pc}
 8006bce:	bf00      	nop
 8006bd0:	20001e60 	.word	0x20001e60

08006bd4 <TIMER_IF_BkUp_Read_Seconds>:
 8006bd4:	b580      	push	{r7, lr}
 8006bd6:	af00      	add	r7, sp, #0
 8006bd8:	2100      	movs	r1, #0
 8006bda:	4803      	ldr	r0, [pc, #12]	; (8006be8 <TIMER_IF_BkUp_Read_Seconds+0x14>)
 8006bdc:	f006 faa4 	bl	800d128 <HAL_RTCEx_BKUPRead>
 8006be0:	4603      	mov	r3, r0
 8006be2:	4618      	mov	r0, r3
 8006be4:	bd80      	pop	{r7, pc}
 8006be6:	bf00      	nop
 8006be8:	20001e60 	.word	0x20001e60

08006bec <TIMER_IF_BkUp_Read_SubSeconds>:
 8006bec:	b580      	push	{r7, lr}
 8006bee:	af00      	add	r7, sp, #0
 8006bf0:	2101      	movs	r1, #1
 8006bf2:	4803      	ldr	r0, [pc, #12]	; (8006c00 <TIMER_IF_BkUp_Read_SubSeconds+0x14>)
 8006bf4:	f006 fa98 	bl	800d128 <HAL_RTCEx_BKUPRead>
 8006bf8:	4603      	mov	r3, r0
 8006bfa:	4618      	mov	r0, r3
 8006bfc:	bd80      	pop	{r7, pc}
 8006bfe:	bf00      	nop
 8006c00:	20001e60 	.word	0x20001e60

08006c04 <TIMER_IF_BkUp_Write_MSBticks>:
 8006c04:	b580      	push	{r7, lr}
 8006c06:	b082      	sub	sp, #8
 8006c08:	af00      	add	r7, sp, #0
 8006c0a:	6078      	str	r0, [r7, #4]
 8006c0c:	687a      	ldr	r2, [r7, #4]
 8006c0e:	2102      	movs	r1, #2
 8006c10:	4803      	ldr	r0, [pc, #12]	; (8006c20 <TIMER_IF_BkUp_Write_MSBticks+0x1c>)
 8006c12:	f006 fa71 	bl	800d0f8 <HAL_RTCEx_BKUPWrite>
 8006c16:	bf00      	nop
 8006c18:	3708      	adds	r7, #8
 8006c1a:	46bd      	mov	sp, r7
 8006c1c:	bd80      	pop	{r7, pc}
 8006c1e:	bf00      	nop
 8006c20:	20001e60 	.word	0x20001e60

08006c24 <TIMER_IF_BkUp_Read_MSBticks>:
 8006c24:	b580      	push	{r7, lr}
 8006c26:	b082      	sub	sp, #8
 8006c28:	af00      	add	r7, sp, #0
 8006c2a:	2102      	movs	r1, #2
 8006c2c:	4804      	ldr	r0, [pc, #16]	; (8006c40 <TIMER_IF_BkUp_Read_MSBticks+0x1c>)
 8006c2e:	f006 fa7b 	bl	800d128 <HAL_RTCEx_BKUPRead>
 8006c32:	6078      	str	r0, [r7, #4]
 8006c34:	687b      	ldr	r3, [r7, #4]
 8006c36:	4618      	mov	r0, r3
 8006c38:	3708      	adds	r7, #8
 8006c3a:	46bd      	mov	sp, r7
 8006c3c:	bd80      	pop	{r7, pc}
 8006c3e:	bf00      	nop
 8006c40:	20001e60 	.word	0x20001e60

08006c44 <GetTimerTicks>:
 8006c44:	b580      	push	{r7, lr}
 8006c46:	af00      	add	r7, sp, #0
 8006c48:	4803      	ldr	r0, [pc, #12]	; (8006c58 <GetTimerTicks+0x14>)
 8006c4a:	f7ff fe05 	bl	8006858 <LL_RTC_TIME_GetSubSecond>
 8006c4e:	4603      	mov	r3, r0
 8006c50:	43db      	mvns	r3, r3
 8006c52:	4618      	mov	r0, r3
 8006c54:	bd80      	pop	{r7, pc}
 8006c56:	bf00      	nop
 8006c58:	40002800 	.word	0x40002800

08006c5c <LL_AHB2_GRP1_EnableClock>:
 8006c5c:	b480      	push	{r7}
 8006c5e:	b085      	sub	sp, #20
 8006c60:	af00      	add	r7, sp, #0
 8006c62:	6078      	str	r0, [r7, #4]
 8006c64:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8006c68:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 8006c6a:	f04f 41b0 	mov.w	r1, #1476395008	; 0x58000000
 8006c6e:	687b      	ldr	r3, [r7, #4]
 8006c70:	4313      	orrs	r3, r2
 8006c72:	64cb      	str	r3, [r1, #76]	; 0x4c
 8006c74:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8006c78:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 8006c7a:	687b      	ldr	r3, [r7, #4]
 8006c7c:	4013      	ands	r3, r2
 8006c7e:	60fb      	str	r3, [r7, #12]
 8006c80:	68fb      	ldr	r3, [r7, #12]
 8006c82:	bf00      	nop
 8006c84:	3714      	adds	r7, #20
 8006c86:	46bd      	mov	sp, r7
 8006c88:	bc80      	pop	{r7}
 8006c8a:	4770      	bx	lr

08006c8c <LL_APB1_GRP1_EnableClock>:
 8006c8c:	b480      	push	{r7}
 8006c8e:	b085      	sub	sp, #20
 8006c90:	af00      	add	r7, sp, #0
 8006c92:	6078      	str	r0, [r7, #4]
 8006c94:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8006c98:	6d9a      	ldr	r2, [r3, #88]	; 0x58
 8006c9a:	f04f 41b0 	mov.w	r1, #1476395008	; 0x58000000
 8006c9e:	687b      	ldr	r3, [r7, #4]
 8006ca0:	4313      	orrs	r3, r2
 8006ca2:	658b      	str	r3, [r1, #88]	; 0x58
 8006ca4:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8006ca8:	6d9a      	ldr	r2, [r3, #88]	; 0x58
 8006caa:	687b      	ldr	r3, [r7, #4]
 8006cac:	4013      	ands	r3, r2
 8006cae:	60fb      	str	r3, [r7, #12]
 8006cb0:	68fb      	ldr	r3, [r7, #12]
 8006cb2:	bf00      	nop
 8006cb4:	3714      	adds	r7, #20
 8006cb6:	46bd      	mov	sp, r7
 8006cb8:	bc80      	pop	{r7}
 8006cba:	4770      	bx	lr

08006cbc <LL_APB1_GRP1_DisableClock>:
 8006cbc:	b480      	push	{r7}
 8006cbe:	b083      	sub	sp, #12
 8006cc0:	af00      	add	r7, sp, #0
 8006cc2:	6078      	str	r0, [r7, #4]
 8006cc4:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8006cc8:	6d9a      	ldr	r2, [r3, #88]	; 0x58
 8006cca:	687b      	ldr	r3, [r7, #4]
 8006ccc:	43db      	mvns	r3, r3
 8006cce:	f04f 41b0 	mov.w	r1, #1476395008	; 0x58000000
 8006cd2:	4013      	ands	r3, r2
 8006cd4:	658b      	str	r3, [r1, #88]	; 0x58
 8006cd6:	bf00      	nop
 8006cd8:	370c      	adds	r7, #12
 8006cda:	46bd      	mov	sp, r7
 8006cdc:	bc80      	pop	{r7}
 8006cde:	4770      	bx	lr

08006ce0 <MX_USART2_UART_Init>:
 8006ce0:	b580      	push	{r7, lr}
 8006ce2:	af00      	add	r7, sp, #0
 8006ce4:	4b22      	ldr	r3, [pc, #136]	; (8006d70 <MX_USART2_UART_Init+0x90>)
 8006ce6:	4a23      	ldr	r2, [pc, #140]	; (8006d74 <MX_USART2_UART_Init+0x94>)
 8006ce8:	601a      	str	r2, [r3, #0]
 8006cea:	4b21      	ldr	r3, [pc, #132]	; (8006d70 <MX_USART2_UART_Init+0x90>)
 8006cec:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 8006cf0:	605a      	str	r2, [r3, #4]
 8006cf2:	4b1f      	ldr	r3, [pc, #124]	; (8006d70 <MX_USART2_UART_Init+0x90>)
 8006cf4:	2200      	movs	r2, #0
 8006cf6:	609a      	str	r2, [r3, #8]
 8006cf8:	4b1d      	ldr	r3, [pc, #116]	; (8006d70 <MX_USART2_UART_Init+0x90>)
 8006cfa:	2200      	movs	r2, #0
 8006cfc:	60da      	str	r2, [r3, #12]
 8006cfe:	4b1c      	ldr	r3, [pc, #112]	; (8006d70 <MX_USART2_UART_Init+0x90>)
 8006d00:	2200      	movs	r2, #0
 8006d02:	611a      	str	r2, [r3, #16]
 8006d04:	4b1a      	ldr	r3, [pc, #104]	; (8006d70 <MX_USART2_UART_Init+0x90>)
 8006d06:	220c      	movs	r2, #12
 8006d08:	615a      	str	r2, [r3, #20]
 8006d0a:	4b19      	ldr	r3, [pc, #100]	; (8006d70 <MX_USART2_UART_Init+0x90>)
 8006d0c:	2200      	movs	r2, #0
 8006d0e:	619a      	str	r2, [r3, #24]
 8006d10:	4b17      	ldr	r3, [pc, #92]	; (8006d70 <MX_USART2_UART_Init+0x90>)
 8006d12:	2200      	movs	r2, #0
 8006d14:	61da      	str	r2, [r3, #28]
 8006d16:	4b16      	ldr	r3, [pc, #88]	; (8006d70 <MX_USART2_UART_Init+0x90>)
 8006d18:	2200      	movs	r2, #0
 8006d1a:	621a      	str	r2, [r3, #32]
 8006d1c:	4b14      	ldr	r3, [pc, #80]	; (8006d70 <MX_USART2_UART_Init+0x90>)
 8006d1e:	2200      	movs	r2, #0
 8006d20:	625a      	str	r2, [r3, #36]	; 0x24
 8006d22:	4b13      	ldr	r3, [pc, #76]	; (8006d70 <MX_USART2_UART_Init+0x90>)
 8006d24:	2200      	movs	r2, #0
 8006d26:	629a      	str	r2, [r3, #40]	; 0x28
 8006d28:	4811      	ldr	r0, [pc, #68]	; (8006d70 <MX_USART2_UART_Init+0x90>)
 8006d2a:	f007 f952 	bl	800dfd2 <HAL_UART_Init>
 8006d2e:	4603      	mov	r3, r0
 8006d30:	2b00      	cmp	r3, #0
 8006d32:	d001      	beq.n	8006d38 <MX_USART2_UART_Init+0x58>
 8006d34:	f7fe ff32 	bl	8005b9c <Error_Handler>
 8006d38:	2100      	movs	r1, #0
 8006d3a:	480d      	ldr	r0, [pc, #52]	; (8006d70 <MX_USART2_UART_Init+0x90>)
 8006d3c:	f008 fdb6 	bl	800f8ac <HAL_UARTEx_SetTxFifoThreshold>
 8006d40:	4603      	mov	r3, r0
 8006d42:	2b00      	cmp	r3, #0
 8006d44:	d001      	beq.n	8006d4a <MX_USART2_UART_Init+0x6a>
 8006d46:	f7fe ff29 	bl	8005b9c <Error_Handler>
 8006d4a:	2100      	movs	r1, #0
 8006d4c:	4808      	ldr	r0, [pc, #32]	; (8006d70 <MX_USART2_UART_Init+0x90>)
 8006d4e:	f008 fdeb 	bl	800f928 <HAL_UARTEx_SetRxFifoThreshold>
 8006d52:	4603      	mov	r3, r0
 8006d54:	2b00      	cmp	r3, #0
 8006d56:	d001      	beq.n	8006d5c <MX_USART2_UART_Init+0x7c>
 8006d58:	f7fe ff20 	bl	8005b9c <Error_Handler>
 8006d5c:	4804      	ldr	r0, [pc, #16]	; (8006d70 <MX_USART2_UART_Init+0x90>)
 8006d5e:	f008 fd6a 	bl	800f836 <HAL_UARTEx_EnableFifoMode>
 8006d62:	4603      	mov	r3, r0
 8006d64:	2b00      	cmp	r3, #0
 8006d66:	d001      	beq.n	8006d6c <MX_USART2_UART_Init+0x8c>
 8006d68:	f7fe ff18 	bl	8005b9c <Error_Handler>
 8006d6c:	bf00      	nop
 8006d6e:	bd80      	pop	{r7, pc}
 8006d70:	20001f50 	.word	0x20001f50
 8006d74:	40004400 	.word	0x40004400

08006d78 <HAL_UART_MspInit>:
 8006d78:	b580      	push	{r7, lr}
 8006d7a:	b096      	sub	sp, #88	; 0x58
 8006d7c:	af00      	add	r7, sp, #0
 8006d7e:	6078      	str	r0, [r7, #4]
 8006d80:	f107 0344 	add.w	r3, r7, #68	; 0x44
 8006d84:	2200      	movs	r2, #0
 8006d86:	601a      	str	r2, [r3, #0]
 8006d88:	605a      	str	r2, [r3, #4]
 8006d8a:	609a      	str	r2, [r3, #8]
 8006d8c:	60da      	str	r2, [r3, #12]
 8006d8e:	611a      	str	r2, [r3, #16]
 8006d90:	f107 030c 	add.w	r3, r7, #12
 8006d94:	2238      	movs	r2, #56	; 0x38
 8006d96:	2100      	movs	r1, #0
 8006d98:	4618      	mov	r0, r3
 8006d9a:	f01d fd13 	bl	80247c4 <memset>
 8006d9e:	687b      	ldr	r3, [r7, #4]
 8006da0:	681b      	ldr	r3, [r3, #0]
 8006da2:	4a33      	ldr	r2, [pc, #204]	; (8006e70 <HAL_UART_MspInit+0xf8>)
 8006da4:	4293      	cmp	r3, r2
 8006da6:	d15f      	bne.n	8006e68 <HAL_UART_MspInit+0xf0>
 8006da8:	2302      	movs	r3, #2
 8006daa:	60fb      	str	r3, [r7, #12]
 8006dac:	4b31      	ldr	r3, [pc, #196]	; (8006e74 <HAL_UART_MspInit+0xfc>)
 8006dae:	617b      	str	r3, [r7, #20]
 8006db0:	f107 030c 	add.w	r3, r7, #12
 8006db4:	4618      	mov	r0, r3
 8006db6:	f005 fd43 	bl	800c840 <HAL_RCCEx_PeriphCLKConfig>
 8006dba:	4603      	mov	r3, r0
 8006dbc:	2b00      	cmp	r3, #0
 8006dbe:	d001      	beq.n	8006dc4 <HAL_UART_MspInit+0x4c>
 8006dc0:	f7fe feec 	bl	8005b9c <Error_Handler>
 8006dc4:	f44f 3000 	mov.w	r0, #131072	; 0x20000
 8006dc8:	f7ff ff60 	bl	8006c8c <LL_APB1_GRP1_EnableClock>
 8006dcc:	2001      	movs	r0, #1
 8006dce:	f7ff ff45 	bl	8006c5c <LL_AHB2_GRP1_EnableClock>
 8006dd2:	230c      	movs	r3, #12
 8006dd4:	647b      	str	r3, [r7, #68]	; 0x44
 8006dd6:	2302      	movs	r3, #2
 8006dd8:	64bb      	str	r3, [r7, #72]	; 0x48
 8006dda:	2300      	movs	r3, #0
 8006ddc:	64fb      	str	r3, [r7, #76]	; 0x4c
 8006dde:	2303      	movs	r3, #3
 8006de0:	653b      	str	r3, [r7, #80]	; 0x50
 8006de2:	2307      	movs	r3, #7
 8006de4:	657b      	str	r3, [r7, #84]	; 0x54
 8006de6:	f107 0344 	add.w	r3, r7, #68	; 0x44
 8006dea:	4619      	mov	r1, r3
 8006dec:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 8006df0:	f001 ff3e 	bl	8008c70 <HAL_GPIO_Init>
 8006df4:	4b20      	ldr	r3, [pc, #128]	; (8006e78 <HAL_UART_MspInit+0x100>)
 8006df6:	4a21      	ldr	r2, [pc, #132]	; (8006e7c <HAL_UART_MspInit+0x104>)
 8006df8:	601a      	str	r2, [r3, #0]
 8006dfa:	4b1f      	ldr	r3, [pc, #124]	; (8006e78 <HAL_UART_MspInit+0x100>)
 8006dfc:	2214      	movs	r2, #20
 8006dfe:	605a      	str	r2, [r3, #4]
 8006e00:	4b1d      	ldr	r3, [pc, #116]	; (8006e78 <HAL_UART_MspInit+0x100>)
 8006e02:	2210      	movs	r2, #16
 8006e04:	609a      	str	r2, [r3, #8]
 8006e06:	4b1c      	ldr	r3, [pc, #112]	; (8006e78 <HAL_UART_MspInit+0x100>)
 8006e08:	2200      	movs	r2, #0
 8006e0a:	60da      	str	r2, [r3, #12]
 8006e0c:	4b1a      	ldr	r3, [pc, #104]	; (8006e78 <HAL_UART_MspInit+0x100>)
 8006e0e:	2280      	movs	r2, #128	; 0x80
 8006e10:	611a      	str	r2, [r3, #16]
 8006e12:	4b19      	ldr	r3, [pc, #100]	; (8006e78 <HAL_UART_MspInit+0x100>)
 8006e14:	2200      	movs	r2, #0
 8006e16:	615a      	str	r2, [r3, #20]
 8006e18:	4b17      	ldr	r3, [pc, #92]	; (8006e78 <HAL_UART_MspInit+0x100>)
 8006e1a:	2200      	movs	r2, #0
 8006e1c:	619a      	str	r2, [r3, #24]
 8006e1e:	4b16      	ldr	r3, [pc, #88]	; (8006e78 <HAL_UART_MspInit+0x100>)
 8006e20:	2200      	movs	r2, #0
 8006e22:	61da      	str	r2, [r3, #28]
 8006e24:	4b14      	ldr	r3, [pc, #80]	; (8006e78 <HAL_UART_MspInit+0x100>)
 8006e26:	2200      	movs	r2, #0
 8006e28:	621a      	str	r2, [r3, #32]
 8006e2a:	4813      	ldr	r0, [pc, #76]	; (8006e78 <HAL_UART_MspInit+0x100>)
 8006e2c:	f001 face 	bl	80083cc <HAL_DMA_Init>
 8006e30:	4603      	mov	r3, r0
 8006e32:	2b00      	cmp	r3, #0
 8006e34:	d001      	beq.n	8006e3a <HAL_UART_MspInit+0xc2>
 8006e36:	f7fe feb1 	bl	8005b9c <Error_Handler>
 8006e3a:	2110      	movs	r1, #16
 8006e3c:	480e      	ldr	r0, [pc, #56]	; (8006e78 <HAL_UART_MspInit+0x100>)
 8006e3e:	f001 fe12 	bl	8008a66 <HAL_DMA_ConfigChannelAttributes>
 8006e42:	4603      	mov	r3, r0
 8006e44:	2b00      	cmp	r3, #0
 8006e46:	d001      	beq.n	8006e4c <HAL_UART_MspInit+0xd4>
 8006e48:	f7fe fea8 	bl	8005b9c <Error_Handler>
 8006e4c:	687b      	ldr	r3, [r7, #4]
 8006e4e:	4a0a      	ldr	r2, [pc, #40]	; (8006e78 <HAL_UART_MspInit+0x100>)
 8006e50:	679a      	str	r2, [r3, #120]	; 0x78
 8006e52:	4a09      	ldr	r2, [pc, #36]	; (8006e78 <HAL_UART_MspInit+0x100>)
 8006e54:	687b      	ldr	r3, [r7, #4]
 8006e56:	6293      	str	r3, [r2, #40]	; 0x28
 8006e58:	2200      	movs	r2, #0
 8006e5a:	2102      	movs	r1, #2
 8006e5c:	2025      	movs	r0, #37	; 0x25
 8006e5e:	f001 fa7e 	bl	800835e <HAL_NVIC_SetPriority>
 8006e62:	2025      	movs	r0, #37	; 0x25
 8006e64:	f001 fa95 	bl	8008392 <HAL_NVIC_EnableIRQ>
 8006e68:	bf00      	nop
 8006e6a:	3758      	adds	r7, #88	; 0x58
 8006e6c:	46bd      	mov	sp, r7
 8006e6e:	bd80      	pop	{r7, pc}
 8006e70:	40004400 	.word	0x40004400
 8006e74:	000c0004 	.word	0x000c0004
 8006e78:	20001ef0 	.word	0x20001ef0
 8006e7c:	40020058 	.word	0x40020058

08006e80 <HAL_UART_MspDeInit>:
 8006e80:	b580      	push	{r7, lr}
 8006e82:	b082      	sub	sp, #8
 8006e84:	af00      	add	r7, sp, #0
 8006e86:	6078      	str	r0, [r7, #4]
 8006e88:	687b      	ldr	r3, [r7, #4]
 8006e8a:	681b      	ldr	r3, [r3, #0]
 8006e8c:	4a0b      	ldr	r2, [pc, #44]	; (8006ebc <HAL_UART_MspDeInit+0x3c>)
 8006e8e:	4293      	cmp	r3, r2
 8006e90:	d110      	bne.n	8006eb4 <HAL_UART_MspDeInit+0x34>
 8006e92:	f44f 3000 	mov.w	r0, #131072	; 0x20000
 8006e96:	f7ff ff11 	bl	8006cbc <LL_APB1_GRP1_DisableClock>
 8006e9a:	210c      	movs	r1, #12
 8006e9c:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 8006ea0:	f002 f846 	bl	8008f30 <HAL_GPIO_DeInit>
 8006ea4:	687b      	ldr	r3, [r7, #4]
 8006ea6:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8006ea8:	4618      	mov	r0, r3
 8006eaa:	f001 fb37 	bl	800851c <HAL_DMA_DeInit>
 8006eae:	2025      	movs	r0, #37	; 0x25
 8006eb0:	f001 fa7d 	bl	80083ae <HAL_NVIC_DisableIRQ>
 8006eb4:	bf00      	nop
 8006eb6:	3708      	adds	r7, #8
 8006eb8:	46bd      	mov	sp, r7
 8006eba:	bd80      	pop	{r7, pc}
 8006ebc:	40004400 	.word	0x40004400

08006ec0 <LL_APB1_GRP1_ForceReset>:
 8006ec0:	b480      	push	{r7}
 8006ec2:	b083      	sub	sp, #12
 8006ec4:	af00      	add	r7, sp, #0
 8006ec6:	6078      	str	r0, [r7, #4]
 8006ec8:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8006ecc:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8006ece:	f04f 41b0 	mov.w	r1, #1476395008	; 0x58000000
 8006ed2:	687b      	ldr	r3, [r7, #4]
 8006ed4:	4313      	orrs	r3, r2
 8006ed6:	638b      	str	r3, [r1, #56]	; 0x38
 8006ed8:	bf00      	nop
 8006eda:	370c      	adds	r7, #12
 8006edc:	46bd      	mov	sp, r7
 8006ede:	bc80      	pop	{r7}
 8006ee0:	4770      	bx	lr

08006ee2 <LL_APB1_GRP1_ReleaseReset>:
 8006ee2:	b480      	push	{r7}
 8006ee4:	b083      	sub	sp, #12
 8006ee6:	af00      	add	r7, sp, #0
 8006ee8:	6078      	str	r0, [r7, #4]
 8006eea:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8006eee:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8006ef0:	687b      	ldr	r3, [r7, #4]
 8006ef2:	43db      	mvns	r3, r3
 8006ef4:	f04f 41b0 	mov.w	r1, #1476395008	; 0x58000000
 8006ef8:	4013      	ands	r3, r2
 8006efa:	638b      	str	r3, [r1, #56]	; 0x38
 8006efc:	bf00      	nop
 8006efe:	370c      	adds	r7, #12
 8006f00:	46bd      	mov	sp, r7
 8006f02:	bc80      	pop	{r7}
 8006f04:	4770      	bx	lr
	...

08006f08 <LL_EXTI_EnableIT_0_31>:
 8006f08:	b480      	push	{r7}
 8006f0a:	b083      	sub	sp, #12
 8006f0c:	af00      	add	r7, sp, #0
 8006f0e:	6078      	str	r0, [r7, #4]
 8006f10:	4b06      	ldr	r3, [pc, #24]	; (8006f2c <LL_EXTI_EnableIT_0_31+0x24>)
 8006f12:	f8d3 2080 	ldr.w	r2, [r3, #128]	; 0x80
 8006f16:	4905      	ldr	r1, [pc, #20]	; (8006f2c <LL_EXTI_EnableIT_0_31+0x24>)
 8006f18:	687b      	ldr	r3, [r7, #4]
 8006f1a:	4313      	orrs	r3, r2
 8006f1c:	f8c1 3080 	str.w	r3, [r1, #128]	; 0x80
 8006f20:	bf00      	nop
 8006f22:	370c      	adds	r7, #12
 8006f24:	46bd      	mov	sp, r7
 8006f26:	bc80      	pop	{r7}
 8006f28:	4770      	bx	lr
 8006f2a:	bf00      	nop
 8006f2c:	58000800 	.word	0x58000800

08006f30 <vcom_Init>:
 8006f30:	b580      	push	{r7, lr}
 8006f32:	b082      	sub	sp, #8
 8006f34:	af00      	add	r7, sp, #0
 8006f36:	6078      	str	r0, [r7, #4]
 8006f38:	4a07      	ldr	r2, [pc, #28]	; (8006f58 <vcom_Init+0x28>)
 8006f3a:	687b      	ldr	r3, [r7, #4]
 8006f3c:	6013      	str	r3, [r2, #0]
 8006f3e:	f7fe f834 	bl	8004faa <MX_DMA_Init>
 8006f42:	f7ff fecd 	bl	8006ce0 <MX_USART2_UART_Init>
 8006f46:	f04f 6000 	mov.w	r0, #134217728	; 0x8000000
 8006f4a:	f7ff ffdd 	bl	8006f08 <LL_EXTI_EnableIT_0_31>
 8006f4e:	2300      	movs	r3, #0
 8006f50:	4618      	mov	r0, r3
 8006f52:	3708      	adds	r7, #8
 8006f54:	46bd      	mov	sp, r7
 8006f56:	bd80      	pop	{r7, pc}
 8006f58:	200008e0 	.word	0x200008e0

08006f5c <vcom_DeInit>:
 8006f5c:	b580      	push	{r7, lr}
 8006f5e:	af00      	add	r7, sp, #0
 8006f60:	f44f 3000 	mov.w	r0, #131072	; 0x20000
 8006f64:	f7ff ffac 	bl	8006ec0 <LL_APB1_GRP1_ForceReset>
 8006f68:	f44f 3000 	mov.w	r0, #131072	; 0x20000
 8006f6c:	f7ff ffb9 	bl	8006ee2 <LL_APB1_GRP1_ReleaseReset>
 8006f70:	4804      	ldr	r0, [pc, #16]	; (8006f84 <vcom_DeInit+0x28>)
 8006f72:	f7ff ff85 	bl	8006e80 <HAL_UART_MspDeInit>
 8006f76:	200f      	movs	r0, #15
 8006f78:	f001 fa19 	bl	80083ae <HAL_NVIC_DisableIRQ>
 8006f7c:	2300      	movs	r3, #0
 8006f7e:	4618      	mov	r0, r3
 8006f80:	bd80      	pop	{r7, pc}
 8006f82:	bf00      	nop
 8006f84:	20001f50 	.word	0x20001f50

08006f88 <vcom_Trace_DMA>:
 8006f88:	b580      	push	{r7, lr}
 8006f8a:	b082      	sub	sp, #8
 8006f8c:	af00      	add	r7, sp, #0
 8006f8e:	6078      	str	r0, [r7, #4]
 8006f90:	460b      	mov	r3, r1
 8006f92:	807b      	strh	r3, [r7, #2]
 8006f94:	887b      	ldrh	r3, [r7, #2]
 8006f96:	461a      	mov	r2, r3
 8006f98:	6879      	ldr	r1, [r7, #4]
 8006f9a:	4804      	ldr	r0, [pc, #16]	; (8006fac <vcom_Trace_DMA+0x24>)
 8006f9c:	f007 f898 	bl	800e0d0 <HAL_UART_Transmit_DMA>
 8006fa0:	2300      	movs	r3, #0
 8006fa2:	4618      	mov	r0, r3
 8006fa4:	3708      	adds	r7, #8
 8006fa6:	46bd      	mov	sp, r7
 8006fa8:	bd80      	pop	{r7, pc}
 8006faa:	bf00      	nop
 8006fac:	20001f50 	.word	0x20001f50

08006fb0 <vcom_ReceiveInit>:
 8006fb0:	b580      	push	{r7, lr}
 8006fb2:	b084      	sub	sp, #16
 8006fb4:	af00      	add	r7, sp, #0
 8006fb6:	6078      	str	r0, [r7, #4]
 8006fb8:	4a19      	ldr	r2, [pc, #100]	; (8007020 <vcom_ReceiveInit+0x70>)
 8006fba:	687b      	ldr	r3, [r7, #4]
 8006fbc:	6013      	str	r3, [r2, #0]
 8006fbe:	f44f 1300 	mov.w	r3, #2097152	; 0x200000
 8006fc2:	60bb      	str	r3, [r7, #8]
 8006fc4:	f107 0308 	add.w	r3, r7, #8
 8006fc8:	e893 0006 	ldmia.w	r3, {r1, r2}
 8006fcc:	4815      	ldr	r0, [pc, #84]	; (8007024 <vcom_ReceiveInit+0x74>)
 8006fce:	f008 fbb6 	bl	800f73e <HAL_UARTEx_StopModeWakeUpSourceConfig>
 8006fd2:	bf00      	nop
 8006fd4:	4b13      	ldr	r3, [pc, #76]	; (8007024 <vcom_ReceiveInit+0x74>)
 8006fd6:	681b      	ldr	r3, [r3, #0]
 8006fd8:	69db      	ldr	r3, [r3, #28]
 8006fda:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8006fde:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8006fe2:	d0f7      	beq.n	8006fd4 <vcom_ReceiveInit+0x24>
 8006fe4:	bf00      	nop
 8006fe6:	4b0f      	ldr	r3, [pc, #60]	; (8007024 <vcom_ReceiveInit+0x74>)
 8006fe8:	681b      	ldr	r3, [r3, #0]
 8006fea:	69db      	ldr	r3, [r3, #28]
 8006fec:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8006ff0:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 8006ff4:	d1f7      	bne.n	8006fe6 <vcom_ReceiveInit+0x36>
 8006ff6:	4b0b      	ldr	r3, [pc, #44]	; (8007024 <vcom_ReceiveInit+0x74>)
 8006ff8:	681b      	ldr	r3, [r3, #0]
 8006ffa:	689a      	ldr	r2, [r3, #8]
 8006ffc:	4b09      	ldr	r3, [pc, #36]	; (8007024 <vcom_ReceiveInit+0x74>)
 8006ffe:	681b      	ldr	r3, [r3, #0]
 8007000:	f442 0280 	orr.w	r2, r2, #4194304	; 0x400000
 8007004:	609a      	str	r2, [r3, #8]
 8007006:	4807      	ldr	r0, [pc, #28]	; (8007024 <vcom_ReceiveInit+0x74>)
 8007008:	f008 fbf4 	bl	800f7f4 <HAL_UARTEx_EnableStopMode>
 800700c:	2201      	movs	r2, #1
 800700e:	4906      	ldr	r1, [pc, #24]	; (8007028 <vcom_ReceiveInit+0x78>)
 8007010:	4804      	ldr	r0, [pc, #16]	; (8007024 <vcom_ReceiveInit+0x74>)
 8007012:	f007 f82e 	bl	800e072 <HAL_UART_Receive_IT>
 8007016:	2300      	movs	r3, #0
 8007018:	4618      	mov	r0, r3
 800701a:	3710      	adds	r7, #16
 800701c:	46bd      	mov	sp, r7
 800701e:	bd80      	pop	{r7, pc}
 8007020:	200008e4 	.word	0x200008e4
 8007024:	20001f50 	.word	0x20001f50
 8007028:	20001fe0 	.word	0x20001fe0

0800702c <vcom_Resume>:
 800702c:	b580      	push	{r7, lr}
 800702e:	af00      	add	r7, sp, #0
 8007030:	4808      	ldr	r0, [pc, #32]	; (8007054 <vcom_Resume+0x28>)
 8007032:	f006 ffce 	bl	800dfd2 <HAL_UART_Init>
 8007036:	4603      	mov	r3, r0
 8007038:	2b00      	cmp	r3, #0
 800703a:	d001      	beq.n	8007040 <vcom_Resume+0x14>
 800703c:	f7fe fdae 	bl	8005b9c <Error_Handler>
 8007040:	4805      	ldr	r0, [pc, #20]	; (8007058 <vcom_Resume+0x2c>)
 8007042:	f001 f9c3 	bl	80083cc <HAL_DMA_Init>
 8007046:	4603      	mov	r3, r0
 8007048:	2b00      	cmp	r3, #0
 800704a:	d001      	beq.n	8007050 <vcom_Resume+0x24>
 800704c:	f7fe fda6 	bl	8005b9c <Error_Handler>
 8007050:	bf00      	nop
 8007052:	bd80      	pop	{r7, pc}
 8007054:	20001f50 	.word	0x20001f50
 8007058:	20001ef0 	.word	0x20001ef0

0800705c <HAL_UART_TxCpltCallback>:
 800705c:	b580      	push	{r7, lr}
 800705e:	b082      	sub	sp, #8
 8007060:	af00      	add	r7, sp, #0
 8007062:	6078      	str	r0, [r7, #4]
 8007064:	4b03      	ldr	r3, [pc, #12]	; (8007074 <HAL_UART_TxCpltCallback+0x18>)
 8007066:	681b      	ldr	r3, [r3, #0]
 8007068:	2000      	movs	r0, #0
 800706a:	4798      	blx	r3
 800706c:	bf00      	nop
 800706e:	3708      	adds	r7, #8
 8007070:	46bd      	mov	sp, r7
 8007072:	bd80      	pop	{r7, pc}
 8007074:	200008e0 	.word	0x200008e0

08007078 <HAL_UART_RxCpltCallback>:
 8007078:	b580      	push	{r7, lr}
 800707a:	b082      	sub	sp, #8
 800707c:	af00      	add	r7, sp, #0
 800707e:	6078      	str	r0, [r7, #4]
 8007080:	4b0b      	ldr	r3, [pc, #44]	; (80070b0 <HAL_UART_RxCpltCallback+0x38>)
 8007082:	681b      	ldr	r3, [r3, #0]
 8007084:	2b00      	cmp	r3, #0
 8007086:	d00a      	beq.n	800709e <HAL_UART_RxCpltCallback+0x26>
 8007088:	687b      	ldr	r3, [r7, #4]
 800708a:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800708e:	2b00      	cmp	r3, #0
 8007090:	d105      	bne.n	800709e <HAL_UART_RxCpltCallback+0x26>
 8007092:	4b07      	ldr	r3, [pc, #28]	; (80070b0 <HAL_UART_RxCpltCallback+0x38>)
 8007094:	681b      	ldr	r3, [r3, #0]
 8007096:	2200      	movs	r2, #0
 8007098:	2101      	movs	r1, #1
 800709a:	4806      	ldr	r0, [pc, #24]	; (80070b4 <HAL_UART_RxCpltCallback+0x3c>)
 800709c:	4798      	blx	r3
 800709e:	2201      	movs	r2, #1
 80070a0:	4904      	ldr	r1, [pc, #16]	; (80070b4 <HAL_UART_RxCpltCallback+0x3c>)
 80070a2:	6878      	ldr	r0, [r7, #4]
 80070a4:	f006 ffe5 	bl	800e072 <HAL_UART_Receive_IT>
 80070a8:	bf00      	nop
 80070aa:	3708      	adds	r7, #8
 80070ac:	46bd      	mov	sp, r7
 80070ae:	bd80      	pop	{r7, pc}
 80070b0:	200008e4 	.word	0x200008e4
 80070b4:	20001fe0 	.word	0x20001fe0

080070b8 <Reset_Handler>:
 80070b8:	480d      	ldr	r0, [pc, #52]	; (80070f0 <LoopForever+0x2>)
 80070ba:	4685      	mov	sp, r0
 80070bc:	f7ff fb46 	bl	800674c <SystemInit>
 80070c0:	480c      	ldr	r0, [pc, #48]	; (80070f4 <LoopForever+0x6>)
 80070c2:	490d      	ldr	r1, [pc, #52]	; (80070f8 <LoopForever+0xa>)
 80070c4:	4a0d      	ldr	r2, [pc, #52]	; (80070fc <LoopForever+0xe>)
 80070c6:	2300      	movs	r3, #0
 80070c8:	e002      	b.n	80070d0 <LoopCopyDataInit>

080070ca <CopyDataInit>:
 80070ca:	58d4      	ldr	r4, [r2, r3]
 80070cc:	50c4      	str	r4, [r0, r3]
 80070ce:	3304      	adds	r3, #4

080070d0 <LoopCopyDataInit>:
 80070d0:	18c4      	adds	r4, r0, r3
 80070d2:	428c      	cmp	r4, r1
 80070d4:	d3f9      	bcc.n	80070ca <CopyDataInit>
 80070d6:	4a0a      	ldr	r2, [pc, #40]	; (8007100 <LoopForever+0x12>)
 80070d8:	4c0a      	ldr	r4, [pc, #40]	; (8007104 <LoopForever+0x16>)
 80070da:	2300      	movs	r3, #0
 80070dc:	e001      	b.n	80070e2 <LoopFillZerobss>

080070de <FillZerobss>:
 80070de:	6013      	str	r3, [r2, #0]
 80070e0:	3204      	adds	r2, #4

080070e2 <LoopFillZerobss>:
 80070e2:	42a2      	cmp	r2, r4
 80070e4:	d3fb      	bcc.n	80070de <FillZerobss>
 80070e6:	f01d fb49 	bl	802477c <__libc_init_array>
 80070ea:	f7fe fb9d 	bl	8005828 <main>

080070ee <LoopForever>:
 80070ee:	e7fe      	b.n	80070ee <LoopForever>
 80070f0:	20008000 	.word	0x20008000
 80070f4:	20000000 	.word	0x20000000
 80070f8:	2000023c 	.word	0x2000023c
 80070fc:	08027190 	.word	0x08027190
 8007100:	2000023c 	.word	0x2000023c
 8007104:	20002094 	.word	0x20002094

08007108 <ADC_IRQHandler>:
 8007108:	e7fe      	b.n	8007108 <ADC_IRQHandler>
	...

0800710c <LL_DBGMCU_EnableDBGSleepMode>:
 800710c:	b480      	push	{r7}
 800710e:	af00      	add	r7, sp, #0
 8007110:	4b04      	ldr	r3, [pc, #16]	; (8007124 <LL_DBGMCU_EnableDBGSleepMode+0x18>)
 8007112:	685b      	ldr	r3, [r3, #4]
 8007114:	4a03      	ldr	r2, [pc, #12]	; (8007124 <LL_DBGMCU_EnableDBGSleepMode+0x18>)
 8007116:	f043 0301 	orr.w	r3, r3, #1
 800711a:	6053      	str	r3, [r2, #4]
 800711c:	bf00      	nop
 800711e:	46bd      	mov	sp, r7
 8007120:	bc80      	pop	{r7}
 8007122:	4770      	bx	lr
 8007124:	e0042000 	.word	0xe0042000

08007128 <LL_DBGMCU_EnableDBGStopMode>:
 8007128:	b480      	push	{r7}
 800712a:	af00      	add	r7, sp, #0
 800712c:	4b04      	ldr	r3, [pc, #16]	; (8007140 <LL_DBGMCU_EnableDBGStopMode+0x18>)
 800712e:	685b      	ldr	r3, [r3, #4]
 8007130:	4a03      	ldr	r2, [pc, #12]	; (8007140 <LL_DBGMCU_EnableDBGStopMode+0x18>)
 8007132:	f043 0302 	orr.w	r3, r3, #2
 8007136:	6053      	str	r3, [r2, #4]
 8007138:	bf00      	nop
 800713a:	46bd      	mov	sp, r7
 800713c:	bc80      	pop	{r7}
 800713e:	4770      	bx	lr
 8007140:	e0042000 	.word	0xe0042000

08007144 <LL_DBGMCU_EnableDBGStandbyMode>:
 8007144:	b480      	push	{r7}
 8007146:	af00      	add	r7, sp, #0
 8007148:	4b04      	ldr	r3, [pc, #16]	; (800715c <LL_DBGMCU_EnableDBGStandbyMode+0x18>)
 800714a:	685b      	ldr	r3, [r3, #4]
 800714c:	4a03      	ldr	r2, [pc, #12]	; (800715c <LL_DBGMCU_EnableDBGStandbyMode+0x18>)
 800714e:	f043 0304 	orr.w	r3, r3, #4
 8007152:	6053      	str	r3, [r2, #4]
 8007154:	bf00      	nop
 8007156:	46bd      	mov	sp, r7
 8007158:	bc80      	pop	{r7}
 800715a:	4770      	bx	lr
 800715c:	e0042000 	.word	0xe0042000

08007160 <HAL_Init>:
 8007160:	b580      	push	{r7, lr}
 8007162:	b082      	sub	sp, #8
 8007164:	af00      	add	r7, sp, #0
 8007166:	2300      	movs	r3, #0
 8007168:	71fb      	strb	r3, [r7, #7]
 800716a:	2003      	movs	r0, #3
 800716c:	f001 f8ec 	bl	8008348 <HAL_NVIC_SetPriorityGrouping>
 8007170:	f005 f984 	bl	800c47c <HAL_RCC_GetHCLKFreq>
 8007174:	4603      	mov	r3, r0
 8007176:	4a09      	ldr	r2, [pc, #36]	; (800719c <HAL_Init+0x3c>)
 8007178:	6013      	str	r3, [r2, #0]
 800717a:	200f      	movs	r0, #15
 800717c:	f7ff f920 	bl	80063c0 <HAL_InitTick>
 8007180:	4603      	mov	r3, r0
 8007182:	2b00      	cmp	r3, #0
 8007184:	d002      	beq.n	800718c <HAL_Init+0x2c>
 8007186:	2301      	movs	r3, #1
 8007188:	71fb      	strb	r3, [r7, #7]
 800718a:	e001      	b.n	8007190 <HAL_Init+0x30>
 800718c:	f7fe fe37 	bl	8005dfe <HAL_MspInit>
 8007190:	79fb      	ldrb	r3, [r7, #7]
 8007192:	4618      	mov	r0, r3
 8007194:	3708      	adds	r7, #8
 8007196:	46bd      	mov	sp, r7
 8007198:	bd80      	pop	{r7, pc}
 800719a:	bf00      	nop
 800719c:	2000003c 	.word	0x2000003c

080071a0 <HAL_IncTick>:
 80071a0:	b480      	push	{r7}
 80071a2:	af00      	add	r7, sp, #0
 80071a4:	4b05      	ldr	r3, [pc, #20]	; (80071bc <HAL_IncTick+0x1c>)
 80071a6:	781b      	ldrb	r3, [r3, #0]
 80071a8:	461a      	mov	r2, r3
 80071aa:	4b05      	ldr	r3, [pc, #20]	; (80071c0 <HAL_IncTick+0x20>)
 80071ac:	681b      	ldr	r3, [r3, #0]
 80071ae:	4413      	add	r3, r2
 80071b0:	4a03      	ldr	r2, [pc, #12]	; (80071c0 <HAL_IncTick+0x20>)
 80071b2:	6013      	str	r3, [r2, #0]
 80071b4:	bf00      	nop
 80071b6:	46bd      	mov	sp, r7
 80071b8:	bc80      	pop	{r7}
 80071ba:	4770      	bx	lr
 80071bc:	20000044 	.word	0x20000044
 80071c0:	20001fe4 	.word	0x20001fe4

080071c4 <HAL_SuspendTick>:
 80071c4:	b480      	push	{r7}
 80071c6:	af00      	add	r7, sp, #0
 80071c8:	4b04      	ldr	r3, [pc, #16]	; (80071dc <HAL_SuspendTick+0x18>)
 80071ca:	681b      	ldr	r3, [r3, #0]
 80071cc:	4a03      	ldr	r2, [pc, #12]	; (80071dc <HAL_SuspendTick+0x18>)
 80071ce:	f023 0302 	bic.w	r3, r3, #2
 80071d2:	6013      	str	r3, [r2, #0]
 80071d4:	bf00      	nop
 80071d6:	46bd      	mov	sp, r7
 80071d8:	bc80      	pop	{r7}
 80071da:	4770      	bx	lr
 80071dc:	e000e010 	.word	0xe000e010

080071e0 <HAL_ResumeTick>:
 80071e0:	b480      	push	{r7}
 80071e2:	af00      	add	r7, sp, #0
 80071e4:	4b04      	ldr	r3, [pc, #16]	; (80071f8 <HAL_ResumeTick+0x18>)
 80071e6:	681b      	ldr	r3, [r3, #0]
 80071e8:	4a03      	ldr	r2, [pc, #12]	; (80071f8 <HAL_ResumeTick+0x18>)
 80071ea:	f043 0302 	orr.w	r3, r3, #2
 80071ee:	6013      	str	r3, [r2, #0]
 80071f0:	bf00      	nop
 80071f2:	46bd      	mov	sp, r7
 80071f4:	bc80      	pop	{r7}
 80071f6:	4770      	bx	lr
 80071f8:	e000e010 	.word	0xe000e010

080071fc <HAL_GetUIDw0>:
 80071fc:	b480      	push	{r7}
 80071fe:	af00      	add	r7, sp, #0
 8007200:	4b02      	ldr	r3, [pc, #8]	; (800720c <HAL_GetUIDw0+0x10>)
 8007202:	681b      	ldr	r3, [r3, #0]
 8007204:	4618      	mov	r0, r3
 8007206:	46bd      	mov	sp, r7
 8007208:	bc80      	pop	{r7}
 800720a:	4770      	bx	lr
 800720c:	1fff7590 	.word	0x1fff7590

08007210 <HAL_GetUIDw1>:
 8007210:	b480      	push	{r7}
 8007212:	af00      	add	r7, sp, #0
 8007214:	4b02      	ldr	r3, [pc, #8]	; (8007220 <HAL_GetUIDw1+0x10>)
 8007216:	681b      	ldr	r3, [r3, #0]
 8007218:	4618      	mov	r0, r3
 800721a:	46bd      	mov	sp, r7
 800721c:	bc80      	pop	{r7}
 800721e:	4770      	bx	lr
 8007220:	1fff7594 	.word	0x1fff7594

08007224 <HAL_GetUIDw2>:
 8007224:	b480      	push	{r7}
 8007226:	af00      	add	r7, sp, #0
 8007228:	4b02      	ldr	r3, [pc, #8]	; (8007234 <HAL_GetUIDw2+0x10>)
 800722a:	681b      	ldr	r3, [r3, #0]
 800722c:	4618      	mov	r0, r3
 800722e:	46bd      	mov	sp, r7
 8007230:	bc80      	pop	{r7}
 8007232:	4770      	bx	lr
 8007234:	1fff7598 	.word	0x1fff7598

08007238 <HAL_DBGMCU_EnableDBGSleepMode>:
 8007238:	b580      	push	{r7, lr}
 800723a:	af00      	add	r7, sp, #0
 800723c:	f7ff ff66 	bl	800710c <LL_DBGMCU_EnableDBGSleepMode>
 8007240:	bf00      	nop
 8007242:	bd80      	pop	{r7, pc}

08007244 <HAL_DBGMCU_EnableDBGStopMode>:
 8007244:	b580      	push	{r7, lr}
 8007246:	af00      	add	r7, sp, #0
 8007248:	f7ff ff6e 	bl	8007128 <LL_DBGMCU_EnableDBGStopMode>
 800724c:	bf00      	nop
 800724e:	bd80      	pop	{r7, pc}

08007250 <HAL_DBGMCU_EnableDBGStandbyMode>:
 8007250:	b580      	push	{r7, lr}
 8007252:	af00      	add	r7, sp, #0
 8007254:	f7ff ff76 	bl	8007144 <LL_DBGMCU_EnableDBGStandbyMode>
 8007258:	bf00      	nop
 800725a:	bd80      	pop	{r7, pc}

0800725c <LL_ADC_SetCommonPathInternalCh>:
 800725c:	b480      	push	{r7}
 800725e:	b083      	sub	sp, #12
 8007260:	af00      	add	r7, sp, #0
 8007262:	6078      	str	r0, [r7, #4]
 8007264:	6039      	str	r1, [r7, #0]
 8007266:	687b      	ldr	r3, [r7, #4]
 8007268:	681b      	ldr	r3, [r3, #0]
 800726a:	f023 72e0 	bic.w	r2, r3, #29360128	; 0x1c00000
 800726e:	683b      	ldr	r3, [r7, #0]
 8007270:	431a      	orrs	r2, r3
 8007272:	687b      	ldr	r3, [r7, #4]
 8007274:	601a      	str	r2, [r3, #0]
 8007276:	bf00      	nop
 8007278:	370c      	adds	r7, #12
 800727a:	46bd      	mov	sp, r7
 800727c:	bc80      	pop	{r7}
 800727e:	4770      	bx	lr

08007280 <LL_ADC_GetCommonPathInternalCh>:
 8007280:	b480      	push	{r7}
 8007282:	b083      	sub	sp, #12
 8007284:	af00      	add	r7, sp, #0
 8007286:	6078      	str	r0, [r7, #4]
 8007288:	687b      	ldr	r3, [r7, #4]
 800728a:	681b      	ldr	r3, [r3, #0]
 800728c:	f003 73e0 	and.w	r3, r3, #29360128	; 0x1c00000
 8007290:	4618      	mov	r0, r3
 8007292:	370c      	adds	r7, #12
 8007294:	46bd      	mov	sp, r7
 8007296:	bc80      	pop	{r7}
 8007298:	4770      	bx	lr

0800729a <LL_ADC_SetSamplingTimeCommonChannels>:
 800729a:	b480      	push	{r7}
 800729c:	b085      	sub	sp, #20
 800729e:	af00      	add	r7, sp, #0
 80072a0:	60f8      	str	r0, [r7, #12]
 80072a2:	60b9      	str	r1, [r7, #8]
 80072a4:	607a      	str	r2, [r7, #4]
 80072a6:	68fb      	ldr	r3, [r7, #12]
 80072a8:	695a      	ldr	r2, [r3, #20]
 80072aa:	68bb      	ldr	r3, [r7, #8]
 80072ac:	f003 0304 	and.w	r3, r3, #4
 80072b0:	2107      	movs	r1, #7
 80072b2:	fa01 f303 	lsl.w	r3, r1, r3
 80072b6:	43db      	mvns	r3, r3
 80072b8:	401a      	ands	r2, r3
 80072ba:	68bb      	ldr	r3, [r7, #8]
 80072bc:	f003 0304 	and.w	r3, r3, #4
 80072c0:	6879      	ldr	r1, [r7, #4]
 80072c2:	fa01 f303 	lsl.w	r3, r1, r3
 80072c6:	431a      	orrs	r2, r3
 80072c8:	68fb      	ldr	r3, [r7, #12]
 80072ca:	615a      	str	r2, [r3, #20]
 80072cc:	bf00      	nop
 80072ce:	3714      	adds	r7, #20
 80072d0:	46bd      	mov	sp, r7
 80072d2:	bc80      	pop	{r7}
 80072d4:	4770      	bx	lr

080072d6 <LL_ADC_REG_IsTriggerSourceSWStart>:
 80072d6:	b480      	push	{r7}
 80072d8:	b083      	sub	sp, #12
 80072da:	af00      	add	r7, sp, #0
 80072dc:	6078      	str	r0, [r7, #4]
 80072de:	687b      	ldr	r3, [r7, #4]
 80072e0:	68db      	ldr	r3, [r3, #12]
 80072e2:	f403 6340 	and.w	r3, r3, #3072	; 0xc00
 80072e6:	2b00      	cmp	r3, #0
 80072e8:	d101      	bne.n	80072ee <LL_ADC_REG_IsTriggerSourceSWStart+0x18>
 80072ea:	2301      	movs	r3, #1
 80072ec:	e000      	b.n	80072f0 <LL_ADC_REG_IsTriggerSourceSWStart+0x1a>
 80072ee:	2300      	movs	r3, #0
 80072f0:	4618      	mov	r0, r3
 80072f2:	370c      	adds	r7, #12
 80072f4:	46bd      	mov	sp, r7
 80072f6:	bc80      	pop	{r7}
 80072f8:	4770      	bx	lr

080072fa <LL_ADC_REG_SetSequencerRanks>:
 80072fa:	b480      	push	{r7}
 80072fc:	b085      	sub	sp, #20
 80072fe:	af00      	add	r7, sp, #0
 8007300:	60f8      	str	r0, [r7, #12]
 8007302:	60b9      	str	r1, [r7, #8]
 8007304:	607a      	str	r2, [r7, #4]
 8007306:	68fb      	ldr	r3, [r7, #12]
 8007308:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 800730a:	68bb      	ldr	r3, [r7, #8]
 800730c:	f003 031f 	and.w	r3, r3, #31
 8007310:	210f      	movs	r1, #15
 8007312:	fa01 f303 	lsl.w	r3, r1, r3
 8007316:	43db      	mvns	r3, r3
 8007318:	401a      	ands	r2, r3
 800731a:	687b      	ldr	r3, [r7, #4]
 800731c:	0e9b      	lsrs	r3, r3, #26
 800731e:	f003 010f 	and.w	r1, r3, #15
 8007322:	68bb      	ldr	r3, [r7, #8]
 8007324:	f003 031f 	and.w	r3, r3, #31
 8007328:	fa01 f303 	lsl.w	r3, r1, r3
 800732c:	431a      	orrs	r2, r3
 800732e:	68fb      	ldr	r3, [r7, #12]
 8007330:	629a      	str	r2, [r3, #40]	; 0x28
 8007332:	bf00      	nop
 8007334:	3714      	adds	r7, #20
 8007336:	46bd      	mov	sp, r7
 8007338:	bc80      	pop	{r7}
 800733a:	4770      	bx	lr

0800733c <LL_ADC_REG_SetSequencerChAdd>:
 800733c:	b480      	push	{r7}
 800733e:	b083      	sub	sp, #12
 8007340:	af00      	add	r7, sp, #0
 8007342:	6078      	str	r0, [r7, #4]
 8007344:	6039      	str	r1, [r7, #0]
 8007346:	687b      	ldr	r3, [r7, #4]
 8007348:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 800734a:	683b      	ldr	r3, [r7, #0]
 800734c:	f3c3 0311 	ubfx	r3, r3, #0, #18
 8007350:	431a      	orrs	r2, r3
 8007352:	687b      	ldr	r3, [r7, #4]
 8007354:	629a      	str	r2, [r3, #40]	; 0x28
 8007356:	bf00      	nop
 8007358:	370c      	adds	r7, #12
 800735a:	46bd      	mov	sp, r7
 800735c:	bc80      	pop	{r7}
 800735e:	4770      	bx	lr

08007360 <LL_ADC_REG_SetSequencerChRem>:
 8007360:	b480      	push	{r7}
 8007362:	b083      	sub	sp, #12
 8007364:	af00      	add	r7, sp, #0
 8007366:	6078      	str	r0, [r7, #4]
 8007368:	6039      	str	r1, [r7, #0]
 800736a:	687b      	ldr	r3, [r7, #4]
 800736c:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 800736e:	683b      	ldr	r3, [r7, #0]
 8007370:	f3c3 0311 	ubfx	r3, r3, #0, #18
 8007374:	43db      	mvns	r3, r3
 8007376:	401a      	ands	r2, r3
 8007378:	687b      	ldr	r3, [r7, #4]
 800737a:	629a      	str	r2, [r3, #40]	; 0x28
 800737c:	bf00      	nop
 800737e:	370c      	adds	r7, #12
 8007380:	46bd      	mov	sp, r7
 8007382:	bc80      	pop	{r7}
 8007384:	4770      	bx	lr

08007386 <LL_ADC_SetChannelSamplingTime>:
 8007386:	b480      	push	{r7}
 8007388:	b085      	sub	sp, #20
 800738a:	af00      	add	r7, sp, #0
 800738c:	60f8      	str	r0, [r7, #12]
 800738e:	60b9      	str	r1, [r7, #8]
 8007390:	607a      	str	r2, [r7, #4]
 8007392:	68fb      	ldr	r3, [r7, #12]
 8007394:	695a      	ldr	r2, [r3, #20]
 8007396:	68bb      	ldr	r3, [r7, #8]
 8007398:	021b      	lsls	r3, r3, #8
 800739a:	43db      	mvns	r3, r3
 800739c:	401a      	ands	r2, r3
 800739e:	68bb      	ldr	r3, [r7, #8]
 80073a0:	0219      	lsls	r1, r3, #8
 80073a2:	687b      	ldr	r3, [r7, #4]
 80073a4:	400b      	ands	r3, r1
 80073a6:	f023 437c 	bic.w	r3, r3, #4227858432	; 0xfc000000
 80073aa:	f023 03ff 	bic.w	r3, r3, #255	; 0xff
 80073ae:	431a      	orrs	r2, r3
 80073b0:	68fb      	ldr	r3, [r7, #12]
 80073b2:	615a      	str	r2, [r3, #20]
 80073b4:	bf00      	nop
 80073b6:	3714      	adds	r7, #20
 80073b8:	46bd      	mov	sp, r7
 80073ba:	bc80      	pop	{r7}
 80073bc:	4770      	bx	lr

080073be <LL_ADC_EnableInternalRegulator>:
 80073be:	b480      	push	{r7}
 80073c0:	b083      	sub	sp, #12
 80073c2:	af00      	add	r7, sp, #0
 80073c4:	6078      	str	r0, [r7, #4]
 80073c6:	687b      	ldr	r3, [r7, #4]
 80073c8:	689b      	ldr	r3, [r3, #8]
 80073ca:	f023 4310 	bic.w	r3, r3, #2415919104	; 0x90000000
 80073ce:	f023 0317 	bic.w	r3, r3, #23
 80073d2:	f043 5280 	orr.w	r2, r3, #268435456	; 0x10000000
 80073d6:	687b      	ldr	r3, [r7, #4]
 80073d8:	609a      	str	r2, [r3, #8]
 80073da:	bf00      	nop
 80073dc:	370c      	adds	r7, #12
 80073de:	46bd      	mov	sp, r7
 80073e0:	bc80      	pop	{r7}
 80073e2:	4770      	bx	lr

080073e4 <LL_ADC_DisableInternalRegulator>:
 80073e4:	b480      	push	{r7}
 80073e6:	b083      	sub	sp, #12
 80073e8:	af00      	add	r7, sp, #0
 80073ea:	6078      	str	r0, [r7, #4]
 80073ec:	687b      	ldr	r3, [r7, #4]
 80073ee:	689b      	ldr	r3, [r3, #8]
 80073f0:	f023 4310 	bic.w	r3, r3, #2415919104	; 0x90000000
 80073f4:	f023 0317 	bic.w	r3, r3, #23
 80073f8:	687a      	ldr	r2, [r7, #4]
 80073fa:	6093      	str	r3, [r2, #8]
 80073fc:	bf00      	nop
 80073fe:	370c      	adds	r7, #12
 8007400:	46bd      	mov	sp, r7
 8007402:	bc80      	pop	{r7}
 8007404:	4770      	bx	lr

08007406 <LL_ADC_IsInternalRegulatorEnabled>:
 8007406:	b480      	push	{r7}
 8007408:	b083      	sub	sp, #12
 800740a:	af00      	add	r7, sp, #0
 800740c:	6078      	str	r0, [r7, #4]
 800740e:	687b      	ldr	r3, [r7, #4]
 8007410:	689b      	ldr	r3, [r3, #8]
 8007412:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8007416:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 800741a:	d101      	bne.n	8007420 <LL_ADC_IsInternalRegulatorEnabled+0x1a>
 800741c:	2301      	movs	r3, #1
 800741e:	e000      	b.n	8007422 <LL_ADC_IsInternalRegulatorEnabled+0x1c>
 8007420:	2300      	movs	r3, #0
 8007422:	4618      	mov	r0, r3
 8007424:	370c      	adds	r7, #12
 8007426:	46bd      	mov	sp, r7
 8007428:	bc80      	pop	{r7}
 800742a:	4770      	bx	lr

0800742c <LL_ADC_Enable>:
 800742c:	b480      	push	{r7}
 800742e:	b083      	sub	sp, #12
 8007430:	af00      	add	r7, sp, #0
 8007432:	6078      	str	r0, [r7, #4]
 8007434:	687b      	ldr	r3, [r7, #4]
 8007436:	689b      	ldr	r3, [r3, #8]
 8007438:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 800743c:	f023 0317 	bic.w	r3, r3, #23
 8007440:	f043 0201 	orr.w	r2, r3, #1
 8007444:	687b      	ldr	r3, [r7, #4]
 8007446:	609a      	str	r2, [r3, #8]
 8007448:	bf00      	nop
 800744a:	370c      	adds	r7, #12
 800744c:	46bd      	mov	sp, r7
 800744e:	bc80      	pop	{r7}
 8007450:	4770      	bx	lr

08007452 <LL_ADC_Disable>:
 8007452:	b480      	push	{r7}
 8007454:	b083      	sub	sp, #12
 8007456:	af00      	add	r7, sp, #0
 8007458:	6078      	str	r0, [r7, #4]
 800745a:	687b      	ldr	r3, [r7, #4]
 800745c:	689b      	ldr	r3, [r3, #8]
 800745e:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8007462:	f023 0317 	bic.w	r3, r3, #23
 8007466:	f043 0202 	orr.w	r2, r3, #2
 800746a:	687b      	ldr	r3, [r7, #4]
 800746c:	609a      	str	r2, [r3, #8]
 800746e:	bf00      	nop
 8007470:	370c      	adds	r7, #12
 8007472:	46bd      	mov	sp, r7
 8007474:	bc80      	pop	{r7}
 8007476:	4770      	bx	lr

08007478 <LL_ADC_IsEnabled>:
 8007478:	b480      	push	{r7}
 800747a:	b083      	sub	sp, #12
 800747c:	af00      	add	r7, sp, #0
 800747e:	6078      	str	r0, [r7, #4]
 8007480:	687b      	ldr	r3, [r7, #4]
 8007482:	689b      	ldr	r3, [r3, #8]
 8007484:	f003 0301 	and.w	r3, r3, #1
 8007488:	2b01      	cmp	r3, #1
 800748a:	d101      	bne.n	8007490 <LL_ADC_IsEnabled+0x18>
 800748c:	2301      	movs	r3, #1
 800748e:	e000      	b.n	8007492 <LL_ADC_IsEnabled+0x1a>
 8007490:	2300      	movs	r3, #0
 8007492:	4618      	mov	r0, r3
 8007494:	370c      	adds	r7, #12
 8007496:	46bd      	mov	sp, r7
 8007498:	bc80      	pop	{r7}
 800749a:	4770      	bx	lr

0800749c <LL_ADC_IsDisableOngoing>:
 800749c:	b480      	push	{r7}
 800749e:	b083      	sub	sp, #12
 80074a0:	af00      	add	r7, sp, #0
 80074a2:	6078      	str	r0, [r7, #4]
 80074a4:	687b      	ldr	r3, [r7, #4]
 80074a6:	689b      	ldr	r3, [r3, #8]
 80074a8:	f003 0302 	and.w	r3, r3, #2
 80074ac:	2b02      	cmp	r3, #2
 80074ae:	d101      	bne.n	80074b4 <LL_ADC_IsDisableOngoing+0x18>
 80074b0:	2301      	movs	r3, #1
 80074b2:	e000      	b.n	80074b6 <LL_ADC_IsDisableOngoing+0x1a>
 80074b4:	2300      	movs	r3, #0
 80074b6:	4618      	mov	r0, r3
 80074b8:	370c      	adds	r7, #12
 80074ba:	46bd      	mov	sp, r7
 80074bc:	bc80      	pop	{r7}
 80074be:	4770      	bx	lr

080074c0 <LL_ADC_REG_StartConversion>:
 80074c0:	b480      	push	{r7}
 80074c2:	b083      	sub	sp, #12
 80074c4:	af00      	add	r7, sp, #0
 80074c6:	6078      	str	r0, [r7, #4]
 80074c8:	687b      	ldr	r3, [r7, #4]
 80074ca:	689b      	ldr	r3, [r3, #8]
 80074cc:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 80074d0:	f023 0317 	bic.w	r3, r3, #23
 80074d4:	f043 0204 	orr.w	r2, r3, #4
 80074d8:	687b      	ldr	r3, [r7, #4]
 80074da:	609a      	str	r2, [r3, #8]
 80074dc:	bf00      	nop
 80074de:	370c      	adds	r7, #12
 80074e0:	46bd      	mov	sp, r7
 80074e2:	bc80      	pop	{r7}
 80074e4:	4770      	bx	lr

080074e6 <LL_ADC_REG_StopConversion>:
 80074e6:	b480      	push	{r7}
 80074e8:	b083      	sub	sp, #12
 80074ea:	af00      	add	r7, sp, #0
 80074ec:	6078      	str	r0, [r7, #4]
 80074ee:	687b      	ldr	r3, [r7, #4]
 80074f0:	689b      	ldr	r3, [r3, #8]
 80074f2:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 80074f6:	f023 0317 	bic.w	r3, r3, #23
 80074fa:	f043 0210 	orr.w	r2, r3, #16
 80074fe:	687b      	ldr	r3, [r7, #4]
 8007500:	609a      	str	r2, [r3, #8]
 8007502:	bf00      	nop
 8007504:	370c      	adds	r7, #12
 8007506:	46bd      	mov	sp, r7
 8007508:	bc80      	pop	{r7}
 800750a:	4770      	bx	lr

0800750c <LL_ADC_REG_IsConversionOngoing>:
 800750c:	b480      	push	{r7}
 800750e:	b083      	sub	sp, #12
 8007510:	af00      	add	r7, sp, #0
 8007512:	6078      	str	r0, [r7, #4]
 8007514:	687b      	ldr	r3, [r7, #4]
 8007516:	689b      	ldr	r3, [r3, #8]
 8007518:	f003 0304 	and.w	r3, r3, #4
 800751c:	2b04      	cmp	r3, #4
 800751e:	d101      	bne.n	8007524 <LL_ADC_REG_IsConversionOngoing+0x18>
 8007520:	2301      	movs	r3, #1
 8007522:	e000      	b.n	8007526 <LL_ADC_REG_IsConversionOngoing+0x1a>
 8007524:	2300      	movs	r3, #0
 8007526:	4618      	mov	r0, r3
 8007528:	370c      	adds	r7, #12
 800752a:	46bd      	mov	sp, r7
 800752c:	bc80      	pop	{r7}
 800752e:	4770      	bx	lr

08007530 <HAL_ADC_Init>:
 8007530:	b580      	push	{r7, lr}
 8007532:	b088      	sub	sp, #32
 8007534:	af00      	add	r7, sp, #0
 8007536:	6078      	str	r0, [r7, #4]
 8007538:	2300      	movs	r3, #0
 800753a:	77fb      	strb	r3, [r7, #31]
 800753c:	2300      	movs	r3, #0
 800753e:	61bb      	str	r3, [r7, #24]
 8007540:	2300      	movs	r3, #0
 8007542:	617b      	str	r3, [r7, #20]
 8007544:	2300      	movs	r3, #0
 8007546:	60bb      	str	r3, [r7, #8]
 8007548:	687b      	ldr	r3, [r7, #4]
 800754a:	2b00      	cmp	r3, #0
 800754c:	d101      	bne.n	8007552 <HAL_ADC_Init+0x22>
 800754e:	2301      	movs	r3, #1
 8007550:	e1a9      	b.n	80078a6 <HAL_ADC_Init+0x376>
 8007552:	687b      	ldr	r3, [r7, #4]
 8007554:	691b      	ldr	r3, [r3, #16]
 8007556:	2b00      	cmp	r3, #0
 8007558:	687b      	ldr	r3, [r7, #4]
 800755a:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800755c:	2b00      	cmp	r3, #0
 800755e:	d109      	bne.n	8007574 <HAL_ADC_Init+0x44>
 8007560:	6878      	ldr	r0, [r7, #4]
 8007562:	f7fd fa99 	bl	8004a98 <HAL_ADC_MspInit>
 8007566:	687b      	ldr	r3, [r7, #4]
 8007568:	2200      	movs	r2, #0
 800756a:	65da      	str	r2, [r3, #92]	; 0x5c
 800756c:	687b      	ldr	r3, [r7, #4]
 800756e:	2200      	movs	r2, #0
 8007570:	f883 2054 	strb.w	r2, [r3, #84]	; 0x54
 8007574:	687b      	ldr	r3, [r7, #4]
 8007576:	681b      	ldr	r3, [r3, #0]
 8007578:	4618      	mov	r0, r3
 800757a:	f7ff ff44 	bl	8007406 <LL_ADC_IsInternalRegulatorEnabled>
 800757e:	4603      	mov	r3, r0
 8007580:	2b00      	cmp	r3, #0
 8007582:	d114      	bne.n	80075ae <HAL_ADC_Init+0x7e>
 8007584:	687b      	ldr	r3, [r7, #4]
 8007586:	681b      	ldr	r3, [r3, #0]
 8007588:	4618      	mov	r0, r3
 800758a:	f7ff ff18 	bl	80073be <LL_ADC_EnableInternalRegulator>
 800758e:	4b9f      	ldr	r3, [pc, #636]	; (800780c <HAL_ADC_Init+0x2dc>)
 8007590:	681b      	ldr	r3, [r3, #0]
 8007592:	099b      	lsrs	r3, r3, #6
 8007594:	4a9e      	ldr	r2, [pc, #632]	; (8007810 <HAL_ADC_Init+0x2e0>)
 8007596:	fba2 2303 	umull	r2, r3, r2, r3
 800759a:	099b      	lsrs	r3, r3, #6
 800759c:	005b      	lsls	r3, r3, #1
 800759e:	60bb      	str	r3, [r7, #8]
 80075a0:	e002      	b.n	80075a8 <HAL_ADC_Init+0x78>
 80075a2:	68bb      	ldr	r3, [r7, #8]
 80075a4:	3b01      	subs	r3, #1
 80075a6:	60bb      	str	r3, [r7, #8]
 80075a8:	68bb      	ldr	r3, [r7, #8]
 80075aa:	2b00      	cmp	r3, #0
 80075ac:	d1f9      	bne.n	80075a2 <HAL_ADC_Init+0x72>
 80075ae:	687b      	ldr	r3, [r7, #4]
 80075b0:	681b      	ldr	r3, [r3, #0]
 80075b2:	4618      	mov	r0, r3
 80075b4:	f7ff ff27 	bl	8007406 <LL_ADC_IsInternalRegulatorEnabled>
 80075b8:	4603      	mov	r3, r0
 80075ba:	2b00      	cmp	r3, #0
 80075bc:	d10d      	bne.n	80075da <HAL_ADC_Init+0xaa>
 80075be:	687b      	ldr	r3, [r7, #4]
 80075c0:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80075c2:	f043 0210 	orr.w	r2, r3, #16
 80075c6:	687b      	ldr	r3, [r7, #4]
 80075c8:	659a      	str	r2, [r3, #88]	; 0x58
 80075ca:	687b      	ldr	r3, [r7, #4]
 80075cc:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80075ce:	f043 0201 	orr.w	r2, r3, #1
 80075d2:	687b      	ldr	r3, [r7, #4]
 80075d4:	65da      	str	r2, [r3, #92]	; 0x5c
 80075d6:	2301      	movs	r3, #1
 80075d8:	77fb      	strb	r3, [r7, #31]
 80075da:	687b      	ldr	r3, [r7, #4]
 80075dc:	681b      	ldr	r3, [r3, #0]
 80075de:	4618      	mov	r0, r3
 80075e0:	f7ff ff94 	bl	800750c <LL_ADC_REG_IsConversionOngoing>
 80075e4:	60f8      	str	r0, [r7, #12]
 80075e6:	687b      	ldr	r3, [r7, #4]
 80075e8:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80075ea:	f003 0310 	and.w	r3, r3, #16
 80075ee:	2b00      	cmp	r3, #0
 80075f0:	f040 8150 	bne.w	8007894 <HAL_ADC_Init+0x364>
 80075f4:	68fb      	ldr	r3, [r7, #12]
 80075f6:	2b00      	cmp	r3, #0
 80075f8:	f040 814c 	bne.w	8007894 <HAL_ADC_Init+0x364>
 80075fc:	687b      	ldr	r3, [r7, #4]
 80075fe:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8007600:	f423 7381 	bic.w	r3, r3, #258	; 0x102
 8007604:	f043 0202 	orr.w	r2, r3, #2
 8007608:	687b      	ldr	r3, [r7, #4]
 800760a:	659a      	str	r2, [r3, #88]	; 0x58
 800760c:	687b      	ldr	r3, [r7, #4]
 800760e:	681b      	ldr	r3, [r3, #0]
 8007610:	4618      	mov	r0, r3
 8007612:	f7ff ff31 	bl	8007478 <LL_ADC_IsEnabled>
 8007616:	4603      	mov	r3, r0
 8007618:	2b00      	cmp	r3, #0
 800761a:	d14a      	bne.n	80076b2 <HAL_ADC_Init+0x182>
 800761c:	687b      	ldr	r3, [r7, #4]
 800761e:	681b      	ldr	r3, [r3, #0]
 8007620:	68db      	ldr	r3, [r3, #12]
 8007622:	f023 0118 	bic.w	r1, r3, #24
 8007626:	687b      	ldr	r3, [r7, #4]
 8007628:	689a      	ldr	r2, [r3, #8]
 800762a:	687b      	ldr	r3, [r7, #4]
 800762c:	681b      	ldr	r3, [r3, #0]
 800762e:	430a      	orrs	r2, r1
 8007630:	60da      	str	r2, [r3, #12]
 8007632:	687b      	ldr	r3, [r7, #4]
 8007634:	685b      	ldr	r3, [r3, #4]
 8007636:	f003 4240 	and.w	r2, r3, #3221225472	; 0xc0000000
 800763a:	687b      	ldr	r3, [r7, #4]
 800763c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800763e:	431a      	orrs	r2, r3
 8007640:	687b      	ldr	r3, [r7, #4]
 8007642:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8007644:	431a      	orrs	r2, r3
 8007646:	687b      	ldr	r3, [r7, #4]
 8007648:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800764a:	431a      	orrs	r2, r3
 800764c:	687b      	ldr	r3, [r7, #4]
 800764e:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8007650:	4313      	orrs	r3, r2
 8007652:	697a      	ldr	r2, [r7, #20]
 8007654:	4313      	orrs	r3, r2
 8007656:	617b      	str	r3, [r7, #20]
 8007658:	687b      	ldr	r3, [r7, #4]
 800765a:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800765e:	2b01      	cmp	r3, #1
 8007660:	d103      	bne.n	800766a <HAL_ADC_Init+0x13a>
 8007662:	697b      	ldr	r3, [r7, #20]
 8007664:	f043 0301 	orr.w	r3, r3, #1
 8007668:	617b      	str	r3, [r7, #20]
 800766a:	687b      	ldr	r3, [r7, #4]
 800766c:	681b      	ldr	r3, [r3, #0]
 800766e:	691a      	ldr	r2, [r3, #16]
 8007670:	4b68      	ldr	r3, [pc, #416]	; (8007814 <HAL_ADC_Init+0x2e4>)
 8007672:	4013      	ands	r3, r2
 8007674:	687a      	ldr	r2, [r7, #4]
 8007676:	6812      	ldr	r2, [r2, #0]
 8007678:	6979      	ldr	r1, [r7, #20]
 800767a:	430b      	orrs	r3, r1
 800767c:	6113      	str	r3, [r2, #16]
 800767e:	687b      	ldr	r3, [r7, #4]
 8007680:	685b      	ldr	r3, [r3, #4]
 8007682:	f1b3 4f40 	cmp.w	r3, #3221225472	; 0xc0000000
 8007686:	d014      	beq.n	80076b2 <HAL_ADC_Init+0x182>
 8007688:	687b      	ldr	r3, [r7, #4]
 800768a:	685b      	ldr	r3, [r3, #4]
 800768c:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8007690:	d00f      	beq.n	80076b2 <HAL_ADC_Init+0x182>
 8007692:	687b      	ldr	r3, [r7, #4]
 8007694:	685b      	ldr	r3, [r3, #4]
 8007696:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 800769a:	d00a      	beq.n	80076b2 <HAL_ADC_Init+0x182>
 800769c:	4b5e      	ldr	r3, [pc, #376]	; (8007818 <HAL_ADC_Init+0x2e8>)
 800769e:	681b      	ldr	r3, [r3, #0]
 80076a0:	f423 1270 	bic.w	r2, r3, #3932160	; 0x3c0000
 80076a4:	687b      	ldr	r3, [r7, #4]
 80076a6:	685b      	ldr	r3, [r3, #4]
 80076a8:	f403 1370 	and.w	r3, r3, #3932160	; 0x3c0000
 80076ac:	495a      	ldr	r1, [pc, #360]	; (8007818 <HAL_ADC_Init+0x2e8>)
 80076ae:	4313      	orrs	r3, r2
 80076b0:	600b      	str	r3, [r1, #0]
 80076b2:	687b      	ldr	r3, [r7, #4]
 80076b4:	7e1b      	ldrb	r3, [r3, #24]
 80076b6:	039a      	lsls	r2, r3, #14
 80076b8:	687b      	ldr	r3, [r7, #4]
 80076ba:	7e5b      	ldrb	r3, [r3, #25]
 80076bc:	03db      	lsls	r3, r3, #15
 80076be:	431a      	orrs	r2, r3
 80076c0:	687b      	ldr	r3, [r7, #4]
 80076c2:	7e9b      	ldrb	r3, [r3, #26]
 80076c4:	035b      	lsls	r3, r3, #13
 80076c6:	4313      	orrs	r3, r2
 80076c8:	687a      	ldr	r2, [r7, #4]
 80076ca:	6b12      	ldr	r2, [r2, #48]	; 0x30
 80076cc:	2a00      	cmp	r2, #0
 80076ce:	d002      	beq.n	80076d6 <HAL_ADC_Init+0x1a6>
 80076d0:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 80076d4:	e000      	b.n	80076d8 <HAL_ADC_Init+0x1a8>
 80076d6:	2200      	movs	r2, #0
 80076d8:	431a      	orrs	r2, r3
 80076da:	687b      	ldr	r3, [r7, #4]
 80076dc:	68db      	ldr	r3, [r3, #12]
 80076de:	431a      	orrs	r2, r3
 80076e0:	687b      	ldr	r3, [r7, #4]
 80076e2:	691b      	ldr	r3, [r3, #16]
 80076e4:	2b00      	cmp	r3, #0
 80076e6:	da04      	bge.n	80076f2 <HAL_ADC_Init+0x1c2>
 80076e8:	687b      	ldr	r3, [r7, #4]
 80076ea:	691b      	ldr	r3, [r3, #16]
 80076ec:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 80076f0:	e001      	b.n	80076f6 <HAL_ADC_Init+0x1c6>
 80076f2:	f44f 1300 	mov.w	r3, #2097152	; 0x200000
 80076f6:	431a      	orrs	r2, r3
 80076f8:	687b      	ldr	r3, [r7, #4]
 80076fa:	f893 302c 	ldrb.w	r3, [r3, #44]	; 0x2c
 80076fe:	005b      	lsls	r3, r3, #1
 8007700:	4313      	orrs	r3, r2
 8007702:	69ba      	ldr	r2, [r7, #24]
 8007704:	4313      	orrs	r3, r2
 8007706:	61bb      	str	r3, [r7, #24]
 8007708:	687b      	ldr	r3, [r7, #4]
 800770a:	f893 3020 	ldrb.w	r3, [r3, #32]
 800770e:	2b01      	cmp	r3, #1
 8007710:	d114      	bne.n	800773c <HAL_ADC_Init+0x20c>
 8007712:	687b      	ldr	r3, [r7, #4]
 8007714:	7e9b      	ldrb	r3, [r3, #26]
 8007716:	2b00      	cmp	r3, #0
 8007718:	d104      	bne.n	8007724 <HAL_ADC_Init+0x1f4>
 800771a:	69bb      	ldr	r3, [r7, #24]
 800771c:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8007720:	61bb      	str	r3, [r7, #24]
 8007722:	e00b      	b.n	800773c <HAL_ADC_Init+0x20c>
 8007724:	687b      	ldr	r3, [r7, #4]
 8007726:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8007728:	f043 0220 	orr.w	r2, r3, #32
 800772c:	687b      	ldr	r3, [r7, #4]
 800772e:	659a      	str	r2, [r3, #88]	; 0x58
 8007730:	687b      	ldr	r3, [r7, #4]
 8007732:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8007734:	f043 0201 	orr.w	r2, r3, #1
 8007738:	687b      	ldr	r3, [r7, #4]
 800773a:	65da      	str	r2, [r3, #92]	; 0x5c
 800773c:	687b      	ldr	r3, [r7, #4]
 800773e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8007740:	2b00      	cmp	r3, #0
 8007742:	d009      	beq.n	8007758 <HAL_ADC_Init+0x228>
 8007744:	687b      	ldr	r3, [r7, #4]
 8007746:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8007748:	f403 72e0 	and.w	r2, r3, #448	; 0x1c0
 800774c:	687b      	ldr	r3, [r7, #4]
 800774e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8007750:	4313      	orrs	r3, r2
 8007752:	69ba      	ldr	r2, [r7, #24]
 8007754:	4313      	orrs	r3, r2
 8007756:	61bb      	str	r3, [r7, #24]
 8007758:	687b      	ldr	r3, [r7, #4]
 800775a:	681b      	ldr	r3, [r3, #0]
 800775c:	68db      	ldr	r3, [r3, #12]
 800775e:	f423 33fe 	bic.w	r3, r3, #130048	; 0x1fc00
 8007762:	f423 73f3 	bic.w	r3, r3, #486	; 0x1e6
 8007766:	687a      	ldr	r2, [r7, #4]
 8007768:	6812      	ldr	r2, [r2, #0]
 800776a:	69b9      	ldr	r1, [r7, #24]
 800776c:	430b      	orrs	r3, r1
 800776e:	60d3      	str	r3, [r2, #12]
 8007770:	687b      	ldr	r3, [r7, #4]
 8007772:	681b      	ldr	r3, [r3, #0]
 8007774:	691a      	ldr	r2, [r3, #16]
 8007776:	4b29      	ldr	r3, [pc, #164]	; (800781c <HAL_ADC_Init+0x2ec>)
 8007778:	4013      	ands	r3, r2
 800777a:	687a      	ldr	r2, [r7, #4]
 800777c:	6812      	ldr	r2, [r2, #0]
 800777e:	6979      	ldr	r1, [r7, #20]
 8007780:	430b      	orrs	r3, r1
 8007782:	6113      	str	r3, [r2, #16]
 8007784:	687b      	ldr	r3, [r7, #4]
 8007786:	6818      	ldr	r0, [r3, #0]
 8007788:	687b      	ldr	r3, [r7, #4]
 800778a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800778c:	461a      	mov	r2, r3
 800778e:	2100      	movs	r1, #0
 8007790:	f7ff fd83 	bl	800729a <LL_ADC_SetSamplingTimeCommonChannels>
 8007794:	687b      	ldr	r3, [r7, #4]
 8007796:	6818      	ldr	r0, [r3, #0]
 8007798:	687b      	ldr	r3, [r7, #4]
 800779a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800779c:	461a      	mov	r2, r3
 800779e:	4920      	ldr	r1, [pc, #128]	; (8007820 <HAL_ADC_Init+0x2f0>)
 80077a0:	f7ff fd7b 	bl	800729a <LL_ADC_SetSamplingTimeCommonChannels>
 80077a4:	687b      	ldr	r3, [r7, #4]
 80077a6:	691b      	ldr	r3, [r3, #16]
 80077a8:	2b00      	cmp	r3, #0
 80077aa:	d108      	bne.n	80077be <HAL_ADC_Init+0x28e>
 80077ac:	687b      	ldr	r3, [r7, #4]
 80077ae:	681b      	ldr	r3, [r3, #0]
 80077b0:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 80077b2:	687b      	ldr	r3, [r7, #4]
 80077b4:	681b      	ldr	r3, [r3, #0]
 80077b6:	f062 020f 	orn	r2, r2, #15
 80077ba:	629a      	str	r2, [r3, #40]	; 0x28
 80077bc:	e045      	b.n	800784a <HAL_ADC_Init+0x31a>
 80077be:	687b      	ldr	r3, [r7, #4]
 80077c0:	691b      	ldr	r3, [r3, #16]
 80077c2:	f5b3 1f00 	cmp.w	r3, #2097152	; 0x200000
 80077c6:	d140      	bne.n	800784a <HAL_ADC_Init+0x31a>
 80077c8:	2300      	movs	r3, #0
 80077ca:	613b      	str	r3, [r7, #16]
 80077cc:	e00c      	b.n	80077e8 <HAL_ADC_Init+0x2b8>
 80077ce:	687b      	ldr	r3, [r7, #4]
 80077d0:	6e1a      	ldr	r2, [r3, #96]	; 0x60
 80077d2:	693b      	ldr	r3, [r7, #16]
 80077d4:	009b      	lsls	r3, r3, #2
 80077d6:	fa22 f303 	lsr.w	r3, r2, r3
 80077da:	f003 030f 	and.w	r3, r3, #15
 80077de:	2b0f      	cmp	r3, #15
 80077e0:	d006      	beq.n	80077f0 <HAL_ADC_Init+0x2c0>
 80077e2:	693b      	ldr	r3, [r7, #16]
 80077e4:	3301      	adds	r3, #1
 80077e6:	613b      	str	r3, [r7, #16]
 80077e8:	693b      	ldr	r3, [r7, #16]
 80077ea:	2b07      	cmp	r3, #7
 80077ec:	d9ef      	bls.n	80077ce <HAL_ADC_Init+0x29e>
 80077ee:	e000      	b.n	80077f2 <HAL_ADC_Init+0x2c2>
 80077f0:	bf00      	nop
 80077f2:	693b      	ldr	r3, [r7, #16]
 80077f4:	2b01      	cmp	r3, #1
 80077f6:	d115      	bne.n	8007824 <HAL_ADC_Init+0x2f4>
 80077f8:	687b      	ldr	r3, [r7, #4]
 80077fa:	681b      	ldr	r3, [r3, #0]
 80077fc:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 80077fe:	687b      	ldr	r3, [r7, #4]
 8007800:	681b      	ldr	r3, [r3, #0]
 8007802:	f062 020f 	orn	r2, r2, #15
 8007806:	629a      	str	r2, [r3, #40]	; 0x28
 8007808:	e01f      	b.n	800784a <HAL_ADC_Init+0x31a>
 800780a:	bf00      	nop
 800780c:	2000003c 	.word	0x2000003c
 8007810:	053e2d63 	.word	0x053e2d63
 8007814:	1ffffc02 	.word	0x1ffffc02
 8007818:	40012708 	.word	0x40012708
 800781c:	dffffc02 	.word	0xdffffc02
 8007820:	03ffff04 	.word	0x03ffff04
 8007824:	687b      	ldr	r3, [r7, #4]
 8007826:	681b      	ldr	r3, [r3, #0]
 8007828:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800782a:	687b      	ldr	r3, [r7, #4]
 800782c:	69db      	ldr	r3, [r3, #28]
 800782e:	3b01      	subs	r3, #1
 8007830:	009b      	lsls	r3, r3, #2
 8007832:	f003 031c 	and.w	r3, r3, #28
 8007836:	f06f 020f 	mvn.w	r2, #15
 800783a:	fa02 f103 	lsl.w	r1, r2, r3
 800783e:	687b      	ldr	r3, [r7, #4]
 8007840:	6e1a      	ldr	r2, [r3, #96]	; 0x60
 8007842:	687b      	ldr	r3, [r7, #4]
 8007844:	681b      	ldr	r3, [r3, #0]
 8007846:	430a      	orrs	r2, r1
 8007848:	629a      	str	r2, [r3, #40]	; 0x28
 800784a:	687b      	ldr	r3, [r7, #4]
 800784c:	681b      	ldr	r3, [r3, #0]
 800784e:	68da      	ldr	r2, [r3, #12]
 8007850:	4b17      	ldr	r3, [pc, #92]	; (80078b0 <HAL_ADC_Init+0x380>)
 8007852:	4013      	ands	r3, r2
 8007854:	69ba      	ldr	r2, [r7, #24]
 8007856:	429a      	cmp	r2, r3
 8007858:	d10b      	bne.n	8007872 <HAL_ADC_Init+0x342>
 800785a:	687b      	ldr	r3, [r7, #4]
 800785c:	2200      	movs	r2, #0
 800785e:	65da      	str	r2, [r3, #92]	; 0x5c
 8007860:	687b      	ldr	r3, [r7, #4]
 8007862:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8007864:	f023 0303 	bic.w	r3, r3, #3
 8007868:	f043 0201 	orr.w	r2, r3, #1
 800786c:	687b      	ldr	r3, [r7, #4]
 800786e:	659a      	str	r2, [r3, #88]	; 0x58
 8007870:	e018      	b.n	80078a4 <HAL_ADC_Init+0x374>
 8007872:	687b      	ldr	r3, [r7, #4]
 8007874:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8007876:	f023 0312 	bic.w	r3, r3, #18
 800787a:	f043 0210 	orr.w	r2, r3, #16
 800787e:	687b      	ldr	r3, [r7, #4]
 8007880:	659a      	str	r2, [r3, #88]	; 0x58
 8007882:	687b      	ldr	r3, [r7, #4]
 8007884:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8007886:	f043 0201 	orr.w	r2, r3, #1
 800788a:	687b      	ldr	r3, [r7, #4]
 800788c:	65da      	str	r2, [r3, #92]	; 0x5c
 800788e:	2301      	movs	r3, #1
 8007890:	77fb      	strb	r3, [r7, #31]
 8007892:	e007      	b.n	80078a4 <HAL_ADC_Init+0x374>
 8007894:	687b      	ldr	r3, [r7, #4]
 8007896:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8007898:	f043 0210 	orr.w	r2, r3, #16
 800789c:	687b      	ldr	r3, [r7, #4]
 800789e:	659a      	str	r2, [r3, #88]	; 0x58
 80078a0:	2301      	movs	r3, #1
 80078a2:	77fb      	strb	r3, [r7, #31]
 80078a4:	7ffb      	ldrb	r3, [r7, #31]
 80078a6:	4618      	mov	r0, r3
 80078a8:	3720      	adds	r7, #32
 80078aa:	46bd      	mov	sp, r7
 80078ac:	bd80      	pop	{r7, pc}
 80078ae:	bf00      	nop
 80078b0:	833fffe7 	.word	0x833fffe7

080078b4 <HAL_ADC_DeInit>:
 80078b4:	b580      	push	{r7, lr}
 80078b6:	b084      	sub	sp, #16
 80078b8:	af00      	add	r7, sp, #0
 80078ba:	6078      	str	r0, [r7, #4]
 80078bc:	687b      	ldr	r3, [r7, #4]
 80078be:	2b00      	cmp	r3, #0
 80078c0:	d101      	bne.n	80078c6 <HAL_ADC_DeInit+0x12>
 80078c2:	2301      	movs	r3, #1
 80078c4:	e06a      	b.n	800799c <HAL_ADC_DeInit+0xe8>
 80078c6:	687b      	ldr	r3, [r7, #4]
 80078c8:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80078ca:	f043 0202 	orr.w	r2, r3, #2
 80078ce:	687b      	ldr	r3, [r7, #4]
 80078d0:	659a      	str	r2, [r3, #88]	; 0x58
 80078d2:	6878      	ldr	r0, [r7, #4]
 80078d4:	f000 fab6 	bl	8007e44 <ADC_ConversionStop>
 80078d8:	4603      	mov	r3, r0
 80078da:	73fb      	strb	r3, [r7, #15]
 80078dc:	7bfb      	ldrb	r3, [r7, #15]
 80078de:	2b00      	cmp	r3, #0
 80078e0:	d10f      	bne.n	8007902 <HAL_ADC_DeInit+0x4e>
 80078e2:	6878      	ldr	r0, [r7, #4]
 80078e4:	f000 fb6a 	bl	8007fbc <ADC_Disable>
 80078e8:	4603      	mov	r3, r0
 80078ea:	73fb      	strb	r3, [r7, #15]
 80078ec:	7bfb      	ldrb	r3, [r7, #15]
 80078ee:	2b00      	cmp	r3, #0
 80078f0:	d102      	bne.n	80078f8 <HAL_ADC_DeInit+0x44>
 80078f2:	687b      	ldr	r3, [r7, #4]
 80078f4:	2201      	movs	r2, #1
 80078f6:	659a      	str	r2, [r3, #88]	; 0x58
 80078f8:	687b      	ldr	r3, [r7, #4]
 80078fa:	681b      	ldr	r3, [r3, #0]
 80078fc:	4618      	mov	r0, r3
 80078fe:	f7ff fd71 	bl	80073e4 <LL_ADC_DisableInternalRegulator>
 8007902:	687b      	ldr	r3, [r7, #4]
 8007904:	681b      	ldr	r3, [r3, #0]
 8007906:	685b      	ldr	r3, [r3, #4]
 8007908:	687a      	ldr	r2, [r7, #4]
 800790a:	6812      	ldr	r2, [r2, #0]
 800790c:	f423 7367 	bic.w	r3, r3, #924	; 0x39c
 8007910:	f023 0303 	bic.w	r3, r3, #3
 8007914:	6053      	str	r3, [r2, #4]
 8007916:	687b      	ldr	r3, [r7, #4]
 8007918:	681b      	ldr	r3, [r3, #0]
 800791a:	f240 329f 	movw	r2, #927	; 0x39f
 800791e:	601a      	str	r2, [r3, #0]
 8007920:	687b      	ldr	r3, [r7, #4]
 8007922:	681b      	ldr	r3, [r3, #0]
 8007924:	68d9      	ldr	r1, [r3, #12]
 8007926:	687b      	ldr	r3, [r7, #4]
 8007928:	681a      	ldr	r2, [r3, #0]
 800792a:	4b1e      	ldr	r3, [pc, #120]	; (80079a4 <HAL_ADC_DeInit+0xf0>)
 800792c:	400b      	ands	r3, r1
 800792e:	60d3      	str	r3, [r2, #12]
 8007930:	687b      	ldr	r3, [r7, #4]
 8007932:	681b      	ldr	r3, [r3, #0]
 8007934:	691a      	ldr	r2, [r3, #16]
 8007936:	687b      	ldr	r3, [r7, #4]
 8007938:	681b      	ldr	r3, [r3, #0]
 800793a:	f022 4240 	bic.w	r2, r2, #3221225472	; 0xc0000000
 800793e:	611a      	str	r2, [r3, #16]
 8007940:	687b      	ldr	r3, [r7, #4]
 8007942:	681b      	ldr	r3, [r3, #0]
 8007944:	695a      	ldr	r2, [r3, #20]
 8007946:	687b      	ldr	r3, [r7, #4]
 8007948:	681b      	ldr	r3, [r3, #0]
 800794a:	f022 0207 	bic.w	r2, r2, #7
 800794e:	615a      	str	r2, [r3, #20]
 8007950:	687b      	ldr	r3, [r7, #4]
 8007952:	681b      	ldr	r3, [r3, #0]
 8007954:	6a1a      	ldr	r2, [r3, #32]
 8007956:	687b      	ldr	r3, [r7, #4]
 8007958:	681b      	ldr	r3, [r3, #0]
 800795a:	f002 22f0 	and.w	r2, r2, #4026593280	; 0xf000f000
 800795e:	621a      	str	r2, [r3, #32]
 8007960:	687b      	ldr	r3, [r7, #4]
 8007962:	681b      	ldr	r3, [r3, #0]
 8007964:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8007966:	687b      	ldr	r3, [r7, #4]
 8007968:	681b      	ldr	r3, [r3, #0]
 800796a:	2200      	movs	r2, #0
 800796c:	629a      	str	r2, [r3, #40]	; 0x28
 800796e:	4b0e      	ldr	r3, [pc, #56]	; (80079a8 <HAL_ADC_DeInit+0xf4>)
 8007970:	681b      	ldr	r3, [r3, #0]
 8007972:	4a0d      	ldr	r2, [pc, #52]	; (80079a8 <HAL_ADC_DeInit+0xf4>)
 8007974:	f023 73fe 	bic.w	r3, r3, #33292288	; 0x1fc0000
 8007978:	6013      	str	r3, [r2, #0]
 800797a:	6878      	ldr	r0, [r7, #4]
 800797c:	f7fd f8a0 	bl	8004ac0 <HAL_ADC_MspDeInit>
 8007980:	687b      	ldr	r3, [r7, #4]
 8007982:	2200      	movs	r2, #0
 8007984:	661a      	str	r2, [r3, #96]	; 0x60
 8007986:	687b      	ldr	r3, [r7, #4]
 8007988:	2200      	movs	r2, #0
 800798a:	65da      	str	r2, [r3, #92]	; 0x5c
 800798c:	687b      	ldr	r3, [r7, #4]
 800798e:	2200      	movs	r2, #0
 8007990:	659a      	str	r2, [r3, #88]	; 0x58
 8007992:	687b      	ldr	r3, [r7, #4]
 8007994:	2200      	movs	r2, #0
 8007996:	f883 2054 	strb.w	r2, [r3, #84]	; 0x54
 800799a:	7bfb      	ldrb	r3, [r7, #15]
 800799c:	4618      	mov	r0, r3
 800799e:	3710      	adds	r7, #16
 80079a0:	46bd      	mov	sp, r7
 80079a2:	bd80      	pop	{r7, pc}
 80079a4:	833e0200 	.word	0x833e0200
 80079a8:	40012708 	.word	0x40012708

080079ac <HAL_ADC_Start>:
 80079ac:	b580      	push	{r7, lr}
 80079ae:	b084      	sub	sp, #16
 80079b0:	af00      	add	r7, sp, #0
 80079b2:	6078      	str	r0, [r7, #4]
 80079b4:	687b      	ldr	r3, [r7, #4]
 80079b6:	681b      	ldr	r3, [r3, #0]
 80079b8:	4618      	mov	r0, r3
 80079ba:	f7ff fda7 	bl	800750c <LL_ADC_REG_IsConversionOngoing>
 80079be:	4603      	mov	r3, r0
 80079c0:	2b00      	cmp	r3, #0
 80079c2:	d132      	bne.n	8007a2a <HAL_ADC_Start+0x7e>
 80079c4:	687b      	ldr	r3, [r7, #4]
 80079c6:	f893 3054 	ldrb.w	r3, [r3, #84]	; 0x54
 80079ca:	2b01      	cmp	r3, #1
 80079cc:	d101      	bne.n	80079d2 <HAL_ADC_Start+0x26>
 80079ce:	2302      	movs	r3, #2
 80079d0:	e02e      	b.n	8007a30 <HAL_ADC_Start+0x84>
 80079d2:	687b      	ldr	r3, [r7, #4]
 80079d4:	2201      	movs	r2, #1
 80079d6:	f883 2054 	strb.w	r2, [r3, #84]	; 0x54
 80079da:	6878      	ldr	r0, [r7, #4]
 80079dc:	f000 fa70 	bl	8007ec0 <ADC_Enable>
 80079e0:	4603      	mov	r3, r0
 80079e2:	73fb      	strb	r3, [r7, #15]
 80079e4:	7bfb      	ldrb	r3, [r7, #15]
 80079e6:	2b00      	cmp	r3, #0
 80079e8:	d11a      	bne.n	8007a20 <HAL_ADC_Start+0x74>
 80079ea:	687b      	ldr	r3, [r7, #4]
 80079ec:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80079ee:	f423 6370 	bic.w	r3, r3, #3840	; 0xf00
 80079f2:	f023 0301 	bic.w	r3, r3, #1
 80079f6:	f443 7280 	orr.w	r2, r3, #256	; 0x100
 80079fa:	687b      	ldr	r3, [r7, #4]
 80079fc:	659a      	str	r2, [r3, #88]	; 0x58
 80079fe:	687b      	ldr	r3, [r7, #4]
 8007a00:	2200      	movs	r2, #0
 8007a02:	65da      	str	r2, [r3, #92]	; 0x5c
 8007a04:	687b      	ldr	r3, [r7, #4]
 8007a06:	681b      	ldr	r3, [r3, #0]
 8007a08:	221c      	movs	r2, #28
 8007a0a:	601a      	str	r2, [r3, #0]
 8007a0c:	687b      	ldr	r3, [r7, #4]
 8007a0e:	2200      	movs	r2, #0
 8007a10:	f883 2054 	strb.w	r2, [r3, #84]	; 0x54
 8007a14:	687b      	ldr	r3, [r7, #4]
 8007a16:	681b      	ldr	r3, [r3, #0]
 8007a18:	4618      	mov	r0, r3
 8007a1a:	f7ff fd51 	bl	80074c0 <LL_ADC_REG_StartConversion>
 8007a1e:	e006      	b.n	8007a2e <HAL_ADC_Start+0x82>
 8007a20:	687b      	ldr	r3, [r7, #4]
 8007a22:	2200      	movs	r2, #0
 8007a24:	f883 2054 	strb.w	r2, [r3, #84]	; 0x54
 8007a28:	e001      	b.n	8007a2e <HAL_ADC_Start+0x82>
 8007a2a:	2302      	movs	r3, #2
 8007a2c:	73fb      	strb	r3, [r7, #15]
 8007a2e:	7bfb      	ldrb	r3, [r7, #15]
 8007a30:	4618      	mov	r0, r3
 8007a32:	3710      	adds	r7, #16
 8007a34:	46bd      	mov	sp, r7
 8007a36:	bd80      	pop	{r7, pc}

08007a38 <HAL_ADC_Stop>:
 8007a38:	b580      	push	{r7, lr}
 8007a3a:	b084      	sub	sp, #16
 8007a3c:	af00      	add	r7, sp, #0
 8007a3e:	6078      	str	r0, [r7, #4]
 8007a40:	687b      	ldr	r3, [r7, #4]
 8007a42:	f893 3054 	ldrb.w	r3, [r3, #84]	; 0x54
 8007a46:	2b01      	cmp	r3, #1
 8007a48:	d101      	bne.n	8007a4e <HAL_ADC_Stop+0x16>
 8007a4a:	2302      	movs	r3, #2
 8007a4c:	e022      	b.n	8007a94 <HAL_ADC_Stop+0x5c>
 8007a4e:	687b      	ldr	r3, [r7, #4]
 8007a50:	2201      	movs	r2, #1
 8007a52:	f883 2054 	strb.w	r2, [r3, #84]	; 0x54
 8007a56:	6878      	ldr	r0, [r7, #4]
 8007a58:	f000 f9f4 	bl	8007e44 <ADC_ConversionStop>
 8007a5c:	4603      	mov	r3, r0
 8007a5e:	73fb      	strb	r3, [r7, #15]
 8007a60:	7bfb      	ldrb	r3, [r7, #15]
 8007a62:	2b00      	cmp	r3, #0
 8007a64:	d111      	bne.n	8007a8a <HAL_ADC_Stop+0x52>
 8007a66:	6878      	ldr	r0, [r7, #4]
 8007a68:	f000 faa8 	bl	8007fbc <ADC_Disable>
 8007a6c:	4603      	mov	r3, r0
 8007a6e:	73fb      	strb	r3, [r7, #15]
 8007a70:	7bfb      	ldrb	r3, [r7, #15]
 8007a72:	2b00      	cmp	r3, #0
 8007a74:	d109      	bne.n	8007a8a <HAL_ADC_Stop+0x52>
 8007a76:	687b      	ldr	r3, [r7, #4]
 8007a78:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8007a7a:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8007a7e:	f023 0301 	bic.w	r3, r3, #1
 8007a82:	f043 0201 	orr.w	r2, r3, #1
 8007a86:	687b      	ldr	r3, [r7, #4]
 8007a88:	659a      	str	r2, [r3, #88]	; 0x58
 8007a8a:	687b      	ldr	r3, [r7, #4]
 8007a8c:	2200      	movs	r2, #0
 8007a8e:	f883 2054 	strb.w	r2, [r3, #84]	; 0x54
 8007a92:	7bfb      	ldrb	r3, [r7, #15]
 8007a94:	4618      	mov	r0, r3
 8007a96:	3710      	adds	r7, #16
 8007a98:	46bd      	mov	sp, r7
 8007a9a:	bd80      	pop	{r7, pc}

08007a9c <HAL_ADC_PollForConversion>:
 8007a9c:	b580      	push	{r7, lr}
 8007a9e:	b084      	sub	sp, #16
 8007aa0:	af00      	add	r7, sp, #0
 8007aa2:	6078      	str	r0, [r7, #4]
 8007aa4:	6039      	str	r1, [r7, #0]
 8007aa6:	687b      	ldr	r3, [r7, #4]
 8007aa8:	695b      	ldr	r3, [r3, #20]
 8007aaa:	2b08      	cmp	r3, #8
 8007aac:	d102      	bne.n	8007ab4 <HAL_ADC_PollForConversion+0x18>
 8007aae:	2308      	movs	r3, #8
 8007ab0:	60fb      	str	r3, [r7, #12]
 8007ab2:	e010      	b.n	8007ad6 <HAL_ADC_PollForConversion+0x3a>
 8007ab4:	687b      	ldr	r3, [r7, #4]
 8007ab6:	681b      	ldr	r3, [r3, #0]
 8007ab8:	68db      	ldr	r3, [r3, #12]
 8007aba:	f003 0301 	and.w	r3, r3, #1
 8007abe:	2b00      	cmp	r3, #0
 8007ac0:	d007      	beq.n	8007ad2 <HAL_ADC_PollForConversion+0x36>
 8007ac2:	687b      	ldr	r3, [r7, #4]
 8007ac4:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8007ac6:	f043 0220 	orr.w	r2, r3, #32
 8007aca:	687b      	ldr	r3, [r7, #4]
 8007acc:	659a      	str	r2, [r3, #88]	; 0x58
 8007ace:	2301      	movs	r3, #1
 8007ad0:	e070      	b.n	8007bb4 <HAL_ADC_PollForConversion+0x118>
 8007ad2:	2304      	movs	r3, #4
 8007ad4:	60fb      	str	r3, [r7, #12]
 8007ad6:	f7fe fc7d 	bl	80063d4 <HAL_GetTick>
 8007ada:	60b8      	str	r0, [r7, #8]
 8007adc:	e01a      	b.n	8007b14 <HAL_ADC_PollForConversion+0x78>
 8007ade:	683b      	ldr	r3, [r7, #0]
 8007ae0:	f1b3 3fff 	cmp.w	r3, #4294967295
 8007ae4:	d016      	beq.n	8007b14 <HAL_ADC_PollForConversion+0x78>
 8007ae6:	f7fe fc75 	bl	80063d4 <HAL_GetTick>
 8007aea:	4602      	mov	r2, r0
 8007aec:	68bb      	ldr	r3, [r7, #8]
 8007aee:	1ad3      	subs	r3, r2, r3
 8007af0:	683a      	ldr	r2, [r7, #0]
 8007af2:	429a      	cmp	r2, r3
 8007af4:	d302      	bcc.n	8007afc <HAL_ADC_PollForConversion+0x60>
 8007af6:	683b      	ldr	r3, [r7, #0]
 8007af8:	2b00      	cmp	r3, #0
 8007afa:	d10b      	bne.n	8007b14 <HAL_ADC_PollForConversion+0x78>
 8007afc:	687b      	ldr	r3, [r7, #4]
 8007afe:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8007b00:	f043 0204 	orr.w	r2, r3, #4
 8007b04:	687b      	ldr	r3, [r7, #4]
 8007b06:	659a      	str	r2, [r3, #88]	; 0x58
 8007b08:	687b      	ldr	r3, [r7, #4]
 8007b0a:	2200      	movs	r2, #0
 8007b0c:	f883 2054 	strb.w	r2, [r3, #84]	; 0x54
 8007b10:	2303      	movs	r3, #3
 8007b12:	e04f      	b.n	8007bb4 <HAL_ADC_PollForConversion+0x118>
 8007b14:	687b      	ldr	r3, [r7, #4]
 8007b16:	681b      	ldr	r3, [r3, #0]
 8007b18:	681a      	ldr	r2, [r3, #0]
 8007b1a:	68fb      	ldr	r3, [r7, #12]
 8007b1c:	4013      	ands	r3, r2
 8007b1e:	2b00      	cmp	r3, #0
 8007b20:	d0dd      	beq.n	8007ade <HAL_ADC_PollForConversion+0x42>
 8007b22:	687b      	ldr	r3, [r7, #4]
 8007b24:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8007b26:	f443 7200 	orr.w	r2, r3, #512	; 0x200
 8007b2a:	687b      	ldr	r3, [r7, #4]
 8007b2c:	659a      	str	r2, [r3, #88]	; 0x58
 8007b2e:	687b      	ldr	r3, [r7, #4]
 8007b30:	681b      	ldr	r3, [r3, #0]
 8007b32:	4618      	mov	r0, r3
 8007b34:	f7ff fbcf 	bl	80072d6 <LL_ADC_REG_IsTriggerSourceSWStart>
 8007b38:	4603      	mov	r3, r0
 8007b3a:	2b00      	cmp	r3, #0
 8007b3c:	d031      	beq.n	8007ba2 <HAL_ADC_PollForConversion+0x106>
 8007b3e:	687b      	ldr	r3, [r7, #4]
 8007b40:	7e9b      	ldrb	r3, [r3, #26]
 8007b42:	2b00      	cmp	r3, #0
 8007b44:	d12d      	bne.n	8007ba2 <HAL_ADC_PollForConversion+0x106>
 8007b46:	687b      	ldr	r3, [r7, #4]
 8007b48:	681b      	ldr	r3, [r3, #0]
 8007b4a:	681b      	ldr	r3, [r3, #0]
 8007b4c:	f003 0308 	and.w	r3, r3, #8
 8007b50:	2b08      	cmp	r3, #8
 8007b52:	d126      	bne.n	8007ba2 <HAL_ADC_PollForConversion+0x106>
 8007b54:	687b      	ldr	r3, [r7, #4]
 8007b56:	681b      	ldr	r3, [r3, #0]
 8007b58:	4618      	mov	r0, r3
 8007b5a:	f7ff fcd7 	bl	800750c <LL_ADC_REG_IsConversionOngoing>
 8007b5e:	4603      	mov	r3, r0
 8007b60:	2b00      	cmp	r3, #0
 8007b62:	d112      	bne.n	8007b8a <HAL_ADC_PollForConversion+0xee>
 8007b64:	687b      	ldr	r3, [r7, #4]
 8007b66:	681b      	ldr	r3, [r3, #0]
 8007b68:	685a      	ldr	r2, [r3, #4]
 8007b6a:	687b      	ldr	r3, [r7, #4]
 8007b6c:	681b      	ldr	r3, [r3, #0]
 8007b6e:	f022 020c 	bic.w	r2, r2, #12
 8007b72:	605a      	str	r2, [r3, #4]
 8007b74:	687b      	ldr	r3, [r7, #4]
 8007b76:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8007b78:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8007b7c:	f023 0301 	bic.w	r3, r3, #1
 8007b80:	f043 0201 	orr.w	r2, r3, #1
 8007b84:	687b      	ldr	r3, [r7, #4]
 8007b86:	659a      	str	r2, [r3, #88]	; 0x58
 8007b88:	e00b      	b.n	8007ba2 <HAL_ADC_PollForConversion+0x106>
 8007b8a:	687b      	ldr	r3, [r7, #4]
 8007b8c:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8007b8e:	f043 0220 	orr.w	r2, r3, #32
 8007b92:	687b      	ldr	r3, [r7, #4]
 8007b94:	659a      	str	r2, [r3, #88]	; 0x58
 8007b96:	687b      	ldr	r3, [r7, #4]
 8007b98:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8007b9a:	f043 0201 	orr.w	r2, r3, #1
 8007b9e:	687b      	ldr	r3, [r7, #4]
 8007ba0:	65da      	str	r2, [r3, #92]	; 0x5c
 8007ba2:	687b      	ldr	r3, [r7, #4]
 8007ba4:	7e1b      	ldrb	r3, [r3, #24]
 8007ba6:	2b00      	cmp	r3, #0
 8007ba8:	d103      	bne.n	8007bb2 <HAL_ADC_PollForConversion+0x116>
 8007baa:	687b      	ldr	r3, [r7, #4]
 8007bac:	681b      	ldr	r3, [r3, #0]
 8007bae:	220c      	movs	r2, #12
 8007bb0:	601a      	str	r2, [r3, #0]
 8007bb2:	2300      	movs	r3, #0
 8007bb4:	4618      	mov	r0, r3
 8007bb6:	3710      	adds	r7, #16
 8007bb8:	46bd      	mov	sp, r7
 8007bba:	bd80      	pop	{r7, pc}

08007bbc <HAL_ADC_GetValue>:
 8007bbc:	b480      	push	{r7}
 8007bbe:	b083      	sub	sp, #12
 8007bc0:	af00      	add	r7, sp, #0
 8007bc2:	6078      	str	r0, [r7, #4]
 8007bc4:	687b      	ldr	r3, [r7, #4]
 8007bc6:	681b      	ldr	r3, [r3, #0]
 8007bc8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007bca:	4618      	mov	r0, r3
 8007bcc:	370c      	adds	r7, #12
 8007bce:	46bd      	mov	sp, r7
 8007bd0:	bc80      	pop	{r7}
 8007bd2:	4770      	bx	lr

08007bd4 <HAL_ADC_ConfigChannel>:
 8007bd4:	b580      	push	{r7, lr}
 8007bd6:	b088      	sub	sp, #32
 8007bd8:	af00      	add	r7, sp, #0
 8007bda:	6078      	str	r0, [r7, #4]
 8007bdc:	6039      	str	r1, [r7, #0]
 8007bde:	2300      	movs	r3, #0
 8007be0:	77fb      	strb	r3, [r7, #31]
 8007be2:	2300      	movs	r3, #0
 8007be4:	60bb      	str	r3, [r7, #8]
 8007be6:	687b      	ldr	r3, [r7, #4]
 8007be8:	691b      	ldr	r3, [r3, #16]
 8007bea:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 8007bee:	687b      	ldr	r3, [r7, #4]
 8007bf0:	f893 3054 	ldrb.w	r3, [r3, #84]	; 0x54
 8007bf4:	2b01      	cmp	r3, #1
 8007bf6:	d101      	bne.n	8007bfc <HAL_ADC_ConfigChannel+0x28>
 8007bf8:	2302      	movs	r3, #2
 8007bfa:	e110      	b.n	8007e1e <HAL_ADC_ConfigChannel+0x24a>
 8007bfc:	687b      	ldr	r3, [r7, #4]
 8007bfe:	2201      	movs	r2, #1
 8007c00:	f883 2054 	strb.w	r2, [r3, #84]	; 0x54
 8007c04:	687b      	ldr	r3, [r7, #4]
 8007c06:	681b      	ldr	r3, [r3, #0]
 8007c08:	4618      	mov	r0, r3
 8007c0a:	f7ff fc7f 	bl	800750c <LL_ADC_REG_IsConversionOngoing>
 8007c0e:	4603      	mov	r3, r0
 8007c10:	2b00      	cmp	r3, #0
 8007c12:	f040 80f7 	bne.w	8007e04 <HAL_ADC_ConfigChannel+0x230>
 8007c16:	683b      	ldr	r3, [r7, #0]
 8007c18:	685b      	ldr	r3, [r3, #4]
 8007c1a:	2b02      	cmp	r3, #2
 8007c1c:	f000 80b1 	beq.w	8007d82 <HAL_ADC_ConfigChannel+0x1ae>
 8007c20:	687b      	ldr	r3, [r7, #4]
 8007c22:	691b      	ldr	r3, [r3, #16]
 8007c24:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 8007c28:	d004      	beq.n	8007c34 <HAL_ADC_ConfigChannel+0x60>
 8007c2a:	687b      	ldr	r3, [r7, #4]
 8007c2c:	691b      	ldr	r3, [r3, #16]
 8007c2e:	4a7e      	ldr	r2, [pc, #504]	; (8007e28 <HAL_ADC_ConfigChannel+0x254>)
 8007c30:	4293      	cmp	r3, r2
 8007c32:	d108      	bne.n	8007c46 <HAL_ADC_ConfigChannel+0x72>
 8007c34:	687b      	ldr	r3, [r7, #4]
 8007c36:	681a      	ldr	r2, [r3, #0]
 8007c38:	683b      	ldr	r3, [r7, #0]
 8007c3a:	681b      	ldr	r3, [r3, #0]
 8007c3c:	4619      	mov	r1, r3
 8007c3e:	4610      	mov	r0, r2
 8007c40:	f7ff fb7c 	bl	800733c <LL_ADC_REG_SetSequencerChAdd>
 8007c44:	e041      	b.n	8007cca <HAL_ADC_ConfigChannel+0xf6>
 8007c46:	687b      	ldr	r3, [r7, #4]
 8007c48:	6e1a      	ldr	r2, [r3, #96]	; 0x60
 8007c4a:	683b      	ldr	r3, [r7, #0]
 8007c4c:	685b      	ldr	r3, [r3, #4]
 8007c4e:	f003 031f 	and.w	r3, r3, #31
 8007c52:	210f      	movs	r1, #15
 8007c54:	fa01 f303 	lsl.w	r3, r1, r3
 8007c58:	43db      	mvns	r3, r3
 8007c5a:	401a      	ands	r2, r3
 8007c5c:	683b      	ldr	r3, [r7, #0]
 8007c5e:	681b      	ldr	r3, [r3, #0]
 8007c60:	f3c3 0311 	ubfx	r3, r3, #0, #18
 8007c64:	2b00      	cmp	r3, #0
 8007c66:	d105      	bne.n	8007c74 <HAL_ADC_ConfigChannel+0xa0>
 8007c68:	683b      	ldr	r3, [r7, #0]
 8007c6a:	681b      	ldr	r3, [r3, #0]
 8007c6c:	0e9b      	lsrs	r3, r3, #26
 8007c6e:	f003 031f 	and.w	r3, r3, #31
 8007c72:	e011      	b.n	8007c98 <HAL_ADC_ConfigChannel+0xc4>
 8007c74:	683b      	ldr	r3, [r7, #0]
 8007c76:	681b      	ldr	r3, [r3, #0]
 8007c78:	613b      	str	r3, [r7, #16]
 8007c7a:	693b      	ldr	r3, [r7, #16]
 8007c7c:	fa93 f3a3 	rbit	r3, r3
 8007c80:	60fb      	str	r3, [r7, #12]
 8007c82:	68fb      	ldr	r3, [r7, #12]
 8007c84:	617b      	str	r3, [r7, #20]
 8007c86:	697b      	ldr	r3, [r7, #20]
 8007c88:	2b00      	cmp	r3, #0
 8007c8a:	d101      	bne.n	8007c90 <HAL_ADC_ConfigChannel+0xbc>
 8007c8c:	2320      	movs	r3, #32
 8007c8e:	e003      	b.n	8007c98 <HAL_ADC_ConfigChannel+0xc4>
 8007c90:	697b      	ldr	r3, [r7, #20]
 8007c92:	fab3 f383 	clz	r3, r3
 8007c96:	b2db      	uxtb	r3, r3
 8007c98:	6839      	ldr	r1, [r7, #0]
 8007c9a:	6849      	ldr	r1, [r1, #4]
 8007c9c:	f001 011f 	and.w	r1, r1, #31
 8007ca0:	408b      	lsls	r3, r1
 8007ca2:	431a      	orrs	r2, r3
 8007ca4:	687b      	ldr	r3, [r7, #4]
 8007ca6:	661a      	str	r2, [r3, #96]	; 0x60
 8007ca8:	683b      	ldr	r3, [r7, #0]
 8007caa:	685b      	ldr	r3, [r3, #4]
 8007cac:	089b      	lsrs	r3, r3, #2
 8007cae:	1c5a      	adds	r2, r3, #1
 8007cb0:	687b      	ldr	r3, [r7, #4]
 8007cb2:	69db      	ldr	r3, [r3, #28]
 8007cb4:	429a      	cmp	r2, r3
 8007cb6:	d808      	bhi.n	8007cca <HAL_ADC_ConfigChannel+0xf6>
 8007cb8:	687b      	ldr	r3, [r7, #4]
 8007cba:	6818      	ldr	r0, [r3, #0]
 8007cbc:	683b      	ldr	r3, [r7, #0]
 8007cbe:	6859      	ldr	r1, [r3, #4]
 8007cc0:	683b      	ldr	r3, [r7, #0]
 8007cc2:	681b      	ldr	r3, [r3, #0]
 8007cc4:	461a      	mov	r2, r3
 8007cc6:	f7ff fb18 	bl	80072fa <LL_ADC_REG_SetSequencerRanks>
 8007cca:	687b      	ldr	r3, [r7, #4]
 8007ccc:	6818      	ldr	r0, [r3, #0]
 8007cce:	683b      	ldr	r3, [r7, #0]
 8007cd0:	6819      	ldr	r1, [r3, #0]
 8007cd2:	683b      	ldr	r3, [r7, #0]
 8007cd4:	689b      	ldr	r3, [r3, #8]
 8007cd6:	461a      	mov	r2, r3
 8007cd8:	f7ff fb55 	bl	8007386 <LL_ADC_SetChannelSamplingTime>
 8007cdc:	683b      	ldr	r3, [r7, #0]
 8007cde:	681b      	ldr	r3, [r3, #0]
 8007ce0:	2b00      	cmp	r3, #0
 8007ce2:	f280 8097 	bge.w	8007e14 <HAL_ADC_ConfigChannel+0x240>
 8007ce6:	4851      	ldr	r0, [pc, #324]	; (8007e2c <HAL_ADC_ConfigChannel+0x258>)
 8007ce8:	f7ff faca 	bl	8007280 <LL_ADC_GetCommonPathInternalCh>
 8007cec:	61b8      	str	r0, [r7, #24]
 8007cee:	683b      	ldr	r3, [r7, #0]
 8007cf0:	681b      	ldr	r3, [r3, #0]
 8007cf2:	4a4f      	ldr	r2, [pc, #316]	; (8007e30 <HAL_ADC_ConfigChannel+0x25c>)
 8007cf4:	4293      	cmp	r3, r2
 8007cf6:	d120      	bne.n	8007d3a <HAL_ADC_ConfigChannel+0x166>
 8007cf8:	69bb      	ldr	r3, [r7, #24]
 8007cfa:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8007cfe:	2b00      	cmp	r3, #0
 8007d00:	d11b      	bne.n	8007d3a <HAL_ADC_ConfigChannel+0x166>
 8007d02:	69bb      	ldr	r3, [r7, #24]
 8007d04:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8007d08:	4619      	mov	r1, r3
 8007d0a:	4848      	ldr	r0, [pc, #288]	; (8007e2c <HAL_ADC_ConfigChannel+0x258>)
 8007d0c:	f7ff faa6 	bl	800725c <LL_ADC_SetCommonPathInternalCh>
 8007d10:	4b48      	ldr	r3, [pc, #288]	; (8007e34 <HAL_ADC_ConfigChannel+0x260>)
 8007d12:	681b      	ldr	r3, [r3, #0]
 8007d14:	099b      	lsrs	r3, r3, #6
 8007d16:	4a48      	ldr	r2, [pc, #288]	; (8007e38 <HAL_ADC_ConfigChannel+0x264>)
 8007d18:	fba2 2303 	umull	r2, r3, r2, r3
 8007d1c:	099a      	lsrs	r2, r3, #6
 8007d1e:	4613      	mov	r3, r2
 8007d20:	005b      	lsls	r3, r3, #1
 8007d22:	4413      	add	r3, r2
 8007d24:	009b      	lsls	r3, r3, #2
 8007d26:	3301      	adds	r3, #1
 8007d28:	60bb      	str	r3, [r7, #8]
 8007d2a:	e002      	b.n	8007d32 <HAL_ADC_ConfigChannel+0x15e>
 8007d2c:	68bb      	ldr	r3, [r7, #8]
 8007d2e:	3b01      	subs	r3, #1
 8007d30:	60bb      	str	r3, [r7, #8]
 8007d32:	68bb      	ldr	r3, [r7, #8]
 8007d34:	2b00      	cmp	r3, #0
 8007d36:	d1f9      	bne.n	8007d2c <HAL_ADC_ConfigChannel+0x158>
 8007d38:	e06c      	b.n	8007e14 <HAL_ADC_ConfigChannel+0x240>
 8007d3a:	683b      	ldr	r3, [r7, #0]
 8007d3c:	681b      	ldr	r3, [r3, #0]
 8007d3e:	4a3f      	ldr	r2, [pc, #252]	; (8007e3c <HAL_ADC_ConfigChannel+0x268>)
 8007d40:	4293      	cmp	r3, r2
 8007d42:	d10c      	bne.n	8007d5e <HAL_ADC_ConfigChannel+0x18a>
 8007d44:	69bb      	ldr	r3, [r7, #24]
 8007d46:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 8007d4a:	2b00      	cmp	r3, #0
 8007d4c:	d107      	bne.n	8007d5e <HAL_ADC_ConfigChannel+0x18a>
 8007d4e:	69bb      	ldr	r3, [r7, #24]
 8007d50:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8007d54:	4619      	mov	r1, r3
 8007d56:	4835      	ldr	r0, [pc, #212]	; (8007e2c <HAL_ADC_ConfigChannel+0x258>)
 8007d58:	f7ff fa80 	bl	800725c <LL_ADC_SetCommonPathInternalCh>
 8007d5c:	e05a      	b.n	8007e14 <HAL_ADC_ConfigChannel+0x240>
 8007d5e:	683b      	ldr	r3, [r7, #0]
 8007d60:	681b      	ldr	r3, [r3, #0]
 8007d62:	4a37      	ldr	r2, [pc, #220]	; (8007e40 <HAL_ADC_ConfigChannel+0x26c>)
 8007d64:	4293      	cmp	r3, r2
 8007d66:	d155      	bne.n	8007e14 <HAL_ADC_ConfigChannel+0x240>
 8007d68:	69bb      	ldr	r3, [r7, #24]
 8007d6a:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8007d6e:	2b00      	cmp	r3, #0
 8007d70:	d150      	bne.n	8007e14 <HAL_ADC_ConfigChannel+0x240>
 8007d72:	69bb      	ldr	r3, [r7, #24]
 8007d74:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
 8007d78:	4619      	mov	r1, r3
 8007d7a:	482c      	ldr	r0, [pc, #176]	; (8007e2c <HAL_ADC_ConfigChannel+0x258>)
 8007d7c:	f7ff fa6e 	bl	800725c <LL_ADC_SetCommonPathInternalCh>
 8007d80:	e048      	b.n	8007e14 <HAL_ADC_ConfigChannel+0x240>
 8007d82:	687b      	ldr	r3, [r7, #4]
 8007d84:	691b      	ldr	r3, [r3, #16]
 8007d86:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 8007d8a:	d004      	beq.n	8007d96 <HAL_ADC_ConfigChannel+0x1c2>
 8007d8c:	687b      	ldr	r3, [r7, #4]
 8007d8e:	691b      	ldr	r3, [r3, #16]
 8007d90:	4a25      	ldr	r2, [pc, #148]	; (8007e28 <HAL_ADC_ConfigChannel+0x254>)
 8007d92:	4293      	cmp	r3, r2
 8007d94:	d107      	bne.n	8007da6 <HAL_ADC_ConfigChannel+0x1d2>
 8007d96:	687b      	ldr	r3, [r7, #4]
 8007d98:	681a      	ldr	r2, [r3, #0]
 8007d9a:	683b      	ldr	r3, [r7, #0]
 8007d9c:	681b      	ldr	r3, [r3, #0]
 8007d9e:	4619      	mov	r1, r3
 8007da0:	4610      	mov	r0, r2
 8007da2:	f7ff fadd 	bl	8007360 <LL_ADC_REG_SetSequencerChRem>
 8007da6:	683b      	ldr	r3, [r7, #0]
 8007da8:	681b      	ldr	r3, [r3, #0]
 8007daa:	2b00      	cmp	r3, #0
 8007dac:	da32      	bge.n	8007e14 <HAL_ADC_ConfigChannel+0x240>
 8007dae:	481f      	ldr	r0, [pc, #124]	; (8007e2c <HAL_ADC_ConfigChannel+0x258>)
 8007db0:	f7ff fa66 	bl	8007280 <LL_ADC_GetCommonPathInternalCh>
 8007db4:	61b8      	str	r0, [r7, #24]
 8007db6:	683b      	ldr	r3, [r7, #0]
 8007db8:	681b      	ldr	r3, [r3, #0]
 8007dba:	4a1d      	ldr	r2, [pc, #116]	; (8007e30 <HAL_ADC_ConfigChannel+0x25c>)
 8007dbc:	4293      	cmp	r3, r2
 8007dbe:	d107      	bne.n	8007dd0 <HAL_ADC_ConfigChannel+0x1fc>
 8007dc0:	69bb      	ldr	r3, [r7, #24]
 8007dc2:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 8007dc6:	4619      	mov	r1, r3
 8007dc8:	4818      	ldr	r0, [pc, #96]	; (8007e2c <HAL_ADC_ConfigChannel+0x258>)
 8007dca:	f7ff fa47 	bl	800725c <LL_ADC_SetCommonPathInternalCh>
 8007dce:	e021      	b.n	8007e14 <HAL_ADC_ConfigChannel+0x240>
 8007dd0:	683b      	ldr	r3, [r7, #0]
 8007dd2:	681b      	ldr	r3, [r3, #0]
 8007dd4:	4a19      	ldr	r2, [pc, #100]	; (8007e3c <HAL_ADC_ConfigChannel+0x268>)
 8007dd6:	4293      	cmp	r3, r2
 8007dd8:	d107      	bne.n	8007dea <HAL_ADC_ConfigChannel+0x216>
 8007dda:	69bb      	ldr	r3, [r7, #24]
 8007ddc:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 8007de0:	4619      	mov	r1, r3
 8007de2:	4812      	ldr	r0, [pc, #72]	; (8007e2c <HAL_ADC_ConfigChannel+0x258>)
 8007de4:	f7ff fa3a 	bl	800725c <LL_ADC_SetCommonPathInternalCh>
 8007de8:	e014      	b.n	8007e14 <HAL_ADC_ConfigChannel+0x240>
 8007dea:	683b      	ldr	r3, [r7, #0]
 8007dec:	681b      	ldr	r3, [r3, #0]
 8007dee:	4a14      	ldr	r2, [pc, #80]	; (8007e40 <HAL_ADC_ConfigChannel+0x26c>)
 8007df0:	4293      	cmp	r3, r2
 8007df2:	d10f      	bne.n	8007e14 <HAL_ADC_ConfigChannel+0x240>
 8007df4:	69bb      	ldr	r3, [r7, #24]
 8007df6:	f423 0380 	bic.w	r3, r3, #4194304	; 0x400000
 8007dfa:	4619      	mov	r1, r3
 8007dfc:	480b      	ldr	r0, [pc, #44]	; (8007e2c <HAL_ADC_ConfigChannel+0x258>)
 8007dfe:	f7ff fa2d 	bl	800725c <LL_ADC_SetCommonPathInternalCh>
 8007e02:	e007      	b.n	8007e14 <HAL_ADC_ConfigChannel+0x240>
 8007e04:	687b      	ldr	r3, [r7, #4]
 8007e06:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8007e08:	f043 0220 	orr.w	r2, r3, #32
 8007e0c:	687b      	ldr	r3, [r7, #4]
 8007e0e:	659a      	str	r2, [r3, #88]	; 0x58
 8007e10:	2301      	movs	r3, #1
 8007e12:	77fb      	strb	r3, [r7, #31]
 8007e14:	687b      	ldr	r3, [r7, #4]
 8007e16:	2200      	movs	r2, #0
 8007e18:	f883 2054 	strb.w	r2, [r3, #84]	; 0x54
 8007e1c:	7ffb      	ldrb	r3, [r7, #31]
 8007e1e:	4618      	mov	r0, r3
 8007e20:	3720      	adds	r7, #32
 8007e22:	46bd      	mov	sp, r7
 8007e24:	bd80      	pop	{r7, pc}
 8007e26:	bf00      	nop
 8007e28:	80000004 	.word	0x80000004
 8007e2c:	40012708 	.word	0x40012708
 8007e30:	b0001000 	.word	0xb0001000
 8007e34:	2000003c 	.word	0x2000003c
 8007e38:	053e2d63 	.word	0x053e2d63
 8007e3c:	b8004000 	.word	0xb8004000
 8007e40:	b4002000 	.word	0xb4002000

08007e44 <ADC_ConversionStop>:
 8007e44:	b580      	push	{r7, lr}
 8007e46:	b084      	sub	sp, #16
 8007e48:	af00      	add	r7, sp, #0
 8007e4a:	6078      	str	r0, [r7, #4]
 8007e4c:	687b      	ldr	r3, [r7, #4]
 8007e4e:	681b      	ldr	r3, [r3, #0]
 8007e50:	4618      	mov	r0, r3
 8007e52:	f7ff fb5b 	bl	800750c <LL_ADC_REG_IsConversionOngoing>
 8007e56:	4603      	mov	r3, r0
 8007e58:	2b00      	cmp	r3, #0
 8007e5a:	d02c      	beq.n	8007eb6 <ADC_ConversionStop+0x72>
 8007e5c:	687b      	ldr	r3, [r7, #4]
 8007e5e:	681b      	ldr	r3, [r3, #0]
 8007e60:	4618      	mov	r0, r3
 8007e62:	f7ff fb1b 	bl	800749c <LL_ADC_IsDisableOngoing>
 8007e66:	4603      	mov	r3, r0
 8007e68:	2b00      	cmp	r3, #0
 8007e6a:	d104      	bne.n	8007e76 <ADC_ConversionStop+0x32>
 8007e6c:	687b      	ldr	r3, [r7, #4]
 8007e6e:	681b      	ldr	r3, [r3, #0]
 8007e70:	4618      	mov	r0, r3
 8007e72:	f7ff fb38 	bl	80074e6 <LL_ADC_REG_StopConversion>
 8007e76:	f7fe faad 	bl	80063d4 <HAL_GetTick>
 8007e7a:	60f8      	str	r0, [r7, #12]
 8007e7c:	e014      	b.n	8007ea8 <ADC_ConversionStop+0x64>
 8007e7e:	f7fe faa9 	bl	80063d4 <HAL_GetTick>
 8007e82:	4602      	mov	r2, r0
 8007e84:	68fb      	ldr	r3, [r7, #12]
 8007e86:	1ad3      	subs	r3, r2, r3
 8007e88:	2b02      	cmp	r3, #2
 8007e8a:	d90d      	bls.n	8007ea8 <ADC_ConversionStop+0x64>
 8007e8c:	687b      	ldr	r3, [r7, #4]
 8007e8e:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8007e90:	f043 0210 	orr.w	r2, r3, #16
 8007e94:	687b      	ldr	r3, [r7, #4]
 8007e96:	659a      	str	r2, [r3, #88]	; 0x58
 8007e98:	687b      	ldr	r3, [r7, #4]
 8007e9a:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8007e9c:	f043 0201 	orr.w	r2, r3, #1
 8007ea0:	687b      	ldr	r3, [r7, #4]
 8007ea2:	65da      	str	r2, [r3, #92]	; 0x5c
 8007ea4:	2301      	movs	r3, #1
 8007ea6:	e007      	b.n	8007eb8 <ADC_ConversionStop+0x74>
 8007ea8:	687b      	ldr	r3, [r7, #4]
 8007eaa:	681b      	ldr	r3, [r3, #0]
 8007eac:	689b      	ldr	r3, [r3, #8]
 8007eae:	f003 0304 	and.w	r3, r3, #4
 8007eb2:	2b00      	cmp	r3, #0
 8007eb4:	d1e3      	bne.n	8007e7e <ADC_ConversionStop+0x3a>
 8007eb6:	2300      	movs	r3, #0
 8007eb8:	4618      	mov	r0, r3
 8007eba:	3710      	adds	r7, #16
 8007ebc:	46bd      	mov	sp, r7
 8007ebe:	bd80      	pop	{r7, pc}

08007ec0 <ADC_Enable>:
 8007ec0:	b580      	push	{r7, lr}
 8007ec2:	b084      	sub	sp, #16
 8007ec4:	af00      	add	r7, sp, #0
 8007ec6:	6078      	str	r0, [r7, #4]
 8007ec8:	2300      	movs	r3, #0
 8007eca:	60bb      	str	r3, [r7, #8]
 8007ecc:	687b      	ldr	r3, [r7, #4]
 8007ece:	681b      	ldr	r3, [r3, #0]
 8007ed0:	4618      	mov	r0, r3
 8007ed2:	f7ff fad1 	bl	8007478 <LL_ADC_IsEnabled>
 8007ed6:	4603      	mov	r3, r0
 8007ed8:	2b00      	cmp	r3, #0
 8007eda:	d162      	bne.n	8007fa2 <ADC_Enable+0xe2>
 8007edc:	687b      	ldr	r3, [r7, #4]
 8007ede:	681b      	ldr	r3, [r3, #0]
 8007ee0:	689a      	ldr	r2, [r3, #8]
 8007ee2:	4b32      	ldr	r3, [pc, #200]	; (8007fac <ADC_Enable+0xec>)
 8007ee4:	4013      	ands	r3, r2
 8007ee6:	2b00      	cmp	r3, #0
 8007ee8:	d00d      	beq.n	8007f06 <ADC_Enable+0x46>
 8007eea:	687b      	ldr	r3, [r7, #4]
 8007eec:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8007eee:	f043 0210 	orr.w	r2, r3, #16
 8007ef2:	687b      	ldr	r3, [r7, #4]
 8007ef4:	659a      	str	r2, [r3, #88]	; 0x58
 8007ef6:	687b      	ldr	r3, [r7, #4]
 8007ef8:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8007efa:	f043 0201 	orr.w	r2, r3, #1
 8007efe:	687b      	ldr	r3, [r7, #4]
 8007f00:	65da      	str	r2, [r3, #92]	; 0x5c
 8007f02:	2301      	movs	r3, #1
 8007f04:	e04e      	b.n	8007fa4 <ADC_Enable+0xe4>
 8007f06:	687b      	ldr	r3, [r7, #4]
 8007f08:	681b      	ldr	r3, [r3, #0]
 8007f0a:	4618      	mov	r0, r3
 8007f0c:	f7ff fa8e 	bl	800742c <LL_ADC_Enable>
 8007f10:	4827      	ldr	r0, [pc, #156]	; (8007fb0 <ADC_Enable+0xf0>)
 8007f12:	f7ff f9b5 	bl	8007280 <LL_ADC_GetCommonPathInternalCh>
 8007f16:	4603      	mov	r3, r0
 8007f18:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8007f1c:	2b00      	cmp	r3, #0
 8007f1e:	d00f      	beq.n	8007f40 <ADC_Enable+0x80>
 8007f20:	4b24      	ldr	r3, [pc, #144]	; (8007fb4 <ADC_Enable+0xf4>)
 8007f22:	681b      	ldr	r3, [r3, #0]
 8007f24:	099b      	lsrs	r3, r3, #6
 8007f26:	4a24      	ldr	r2, [pc, #144]	; (8007fb8 <ADC_Enable+0xf8>)
 8007f28:	fba2 2303 	umull	r2, r3, r2, r3
 8007f2c:	099b      	lsrs	r3, r3, #6
 8007f2e:	3301      	adds	r3, #1
 8007f30:	60bb      	str	r3, [r7, #8]
 8007f32:	e002      	b.n	8007f3a <ADC_Enable+0x7a>
 8007f34:	68bb      	ldr	r3, [r7, #8]
 8007f36:	3b01      	subs	r3, #1
 8007f38:	60bb      	str	r3, [r7, #8]
 8007f3a:	68bb      	ldr	r3, [r7, #8]
 8007f3c:	2b00      	cmp	r3, #0
 8007f3e:	d1f9      	bne.n	8007f34 <ADC_Enable+0x74>
 8007f40:	687b      	ldr	r3, [r7, #4]
 8007f42:	7e5b      	ldrb	r3, [r3, #25]
 8007f44:	2b01      	cmp	r3, #1
 8007f46:	d02c      	beq.n	8007fa2 <ADC_Enable+0xe2>
 8007f48:	f7fe fa44 	bl	80063d4 <HAL_GetTick>
 8007f4c:	60f8      	str	r0, [r7, #12]
 8007f4e:	e021      	b.n	8007f94 <ADC_Enable+0xd4>
 8007f50:	687b      	ldr	r3, [r7, #4]
 8007f52:	681b      	ldr	r3, [r3, #0]
 8007f54:	4618      	mov	r0, r3
 8007f56:	f7ff fa8f 	bl	8007478 <LL_ADC_IsEnabled>
 8007f5a:	4603      	mov	r3, r0
 8007f5c:	2b00      	cmp	r3, #0
 8007f5e:	d104      	bne.n	8007f6a <ADC_Enable+0xaa>
 8007f60:	687b      	ldr	r3, [r7, #4]
 8007f62:	681b      	ldr	r3, [r3, #0]
 8007f64:	4618      	mov	r0, r3
 8007f66:	f7ff fa61 	bl	800742c <LL_ADC_Enable>
 8007f6a:	f7fe fa33 	bl	80063d4 <HAL_GetTick>
 8007f6e:	4602      	mov	r2, r0
 8007f70:	68fb      	ldr	r3, [r7, #12]
 8007f72:	1ad3      	subs	r3, r2, r3
 8007f74:	2b02      	cmp	r3, #2
 8007f76:	d90d      	bls.n	8007f94 <ADC_Enable+0xd4>
 8007f78:	687b      	ldr	r3, [r7, #4]
 8007f7a:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8007f7c:	f043 0210 	orr.w	r2, r3, #16
 8007f80:	687b      	ldr	r3, [r7, #4]
 8007f82:	659a      	str	r2, [r3, #88]	; 0x58
 8007f84:	687b      	ldr	r3, [r7, #4]
 8007f86:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8007f88:	f043 0201 	orr.w	r2, r3, #1
 8007f8c:	687b      	ldr	r3, [r7, #4]
 8007f8e:	65da      	str	r2, [r3, #92]	; 0x5c
 8007f90:	2301      	movs	r3, #1
 8007f92:	e007      	b.n	8007fa4 <ADC_Enable+0xe4>
 8007f94:	687b      	ldr	r3, [r7, #4]
 8007f96:	681b      	ldr	r3, [r3, #0]
 8007f98:	681b      	ldr	r3, [r3, #0]
 8007f9a:	f003 0301 	and.w	r3, r3, #1
 8007f9e:	2b01      	cmp	r3, #1
 8007fa0:	d1d6      	bne.n	8007f50 <ADC_Enable+0x90>
 8007fa2:	2300      	movs	r3, #0
 8007fa4:	4618      	mov	r0, r3
 8007fa6:	3710      	adds	r7, #16
 8007fa8:	46bd      	mov	sp, r7
 8007faa:	bd80      	pop	{r7, pc}
 8007fac:	80000017 	.word	0x80000017
 8007fb0:	40012708 	.word	0x40012708
 8007fb4:	2000003c 	.word	0x2000003c
 8007fb8:	053e2d63 	.word	0x053e2d63

08007fbc <ADC_Disable>:
 8007fbc:	b580      	push	{r7, lr}
 8007fbe:	b084      	sub	sp, #16
 8007fc0:	af00      	add	r7, sp, #0
 8007fc2:	6078      	str	r0, [r7, #4]
 8007fc4:	687b      	ldr	r3, [r7, #4]
 8007fc6:	681b      	ldr	r3, [r3, #0]
 8007fc8:	4618      	mov	r0, r3
 8007fca:	f7ff fa67 	bl	800749c <LL_ADC_IsDisableOngoing>
 8007fce:	60f8      	str	r0, [r7, #12]
 8007fd0:	687b      	ldr	r3, [r7, #4]
 8007fd2:	681b      	ldr	r3, [r3, #0]
 8007fd4:	4618      	mov	r0, r3
 8007fd6:	f7ff fa4f 	bl	8007478 <LL_ADC_IsEnabled>
 8007fda:	4603      	mov	r3, r0
 8007fdc:	2b00      	cmp	r3, #0
 8007fde:	d040      	beq.n	8008062 <ADC_Disable+0xa6>
 8007fe0:	68fb      	ldr	r3, [r7, #12]
 8007fe2:	2b00      	cmp	r3, #0
 8007fe4:	d13d      	bne.n	8008062 <ADC_Disable+0xa6>
 8007fe6:	687b      	ldr	r3, [r7, #4]
 8007fe8:	681b      	ldr	r3, [r3, #0]
 8007fea:	689b      	ldr	r3, [r3, #8]
 8007fec:	f003 0305 	and.w	r3, r3, #5
 8007ff0:	2b01      	cmp	r3, #1
 8007ff2:	d10c      	bne.n	800800e <ADC_Disable+0x52>
 8007ff4:	687b      	ldr	r3, [r7, #4]
 8007ff6:	681b      	ldr	r3, [r3, #0]
 8007ff8:	4618      	mov	r0, r3
 8007ffa:	f7ff fa2a 	bl	8007452 <LL_ADC_Disable>
 8007ffe:	687b      	ldr	r3, [r7, #4]
 8008000:	681b      	ldr	r3, [r3, #0]
 8008002:	2203      	movs	r2, #3
 8008004:	601a      	str	r2, [r3, #0]
 8008006:	f7fe f9e5 	bl	80063d4 <HAL_GetTick>
 800800a:	60b8      	str	r0, [r7, #8]
 800800c:	e022      	b.n	8008054 <ADC_Disable+0x98>
 800800e:	687b      	ldr	r3, [r7, #4]
 8008010:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8008012:	f043 0210 	orr.w	r2, r3, #16
 8008016:	687b      	ldr	r3, [r7, #4]
 8008018:	659a      	str	r2, [r3, #88]	; 0x58
 800801a:	687b      	ldr	r3, [r7, #4]
 800801c:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800801e:	f043 0201 	orr.w	r2, r3, #1
 8008022:	687b      	ldr	r3, [r7, #4]
 8008024:	65da      	str	r2, [r3, #92]	; 0x5c
 8008026:	2301      	movs	r3, #1
 8008028:	e01c      	b.n	8008064 <ADC_Disable+0xa8>
 800802a:	f7fe f9d3 	bl	80063d4 <HAL_GetTick>
 800802e:	4602      	mov	r2, r0
 8008030:	68bb      	ldr	r3, [r7, #8]
 8008032:	1ad3      	subs	r3, r2, r3
 8008034:	2b02      	cmp	r3, #2
 8008036:	d90d      	bls.n	8008054 <ADC_Disable+0x98>
 8008038:	687b      	ldr	r3, [r7, #4]
 800803a:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800803c:	f043 0210 	orr.w	r2, r3, #16
 8008040:	687b      	ldr	r3, [r7, #4]
 8008042:	659a      	str	r2, [r3, #88]	; 0x58
 8008044:	687b      	ldr	r3, [r7, #4]
 8008046:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8008048:	f043 0201 	orr.w	r2, r3, #1
 800804c:	687b      	ldr	r3, [r7, #4]
 800804e:	65da      	str	r2, [r3, #92]	; 0x5c
 8008050:	2301      	movs	r3, #1
 8008052:	e007      	b.n	8008064 <ADC_Disable+0xa8>
 8008054:	687b      	ldr	r3, [r7, #4]
 8008056:	681b      	ldr	r3, [r3, #0]
 8008058:	689b      	ldr	r3, [r3, #8]
 800805a:	f003 0301 	and.w	r3, r3, #1
 800805e:	2b00      	cmp	r3, #0
 8008060:	d1e3      	bne.n	800802a <ADC_Disable+0x6e>
 8008062:	2300      	movs	r3, #0
 8008064:	4618      	mov	r0, r3
 8008066:	3710      	adds	r7, #16
 8008068:	46bd      	mov	sp, r7
 800806a:	bd80      	pop	{r7, pc}

0800806c <LL_ADC_IsEnabled>:
 800806c:	b480      	push	{r7}
 800806e:	b083      	sub	sp, #12
 8008070:	af00      	add	r7, sp, #0
 8008072:	6078      	str	r0, [r7, #4]
 8008074:	687b      	ldr	r3, [r7, #4]
 8008076:	689b      	ldr	r3, [r3, #8]
 8008078:	f003 0301 	and.w	r3, r3, #1
 800807c:	2b01      	cmp	r3, #1
 800807e:	d101      	bne.n	8008084 <LL_ADC_IsEnabled+0x18>
 8008080:	2301      	movs	r3, #1
 8008082:	e000      	b.n	8008086 <LL_ADC_IsEnabled+0x1a>
 8008084:	2300      	movs	r3, #0
 8008086:	4618      	mov	r0, r3
 8008088:	370c      	adds	r7, #12
 800808a:	46bd      	mov	sp, r7
 800808c:	bc80      	pop	{r7}
 800808e:	4770      	bx	lr

08008090 <LL_ADC_IsCalibrationOnGoing>:
 8008090:	b480      	push	{r7}
 8008092:	b083      	sub	sp, #12
 8008094:	af00      	add	r7, sp, #0
 8008096:	6078      	str	r0, [r7, #4]
 8008098:	687b      	ldr	r3, [r7, #4]
 800809a:	689b      	ldr	r3, [r3, #8]
 800809c:	f003 4300 	and.w	r3, r3, #2147483648	; 0x80000000
 80080a0:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 80080a4:	d101      	bne.n	80080aa <LL_ADC_IsCalibrationOnGoing+0x1a>
 80080a6:	2301      	movs	r3, #1
 80080a8:	e000      	b.n	80080ac <LL_ADC_IsCalibrationOnGoing+0x1c>
 80080aa:	2300      	movs	r3, #0
 80080ac:	4618      	mov	r0, r3
 80080ae:	370c      	adds	r7, #12
 80080b0:	46bd      	mov	sp, r7
 80080b2:	bc80      	pop	{r7}
 80080b4:	4770      	bx	lr

080080b6 <HAL_ADCEx_Calibration_Start>:
 80080b6:	b580      	push	{r7, lr}
 80080b8:	b086      	sub	sp, #24
 80080ba:	af00      	add	r7, sp, #0
 80080bc:	6078      	str	r0, [r7, #4]
 80080be:	2300      	movs	r3, #0
 80080c0:	60fb      	str	r3, [r7, #12]
 80080c2:	687b      	ldr	r3, [r7, #4]
 80080c4:	f893 3054 	ldrb.w	r3, [r3, #84]	; 0x54
 80080c8:	2b01      	cmp	r3, #1
 80080ca:	d101      	bne.n	80080d0 <HAL_ADCEx_Calibration_Start+0x1a>
 80080cc:	2302      	movs	r3, #2
 80080ce:	e068      	b.n	80081a2 <HAL_ADCEx_Calibration_Start+0xec>
 80080d0:	687b      	ldr	r3, [r7, #4]
 80080d2:	2201      	movs	r2, #1
 80080d4:	f883 2054 	strb.w	r2, [r3, #84]	; 0x54
 80080d8:	6878      	ldr	r0, [r7, #4]
 80080da:	f7ff ff6f 	bl	8007fbc <ADC_Disable>
 80080de:	4603      	mov	r3, r0
 80080e0:	75fb      	strb	r3, [r7, #23]
 80080e2:	687b      	ldr	r3, [r7, #4]
 80080e4:	681b      	ldr	r3, [r3, #0]
 80080e6:	4618      	mov	r0, r3
 80080e8:	f7ff ffc0 	bl	800806c <LL_ADC_IsEnabled>
 80080ec:	4603      	mov	r3, r0
 80080ee:	2b00      	cmp	r3, #0
 80080f0:	d14c      	bne.n	800818c <HAL_ADCEx_Calibration_Start+0xd6>
 80080f2:	687b      	ldr	r3, [r7, #4]
 80080f4:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80080f6:	f423 7381 	bic.w	r3, r3, #258	; 0x102
 80080fa:	f043 0202 	orr.w	r2, r3, #2
 80080fe:	687b      	ldr	r3, [r7, #4]
 8008100:	659a      	str	r2, [r3, #88]	; 0x58
 8008102:	687b      	ldr	r3, [r7, #4]
 8008104:	681b      	ldr	r3, [r3, #0]
 8008106:	68db      	ldr	r3, [r3, #12]
 8008108:	f003 0303 	and.w	r3, r3, #3
 800810c:	613b      	str	r3, [r7, #16]
 800810e:	687b      	ldr	r3, [r7, #4]
 8008110:	681b      	ldr	r3, [r3, #0]
 8008112:	68da      	ldr	r2, [r3, #12]
 8008114:	687b      	ldr	r3, [r7, #4]
 8008116:	681b      	ldr	r3, [r3, #0]
 8008118:	f022 0203 	bic.w	r2, r2, #3
 800811c:	60da      	str	r2, [r3, #12]
 800811e:	687b      	ldr	r3, [r7, #4]
 8008120:	681b      	ldr	r3, [r3, #0]
 8008122:	689a      	ldr	r2, [r3, #8]
 8008124:	687b      	ldr	r3, [r7, #4]
 8008126:	681b      	ldr	r3, [r3, #0]
 8008128:	f042 4200 	orr.w	r2, r2, #2147483648	; 0x80000000
 800812c:	609a      	str	r2, [r3, #8]
 800812e:	e014      	b.n	800815a <HAL_ADCEx_Calibration_Start+0xa4>
 8008130:	68fb      	ldr	r3, [r7, #12]
 8008132:	3301      	adds	r3, #1
 8008134:	60fb      	str	r3, [r7, #12]
 8008136:	68fb      	ldr	r3, [r7, #12]
 8008138:	f5b3 3f2e 	cmp.w	r3, #178176	; 0x2b800
 800813c:	d30d      	bcc.n	800815a <HAL_ADCEx_Calibration_Start+0xa4>
 800813e:	687b      	ldr	r3, [r7, #4]
 8008140:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8008142:	f023 0312 	bic.w	r3, r3, #18
 8008146:	f043 0210 	orr.w	r2, r3, #16
 800814a:	687b      	ldr	r3, [r7, #4]
 800814c:	659a      	str	r2, [r3, #88]	; 0x58
 800814e:	687b      	ldr	r3, [r7, #4]
 8008150:	2200      	movs	r2, #0
 8008152:	f883 2054 	strb.w	r2, [r3, #84]	; 0x54
 8008156:	2301      	movs	r3, #1
 8008158:	e023      	b.n	80081a2 <HAL_ADCEx_Calibration_Start+0xec>
 800815a:	687b      	ldr	r3, [r7, #4]
 800815c:	681b      	ldr	r3, [r3, #0]
 800815e:	4618      	mov	r0, r3
 8008160:	f7ff ff96 	bl	8008090 <LL_ADC_IsCalibrationOnGoing>
 8008164:	4603      	mov	r3, r0
 8008166:	2b00      	cmp	r3, #0
 8008168:	d1e2      	bne.n	8008130 <HAL_ADCEx_Calibration_Start+0x7a>
 800816a:	687b      	ldr	r3, [r7, #4]
 800816c:	681b      	ldr	r3, [r3, #0]
 800816e:	68d9      	ldr	r1, [r3, #12]
 8008170:	687b      	ldr	r3, [r7, #4]
 8008172:	681b      	ldr	r3, [r3, #0]
 8008174:	693a      	ldr	r2, [r7, #16]
 8008176:	430a      	orrs	r2, r1
 8008178:	60da      	str	r2, [r3, #12]
 800817a:	687b      	ldr	r3, [r7, #4]
 800817c:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800817e:	f023 0303 	bic.w	r3, r3, #3
 8008182:	f043 0201 	orr.w	r2, r3, #1
 8008186:	687b      	ldr	r3, [r7, #4]
 8008188:	659a      	str	r2, [r3, #88]	; 0x58
 800818a:	e005      	b.n	8008198 <HAL_ADCEx_Calibration_Start+0xe2>
 800818c:	687b      	ldr	r3, [r7, #4]
 800818e:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8008190:	f043 0210 	orr.w	r2, r3, #16
 8008194:	687b      	ldr	r3, [r7, #4]
 8008196:	659a      	str	r2, [r3, #88]	; 0x58
 8008198:	687b      	ldr	r3, [r7, #4]
 800819a:	2200      	movs	r2, #0
 800819c:	f883 2054 	strb.w	r2, [r3, #84]	; 0x54
 80081a0:	7dfb      	ldrb	r3, [r7, #23]
 80081a2:	4618      	mov	r0, r3
 80081a4:	3718      	adds	r7, #24
 80081a6:	46bd      	mov	sp, r7
 80081a8:	bd80      	pop	{r7, pc}
	...

080081ac <__NVIC_SetPriorityGrouping>:
 80081ac:	b480      	push	{r7}
 80081ae:	b085      	sub	sp, #20
 80081b0:	af00      	add	r7, sp, #0
 80081b2:	6078      	str	r0, [r7, #4]
 80081b4:	687b      	ldr	r3, [r7, #4]
 80081b6:	f003 0307 	and.w	r3, r3, #7
 80081ba:	60fb      	str	r3, [r7, #12]
 80081bc:	4b0c      	ldr	r3, [pc, #48]	; (80081f0 <__NVIC_SetPriorityGrouping+0x44>)
 80081be:	68db      	ldr	r3, [r3, #12]
 80081c0:	60bb      	str	r3, [r7, #8]
 80081c2:	68ba      	ldr	r2, [r7, #8]
 80081c4:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 80081c8:	4013      	ands	r3, r2
 80081ca:	60bb      	str	r3, [r7, #8]
 80081cc:	68fb      	ldr	r3, [r7, #12]
 80081ce:	021a      	lsls	r2, r3, #8
 80081d0:	68bb      	ldr	r3, [r7, #8]
 80081d2:	4313      	orrs	r3, r2
 80081d4:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 80081d8:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80081dc:	60bb      	str	r3, [r7, #8]
 80081de:	4a04      	ldr	r2, [pc, #16]	; (80081f0 <__NVIC_SetPriorityGrouping+0x44>)
 80081e0:	68bb      	ldr	r3, [r7, #8]
 80081e2:	60d3      	str	r3, [r2, #12]
 80081e4:	bf00      	nop
 80081e6:	3714      	adds	r7, #20
 80081e8:	46bd      	mov	sp, r7
 80081ea:	bc80      	pop	{r7}
 80081ec:	4770      	bx	lr
 80081ee:	bf00      	nop
 80081f0:	e000ed00 	.word	0xe000ed00

080081f4 <__NVIC_GetPriorityGrouping>:
 80081f4:	b480      	push	{r7}
 80081f6:	af00      	add	r7, sp, #0
 80081f8:	4b04      	ldr	r3, [pc, #16]	; (800820c <__NVIC_GetPriorityGrouping+0x18>)
 80081fa:	68db      	ldr	r3, [r3, #12]
 80081fc:	0a1b      	lsrs	r3, r3, #8
 80081fe:	f003 0307 	and.w	r3, r3, #7
 8008202:	4618      	mov	r0, r3
 8008204:	46bd      	mov	sp, r7
 8008206:	bc80      	pop	{r7}
 8008208:	4770      	bx	lr
 800820a:	bf00      	nop
 800820c:	e000ed00 	.word	0xe000ed00

08008210 <__NVIC_EnableIRQ>:
 8008210:	b480      	push	{r7}
 8008212:	b083      	sub	sp, #12
 8008214:	af00      	add	r7, sp, #0
 8008216:	4603      	mov	r3, r0
 8008218:	71fb      	strb	r3, [r7, #7]
 800821a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800821e:	2b00      	cmp	r3, #0
 8008220:	db0b      	blt.n	800823a <__NVIC_EnableIRQ+0x2a>
 8008222:	79fb      	ldrb	r3, [r7, #7]
 8008224:	f003 021f 	and.w	r2, r3, #31
 8008228:	4906      	ldr	r1, [pc, #24]	; (8008244 <__NVIC_EnableIRQ+0x34>)
 800822a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800822e:	095b      	lsrs	r3, r3, #5
 8008230:	2001      	movs	r0, #1
 8008232:	fa00 f202 	lsl.w	r2, r0, r2
 8008236:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 800823a:	bf00      	nop
 800823c:	370c      	adds	r7, #12
 800823e:	46bd      	mov	sp, r7
 8008240:	bc80      	pop	{r7}
 8008242:	4770      	bx	lr
 8008244:	e000e100 	.word	0xe000e100

08008248 <__NVIC_DisableIRQ>:
 8008248:	b480      	push	{r7}
 800824a:	b083      	sub	sp, #12
 800824c:	af00      	add	r7, sp, #0
 800824e:	4603      	mov	r3, r0
 8008250:	71fb      	strb	r3, [r7, #7]
 8008252:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8008256:	2b00      	cmp	r3, #0
 8008258:	db12      	blt.n	8008280 <__NVIC_DisableIRQ+0x38>
 800825a:	79fb      	ldrb	r3, [r7, #7]
 800825c:	f003 021f 	and.w	r2, r3, #31
 8008260:	490a      	ldr	r1, [pc, #40]	; (800828c <__NVIC_DisableIRQ+0x44>)
 8008262:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8008266:	095b      	lsrs	r3, r3, #5
 8008268:	2001      	movs	r0, #1
 800826a:	fa00 f202 	lsl.w	r2, r0, r2
 800826e:	3320      	adds	r3, #32
 8008270:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8008274:	f3bf 8f4f 	dsb	sy
 8008278:	bf00      	nop
 800827a:	f3bf 8f6f 	isb	sy
 800827e:	bf00      	nop
 8008280:	bf00      	nop
 8008282:	370c      	adds	r7, #12
 8008284:	46bd      	mov	sp, r7
 8008286:	bc80      	pop	{r7}
 8008288:	4770      	bx	lr
 800828a:	bf00      	nop
 800828c:	e000e100 	.word	0xe000e100

08008290 <__NVIC_SetPriority>:
 8008290:	b480      	push	{r7}
 8008292:	b083      	sub	sp, #12
 8008294:	af00      	add	r7, sp, #0
 8008296:	4603      	mov	r3, r0
 8008298:	6039      	str	r1, [r7, #0]
 800829a:	71fb      	strb	r3, [r7, #7]
 800829c:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80082a0:	2b00      	cmp	r3, #0
 80082a2:	db0a      	blt.n	80082ba <__NVIC_SetPriority+0x2a>
 80082a4:	683b      	ldr	r3, [r7, #0]
 80082a6:	b2da      	uxtb	r2, r3
 80082a8:	490c      	ldr	r1, [pc, #48]	; (80082dc <__NVIC_SetPriority+0x4c>)
 80082aa:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80082ae:	0112      	lsls	r2, r2, #4
 80082b0:	b2d2      	uxtb	r2, r2
 80082b2:	440b      	add	r3, r1
 80082b4:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 80082b8:	e00a      	b.n	80082d0 <__NVIC_SetPriority+0x40>
 80082ba:	683b      	ldr	r3, [r7, #0]
 80082bc:	b2da      	uxtb	r2, r3
 80082be:	4908      	ldr	r1, [pc, #32]	; (80082e0 <__NVIC_SetPriority+0x50>)
 80082c0:	79fb      	ldrb	r3, [r7, #7]
 80082c2:	f003 030f 	and.w	r3, r3, #15
 80082c6:	3b04      	subs	r3, #4
 80082c8:	0112      	lsls	r2, r2, #4
 80082ca:	b2d2      	uxtb	r2, r2
 80082cc:	440b      	add	r3, r1
 80082ce:	761a      	strb	r2, [r3, #24]
 80082d0:	bf00      	nop
 80082d2:	370c      	adds	r7, #12
 80082d4:	46bd      	mov	sp, r7
 80082d6:	bc80      	pop	{r7}
 80082d8:	4770      	bx	lr
 80082da:	bf00      	nop
 80082dc:	e000e100 	.word	0xe000e100
 80082e0:	e000ed00 	.word	0xe000ed00

080082e4 <NVIC_EncodePriority>:
 80082e4:	b480      	push	{r7}
 80082e6:	b089      	sub	sp, #36	; 0x24
 80082e8:	af00      	add	r7, sp, #0
 80082ea:	60f8      	str	r0, [r7, #12]
 80082ec:	60b9      	str	r1, [r7, #8]
 80082ee:	607a      	str	r2, [r7, #4]
 80082f0:	68fb      	ldr	r3, [r7, #12]
 80082f2:	f003 0307 	and.w	r3, r3, #7
 80082f6:	61fb      	str	r3, [r7, #28]
 80082f8:	69fb      	ldr	r3, [r7, #28]
 80082fa:	f1c3 0307 	rsb	r3, r3, #7
 80082fe:	2b04      	cmp	r3, #4
 8008300:	bf28      	it	cs
 8008302:	2304      	movcs	r3, #4
 8008304:	61bb      	str	r3, [r7, #24]
 8008306:	69fb      	ldr	r3, [r7, #28]
 8008308:	3304      	adds	r3, #4
 800830a:	2b06      	cmp	r3, #6
 800830c:	d902      	bls.n	8008314 <NVIC_EncodePriority+0x30>
 800830e:	69fb      	ldr	r3, [r7, #28]
 8008310:	3b03      	subs	r3, #3
 8008312:	e000      	b.n	8008316 <NVIC_EncodePriority+0x32>
 8008314:	2300      	movs	r3, #0
 8008316:	617b      	str	r3, [r7, #20]
 8008318:	f04f 32ff 	mov.w	r2, #4294967295
 800831c:	69bb      	ldr	r3, [r7, #24]
 800831e:	fa02 f303 	lsl.w	r3, r2, r3
 8008322:	43da      	mvns	r2, r3
 8008324:	68bb      	ldr	r3, [r7, #8]
 8008326:	401a      	ands	r2, r3
 8008328:	697b      	ldr	r3, [r7, #20]
 800832a:	409a      	lsls	r2, r3
 800832c:	f04f 31ff 	mov.w	r1, #4294967295
 8008330:	697b      	ldr	r3, [r7, #20]
 8008332:	fa01 f303 	lsl.w	r3, r1, r3
 8008336:	43d9      	mvns	r1, r3
 8008338:	687b      	ldr	r3, [r7, #4]
 800833a:	400b      	ands	r3, r1
 800833c:	4313      	orrs	r3, r2
 800833e:	4618      	mov	r0, r3
 8008340:	3724      	adds	r7, #36	; 0x24
 8008342:	46bd      	mov	sp, r7
 8008344:	bc80      	pop	{r7}
 8008346:	4770      	bx	lr

08008348 <HAL_NVIC_SetPriorityGrouping>:
 8008348:	b580      	push	{r7, lr}
 800834a:	b082      	sub	sp, #8
 800834c:	af00      	add	r7, sp, #0
 800834e:	6078      	str	r0, [r7, #4]
 8008350:	6878      	ldr	r0, [r7, #4]
 8008352:	f7ff ff2b 	bl	80081ac <__NVIC_SetPriorityGrouping>
 8008356:	bf00      	nop
 8008358:	3708      	adds	r7, #8
 800835a:	46bd      	mov	sp, r7
 800835c:	bd80      	pop	{r7, pc}

0800835e <HAL_NVIC_SetPriority>:
 800835e:	b580      	push	{r7, lr}
 8008360:	b086      	sub	sp, #24
 8008362:	af00      	add	r7, sp, #0
 8008364:	4603      	mov	r3, r0
 8008366:	60b9      	str	r1, [r7, #8]
 8008368:	607a      	str	r2, [r7, #4]
 800836a:	73fb      	strb	r3, [r7, #15]
 800836c:	f7ff ff42 	bl	80081f4 <__NVIC_GetPriorityGrouping>
 8008370:	6178      	str	r0, [r7, #20]
 8008372:	687a      	ldr	r2, [r7, #4]
 8008374:	68b9      	ldr	r1, [r7, #8]
 8008376:	6978      	ldr	r0, [r7, #20]
 8008378:	f7ff ffb4 	bl	80082e4 <NVIC_EncodePriority>
 800837c:	4602      	mov	r2, r0
 800837e:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8008382:	4611      	mov	r1, r2
 8008384:	4618      	mov	r0, r3
 8008386:	f7ff ff83 	bl	8008290 <__NVIC_SetPriority>
 800838a:	bf00      	nop
 800838c:	3718      	adds	r7, #24
 800838e:	46bd      	mov	sp, r7
 8008390:	bd80      	pop	{r7, pc}

08008392 <HAL_NVIC_EnableIRQ>:
 8008392:	b580      	push	{r7, lr}
 8008394:	b082      	sub	sp, #8
 8008396:	af00      	add	r7, sp, #0
 8008398:	4603      	mov	r3, r0
 800839a:	71fb      	strb	r3, [r7, #7]
 800839c:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80083a0:	4618      	mov	r0, r3
 80083a2:	f7ff ff35 	bl	8008210 <__NVIC_EnableIRQ>
 80083a6:	bf00      	nop
 80083a8:	3708      	adds	r7, #8
 80083aa:	46bd      	mov	sp, r7
 80083ac:	bd80      	pop	{r7, pc}

080083ae <HAL_NVIC_DisableIRQ>:
 80083ae:	b580      	push	{r7, lr}
 80083b0:	b082      	sub	sp, #8
 80083b2:	af00      	add	r7, sp, #0
 80083b4:	4603      	mov	r3, r0
 80083b6:	71fb      	strb	r3, [r7, #7]
 80083b8:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80083bc:	4618      	mov	r0, r3
 80083be:	f7ff ff43 	bl	8008248 <__NVIC_DisableIRQ>
 80083c2:	bf00      	nop
 80083c4:	3708      	adds	r7, #8
 80083c6:	46bd      	mov	sp, r7
 80083c8:	bd80      	pop	{r7, pc}
	...

080083cc <HAL_DMA_Init>:
 80083cc:	b580      	push	{r7, lr}
 80083ce:	b082      	sub	sp, #8
 80083d0:	af00      	add	r7, sp, #0
 80083d2:	6078      	str	r0, [r7, #4]
 80083d4:	687b      	ldr	r3, [r7, #4]
 80083d6:	2b00      	cmp	r3, #0
 80083d8:	d101      	bne.n	80083de <HAL_DMA_Init+0x12>
 80083da:	2301      	movs	r3, #1
 80083dc:	e08e      	b.n	80084fc <HAL_DMA_Init+0x130>
 80083de:	687b      	ldr	r3, [r7, #4]
 80083e0:	681b      	ldr	r3, [r3, #0]
 80083e2:	461a      	mov	r2, r3
 80083e4:	4b47      	ldr	r3, [pc, #284]	; (8008504 <HAL_DMA_Init+0x138>)
 80083e6:	429a      	cmp	r2, r3
 80083e8:	d80f      	bhi.n	800840a <HAL_DMA_Init+0x3e>
 80083ea:	687b      	ldr	r3, [r7, #4]
 80083ec:	681b      	ldr	r3, [r3, #0]
 80083ee:	461a      	mov	r2, r3
 80083f0:	4b45      	ldr	r3, [pc, #276]	; (8008508 <HAL_DMA_Init+0x13c>)
 80083f2:	4413      	add	r3, r2
 80083f4:	4a45      	ldr	r2, [pc, #276]	; (800850c <HAL_DMA_Init+0x140>)
 80083f6:	fba2 2303 	umull	r2, r3, r2, r3
 80083fa:	091b      	lsrs	r3, r3, #4
 80083fc:	009a      	lsls	r2, r3, #2
 80083fe:	687b      	ldr	r3, [r7, #4]
 8008400:	645a      	str	r2, [r3, #68]	; 0x44
 8008402:	687b      	ldr	r3, [r7, #4]
 8008404:	4a42      	ldr	r2, [pc, #264]	; (8008510 <HAL_DMA_Init+0x144>)
 8008406:	641a      	str	r2, [r3, #64]	; 0x40
 8008408:	e00e      	b.n	8008428 <HAL_DMA_Init+0x5c>
 800840a:	687b      	ldr	r3, [r7, #4]
 800840c:	681b      	ldr	r3, [r3, #0]
 800840e:	461a      	mov	r2, r3
 8008410:	4b40      	ldr	r3, [pc, #256]	; (8008514 <HAL_DMA_Init+0x148>)
 8008412:	4413      	add	r3, r2
 8008414:	4a3d      	ldr	r2, [pc, #244]	; (800850c <HAL_DMA_Init+0x140>)
 8008416:	fba2 2303 	umull	r2, r3, r2, r3
 800841a:	091b      	lsrs	r3, r3, #4
 800841c:	009a      	lsls	r2, r3, #2
 800841e:	687b      	ldr	r3, [r7, #4]
 8008420:	645a      	str	r2, [r3, #68]	; 0x44
 8008422:	687b      	ldr	r3, [r7, #4]
 8008424:	4a3c      	ldr	r2, [pc, #240]	; (8008518 <HAL_DMA_Init+0x14c>)
 8008426:	641a      	str	r2, [r3, #64]	; 0x40
 8008428:	687b      	ldr	r3, [r7, #4]
 800842a:	2202      	movs	r2, #2
 800842c:	f883 2025 	strb.w	r2, [r3, #37]	; 0x25
 8008430:	687b      	ldr	r3, [r7, #4]
 8008432:	681b      	ldr	r3, [r3, #0]
 8008434:	681b      	ldr	r3, [r3, #0]
 8008436:	687a      	ldr	r2, [r7, #4]
 8008438:	6812      	ldr	r2, [r2, #0]
 800843a:	f423 43ff 	bic.w	r3, r3, #32640	; 0x7f80
 800843e:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8008442:	6013      	str	r3, [r2, #0]
 8008444:	687b      	ldr	r3, [r7, #4]
 8008446:	681b      	ldr	r3, [r3, #0]
 8008448:	6819      	ldr	r1, [r3, #0]
 800844a:	687b      	ldr	r3, [r7, #4]
 800844c:	689a      	ldr	r2, [r3, #8]
 800844e:	687b      	ldr	r3, [r7, #4]
 8008450:	68db      	ldr	r3, [r3, #12]
 8008452:	431a      	orrs	r2, r3
 8008454:	687b      	ldr	r3, [r7, #4]
 8008456:	691b      	ldr	r3, [r3, #16]
 8008458:	431a      	orrs	r2, r3
 800845a:	687b      	ldr	r3, [r7, #4]
 800845c:	695b      	ldr	r3, [r3, #20]
 800845e:	431a      	orrs	r2, r3
 8008460:	687b      	ldr	r3, [r7, #4]
 8008462:	699b      	ldr	r3, [r3, #24]
 8008464:	431a      	orrs	r2, r3
 8008466:	687b      	ldr	r3, [r7, #4]
 8008468:	69db      	ldr	r3, [r3, #28]
 800846a:	431a      	orrs	r2, r3
 800846c:	687b      	ldr	r3, [r7, #4]
 800846e:	6a1b      	ldr	r3, [r3, #32]
 8008470:	431a      	orrs	r2, r3
 8008472:	687b      	ldr	r3, [r7, #4]
 8008474:	681b      	ldr	r3, [r3, #0]
 8008476:	430a      	orrs	r2, r1
 8008478:	601a      	str	r2, [r3, #0]
 800847a:	6878      	ldr	r0, [r7, #4]
 800847c:	f000 fb60 	bl	8008b40 <DMA_CalcDMAMUXChannelBaseAndMask>
 8008480:	687b      	ldr	r3, [r7, #4]
 8008482:	689b      	ldr	r3, [r3, #8]
 8008484:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 8008488:	d102      	bne.n	8008490 <HAL_DMA_Init+0xc4>
 800848a:	687b      	ldr	r3, [r7, #4]
 800848c:	2200      	movs	r2, #0
 800848e:	605a      	str	r2, [r3, #4]
 8008490:	687b      	ldr	r3, [r7, #4]
 8008492:	685a      	ldr	r2, [r3, #4]
 8008494:	687b      	ldr	r3, [r7, #4]
 8008496:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8008498:	f002 027f 	and.w	r2, r2, #127	; 0x7f
 800849c:	601a      	str	r2, [r3, #0]
 800849e:	687b      	ldr	r3, [r7, #4]
 80084a0:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80084a2:	687a      	ldr	r2, [r7, #4]
 80084a4:	6d12      	ldr	r2, [r2, #80]	; 0x50
 80084a6:	605a      	str	r2, [r3, #4]
 80084a8:	687b      	ldr	r3, [r7, #4]
 80084aa:	685b      	ldr	r3, [r3, #4]
 80084ac:	2b00      	cmp	r3, #0
 80084ae:	d010      	beq.n	80084d2 <HAL_DMA_Init+0x106>
 80084b0:	687b      	ldr	r3, [r7, #4]
 80084b2:	685b      	ldr	r3, [r3, #4]
 80084b4:	2b04      	cmp	r3, #4
 80084b6:	d80c      	bhi.n	80084d2 <HAL_DMA_Init+0x106>
 80084b8:	6878      	ldr	r0, [r7, #4]
 80084ba:	f000 fb89 	bl	8008bd0 <DMA_CalcDMAMUXRequestGenBaseAndMask>
 80084be:	687b      	ldr	r3, [r7, #4]
 80084c0:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80084c2:	2200      	movs	r2, #0
 80084c4:	601a      	str	r2, [r3, #0]
 80084c6:	687b      	ldr	r3, [r7, #4]
 80084c8:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80084ca:	687a      	ldr	r2, [r7, #4]
 80084cc:	6dd2      	ldr	r2, [r2, #92]	; 0x5c
 80084ce:	605a      	str	r2, [r3, #4]
 80084d0:	e008      	b.n	80084e4 <HAL_DMA_Init+0x118>
 80084d2:	687b      	ldr	r3, [r7, #4]
 80084d4:	2200      	movs	r2, #0
 80084d6:	655a      	str	r2, [r3, #84]	; 0x54
 80084d8:	687b      	ldr	r3, [r7, #4]
 80084da:	2200      	movs	r2, #0
 80084dc:	659a      	str	r2, [r3, #88]	; 0x58
 80084de:	687b      	ldr	r3, [r7, #4]
 80084e0:	2200      	movs	r2, #0
 80084e2:	65da      	str	r2, [r3, #92]	; 0x5c
 80084e4:	687b      	ldr	r3, [r7, #4]
 80084e6:	2200      	movs	r2, #0
 80084e8:	63da      	str	r2, [r3, #60]	; 0x3c
 80084ea:	687b      	ldr	r3, [r7, #4]
 80084ec:	2201      	movs	r2, #1
 80084ee:	f883 2025 	strb.w	r2, [r3, #37]	; 0x25
 80084f2:	687b      	ldr	r3, [r7, #4]
 80084f4:	2200      	movs	r2, #0
 80084f6:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
 80084fa:	2300      	movs	r3, #0
 80084fc:	4618      	mov	r0, r3
 80084fe:	3708      	adds	r7, #8
 8008500:	46bd      	mov	sp, r7
 8008502:	bd80      	pop	{r7, pc}
 8008504:	40020407 	.word	0x40020407
 8008508:	bffdfff8 	.word	0xbffdfff8
 800850c:	cccccccd 	.word	0xcccccccd
 8008510:	40020000 	.word	0x40020000
 8008514:	bffdfbf8 	.word	0xbffdfbf8
 8008518:	40020400 	.word	0x40020400

0800851c <HAL_DMA_DeInit>:
 800851c:	b580      	push	{r7, lr}
 800851e:	b082      	sub	sp, #8
 8008520:	af00      	add	r7, sp, #0
 8008522:	6078      	str	r0, [r7, #4]
 8008524:	687b      	ldr	r3, [r7, #4]
 8008526:	2b00      	cmp	r3, #0
 8008528:	d101      	bne.n	800852e <HAL_DMA_DeInit+0x12>
 800852a:	2301      	movs	r3, #1
 800852c:	e07b      	b.n	8008626 <HAL_DMA_DeInit+0x10a>
 800852e:	687b      	ldr	r3, [r7, #4]
 8008530:	681b      	ldr	r3, [r3, #0]
 8008532:	681a      	ldr	r2, [r3, #0]
 8008534:	687b      	ldr	r3, [r7, #4]
 8008536:	681b      	ldr	r3, [r3, #0]
 8008538:	f022 0201 	bic.w	r2, r2, #1
 800853c:	601a      	str	r2, [r3, #0]
 800853e:	687b      	ldr	r3, [r7, #4]
 8008540:	681b      	ldr	r3, [r3, #0]
 8008542:	461a      	mov	r2, r3
 8008544:	4b3a      	ldr	r3, [pc, #232]	; (8008630 <HAL_DMA_DeInit+0x114>)
 8008546:	429a      	cmp	r2, r3
 8008548:	d80f      	bhi.n	800856a <HAL_DMA_DeInit+0x4e>
 800854a:	687b      	ldr	r3, [r7, #4]
 800854c:	681b      	ldr	r3, [r3, #0]
 800854e:	461a      	mov	r2, r3
 8008550:	4b38      	ldr	r3, [pc, #224]	; (8008634 <HAL_DMA_DeInit+0x118>)
 8008552:	4413      	add	r3, r2
 8008554:	4a38      	ldr	r2, [pc, #224]	; (8008638 <HAL_DMA_DeInit+0x11c>)
 8008556:	fba2 2303 	umull	r2, r3, r2, r3
 800855a:	091b      	lsrs	r3, r3, #4
 800855c:	009a      	lsls	r2, r3, #2
 800855e:	687b      	ldr	r3, [r7, #4]
 8008560:	645a      	str	r2, [r3, #68]	; 0x44
 8008562:	687b      	ldr	r3, [r7, #4]
 8008564:	4a35      	ldr	r2, [pc, #212]	; (800863c <HAL_DMA_DeInit+0x120>)
 8008566:	641a      	str	r2, [r3, #64]	; 0x40
 8008568:	e00e      	b.n	8008588 <HAL_DMA_DeInit+0x6c>
 800856a:	687b      	ldr	r3, [r7, #4]
 800856c:	681b      	ldr	r3, [r3, #0]
 800856e:	461a      	mov	r2, r3
 8008570:	4b33      	ldr	r3, [pc, #204]	; (8008640 <HAL_DMA_DeInit+0x124>)
 8008572:	4413      	add	r3, r2
 8008574:	4a30      	ldr	r2, [pc, #192]	; (8008638 <HAL_DMA_DeInit+0x11c>)
 8008576:	fba2 2303 	umull	r2, r3, r2, r3
 800857a:	091b      	lsrs	r3, r3, #4
 800857c:	009a      	lsls	r2, r3, #2
 800857e:	687b      	ldr	r3, [r7, #4]
 8008580:	645a      	str	r2, [r3, #68]	; 0x44
 8008582:	687b      	ldr	r3, [r7, #4]
 8008584:	4a2f      	ldr	r2, [pc, #188]	; (8008644 <HAL_DMA_DeInit+0x128>)
 8008586:	641a      	str	r2, [r3, #64]	; 0x40
 8008588:	687b      	ldr	r3, [r7, #4]
 800858a:	681b      	ldr	r3, [r3, #0]
 800858c:	2200      	movs	r2, #0
 800858e:	601a      	str	r2, [r3, #0]
 8008590:	687b      	ldr	r3, [r7, #4]
 8008592:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8008594:	f003 021c 	and.w	r2, r3, #28
 8008598:	687b      	ldr	r3, [r7, #4]
 800859a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800859c:	2101      	movs	r1, #1
 800859e:	fa01 f202 	lsl.w	r2, r1, r2
 80085a2:	605a      	str	r2, [r3, #4]
 80085a4:	6878      	ldr	r0, [r7, #4]
 80085a6:	f000 facb 	bl	8008b40 <DMA_CalcDMAMUXChannelBaseAndMask>
 80085aa:	687b      	ldr	r3, [r7, #4]
 80085ac:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80085ae:	2200      	movs	r2, #0
 80085b0:	601a      	str	r2, [r3, #0]
 80085b2:	687b      	ldr	r3, [r7, #4]
 80085b4:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80085b6:	687a      	ldr	r2, [r7, #4]
 80085b8:	6d12      	ldr	r2, [r2, #80]	; 0x50
 80085ba:	605a      	str	r2, [r3, #4]
 80085bc:	687b      	ldr	r3, [r7, #4]
 80085be:	685b      	ldr	r3, [r3, #4]
 80085c0:	2b00      	cmp	r3, #0
 80085c2:	d00f      	beq.n	80085e4 <HAL_DMA_DeInit+0xc8>
 80085c4:	687b      	ldr	r3, [r7, #4]
 80085c6:	685b      	ldr	r3, [r3, #4]
 80085c8:	2b04      	cmp	r3, #4
 80085ca:	d80b      	bhi.n	80085e4 <HAL_DMA_DeInit+0xc8>
 80085cc:	6878      	ldr	r0, [r7, #4]
 80085ce:	f000 faff 	bl	8008bd0 <DMA_CalcDMAMUXRequestGenBaseAndMask>
 80085d2:	687b      	ldr	r3, [r7, #4]
 80085d4:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80085d6:	2200      	movs	r2, #0
 80085d8:	601a      	str	r2, [r3, #0]
 80085da:	687b      	ldr	r3, [r7, #4]
 80085dc:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80085de:	687a      	ldr	r2, [r7, #4]
 80085e0:	6dd2      	ldr	r2, [r2, #92]	; 0x5c
 80085e2:	605a      	str	r2, [r3, #4]
 80085e4:	687b      	ldr	r3, [r7, #4]
 80085e6:	2200      	movs	r2, #0
 80085e8:	655a      	str	r2, [r3, #84]	; 0x54
 80085ea:	687b      	ldr	r3, [r7, #4]
 80085ec:	2200      	movs	r2, #0
 80085ee:	659a      	str	r2, [r3, #88]	; 0x58
 80085f0:	687b      	ldr	r3, [r7, #4]
 80085f2:	2200      	movs	r2, #0
 80085f4:	65da      	str	r2, [r3, #92]	; 0x5c
 80085f6:	687b      	ldr	r3, [r7, #4]
 80085f8:	2200      	movs	r2, #0
 80085fa:	62da      	str	r2, [r3, #44]	; 0x2c
 80085fc:	687b      	ldr	r3, [r7, #4]
 80085fe:	2200      	movs	r2, #0
 8008600:	631a      	str	r2, [r3, #48]	; 0x30
 8008602:	687b      	ldr	r3, [r7, #4]
 8008604:	2200      	movs	r2, #0
 8008606:	635a      	str	r2, [r3, #52]	; 0x34
 8008608:	687b      	ldr	r3, [r7, #4]
 800860a:	2200      	movs	r2, #0
 800860c:	639a      	str	r2, [r3, #56]	; 0x38
 800860e:	687b      	ldr	r3, [r7, #4]
 8008610:	2200      	movs	r2, #0
 8008612:	63da      	str	r2, [r3, #60]	; 0x3c
 8008614:	687b      	ldr	r3, [r7, #4]
 8008616:	2200      	movs	r2, #0
 8008618:	f883 2025 	strb.w	r2, [r3, #37]	; 0x25
 800861c:	687b      	ldr	r3, [r7, #4]
 800861e:	2200      	movs	r2, #0
 8008620:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
 8008624:	2300      	movs	r3, #0
 8008626:	4618      	mov	r0, r3
 8008628:	3708      	adds	r7, #8
 800862a:	46bd      	mov	sp, r7
 800862c:	bd80      	pop	{r7, pc}
 800862e:	bf00      	nop
 8008630:	40020407 	.word	0x40020407
 8008634:	bffdfff8 	.word	0xbffdfff8
 8008638:	cccccccd 	.word	0xcccccccd
 800863c:	40020000 	.word	0x40020000
 8008640:	bffdfbf8 	.word	0xbffdfbf8
 8008644:	40020400 	.word	0x40020400

08008648 <HAL_DMA_Start_IT>:
 8008648:	b580      	push	{r7, lr}
 800864a:	b086      	sub	sp, #24
 800864c:	af00      	add	r7, sp, #0
 800864e:	60f8      	str	r0, [r7, #12]
 8008650:	60b9      	str	r1, [r7, #8]
 8008652:	607a      	str	r2, [r7, #4]
 8008654:	603b      	str	r3, [r7, #0]
 8008656:	2300      	movs	r3, #0
 8008658:	75fb      	strb	r3, [r7, #23]
 800865a:	68fb      	ldr	r3, [r7, #12]
 800865c:	f893 3024 	ldrb.w	r3, [r3, #36]	; 0x24
 8008660:	2b01      	cmp	r3, #1
 8008662:	d101      	bne.n	8008668 <HAL_DMA_Start_IT+0x20>
 8008664:	2302      	movs	r3, #2
 8008666:	e069      	b.n	800873c <HAL_DMA_Start_IT+0xf4>
 8008668:	68fb      	ldr	r3, [r7, #12]
 800866a:	2201      	movs	r2, #1
 800866c:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
 8008670:	68fb      	ldr	r3, [r7, #12]
 8008672:	f893 3025 	ldrb.w	r3, [r3, #37]	; 0x25
 8008676:	b2db      	uxtb	r3, r3
 8008678:	2b01      	cmp	r3, #1
 800867a:	d155      	bne.n	8008728 <HAL_DMA_Start_IT+0xe0>
 800867c:	68fb      	ldr	r3, [r7, #12]
 800867e:	2202      	movs	r2, #2
 8008680:	f883 2025 	strb.w	r2, [r3, #37]	; 0x25
 8008684:	68fb      	ldr	r3, [r7, #12]
 8008686:	2200      	movs	r2, #0
 8008688:	63da      	str	r2, [r3, #60]	; 0x3c
 800868a:	68fb      	ldr	r3, [r7, #12]
 800868c:	681b      	ldr	r3, [r3, #0]
 800868e:	681a      	ldr	r2, [r3, #0]
 8008690:	68fb      	ldr	r3, [r7, #12]
 8008692:	681b      	ldr	r3, [r3, #0]
 8008694:	f022 0201 	bic.w	r2, r2, #1
 8008698:	601a      	str	r2, [r3, #0]
 800869a:	683b      	ldr	r3, [r7, #0]
 800869c:	687a      	ldr	r2, [r7, #4]
 800869e:	68b9      	ldr	r1, [r7, #8]
 80086a0:	68f8      	ldr	r0, [r7, #12]
 80086a2:	f000 fa0f 	bl	8008ac4 <DMA_SetConfig>
 80086a6:	68fb      	ldr	r3, [r7, #12]
 80086a8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80086aa:	2b00      	cmp	r3, #0
 80086ac:	d008      	beq.n	80086c0 <HAL_DMA_Start_IT+0x78>
 80086ae:	68fb      	ldr	r3, [r7, #12]
 80086b0:	681b      	ldr	r3, [r3, #0]
 80086b2:	681a      	ldr	r2, [r3, #0]
 80086b4:	68fb      	ldr	r3, [r7, #12]
 80086b6:	681b      	ldr	r3, [r3, #0]
 80086b8:	f042 020e 	orr.w	r2, r2, #14
 80086bc:	601a      	str	r2, [r3, #0]
 80086be:	e00f      	b.n	80086e0 <HAL_DMA_Start_IT+0x98>
 80086c0:	68fb      	ldr	r3, [r7, #12]
 80086c2:	681b      	ldr	r3, [r3, #0]
 80086c4:	681a      	ldr	r2, [r3, #0]
 80086c6:	68fb      	ldr	r3, [r7, #12]
 80086c8:	681b      	ldr	r3, [r3, #0]
 80086ca:	f022 0204 	bic.w	r2, r2, #4
 80086ce:	601a      	str	r2, [r3, #0]
 80086d0:	68fb      	ldr	r3, [r7, #12]
 80086d2:	681b      	ldr	r3, [r3, #0]
 80086d4:	681a      	ldr	r2, [r3, #0]
 80086d6:	68fb      	ldr	r3, [r7, #12]
 80086d8:	681b      	ldr	r3, [r3, #0]
 80086da:	f042 020a 	orr.w	r2, r2, #10
 80086de:	601a      	str	r2, [r3, #0]
 80086e0:	68fb      	ldr	r3, [r7, #12]
 80086e2:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80086e4:	681b      	ldr	r3, [r3, #0]
 80086e6:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80086ea:	2b00      	cmp	r3, #0
 80086ec:	d007      	beq.n	80086fe <HAL_DMA_Start_IT+0xb6>
 80086ee:	68fb      	ldr	r3, [r7, #12]
 80086f0:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80086f2:	681a      	ldr	r2, [r3, #0]
 80086f4:	68fb      	ldr	r3, [r7, #12]
 80086f6:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80086f8:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 80086fc:	601a      	str	r2, [r3, #0]
 80086fe:	68fb      	ldr	r3, [r7, #12]
 8008700:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8008702:	2b00      	cmp	r3, #0
 8008704:	d007      	beq.n	8008716 <HAL_DMA_Start_IT+0xce>
 8008706:	68fb      	ldr	r3, [r7, #12]
 8008708:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800870a:	681a      	ldr	r2, [r3, #0]
 800870c:	68fb      	ldr	r3, [r7, #12]
 800870e:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8008710:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8008714:	601a      	str	r2, [r3, #0]
 8008716:	68fb      	ldr	r3, [r7, #12]
 8008718:	681b      	ldr	r3, [r3, #0]
 800871a:	681a      	ldr	r2, [r3, #0]
 800871c:	68fb      	ldr	r3, [r7, #12]
 800871e:	681b      	ldr	r3, [r3, #0]
 8008720:	f042 0201 	orr.w	r2, r2, #1
 8008724:	601a      	str	r2, [r3, #0]
 8008726:	e008      	b.n	800873a <HAL_DMA_Start_IT+0xf2>
 8008728:	68fb      	ldr	r3, [r7, #12]
 800872a:	2280      	movs	r2, #128	; 0x80
 800872c:	63da      	str	r2, [r3, #60]	; 0x3c
 800872e:	68fb      	ldr	r3, [r7, #12]
 8008730:	2200      	movs	r2, #0
 8008732:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
 8008736:	2301      	movs	r3, #1
 8008738:	75fb      	strb	r3, [r7, #23]
 800873a:	7dfb      	ldrb	r3, [r7, #23]
 800873c:	4618      	mov	r0, r3
 800873e:	3718      	adds	r7, #24
 8008740:	46bd      	mov	sp, r7
 8008742:	bd80      	pop	{r7, pc}

08008744 <HAL_DMA_Abort>:
 8008744:	b480      	push	{r7}
 8008746:	b083      	sub	sp, #12
 8008748:	af00      	add	r7, sp, #0
 800874a:	6078      	str	r0, [r7, #4]
 800874c:	687b      	ldr	r3, [r7, #4]
 800874e:	2b00      	cmp	r3, #0
 8008750:	d101      	bne.n	8008756 <HAL_DMA_Abort+0x12>
 8008752:	2301      	movs	r3, #1
 8008754:	e04f      	b.n	80087f6 <HAL_DMA_Abort+0xb2>
 8008756:	687b      	ldr	r3, [r7, #4]
 8008758:	f893 3025 	ldrb.w	r3, [r3, #37]	; 0x25
 800875c:	b2db      	uxtb	r3, r3
 800875e:	2b02      	cmp	r3, #2
 8008760:	d008      	beq.n	8008774 <HAL_DMA_Abort+0x30>
 8008762:	687b      	ldr	r3, [r7, #4]
 8008764:	2204      	movs	r2, #4
 8008766:	63da      	str	r2, [r3, #60]	; 0x3c
 8008768:	687b      	ldr	r3, [r7, #4]
 800876a:	2200      	movs	r2, #0
 800876c:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
 8008770:	2301      	movs	r3, #1
 8008772:	e040      	b.n	80087f6 <HAL_DMA_Abort+0xb2>
 8008774:	687b      	ldr	r3, [r7, #4]
 8008776:	681b      	ldr	r3, [r3, #0]
 8008778:	681a      	ldr	r2, [r3, #0]
 800877a:	687b      	ldr	r3, [r7, #4]
 800877c:	681b      	ldr	r3, [r3, #0]
 800877e:	f022 020e 	bic.w	r2, r2, #14
 8008782:	601a      	str	r2, [r3, #0]
 8008784:	687b      	ldr	r3, [r7, #4]
 8008786:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8008788:	681a      	ldr	r2, [r3, #0]
 800878a:	687b      	ldr	r3, [r7, #4]
 800878c:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800878e:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8008792:	601a      	str	r2, [r3, #0]
 8008794:	687b      	ldr	r3, [r7, #4]
 8008796:	681b      	ldr	r3, [r3, #0]
 8008798:	681a      	ldr	r2, [r3, #0]
 800879a:	687b      	ldr	r3, [r7, #4]
 800879c:	681b      	ldr	r3, [r3, #0]
 800879e:	f022 0201 	bic.w	r2, r2, #1
 80087a2:	601a      	str	r2, [r3, #0]
 80087a4:	687b      	ldr	r3, [r7, #4]
 80087a6:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80087a8:	f003 021c 	and.w	r2, r3, #28
 80087ac:	687b      	ldr	r3, [r7, #4]
 80087ae:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80087b0:	2101      	movs	r1, #1
 80087b2:	fa01 f202 	lsl.w	r2, r1, r2
 80087b6:	605a      	str	r2, [r3, #4]
 80087b8:	687b      	ldr	r3, [r7, #4]
 80087ba:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80087bc:	687a      	ldr	r2, [r7, #4]
 80087be:	6d12      	ldr	r2, [r2, #80]	; 0x50
 80087c0:	605a      	str	r2, [r3, #4]
 80087c2:	687b      	ldr	r3, [r7, #4]
 80087c4:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80087c6:	2b00      	cmp	r3, #0
 80087c8:	d00c      	beq.n	80087e4 <HAL_DMA_Abort+0xa0>
 80087ca:	687b      	ldr	r3, [r7, #4]
 80087cc:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80087ce:	681a      	ldr	r2, [r3, #0]
 80087d0:	687b      	ldr	r3, [r7, #4]
 80087d2:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80087d4:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 80087d8:	601a      	str	r2, [r3, #0]
 80087da:	687b      	ldr	r3, [r7, #4]
 80087dc:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80087de:	687a      	ldr	r2, [r7, #4]
 80087e0:	6dd2      	ldr	r2, [r2, #92]	; 0x5c
 80087e2:	605a      	str	r2, [r3, #4]
 80087e4:	687b      	ldr	r3, [r7, #4]
 80087e6:	2201      	movs	r2, #1
 80087e8:	f883 2025 	strb.w	r2, [r3, #37]	; 0x25
 80087ec:	687b      	ldr	r3, [r7, #4]
 80087ee:	2200      	movs	r2, #0
 80087f0:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
 80087f4:	2300      	movs	r3, #0
 80087f6:	4618      	mov	r0, r3
 80087f8:	370c      	adds	r7, #12
 80087fa:	46bd      	mov	sp, r7
 80087fc:	bc80      	pop	{r7}
 80087fe:	4770      	bx	lr

08008800 <HAL_DMA_Abort_IT>:
 8008800:	b580      	push	{r7, lr}
 8008802:	b084      	sub	sp, #16
 8008804:	af00      	add	r7, sp, #0
 8008806:	6078      	str	r0, [r7, #4]
 8008808:	2300      	movs	r3, #0
 800880a:	73fb      	strb	r3, [r7, #15]
 800880c:	687b      	ldr	r3, [r7, #4]
 800880e:	f893 3025 	ldrb.w	r3, [r3, #37]	; 0x25
 8008812:	b2db      	uxtb	r3, r3
 8008814:	2b02      	cmp	r3, #2
 8008816:	d005      	beq.n	8008824 <HAL_DMA_Abort_IT+0x24>
 8008818:	687b      	ldr	r3, [r7, #4]
 800881a:	2204      	movs	r2, #4
 800881c:	63da      	str	r2, [r3, #60]	; 0x3c
 800881e:	2301      	movs	r3, #1
 8008820:	73fb      	strb	r3, [r7, #15]
 8008822:	e047      	b.n	80088b4 <HAL_DMA_Abort_IT+0xb4>
 8008824:	687b      	ldr	r3, [r7, #4]
 8008826:	681b      	ldr	r3, [r3, #0]
 8008828:	681a      	ldr	r2, [r3, #0]
 800882a:	687b      	ldr	r3, [r7, #4]
 800882c:	681b      	ldr	r3, [r3, #0]
 800882e:	f022 020e 	bic.w	r2, r2, #14
 8008832:	601a      	str	r2, [r3, #0]
 8008834:	687b      	ldr	r3, [r7, #4]
 8008836:	681b      	ldr	r3, [r3, #0]
 8008838:	681a      	ldr	r2, [r3, #0]
 800883a:	687b      	ldr	r3, [r7, #4]
 800883c:	681b      	ldr	r3, [r3, #0]
 800883e:	f022 0201 	bic.w	r2, r2, #1
 8008842:	601a      	str	r2, [r3, #0]
 8008844:	687b      	ldr	r3, [r7, #4]
 8008846:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8008848:	681a      	ldr	r2, [r3, #0]
 800884a:	687b      	ldr	r3, [r7, #4]
 800884c:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800884e:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8008852:	601a      	str	r2, [r3, #0]
 8008854:	687b      	ldr	r3, [r7, #4]
 8008856:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8008858:	f003 021c 	and.w	r2, r3, #28
 800885c:	687b      	ldr	r3, [r7, #4]
 800885e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8008860:	2101      	movs	r1, #1
 8008862:	fa01 f202 	lsl.w	r2, r1, r2
 8008866:	605a      	str	r2, [r3, #4]
 8008868:	687b      	ldr	r3, [r7, #4]
 800886a:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800886c:	687a      	ldr	r2, [r7, #4]
 800886e:	6d12      	ldr	r2, [r2, #80]	; 0x50
 8008870:	605a      	str	r2, [r3, #4]
 8008872:	687b      	ldr	r3, [r7, #4]
 8008874:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8008876:	2b00      	cmp	r3, #0
 8008878:	d00c      	beq.n	8008894 <HAL_DMA_Abort_IT+0x94>
 800887a:	687b      	ldr	r3, [r7, #4]
 800887c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800887e:	681a      	ldr	r2, [r3, #0]
 8008880:	687b      	ldr	r3, [r7, #4]
 8008882:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8008884:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8008888:	601a      	str	r2, [r3, #0]
 800888a:	687b      	ldr	r3, [r7, #4]
 800888c:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800888e:	687a      	ldr	r2, [r7, #4]
 8008890:	6dd2      	ldr	r2, [r2, #92]	; 0x5c
 8008892:	605a      	str	r2, [r3, #4]
 8008894:	687b      	ldr	r3, [r7, #4]
 8008896:	2201      	movs	r2, #1
 8008898:	f883 2025 	strb.w	r2, [r3, #37]	; 0x25
 800889c:	687b      	ldr	r3, [r7, #4]
 800889e:	2200      	movs	r2, #0
 80088a0:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
 80088a4:	687b      	ldr	r3, [r7, #4]
 80088a6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80088a8:	2b00      	cmp	r3, #0
 80088aa:	d003      	beq.n	80088b4 <HAL_DMA_Abort_IT+0xb4>
 80088ac:	687b      	ldr	r3, [r7, #4]
 80088ae:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80088b0:	6878      	ldr	r0, [r7, #4]
 80088b2:	4798      	blx	r3
 80088b4:	7bfb      	ldrb	r3, [r7, #15]
 80088b6:	4618      	mov	r0, r3
 80088b8:	3710      	adds	r7, #16
 80088ba:	46bd      	mov	sp, r7
 80088bc:	bd80      	pop	{r7, pc}
	...

080088c0 <HAL_DMA_IRQHandler>:
 80088c0:	b580      	push	{r7, lr}
 80088c2:	b084      	sub	sp, #16
 80088c4:	af00      	add	r7, sp, #0
 80088c6:	6078      	str	r0, [r7, #4]
 80088c8:	687b      	ldr	r3, [r7, #4]
 80088ca:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80088cc:	681b      	ldr	r3, [r3, #0]
 80088ce:	60fb      	str	r3, [r7, #12]
 80088d0:	687b      	ldr	r3, [r7, #4]
 80088d2:	681b      	ldr	r3, [r3, #0]
 80088d4:	681b      	ldr	r3, [r3, #0]
 80088d6:	60bb      	str	r3, [r7, #8]
 80088d8:	687b      	ldr	r3, [r7, #4]
 80088da:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80088dc:	f003 031c 	and.w	r3, r3, #28
 80088e0:	2204      	movs	r2, #4
 80088e2:	409a      	lsls	r2, r3
 80088e4:	68fb      	ldr	r3, [r7, #12]
 80088e6:	4013      	ands	r3, r2
 80088e8:	2b00      	cmp	r3, #0
 80088ea:	d027      	beq.n	800893c <HAL_DMA_IRQHandler+0x7c>
 80088ec:	68bb      	ldr	r3, [r7, #8]
 80088ee:	f003 0304 	and.w	r3, r3, #4
 80088f2:	2b00      	cmp	r3, #0
 80088f4:	d022      	beq.n	800893c <HAL_DMA_IRQHandler+0x7c>
 80088f6:	687b      	ldr	r3, [r7, #4]
 80088f8:	681b      	ldr	r3, [r3, #0]
 80088fa:	681b      	ldr	r3, [r3, #0]
 80088fc:	f003 0320 	and.w	r3, r3, #32
 8008900:	2b00      	cmp	r3, #0
 8008902:	d107      	bne.n	8008914 <HAL_DMA_IRQHandler+0x54>
 8008904:	687b      	ldr	r3, [r7, #4]
 8008906:	681b      	ldr	r3, [r3, #0]
 8008908:	681a      	ldr	r2, [r3, #0]
 800890a:	687b      	ldr	r3, [r7, #4]
 800890c:	681b      	ldr	r3, [r3, #0]
 800890e:	f022 0204 	bic.w	r2, r2, #4
 8008912:	601a      	str	r2, [r3, #0]
 8008914:	687b      	ldr	r3, [r7, #4]
 8008916:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8008918:	f003 021c 	and.w	r2, r3, #28
 800891c:	687b      	ldr	r3, [r7, #4]
 800891e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8008920:	2104      	movs	r1, #4
 8008922:	fa01 f202 	lsl.w	r2, r1, r2
 8008926:	605a      	str	r2, [r3, #4]
 8008928:	687b      	ldr	r3, [r7, #4]
 800892a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800892c:	2b00      	cmp	r3, #0
 800892e:	f000 8081 	beq.w	8008a34 <HAL_DMA_IRQHandler+0x174>
 8008932:	687b      	ldr	r3, [r7, #4]
 8008934:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8008936:	6878      	ldr	r0, [r7, #4]
 8008938:	4798      	blx	r3
 800893a:	e07b      	b.n	8008a34 <HAL_DMA_IRQHandler+0x174>
 800893c:	687b      	ldr	r3, [r7, #4]
 800893e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8008940:	f003 031c 	and.w	r3, r3, #28
 8008944:	2202      	movs	r2, #2
 8008946:	409a      	lsls	r2, r3
 8008948:	68fb      	ldr	r3, [r7, #12]
 800894a:	4013      	ands	r3, r2
 800894c:	2b00      	cmp	r3, #0
 800894e:	d03d      	beq.n	80089cc <HAL_DMA_IRQHandler+0x10c>
 8008950:	68bb      	ldr	r3, [r7, #8]
 8008952:	f003 0302 	and.w	r3, r3, #2
 8008956:	2b00      	cmp	r3, #0
 8008958:	d038      	beq.n	80089cc <HAL_DMA_IRQHandler+0x10c>
 800895a:	687b      	ldr	r3, [r7, #4]
 800895c:	681b      	ldr	r3, [r3, #0]
 800895e:	681b      	ldr	r3, [r3, #0]
 8008960:	f003 0320 	and.w	r3, r3, #32
 8008964:	2b00      	cmp	r3, #0
 8008966:	d10b      	bne.n	8008980 <HAL_DMA_IRQHandler+0xc0>
 8008968:	687b      	ldr	r3, [r7, #4]
 800896a:	681b      	ldr	r3, [r3, #0]
 800896c:	681a      	ldr	r2, [r3, #0]
 800896e:	687b      	ldr	r3, [r7, #4]
 8008970:	681b      	ldr	r3, [r3, #0]
 8008972:	f022 020a 	bic.w	r2, r2, #10
 8008976:	601a      	str	r2, [r3, #0]
 8008978:	687b      	ldr	r3, [r7, #4]
 800897a:	2201      	movs	r2, #1
 800897c:	f883 2025 	strb.w	r2, [r3, #37]	; 0x25
 8008980:	687b      	ldr	r3, [r7, #4]
 8008982:	681b      	ldr	r3, [r3, #0]
 8008984:	461a      	mov	r2, r3
 8008986:	4b2e      	ldr	r3, [pc, #184]	; (8008a40 <HAL_DMA_IRQHandler+0x180>)
 8008988:	429a      	cmp	r2, r3
 800898a:	d909      	bls.n	80089a0 <HAL_DMA_IRQHandler+0xe0>
 800898c:	687b      	ldr	r3, [r7, #4]
 800898e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8008990:	f003 031c 	and.w	r3, r3, #28
 8008994:	4a2b      	ldr	r2, [pc, #172]	; (8008a44 <HAL_DMA_IRQHandler+0x184>)
 8008996:	2102      	movs	r1, #2
 8008998:	fa01 f303 	lsl.w	r3, r1, r3
 800899c:	6053      	str	r3, [r2, #4]
 800899e:	e008      	b.n	80089b2 <HAL_DMA_IRQHandler+0xf2>
 80089a0:	687b      	ldr	r3, [r7, #4]
 80089a2:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80089a4:	f003 031c 	and.w	r3, r3, #28
 80089a8:	4a27      	ldr	r2, [pc, #156]	; (8008a48 <HAL_DMA_IRQHandler+0x188>)
 80089aa:	2102      	movs	r1, #2
 80089ac:	fa01 f303 	lsl.w	r3, r1, r3
 80089b0:	6053      	str	r3, [r2, #4]
 80089b2:	687b      	ldr	r3, [r7, #4]
 80089b4:	2200      	movs	r2, #0
 80089b6:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
 80089ba:	687b      	ldr	r3, [r7, #4]
 80089bc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80089be:	2b00      	cmp	r3, #0
 80089c0:	d038      	beq.n	8008a34 <HAL_DMA_IRQHandler+0x174>
 80089c2:	687b      	ldr	r3, [r7, #4]
 80089c4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80089c6:	6878      	ldr	r0, [r7, #4]
 80089c8:	4798      	blx	r3
 80089ca:	e033      	b.n	8008a34 <HAL_DMA_IRQHandler+0x174>
 80089cc:	687b      	ldr	r3, [r7, #4]
 80089ce:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80089d0:	f003 031c 	and.w	r3, r3, #28
 80089d4:	2208      	movs	r2, #8
 80089d6:	409a      	lsls	r2, r3
 80089d8:	68fb      	ldr	r3, [r7, #12]
 80089da:	4013      	ands	r3, r2
 80089dc:	2b00      	cmp	r3, #0
 80089de:	d02a      	beq.n	8008a36 <HAL_DMA_IRQHandler+0x176>
 80089e0:	68bb      	ldr	r3, [r7, #8]
 80089e2:	f003 0308 	and.w	r3, r3, #8
 80089e6:	2b00      	cmp	r3, #0
 80089e8:	d025      	beq.n	8008a36 <HAL_DMA_IRQHandler+0x176>
 80089ea:	687b      	ldr	r3, [r7, #4]
 80089ec:	681b      	ldr	r3, [r3, #0]
 80089ee:	681a      	ldr	r2, [r3, #0]
 80089f0:	687b      	ldr	r3, [r7, #4]
 80089f2:	681b      	ldr	r3, [r3, #0]
 80089f4:	f022 020e 	bic.w	r2, r2, #14
 80089f8:	601a      	str	r2, [r3, #0]
 80089fa:	687b      	ldr	r3, [r7, #4]
 80089fc:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80089fe:	f003 021c 	and.w	r2, r3, #28
 8008a02:	687b      	ldr	r3, [r7, #4]
 8008a04:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8008a06:	2101      	movs	r1, #1
 8008a08:	fa01 f202 	lsl.w	r2, r1, r2
 8008a0c:	605a      	str	r2, [r3, #4]
 8008a0e:	687b      	ldr	r3, [r7, #4]
 8008a10:	2201      	movs	r2, #1
 8008a12:	63da      	str	r2, [r3, #60]	; 0x3c
 8008a14:	687b      	ldr	r3, [r7, #4]
 8008a16:	2201      	movs	r2, #1
 8008a18:	f883 2025 	strb.w	r2, [r3, #37]	; 0x25
 8008a1c:	687b      	ldr	r3, [r7, #4]
 8008a1e:	2200      	movs	r2, #0
 8008a20:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
 8008a24:	687b      	ldr	r3, [r7, #4]
 8008a26:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8008a28:	2b00      	cmp	r3, #0
 8008a2a:	d004      	beq.n	8008a36 <HAL_DMA_IRQHandler+0x176>
 8008a2c:	687b      	ldr	r3, [r7, #4]
 8008a2e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8008a30:	6878      	ldr	r0, [r7, #4]
 8008a32:	4798      	blx	r3
 8008a34:	bf00      	nop
 8008a36:	bf00      	nop
 8008a38:	3710      	adds	r7, #16
 8008a3a:	46bd      	mov	sp, r7
 8008a3c:	bd80      	pop	{r7, pc}
 8008a3e:	bf00      	nop
 8008a40:	40020080 	.word	0x40020080
 8008a44:	40020400 	.word	0x40020400
 8008a48:	40020000 	.word	0x40020000

08008a4c <HAL_DMA_GetState>:
 8008a4c:	b480      	push	{r7}
 8008a4e:	b083      	sub	sp, #12
 8008a50:	af00      	add	r7, sp, #0
 8008a52:	6078      	str	r0, [r7, #4]
 8008a54:	687b      	ldr	r3, [r7, #4]
 8008a56:	f893 3025 	ldrb.w	r3, [r3, #37]	; 0x25
 8008a5a:	b2db      	uxtb	r3, r3
 8008a5c:	4618      	mov	r0, r3
 8008a5e:	370c      	adds	r7, #12
 8008a60:	46bd      	mov	sp, r7
 8008a62:	bc80      	pop	{r7}
 8008a64:	4770      	bx	lr

08008a66 <HAL_DMA_ConfigChannelAttributes>:
 8008a66:	b480      	push	{r7}
 8008a68:	b085      	sub	sp, #20
 8008a6a:	af00      	add	r7, sp, #0
 8008a6c:	6078      	str	r0, [r7, #4]
 8008a6e:	6039      	str	r1, [r7, #0]
 8008a70:	2300      	movs	r3, #0
 8008a72:	72fb      	strb	r3, [r7, #11]
 8008a74:	687b      	ldr	r3, [r7, #4]
 8008a76:	2b00      	cmp	r3, #0
 8008a78:	d103      	bne.n	8008a82 <HAL_DMA_ConfigChannelAttributes+0x1c>
 8008a7a:	2301      	movs	r3, #1
 8008a7c:	72fb      	strb	r3, [r7, #11]
 8008a7e:	7afb      	ldrb	r3, [r7, #11]
 8008a80:	e01b      	b.n	8008aba <HAL_DMA_ConfigChannelAttributes+0x54>
 8008a82:	687b      	ldr	r3, [r7, #4]
 8008a84:	681b      	ldr	r3, [r3, #0]
 8008a86:	681b      	ldr	r3, [r3, #0]
 8008a88:	60fb      	str	r3, [r7, #12]
 8008a8a:	683b      	ldr	r3, [r7, #0]
 8008a8c:	f003 0310 	and.w	r3, r3, #16
 8008a90:	2b00      	cmp	r3, #0
 8008a92:	d00d      	beq.n	8008ab0 <HAL_DMA_ConfigChannelAttributes+0x4a>
 8008a94:	683b      	ldr	r3, [r7, #0]
 8008a96:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8008a9a:	2b00      	cmp	r3, #0
 8008a9c:	d004      	beq.n	8008aa8 <HAL_DMA_ConfigChannelAttributes+0x42>
 8008a9e:	68fb      	ldr	r3, [r7, #12]
 8008aa0:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8008aa4:	60fb      	str	r3, [r7, #12]
 8008aa6:	e003      	b.n	8008ab0 <HAL_DMA_ConfigChannelAttributes+0x4a>
 8008aa8:	68fb      	ldr	r3, [r7, #12]
 8008aaa:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
 8008aae:	60fb      	str	r3, [r7, #12]
 8008ab0:	687b      	ldr	r3, [r7, #4]
 8008ab2:	681b      	ldr	r3, [r3, #0]
 8008ab4:	68fa      	ldr	r2, [r7, #12]
 8008ab6:	601a      	str	r2, [r3, #0]
 8008ab8:	7afb      	ldrb	r3, [r7, #11]
 8008aba:	4618      	mov	r0, r3
 8008abc:	3714      	adds	r7, #20
 8008abe:	46bd      	mov	sp, r7
 8008ac0:	bc80      	pop	{r7}
 8008ac2:	4770      	bx	lr

08008ac4 <DMA_SetConfig>:
 8008ac4:	b480      	push	{r7}
 8008ac6:	b085      	sub	sp, #20
 8008ac8:	af00      	add	r7, sp, #0
 8008aca:	60f8      	str	r0, [r7, #12]
 8008acc:	60b9      	str	r1, [r7, #8]
 8008ace:	607a      	str	r2, [r7, #4]
 8008ad0:	603b      	str	r3, [r7, #0]
 8008ad2:	68fb      	ldr	r3, [r7, #12]
 8008ad4:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8008ad6:	68fa      	ldr	r2, [r7, #12]
 8008ad8:	6d12      	ldr	r2, [r2, #80]	; 0x50
 8008ada:	605a      	str	r2, [r3, #4]
 8008adc:	68fb      	ldr	r3, [r7, #12]
 8008ade:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8008ae0:	2b00      	cmp	r3, #0
 8008ae2:	d004      	beq.n	8008aee <DMA_SetConfig+0x2a>
 8008ae4:	68fb      	ldr	r3, [r7, #12]
 8008ae6:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8008ae8:	68fa      	ldr	r2, [r7, #12]
 8008aea:	6dd2      	ldr	r2, [r2, #92]	; 0x5c
 8008aec:	605a      	str	r2, [r3, #4]
 8008aee:	68fb      	ldr	r3, [r7, #12]
 8008af0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8008af2:	f003 021c 	and.w	r2, r3, #28
 8008af6:	68fb      	ldr	r3, [r7, #12]
 8008af8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8008afa:	2101      	movs	r1, #1
 8008afc:	fa01 f202 	lsl.w	r2, r1, r2
 8008b00:	605a      	str	r2, [r3, #4]
 8008b02:	68fb      	ldr	r3, [r7, #12]
 8008b04:	681b      	ldr	r3, [r3, #0]
 8008b06:	683a      	ldr	r2, [r7, #0]
 8008b08:	605a      	str	r2, [r3, #4]
 8008b0a:	68fb      	ldr	r3, [r7, #12]
 8008b0c:	689b      	ldr	r3, [r3, #8]
 8008b0e:	2b10      	cmp	r3, #16
 8008b10:	d108      	bne.n	8008b24 <DMA_SetConfig+0x60>
 8008b12:	68fb      	ldr	r3, [r7, #12]
 8008b14:	681b      	ldr	r3, [r3, #0]
 8008b16:	687a      	ldr	r2, [r7, #4]
 8008b18:	609a      	str	r2, [r3, #8]
 8008b1a:	68fb      	ldr	r3, [r7, #12]
 8008b1c:	681b      	ldr	r3, [r3, #0]
 8008b1e:	68ba      	ldr	r2, [r7, #8]
 8008b20:	60da      	str	r2, [r3, #12]
 8008b22:	e007      	b.n	8008b34 <DMA_SetConfig+0x70>
 8008b24:	68fb      	ldr	r3, [r7, #12]
 8008b26:	681b      	ldr	r3, [r3, #0]
 8008b28:	68ba      	ldr	r2, [r7, #8]
 8008b2a:	609a      	str	r2, [r3, #8]
 8008b2c:	68fb      	ldr	r3, [r7, #12]
 8008b2e:	681b      	ldr	r3, [r3, #0]
 8008b30:	687a      	ldr	r2, [r7, #4]
 8008b32:	60da      	str	r2, [r3, #12]
 8008b34:	bf00      	nop
 8008b36:	3714      	adds	r7, #20
 8008b38:	46bd      	mov	sp, r7
 8008b3a:	bc80      	pop	{r7}
 8008b3c:	4770      	bx	lr
	...

08008b40 <DMA_CalcDMAMUXChannelBaseAndMask>:
 8008b40:	b480      	push	{r7}
 8008b42:	b085      	sub	sp, #20
 8008b44:	af00      	add	r7, sp, #0
 8008b46:	6078      	str	r0, [r7, #4]
 8008b48:	687b      	ldr	r3, [r7, #4]
 8008b4a:	681b      	ldr	r3, [r3, #0]
 8008b4c:	461a      	mov	r2, r3
 8008b4e:	4b1c      	ldr	r3, [pc, #112]	; (8008bc0 <DMA_CalcDMAMUXChannelBaseAndMask+0x80>)
 8008b50:	429a      	cmp	r2, r3
 8008b52:	d813      	bhi.n	8008b7c <DMA_CalcDMAMUXChannelBaseAndMask+0x3c>
 8008b54:	687b      	ldr	r3, [r7, #4]
 8008b56:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8008b58:	089b      	lsrs	r3, r3, #2
 8008b5a:	009b      	lsls	r3, r3, #2
 8008b5c:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8008b60:	f503 3302 	add.w	r3, r3, #133120	; 0x20800
 8008b64:	687a      	ldr	r2, [r7, #4]
 8008b66:	6493      	str	r3, [r2, #72]	; 0x48
 8008b68:	687b      	ldr	r3, [r7, #4]
 8008b6a:	681b      	ldr	r3, [r3, #0]
 8008b6c:	b2db      	uxtb	r3, r3
 8008b6e:	3b08      	subs	r3, #8
 8008b70:	4a14      	ldr	r2, [pc, #80]	; (8008bc4 <DMA_CalcDMAMUXChannelBaseAndMask+0x84>)
 8008b72:	fba2 2303 	umull	r2, r3, r2, r3
 8008b76:	091b      	lsrs	r3, r3, #4
 8008b78:	60fb      	str	r3, [r7, #12]
 8008b7a:	e011      	b.n	8008ba0 <DMA_CalcDMAMUXChannelBaseAndMask+0x60>
 8008b7c:	687b      	ldr	r3, [r7, #4]
 8008b7e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8008b80:	089b      	lsrs	r3, r3, #2
 8008b82:	009a      	lsls	r2, r3, #2
 8008b84:	4b10      	ldr	r3, [pc, #64]	; (8008bc8 <DMA_CalcDMAMUXChannelBaseAndMask+0x88>)
 8008b86:	4413      	add	r3, r2
 8008b88:	687a      	ldr	r2, [r7, #4]
 8008b8a:	6493      	str	r3, [r2, #72]	; 0x48
 8008b8c:	687b      	ldr	r3, [r7, #4]
 8008b8e:	681b      	ldr	r3, [r3, #0]
 8008b90:	b2db      	uxtb	r3, r3
 8008b92:	3b08      	subs	r3, #8
 8008b94:	4a0b      	ldr	r2, [pc, #44]	; (8008bc4 <DMA_CalcDMAMUXChannelBaseAndMask+0x84>)
 8008b96:	fba2 2303 	umull	r2, r3, r2, r3
 8008b9a:	091b      	lsrs	r3, r3, #4
 8008b9c:	3307      	adds	r3, #7
 8008b9e:	60fb      	str	r3, [r7, #12]
 8008ba0:	687b      	ldr	r3, [r7, #4]
 8008ba2:	4a0a      	ldr	r2, [pc, #40]	; (8008bcc <DMA_CalcDMAMUXChannelBaseAndMask+0x8c>)
 8008ba4:	64da      	str	r2, [r3, #76]	; 0x4c
 8008ba6:	68fb      	ldr	r3, [r7, #12]
 8008ba8:	f003 031f 	and.w	r3, r3, #31
 8008bac:	2201      	movs	r2, #1
 8008bae:	409a      	lsls	r2, r3
 8008bb0:	687b      	ldr	r3, [r7, #4]
 8008bb2:	651a      	str	r2, [r3, #80]	; 0x50
 8008bb4:	bf00      	nop
 8008bb6:	3714      	adds	r7, #20
 8008bb8:	46bd      	mov	sp, r7
 8008bba:	bc80      	pop	{r7}
 8008bbc:	4770      	bx	lr
 8008bbe:	bf00      	nop
 8008bc0:	40020407 	.word	0x40020407
 8008bc4:	cccccccd 	.word	0xcccccccd
 8008bc8:	4002081c 	.word	0x4002081c
 8008bcc:	40020880 	.word	0x40020880

08008bd0 <DMA_CalcDMAMUXRequestGenBaseAndMask>:
 8008bd0:	b480      	push	{r7}
 8008bd2:	b085      	sub	sp, #20
 8008bd4:	af00      	add	r7, sp, #0
 8008bd6:	6078      	str	r0, [r7, #4]
 8008bd8:	687b      	ldr	r3, [r7, #4]
 8008bda:	685b      	ldr	r3, [r3, #4]
 8008bdc:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8008be0:	60fb      	str	r3, [r7, #12]
 8008be2:	68fa      	ldr	r2, [r7, #12]
 8008be4:	4b0a      	ldr	r3, [pc, #40]	; (8008c10 <DMA_CalcDMAMUXRequestGenBaseAndMask+0x40>)
 8008be6:	4413      	add	r3, r2
 8008be8:	009b      	lsls	r3, r3, #2
 8008bea:	461a      	mov	r2, r3
 8008bec:	687b      	ldr	r3, [r7, #4]
 8008bee:	655a      	str	r2, [r3, #84]	; 0x54
 8008bf0:	687b      	ldr	r3, [r7, #4]
 8008bf2:	4a08      	ldr	r2, [pc, #32]	; (8008c14 <DMA_CalcDMAMUXRequestGenBaseAndMask+0x44>)
 8008bf4:	659a      	str	r2, [r3, #88]	; 0x58
 8008bf6:	68fb      	ldr	r3, [r7, #12]
 8008bf8:	3b01      	subs	r3, #1
 8008bfa:	f003 0303 	and.w	r3, r3, #3
 8008bfe:	2201      	movs	r2, #1
 8008c00:	409a      	lsls	r2, r3
 8008c02:	687b      	ldr	r3, [r7, #4]
 8008c04:	65da      	str	r2, [r3, #92]	; 0x5c
 8008c06:	bf00      	nop
 8008c08:	3714      	adds	r7, #20
 8008c0a:	46bd      	mov	sp, r7
 8008c0c:	bc80      	pop	{r7}
 8008c0e:	4770      	bx	lr
 8008c10:	1000823f 	.word	0x1000823f
 8008c14:	40020940 	.word	0x40020940

08008c18 <HAL_EXTI_RegisterCallback>:
 8008c18:	b480      	push	{r7}
 8008c1a:	b087      	sub	sp, #28
 8008c1c:	af00      	add	r7, sp, #0
 8008c1e:	60f8      	str	r0, [r7, #12]
 8008c20:	460b      	mov	r3, r1
 8008c22:	607a      	str	r2, [r7, #4]
 8008c24:	72fb      	strb	r3, [r7, #11]
 8008c26:	2300      	movs	r3, #0
 8008c28:	75fb      	strb	r3, [r7, #23]
 8008c2a:	7afb      	ldrb	r3, [r7, #11]
 8008c2c:	2b00      	cmp	r3, #0
 8008c2e:	d103      	bne.n	8008c38 <HAL_EXTI_RegisterCallback+0x20>
 8008c30:	68fb      	ldr	r3, [r7, #12]
 8008c32:	687a      	ldr	r2, [r7, #4]
 8008c34:	605a      	str	r2, [r3, #4]
 8008c36:	e002      	b.n	8008c3e <HAL_EXTI_RegisterCallback+0x26>
 8008c38:	2301      	movs	r3, #1
 8008c3a:	75fb      	strb	r3, [r7, #23]
 8008c3c:	bf00      	nop
 8008c3e:	7dfb      	ldrb	r3, [r7, #23]
 8008c40:	4618      	mov	r0, r3
 8008c42:	371c      	adds	r7, #28
 8008c44:	46bd      	mov	sp, r7
 8008c46:	bc80      	pop	{r7}
 8008c48:	4770      	bx	lr

08008c4a <HAL_EXTI_GetHandle>:
 8008c4a:	b480      	push	{r7}
 8008c4c:	b083      	sub	sp, #12
 8008c4e:	af00      	add	r7, sp, #0
 8008c50:	6078      	str	r0, [r7, #4]
 8008c52:	6039      	str	r1, [r7, #0]
 8008c54:	687b      	ldr	r3, [r7, #4]
 8008c56:	2b00      	cmp	r3, #0
 8008c58:	d101      	bne.n	8008c5e <HAL_EXTI_GetHandle+0x14>
 8008c5a:	2301      	movs	r3, #1
 8008c5c:	e003      	b.n	8008c66 <HAL_EXTI_GetHandle+0x1c>
 8008c5e:	687b      	ldr	r3, [r7, #4]
 8008c60:	683a      	ldr	r2, [r7, #0]
 8008c62:	601a      	str	r2, [r3, #0]
 8008c64:	2300      	movs	r3, #0
 8008c66:	4618      	mov	r0, r3
 8008c68:	370c      	adds	r7, #12
 8008c6a:	46bd      	mov	sp, r7
 8008c6c:	bc80      	pop	{r7}
 8008c6e:	4770      	bx	lr

08008c70 <HAL_GPIO_Init>:
 8008c70:	b480      	push	{r7}
 8008c72:	b087      	sub	sp, #28
 8008c74:	af00      	add	r7, sp, #0
 8008c76:	6078      	str	r0, [r7, #4]
 8008c78:	6039      	str	r1, [r7, #0]
 8008c7a:	2300      	movs	r3, #0
 8008c7c:	617b      	str	r3, [r7, #20]
 8008c7e:	e140      	b.n	8008f02 <HAL_GPIO_Init+0x292>
 8008c80:	683b      	ldr	r3, [r7, #0]
 8008c82:	681a      	ldr	r2, [r3, #0]
 8008c84:	2101      	movs	r1, #1
 8008c86:	697b      	ldr	r3, [r7, #20]
 8008c88:	fa01 f303 	lsl.w	r3, r1, r3
 8008c8c:	4013      	ands	r3, r2
 8008c8e:	60fb      	str	r3, [r7, #12]
 8008c90:	68fb      	ldr	r3, [r7, #12]
 8008c92:	2b00      	cmp	r3, #0
 8008c94:	f000 8132 	beq.w	8008efc <HAL_GPIO_Init+0x28c>
 8008c98:	683b      	ldr	r3, [r7, #0]
 8008c9a:	685b      	ldr	r3, [r3, #4]
 8008c9c:	2b01      	cmp	r3, #1
 8008c9e:	d00b      	beq.n	8008cb8 <HAL_GPIO_Init+0x48>
 8008ca0:	683b      	ldr	r3, [r7, #0]
 8008ca2:	685b      	ldr	r3, [r3, #4]
 8008ca4:	2b02      	cmp	r3, #2
 8008ca6:	d007      	beq.n	8008cb8 <HAL_GPIO_Init+0x48>
 8008ca8:	683b      	ldr	r3, [r7, #0]
 8008caa:	685b      	ldr	r3, [r3, #4]
 8008cac:	2b11      	cmp	r3, #17
 8008cae:	d003      	beq.n	8008cb8 <HAL_GPIO_Init+0x48>
 8008cb0:	683b      	ldr	r3, [r7, #0]
 8008cb2:	685b      	ldr	r3, [r3, #4]
 8008cb4:	2b12      	cmp	r3, #18
 8008cb6:	d130      	bne.n	8008d1a <HAL_GPIO_Init+0xaa>
 8008cb8:	687b      	ldr	r3, [r7, #4]
 8008cba:	689b      	ldr	r3, [r3, #8]
 8008cbc:	613b      	str	r3, [r7, #16]
 8008cbe:	697b      	ldr	r3, [r7, #20]
 8008cc0:	005b      	lsls	r3, r3, #1
 8008cc2:	2203      	movs	r2, #3
 8008cc4:	fa02 f303 	lsl.w	r3, r2, r3
 8008cc8:	43db      	mvns	r3, r3
 8008cca:	693a      	ldr	r2, [r7, #16]
 8008ccc:	4013      	ands	r3, r2
 8008cce:	613b      	str	r3, [r7, #16]
 8008cd0:	683b      	ldr	r3, [r7, #0]
 8008cd2:	68da      	ldr	r2, [r3, #12]
 8008cd4:	697b      	ldr	r3, [r7, #20]
 8008cd6:	005b      	lsls	r3, r3, #1
 8008cd8:	fa02 f303 	lsl.w	r3, r2, r3
 8008cdc:	693a      	ldr	r2, [r7, #16]
 8008cde:	4313      	orrs	r3, r2
 8008ce0:	613b      	str	r3, [r7, #16]
 8008ce2:	687b      	ldr	r3, [r7, #4]
 8008ce4:	693a      	ldr	r2, [r7, #16]
 8008ce6:	609a      	str	r2, [r3, #8]
 8008ce8:	687b      	ldr	r3, [r7, #4]
 8008cea:	685b      	ldr	r3, [r3, #4]
 8008cec:	613b      	str	r3, [r7, #16]
 8008cee:	2201      	movs	r2, #1
 8008cf0:	697b      	ldr	r3, [r7, #20]
 8008cf2:	fa02 f303 	lsl.w	r3, r2, r3
 8008cf6:	43db      	mvns	r3, r3
 8008cf8:	693a      	ldr	r2, [r7, #16]
 8008cfa:	4013      	ands	r3, r2
 8008cfc:	613b      	str	r3, [r7, #16]
 8008cfe:	683b      	ldr	r3, [r7, #0]
 8008d00:	685b      	ldr	r3, [r3, #4]
 8008d02:	091b      	lsrs	r3, r3, #4
 8008d04:	f003 0201 	and.w	r2, r3, #1
 8008d08:	697b      	ldr	r3, [r7, #20]
 8008d0a:	fa02 f303 	lsl.w	r3, r2, r3
 8008d0e:	693a      	ldr	r2, [r7, #16]
 8008d10:	4313      	orrs	r3, r2
 8008d12:	613b      	str	r3, [r7, #16]
 8008d14:	687b      	ldr	r3, [r7, #4]
 8008d16:	693a      	ldr	r2, [r7, #16]
 8008d18:	605a      	str	r2, [r3, #4]
 8008d1a:	687b      	ldr	r3, [r7, #4]
 8008d1c:	68db      	ldr	r3, [r3, #12]
 8008d1e:	613b      	str	r3, [r7, #16]
 8008d20:	697b      	ldr	r3, [r7, #20]
 8008d22:	005b      	lsls	r3, r3, #1
 8008d24:	2203      	movs	r2, #3
 8008d26:	fa02 f303 	lsl.w	r3, r2, r3
 8008d2a:	43db      	mvns	r3, r3
 8008d2c:	693a      	ldr	r2, [r7, #16]
 8008d2e:	4013      	ands	r3, r2
 8008d30:	613b      	str	r3, [r7, #16]
 8008d32:	683b      	ldr	r3, [r7, #0]
 8008d34:	689a      	ldr	r2, [r3, #8]
 8008d36:	697b      	ldr	r3, [r7, #20]
 8008d38:	005b      	lsls	r3, r3, #1
 8008d3a:	fa02 f303 	lsl.w	r3, r2, r3
 8008d3e:	693a      	ldr	r2, [r7, #16]
 8008d40:	4313      	orrs	r3, r2
 8008d42:	613b      	str	r3, [r7, #16]
 8008d44:	687b      	ldr	r3, [r7, #4]
 8008d46:	693a      	ldr	r2, [r7, #16]
 8008d48:	60da      	str	r2, [r3, #12]
 8008d4a:	683b      	ldr	r3, [r7, #0]
 8008d4c:	685b      	ldr	r3, [r3, #4]
 8008d4e:	2b02      	cmp	r3, #2
 8008d50:	d003      	beq.n	8008d5a <HAL_GPIO_Init+0xea>
 8008d52:	683b      	ldr	r3, [r7, #0]
 8008d54:	685b      	ldr	r3, [r3, #4]
 8008d56:	2b12      	cmp	r3, #18
 8008d58:	d123      	bne.n	8008da2 <HAL_GPIO_Init+0x132>
 8008d5a:	697b      	ldr	r3, [r7, #20]
 8008d5c:	08da      	lsrs	r2, r3, #3
 8008d5e:	687b      	ldr	r3, [r7, #4]
 8008d60:	3208      	adds	r2, #8
 8008d62:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8008d66:	613b      	str	r3, [r7, #16]
 8008d68:	697b      	ldr	r3, [r7, #20]
 8008d6a:	f003 0307 	and.w	r3, r3, #7
 8008d6e:	009b      	lsls	r3, r3, #2
 8008d70:	220f      	movs	r2, #15
 8008d72:	fa02 f303 	lsl.w	r3, r2, r3
 8008d76:	43db      	mvns	r3, r3
 8008d78:	693a      	ldr	r2, [r7, #16]
 8008d7a:	4013      	ands	r3, r2
 8008d7c:	613b      	str	r3, [r7, #16]
 8008d7e:	683b      	ldr	r3, [r7, #0]
 8008d80:	691a      	ldr	r2, [r3, #16]
 8008d82:	697b      	ldr	r3, [r7, #20]
 8008d84:	f003 0307 	and.w	r3, r3, #7
 8008d88:	009b      	lsls	r3, r3, #2
 8008d8a:	fa02 f303 	lsl.w	r3, r2, r3
 8008d8e:	693a      	ldr	r2, [r7, #16]
 8008d90:	4313      	orrs	r3, r2
 8008d92:	613b      	str	r3, [r7, #16]
 8008d94:	697b      	ldr	r3, [r7, #20]
 8008d96:	08da      	lsrs	r2, r3, #3
 8008d98:	687b      	ldr	r3, [r7, #4]
 8008d9a:	3208      	adds	r2, #8
 8008d9c:	6939      	ldr	r1, [r7, #16]
 8008d9e:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8008da2:	687b      	ldr	r3, [r7, #4]
 8008da4:	681b      	ldr	r3, [r3, #0]
 8008da6:	613b      	str	r3, [r7, #16]
 8008da8:	697b      	ldr	r3, [r7, #20]
 8008daa:	005b      	lsls	r3, r3, #1
 8008dac:	2203      	movs	r2, #3
 8008dae:	fa02 f303 	lsl.w	r3, r2, r3
 8008db2:	43db      	mvns	r3, r3
 8008db4:	693a      	ldr	r2, [r7, #16]
 8008db6:	4013      	ands	r3, r2
 8008db8:	613b      	str	r3, [r7, #16]
 8008dba:	683b      	ldr	r3, [r7, #0]
 8008dbc:	685b      	ldr	r3, [r3, #4]
 8008dbe:	f003 0203 	and.w	r2, r3, #3
 8008dc2:	697b      	ldr	r3, [r7, #20]
 8008dc4:	005b      	lsls	r3, r3, #1
 8008dc6:	fa02 f303 	lsl.w	r3, r2, r3
 8008dca:	693a      	ldr	r2, [r7, #16]
 8008dcc:	4313      	orrs	r3, r2
 8008dce:	613b      	str	r3, [r7, #16]
 8008dd0:	687b      	ldr	r3, [r7, #4]
 8008dd2:	693a      	ldr	r2, [r7, #16]
 8008dd4:	601a      	str	r2, [r3, #0]
 8008dd6:	683b      	ldr	r3, [r7, #0]
 8008dd8:	685b      	ldr	r3, [r3, #4]
 8008dda:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8008dde:	2b00      	cmp	r3, #0
 8008de0:	f000 808c 	beq.w	8008efc <HAL_GPIO_Init+0x28c>
 8008de4:	4a4e      	ldr	r2, [pc, #312]	; (8008f20 <HAL_GPIO_Init+0x2b0>)
 8008de6:	697b      	ldr	r3, [r7, #20]
 8008de8:	089b      	lsrs	r3, r3, #2
 8008dea:	3302      	adds	r3, #2
 8008dec:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8008df0:	613b      	str	r3, [r7, #16]
 8008df2:	697b      	ldr	r3, [r7, #20]
 8008df4:	f003 0303 	and.w	r3, r3, #3
 8008df8:	009b      	lsls	r3, r3, #2
 8008dfa:	2207      	movs	r2, #7
 8008dfc:	fa02 f303 	lsl.w	r3, r2, r3
 8008e00:	43db      	mvns	r3, r3
 8008e02:	693a      	ldr	r2, [r7, #16]
 8008e04:	4013      	ands	r3, r2
 8008e06:	613b      	str	r3, [r7, #16]
 8008e08:	687b      	ldr	r3, [r7, #4]
 8008e0a:	f1b3 4f90 	cmp.w	r3, #1207959552	; 0x48000000
 8008e0e:	d00d      	beq.n	8008e2c <HAL_GPIO_Init+0x1bc>
 8008e10:	687b      	ldr	r3, [r7, #4]
 8008e12:	4a44      	ldr	r2, [pc, #272]	; (8008f24 <HAL_GPIO_Init+0x2b4>)
 8008e14:	4293      	cmp	r3, r2
 8008e16:	d007      	beq.n	8008e28 <HAL_GPIO_Init+0x1b8>
 8008e18:	687b      	ldr	r3, [r7, #4]
 8008e1a:	4a43      	ldr	r2, [pc, #268]	; (8008f28 <HAL_GPIO_Init+0x2b8>)
 8008e1c:	4293      	cmp	r3, r2
 8008e1e:	d101      	bne.n	8008e24 <HAL_GPIO_Init+0x1b4>
 8008e20:	2302      	movs	r3, #2
 8008e22:	e004      	b.n	8008e2e <HAL_GPIO_Init+0x1be>
 8008e24:	2307      	movs	r3, #7
 8008e26:	e002      	b.n	8008e2e <HAL_GPIO_Init+0x1be>
 8008e28:	2301      	movs	r3, #1
 8008e2a:	e000      	b.n	8008e2e <HAL_GPIO_Init+0x1be>
 8008e2c:	2300      	movs	r3, #0
 8008e2e:	697a      	ldr	r2, [r7, #20]
 8008e30:	f002 0203 	and.w	r2, r2, #3
 8008e34:	0092      	lsls	r2, r2, #2
 8008e36:	4093      	lsls	r3, r2
 8008e38:	693a      	ldr	r2, [r7, #16]
 8008e3a:	4313      	orrs	r3, r2
 8008e3c:	613b      	str	r3, [r7, #16]
 8008e3e:	4938      	ldr	r1, [pc, #224]	; (8008f20 <HAL_GPIO_Init+0x2b0>)
 8008e40:	697b      	ldr	r3, [r7, #20]
 8008e42:	089b      	lsrs	r3, r3, #2
 8008e44:	3302      	adds	r3, #2
 8008e46:	693a      	ldr	r2, [r7, #16]
 8008e48:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8008e4c:	4b37      	ldr	r3, [pc, #220]	; (8008f2c <HAL_GPIO_Init+0x2bc>)
 8008e4e:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8008e52:	613b      	str	r3, [r7, #16]
 8008e54:	68fb      	ldr	r3, [r7, #12]
 8008e56:	43db      	mvns	r3, r3
 8008e58:	693a      	ldr	r2, [r7, #16]
 8008e5a:	4013      	ands	r3, r2
 8008e5c:	613b      	str	r3, [r7, #16]
 8008e5e:	683b      	ldr	r3, [r7, #0]
 8008e60:	685b      	ldr	r3, [r3, #4]
 8008e62:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8008e66:	2b00      	cmp	r3, #0
 8008e68:	d003      	beq.n	8008e72 <HAL_GPIO_Init+0x202>
 8008e6a:	693a      	ldr	r2, [r7, #16]
 8008e6c:	68fb      	ldr	r3, [r7, #12]
 8008e6e:	4313      	orrs	r3, r2
 8008e70:	613b      	str	r3, [r7, #16]
 8008e72:	4a2e      	ldr	r2, [pc, #184]	; (8008f2c <HAL_GPIO_Init+0x2bc>)
 8008e74:	693b      	ldr	r3, [r7, #16]
 8008e76:	f8c2 3080 	str.w	r3, [r2, #128]	; 0x80
 8008e7a:	4b2c      	ldr	r3, [pc, #176]	; (8008f2c <HAL_GPIO_Init+0x2bc>)
 8008e7c:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8008e80:	613b      	str	r3, [r7, #16]
 8008e82:	68fb      	ldr	r3, [r7, #12]
 8008e84:	43db      	mvns	r3, r3
 8008e86:	693a      	ldr	r2, [r7, #16]
 8008e88:	4013      	ands	r3, r2
 8008e8a:	613b      	str	r3, [r7, #16]
 8008e8c:	683b      	ldr	r3, [r7, #0]
 8008e8e:	685b      	ldr	r3, [r3, #4]
 8008e90:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8008e94:	2b00      	cmp	r3, #0
 8008e96:	d003      	beq.n	8008ea0 <HAL_GPIO_Init+0x230>
 8008e98:	693a      	ldr	r2, [r7, #16]
 8008e9a:	68fb      	ldr	r3, [r7, #12]
 8008e9c:	4313      	orrs	r3, r2
 8008e9e:	613b      	str	r3, [r7, #16]
 8008ea0:	4a22      	ldr	r2, [pc, #136]	; (8008f2c <HAL_GPIO_Init+0x2bc>)
 8008ea2:	693b      	ldr	r3, [r7, #16]
 8008ea4:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
 8008ea8:	4b20      	ldr	r3, [pc, #128]	; (8008f2c <HAL_GPIO_Init+0x2bc>)
 8008eaa:	681b      	ldr	r3, [r3, #0]
 8008eac:	613b      	str	r3, [r7, #16]
 8008eae:	68fb      	ldr	r3, [r7, #12]
 8008eb0:	43db      	mvns	r3, r3
 8008eb2:	693a      	ldr	r2, [r7, #16]
 8008eb4:	4013      	ands	r3, r2
 8008eb6:	613b      	str	r3, [r7, #16]
 8008eb8:	683b      	ldr	r3, [r7, #0]
 8008eba:	685b      	ldr	r3, [r3, #4]
 8008ebc:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8008ec0:	2b00      	cmp	r3, #0
 8008ec2:	d003      	beq.n	8008ecc <HAL_GPIO_Init+0x25c>
 8008ec4:	693a      	ldr	r2, [r7, #16]
 8008ec6:	68fb      	ldr	r3, [r7, #12]
 8008ec8:	4313      	orrs	r3, r2
 8008eca:	613b      	str	r3, [r7, #16]
 8008ecc:	4a17      	ldr	r2, [pc, #92]	; (8008f2c <HAL_GPIO_Init+0x2bc>)
 8008ece:	693b      	ldr	r3, [r7, #16]
 8008ed0:	6013      	str	r3, [r2, #0]
 8008ed2:	4b16      	ldr	r3, [pc, #88]	; (8008f2c <HAL_GPIO_Init+0x2bc>)
 8008ed4:	685b      	ldr	r3, [r3, #4]
 8008ed6:	613b      	str	r3, [r7, #16]
 8008ed8:	68fb      	ldr	r3, [r7, #12]
 8008eda:	43db      	mvns	r3, r3
 8008edc:	693a      	ldr	r2, [r7, #16]
 8008ede:	4013      	ands	r3, r2
 8008ee0:	613b      	str	r3, [r7, #16]
 8008ee2:	683b      	ldr	r3, [r7, #0]
 8008ee4:	685b      	ldr	r3, [r3, #4]
 8008ee6:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8008eea:	2b00      	cmp	r3, #0
 8008eec:	d003      	beq.n	8008ef6 <HAL_GPIO_Init+0x286>
 8008eee:	693a      	ldr	r2, [r7, #16]
 8008ef0:	68fb      	ldr	r3, [r7, #12]
 8008ef2:	4313      	orrs	r3, r2
 8008ef4:	613b      	str	r3, [r7, #16]
 8008ef6:	4a0d      	ldr	r2, [pc, #52]	; (8008f2c <HAL_GPIO_Init+0x2bc>)
 8008ef8:	693b      	ldr	r3, [r7, #16]
 8008efa:	6053      	str	r3, [r2, #4]
 8008efc:	697b      	ldr	r3, [r7, #20]
 8008efe:	3301      	adds	r3, #1
 8008f00:	617b      	str	r3, [r7, #20]
 8008f02:	683b      	ldr	r3, [r7, #0]
 8008f04:	681a      	ldr	r2, [r3, #0]
 8008f06:	697b      	ldr	r3, [r7, #20]
 8008f08:	fa22 f303 	lsr.w	r3, r2, r3
 8008f0c:	2b00      	cmp	r3, #0
 8008f0e:	f47f aeb7 	bne.w	8008c80 <HAL_GPIO_Init+0x10>
 8008f12:	bf00      	nop
 8008f14:	bf00      	nop
 8008f16:	371c      	adds	r7, #28
 8008f18:	46bd      	mov	sp, r7
 8008f1a:	bc80      	pop	{r7}
 8008f1c:	4770      	bx	lr
 8008f1e:	bf00      	nop
 8008f20:	40010000 	.word	0x40010000
 8008f24:	48000400 	.word	0x48000400
 8008f28:	48000800 	.word	0x48000800
 8008f2c:	58000800 	.word	0x58000800

08008f30 <HAL_GPIO_DeInit>:
 8008f30:	b480      	push	{r7}
 8008f32:	b087      	sub	sp, #28
 8008f34:	af00      	add	r7, sp, #0
 8008f36:	6078      	str	r0, [r7, #4]
 8008f38:	6039      	str	r1, [r7, #0]
 8008f3a:	2300      	movs	r3, #0
 8008f3c:	617b      	str	r3, [r7, #20]
 8008f3e:	e0af      	b.n	80090a0 <HAL_GPIO_DeInit+0x170>
 8008f40:	2201      	movs	r2, #1
 8008f42:	697b      	ldr	r3, [r7, #20]
 8008f44:	fa02 f303 	lsl.w	r3, r2, r3
 8008f48:	683a      	ldr	r2, [r7, #0]
 8008f4a:	4013      	ands	r3, r2
 8008f4c:	613b      	str	r3, [r7, #16]
 8008f4e:	693b      	ldr	r3, [r7, #16]
 8008f50:	2b00      	cmp	r3, #0
 8008f52:	f000 80a2 	beq.w	800909a <HAL_GPIO_DeInit+0x16a>
 8008f56:	4a59      	ldr	r2, [pc, #356]	; (80090bc <HAL_GPIO_DeInit+0x18c>)
 8008f58:	697b      	ldr	r3, [r7, #20]
 8008f5a:	089b      	lsrs	r3, r3, #2
 8008f5c:	3302      	adds	r3, #2
 8008f5e:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8008f62:	60fb      	str	r3, [r7, #12]
 8008f64:	697b      	ldr	r3, [r7, #20]
 8008f66:	f003 0303 	and.w	r3, r3, #3
 8008f6a:	009b      	lsls	r3, r3, #2
 8008f6c:	2207      	movs	r2, #7
 8008f6e:	fa02 f303 	lsl.w	r3, r2, r3
 8008f72:	68fa      	ldr	r2, [r7, #12]
 8008f74:	4013      	ands	r3, r2
 8008f76:	60fb      	str	r3, [r7, #12]
 8008f78:	687b      	ldr	r3, [r7, #4]
 8008f7a:	f1b3 4f90 	cmp.w	r3, #1207959552	; 0x48000000
 8008f7e:	d00d      	beq.n	8008f9c <HAL_GPIO_DeInit+0x6c>
 8008f80:	687b      	ldr	r3, [r7, #4]
 8008f82:	4a4f      	ldr	r2, [pc, #316]	; (80090c0 <HAL_GPIO_DeInit+0x190>)
 8008f84:	4293      	cmp	r3, r2
 8008f86:	d007      	beq.n	8008f98 <HAL_GPIO_DeInit+0x68>
 8008f88:	687b      	ldr	r3, [r7, #4]
 8008f8a:	4a4e      	ldr	r2, [pc, #312]	; (80090c4 <HAL_GPIO_DeInit+0x194>)
 8008f8c:	4293      	cmp	r3, r2
 8008f8e:	d101      	bne.n	8008f94 <HAL_GPIO_DeInit+0x64>
 8008f90:	2302      	movs	r3, #2
 8008f92:	e004      	b.n	8008f9e <HAL_GPIO_DeInit+0x6e>
 8008f94:	2307      	movs	r3, #7
 8008f96:	e002      	b.n	8008f9e <HAL_GPIO_DeInit+0x6e>
 8008f98:	2301      	movs	r3, #1
 8008f9a:	e000      	b.n	8008f9e <HAL_GPIO_DeInit+0x6e>
 8008f9c:	2300      	movs	r3, #0
 8008f9e:	697a      	ldr	r2, [r7, #20]
 8008fa0:	f002 0203 	and.w	r2, r2, #3
 8008fa4:	0092      	lsls	r2, r2, #2
 8008fa6:	4093      	lsls	r3, r2
 8008fa8:	68fa      	ldr	r2, [r7, #12]
 8008faa:	429a      	cmp	r2, r3
 8008fac:	d136      	bne.n	800901c <HAL_GPIO_DeInit+0xec>
 8008fae:	4b46      	ldr	r3, [pc, #280]	; (80090c8 <HAL_GPIO_DeInit+0x198>)
 8008fb0:	f8d3 2080 	ldr.w	r2, [r3, #128]	; 0x80
 8008fb4:	693b      	ldr	r3, [r7, #16]
 8008fb6:	43db      	mvns	r3, r3
 8008fb8:	4943      	ldr	r1, [pc, #268]	; (80090c8 <HAL_GPIO_DeInit+0x198>)
 8008fba:	4013      	ands	r3, r2
 8008fbc:	f8c1 3080 	str.w	r3, [r1, #128]	; 0x80
 8008fc0:	4b41      	ldr	r3, [pc, #260]	; (80090c8 <HAL_GPIO_DeInit+0x198>)
 8008fc2:	f8d3 2084 	ldr.w	r2, [r3, #132]	; 0x84
 8008fc6:	693b      	ldr	r3, [r7, #16]
 8008fc8:	43db      	mvns	r3, r3
 8008fca:	493f      	ldr	r1, [pc, #252]	; (80090c8 <HAL_GPIO_DeInit+0x198>)
 8008fcc:	4013      	ands	r3, r2
 8008fce:	f8c1 3084 	str.w	r3, [r1, #132]	; 0x84
 8008fd2:	4b3d      	ldr	r3, [pc, #244]	; (80090c8 <HAL_GPIO_DeInit+0x198>)
 8008fd4:	681a      	ldr	r2, [r3, #0]
 8008fd6:	693b      	ldr	r3, [r7, #16]
 8008fd8:	43db      	mvns	r3, r3
 8008fda:	493b      	ldr	r1, [pc, #236]	; (80090c8 <HAL_GPIO_DeInit+0x198>)
 8008fdc:	4013      	ands	r3, r2
 8008fde:	600b      	str	r3, [r1, #0]
 8008fe0:	4b39      	ldr	r3, [pc, #228]	; (80090c8 <HAL_GPIO_DeInit+0x198>)
 8008fe2:	685a      	ldr	r2, [r3, #4]
 8008fe4:	693b      	ldr	r3, [r7, #16]
 8008fe6:	43db      	mvns	r3, r3
 8008fe8:	4937      	ldr	r1, [pc, #220]	; (80090c8 <HAL_GPIO_DeInit+0x198>)
 8008fea:	4013      	ands	r3, r2
 8008fec:	604b      	str	r3, [r1, #4]
 8008fee:	697b      	ldr	r3, [r7, #20]
 8008ff0:	f003 0303 	and.w	r3, r3, #3
 8008ff4:	009b      	lsls	r3, r3, #2
 8008ff6:	2207      	movs	r2, #7
 8008ff8:	fa02 f303 	lsl.w	r3, r2, r3
 8008ffc:	60fb      	str	r3, [r7, #12]
 8008ffe:	4a2f      	ldr	r2, [pc, #188]	; (80090bc <HAL_GPIO_DeInit+0x18c>)
 8009000:	697b      	ldr	r3, [r7, #20]
 8009002:	089b      	lsrs	r3, r3, #2
 8009004:	3302      	adds	r3, #2
 8009006:	f852 1023 	ldr.w	r1, [r2, r3, lsl #2]
 800900a:	68fb      	ldr	r3, [r7, #12]
 800900c:	43da      	mvns	r2, r3
 800900e:	482b      	ldr	r0, [pc, #172]	; (80090bc <HAL_GPIO_DeInit+0x18c>)
 8009010:	697b      	ldr	r3, [r7, #20]
 8009012:	089b      	lsrs	r3, r3, #2
 8009014:	400a      	ands	r2, r1
 8009016:	3302      	adds	r3, #2
 8009018:	f840 2023 	str.w	r2, [r0, r3, lsl #2]
 800901c:	687b      	ldr	r3, [r7, #4]
 800901e:	681a      	ldr	r2, [r3, #0]
 8009020:	697b      	ldr	r3, [r7, #20]
 8009022:	005b      	lsls	r3, r3, #1
 8009024:	2103      	movs	r1, #3
 8009026:	fa01 f303 	lsl.w	r3, r1, r3
 800902a:	431a      	orrs	r2, r3
 800902c:	687b      	ldr	r3, [r7, #4]
 800902e:	601a      	str	r2, [r3, #0]
 8009030:	697b      	ldr	r3, [r7, #20]
 8009032:	08da      	lsrs	r2, r3, #3
 8009034:	687b      	ldr	r3, [r7, #4]
 8009036:	3208      	adds	r2, #8
 8009038:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 800903c:	697b      	ldr	r3, [r7, #20]
 800903e:	f003 0307 	and.w	r3, r3, #7
 8009042:	009b      	lsls	r3, r3, #2
 8009044:	220f      	movs	r2, #15
 8009046:	fa02 f303 	lsl.w	r3, r2, r3
 800904a:	43db      	mvns	r3, r3
 800904c:	697a      	ldr	r2, [r7, #20]
 800904e:	08d2      	lsrs	r2, r2, #3
 8009050:	4019      	ands	r1, r3
 8009052:	687b      	ldr	r3, [r7, #4]
 8009054:	3208      	adds	r2, #8
 8009056:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 800905a:	687b      	ldr	r3, [r7, #4]
 800905c:	689a      	ldr	r2, [r3, #8]
 800905e:	697b      	ldr	r3, [r7, #20]
 8009060:	005b      	lsls	r3, r3, #1
 8009062:	2103      	movs	r1, #3
 8009064:	fa01 f303 	lsl.w	r3, r1, r3
 8009068:	43db      	mvns	r3, r3
 800906a:	401a      	ands	r2, r3
 800906c:	687b      	ldr	r3, [r7, #4]
 800906e:	609a      	str	r2, [r3, #8]
 8009070:	687b      	ldr	r3, [r7, #4]
 8009072:	685a      	ldr	r2, [r3, #4]
 8009074:	2101      	movs	r1, #1
 8009076:	697b      	ldr	r3, [r7, #20]
 8009078:	fa01 f303 	lsl.w	r3, r1, r3
 800907c:	43db      	mvns	r3, r3
 800907e:	401a      	ands	r2, r3
 8009080:	687b      	ldr	r3, [r7, #4]
 8009082:	605a      	str	r2, [r3, #4]
 8009084:	687b      	ldr	r3, [r7, #4]
 8009086:	68da      	ldr	r2, [r3, #12]
 8009088:	697b      	ldr	r3, [r7, #20]
 800908a:	005b      	lsls	r3, r3, #1
 800908c:	2103      	movs	r1, #3
 800908e:	fa01 f303 	lsl.w	r3, r1, r3
 8009092:	43db      	mvns	r3, r3
 8009094:	401a      	ands	r2, r3
 8009096:	687b      	ldr	r3, [r7, #4]
 8009098:	60da      	str	r2, [r3, #12]
 800909a:	697b      	ldr	r3, [r7, #20]
 800909c:	3301      	adds	r3, #1
 800909e:	617b      	str	r3, [r7, #20]
 80090a0:	683a      	ldr	r2, [r7, #0]
 80090a2:	697b      	ldr	r3, [r7, #20]
 80090a4:	fa22 f303 	lsr.w	r3, r2, r3
 80090a8:	2b00      	cmp	r3, #0
 80090aa:	f47f af49 	bne.w	8008f40 <HAL_GPIO_DeInit+0x10>
 80090ae:	bf00      	nop
 80090b0:	bf00      	nop
 80090b2:	371c      	adds	r7, #28
 80090b4:	46bd      	mov	sp, r7
 80090b6:	bc80      	pop	{r7}
 80090b8:	4770      	bx	lr
 80090ba:	bf00      	nop
 80090bc:	40010000 	.word	0x40010000
 80090c0:	48000400 	.word	0x48000400
 80090c4:	48000800 	.word	0x48000800
 80090c8:	58000800 	.word	0x58000800

080090cc <HAL_GPIO_WritePin>:
 80090cc:	b480      	push	{r7}
 80090ce:	b083      	sub	sp, #12
 80090d0:	af00      	add	r7, sp, #0
 80090d2:	6078      	str	r0, [r7, #4]
 80090d4:	460b      	mov	r3, r1
 80090d6:	807b      	strh	r3, [r7, #2]
 80090d8:	4613      	mov	r3, r2
 80090da:	707b      	strb	r3, [r7, #1]
 80090dc:	787b      	ldrb	r3, [r7, #1]
 80090de:	2b00      	cmp	r3, #0
 80090e0:	d003      	beq.n	80090ea <HAL_GPIO_WritePin+0x1e>
 80090e2:	887a      	ldrh	r2, [r7, #2]
 80090e4:	687b      	ldr	r3, [r7, #4]
 80090e6:	619a      	str	r2, [r3, #24]
 80090e8:	e002      	b.n	80090f0 <HAL_GPIO_WritePin+0x24>
 80090ea:	887a      	ldrh	r2, [r7, #2]
 80090ec:	687b      	ldr	r3, [r7, #4]
 80090ee:	629a      	str	r2, [r3, #40]	; 0x28
 80090f0:	bf00      	nop
 80090f2:	370c      	adds	r7, #12
 80090f4:	46bd      	mov	sp, r7
 80090f6:	bc80      	pop	{r7}
 80090f8:	4770      	bx	lr

080090fa <HAL_GPIO_TogglePin>:
 80090fa:	b480      	push	{r7}
 80090fc:	b085      	sub	sp, #20
 80090fe:	af00      	add	r7, sp, #0
 8009100:	6078      	str	r0, [r7, #4]
 8009102:	460b      	mov	r3, r1
 8009104:	807b      	strh	r3, [r7, #2]
 8009106:	687b      	ldr	r3, [r7, #4]
 8009108:	695b      	ldr	r3, [r3, #20]
 800910a:	60fb      	str	r3, [r7, #12]
 800910c:	887a      	ldrh	r2, [r7, #2]
 800910e:	68fb      	ldr	r3, [r7, #12]
 8009110:	4013      	ands	r3, r2
 8009112:	041a      	lsls	r2, r3, #16
 8009114:	68fb      	ldr	r3, [r7, #12]
 8009116:	43d9      	mvns	r1, r3
 8009118:	887b      	ldrh	r3, [r7, #2]
 800911a:	400b      	ands	r3, r1
 800911c:	431a      	orrs	r2, r3
 800911e:	687b      	ldr	r3, [r7, #4]
 8009120:	619a      	str	r2, [r3, #24]
 8009122:	bf00      	nop
 8009124:	3714      	adds	r7, #20
 8009126:	46bd      	mov	sp, r7
 8009128:	bc80      	pop	{r7}
 800912a:	4770      	bx	lr

0800912c <HAL_GPIO_EXTI_IRQHandler>:
 800912c:	b580      	push	{r7, lr}
 800912e:	b082      	sub	sp, #8
 8009130:	af00      	add	r7, sp, #0
 8009132:	4603      	mov	r3, r0
 8009134:	80fb      	strh	r3, [r7, #6]
 8009136:	4b08      	ldr	r3, [pc, #32]	; (8009158 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 8009138:	68da      	ldr	r2, [r3, #12]
 800913a:	88fb      	ldrh	r3, [r7, #6]
 800913c:	4013      	ands	r3, r2
 800913e:	2b00      	cmp	r3, #0
 8009140:	d006      	beq.n	8009150 <HAL_GPIO_EXTI_IRQHandler+0x24>
 8009142:	4a05      	ldr	r2, [pc, #20]	; (8009158 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 8009144:	88fb      	ldrh	r3, [r7, #6]
 8009146:	60d3      	str	r3, [r2, #12]
 8009148:	88fb      	ldrh	r3, [r7, #6]
 800914a:	4618      	mov	r0, r3
 800914c:	f006 fd8a 	bl	800fc64 <HAL_GPIO_EXTI_Callback>
 8009150:	bf00      	nop
 8009152:	3708      	adds	r7, #8
 8009154:	46bd      	mov	sp, r7
 8009156:	bd80      	pop	{r7, pc}
 8009158:	58000800 	.word	0x58000800

0800915c <HAL_I2C_Init>:
 800915c:	b580      	push	{r7, lr}
 800915e:	b082      	sub	sp, #8
 8009160:	af00      	add	r7, sp, #0
 8009162:	6078      	str	r0, [r7, #4]
 8009164:	687b      	ldr	r3, [r7, #4]
 8009166:	2b00      	cmp	r3, #0
 8009168:	d101      	bne.n	800916e <HAL_I2C_Init+0x12>
 800916a:	2301      	movs	r3, #1
 800916c:	e081      	b.n	8009272 <HAL_I2C_Init+0x116>
 800916e:	687b      	ldr	r3, [r7, #4]
 8009170:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 8009174:	b2db      	uxtb	r3, r3
 8009176:	2b00      	cmp	r3, #0
 8009178:	d106      	bne.n	8009188 <HAL_I2C_Init+0x2c>
 800917a:	687b      	ldr	r3, [r7, #4]
 800917c:	2200      	movs	r2, #0
 800917e:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8009182:	6878      	ldr	r0, [r7, #4]
 8009184:	f7fc f826 	bl	80051d4 <HAL_I2C_MspInit>
 8009188:	687b      	ldr	r3, [r7, #4]
 800918a:	2224      	movs	r2, #36	; 0x24
 800918c:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8009190:	687b      	ldr	r3, [r7, #4]
 8009192:	681b      	ldr	r3, [r3, #0]
 8009194:	681a      	ldr	r2, [r3, #0]
 8009196:	687b      	ldr	r3, [r7, #4]
 8009198:	681b      	ldr	r3, [r3, #0]
 800919a:	f022 0201 	bic.w	r2, r2, #1
 800919e:	601a      	str	r2, [r3, #0]
 80091a0:	687b      	ldr	r3, [r7, #4]
 80091a2:	685a      	ldr	r2, [r3, #4]
 80091a4:	687b      	ldr	r3, [r7, #4]
 80091a6:	681b      	ldr	r3, [r3, #0]
 80091a8:	f022 6270 	bic.w	r2, r2, #251658240	; 0xf000000
 80091ac:	611a      	str	r2, [r3, #16]
 80091ae:	687b      	ldr	r3, [r7, #4]
 80091b0:	681b      	ldr	r3, [r3, #0]
 80091b2:	689a      	ldr	r2, [r3, #8]
 80091b4:	687b      	ldr	r3, [r7, #4]
 80091b6:	681b      	ldr	r3, [r3, #0]
 80091b8:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 80091bc:	609a      	str	r2, [r3, #8]
 80091be:	687b      	ldr	r3, [r7, #4]
 80091c0:	68db      	ldr	r3, [r3, #12]
 80091c2:	2b01      	cmp	r3, #1
 80091c4:	d107      	bne.n	80091d6 <HAL_I2C_Init+0x7a>
 80091c6:	687b      	ldr	r3, [r7, #4]
 80091c8:	689a      	ldr	r2, [r3, #8]
 80091ca:	687b      	ldr	r3, [r7, #4]
 80091cc:	681b      	ldr	r3, [r3, #0]
 80091ce:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 80091d2:	609a      	str	r2, [r3, #8]
 80091d4:	e006      	b.n	80091e4 <HAL_I2C_Init+0x88>
 80091d6:	687b      	ldr	r3, [r7, #4]
 80091d8:	689a      	ldr	r2, [r3, #8]
 80091da:	687b      	ldr	r3, [r7, #4]
 80091dc:	681b      	ldr	r3, [r3, #0]
 80091de:	f442 4204 	orr.w	r2, r2, #33792	; 0x8400
 80091e2:	609a      	str	r2, [r3, #8]
 80091e4:	687b      	ldr	r3, [r7, #4]
 80091e6:	68db      	ldr	r3, [r3, #12]
 80091e8:	2b02      	cmp	r3, #2
 80091ea:	d104      	bne.n	80091f6 <HAL_I2C_Init+0x9a>
 80091ec:	687b      	ldr	r3, [r7, #4]
 80091ee:	681b      	ldr	r3, [r3, #0]
 80091f0:	f44f 6200 	mov.w	r2, #2048	; 0x800
 80091f4:	605a      	str	r2, [r3, #4]
 80091f6:	687b      	ldr	r3, [r7, #4]
 80091f8:	681b      	ldr	r3, [r3, #0]
 80091fa:	685b      	ldr	r3, [r3, #4]
 80091fc:	687a      	ldr	r2, [r7, #4]
 80091fe:	6812      	ldr	r2, [r2, #0]
 8009200:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
 8009204:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8009208:	6053      	str	r3, [r2, #4]
 800920a:	687b      	ldr	r3, [r7, #4]
 800920c:	681b      	ldr	r3, [r3, #0]
 800920e:	68da      	ldr	r2, [r3, #12]
 8009210:	687b      	ldr	r3, [r7, #4]
 8009212:	681b      	ldr	r3, [r3, #0]
 8009214:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 8009218:	60da      	str	r2, [r3, #12]
 800921a:	687b      	ldr	r3, [r7, #4]
 800921c:	691a      	ldr	r2, [r3, #16]
 800921e:	687b      	ldr	r3, [r7, #4]
 8009220:	695b      	ldr	r3, [r3, #20]
 8009222:	ea42 0103 	orr.w	r1, r2, r3
 8009226:	687b      	ldr	r3, [r7, #4]
 8009228:	699b      	ldr	r3, [r3, #24]
 800922a:	021a      	lsls	r2, r3, #8
 800922c:	687b      	ldr	r3, [r7, #4]
 800922e:	681b      	ldr	r3, [r3, #0]
 8009230:	430a      	orrs	r2, r1
 8009232:	60da      	str	r2, [r3, #12]
 8009234:	687b      	ldr	r3, [r7, #4]
 8009236:	69d9      	ldr	r1, [r3, #28]
 8009238:	687b      	ldr	r3, [r7, #4]
 800923a:	6a1a      	ldr	r2, [r3, #32]
 800923c:	687b      	ldr	r3, [r7, #4]
 800923e:	681b      	ldr	r3, [r3, #0]
 8009240:	430a      	orrs	r2, r1
 8009242:	601a      	str	r2, [r3, #0]
 8009244:	687b      	ldr	r3, [r7, #4]
 8009246:	681b      	ldr	r3, [r3, #0]
 8009248:	681a      	ldr	r2, [r3, #0]
 800924a:	687b      	ldr	r3, [r7, #4]
 800924c:	681b      	ldr	r3, [r3, #0]
 800924e:	f042 0201 	orr.w	r2, r2, #1
 8009252:	601a      	str	r2, [r3, #0]
 8009254:	687b      	ldr	r3, [r7, #4]
 8009256:	2200      	movs	r2, #0
 8009258:	645a      	str	r2, [r3, #68]	; 0x44
 800925a:	687b      	ldr	r3, [r7, #4]
 800925c:	2220      	movs	r2, #32
 800925e:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8009262:	687b      	ldr	r3, [r7, #4]
 8009264:	2200      	movs	r2, #0
 8009266:	631a      	str	r2, [r3, #48]	; 0x30
 8009268:	687b      	ldr	r3, [r7, #4]
 800926a:	2200      	movs	r2, #0
 800926c:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8009270:	2300      	movs	r3, #0
 8009272:	4618      	mov	r0, r3
 8009274:	3708      	adds	r7, #8
 8009276:	46bd      	mov	sp, r7
 8009278:	bd80      	pop	{r7, pc}
	...

0800927c <HAL_I2C_Master_Transmit>:
 800927c:	b580      	push	{r7, lr}
 800927e:	b088      	sub	sp, #32
 8009280:	af02      	add	r7, sp, #8
 8009282:	60f8      	str	r0, [r7, #12]
 8009284:	607a      	str	r2, [r7, #4]
 8009286:	461a      	mov	r2, r3
 8009288:	460b      	mov	r3, r1
 800928a:	817b      	strh	r3, [r7, #10]
 800928c:	4613      	mov	r3, r2
 800928e:	813b      	strh	r3, [r7, #8]
 8009290:	68fb      	ldr	r3, [r7, #12]
 8009292:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 8009296:	b2db      	uxtb	r3, r3
 8009298:	2b20      	cmp	r3, #32
 800929a:	f040 80da 	bne.w	8009452 <HAL_I2C_Master_Transmit+0x1d6>
 800929e:	68fb      	ldr	r3, [r7, #12]
 80092a0:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 80092a4:	2b01      	cmp	r3, #1
 80092a6:	d101      	bne.n	80092ac <HAL_I2C_Master_Transmit+0x30>
 80092a8:	2302      	movs	r3, #2
 80092aa:	e0d3      	b.n	8009454 <HAL_I2C_Master_Transmit+0x1d8>
 80092ac:	68fb      	ldr	r3, [r7, #12]
 80092ae:	2201      	movs	r2, #1
 80092b0:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 80092b4:	f7fd f88e 	bl	80063d4 <HAL_GetTick>
 80092b8:	6178      	str	r0, [r7, #20]
 80092ba:	697b      	ldr	r3, [r7, #20]
 80092bc:	9300      	str	r3, [sp, #0]
 80092be:	2319      	movs	r3, #25
 80092c0:	2201      	movs	r2, #1
 80092c2:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 80092c6:	68f8      	ldr	r0, [r7, #12]
 80092c8:	f001 fcd9 	bl	800ac7e <I2C_WaitOnFlagUntilTimeout>
 80092cc:	4603      	mov	r3, r0
 80092ce:	2b00      	cmp	r3, #0
 80092d0:	d001      	beq.n	80092d6 <HAL_I2C_Master_Transmit+0x5a>
 80092d2:	2301      	movs	r3, #1
 80092d4:	e0be      	b.n	8009454 <HAL_I2C_Master_Transmit+0x1d8>
 80092d6:	68fb      	ldr	r3, [r7, #12]
 80092d8:	2221      	movs	r2, #33	; 0x21
 80092da:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 80092de:	68fb      	ldr	r3, [r7, #12]
 80092e0:	2210      	movs	r2, #16
 80092e2:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 80092e6:	68fb      	ldr	r3, [r7, #12]
 80092e8:	2200      	movs	r2, #0
 80092ea:	645a      	str	r2, [r3, #68]	; 0x44
 80092ec:	68fb      	ldr	r3, [r7, #12]
 80092ee:	687a      	ldr	r2, [r7, #4]
 80092f0:	625a      	str	r2, [r3, #36]	; 0x24
 80092f2:	68fb      	ldr	r3, [r7, #12]
 80092f4:	893a      	ldrh	r2, [r7, #8]
 80092f6:	855a      	strh	r2, [r3, #42]	; 0x2a
 80092f8:	68fb      	ldr	r3, [r7, #12]
 80092fa:	2200      	movs	r2, #0
 80092fc:	635a      	str	r2, [r3, #52]	; 0x34
 80092fe:	68fb      	ldr	r3, [r7, #12]
 8009300:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8009302:	b29b      	uxth	r3, r3
 8009304:	2bff      	cmp	r3, #255	; 0xff
 8009306:	d90e      	bls.n	8009326 <HAL_I2C_Master_Transmit+0xaa>
 8009308:	68fb      	ldr	r3, [r7, #12]
 800930a:	22ff      	movs	r2, #255	; 0xff
 800930c:	851a      	strh	r2, [r3, #40]	; 0x28
 800930e:	68fb      	ldr	r3, [r7, #12]
 8009310:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8009312:	b2da      	uxtb	r2, r3
 8009314:	8979      	ldrh	r1, [r7, #10]
 8009316:	4b51      	ldr	r3, [pc, #324]	; (800945c <HAL_I2C_Master_Transmit+0x1e0>)
 8009318:	9300      	str	r3, [sp, #0]
 800931a:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 800931e:	68f8      	ldr	r0, [r7, #12]
 8009320:	f001 fdd0 	bl	800aec4 <I2C_TransferConfig>
 8009324:	e06c      	b.n	8009400 <HAL_I2C_Master_Transmit+0x184>
 8009326:	68fb      	ldr	r3, [r7, #12]
 8009328:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800932a:	b29a      	uxth	r2, r3
 800932c:	68fb      	ldr	r3, [r7, #12]
 800932e:	851a      	strh	r2, [r3, #40]	; 0x28
 8009330:	68fb      	ldr	r3, [r7, #12]
 8009332:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8009334:	b2da      	uxtb	r2, r3
 8009336:	8979      	ldrh	r1, [r7, #10]
 8009338:	4b48      	ldr	r3, [pc, #288]	; (800945c <HAL_I2C_Master_Transmit+0x1e0>)
 800933a:	9300      	str	r3, [sp, #0]
 800933c:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 8009340:	68f8      	ldr	r0, [r7, #12]
 8009342:	f001 fdbf 	bl	800aec4 <I2C_TransferConfig>
 8009346:	e05b      	b.n	8009400 <HAL_I2C_Master_Transmit+0x184>
 8009348:	697a      	ldr	r2, [r7, #20]
 800934a:	6a39      	ldr	r1, [r7, #32]
 800934c:	68f8      	ldr	r0, [r7, #12]
 800934e:	f001 fcd6 	bl	800acfe <I2C_WaitOnTXISFlagUntilTimeout>
 8009352:	4603      	mov	r3, r0
 8009354:	2b00      	cmp	r3, #0
 8009356:	d001      	beq.n	800935c <HAL_I2C_Master_Transmit+0xe0>
 8009358:	2301      	movs	r3, #1
 800935a:	e07b      	b.n	8009454 <HAL_I2C_Master_Transmit+0x1d8>
 800935c:	68fb      	ldr	r3, [r7, #12]
 800935e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009360:	781a      	ldrb	r2, [r3, #0]
 8009362:	68fb      	ldr	r3, [r7, #12]
 8009364:	681b      	ldr	r3, [r3, #0]
 8009366:	629a      	str	r2, [r3, #40]	; 0x28
 8009368:	68fb      	ldr	r3, [r7, #12]
 800936a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800936c:	1c5a      	adds	r2, r3, #1
 800936e:	68fb      	ldr	r3, [r7, #12]
 8009370:	625a      	str	r2, [r3, #36]	; 0x24
 8009372:	68fb      	ldr	r3, [r7, #12]
 8009374:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8009376:	b29b      	uxth	r3, r3
 8009378:	3b01      	subs	r3, #1
 800937a:	b29a      	uxth	r2, r3
 800937c:	68fb      	ldr	r3, [r7, #12]
 800937e:	855a      	strh	r2, [r3, #42]	; 0x2a
 8009380:	68fb      	ldr	r3, [r7, #12]
 8009382:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8009384:	3b01      	subs	r3, #1
 8009386:	b29a      	uxth	r2, r3
 8009388:	68fb      	ldr	r3, [r7, #12]
 800938a:	851a      	strh	r2, [r3, #40]	; 0x28
 800938c:	68fb      	ldr	r3, [r7, #12]
 800938e:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8009390:	b29b      	uxth	r3, r3
 8009392:	2b00      	cmp	r3, #0
 8009394:	d034      	beq.n	8009400 <HAL_I2C_Master_Transmit+0x184>
 8009396:	68fb      	ldr	r3, [r7, #12]
 8009398:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 800939a:	2b00      	cmp	r3, #0
 800939c:	d130      	bne.n	8009400 <HAL_I2C_Master_Transmit+0x184>
 800939e:	697b      	ldr	r3, [r7, #20]
 80093a0:	9300      	str	r3, [sp, #0]
 80093a2:	6a3b      	ldr	r3, [r7, #32]
 80093a4:	2200      	movs	r2, #0
 80093a6:	2180      	movs	r1, #128	; 0x80
 80093a8:	68f8      	ldr	r0, [r7, #12]
 80093aa:	f001 fc68 	bl	800ac7e <I2C_WaitOnFlagUntilTimeout>
 80093ae:	4603      	mov	r3, r0
 80093b0:	2b00      	cmp	r3, #0
 80093b2:	d001      	beq.n	80093b8 <HAL_I2C_Master_Transmit+0x13c>
 80093b4:	2301      	movs	r3, #1
 80093b6:	e04d      	b.n	8009454 <HAL_I2C_Master_Transmit+0x1d8>
 80093b8:	68fb      	ldr	r3, [r7, #12]
 80093ba:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80093bc:	b29b      	uxth	r3, r3
 80093be:	2bff      	cmp	r3, #255	; 0xff
 80093c0:	d90e      	bls.n	80093e0 <HAL_I2C_Master_Transmit+0x164>
 80093c2:	68fb      	ldr	r3, [r7, #12]
 80093c4:	22ff      	movs	r2, #255	; 0xff
 80093c6:	851a      	strh	r2, [r3, #40]	; 0x28
 80093c8:	68fb      	ldr	r3, [r7, #12]
 80093ca:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80093cc:	b2da      	uxtb	r2, r3
 80093ce:	8979      	ldrh	r1, [r7, #10]
 80093d0:	2300      	movs	r3, #0
 80093d2:	9300      	str	r3, [sp, #0]
 80093d4:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 80093d8:	68f8      	ldr	r0, [r7, #12]
 80093da:	f001 fd73 	bl	800aec4 <I2C_TransferConfig>
 80093de:	e00f      	b.n	8009400 <HAL_I2C_Master_Transmit+0x184>
 80093e0:	68fb      	ldr	r3, [r7, #12]
 80093e2:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80093e4:	b29a      	uxth	r2, r3
 80093e6:	68fb      	ldr	r3, [r7, #12]
 80093e8:	851a      	strh	r2, [r3, #40]	; 0x28
 80093ea:	68fb      	ldr	r3, [r7, #12]
 80093ec:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80093ee:	b2da      	uxtb	r2, r3
 80093f0:	8979      	ldrh	r1, [r7, #10]
 80093f2:	2300      	movs	r3, #0
 80093f4:	9300      	str	r3, [sp, #0]
 80093f6:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 80093fa:	68f8      	ldr	r0, [r7, #12]
 80093fc:	f001 fd62 	bl	800aec4 <I2C_TransferConfig>
 8009400:	68fb      	ldr	r3, [r7, #12]
 8009402:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8009404:	b29b      	uxth	r3, r3
 8009406:	2b00      	cmp	r3, #0
 8009408:	d19e      	bne.n	8009348 <HAL_I2C_Master_Transmit+0xcc>
 800940a:	697a      	ldr	r2, [r7, #20]
 800940c:	6a39      	ldr	r1, [r7, #32]
 800940e:	68f8      	ldr	r0, [r7, #12]
 8009410:	f001 fcb5 	bl	800ad7e <I2C_WaitOnSTOPFlagUntilTimeout>
 8009414:	4603      	mov	r3, r0
 8009416:	2b00      	cmp	r3, #0
 8009418:	d001      	beq.n	800941e <HAL_I2C_Master_Transmit+0x1a2>
 800941a:	2301      	movs	r3, #1
 800941c:	e01a      	b.n	8009454 <HAL_I2C_Master_Transmit+0x1d8>
 800941e:	68fb      	ldr	r3, [r7, #12]
 8009420:	681b      	ldr	r3, [r3, #0]
 8009422:	2220      	movs	r2, #32
 8009424:	61da      	str	r2, [r3, #28]
 8009426:	68fb      	ldr	r3, [r7, #12]
 8009428:	681b      	ldr	r3, [r3, #0]
 800942a:	6859      	ldr	r1, [r3, #4]
 800942c:	68fb      	ldr	r3, [r7, #12]
 800942e:	681a      	ldr	r2, [r3, #0]
 8009430:	4b0b      	ldr	r3, [pc, #44]	; (8009460 <HAL_I2C_Master_Transmit+0x1e4>)
 8009432:	400b      	ands	r3, r1
 8009434:	6053      	str	r3, [r2, #4]
 8009436:	68fb      	ldr	r3, [r7, #12]
 8009438:	2220      	movs	r2, #32
 800943a:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800943e:	68fb      	ldr	r3, [r7, #12]
 8009440:	2200      	movs	r2, #0
 8009442:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8009446:	68fb      	ldr	r3, [r7, #12]
 8009448:	2200      	movs	r2, #0
 800944a:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800944e:	2300      	movs	r3, #0
 8009450:	e000      	b.n	8009454 <HAL_I2C_Master_Transmit+0x1d8>
 8009452:	2302      	movs	r3, #2
 8009454:	4618      	mov	r0, r3
 8009456:	3718      	adds	r7, #24
 8009458:	46bd      	mov	sp, r7
 800945a:	bd80      	pop	{r7, pc}
 800945c:	80002000 	.word	0x80002000
 8009460:	fe00e800 	.word	0xfe00e800

08009464 <HAL_I2C_Master_Seq_Transmit_DMA>:
 8009464:	b580      	push	{r7, lr}
 8009466:	b08a      	sub	sp, #40	; 0x28
 8009468:	af02      	add	r7, sp, #8
 800946a:	60f8      	str	r0, [r7, #12]
 800946c:	607a      	str	r2, [r7, #4]
 800946e:	461a      	mov	r2, r3
 8009470:	460b      	mov	r3, r1
 8009472:	817b      	strh	r3, [r7, #10]
 8009474:	4613      	mov	r3, r2
 8009476:	813b      	strh	r3, [r7, #8]
 8009478:	4b77      	ldr	r3, [pc, #476]	; (8009658 <HAL_I2C_Master_Seq_Transmit_DMA+0x1f4>)
 800947a:	61bb      	str	r3, [r7, #24]
 800947c:	68fb      	ldr	r3, [r7, #12]
 800947e:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 8009482:	b2db      	uxtb	r3, r3
 8009484:	2b20      	cmp	r3, #32
 8009486:	f040 80e1 	bne.w	800964c <HAL_I2C_Master_Seq_Transmit_DMA+0x1e8>
 800948a:	68fb      	ldr	r3, [r7, #12]
 800948c:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 8009490:	2b01      	cmp	r3, #1
 8009492:	d101      	bne.n	8009498 <HAL_I2C_Master_Seq_Transmit_DMA+0x34>
 8009494:	2302      	movs	r3, #2
 8009496:	e0da      	b.n	800964e <HAL_I2C_Master_Seq_Transmit_DMA+0x1ea>
 8009498:	68fb      	ldr	r3, [r7, #12]
 800949a:	2201      	movs	r2, #1
 800949c:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 80094a0:	68fb      	ldr	r3, [r7, #12]
 80094a2:	2221      	movs	r2, #33	; 0x21
 80094a4:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 80094a8:	68fb      	ldr	r3, [r7, #12]
 80094aa:	2210      	movs	r2, #16
 80094ac:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 80094b0:	68fb      	ldr	r3, [r7, #12]
 80094b2:	2200      	movs	r2, #0
 80094b4:	645a      	str	r2, [r3, #68]	; 0x44
 80094b6:	68fb      	ldr	r3, [r7, #12]
 80094b8:	687a      	ldr	r2, [r7, #4]
 80094ba:	625a      	str	r2, [r3, #36]	; 0x24
 80094bc:	68fb      	ldr	r3, [r7, #12]
 80094be:	893a      	ldrh	r2, [r7, #8]
 80094c0:	855a      	strh	r2, [r3, #42]	; 0x2a
 80094c2:	68fb      	ldr	r3, [r7, #12]
 80094c4:	6aba      	ldr	r2, [r7, #40]	; 0x28
 80094c6:	62da      	str	r2, [r3, #44]	; 0x2c
 80094c8:	68fb      	ldr	r3, [r7, #12]
 80094ca:	4a64      	ldr	r2, [pc, #400]	; (800965c <HAL_I2C_Master_Seq_Transmit_DMA+0x1f8>)
 80094cc:	635a      	str	r2, [r3, #52]	; 0x34
 80094ce:	68fb      	ldr	r3, [r7, #12]
 80094d0:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80094d2:	b29b      	uxth	r3, r3
 80094d4:	2bff      	cmp	r3, #255	; 0xff
 80094d6:	d906      	bls.n	80094e6 <HAL_I2C_Master_Seq_Transmit_DMA+0x82>
 80094d8:	68fb      	ldr	r3, [r7, #12]
 80094da:	22ff      	movs	r2, #255	; 0xff
 80094dc:	851a      	strh	r2, [r3, #40]	; 0x28
 80094de:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 80094e2:	61fb      	str	r3, [r7, #28]
 80094e4:	e007      	b.n	80094f6 <HAL_I2C_Master_Seq_Transmit_DMA+0x92>
 80094e6:	68fb      	ldr	r3, [r7, #12]
 80094e8:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80094ea:	b29a      	uxth	r2, r3
 80094ec:	68fb      	ldr	r3, [r7, #12]
 80094ee:	851a      	strh	r2, [r3, #40]	; 0x28
 80094f0:	68fb      	ldr	r3, [r7, #12]
 80094f2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80094f4:	61fb      	str	r3, [r7, #28]
 80094f6:	68fb      	ldr	r3, [r7, #12]
 80094f8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80094fa:	2b11      	cmp	r3, #17
 80094fc:	d10e      	bne.n	800951c <HAL_I2C_Master_Seq_Transmit_DMA+0xb8>
 80094fe:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8009500:	2baa      	cmp	r3, #170	; 0xaa
 8009502:	d003      	beq.n	800950c <HAL_I2C_Master_Seq_Transmit_DMA+0xa8>
 8009504:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8009506:	f5b3 4f2a 	cmp.w	r3, #43520	; 0xaa00
 800950a:	d101      	bne.n	8009510 <HAL_I2C_Master_Seq_Transmit_DMA+0xac>
 800950c:	2301      	movs	r3, #1
 800950e:	e000      	b.n	8009512 <HAL_I2C_Master_Seq_Transmit_DMA+0xae>
 8009510:	2300      	movs	r3, #0
 8009512:	2b00      	cmp	r3, #0
 8009514:	d102      	bne.n	800951c <HAL_I2C_Master_Seq_Transmit_DMA+0xb8>
 8009516:	2300      	movs	r3, #0
 8009518:	61bb      	str	r3, [r7, #24]
 800951a:	e00a      	b.n	8009532 <HAL_I2C_Master_Seq_Transmit_DMA+0xce>
 800951c:	68f8      	ldr	r0, [r7, #12]
 800951e:	f001 fdbc 	bl	800b09a <I2C_ConvertOtherXferOptions>
 8009522:	68fb      	ldr	r3, [r7, #12]
 8009524:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8009526:	b29b      	uxth	r3, r3
 8009528:	2bff      	cmp	r3, #255	; 0xff
 800952a:	d802      	bhi.n	8009532 <HAL_I2C_Master_Seq_Transmit_DMA+0xce>
 800952c:	68fb      	ldr	r3, [r7, #12]
 800952e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009530:	61fb      	str	r3, [r7, #28]
 8009532:	68fb      	ldr	r3, [r7, #12]
 8009534:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8009536:	2b00      	cmp	r3, #0
 8009538:	d070      	beq.n	800961c <HAL_I2C_Master_Seq_Transmit_DMA+0x1b8>
 800953a:	68fb      	ldr	r3, [r7, #12]
 800953c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800953e:	2b00      	cmp	r3, #0
 8009540:	d020      	beq.n	8009584 <HAL_I2C_Master_Seq_Transmit_DMA+0x120>
 8009542:	68fb      	ldr	r3, [r7, #12]
 8009544:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8009546:	4a46      	ldr	r2, [pc, #280]	; (8009660 <HAL_I2C_Master_Seq_Transmit_DMA+0x1fc>)
 8009548:	62da      	str	r2, [r3, #44]	; 0x2c
 800954a:	68fb      	ldr	r3, [r7, #12]
 800954c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800954e:	4a45      	ldr	r2, [pc, #276]	; (8009664 <HAL_I2C_Master_Seq_Transmit_DMA+0x200>)
 8009550:	635a      	str	r2, [r3, #52]	; 0x34
 8009552:	68fb      	ldr	r3, [r7, #12]
 8009554:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8009556:	2200      	movs	r2, #0
 8009558:	631a      	str	r2, [r3, #48]	; 0x30
 800955a:	68fb      	ldr	r3, [r7, #12]
 800955c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800955e:	2200      	movs	r2, #0
 8009560:	639a      	str	r2, [r3, #56]	; 0x38
 8009562:	68fb      	ldr	r3, [r7, #12]
 8009564:	6b98      	ldr	r0, [r3, #56]	; 0x38
 8009566:	6879      	ldr	r1, [r7, #4]
 8009568:	68fb      	ldr	r3, [r7, #12]
 800956a:	681b      	ldr	r3, [r3, #0]
 800956c:	3328      	adds	r3, #40	; 0x28
 800956e:	461a      	mov	r2, r3
 8009570:	68fb      	ldr	r3, [r7, #12]
 8009572:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8009574:	f7ff f868 	bl	8008648 <HAL_DMA_Start_IT>
 8009578:	4603      	mov	r3, r0
 800957a:	75fb      	strb	r3, [r7, #23]
 800957c:	7dfb      	ldrb	r3, [r7, #23]
 800957e:	2b00      	cmp	r3, #0
 8009580:	d138      	bne.n	80095f4 <HAL_I2C_Master_Seq_Transmit_DMA+0x190>
 8009582:	e013      	b.n	80095ac <HAL_I2C_Master_Seq_Transmit_DMA+0x148>
 8009584:	68fb      	ldr	r3, [r7, #12]
 8009586:	2220      	movs	r2, #32
 8009588:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800958c:	68fb      	ldr	r3, [r7, #12]
 800958e:	2200      	movs	r2, #0
 8009590:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8009594:	68fb      	ldr	r3, [r7, #12]
 8009596:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8009598:	f043 0280 	orr.w	r2, r3, #128	; 0x80
 800959c:	68fb      	ldr	r3, [r7, #12]
 800959e:	645a      	str	r2, [r3, #68]	; 0x44
 80095a0:	68fb      	ldr	r3, [r7, #12]
 80095a2:	2200      	movs	r2, #0
 80095a4:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 80095a8:	2301      	movs	r3, #1
 80095aa:	e050      	b.n	800964e <HAL_I2C_Master_Seq_Transmit_DMA+0x1ea>
 80095ac:	68fb      	ldr	r3, [r7, #12]
 80095ae:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80095b0:	b2da      	uxtb	r2, r3
 80095b2:	8979      	ldrh	r1, [r7, #10]
 80095b4:	69bb      	ldr	r3, [r7, #24]
 80095b6:	9300      	str	r3, [sp, #0]
 80095b8:	69fb      	ldr	r3, [r7, #28]
 80095ba:	68f8      	ldr	r0, [r7, #12]
 80095bc:	f001 fc82 	bl	800aec4 <I2C_TransferConfig>
 80095c0:	68fb      	ldr	r3, [r7, #12]
 80095c2:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80095c4:	b29a      	uxth	r2, r3
 80095c6:	68fb      	ldr	r3, [r7, #12]
 80095c8:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80095ca:	1ad3      	subs	r3, r2, r3
 80095cc:	b29a      	uxth	r2, r3
 80095ce:	68fb      	ldr	r3, [r7, #12]
 80095d0:	855a      	strh	r2, [r3, #42]	; 0x2a
 80095d2:	68fb      	ldr	r3, [r7, #12]
 80095d4:	2200      	movs	r2, #0
 80095d6:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 80095da:	2110      	movs	r1, #16
 80095dc:	68f8      	ldr	r0, [r7, #12]
 80095de:	f001 fc9d 	bl	800af1c <I2C_Enable_IRQ>
 80095e2:	68fb      	ldr	r3, [r7, #12]
 80095e4:	681b      	ldr	r3, [r3, #0]
 80095e6:	681a      	ldr	r2, [r3, #0]
 80095e8:	68fb      	ldr	r3, [r7, #12]
 80095ea:	681b      	ldr	r3, [r3, #0]
 80095ec:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 80095f0:	601a      	str	r2, [r3, #0]
 80095f2:	e029      	b.n	8009648 <HAL_I2C_Master_Seq_Transmit_DMA+0x1e4>
 80095f4:	68fb      	ldr	r3, [r7, #12]
 80095f6:	2220      	movs	r2, #32
 80095f8:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 80095fc:	68fb      	ldr	r3, [r7, #12]
 80095fe:	2200      	movs	r2, #0
 8009600:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8009604:	68fb      	ldr	r3, [r7, #12]
 8009606:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8009608:	f043 0210 	orr.w	r2, r3, #16
 800960c:	68fb      	ldr	r3, [r7, #12]
 800960e:	645a      	str	r2, [r3, #68]	; 0x44
 8009610:	68fb      	ldr	r3, [r7, #12]
 8009612:	2200      	movs	r2, #0
 8009614:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8009618:	2301      	movs	r3, #1
 800961a:	e018      	b.n	800964e <HAL_I2C_Master_Seq_Transmit_DMA+0x1ea>
 800961c:	68fb      	ldr	r3, [r7, #12]
 800961e:	4a12      	ldr	r2, [pc, #72]	; (8009668 <HAL_I2C_Master_Seq_Transmit_DMA+0x204>)
 8009620:	635a      	str	r2, [r3, #52]	; 0x34
 8009622:	68fb      	ldr	r3, [r7, #12]
 8009624:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8009626:	b2da      	uxtb	r2, r3
 8009628:	8979      	ldrh	r1, [r7, #10]
 800962a:	4b0b      	ldr	r3, [pc, #44]	; (8009658 <HAL_I2C_Master_Seq_Transmit_DMA+0x1f4>)
 800962c:	9300      	str	r3, [sp, #0]
 800962e:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 8009632:	68f8      	ldr	r0, [r7, #12]
 8009634:	f001 fc46 	bl	800aec4 <I2C_TransferConfig>
 8009638:	68fb      	ldr	r3, [r7, #12]
 800963a:	2200      	movs	r2, #0
 800963c:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8009640:	2101      	movs	r1, #1
 8009642:	68f8      	ldr	r0, [r7, #12]
 8009644:	f001 fc6a 	bl	800af1c <I2C_Enable_IRQ>
 8009648:	2300      	movs	r3, #0
 800964a:	e000      	b.n	800964e <HAL_I2C_Master_Seq_Transmit_DMA+0x1ea>
 800964c:	2302      	movs	r3, #2
 800964e:	4618      	mov	r0, r3
 8009650:	3720      	adds	r7, #32
 8009652:	46bd      	mov	sp, r7
 8009654:	bd80      	pop	{r7, pc}
 8009656:	bf00      	nop
 8009658:	80002000 	.word	0x80002000
 800965c:	08009e7d 	.word	0x08009e7d
 8009660:	0800aae9 	.word	0x0800aae9
 8009664:	0800ac15 	.word	0x0800ac15
 8009668:	08009a27 	.word	0x08009a27

0800966c <HAL_I2C_Master_Seq_Receive_DMA>:
 800966c:	b580      	push	{r7, lr}
 800966e:	b08a      	sub	sp, #40	; 0x28
 8009670:	af02      	add	r7, sp, #8
 8009672:	60f8      	str	r0, [r7, #12]
 8009674:	607a      	str	r2, [r7, #4]
 8009676:	461a      	mov	r2, r3
 8009678:	460b      	mov	r3, r1
 800967a:	817b      	strh	r3, [r7, #10]
 800967c:	4613      	mov	r3, r2
 800967e:	813b      	strh	r3, [r7, #8]
 8009680:	4b77      	ldr	r3, [pc, #476]	; (8009860 <HAL_I2C_Master_Seq_Receive_DMA+0x1f4>)
 8009682:	61bb      	str	r3, [r7, #24]
 8009684:	68fb      	ldr	r3, [r7, #12]
 8009686:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 800968a:	b2db      	uxtb	r3, r3
 800968c:	2b20      	cmp	r3, #32
 800968e:	f040 80e1 	bne.w	8009854 <HAL_I2C_Master_Seq_Receive_DMA+0x1e8>
 8009692:	68fb      	ldr	r3, [r7, #12]
 8009694:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 8009698:	2b01      	cmp	r3, #1
 800969a:	d101      	bne.n	80096a0 <HAL_I2C_Master_Seq_Receive_DMA+0x34>
 800969c:	2302      	movs	r3, #2
 800969e:	e0da      	b.n	8009856 <HAL_I2C_Master_Seq_Receive_DMA+0x1ea>
 80096a0:	68fb      	ldr	r3, [r7, #12]
 80096a2:	2201      	movs	r2, #1
 80096a4:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 80096a8:	68fb      	ldr	r3, [r7, #12]
 80096aa:	2222      	movs	r2, #34	; 0x22
 80096ac:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 80096b0:	68fb      	ldr	r3, [r7, #12]
 80096b2:	2210      	movs	r2, #16
 80096b4:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 80096b8:	68fb      	ldr	r3, [r7, #12]
 80096ba:	2200      	movs	r2, #0
 80096bc:	645a      	str	r2, [r3, #68]	; 0x44
 80096be:	68fb      	ldr	r3, [r7, #12]
 80096c0:	687a      	ldr	r2, [r7, #4]
 80096c2:	625a      	str	r2, [r3, #36]	; 0x24
 80096c4:	68fb      	ldr	r3, [r7, #12]
 80096c6:	893a      	ldrh	r2, [r7, #8]
 80096c8:	855a      	strh	r2, [r3, #42]	; 0x2a
 80096ca:	68fb      	ldr	r3, [r7, #12]
 80096cc:	6aba      	ldr	r2, [r7, #40]	; 0x28
 80096ce:	62da      	str	r2, [r3, #44]	; 0x2c
 80096d0:	68fb      	ldr	r3, [r7, #12]
 80096d2:	4a64      	ldr	r2, [pc, #400]	; (8009864 <HAL_I2C_Master_Seq_Receive_DMA+0x1f8>)
 80096d4:	635a      	str	r2, [r3, #52]	; 0x34
 80096d6:	68fb      	ldr	r3, [r7, #12]
 80096d8:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80096da:	b29b      	uxth	r3, r3
 80096dc:	2bff      	cmp	r3, #255	; 0xff
 80096de:	d906      	bls.n	80096ee <HAL_I2C_Master_Seq_Receive_DMA+0x82>
 80096e0:	68fb      	ldr	r3, [r7, #12]
 80096e2:	22ff      	movs	r2, #255	; 0xff
 80096e4:	851a      	strh	r2, [r3, #40]	; 0x28
 80096e6:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 80096ea:	61fb      	str	r3, [r7, #28]
 80096ec:	e007      	b.n	80096fe <HAL_I2C_Master_Seq_Receive_DMA+0x92>
 80096ee:	68fb      	ldr	r3, [r7, #12]
 80096f0:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80096f2:	b29a      	uxth	r2, r3
 80096f4:	68fb      	ldr	r3, [r7, #12]
 80096f6:	851a      	strh	r2, [r3, #40]	; 0x28
 80096f8:	68fb      	ldr	r3, [r7, #12]
 80096fa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80096fc:	61fb      	str	r3, [r7, #28]
 80096fe:	68fb      	ldr	r3, [r7, #12]
 8009700:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8009702:	2b12      	cmp	r3, #18
 8009704:	d10e      	bne.n	8009724 <HAL_I2C_Master_Seq_Receive_DMA+0xb8>
 8009706:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8009708:	2baa      	cmp	r3, #170	; 0xaa
 800970a:	d003      	beq.n	8009714 <HAL_I2C_Master_Seq_Receive_DMA+0xa8>
 800970c:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800970e:	f5b3 4f2a 	cmp.w	r3, #43520	; 0xaa00
 8009712:	d101      	bne.n	8009718 <HAL_I2C_Master_Seq_Receive_DMA+0xac>
 8009714:	2301      	movs	r3, #1
 8009716:	e000      	b.n	800971a <HAL_I2C_Master_Seq_Receive_DMA+0xae>
 8009718:	2300      	movs	r3, #0
 800971a:	2b00      	cmp	r3, #0
 800971c:	d102      	bne.n	8009724 <HAL_I2C_Master_Seq_Receive_DMA+0xb8>
 800971e:	2300      	movs	r3, #0
 8009720:	61bb      	str	r3, [r7, #24]
 8009722:	e00a      	b.n	800973a <HAL_I2C_Master_Seq_Receive_DMA+0xce>
 8009724:	68f8      	ldr	r0, [r7, #12]
 8009726:	f001 fcb8 	bl	800b09a <I2C_ConvertOtherXferOptions>
 800972a:	68fb      	ldr	r3, [r7, #12]
 800972c:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800972e:	b29b      	uxth	r3, r3
 8009730:	2bff      	cmp	r3, #255	; 0xff
 8009732:	d802      	bhi.n	800973a <HAL_I2C_Master_Seq_Receive_DMA+0xce>
 8009734:	68fb      	ldr	r3, [r7, #12]
 8009736:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009738:	61fb      	str	r3, [r7, #28]
 800973a:	68fb      	ldr	r3, [r7, #12]
 800973c:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 800973e:	2b00      	cmp	r3, #0
 8009740:	d070      	beq.n	8009824 <HAL_I2C_Master_Seq_Receive_DMA+0x1b8>
 8009742:	68fb      	ldr	r3, [r7, #12]
 8009744:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8009746:	2b00      	cmp	r3, #0
 8009748:	d020      	beq.n	800978c <HAL_I2C_Master_Seq_Receive_DMA+0x120>
 800974a:	68fb      	ldr	r3, [r7, #12]
 800974c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800974e:	4a46      	ldr	r2, [pc, #280]	; (8009868 <HAL_I2C_Master_Seq_Receive_DMA+0x1fc>)
 8009750:	62da      	str	r2, [r3, #44]	; 0x2c
 8009752:	68fb      	ldr	r3, [r7, #12]
 8009754:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8009756:	4a45      	ldr	r2, [pc, #276]	; (800986c <HAL_I2C_Master_Seq_Receive_DMA+0x200>)
 8009758:	635a      	str	r2, [r3, #52]	; 0x34
 800975a:	68fb      	ldr	r3, [r7, #12]
 800975c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800975e:	2200      	movs	r2, #0
 8009760:	631a      	str	r2, [r3, #48]	; 0x30
 8009762:	68fb      	ldr	r3, [r7, #12]
 8009764:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8009766:	2200      	movs	r2, #0
 8009768:	639a      	str	r2, [r3, #56]	; 0x38
 800976a:	68fb      	ldr	r3, [r7, #12]
 800976c:	6bd8      	ldr	r0, [r3, #60]	; 0x3c
 800976e:	68fb      	ldr	r3, [r7, #12]
 8009770:	681b      	ldr	r3, [r3, #0]
 8009772:	3324      	adds	r3, #36	; 0x24
 8009774:	4619      	mov	r1, r3
 8009776:	687a      	ldr	r2, [r7, #4]
 8009778:	68fb      	ldr	r3, [r7, #12]
 800977a:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 800977c:	f7fe ff64 	bl	8008648 <HAL_DMA_Start_IT>
 8009780:	4603      	mov	r3, r0
 8009782:	75fb      	strb	r3, [r7, #23]
 8009784:	7dfb      	ldrb	r3, [r7, #23]
 8009786:	2b00      	cmp	r3, #0
 8009788:	d138      	bne.n	80097fc <HAL_I2C_Master_Seq_Receive_DMA+0x190>
 800978a:	e013      	b.n	80097b4 <HAL_I2C_Master_Seq_Receive_DMA+0x148>
 800978c:	68fb      	ldr	r3, [r7, #12]
 800978e:	2220      	movs	r2, #32
 8009790:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8009794:	68fb      	ldr	r3, [r7, #12]
 8009796:	2200      	movs	r2, #0
 8009798:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 800979c:	68fb      	ldr	r3, [r7, #12]
 800979e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80097a0:	f043 0280 	orr.w	r2, r3, #128	; 0x80
 80097a4:	68fb      	ldr	r3, [r7, #12]
 80097a6:	645a      	str	r2, [r3, #68]	; 0x44
 80097a8:	68fb      	ldr	r3, [r7, #12]
 80097aa:	2200      	movs	r2, #0
 80097ac:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 80097b0:	2301      	movs	r3, #1
 80097b2:	e050      	b.n	8009856 <HAL_I2C_Master_Seq_Receive_DMA+0x1ea>
 80097b4:	68fb      	ldr	r3, [r7, #12]
 80097b6:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80097b8:	b2da      	uxtb	r2, r3
 80097ba:	8979      	ldrh	r1, [r7, #10]
 80097bc:	69bb      	ldr	r3, [r7, #24]
 80097be:	9300      	str	r3, [sp, #0]
 80097c0:	69fb      	ldr	r3, [r7, #28]
 80097c2:	68f8      	ldr	r0, [r7, #12]
 80097c4:	f001 fb7e 	bl	800aec4 <I2C_TransferConfig>
 80097c8:	68fb      	ldr	r3, [r7, #12]
 80097ca:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80097cc:	b29a      	uxth	r2, r3
 80097ce:	68fb      	ldr	r3, [r7, #12]
 80097d0:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80097d2:	1ad3      	subs	r3, r2, r3
 80097d4:	b29a      	uxth	r2, r3
 80097d6:	68fb      	ldr	r3, [r7, #12]
 80097d8:	855a      	strh	r2, [r3, #42]	; 0x2a
 80097da:	68fb      	ldr	r3, [r7, #12]
 80097dc:	2200      	movs	r2, #0
 80097de:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 80097e2:	2110      	movs	r1, #16
 80097e4:	68f8      	ldr	r0, [r7, #12]
 80097e6:	f001 fb99 	bl	800af1c <I2C_Enable_IRQ>
 80097ea:	68fb      	ldr	r3, [r7, #12]
 80097ec:	681b      	ldr	r3, [r3, #0]
 80097ee:	681a      	ldr	r2, [r3, #0]
 80097f0:	68fb      	ldr	r3, [r7, #12]
 80097f2:	681b      	ldr	r3, [r3, #0]
 80097f4:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 80097f8:	601a      	str	r2, [r3, #0]
 80097fa:	e029      	b.n	8009850 <HAL_I2C_Master_Seq_Receive_DMA+0x1e4>
 80097fc:	68fb      	ldr	r3, [r7, #12]
 80097fe:	2220      	movs	r2, #32
 8009800:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8009804:	68fb      	ldr	r3, [r7, #12]
 8009806:	2200      	movs	r2, #0
 8009808:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 800980c:	68fb      	ldr	r3, [r7, #12]
 800980e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8009810:	f043 0210 	orr.w	r2, r3, #16
 8009814:	68fb      	ldr	r3, [r7, #12]
 8009816:	645a      	str	r2, [r3, #68]	; 0x44
 8009818:	68fb      	ldr	r3, [r7, #12]
 800981a:	2200      	movs	r2, #0
 800981c:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8009820:	2301      	movs	r3, #1
 8009822:	e018      	b.n	8009856 <HAL_I2C_Master_Seq_Receive_DMA+0x1ea>
 8009824:	68fb      	ldr	r3, [r7, #12]
 8009826:	4a12      	ldr	r2, [pc, #72]	; (8009870 <HAL_I2C_Master_Seq_Receive_DMA+0x204>)
 8009828:	635a      	str	r2, [r3, #52]	; 0x34
 800982a:	68fb      	ldr	r3, [r7, #12]
 800982c:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 800982e:	b2da      	uxtb	r2, r3
 8009830:	8979      	ldrh	r1, [r7, #10]
 8009832:	4b0b      	ldr	r3, [pc, #44]	; (8009860 <HAL_I2C_Master_Seq_Receive_DMA+0x1f4>)
 8009834:	9300      	str	r3, [sp, #0]
 8009836:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 800983a:	68f8      	ldr	r0, [r7, #12]
 800983c:	f001 fb42 	bl	800aec4 <I2C_TransferConfig>
 8009840:	68fb      	ldr	r3, [r7, #12]
 8009842:	2200      	movs	r2, #0
 8009844:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8009848:	2101      	movs	r1, #1
 800984a:	68f8      	ldr	r0, [r7, #12]
 800984c:	f001 fb66 	bl	800af1c <I2C_Enable_IRQ>
 8009850:	2300      	movs	r3, #0
 8009852:	e000      	b.n	8009856 <HAL_I2C_Master_Seq_Receive_DMA+0x1ea>
 8009854:	2302      	movs	r3, #2
 8009856:	4618      	mov	r0, r3
 8009858:	3720      	adds	r7, #32
 800985a:	46bd      	mov	sp, r7
 800985c:	bd80      	pop	{r7, pc}
 800985e:	bf00      	nop
 8009860:	80002400 	.word	0x80002400
 8009864:	08009e7d 	.word	0x08009e7d
 8009868:	0800ab7f 	.word	0x0800ab7f
 800986c:	0800ac15 	.word	0x0800ac15
 8009870:	08009a27 	.word	0x08009a27

08009874 <HAL_I2C_EV_IRQHandler>:
 8009874:	b580      	push	{r7, lr}
 8009876:	b084      	sub	sp, #16
 8009878:	af00      	add	r7, sp, #0
 800987a:	6078      	str	r0, [r7, #4]
 800987c:	687b      	ldr	r3, [r7, #4]
 800987e:	681b      	ldr	r3, [r3, #0]
 8009880:	699b      	ldr	r3, [r3, #24]
 8009882:	60fb      	str	r3, [r7, #12]
 8009884:	687b      	ldr	r3, [r7, #4]
 8009886:	681b      	ldr	r3, [r3, #0]
 8009888:	681b      	ldr	r3, [r3, #0]
 800988a:	60bb      	str	r3, [r7, #8]
 800988c:	687b      	ldr	r3, [r7, #4]
 800988e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8009890:	2b00      	cmp	r3, #0
 8009892:	d005      	beq.n	80098a0 <HAL_I2C_EV_IRQHandler+0x2c>
 8009894:	687b      	ldr	r3, [r7, #4]
 8009896:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8009898:	68ba      	ldr	r2, [r7, #8]
 800989a:	68f9      	ldr	r1, [r7, #12]
 800989c:	6878      	ldr	r0, [r7, #4]
 800989e:	4798      	blx	r3
 80098a0:	bf00      	nop
 80098a2:	3710      	adds	r7, #16
 80098a4:	46bd      	mov	sp, r7
 80098a6:	bd80      	pop	{r7, pc}

080098a8 <HAL_I2C_ER_IRQHandler>:
 80098a8:	b580      	push	{r7, lr}
 80098aa:	b086      	sub	sp, #24
 80098ac:	af00      	add	r7, sp, #0
 80098ae:	6078      	str	r0, [r7, #4]
 80098b0:	687b      	ldr	r3, [r7, #4]
 80098b2:	681b      	ldr	r3, [r3, #0]
 80098b4:	699b      	ldr	r3, [r3, #24]
 80098b6:	617b      	str	r3, [r7, #20]
 80098b8:	687b      	ldr	r3, [r7, #4]
 80098ba:	681b      	ldr	r3, [r3, #0]
 80098bc:	681b      	ldr	r3, [r3, #0]
 80098be:	613b      	str	r3, [r7, #16]
 80098c0:	697b      	ldr	r3, [r7, #20]
 80098c2:	0a1b      	lsrs	r3, r3, #8
 80098c4:	f003 0301 	and.w	r3, r3, #1
 80098c8:	2b00      	cmp	r3, #0
 80098ca:	d010      	beq.n	80098ee <HAL_I2C_ER_IRQHandler+0x46>
 80098cc:	693b      	ldr	r3, [r7, #16]
 80098ce:	09db      	lsrs	r3, r3, #7
 80098d0:	f003 0301 	and.w	r3, r3, #1
 80098d4:	2b00      	cmp	r3, #0
 80098d6:	d00a      	beq.n	80098ee <HAL_I2C_ER_IRQHandler+0x46>
 80098d8:	687b      	ldr	r3, [r7, #4]
 80098da:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80098dc:	f043 0201 	orr.w	r2, r3, #1
 80098e0:	687b      	ldr	r3, [r7, #4]
 80098e2:	645a      	str	r2, [r3, #68]	; 0x44
 80098e4:	687b      	ldr	r3, [r7, #4]
 80098e6:	681b      	ldr	r3, [r3, #0]
 80098e8:	f44f 7280 	mov.w	r2, #256	; 0x100
 80098ec:	61da      	str	r2, [r3, #28]
 80098ee:	697b      	ldr	r3, [r7, #20]
 80098f0:	0a9b      	lsrs	r3, r3, #10
 80098f2:	f003 0301 	and.w	r3, r3, #1
 80098f6:	2b00      	cmp	r3, #0
 80098f8:	d010      	beq.n	800991c <HAL_I2C_ER_IRQHandler+0x74>
 80098fa:	693b      	ldr	r3, [r7, #16]
 80098fc:	09db      	lsrs	r3, r3, #7
 80098fe:	f003 0301 	and.w	r3, r3, #1
 8009902:	2b00      	cmp	r3, #0
 8009904:	d00a      	beq.n	800991c <HAL_I2C_ER_IRQHandler+0x74>
 8009906:	687b      	ldr	r3, [r7, #4]
 8009908:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800990a:	f043 0208 	orr.w	r2, r3, #8
 800990e:	687b      	ldr	r3, [r7, #4]
 8009910:	645a      	str	r2, [r3, #68]	; 0x44
 8009912:	687b      	ldr	r3, [r7, #4]
 8009914:	681b      	ldr	r3, [r3, #0]
 8009916:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800991a:	61da      	str	r2, [r3, #28]
 800991c:	697b      	ldr	r3, [r7, #20]
 800991e:	0a5b      	lsrs	r3, r3, #9
 8009920:	f003 0301 	and.w	r3, r3, #1
 8009924:	2b00      	cmp	r3, #0
 8009926:	d010      	beq.n	800994a <HAL_I2C_ER_IRQHandler+0xa2>
 8009928:	693b      	ldr	r3, [r7, #16]
 800992a:	09db      	lsrs	r3, r3, #7
 800992c:	f003 0301 	and.w	r3, r3, #1
 8009930:	2b00      	cmp	r3, #0
 8009932:	d00a      	beq.n	800994a <HAL_I2C_ER_IRQHandler+0xa2>
 8009934:	687b      	ldr	r3, [r7, #4]
 8009936:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8009938:	f043 0202 	orr.w	r2, r3, #2
 800993c:	687b      	ldr	r3, [r7, #4]
 800993e:	645a      	str	r2, [r3, #68]	; 0x44
 8009940:	687b      	ldr	r3, [r7, #4]
 8009942:	681b      	ldr	r3, [r3, #0]
 8009944:	f44f 7200 	mov.w	r2, #512	; 0x200
 8009948:	61da      	str	r2, [r3, #28]
 800994a:	687b      	ldr	r3, [r7, #4]
 800994c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800994e:	60fb      	str	r3, [r7, #12]
 8009950:	68fb      	ldr	r3, [r7, #12]
 8009952:	f003 030b 	and.w	r3, r3, #11
 8009956:	2b00      	cmp	r3, #0
 8009958:	d003      	beq.n	8009962 <HAL_I2C_ER_IRQHandler+0xba>
 800995a:	68f9      	ldr	r1, [r7, #12]
 800995c:	6878      	ldr	r0, [r7, #4]
 800995e:	f000 ffa9 	bl	800a8b4 <I2C_ITError>
 8009962:	bf00      	nop
 8009964:	3718      	adds	r7, #24
 8009966:	46bd      	mov	sp, r7
 8009968:	bd80      	pop	{r7, pc}

0800996a <HAL_I2C_MasterTxCpltCallback>:
 800996a:	b480      	push	{r7}
 800996c:	b083      	sub	sp, #12
 800996e:	af00      	add	r7, sp, #0
 8009970:	6078      	str	r0, [r7, #4]
 8009972:	bf00      	nop
 8009974:	370c      	adds	r7, #12
 8009976:	46bd      	mov	sp, r7
 8009978:	bc80      	pop	{r7}
 800997a:	4770      	bx	lr

0800997c <HAL_I2C_MasterRxCpltCallback>:
 800997c:	b480      	push	{r7}
 800997e:	b083      	sub	sp, #12
 8009980:	af00      	add	r7, sp, #0
 8009982:	6078      	str	r0, [r7, #4]
 8009984:	bf00      	nop
 8009986:	370c      	adds	r7, #12
 8009988:	46bd      	mov	sp, r7
 800998a:	bc80      	pop	{r7}
 800998c:	4770      	bx	lr

0800998e <HAL_I2C_SlaveTxCpltCallback>:
 800998e:	b480      	push	{r7}
 8009990:	b083      	sub	sp, #12
 8009992:	af00      	add	r7, sp, #0
 8009994:	6078      	str	r0, [r7, #4]
 8009996:	bf00      	nop
 8009998:	370c      	adds	r7, #12
 800999a:	46bd      	mov	sp, r7
 800999c:	bc80      	pop	{r7}
 800999e:	4770      	bx	lr

080099a0 <HAL_I2C_SlaveRxCpltCallback>:
 80099a0:	b480      	push	{r7}
 80099a2:	b083      	sub	sp, #12
 80099a4:	af00      	add	r7, sp, #0
 80099a6:	6078      	str	r0, [r7, #4]
 80099a8:	bf00      	nop
 80099aa:	370c      	adds	r7, #12
 80099ac:	46bd      	mov	sp, r7
 80099ae:	bc80      	pop	{r7}
 80099b0:	4770      	bx	lr

080099b2 <HAL_I2C_AddrCallback>:
 80099b2:	b480      	push	{r7}
 80099b4:	b083      	sub	sp, #12
 80099b6:	af00      	add	r7, sp, #0
 80099b8:	6078      	str	r0, [r7, #4]
 80099ba:	460b      	mov	r3, r1
 80099bc:	70fb      	strb	r3, [r7, #3]
 80099be:	4613      	mov	r3, r2
 80099c0:	803b      	strh	r3, [r7, #0]
 80099c2:	bf00      	nop
 80099c4:	370c      	adds	r7, #12
 80099c6:	46bd      	mov	sp, r7
 80099c8:	bc80      	pop	{r7}
 80099ca:	4770      	bx	lr

080099cc <HAL_I2C_ListenCpltCallback>:
 80099cc:	b480      	push	{r7}
 80099ce:	b083      	sub	sp, #12
 80099d0:	af00      	add	r7, sp, #0
 80099d2:	6078      	str	r0, [r7, #4]
 80099d4:	bf00      	nop
 80099d6:	370c      	adds	r7, #12
 80099d8:	46bd      	mov	sp, r7
 80099da:	bc80      	pop	{r7}
 80099dc:	4770      	bx	lr

080099de <HAL_I2C_MemTxCpltCallback>:
 80099de:	b480      	push	{r7}
 80099e0:	b083      	sub	sp, #12
 80099e2:	af00      	add	r7, sp, #0
 80099e4:	6078      	str	r0, [r7, #4]
 80099e6:	bf00      	nop
 80099e8:	370c      	adds	r7, #12
 80099ea:	46bd      	mov	sp, r7
 80099ec:	bc80      	pop	{r7}
 80099ee:	4770      	bx	lr

080099f0 <HAL_I2C_MemRxCpltCallback>:
 80099f0:	b480      	push	{r7}
 80099f2:	b083      	sub	sp, #12
 80099f4:	af00      	add	r7, sp, #0
 80099f6:	6078      	str	r0, [r7, #4]
 80099f8:	bf00      	nop
 80099fa:	370c      	adds	r7, #12
 80099fc:	46bd      	mov	sp, r7
 80099fe:	bc80      	pop	{r7}
 8009a00:	4770      	bx	lr

08009a02 <HAL_I2C_ErrorCallback>:
 8009a02:	b480      	push	{r7}
 8009a04:	b083      	sub	sp, #12
 8009a06:	af00      	add	r7, sp, #0
 8009a08:	6078      	str	r0, [r7, #4]
 8009a0a:	bf00      	nop
 8009a0c:	370c      	adds	r7, #12
 8009a0e:	46bd      	mov	sp, r7
 8009a10:	bc80      	pop	{r7}
 8009a12:	4770      	bx	lr

08009a14 <HAL_I2C_AbortCpltCallback>:
 8009a14:	b480      	push	{r7}
 8009a16:	b083      	sub	sp, #12
 8009a18:	af00      	add	r7, sp, #0
 8009a1a:	6078      	str	r0, [r7, #4]
 8009a1c:	bf00      	nop
 8009a1e:	370c      	adds	r7, #12
 8009a20:	46bd      	mov	sp, r7
 8009a22:	bc80      	pop	{r7}
 8009a24:	4770      	bx	lr

08009a26 <I2C_Master_ISR_IT>:
 8009a26:	b580      	push	{r7, lr}
 8009a28:	b088      	sub	sp, #32
 8009a2a:	af02      	add	r7, sp, #8
 8009a2c:	60f8      	str	r0, [r7, #12]
 8009a2e:	60b9      	str	r1, [r7, #8]
 8009a30:	607a      	str	r2, [r7, #4]
 8009a32:	68bb      	ldr	r3, [r7, #8]
 8009a34:	617b      	str	r3, [r7, #20]
 8009a36:	68fb      	ldr	r3, [r7, #12]
 8009a38:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 8009a3c:	2b01      	cmp	r3, #1
 8009a3e:	d101      	bne.n	8009a44 <I2C_Master_ISR_IT+0x1e>
 8009a40:	2302      	movs	r3, #2
 8009a42:	e114      	b.n	8009c6e <I2C_Master_ISR_IT+0x248>
 8009a44:	68fb      	ldr	r3, [r7, #12]
 8009a46:	2201      	movs	r2, #1
 8009a48:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8009a4c:	697b      	ldr	r3, [r7, #20]
 8009a4e:	091b      	lsrs	r3, r3, #4
 8009a50:	f003 0301 	and.w	r3, r3, #1
 8009a54:	2b00      	cmp	r3, #0
 8009a56:	d013      	beq.n	8009a80 <I2C_Master_ISR_IT+0x5a>
 8009a58:	687b      	ldr	r3, [r7, #4]
 8009a5a:	091b      	lsrs	r3, r3, #4
 8009a5c:	f003 0301 	and.w	r3, r3, #1
 8009a60:	2b00      	cmp	r3, #0
 8009a62:	d00d      	beq.n	8009a80 <I2C_Master_ISR_IT+0x5a>
 8009a64:	68fb      	ldr	r3, [r7, #12]
 8009a66:	681b      	ldr	r3, [r3, #0]
 8009a68:	2210      	movs	r2, #16
 8009a6a:	61da      	str	r2, [r3, #28]
 8009a6c:	68fb      	ldr	r3, [r7, #12]
 8009a6e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8009a70:	f043 0204 	orr.w	r2, r3, #4
 8009a74:	68fb      	ldr	r3, [r7, #12]
 8009a76:	645a      	str	r2, [r3, #68]	; 0x44
 8009a78:	68f8      	ldr	r0, [r7, #12]
 8009a7a:	f001 f812 	bl	800aaa2 <I2C_Flush_TXDR>
 8009a7e:	e0e1      	b.n	8009c44 <I2C_Master_ISR_IT+0x21e>
 8009a80:	697b      	ldr	r3, [r7, #20]
 8009a82:	089b      	lsrs	r3, r3, #2
 8009a84:	f003 0301 	and.w	r3, r3, #1
 8009a88:	2b00      	cmp	r3, #0
 8009a8a:	d023      	beq.n	8009ad4 <I2C_Master_ISR_IT+0xae>
 8009a8c:	687b      	ldr	r3, [r7, #4]
 8009a8e:	089b      	lsrs	r3, r3, #2
 8009a90:	f003 0301 	and.w	r3, r3, #1
 8009a94:	2b00      	cmp	r3, #0
 8009a96:	d01d      	beq.n	8009ad4 <I2C_Master_ISR_IT+0xae>
 8009a98:	697b      	ldr	r3, [r7, #20]
 8009a9a:	f023 0304 	bic.w	r3, r3, #4
 8009a9e:	617b      	str	r3, [r7, #20]
 8009aa0:	68fb      	ldr	r3, [r7, #12]
 8009aa2:	681b      	ldr	r3, [r3, #0]
 8009aa4:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8009aa6:	68fb      	ldr	r3, [r7, #12]
 8009aa8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009aaa:	b2d2      	uxtb	r2, r2
 8009aac:	701a      	strb	r2, [r3, #0]
 8009aae:	68fb      	ldr	r3, [r7, #12]
 8009ab0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009ab2:	1c5a      	adds	r2, r3, #1
 8009ab4:	68fb      	ldr	r3, [r7, #12]
 8009ab6:	625a      	str	r2, [r3, #36]	; 0x24
 8009ab8:	68fb      	ldr	r3, [r7, #12]
 8009aba:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8009abc:	3b01      	subs	r3, #1
 8009abe:	b29a      	uxth	r2, r3
 8009ac0:	68fb      	ldr	r3, [r7, #12]
 8009ac2:	851a      	strh	r2, [r3, #40]	; 0x28
 8009ac4:	68fb      	ldr	r3, [r7, #12]
 8009ac6:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8009ac8:	b29b      	uxth	r3, r3
 8009aca:	3b01      	subs	r3, #1
 8009acc:	b29a      	uxth	r2, r3
 8009ace:	68fb      	ldr	r3, [r7, #12]
 8009ad0:	855a      	strh	r2, [r3, #42]	; 0x2a
 8009ad2:	e0b7      	b.n	8009c44 <I2C_Master_ISR_IT+0x21e>
 8009ad4:	697b      	ldr	r3, [r7, #20]
 8009ad6:	085b      	lsrs	r3, r3, #1
 8009ad8:	f003 0301 	and.w	r3, r3, #1
 8009adc:	2b00      	cmp	r3, #0
 8009ade:	d01e      	beq.n	8009b1e <I2C_Master_ISR_IT+0xf8>
 8009ae0:	687b      	ldr	r3, [r7, #4]
 8009ae2:	085b      	lsrs	r3, r3, #1
 8009ae4:	f003 0301 	and.w	r3, r3, #1
 8009ae8:	2b00      	cmp	r3, #0
 8009aea:	d018      	beq.n	8009b1e <I2C_Master_ISR_IT+0xf8>
 8009aec:	68fb      	ldr	r3, [r7, #12]
 8009aee:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009af0:	781a      	ldrb	r2, [r3, #0]
 8009af2:	68fb      	ldr	r3, [r7, #12]
 8009af4:	681b      	ldr	r3, [r3, #0]
 8009af6:	629a      	str	r2, [r3, #40]	; 0x28
 8009af8:	68fb      	ldr	r3, [r7, #12]
 8009afa:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009afc:	1c5a      	adds	r2, r3, #1
 8009afe:	68fb      	ldr	r3, [r7, #12]
 8009b00:	625a      	str	r2, [r3, #36]	; 0x24
 8009b02:	68fb      	ldr	r3, [r7, #12]
 8009b04:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8009b06:	3b01      	subs	r3, #1
 8009b08:	b29a      	uxth	r2, r3
 8009b0a:	68fb      	ldr	r3, [r7, #12]
 8009b0c:	851a      	strh	r2, [r3, #40]	; 0x28
 8009b0e:	68fb      	ldr	r3, [r7, #12]
 8009b10:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8009b12:	b29b      	uxth	r3, r3
 8009b14:	3b01      	subs	r3, #1
 8009b16:	b29a      	uxth	r2, r3
 8009b18:	68fb      	ldr	r3, [r7, #12]
 8009b1a:	855a      	strh	r2, [r3, #42]	; 0x2a
 8009b1c:	e092      	b.n	8009c44 <I2C_Master_ISR_IT+0x21e>
 8009b1e:	697b      	ldr	r3, [r7, #20]
 8009b20:	09db      	lsrs	r3, r3, #7
 8009b22:	f003 0301 	and.w	r3, r3, #1
 8009b26:	2b00      	cmp	r3, #0
 8009b28:	d05d      	beq.n	8009be6 <I2C_Master_ISR_IT+0x1c0>
 8009b2a:	687b      	ldr	r3, [r7, #4]
 8009b2c:	099b      	lsrs	r3, r3, #6
 8009b2e:	f003 0301 	and.w	r3, r3, #1
 8009b32:	2b00      	cmp	r3, #0
 8009b34:	d057      	beq.n	8009be6 <I2C_Master_ISR_IT+0x1c0>
 8009b36:	68fb      	ldr	r3, [r7, #12]
 8009b38:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8009b3a:	b29b      	uxth	r3, r3
 8009b3c:	2b00      	cmp	r3, #0
 8009b3e:	d040      	beq.n	8009bc2 <I2C_Master_ISR_IT+0x19c>
 8009b40:	68fb      	ldr	r3, [r7, #12]
 8009b42:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8009b44:	2b00      	cmp	r3, #0
 8009b46:	d13c      	bne.n	8009bc2 <I2C_Master_ISR_IT+0x19c>
 8009b48:	68fb      	ldr	r3, [r7, #12]
 8009b4a:	681b      	ldr	r3, [r3, #0]
 8009b4c:	685b      	ldr	r3, [r3, #4]
 8009b4e:	b29b      	uxth	r3, r3
 8009b50:	f3c3 0309 	ubfx	r3, r3, #0, #10
 8009b54:	827b      	strh	r3, [r7, #18]
 8009b56:	68fb      	ldr	r3, [r7, #12]
 8009b58:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8009b5a:	b29b      	uxth	r3, r3
 8009b5c:	2bff      	cmp	r3, #255	; 0xff
 8009b5e:	d90e      	bls.n	8009b7e <I2C_Master_ISR_IT+0x158>
 8009b60:	68fb      	ldr	r3, [r7, #12]
 8009b62:	22ff      	movs	r2, #255	; 0xff
 8009b64:	851a      	strh	r2, [r3, #40]	; 0x28
 8009b66:	68fb      	ldr	r3, [r7, #12]
 8009b68:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8009b6a:	b2da      	uxtb	r2, r3
 8009b6c:	8a79      	ldrh	r1, [r7, #18]
 8009b6e:	2300      	movs	r3, #0
 8009b70:	9300      	str	r3, [sp, #0]
 8009b72:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 8009b76:	68f8      	ldr	r0, [r7, #12]
 8009b78:	f001 f9a4 	bl	800aec4 <I2C_TransferConfig>
 8009b7c:	e032      	b.n	8009be4 <I2C_Master_ISR_IT+0x1be>
 8009b7e:	68fb      	ldr	r3, [r7, #12]
 8009b80:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8009b82:	b29a      	uxth	r2, r3
 8009b84:	68fb      	ldr	r3, [r7, #12]
 8009b86:	851a      	strh	r2, [r3, #40]	; 0x28
 8009b88:	68fb      	ldr	r3, [r7, #12]
 8009b8a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009b8c:	f513 3f80 	cmn.w	r3, #65536	; 0x10000
 8009b90:	d00b      	beq.n	8009baa <I2C_Master_ISR_IT+0x184>
 8009b92:	68fb      	ldr	r3, [r7, #12]
 8009b94:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8009b96:	b2da      	uxtb	r2, r3
 8009b98:	68fb      	ldr	r3, [r7, #12]
 8009b9a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009b9c:	8a79      	ldrh	r1, [r7, #18]
 8009b9e:	2000      	movs	r0, #0
 8009ba0:	9000      	str	r0, [sp, #0]
 8009ba2:	68f8      	ldr	r0, [r7, #12]
 8009ba4:	f001 f98e 	bl	800aec4 <I2C_TransferConfig>
 8009ba8:	e01c      	b.n	8009be4 <I2C_Master_ISR_IT+0x1be>
 8009baa:	68fb      	ldr	r3, [r7, #12]
 8009bac:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8009bae:	b2da      	uxtb	r2, r3
 8009bb0:	8a79      	ldrh	r1, [r7, #18]
 8009bb2:	2300      	movs	r3, #0
 8009bb4:	9300      	str	r3, [sp, #0]
 8009bb6:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 8009bba:	68f8      	ldr	r0, [r7, #12]
 8009bbc:	f001 f982 	bl	800aec4 <I2C_TransferConfig>
 8009bc0:	e010      	b.n	8009be4 <I2C_Master_ISR_IT+0x1be>
 8009bc2:	68fb      	ldr	r3, [r7, #12]
 8009bc4:	681b      	ldr	r3, [r3, #0]
 8009bc6:	685b      	ldr	r3, [r3, #4]
 8009bc8:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8009bcc:	f1b3 7f00 	cmp.w	r3, #33554432	; 0x2000000
 8009bd0:	d003      	beq.n	8009bda <I2C_Master_ISR_IT+0x1b4>
 8009bd2:	68f8      	ldr	r0, [r7, #12]
 8009bd4:	f000 fba9 	bl	800a32a <I2C_ITMasterSeqCplt>
 8009bd8:	e034      	b.n	8009c44 <I2C_Master_ISR_IT+0x21e>
 8009bda:	2140      	movs	r1, #64	; 0x40
 8009bdc:	68f8      	ldr	r0, [r7, #12]
 8009bde:	f000 fe69 	bl	800a8b4 <I2C_ITError>
 8009be2:	e02f      	b.n	8009c44 <I2C_Master_ISR_IT+0x21e>
 8009be4:	e02e      	b.n	8009c44 <I2C_Master_ISR_IT+0x21e>
 8009be6:	697b      	ldr	r3, [r7, #20]
 8009be8:	099b      	lsrs	r3, r3, #6
 8009bea:	f003 0301 	and.w	r3, r3, #1
 8009bee:	2b00      	cmp	r3, #0
 8009bf0:	d028      	beq.n	8009c44 <I2C_Master_ISR_IT+0x21e>
 8009bf2:	687b      	ldr	r3, [r7, #4]
 8009bf4:	099b      	lsrs	r3, r3, #6
 8009bf6:	f003 0301 	and.w	r3, r3, #1
 8009bfa:	2b00      	cmp	r3, #0
 8009bfc:	d022      	beq.n	8009c44 <I2C_Master_ISR_IT+0x21e>
 8009bfe:	68fb      	ldr	r3, [r7, #12]
 8009c00:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8009c02:	b29b      	uxth	r3, r3
 8009c04:	2b00      	cmp	r3, #0
 8009c06:	d119      	bne.n	8009c3c <I2C_Master_ISR_IT+0x216>
 8009c08:	68fb      	ldr	r3, [r7, #12]
 8009c0a:	681b      	ldr	r3, [r3, #0]
 8009c0c:	685b      	ldr	r3, [r3, #4]
 8009c0e:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8009c12:	f1b3 7f00 	cmp.w	r3, #33554432	; 0x2000000
 8009c16:	d015      	beq.n	8009c44 <I2C_Master_ISR_IT+0x21e>
 8009c18:	68fb      	ldr	r3, [r7, #12]
 8009c1a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009c1c:	f513 3f80 	cmn.w	r3, #65536	; 0x10000
 8009c20:	d108      	bne.n	8009c34 <I2C_Master_ISR_IT+0x20e>
 8009c22:	68fb      	ldr	r3, [r7, #12]
 8009c24:	681b      	ldr	r3, [r3, #0]
 8009c26:	685a      	ldr	r2, [r3, #4]
 8009c28:	68fb      	ldr	r3, [r7, #12]
 8009c2a:	681b      	ldr	r3, [r3, #0]
 8009c2c:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8009c30:	605a      	str	r2, [r3, #4]
 8009c32:	e007      	b.n	8009c44 <I2C_Master_ISR_IT+0x21e>
 8009c34:	68f8      	ldr	r0, [r7, #12]
 8009c36:	f000 fb78 	bl	800a32a <I2C_ITMasterSeqCplt>
 8009c3a:	e003      	b.n	8009c44 <I2C_Master_ISR_IT+0x21e>
 8009c3c:	2140      	movs	r1, #64	; 0x40
 8009c3e:	68f8      	ldr	r0, [r7, #12]
 8009c40:	f000 fe38 	bl	800a8b4 <I2C_ITError>
 8009c44:	697b      	ldr	r3, [r7, #20]
 8009c46:	095b      	lsrs	r3, r3, #5
 8009c48:	f003 0301 	and.w	r3, r3, #1
 8009c4c:	2b00      	cmp	r3, #0
 8009c4e:	d009      	beq.n	8009c64 <I2C_Master_ISR_IT+0x23e>
 8009c50:	687b      	ldr	r3, [r7, #4]
 8009c52:	095b      	lsrs	r3, r3, #5
 8009c54:	f003 0301 	and.w	r3, r3, #1
 8009c58:	2b00      	cmp	r3, #0
 8009c5a:	d003      	beq.n	8009c64 <I2C_Master_ISR_IT+0x23e>
 8009c5c:	6979      	ldr	r1, [r7, #20]
 8009c5e:	68f8      	ldr	r0, [r7, #12]
 8009c60:	f000 fbfe 	bl	800a460 <I2C_ITMasterCplt>
 8009c64:	68fb      	ldr	r3, [r7, #12]
 8009c66:	2200      	movs	r2, #0
 8009c68:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8009c6c:	2300      	movs	r3, #0
 8009c6e:	4618      	mov	r0, r3
 8009c70:	3718      	adds	r7, #24
 8009c72:	46bd      	mov	sp, r7
 8009c74:	bd80      	pop	{r7, pc}

08009c76 <I2C_Slave_ISR_IT>:
 8009c76:	b580      	push	{r7, lr}
 8009c78:	b086      	sub	sp, #24
 8009c7a:	af00      	add	r7, sp, #0
 8009c7c:	60f8      	str	r0, [r7, #12]
 8009c7e:	60b9      	str	r1, [r7, #8]
 8009c80:	607a      	str	r2, [r7, #4]
 8009c82:	68fb      	ldr	r3, [r7, #12]
 8009c84:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009c86:	617b      	str	r3, [r7, #20]
 8009c88:	68bb      	ldr	r3, [r7, #8]
 8009c8a:	613b      	str	r3, [r7, #16]
 8009c8c:	68fb      	ldr	r3, [r7, #12]
 8009c8e:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 8009c92:	2b01      	cmp	r3, #1
 8009c94:	d101      	bne.n	8009c9a <I2C_Slave_ISR_IT+0x24>
 8009c96:	2302      	movs	r3, #2
 8009c98:	e0ec      	b.n	8009e74 <I2C_Slave_ISR_IT+0x1fe>
 8009c9a:	68fb      	ldr	r3, [r7, #12]
 8009c9c:	2201      	movs	r2, #1
 8009c9e:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8009ca2:	693b      	ldr	r3, [r7, #16]
 8009ca4:	095b      	lsrs	r3, r3, #5
 8009ca6:	f003 0301 	and.w	r3, r3, #1
 8009caa:	2b00      	cmp	r3, #0
 8009cac:	d009      	beq.n	8009cc2 <I2C_Slave_ISR_IT+0x4c>
 8009cae:	687b      	ldr	r3, [r7, #4]
 8009cb0:	095b      	lsrs	r3, r3, #5
 8009cb2:	f003 0301 	and.w	r3, r3, #1
 8009cb6:	2b00      	cmp	r3, #0
 8009cb8:	d003      	beq.n	8009cc2 <I2C_Slave_ISR_IT+0x4c>
 8009cba:	6939      	ldr	r1, [r7, #16]
 8009cbc:	68f8      	ldr	r0, [r7, #12]
 8009cbe:	f000 fc99 	bl	800a5f4 <I2C_ITSlaveCplt>
 8009cc2:	693b      	ldr	r3, [r7, #16]
 8009cc4:	091b      	lsrs	r3, r3, #4
 8009cc6:	f003 0301 	and.w	r3, r3, #1
 8009cca:	2b00      	cmp	r3, #0
 8009ccc:	d04d      	beq.n	8009d6a <I2C_Slave_ISR_IT+0xf4>
 8009cce:	687b      	ldr	r3, [r7, #4]
 8009cd0:	091b      	lsrs	r3, r3, #4
 8009cd2:	f003 0301 	and.w	r3, r3, #1
 8009cd6:	2b00      	cmp	r3, #0
 8009cd8:	d047      	beq.n	8009d6a <I2C_Slave_ISR_IT+0xf4>
 8009cda:	68fb      	ldr	r3, [r7, #12]
 8009cdc:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8009cde:	b29b      	uxth	r3, r3
 8009ce0:	2b00      	cmp	r3, #0
 8009ce2:	d128      	bne.n	8009d36 <I2C_Slave_ISR_IT+0xc0>
 8009ce4:	68fb      	ldr	r3, [r7, #12]
 8009ce6:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 8009cea:	b2db      	uxtb	r3, r3
 8009cec:	2b28      	cmp	r3, #40	; 0x28
 8009cee:	d108      	bne.n	8009d02 <I2C_Slave_ISR_IT+0x8c>
 8009cf0:	697b      	ldr	r3, [r7, #20]
 8009cf2:	f1b3 7f00 	cmp.w	r3, #33554432	; 0x2000000
 8009cf6:	d104      	bne.n	8009d02 <I2C_Slave_ISR_IT+0x8c>
 8009cf8:	6939      	ldr	r1, [r7, #16]
 8009cfa:	68f8      	ldr	r0, [r7, #12]
 8009cfc:	f000 fd84 	bl	800a808 <I2C_ITListenCplt>
 8009d00:	e032      	b.n	8009d68 <I2C_Slave_ISR_IT+0xf2>
 8009d02:	68fb      	ldr	r3, [r7, #12]
 8009d04:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 8009d08:	b2db      	uxtb	r3, r3
 8009d0a:	2b29      	cmp	r3, #41	; 0x29
 8009d0c:	d10e      	bne.n	8009d2c <I2C_Slave_ISR_IT+0xb6>
 8009d0e:	697b      	ldr	r3, [r7, #20]
 8009d10:	f513 3f80 	cmn.w	r3, #65536	; 0x10000
 8009d14:	d00a      	beq.n	8009d2c <I2C_Slave_ISR_IT+0xb6>
 8009d16:	68fb      	ldr	r3, [r7, #12]
 8009d18:	681b      	ldr	r3, [r3, #0]
 8009d1a:	2210      	movs	r2, #16
 8009d1c:	61da      	str	r2, [r3, #28]
 8009d1e:	68f8      	ldr	r0, [r7, #12]
 8009d20:	f000 febf 	bl	800aaa2 <I2C_Flush_TXDR>
 8009d24:	68f8      	ldr	r0, [r7, #12]
 8009d26:	f000 fb3d 	bl	800a3a4 <I2C_ITSlaveSeqCplt>
 8009d2a:	e01d      	b.n	8009d68 <I2C_Slave_ISR_IT+0xf2>
 8009d2c:	68fb      	ldr	r3, [r7, #12]
 8009d2e:	681b      	ldr	r3, [r3, #0]
 8009d30:	2210      	movs	r2, #16
 8009d32:	61da      	str	r2, [r3, #28]
 8009d34:	e096      	b.n	8009e64 <I2C_Slave_ISR_IT+0x1ee>
 8009d36:	68fb      	ldr	r3, [r7, #12]
 8009d38:	681b      	ldr	r3, [r3, #0]
 8009d3a:	2210      	movs	r2, #16
 8009d3c:	61da      	str	r2, [r3, #28]
 8009d3e:	68fb      	ldr	r3, [r7, #12]
 8009d40:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8009d42:	f043 0204 	orr.w	r2, r3, #4
 8009d46:	68fb      	ldr	r3, [r7, #12]
 8009d48:	645a      	str	r2, [r3, #68]	; 0x44
 8009d4a:	697b      	ldr	r3, [r7, #20]
 8009d4c:	2b00      	cmp	r3, #0
 8009d4e:	d004      	beq.n	8009d5a <I2C_Slave_ISR_IT+0xe4>
 8009d50:	697b      	ldr	r3, [r7, #20]
 8009d52:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8009d56:	f040 8085 	bne.w	8009e64 <I2C_Slave_ISR_IT+0x1ee>
 8009d5a:	68fb      	ldr	r3, [r7, #12]
 8009d5c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8009d5e:	4619      	mov	r1, r3
 8009d60:	68f8      	ldr	r0, [r7, #12]
 8009d62:	f000 fda7 	bl	800a8b4 <I2C_ITError>
 8009d66:	e07d      	b.n	8009e64 <I2C_Slave_ISR_IT+0x1ee>
 8009d68:	e07c      	b.n	8009e64 <I2C_Slave_ISR_IT+0x1ee>
 8009d6a:	693b      	ldr	r3, [r7, #16]
 8009d6c:	089b      	lsrs	r3, r3, #2
 8009d6e:	f003 0301 	and.w	r3, r3, #1
 8009d72:	2b00      	cmp	r3, #0
 8009d74:	d030      	beq.n	8009dd8 <I2C_Slave_ISR_IT+0x162>
 8009d76:	687b      	ldr	r3, [r7, #4]
 8009d78:	089b      	lsrs	r3, r3, #2
 8009d7a:	f003 0301 	and.w	r3, r3, #1
 8009d7e:	2b00      	cmp	r3, #0
 8009d80:	d02a      	beq.n	8009dd8 <I2C_Slave_ISR_IT+0x162>
 8009d82:	68fb      	ldr	r3, [r7, #12]
 8009d84:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8009d86:	b29b      	uxth	r3, r3
 8009d88:	2b00      	cmp	r3, #0
 8009d8a:	d018      	beq.n	8009dbe <I2C_Slave_ISR_IT+0x148>
 8009d8c:	68fb      	ldr	r3, [r7, #12]
 8009d8e:	681b      	ldr	r3, [r3, #0]
 8009d90:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8009d92:	68fb      	ldr	r3, [r7, #12]
 8009d94:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009d96:	b2d2      	uxtb	r2, r2
 8009d98:	701a      	strb	r2, [r3, #0]
 8009d9a:	68fb      	ldr	r3, [r7, #12]
 8009d9c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009d9e:	1c5a      	adds	r2, r3, #1
 8009da0:	68fb      	ldr	r3, [r7, #12]
 8009da2:	625a      	str	r2, [r3, #36]	; 0x24
 8009da4:	68fb      	ldr	r3, [r7, #12]
 8009da6:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8009da8:	3b01      	subs	r3, #1
 8009daa:	b29a      	uxth	r2, r3
 8009dac:	68fb      	ldr	r3, [r7, #12]
 8009dae:	851a      	strh	r2, [r3, #40]	; 0x28
 8009db0:	68fb      	ldr	r3, [r7, #12]
 8009db2:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8009db4:	b29b      	uxth	r3, r3
 8009db6:	3b01      	subs	r3, #1
 8009db8:	b29a      	uxth	r2, r3
 8009dba:	68fb      	ldr	r3, [r7, #12]
 8009dbc:	855a      	strh	r2, [r3, #42]	; 0x2a
 8009dbe:	68fb      	ldr	r3, [r7, #12]
 8009dc0:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8009dc2:	b29b      	uxth	r3, r3
 8009dc4:	2b00      	cmp	r3, #0
 8009dc6:	d14f      	bne.n	8009e68 <I2C_Slave_ISR_IT+0x1f2>
 8009dc8:	697b      	ldr	r3, [r7, #20]
 8009dca:	f513 3f80 	cmn.w	r3, #65536	; 0x10000
 8009dce:	d04b      	beq.n	8009e68 <I2C_Slave_ISR_IT+0x1f2>
 8009dd0:	68f8      	ldr	r0, [r7, #12]
 8009dd2:	f000 fae7 	bl	800a3a4 <I2C_ITSlaveSeqCplt>
 8009dd6:	e047      	b.n	8009e68 <I2C_Slave_ISR_IT+0x1f2>
 8009dd8:	693b      	ldr	r3, [r7, #16]
 8009dda:	08db      	lsrs	r3, r3, #3
 8009ddc:	f003 0301 	and.w	r3, r3, #1
 8009de0:	2b00      	cmp	r3, #0
 8009de2:	d00a      	beq.n	8009dfa <I2C_Slave_ISR_IT+0x184>
 8009de4:	687b      	ldr	r3, [r7, #4]
 8009de6:	08db      	lsrs	r3, r3, #3
 8009de8:	f003 0301 	and.w	r3, r3, #1
 8009dec:	2b00      	cmp	r3, #0
 8009dee:	d004      	beq.n	8009dfa <I2C_Slave_ISR_IT+0x184>
 8009df0:	6939      	ldr	r1, [r7, #16]
 8009df2:	68f8      	ldr	r0, [r7, #12]
 8009df4:	f000 fa15 	bl	800a222 <I2C_ITAddrCplt>
 8009df8:	e037      	b.n	8009e6a <I2C_Slave_ISR_IT+0x1f4>
 8009dfa:	693b      	ldr	r3, [r7, #16]
 8009dfc:	085b      	lsrs	r3, r3, #1
 8009dfe:	f003 0301 	and.w	r3, r3, #1
 8009e02:	2b00      	cmp	r3, #0
 8009e04:	d031      	beq.n	8009e6a <I2C_Slave_ISR_IT+0x1f4>
 8009e06:	687b      	ldr	r3, [r7, #4]
 8009e08:	085b      	lsrs	r3, r3, #1
 8009e0a:	f003 0301 	and.w	r3, r3, #1
 8009e0e:	2b00      	cmp	r3, #0
 8009e10:	d02b      	beq.n	8009e6a <I2C_Slave_ISR_IT+0x1f4>
 8009e12:	68fb      	ldr	r3, [r7, #12]
 8009e14:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8009e16:	b29b      	uxth	r3, r3
 8009e18:	2b00      	cmp	r3, #0
 8009e1a:	d018      	beq.n	8009e4e <I2C_Slave_ISR_IT+0x1d8>
 8009e1c:	68fb      	ldr	r3, [r7, #12]
 8009e1e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009e20:	781a      	ldrb	r2, [r3, #0]
 8009e22:	68fb      	ldr	r3, [r7, #12]
 8009e24:	681b      	ldr	r3, [r3, #0]
 8009e26:	629a      	str	r2, [r3, #40]	; 0x28
 8009e28:	68fb      	ldr	r3, [r7, #12]
 8009e2a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009e2c:	1c5a      	adds	r2, r3, #1
 8009e2e:	68fb      	ldr	r3, [r7, #12]
 8009e30:	625a      	str	r2, [r3, #36]	; 0x24
 8009e32:	68fb      	ldr	r3, [r7, #12]
 8009e34:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8009e36:	b29b      	uxth	r3, r3
 8009e38:	3b01      	subs	r3, #1
 8009e3a:	b29a      	uxth	r2, r3
 8009e3c:	68fb      	ldr	r3, [r7, #12]
 8009e3e:	855a      	strh	r2, [r3, #42]	; 0x2a
 8009e40:	68fb      	ldr	r3, [r7, #12]
 8009e42:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8009e44:	3b01      	subs	r3, #1
 8009e46:	b29a      	uxth	r2, r3
 8009e48:	68fb      	ldr	r3, [r7, #12]
 8009e4a:	851a      	strh	r2, [r3, #40]	; 0x28
 8009e4c:	e00d      	b.n	8009e6a <I2C_Slave_ISR_IT+0x1f4>
 8009e4e:	697b      	ldr	r3, [r7, #20]
 8009e50:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8009e54:	d002      	beq.n	8009e5c <I2C_Slave_ISR_IT+0x1e6>
 8009e56:	697b      	ldr	r3, [r7, #20]
 8009e58:	2b00      	cmp	r3, #0
 8009e5a:	d106      	bne.n	8009e6a <I2C_Slave_ISR_IT+0x1f4>
 8009e5c:	68f8      	ldr	r0, [r7, #12]
 8009e5e:	f000 faa1 	bl	800a3a4 <I2C_ITSlaveSeqCplt>
 8009e62:	e002      	b.n	8009e6a <I2C_Slave_ISR_IT+0x1f4>
 8009e64:	bf00      	nop
 8009e66:	e000      	b.n	8009e6a <I2C_Slave_ISR_IT+0x1f4>
 8009e68:	bf00      	nop
 8009e6a:	68fb      	ldr	r3, [r7, #12]
 8009e6c:	2200      	movs	r2, #0
 8009e6e:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8009e72:	2300      	movs	r3, #0
 8009e74:	4618      	mov	r0, r3
 8009e76:	3718      	adds	r7, #24
 8009e78:	46bd      	mov	sp, r7
 8009e7a:	bd80      	pop	{r7, pc}

08009e7c <I2C_Master_ISR_DMA>:
 8009e7c:	b580      	push	{r7, lr}
 8009e7e:	b088      	sub	sp, #32
 8009e80:	af02      	add	r7, sp, #8
 8009e82:	60f8      	str	r0, [r7, #12]
 8009e84:	60b9      	str	r1, [r7, #8]
 8009e86:	607a      	str	r2, [r7, #4]
 8009e88:	68fb      	ldr	r3, [r7, #12]
 8009e8a:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 8009e8e:	2b01      	cmp	r3, #1
 8009e90:	d101      	bne.n	8009e96 <I2C_Master_ISR_DMA+0x1a>
 8009e92:	2302      	movs	r3, #2
 8009e94:	e0e1      	b.n	800a05a <I2C_Master_ISR_DMA+0x1de>
 8009e96:	68fb      	ldr	r3, [r7, #12]
 8009e98:	2201      	movs	r2, #1
 8009e9a:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8009e9e:	68bb      	ldr	r3, [r7, #8]
 8009ea0:	091b      	lsrs	r3, r3, #4
 8009ea2:	f003 0301 	and.w	r3, r3, #1
 8009ea6:	2b00      	cmp	r3, #0
 8009ea8:	d017      	beq.n	8009eda <I2C_Master_ISR_DMA+0x5e>
 8009eaa:	687b      	ldr	r3, [r7, #4]
 8009eac:	091b      	lsrs	r3, r3, #4
 8009eae:	f003 0301 	and.w	r3, r3, #1
 8009eb2:	2b00      	cmp	r3, #0
 8009eb4:	d011      	beq.n	8009eda <I2C_Master_ISR_DMA+0x5e>
 8009eb6:	68fb      	ldr	r3, [r7, #12]
 8009eb8:	681b      	ldr	r3, [r3, #0]
 8009eba:	2210      	movs	r2, #16
 8009ebc:	61da      	str	r2, [r3, #28]
 8009ebe:	68fb      	ldr	r3, [r7, #12]
 8009ec0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8009ec2:	f043 0204 	orr.w	r2, r3, #4
 8009ec6:	68fb      	ldr	r3, [r7, #12]
 8009ec8:	645a      	str	r2, [r3, #68]	; 0x44
 8009eca:	2120      	movs	r1, #32
 8009ecc:	68f8      	ldr	r0, [r7, #12]
 8009ece:	f001 f825 	bl	800af1c <I2C_Enable_IRQ>
 8009ed2:	68f8      	ldr	r0, [r7, #12]
 8009ed4:	f000 fde5 	bl	800aaa2 <I2C_Flush_TXDR>
 8009ed8:	e0ba      	b.n	800a050 <I2C_Master_ISR_DMA+0x1d4>
 8009eda:	68bb      	ldr	r3, [r7, #8]
 8009edc:	09db      	lsrs	r3, r3, #7
 8009ede:	f003 0301 	and.w	r3, r3, #1
 8009ee2:	2b00      	cmp	r3, #0
 8009ee4:	d072      	beq.n	8009fcc <I2C_Master_ISR_DMA+0x150>
 8009ee6:	687b      	ldr	r3, [r7, #4]
 8009ee8:	099b      	lsrs	r3, r3, #6
 8009eea:	f003 0301 	and.w	r3, r3, #1
 8009eee:	2b00      	cmp	r3, #0
 8009ef0:	d06c      	beq.n	8009fcc <I2C_Master_ISR_DMA+0x150>
 8009ef2:	68fb      	ldr	r3, [r7, #12]
 8009ef4:	681b      	ldr	r3, [r3, #0]
 8009ef6:	681a      	ldr	r2, [r3, #0]
 8009ef8:	68fb      	ldr	r3, [r7, #12]
 8009efa:	681b      	ldr	r3, [r3, #0]
 8009efc:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8009f00:	601a      	str	r2, [r3, #0]
 8009f02:	68fb      	ldr	r3, [r7, #12]
 8009f04:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8009f06:	b29b      	uxth	r3, r3
 8009f08:	2b00      	cmp	r3, #0
 8009f0a:	d04e      	beq.n	8009faa <I2C_Master_ISR_DMA+0x12e>
 8009f0c:	68fb      	ldr	r3, [r7, #12]
 8009f0e:	681b      	ldr	r3, [r3, #0]
 8009f10:	685b      	ldr	r3, [r3, #4]
 8009f12:	b29b      	uxth	r3, r3
 8009f14:	f3c3 0309 	ubfx	r3, r3, #0, #10
 8009f18:	827b      	strh	r3, [r7, #18]
 8009f1a:	68fb      	ldr	r3, [r7, #12]
 8009f1c:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8009f1e:	b29b      	uxth	r3, r3
 8009f20:	2bff      	cmp	r3, #255	; 0xff
 8009f22:	d906      	bls.n	8009f32 <I2C_Master_ISR_DMA+0xb6>
 8009f24:	68fb      	ldr	r3, [r7, #12]
 8009f26:	22ff      	movs	r2, #255	; 0xff
 8009f28:	851a      	strh	r2, [r3, #40]	; 0x28
 8009f2a:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 8009f2e:	617b      	str	r3, [r7, #20]
 8009f30:	e010      	b.n	8009f54 <I2C_Master_ISR_DMA+0xd8>
 8009f32:	68fb      	ldr	r3, [r7, #12]
 8009f34:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8009f36:	b29a      	uxth	r2, r3
 8009f38:	68fb      	ldr	r3, [r7, #12]
 8009f3a:	851a      	strh	r2, [r3, #40]	; 0x28
 8009f3c:	68fb      	ldr	r3, [r7, #12]
 8009f3e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009f40:	f513 3f80 	cmn.w	r3, #65536	; 0x10000
 8009f44:	d003      	beq.n	8009f4e <I2C_Master_ISR_DMA+0xd2>
 8009f46:	68fb      	ldr	r3, [r7, #12]
 8009f48:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009f4a:	617b      	str	r3, [r7, #20]
 8009f4c:	e002      	b.n	8009f54 <I2C_Master_ISR_DMA+0xd8>
 8009f4e:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 8009f52:	617b      	str	r3, [r7, #20]
 8009f54:	68fb      	ldr	r3, [r7, #12]
 8009f56:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8009f58:	b2da      	uxtb	r2, r3
 8009f5a:	8a79      	ldrh	r1, [r7, #18]
 8009f5c:	2300      	movs	r3, #0
 8009f5e:	9300      	str	r3, [sp, #0]
 8009f60:	697b      	ldr	r3, [r7, #20]
 8009f62:	68f8      	ldr	r0, [r7, #12]
 8009f64:	f000 ffae 	bl	800aec4 <I2C_TransferConfig>
 8009f68:	68fb      	ldr	r3, [r7, #12]
 8009f6a:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8009f6c:	b29a      	uxth	r2, r3
 8009f6e:	68fb      	ldr	r3, [r7, #12]
 8009f70:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8009f72:	1ad3      	subs	r3, r2, r3
 8009f74:	b29a      	uxth	r2, r3
 8009f76:	68fb      	ldr	r3, [r7, #12]
 8009f78:	855a      	strh	r2, [r3, #42]	; 0x2a
 8009f7a:	68fb      	ldr	r3, [r7, #12]
 8009f7c:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 8009f80:	b2db      	uxtb	r3, r3
 8009f82:	2b22      	cmp	r3, #34	; 0x22
 8009f84:	d108      	bne.n	8009f98 <I2C_Master_ISR_DMA+0x11c>
 8009f86:	68fb      	ldr	r3, [r7, #12]
 8009f88:	681b      	ldr	r3, [r3, #0]
 8009f8a:	681a      	ldr	r2, [r3, #0]
 8009f8c:	68fb      	ldr	r3, [r7, #12]
 8009f8e:	681b      	ldr	r3, [r3, #0]
 8009f90:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8009f94:	601a      	str	r2, [r3, #0]
 8009f96:	e05b      	b.n	800a050 <I2C_Master_ISR_DMA+0x1d4>
 8009f98:	68fb      	ldr	r3, [r7, #12]
 8009f9a:	681b      	ldr	r3, [r3, #0]
 8009f9c:	681a      	ldr	r2, [r3, #0]
 8009f9e:	68fb      	ldr	r3, [r7, #12]
 8009fa0:	681b      	ldr	r3, [r3, #0]
 8009fa2:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8009fa6:	601a      	str	r2, [r3, #0]
 8009fa8:	e052      	b.n	800a050 <I2C_Master_ISR_DMA+0x1d4>
 8009faa:	68fb      	ldr	r3, [r7, #12]
 8009fac:	681b      	ldr	r3, [r3, #0]
 8009fae:	685b      	ldr	r3, [r3, #4]
 8009fb0:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8009fb4:	f1b3 7f00 	cmp.w	r3, #33554432	; 0x2000000
 8009fb8:	d003      	beq.n	8009fc2 <I2C_Master_ISR_DMA+0x146>
 8009fba:	68f8      	ldr	r0, [r7, #12]
 8009fbc:	f000 f9b5 	bl	800a32a <I2C_ITMasterSeqCplt>
 8009fc0:	e046      	b.n	800a050 <I2C_Master_ISR_DMA+0x1d4>
 8009fc2:	2140      	movs	r1, #64	; 0x40
 8009fc4:	68f8      	ldr	r0, [r7, #12]
 8009fc6:	f000 fc75 	bl	800a8b4 <I2C_ITError>
 8009fca:	e041      	b.n	800a050 <I2C_Master_ISR_DMA+0x1d4>
 8009fcc:	68bb      	ldr	r3, [r7, #8]
 8009fce:	099b      	lsrs	r3, r3, #6
 8009fd0:	f003 0301 	and.w	r3, r3, #1
 8009fd4:	2b00      	cmp	r3, #0
 8009fd6:	d029      	beq.n	800a02c <I2C_Master_ISR_DMA+0x1b0>
 8009fd8:	687b      	ldr	r3, [r7, #4]
 8009fda:	099b      	lsrs	r3, r3, #6
 8009fdc:	f003 0301 	and.w	r3, r3, #1
 8009fe0:	2b00      	cmp	r3, #0
 8009fe2:	d023      	beq.n	800a02c <I2C_Master_ISR_DMA+0x1b0>
 8009fe4:	68fb      	ldr	r3, [r7, #12]
 8009fe6:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8009fe8:	b29b      	uxth	r3, r3
 8009fea:	2b00      	cmp	r3, #0
 8009fec:	d119      	bne.n	800a022 <I2C_Master_ISR_DMA+0x1a6>
 8009fee:	68fb      	ldr	r3, [r7, #12]
 8009ff0:	681b      	ldr	r3, [r3, #0]
 8009ff2:	685b      	ldr	r3, [r3, #4]
 8009ff4:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8009ff8:	f1b3 7f00 	cmp.w	r3, #33554432	; 0x2000000
 8009ffc:	d027      	beq.n	800a04e <I2C_Master_ISR_DMA+0x1d2>
 8009ffe:	68fb      	ldr	r3, [r7, #12]
 800a000:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a002:	f513 3f80 	cmn.w	r3, #65536	; 0x10000
 800a006:	d108      	bne.n	800a01a <I2C_Master_ISR_DMA+0x19e>
 800a008:	68fb      	ldr	r3, [r7, #12]
 800a00a:	681b      	ldr	r3, [r3, #0]
 800a00c:	685a      	ldr	r2, [r3, #4]
 800a00e:	68fb      	ldr	r3, [r7, #12]
 800a010:	681b      	ldr	r3, [r3, #0]
 800a012:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 800a016:	605a      	str	r2, [r3, #4]
 800a018:	e019      	b.n	800a04e <I2C_Master_ISR_DMA+0x1d2>
 800a01a:	68f8      	ldr	r0, [r7, #12]
 800a01c:	f000 f985 	bl	800a32a <I2C_ITMasterSeqCplt>
 800a020:	e015      	b.n	800a04e <I2C_Master_ISR_DMA+0x1d2>
 800a022:	2140      	movs	r1, #64	; 0x40
 800a024:	68f8      	ldr	r0, [r7, #12]
 800a026:	f000 fc45 	bl	800a8b4 <I2C_ITError>
 800a02a:	e010      	b.n	800a04e <I2C_Master_ISR_DMA+0x1d2>
 800a02c:	68bb      	ldr	r3, [r7, #8]
 800a02e:	095b      	lsrs	r3, r3, #5
 800a030:	f003 0301 	and.w	r3, r3, #1
 800a034:	2b00      	cmp	r3, #0
 800a036:	d00b      	beq.n	800a050 <I2C_Master_ISR_DMA+0x1d4>
 800a038:	687b      	ldr	r3, [r7, #4]
 800a03a:	095b      	lsrs	r3, r3, #5
 800a03c:	f003 0301 	and.w	r3, r3, #1
 800a040:	2b00      	cmp	r3, #0
 800a042:	d005      	beq.n	800a050 <I2C_Master_ISR_DMA+0x1d4>
 800a044:	68b9      	ldr	r1, [r7, #8]
 800a046:	68f8      	ldr	r0, [r7, #12]
 800a048:	f000 fa0a 	bl	800a460 <I2C_ITMasterCplt>
 800a04c:	e000      	b.n	800a050 <I2C_Master_ISR_DMA+0x1d4>
 800a04e:	bf00      	nop
 800a050:	68fb      	ldr	r3, [r7, #12]
 800a052:	2200      	movs	r2, #0
 800a054:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800a058:	2300      	movs	r3, #0
 800a05a:	4618      	mov	r0, r3
 800a05c:	3718      	adds	r7, #24
 800a05e:	46bd      	mov	sp, r7
 800a060:	bd80      	pop	{r7, pc}

0800a062 <I2C_Slave_ISR_DMA>:
 800a062:	b580      	push	{r7, lr}
 800a064:	b088      	sub	sp, #32
 800a066:	af00      	add	r7, sp, #0
 800a068:	60f8      	str	r0, [r7, #12]
 800a06a:	60b9      	str	r1, [r7, #8]
 800a06c:	607a      	str	r2, [r7, #4]
 800a06e:	68fb      	ldr	r3, [r7, #12]
 800a070:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a072:	61bb      	str	r3, [r7, #24]
 800a074:	2300      	movs	r3, #0
 800a076:	61fb      	str	r3, [r7, #28]
 800a078:	68fb      	ldr	r3, [r7, #12]
 800a07a:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 800a07e:	2b01      	cmp	r3, #1
 800a080:	d101      	bne.n	800a086 <I2C_Slave_ISR_DMA+0x24>
 800a082:	2302      	movs	r3, #2
 800a084:	e0c9      	b.n	800a21a <I2C_Slave_ISR_DMA+0x1b8>
 800a086:	68fb      	ldr	r3, [r7, #12]
 800a088:	2201      	movs	r2, #1
 800a08a:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800a08e:	68bb      	ldr	r3, [r7, #8]
 800a090:	095b      	lsrs	r3, r3, #5
 800a092:	f003 0301 	and.w	r3, r3, #1
 800a096:	2b00      	cmp	r3, #0
 800a098:	d009      	beq.n	800a0ae <I2C_Slave_ISR_DMA+0x4c>
 800a09a:	687b      	ldr	r3, [r7, #4]
 800a09c:	095b      	lsrs	r3, r3, #5
 800a09e:	f003 0301 	and.w	r3, r3, #1
 800a0a2:	2b00      	cmp	r3, #0
 800a0a4:	d003      	beq.n	800a0ae <I2C_Slave_ISR_DMA+0x4c>
 800a0a6:	68b9      	ldr	r1, [r7, #8]
 800a0a8:	68f8      	ldr	r0, [r7, #12]
 800a0aa:	f000 faa3 	bl	800a5f4 <I2C_ITSlaveCplt>
 800a0ae:	68bb      	ldr	r3, [r7, #8]
 800a0b0:	091b      	lsrs	r3, r3, #4
 800a0b2:	f003 0301 	and.w	r3, r3, #1
 800a0b6:	2b00      	cmp	r3, #0
 800a0b8:	f000 809a 	beq.w	800a1f0 <I2C_Slave_ISR_DMA+0x18e>
 800a0bc:	687b      	ldr	r3, [r7, #4]
 800a0be:	091b      	lsrs	r3, r3, #4
 800a0c0:	f003 0301 	and.w	r3, r3, #1
 800a0c4:	2b00      	cmp	r3, #0
 800a0c6:	f000 8093 	beq.w	800a1f0 <I2C_Slave_ISR_DMA+0x18e>
 800a0ca:	687b      	ldr	r3, [r7, #4]
 800a0cc:	0b9b      	lsrs	r3, r3, #14
 800a0ce:	f003 0301 	and.w	r3, r3, #1
 800a0d2:	2b00      	cmp	r3, #0
 800a0d4:	d105      	bne.n	800a0e2 <I2C_Slave_ISR_DMA+0x80>
 800a0d6:	687b      	ldr	r3, [r7, #4]
 800a0d8:	0bdb      	lsrs	r3, r3, #15
 800a0da:	f003 0301 	and.w	r3, r3, #1
 800a0de:	2b00      	cmp	r3, #0
 800a0e0:	d07f      	beq.n	800a1e2 <I2C_Slave_ISR_DMA+0x180>
 800a0e2:	68fb      	ldr	r3, [r7, #12]
 800a0e4:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800a0e6:	2b00      	cmp	r3, #0
 800a0e8:	d00d      	beq.n	800a106 <I2C_Slave_ISR_DMA+0xa4>
 800a0ea:	687b      	ldr	r3, [r7, #4]
 800a0ec:	0bdb      	lsrs	r3, r3, #15
 800a0ee:	f003 0301 	and.w	r3, r3, #1
 800a0f2:	2b00      	cmp	r3, #0
 800a0f4:	d007      	beq.n	800a106 <I2C_Slave_ISR_DMA+0xa4>
 800a0f6:	68fb      	ldr	r3, [r7, #12]
 800a0f8:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800a0fa:	681b      	ldr	r3, [r3, #0]
 800a0fc:	685b      	ldr	r3, [r3, #4]
 800a0fe:	2b00      	cmp	r3, #0
 800a100:	d101      	bne.n	800a106 <I2C_Slave_ISR_DMA+0xa4>
 800a102:	2301      	movs	r3, #1
 800a104:	61fb      	str	r3, [r7, #28]
 800a106:	68fb      	ldr	r3, [r7, #12]
 800a108:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800a10a:	2b00      	cmp	r3, #0
 800a10c:	d00d      	beq.n	800a12a <I2C_Slave_ISR_DMA+0xc8>
 800a10e:	687b      	ldr	r3, [r7, #4]
 800a110:	0b9b      	lsrs	r3, r3, #14
 800a112:	f003 0301 	and.w	r3, r3, #1
 800a116:	2b00      	cmp	r3, #0
 800a118:	d007      	beq.n	800a12a <I2C_Slave_ISR_DMA+0xc8>
 800a11a:	68fb      	ldr	r3, [r7, #12]
 800a11c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800a11e:	681b      	ldr	r3, [r3, #0]
 800a120:	685b      	ldr	r3, [r3, #4]
 800a122:	2b00      	cmp	r3, #0
 800a124:	d101      	bne.n	800a12a <I2C_Slave_ISR_DMA+0xc8>
 800a126:	2301      	movs	r3, #1
 800a128:	61fb      	str	r3, [r7, #28]
 800a12a:	69fb      	ldr	r3, [r7, #28]
 800a12c:	2b01      	cmp	r3, #1
 800a12e:	d128      	bne.n	800a182 <I2C_Slave_ISR_DMA+0x120>
 800a130:	68fb      	ldr	r3, [r7, #12]
 800a132:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 800a136:	b2db      	uxtb	r3, r3
 800a138:	2b28      	cmp	r3, #40	; 0x28
 800a13a:	d108      	bne.n	800a14e <I2C_Slave_ISR_DMA+0xec>
 800a13c:	69bb      	ldr	r3, [r7, #24]
 800a13e:	f1b3 7f00 	cmp.w	r3, #33554432	; 0x2000000
 800a142:	d104      	bne.n	800a14e <I2C_Slave_ISR_DMA+0xec>
 800a144:	68b9      	ldr	r1, [r7, #8]
 800a146:	68f8      	ldr	r0, [r7, #12]
 800a148:	f000 fb5e 	bl	800a808 <I2C_ITListenCplt>
 800a14c:	e048      	b.n	800a1e0 <I2C_Slave_ISR_DMA+0x17e>
 800a14e:	68fb      	ldr	r3, [r7, #12]
 800a150:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 800a154:	b2db      	uxtb	r3, r3
 800a156:	2b29      	cmp	r3, #41	; 0x29
 800a158:	d10e      	bne.n	800a178 <I2C_Slave_ISR_DMA+0x116>
 800a15a:	69bb      	ldr	r3, [r7, #24]
 800a15c:	f513 3f80 	cmn.w	r3, #65536	; 0x10000
 800a160:	d00a      	beq.n	800a178 <I2C_Slave_ISR_DMA+0x116>
 800a162:	68fb      	ldr	r3, [r7, #12]
 800a164:	681b      	ldr	r3, [r3, #0]
 800a166:	2210      	movs	r2, #16
 800a168:	61da      	str	r2, [r3, #28]
 800a16a:	68f8      	ldr	r0, [r7, #12]
 800a16c:	f000 fc99 	bl	800aaa2 <I2C_Flush_TXDR>
 800a170:	68f8      	ldr	r0, [r7, #12]
 800a172:	f000 f917 	bl	800a3a4 <I2C_ITSlaveSeqCplt>
 800a176:	e033      	b.n	800a1e0 <I2C_Slave_ISR_DMA+0x17e>
 800a178:	68fb      	ldr	r3, [r7, #12]
 800a17a:	681b      	ldr	r3, [r3, #0]
 800a17c:	2210      	movs	r2, #16
 800a17e:	61da      	str	r2, [r3, #28]
 800a180:	e034      	b.n	800a1ec <I2C_Slave_ISR_DMA+0x18a>
 800a182:	68fb      	ldr	r3, [r7, #12]
 800a184:	681b      	ldr	r3, [r3, #0]
 800a186:	2210      	movs	r2, #16
 800a188:	61da      	str	r2, [r3, #28]
 800a18a:	68fb      	ldr	r3, [r7, #12]
 800a18c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800a18e:	f043 0204 	orr.w	r2, r3, #4
 800a192:	68fb      	ldr	r3, [r7, #12]
 800a194:	645a      	str	r2, [r3, #68]	; 0x44
 800a196:	68fb      	ldr	r3, [r7, #12]
 800a198:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 800a19c:	75fb      	strb	r3, [r7, #23]
 800a19e:	69bb      	ldr	r3, [r7, #24]
 800a1a0:	2b00      	cmp	r3, #0
 800a1a2:	d003      	beq.n	800a1ac <I2C_Slave_ISR_DMA+0x14a>
 800a1a4:	69bb      	ldr	r3, [r7, #24]
 800a1a6:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 800a1aa:	d11f      	bne.n	800a1ec <I2C_Slave_ISR_DMA+0x18a>
 800a1ac:	7dfb      	ldrb	r3, [r7, #23]
 800a1ae:	2b21      	cmp	r3, #33	; 0x21
 800a1b0:	d002      	beq.n	800a1b8 <I2C_Slave_ISR_DMA+0x156>
 800a1b2:	7dfb      	ldrb	r3, [r7, #23]
 800a1b4:	2b29      	cmp	r3, #41	; 0x29
 800a1b6:	d103      	bne.n	800a1c0 <I2C_Slave_ISR_DMA+0x15e>
 800a1b8:	68fb      	ldr	r3, [r7, #12]
 800a1ba:	2221      	movs	r2, #33	; 0x21
 800a1bc:	631a      	str	r2, [r3, #48]	; 0x30
 800a1be:	e008      	b.n	800a1d2 <I2C_Slave_ISR_DMA+0x170>
 800a1c0:	7dfb      	ldrb	r3, [r7, #23]
 800a1c2:	2b22      	cmp	r3, #34	; 0x22
 800a1c4:	d002      	beq.n	800a1cc <I2C_Slave_ISR_DMA+0x16a>
 800a1c6:	7dfb      	ldrb	r3, [r7, #23]
 800a1c8:	2b2a      	cmp	r3, #42	; 0x2a
 800a1ca:	d102      	bne.n	800a1d2 <I2C_Slave_ISR_DMA+0x170>
 800a1cc:	68fb      	ldr	r3, [r7, #12]
 800a1ce:	2222      	movs	r2, #34	; 0x22
 800a1d0:	631a      	str	r2, [r3, #48]	; 0x30
 800a1d2:	68fb      	ldr	r3, [r7, #12]
 800a1d4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800a1d6:	4619      	mov	r1, r3
 800a1d8:	68f8      	ldr	r0, [r7, #12]
 800a1da:	f000 fb6b 	bl	800a8b4 <I2C_ITError>
 800a1de:	e005      	b.n	800a1ec <I2C_Slave_ISR_DMA+0x18a>
 800a1e0:	e004      	b.n	800a1ec <I2C_Slave_ISR_DMA+0x18a>
 800a1e2:	68fb      	ldr	r3, [r7, #12]
 800a1e4:	681b      	ldr	r3, [r3, #0]
 800a1e6:	2210      	movs	r2, #16
 800a1e8:	61da      	str	r2, [r3, #28]
 800a1ea:	e011      	b.n	800a210 <I2C_Slave_ISR_DMA+0x1ae>
 800a1ec:	bf00      	nop
 800a1ee:	e00f      	b.n	800a210 <I2C_Slave_ISR_DMA+0x1ae>
 800a1f0:	68bb      	ldr	r3, [r7, #8]
 800a1f2:	08db      	lsrs	r3, r3, #3
 800a1f4:	f003 0301 	and.w	r3, r3, #1
 800a1f8:	2b00      	cmp	r3, #0
 800a1fa:	d009      	beq.n	800a210 <I2C_Slave_ISR_DMA+0x1ae>
 800a1fc:	687b      	ldr	r3, [r7, #4]
 800a1fe:	08db      	lsrs	r3, r3, #3
 800a200:	f003 0301 	and.w	r3, r3, #1
 800a204:	2b00      	cmp	r3, #0
 800a206:	d003      	beq.n	800a210 <I2C_Slave_ISR_DMA+0x1ae>
 800a208:	68b9      	ldr	r1, [r7, #8]
 800a20a:	68f8      	ldr	r0, [r7, #12]
 800a20c:	f000 f809 	bl	800a222 <I2C_ITAddrCplt>
 800a210:	68fb      	ldr	r3, [r7, #12]
 800a212:	2200      	movs	r2, #0
 800a214:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800a218:	2300      	movs	r3, #0
 800a21a:	4618      	mov	r0, r3
 800a21c:	3720      	adds	r7, #32
 800a21e:	46bd      	mov	sp, r7
 800a220:	bd80      	pop	{r7, pc}

0800a222 <I2C_ITAddrCplt>:
 800a222:	b580      	push	{r7, lr}
 800a224:	b084      	sub	sp, #16
 800a226:	af00      	add	r7, sp, #0
 800a228:	6078      	str	r0, [r7, #4]
 800a22a:	6039      	str	r1, [r7, #0]
 800a22c:	687b      	ldr	r3, [r7, #4]
 800a22e:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 800a232:	b2db      	uxtb	r3, r3
 800a234:	f003 0328 	and.w	r3, r3, #40	; 0x28
 800a238:	2b28      	cmp	r3, #40	; 0x28
 800a23a:	d16a      	bne.n	800a312 <I2C_ITAddrCplt+0xf0>
 800a23c:	687b      	ldr	r3, [r7, #4]
 800a23e:	681b      	ldr	r3, [r3, #0]
 800a240:	699b      	ldr	r3, [r3, #24]
 800a242:	0c1b      	lsrs	r3, r3, #16
 800a244:	b2db      	uxtb	r3, r3
 800a246:	f003 0301 	and.w	r3, r3, #1
 800a24a:	73fb      	strb	r3, [r7, #15]
 800a24c:	687b      	ldr	r3, [r7, #4]
 800a24e:	681b      	ldr	r3, [r3, #0]
 800a250:	699b      	ldr	r3, [r3, #24]
 800a252:	0c1b      	lsrs	r3, r3, #16
 800a254:	b29b      	uxth	r3, r3
 800a256:	f003 03fe 	and.w	r3, r3, #254	; 0xfe
 800a25a:	81bb      	strh	r3, [r7, #12]
 800a25c:	687b      	ldr	r3, [r7, #4]
 800a25e:	681b      	ldr	r3, [r3, #0]
 800a260:	689b      	ldr	r3, [r3, #8]
 800a262:	b29b      	uxth	r3, r3
 800a264:	f3c3 0309 	ubfx	r3, r3, #0, #10
 800a268:	817b      	strh	r3, [r7, #10]
 800a26a:	687b      	ldr	r3, [r7, #4]
 800a26c:	681b      	ldr	r3, [r3, #0]
 800a26e:	68db      	ldr	r3, [r3, #12]
 800a270:	b29b      	uxth	r3, r3
 800a272:	f003 03fe 	and.w	r3, r3, #254	; 0xfe
 800a276:	813b      	strh	r3, [r7, #8]
 800a278:	687b      	ldr	r3, [r7, #4]
 800a27a:	68db      	ldr	r3, [r3, #12]
 800a27c:	2b02      	cmp	r3, #2
 800a27e:	d138      	bne.n	800a2f2 <I2C_ITAddrCplt+0xd0>
 800a280:	897b      	ldrh	r3, [r7, #10]
 800a282:	09db      	lsrs	r3, r3, #7
 800a284:	b29a      	uxth	r2, r3
 800a286:	89bb      	ldrh	r3, [r7, #12]
 800a288:	4053      	eors	r3, r2
 800a28a:	b29b      	uxth	r3, r3
 800a28c:	f003 0306 	and.w	r3, r3, #6
 800a290:	2b00      	cmp	r3, #0
 800a292:	d11c      	bne.n	800a2ce <I2C_ITAddrCplt+0xac>
 800a294:	897b      	ldrh	r3, [r7, #10]
 800a296:	81bb      	strh	r3, [r7, #12]
 800a298:	687b      	ldr	r3, [r7, #4]
 800a29a:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800a29c:	1c5a      	adds	r2, r3, #1
 800a29e:	687b      	ldr	r3, [r7, #4]
 800a2a0:	649a      	str	r2, [r3, #72]	; 0x48
 800a2a2:	687b      	ldr	r3, [r7, #4]
 800a2a4:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800a2a6:	2b02      	cmp	r3, #2
 800a2a8:	d13b      	bne.n	800a322 <I2C_ITAddrCplt+0x100>
 800a2aa:	687b      	ldr	r3, [r7, #4]
 800a2ac:	2200      	movs	r2, #0
 800a2ae:	649a      	str	r2, [r3, #72]	; 0x48
 800a2b0:	687b      	ldr	r3, [r7, #4]
 800a2b2:	681b      	ldr	r3, [r3, #0]
 800a2b4:	2208      	movs	r2, #8
 800a2b6:	61da      	str	r2, [r3, #28]
 800a2b8:	687b      	ldr	r3, [r7, #4]
 800a2ba:	2200      	movs	r2, #0
 800a2bc:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800a2c0:	89ba      	ldrh	r2, [r7, #12]
 800a2c2:	7bfb      	ldrb	r3, [r7, #15]
 800a2c4:	4619      	mov	r1, r3
 800a2c6:	6878      	ldr	r0, [r7, #4]
 800a2c8:	f7ff fb73 	bl	80099b2 <HAL_I2C_AddrCallback>
 800a2cc:	e029      	b.n	800a322 <I2C_ITAddrCplt+0x100>
 800a2ce:	893b      	ldrh	r3, [r7, #8]
 800a2d0:	81bb      	strh	r3, [r7, #12]
 800a2d2:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 800a2d6:	6878      	ldr	r0, [r7, #4]
 800a2d8:	f000 fe82 	bl	800afe0 <I2C_Disable_IRQ>
 800a2dc:	687b      	ldr	r3, [r7, #4]
 800a2de:	2200      	movs	r2, #0
 800a2e0:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800a2e4:	89ba      	ldrh	r2, [r7, #12]
 800a2e6:	7bfb      	ldrb	r3, [r7, #15]
 800a2e8:	4619      	mov	r1, r3
 800a2ea:	6878      	ldr	r0, [r7, #4]
 800a2ec:	f7ff fb61 	bl	80099b2 <HAL_I2C_AddrCallback>
 800a2f0:	e017      	b.n	800a322 <I2C_ITAddrCplt+0x100>
 800a2f2:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 800a2f6:	6878      	ldr	r0, [r7, #4]
 800a2f8:	f000 fe72 	bl	800afe0 <I2C_Disable_IRQ>
 800a2fc:	687b      	ldr	r3, [r7, #4]
 800a2fe:	2200      	movs	r2, #0
 800a300:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800a304:	89ba      	ldrh	r2, [r7, #12]
 800a306:	7bfb      	ldrb	r3, [r7, #15]
 800a308:	4619      	mov	r1, r3
 800a30a:	6878      	ldr	r0, [r7, #4]
 800a30c:	f7ff fb51 	bl	80099b2 <HAL_I2C_AddrCallback>
 800a310:	e007      	b.n	800a322 <I2C_ITAddrCplt+0x100>
 800a312:	687b      	ldr	r3, [r7, #4]
 800a314:	681b      	ldr	r3, [r3, #0]
 800a316:	2208      	movs	r2, #8
 800a318:	61da      	str	r2, [r3, #28]
 800a31a:	687b      	ldr	r3, [r7, #4]
 800a31c:	2200      	movs	r2, #0
 800a31e:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800a322:	bf00      	nop
 800a324:	3710      	adds	r7, #16
 800a326:	46bd      	mov	sp, r7
 800a328:	bd80      	pop	{r7, pc}

0800a32a <I2C_ITMasterSeqCplt>:
 800a32a:	b580      	push	{r7, lr}
 800a32c:	b082      	sub	sp, #8
 800a32e:	af00      	add	r7, sp, #0
 800a330:	6078      	str	r0, [r7, #4]
 800a332:	687b      	ldr	r3, [r7, #4]
 800a334:	2200      	movs	r2, #0
 800a336:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 800a33a:	687b      	ldr	r3, [r7, #4]
 800a33c:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 800a340:	b2db      	uxtb	r3, r3
 800a342:	2b21      	cmp	r3, #33	; 0x21
 800a344:	d115      	bne.n	800a372 <I2C_ITMasterSeqCplt+0x48>
 800a346:	687b      	ldr	r3, [r7, #4]
 800a348:	2220      	movs	r2, #32
 800a34a:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800a34e:	687b      	ldr	r3, [r7, #4]
 800a350:	2211      	movs	r2, #17
 800a352:	631a      	str	r2, [r3, #48]	; 0x30
 800a354:	687b      	ldr	r3, [r7, #4]
 800a356:	2200      	movs	r2, #0
 800a358:	635a      	str	r2, [r3, #52]	; 0x34
 800a35a:	2101      	movs	r1, #1
 800a35c:	6878      	ldr	r0, [r7, #4]
 800a35e:	f000 fe3f 	bl	800afe0 <I2C_Disable_IRQ>
 800a362:	687b      	ldr	r3, [r7, #4]
 800a364:	2200      	movs	r2, #0
 800a366:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800a36a:	6878      	ldr	r0, [r7, #4]
 800a36c:	f7ff fafd 	bl	800996a <HAL_I2C_MasterTxCpltCallback>
 800a370:	e014      	b.n	800a39c <I2C_ITMasterSeqCplt+0x72>
 800a372:	687b      	ldr	r3, [r7, #4]
 800a374:	2220      	movs	r2, #32
 800a376:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800a37a:	687b      	ldr	r3, [r7, #4]
 800a37c:	2212      	movs	r2, #18
 800a37e:	631a      	str	r2, [r3, #48]	; 0x30
 800a380:	687b      	ldr	r3, [r7, #4]
 800a382:	2200      	movs	r2, #0
 800a384:	635a      	str	r2, [r3, #52]	; 0x34
 800a386:	2102      	movs	r1, #2
 800a388:	6878      	ldr	r0, [r7, #4]
 800a38a:	f000 fe29 	bl	800afe0 <I2C_Disable_IRQ>
 800a38e:	687b      	ldr	r3, [r7, #4]
 800a390:	2200      	movs	r2, #0
 800a392:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800a396:	6878      	ldr	r0, [r7, #4]
 800a398:	f7ff faf0 	bl	800997c <HAL_I2C_MasterRxCpltCallback>
 800a39c:	bf00      	nop
 800a39e:	3708      	adds	r7, #8
 800a3a0:	46bd      	mov	sp, r7
 800a3a2:	bd80      	pop	{r7, pc}

0800a3a4 <I2C_ITSlaveSeqCplt>:
 800a3a4:	b580      	push	{r7, lr}
 800a3a6:	b084      	sub	sp, #16
 800a3a8:	af00      	add	r7, sp, #0
 800a3aa:	6078      	str	r0, [r7, #4]
 800a3ac:	687b      	ldr	r3, [r7, #4]
 800a3ae:	681b      	ldr	r3, [r3, #0]
 800a3b0:	681b      	ldr	r3, [r3, #0]
 800a3b2:	60fb      	str	r3, [r7, #12]
 800a3b4:	687b      	ldr	r3, [r7, #4]
 800a3b6:	2200      	movs	r2, #0
 800a3b8:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 800a3bc:	68fb      	ldr	r3, [r7, #12]
 800a3be:	0b9b      	lsrs	r3, r3, #14
 800a3c0:	f003 0301 	and.w	r3, r3, #1
 800a3c4:	2b00      	cmp	r3, #0
 800a3c6:	d008      	beq.n	800a3da <I2C_ITSlaveSeqCplt+0x36>
 800a3c8:	687b      	ldr	r3, [r7, #4]
 800a3ca:	681b      	ldr	r3, [r3, #0]
 800a3cc:	681a      	ldr	r2, [r3, #0]
 800a3ce:	687b      	ldr	r3, [r7, #4]
 800a3d0:	681b      	ldr	r3, [r3, #0]
 800a3d2:	f422 4280 	bic.w	r2, r2, #16384	; 0x4000
 800a3d6:	601a      	str	r2, [r3, #0]
 800a3d8:	e00d      	b.n	800a3f6 <I2C_ITSlaveSeqCplt+0x52>
 800a3da:	68fb      	ldr	r3, [r7, #12]
 800a3dc:	0bdb      	lsrs	r3, r3, #15
 800a3de:	f003 0301 	and.w	r3, r3, #1
 800a3e2:	2b00      	cmp	r3, #0
 800a3e4:	d007      	beq.n	800a3f6 <I2C_ITSlaveSeqCplt+0x52>
 800a3e6:	687b      	ldr	r3, [r7, #4]
 800a3e8:	681b      	ldr	r3, [r3, #0]
 800a3ea:	681a      	ldr	r2, [r3, #0]
 800a3ec:	687b      	ldr	r3, [r7, #4]
 800a3ee:	681b      	ldr	r3, [r3, #0]
 800a3f0:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 800a3f4:	601a      	str	r2, [r3, #0]
 800a3f6:	687b      	ldr	r3, [r7, #4]
 800a3f8:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 800a3fc:	b2db      	uxtb	r3, r3
 800a3fe:	2b29      	cmp	r3, #41	; 0x29
 800a400:	d112      	bne.n	800a428 <I2C_ITSlaveSeqCplt+0x84>
 800a402:	687b      	ldr	r3, [r7, #4]
 800a404:	2228      	movs	r2, #40	; 0x28
 800a406:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800a40a:	687b      	ldr	r3, [r7, #4]
 800a40c:	2221      	movs	r2, #33	; 0x21
 800a40e:	631a      	str	r2, [r3, #48]	; 0x30
 800a410:	2101      	movs	r1, #1
 800a412:	6878      	ldr	r0, [r7, #4]
 800a414:	f000 fde4 	bl	800afe0 <I2C_Disable_IRQ>
 800a418:	687b      	ldr	r3, [r7, #4]
 800a41a:	2200      	movs	r2, #0
 800a41c:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800a420:	6878      	ldr	r0, [r7, #4]
 800a422:	f7ff fab4 	bl	800998e <HAL_I2C_SlaveTxCpltCallback>
 800a426:	e017      	b.n	800a458 <I2C_ITSlaveSeqCplt+0xb4>
 800a428:	687b      	ldr	r3, [r7, #4]
 800a42a:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 800a42e:	b2db      	uxtb	r3, r3
 800a430:	2b2a      	cmp	r3, #42	; 0x2a
 800a432:	d111      	bne.n	800a458 <I2C_ITSlaveSeqCplt+0xb4>
 800a434:	687b      	ldr	r3, [r7, #4]
 800a436:	2228      	movs	r2, #40	; 0x28
 800a438:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800a43c:	687b      	ldr	r3, [r7, #4]
 800a43e:	2222      	movs	r2, #34	; 0x22
 800a440:	631a      	str	r2, [r3, #48]	; 0x30
 800a442:	2102      	movs	r1, #2
 800a444:	6878      	ldr	r0, [r7, #4]
 800a446:	f000 fdcb 	bl	800afe0 <I2C_Disable_IRQ>
 800a44a:	687b      	ldr	r3, [r7, #4]
 800a44c:	2200      	movs	r2, #0
 800a44e:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800a452:	6878      	ldr	r0, [r7, #4]
 800a454:	f7ff faa4 	bl	80099a0 <HAL_I2C_SlaveRxCpltCallback>
 800a458:	bf00      	nop
 800a45a:	3710      	adds	r7, #16
 800a45c:	46bd      	mov	sp, r7
 800a45e:	bd80      	pop	{r7, pc}

0800a460 <I2C_ITMasterCplt>:
 800a460:	b580      	push	{r7, lr}
 800a462:	b086      	sub	sp, #24
 800a464:	af00      	add	r7, sp, #0
 800a466:	6078      	str	r0, [r7, #4]
 800a468:	6039      	str	r1, [r7, #0]
 800a46a:	683b      	ldr	r3, [r7, #0]
 800a46c:	617b      	str	r3, [r7, #20]
 800a46e:	687b      	ldr	r3, [r7, #4]
 800a470:	681b      	ldr	r3, [r3, #0]
 800a472:	2220      	movs	r2, #32
 800a474:	61da      	str	r2, [r3, #28]
 800a476:	687b      	ldr	r3, [r7, #4]
 800a478:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 800a47c:	b2db      	uxtb	r3, r3
 800a47e:	2b21      	cmp	r3, #33	; 0x21
 800a480:	d107      	bne.n	800a492 <I2C_ITMasterCplt+0x32>
 800a482:	2101      	movs	r1, #1
 800a484:	6878      	ldr	r0, [r7, #4]
 800a486:	f000 fdab 	bl	800afe0 <I2C_Disable_IRQ>
 800a48a:	687b      	ldr	r3, [r7, #4]
 800a48c:	2211      	movs	r2, #17
 800a48e:	631a      	str	r2, [r3, #48]	; 0x30
 800a490:	e00c      	b.n	800a4ac <I2C_ITMasterCplt+0x4c>
 800a492:	687b      	ldr	r3, [r7, #4]
 800a494:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 800a498:	b2db      	uxtb	r3, r3
 800a49a:	2b22      	cmp	r3, #34	; 0x22
 800a49c:	d106      	bne.n	800a4ac <I2C_ITMasterCplt+0x4c>
 800a49e:	2102      	movs	r1, #2
 800a4a0:	6878      	ldr	r0, [r7, #4]
 800a4a2:	f000 fd9d 	bl	800afe0 <I2C_Disable_IRQ>
 800a4a6:	687b      	ldr	r3, [r7, #4]
 800a4a8:	2212      	movs	r2, #18
 800a4aa:	631a      	str	r2, [r3, #48]	; 0x30
 800a4ac:	687b      	ldr	r3, [r7, #4]
 800a4ae:	681b      	ldr	r3, [r3, #0]
 800a4b0:	6859      	ldr	r1, [r3, #4]
 800a4b2:	687b      	ldr	r3, [r7, #4]
 800a4b4:	681a      	ldr	r2, [r3, #0]
 800a4b6:	4b4d      	ldr	r3, [pc, #308]	; (800a5ec <I2C_ITMasterCplt+0x18c>)
 800a4b8:	400b      	ands	r3, r1
 800a4ba:	6053      	str	r3, [r2, #4]
 800a4bc:	687b      	ldr	r3, [r7, #4]
 800a4be:	2200      	movs	r2, #0
 800a4c0:	635a      	str	r2, [r3, #52]	; 0x34
 800a4c2:	687b      	ldr	r3, [r7, #4]
 800a4c4:	4a4a      	ldr	r2, [pc, #296]	; (800a5f0 <I2C_ITMasterCplt+0x190>)
 800a4c6:	62da      	str	r2, [r3, #44]	; 0x2c
 800a4c8:	697b      	ldr	r3, [r7, #20]
 800a4ca:	091b      	lsrs	r3, r3, #4
 800a4cc:	f003 0301 	and.w	r3, r3, #1
 800a4d0:	2b00      	cmp	r3, #0
 800a4d2:	d009      	beq.n	800a4e8 <I2C_ITMasterCplt+0x88>
 800a4d4:	687b      	ldr	r3, [r7, #4]
 800a4d6:	681b      	ldr	r3, [r3, #0]
 800a4d8:	2210      	movs	r2, #16
 800a4da:	61da      	str	r2, [r3, #28]
 800a4dc:	687b      	ldr	r3, [r7, #4]
 800a4de:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800a4e0:	f043 0204 	orr.w	r2, r3, #4
 800a4e4:	687b      	ldr	r3, [r7, #4]
 800a4e6:	645a      	str	r2, [r3, #68]	; 0x44
 800a4e8:	687b      	ldr	r3, [r7, #4]
 800a4ea:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 800a4ee:	b2db      	uxtb	r3, r3
 800a4f0:	2b60      	cmp	r3, #96	; 0x60
 800a4f2:	d10b      	bne.n	800a50c <I2C_ITMasterCplt+0xac>
 800a4f4:	697b      	ldr	r3, [r7, #20]
 800a4f6:	089b      	lsrs	r3, r3, #2
 800a4f8:	f003 0301 	and.w	r3, r3, #1
 800a4fc:	2b00      	cmp	r3, #0
 800a4fe:	d005      	beq.n	800a50c <I2C_ITMasterCplt+0xac>
 800a500:	687b      	ldr	r3, [r7, #4]
 800a502:	681b      	ldr	r3, [r3, #0]
 800a504:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a506:	b2db      	uxtb	r3, r3
 800a508:	60fb      	str	r3, [r7, #12]
 800a50a:	68fb      	ldr	r3, [r7, #12]
 800a50c:	6878      	ldr	r0, [r7, #4]
 800a50e:	f000 fac8 	bl	800aaa2 <I2C_Flush_TXDR>
 800a512:	687b      	ldr	r3, [r7, #4]
 800a514:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800a516:	613b      	str	r3, [r7, #16]
 800a518:	687b      	ldr	r3, [r7, #4]
 800a51a:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 800a51e:	b2db      	uxtb	r3, r3
 800a520:	2b60      	cmp	r3, #96	; 0x60
 800a522:	d002      	beq.n	800a52a <I2C_ITMasterCplt+0xca>
 800a524:	693b      	ldr	r3, [r7, #16]
 800a526:	2b00      	cmp	r3, #0
 800a528:	d006      	beq.n	800a538 <I2C_ITMasterCplt+0xd8>
 800a52a:	687b      	ldr	r3, [r7, #4]
 800a52c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800a52e:	4619      	mov	r1, r3
 800a530:	6878      	ldr	r0, [r7, #4]
 800a532:	f000 f9bf 	bl	800a8b4 <I2C_ITError>
 800a536:	e054      	b.n	800a5e2 <I2C_ITMasterCplt+0x182>
 800a538:	687b      	ldr	r3, [r7, #4]
 800a53a:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 800a53e:	b2db      	uxtb	r3, r3
 800a540:	2b21      	cmp	r3, #33	; 0x21
 800a542:	d124      	bne.n	800a58e <I2C_ITMasterCplt+0x12e>
 800a544:	687b      	ldr	r3, [r7, #4]
 800a546:	2220      	movs	r2, #32
 800a548:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800a54c:	687b      	ldr	r3, [r7, #4]
 800a54e:	2200      	movs	r2, #0
 800a550:	631a      	str	r2, [r3, #48]	; 0x30
 800a552:	687b      	ldr	r3, [r7, #4]
 800a554:	f893 3042 	ldrb.w	r3, [r3, #66]	; 0x42
 800a558:	b2db      	uxtb	r3, r3
 800a55a:	2b40      	cmp	r3, #64	; 0x40
 800a55c:	d10b      	bne.n	800a576 <I2C_ITMasterCplt+0x116>
 800a55e:	687b      	ldr	r3, [r7, #4]
 800a560:	2200      	movs	r2, #0
 800a562:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 800a566:	687b      	ldr	r3, [r7, #4]
 800a568:	2200      	movs	r2, #0
 800a56a:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800a56e:	6878      	ldr	r0, [r7, #4]
 800a570:	f7ff fa35 	bl	80099de <HAL_I2C_MemTxCpltCallback>
 800a574:	e035      	b.n	800a5e2 <I2C_ITMasterCplt+0x182>
 800a576:	687b      	ldr	r3, [r7, #4]
 800a578:	2200      	movs	r2, #0
 800a57a:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 800a57e:	687b      	ldr	r3, [r7, #4]
 800a580:	2200      	movs	r2, #0
 800a582:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800a586:	6878      	ldr	r0, [r7, #4]
 800a588:	f7ff f9ef 	bl	800996a <HAL_I2C_MasterTxCpltCallback>
 800a58c:	e029      	b.n	800a5e2 <I2C_ITMasterCplt+0x182>
 800a58e:	687b      	ldr	r3, [r7, #4]
 800a590:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 800a594:	b2db      	uxtb	r3, r3
 800a596:	2b22      	cmp	r3, #34	; 0x22
 800a598:	d123      	bne.n	800a5e2 <I2C_ITMasterCplt+0x182>
 800a59a:	687b      	ldr	r3, [r7, #4]
 800a59c:	2220      	movs	r2, #32
 800a59e:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800a5a2:	687b      	ldr	r3, [r7, #4]
 800a5a4:	2200      	movs	r2, #0
 800a5a6:	631a      	str	r2, [r3, #48]	; 0x30
 800a5a8:	687b      	ldr	r3, [r7, #4]
 800a5aa:	f893 3042 	ldrb.w	r3, [r3, #66]	; 0x42
 800a5ae:	b2db      	uxtb	r3, r3
 800a5b0:	2b40      	cmp	r3, #64	; 0x40
 800a5b2:	d10b      	bne.n	800a5cc <I2C_ITMasterCplt+0x16c>
 800a5b4:	687b      	ldr	r3, [r7, #4]
 800a5b6:	2200      	movs	r2, #0
 800a5b8:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 800a5bc:	687b      	ldr	r3, [r7, #4]
 800a5be:	2200      	movs	r2, #0
 800a5c0:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800a5c4:	6878      	ldr	r0, [r7, #4]
 800a5c6:	f7ff fa13 	bl	80099f0 <HAL_I2C_MemRxCpltCallback>
 800a5ca:	e00a      	b.n	800a5e2 <I2C_ITMasterCplt+0x182>
 800a5cc:	687b      	ldr	r3, [r7, #4]
 800a5ce:	2200      	movs	r2, #0
 800a5d0:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 800a5d4:	687b      	ldr	r3, [r7, #4]
 800a5d6:	2200      	movs	r2, #0
 800a5d8:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800a5dc:	6878      	ldr	r0, [r7, #4]
 800a5de:	f7ff f9cd 	bl	800997c <HAL_I2C_MasterRxCpltCallback>
 800a5e2:	bf00      	nop
 800a5e4:	3718      	adds	r7, #24
 800a5e6:	46bd      	mov	sp, r7
 800a5e8:	bd80      	pop	{r7, pc}
 800a5ea:	bf00      	nop
 800a5ec:	fe00e800 	.word	0xfe00e800
 800a5f0:	ffff0000 	.word	0xffff0000

0800a5f4 <I2C_ITSlaveCplt>:
 800a5f4:	b580      	push	{r7, lr}
 800a5f6:	b086      	sub	sp, #24
 800a5f8:	af00      	add	r7, sp, #0
 800a5fa:	6078      	str	r0, [r7, #4]
 800a5fc:	6039      	str	r1, [r7, #0]
 800a5fe:	687b      	ldr	r3, [r7, #4]
 800a600:	681b      	ldr	r3, [r3, #0]
 800a602:	681b      	ldr	r3, [r3, #0]
 800a604:	613b      	str	r3, [r7, #16]
 800a606:	683b      	ldr	r3, [r7, #0]
 800a608:	617b      	str	r3, [r7, #20]
 800a60a:	687b      	ldr	r3, [r7, #4]
 800a60c:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 800a610:	73fb      	strb	r3, [r7, #15]
 800a612:	687b      	ldr	r3, [r7, #4]
 800a614:	681b      	ldr	r3, [r3, #0]
 800a616:	2220      	movs	r2, #32
 800a618:	61da      	str	r2, [r3, #28]
 800a61a:	7bfb      	ldrb	r3, [r7, #15]
 800a61c:	2b21      	cmp	r3, #33	; 0x21
 800a61e:	d002      	beq.n	800a626 <I2C_ITSlaveCplt+0x32>
 800a620:	7bfb      	ldrb	r3, [r7, #15]
 800a622:	2b29      	cmp	r3, #41	; 0x29
 800a624:	d108      	bne.n	800a638 <I2C_ITSlaveCplt+0x44>
 800a626:	f248 0101 	movw	r1, #32769	; 0x8001
 800a62a:	6878      	ldr	r0, [r7, #4]
 800a62c:	f000 fcd8 	bl	800afe0 <I2C_Disable_IRQ>
 800a630:	687b      	ldr	r3, [r7, #4]
 800a632:	2221      	movs	r2, #33	; 0x21
 800a634:	631a      	str	r2, [r3, #48]	; 0x30
 800a636:	e00d      	b.n	800a654 <I2C_ITSlaveCplt+0x60>
 800a638:	7bfb      	ldrb	r3, [r7, #15]
 800a63a:	2b22      	cmp	r3, #34	; 0x22
 800a63c:	d002      	beq.n	800a644 <I2C_ITSlaveCplt+0x50>
 800a63e:	7bfb      	ldrb	r3, [r7, #15]
 800a640:	2b2a      	cmp	r3, #42	; 0x2a
 800a642:	d107      	bne.n	800a654 <I2C_ITSlaveCplt+0x60>
 800a644:	f248 0102 	movw	r1, #32770	; 0x8002
 800a648:	6878      	ldr	r0, [r7, #4]
 800a64a:	f000 fcc9 	bl	800afe0 <I2C_Disable_IRQ>
 800a64e:	687b      	ldr	r3, [r7, #4]
 800a650:	2222      	movs	r2, #34	; 0x22
 800a652:	631a      	str	r2, [r3, #48]	; 0x30
 800a654:	687b      	ldr	r3, [r7, #4]
 800a656:	681b      	ldr	r3, [r3, #0]
 800a658:	685a      	ldr	r2, [r3, #4]
 800a65a:	687b      	ldr	r3, [r7, #4]
 800a65c:	681b      	ldr	r3, [r3, #0]
 800a65e:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 800a662:	605a      	str	r2, [r3, #4]
 800a664:	687b      	ldr	r3, [r7, #4]
 800a666:	681b      	ldr	r3, [r3, #0]
 800a668:	6859      	ldr	r1, [r3, #4]
 800a66a:	687b      	ldr	r3, [r7, #4]
 800a66c:	681a      	ldr	r2, [r3, #0]
 800a66e:	4b64      	ldr	r3, [pc, #400]	; (800a800 <I2C_ITSlaveCplt+0x20c>)
 800a670:	400b      	ands	r3, r1
 800a672:	6053      	str	r3, [r2, #4]
 800a674:	6878      	ldr	r0, [r7, #4]
 800a676:	f000 fa14 	bl	800aaa2 <I2C_Flush_TXDR>
 800a67a:	693b      	ldr	r3, [r7, #16]
 800a67c:	0b9b      	lsrs	r3, r3, #14
 800a67e:	f003 0301 	and.w	r3, r3, #1
 800a682:	2b00      	cmp	r3, #0
 800a684:	d013      	beq.n	800a6ae <I2C_ITSlaveCplt+0xba>
 800a686:	687b      	ldr	r3, [r7, #4]
 800a688:	681b      	ldr	r3, [r3, #0]
 800a68a:	681a      	ldr	r2, [r3, #0]
 800a68c:	687b      	ldr	r3, [r7, #4]
 800a68e:	681b      	ldr	r3, [r3, #0]
 800a690:	f422 4280 	bic.w	r2, r2, #16384	; 0x4000
 800a694:	601a      	str	r2, [r3, #0]
 800a696:	687b      	ldr	r3, [r7, #4]
 800a698:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800a69a:	2b00      	cmp	r3, #0
 800a69c:	d020      	beq.n	800a6e0 <I2C_ITSlaveCplt+0xec>
 800a69e:	687b      	ldr	r3, [r7, #4]
 800a6a0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800a6a2:	681b      	ldr	r3, [r3, #0]
 800a6a4:	685b      	ldr	r3, [r3, #4]
 800a6a6:	b29a      	uxth	r2, r3
 800a6a8:	687b      	ldr	r3, [r7, #4]
 800a6aa:	855a      	strh	r2, [r3, #42]	; 0x2a
 800a6ac:	e018      	b.n	800a6e0 <I2C_ITSlaveCplt+0xec>
 800a6ae:	693b      	ldr	r3, [r7, #16]
 800a6b0:	0bdb      	lsrs	r3, r3, #15
 800a6b2:	f003 0301 	and.w	r3, r3, #1
 800a6b6:	2b00      	cmp	r3, #0
 800a6b8:	d012      	beq.n	800a6e0 <I2C_ITSlaveCplt+0xec>
 800a6ba:	687b      	ldr	r3, [r7, #4]
 800a6bc:	681b      	ldr	r3, [r3, #0]
 800a6be:	681a      	ldr	r2, [r3, #0]
 800a6c0:	687b      	ldr	r3, [r7, #4]
 800a6c2:	681b      	ldr	r3, [r3, #0]
 800a6c4:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 800a6c8:	601a      	str	r2, [r3, #0]
 800a6ca:	687b      	ldr	r3, [r7, #4]
 800a6cc:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800a6ce:	2b00      	cmp	r3, #0
 800a6d0:	d006      	beq.n	800a6e0 <I2C_ITSlaveCplt+0xec>
 800a6d2:	687b      	ldr	r3, [r7, #4]
 800a6d4:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800a6d6:	681b      	ldr	r3, [r3, #0]
 800a6d8:	685b      	ldr	r3, [r3, #4]
 800a6da:	b29a      	uxth	r2, r3
 800a6dc:	687b      	ldr	r3, [r7, #4]
 800a6de:	855a      	strh	r2, [r3, #42]	; 0x2a
 800a6e0:	697b      	ldr	r3, [r7, #20]
 800a6e2:	089b      	lsrs	r3, r3, #2
 800a6e4:	f003 0301 	and.w	r3, r3, #1
 800a6e8:	2b00      	cmp	r3, #0
 800a6ea:	d020      	beq.n	800a72e <I2C_ITSlaveCplt+0x13a>
 800a6ec:	697b      	ldr	r3, [r7, #20]
 800a6ee:	f023 0304 	bic.w	r3, r3, #4
 800a6f2:	617b      	str	r3, [r7, #20]
 800a6f4:	687b      	ldr	r3, [r7, #4]
 800a6f6:	681b      	ldr	r3, [r3, #0]
 800a6f8:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 800a6fa:	687b      	ldr	r3, [r7, #4]
 800a6fc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a6fe:	b2d2      	uxtb	r2, r2
 800a700:	701a      	strb	r2, [r3, #0]
 800a702:	687b      	ldr	r3, [r7, #4]
 800a704:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a706:	1c5a      	adds	r2, r3, #1
 800a708:	687b      	ldr	r3, [r7, #4]
 800a70a:	625a      	str	r2, [r3, #36]	; 0x24
 800a70c:	687b      	ldr	r3, [r7, #4]
 800a70e:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 800a710:	2b00      	cmp	r3, #0
 800a712:	d00c      	beq.n	800a72e <I2C_ITSlaveCplt+0x13a>
 800a714:	687b      	ldr	r3, [r7, #4]
 800a716:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 800a718:	3b01      	subs	r3, #1
 800a71a:	b29a      	uxth	r2, r3
 800a71c:	687b      	ldr	r3, [r7, #4]
 800a71e:	851a      	strh	r2, [r3, #40]	; 0x28
 800a720:	687b      	ldr	r3, [r7, #4]
 800a722:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800a724:	b29b      	uxth	r3, r3
 800a726:	3b01      	subs	r3, #1
 800a728:	b29a      	uxth	r2, r3
 800a72a:	687b      	ldr	r3, [r7, #4]
 800a72c:	855a      	strh	r2, [r3, #42]	; 0x2a
 800a72e:	687b      	ldr	r3, [r7, #4]
 800a730:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800a732:	b29b      	uxth	r3, r3
 800a734:	2b00      	cmp	r3, #0
 800a736:	d005      	beq.n	800a744 <I2C_ITSlaveCplt+0x150>
 800a738:	687b      	ldr	r3, [r7, #4]
 800a73a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800a73c:	f043 0204 	orr.w	r2, r3, #4
 800a740:	687b      	ldr	r3, [r7, #4]
 800a742:	645a      	str	r2, [r3, #68]	; 0x44
 800a744:	687b      	ldr	r3, [r7, #4]
 800a746:	2200      	movs	r2, #0
 800a748:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 800a74c:	687b      	ldr	r3, [r7, #4]
 800a74e:	2200      	movs	r2, #0
 800a750:	635a      	str	r2, [r3, #52]	; 0x34
 800a752:	687b      	ldr	r3, [r7, #4]
 800a754:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800a756:	2b00      	cmp	r3, #0
 800a758:	d010      	beq.n	800a77c <I2C_ITSlaveCplt+0x188>
 800a75a:	687b      	ldr	r3, [r7, #4]
 800a75c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800a75e:	4619      	mov	r1, r3
 800a760:	6878      	ldr	r0, [r7, #4]
 800a762:	f000 f8a7 	bl	800a8b4 <I2C_ITError>
 800a766:	687b      	ldr	r3, [r7, #4]
 800a768:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 800a76c:	b2db      	uxtb	r3, r3
 800a76e:	2b28      	cmp	r3, #40	; 0x28
 800a770:	d141      	bne.n	800a7f6 <I2C_ITSlaveCplt+0x202>
 800a772:	6979      	ldr	r1, [r7, #20]
 800a774:	6878      	ldr	r0, [r7, #4]
 800a776:	f000 f847 	bl	800a808 <I2C_ITListenCplt>
 800a77a:	e03c      	b.n	800a7f6 <I2C_ITSlaveCplt+0x202>
 800a77c:	687b      	ldr	r3, [r7, #4]
 800a77e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a780:	f513 3f80 	cmn.w	r3, #65536	; 0x10000
 800a784:	d014      	beq.n	800a7b0 <I2C_ITSlaveCplt+0x1bc>
 800a786:	6878      	ldr	r0, [r7, #4]
 800a788:	f7ff fe0c 	bl	800a3a4 <I2C_ITSlaveSeqCplt>
 800a78c:	687b      	ldr	r3, [r7, #4]
 800a78e:	4a1d      	ldr	r2, [pc, #116]	; (800a804 <I2C_ITSlaveCplt+0x210>)
 800a790:	62da      	str	r2, [r3, #44]	; 0x2c
 800a792:	687b      	ldr	r3, [r7, #4]
 800a794:	2220      	movs	r2, #32
 800a796:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800a79a:	687b      	ldr	r3, [r7, #4]
 800a79c:	2200      	movs	r2, #0
 800a79e:	631a      	str	r2, [r3, #48]	; 0x30
 800a7a0:	687b      	ldr	r3, [r7, #4]
 800a7a2:	2200      	movs	r2, #0
 800a7a4:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800a7a8:	6878      	ldr	r0, [r7, #4]
 800a7aa:	f7ff f90f 	bl	80099cc <HAL_I2C_ListenCpltCallback>
 800a7ae:	e022      	b.n	800a7f6 <I2C_ITSlaveCplt+0x202>
 800a7b0:	687b      	ldr	r3, [r7, #4]
 800a7b2:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 800a7b6:	b2db      	uxtb	r3, r3
 800a7b8:	2b22      	cmp	r3, #34	; 0x22
 800a7ba:	d10e      	bne.n	800a7da <I2C_ITSlaveCplt+0x1e6>
 800a7bc:	687b      	ldr	r3, [r7, #4]
 800a7be:	2220      	movs	r2, #32
 800a7c0:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800a7c4:	687b      	ldr	r3, [r7, #4]
 800a7c6:	2200      	movs	r2, #0
 800a7c8:	631a      	str	r2, [r3, #48]	; 0x30
 800a7ca:	687b      	ldr	r3, [r7, #4]
 800a7cc:	2200      	movs	r2, #0
 800a7ce:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800a7d2:	6878      	ldr	r0, [r7, #4]
 800a7d4:	f7ff f8e4 	bl	80099a0 <HAL_I2C_SlaveRxCpltCallback>
 800a7d8:	e00d      	b.n	800a7f6 <I2C_ITSlaveCplt+0x202>
 800a7da:	687b      	ldr	r3, [r7, #4]
 800a7dc:	2220      	movs	r2, #32
 800a7de:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800a7e2:	687b      	ldr	r3, [r7, #4]
 800a7e4:	2200      	movs	r2, #0
 800a7e6:	631a      	str	r2, [r3, #48]	; 0x30
 800a7e8:	687b      	ldr	r3, [r7, #4]
 800a7ea:	2200      	movs	r2, #0
 800a7ec:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800a7f0:	6878      	ldr	r0, [r7, #4]
 800a7f2:	f7ff f8cc 	bl	800998e <HAL_I2C_SlaveTxCpltCallback>
 800a7f6:	bf00      	nop
 800a7f8:	3718      	adds	r7, #24
 800a7fa:	46bd      	mov	sp, r7
 800a7fc:	bd80      	pop	{r7, pc}
 800a7fe:	bf00      	nop
 800a800:	fe00e800 	.word	0xfe00e800
 800a804:	ffff0000 	.word	0xffff0000

0800a808 <I2C_ITListenCplt>:
 800a808:	b580      	push	{r7, lr}
 800a80a:	b082      	sub	sp, #8
 800a80c:	af00      	add	r7, sp, #0
 800a80e:	6078      	str	r0, [r7, #4]
 800a810:	6039      	str	r1, [r7, #0]
 800a812:	687b      	ldr	r3, [r7, #4]
 800a814:	4a26      	ldr	r2, [pc, #152]	; (800a8b0 <I2C_ITListenCplt+0xa8>)
 800a816:	62da      	str	r2, [r3, #44]	; 0x2c
 800a818:	687b      	ldr	r3, [r7, #4]
 800a81a:	2200      	movs	r2, #0
 800a81c:	631a      	str	r2, [r3, #48]	; 0x30
 800a81e:	687b      	ldr	r3, [r7, #4]
 800a820:	2220      	movs	r2, #32
 800a822:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800a826:	687b      	ldr	r3, [r7, #4]
 800a828:	2200      	movs	r2, #0
 800a82a:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 800a82e:	687b      	ldr	r3, [r7, #4]
 800a830:	2200      	movs	r2, #0
 800a832:	635a      	str	r2, [r3, #52]	; 0x34
 800a834:	683b      	ldr	r3, [r7, #0]
 800a836:	089b      	lsrs	r3, r3, #2
 800a838:	f003 0301 	and.w	r3, r3, #1
 800a83c:	2b00      	cmp	r3, #0
 800a83e:	d022      	beq.n	800a886 <I2C_ITListenCplt+0x7e>
 800a840:	687b      	ldr	r3, [r7, #4]
 800a842:	681b      	ldr	r3, [r3, #0]
 800a844:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 800a846:	687b      	ldr	r3, [r7, #4]
 800a848:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a84a:	b2d2      	uxtb	r2, r2
 800a84c:	701a      	strb	r2, [r3, #0]
 800a84e:	687b      	ldr	r3, [r7, #4]
 800a850:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a852:	1c5a      	adds	r2, r3, #1
 800a854:	687b      	ldr	r3, [r7, #4]
 800a856:	625a      	str	r2, [r3, #36]	; 0x24
 800a858:	687b      	ldr	r3, [r7, #4]
 800a85a:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 800a85c:	2b00      	cmp	r3, #0
 800a85e:	d012      	beq.n	800a886 <I2C_ITListenCplt+0x7e>
 800a860:	687b      	ldr	r3, [r7, #4]
 800a862:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 800a864:	3b01      	subs	r3, #1
 800a866:	b29a      	uxth	r2, r3
 800a868:	687b      	ldr	r3, [r7, #4]
 800a86a:	851a      	strh	r2, [r3, #40]	; 0x28
 800a86c:	687b      	ldr	r3, [r7, #4]
 800a86e:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800a870:	b29b      	uxth	r3, r3
 800a872:	3b01      	subs	r3, #1
 800a874:	b29a      	uxth	r2, r3
 800a876:	687b      	ldr	r3, [r7, #4]
 800a878:	855a      	strh	r2, [r3, #42]	; 0x2a
 800a87a:	687b      	ldr	r3, [r7, #4]
 800a87c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800a87e:	f043 0204 	orr.w	r2, r3, #4
 800a882:	687b      	ldr	r3, [r7, #4]
 800a884:	645a      	str	r2, [r3, #68]	; 0x44
 800a886:	f248 0103 	movw	r1, #32771	; 0x8003
 800a88a:	6878      	ldr	r0, [r7, #4]
 800a88c:	f000 fba8 	bl	800afe0 <I2C_Disable_IRQ>
 800a890:	687b      	ldr	r3, [r7, #4]
 800a892:	681b      	ldr	r3, [r3, #0]
 800a894:	2210      	movs	r2, #16
 800a896:	61da      	str	r2, [r3, #28]
 800a898:	687b      	ldr	r3, [r7, #4]
 800a89a:	2200      	movs	r2, #0
 800a89c:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800a8a0:	6878      	ldr	r0, [r7, #4]
 800a8a2:	f7ff f893 	bl	80099cc <HAL_I2C_ListenCpltCallback>
 800a8a6:	bf00      	nop
 800a8a8:	3708      	adds	r7, #8
 800a8aa:	46bd      	mov	sp, r7
 800a8ac:	bd80      	pop	{r7, pc}
 800a8ae:	bf00      	nop
 800a8b0:	ffff0000 	.word	0xffff0000

0800a8b4 <I2C_ITError>:
 800a8b4:	b580      	push	{r7, lr}
 800a8b6:	b084      	sub	sp, #16
 800a8b8:	af00      	add	r7, sp, #0
 800a8ba:	6078      	str	r0, [r7, #4]
 800a8bc:	6039      	str	r1, [r7, #0]
 800a8be:	687b      	ldr	r3, [r7, #4]
 800a8c0:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 800a8c4:	73fb      	strb	r3, [r7, #15]
 800a8c6:	687b      	ldr	r3, [r7, #4]
 800a8c8:	2200      	movs	r2, #0
 800a8ca:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 800a8ce:	687b      	ldr	r3, [r7, #4]
 800a8d0:	4a5d      	ldr	r2, [pc, #372]	; (800aa48 <I2C_ITError+0x194>)
 800a8d2:	62da      	str	r2, [r3, #44]	; 0x2c
 800a8d4:	687b      	ldr	r3, [r7, #4]
 800a8d6:	2200      	movs	r2, #0
 800a8d8:	855a      	strh	r2, [r3, #42]	; 0x2a
 800a8da:	687b      	ldr	r3, [r7, #4]
 800a8dc:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 800a8de:	683b      	ldr	r3, [r7, #0]
 800a8e0:	431a      	orrs	r2, r3
 800a8e2:	687b      	ldr	r3, [r7, #4]
 800a8e4:	645a      	str	r2, [r3, #68]	; 0x44
 800a8e6:	7bfb      	ldrb	r3, [r7, #15]
 800a8e8:	2b28      	cmp	r3, #40	; 0x28
 800a8ea:	d005      	beq.n	800a8f8 <I2C_ITError+0x44>
 800a8ec:	7bfb      	ldrb	r3, [r7, #15]
 800a8ee:	2b29      	cmp	r3, #41	; 0x29
 800a8f0:	d002      	beq.n	800a8f8 <I2C_ITError+0x44>
 800a8f2:	7bfb      	ldrb	r3, [r7, #15]
 800a8f4:	2b2a      	cmp	r3, #42	; 0x2a
 800a8f6:	d10b      	bne.n	800a910 <I2C_ITError+0x5c>
 800a8f8:	2103      	movs	r1, #3
 800a8fa:	6878      	ldr	r0, [r7, #4]
 800a8fc:	f000 fb70 	bl	800afe0 <I2C_Disable_IRQ>
 800a900:	687b      	ldr	r3, [r7, #4]
 800a902:	2228      	movs	r2, #40	; 0x28
 800a904:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800a908:	687b      	ldr	r3, [r7, #4]
 800a90a:	4a50      	ldr	r2, [pc, #320]	; (800aa4c <I2C_ITError+0x198>)
 800a90c:	635a      	str	r2, [r3, #52]	; 0x34
 800a90e:	e011      	b.n	800a934 <I2C_ITError+0x80>
 800a910:	f248 0103 	movw	r1, #32771	; 0x8003
 800a914:	6878      	ldr	r0, [r7, #4]
 800a916:	f000 fb63 	bl	800afe0 <I2C_Disable_IRQ>
 800a91a:	687b      	ldr	r3, [r7, #4]
 800a91c:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 800a920:	b2db      	uxtb	r3, r3
 800a922:	2b60      	cmp	r3, #96	; 0x60
 800a924:	d003      	beq.n	800a92e <I2C_ITError+0x7a>
 800a926:	687b      	ldr	r3, [r7, #4]
 800a928:	2220      	movs	r2, #32
 800a92a:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800a92e:	687b      	ldr	r3, [r7, #4]
 800a930:	2200      	movs	r2, #0
 800a932:	635a      	str	r2, [r3, #52]	; 0x34
 800a934:	687b      	ldr	r3, [r7, #4]
 800a936:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800a938:	60bb      	str	r3, [r7, #8]
 800a93a:	687b      	ldr	r3, [r7, #4]
 800a93c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800a93e:	2b00      	cmp	r3, #0
 800a940:	d039      	beq.n	800a9b6 <I2C_ITError+0x102>
 800a942:	68bb      	ldr	r3, [r7, #8]
 800a944:	2b11      	cmp	r3, #17
 800a946:	d002      	beq.n	800a94e <I2C_ITError+0x9a>
 800a948:	68bb      	ldr	r3, [r7, #8]
 800a94a:	2b21      	cmp	r3, #33	; 0x21
 800a94c:	d133      	bne.n	800a9b6 <I2C_ITError+0x102>
 800a94e:	687b      	ldr	r3, [r7, #4]
 800a950:	681b      	ldr	r3, [r3, #0]
 800a952:	681b      	ldr	r3, [r3, #0]
 800a954:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 800a958:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 800a95c:	d107      	bne.n	800a96e <I2C_ITError+0xba>
 800a95e:	687b      	ldr	r3, [r7, #4]
 800a960:	681b      	ldr	r3, [r3, #0]
 800a962:	681a      	ldr	r2, [r3, #0]
 800a964:	687b      	ldr	r3, [r7, #4]
 800a966:	681b      	ldr	r3, [r3, #0]
 800a968:	f422 4280 	bic.w	r2, r2, #16384	; 0x4000
 800a96c:	601a      	str	r2, [r3, #0]
 800a96e:	687b      	ldr	r3, [r7, #4]
 800a970:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800a972:	4618      	mov	r0, r3
 800a974:	f7fe f86a 	bl	8008a4c <HAL_DMA_GetState>
 800a978:	4603      	mov	r3, r0
 800a97a:	2b01      	cmp	r3, #1
 800a97c:	d017      	beq.n	800a9ae <I2C_ITError+0xfa>
 800a97e:	687b      	ldr	r3, [r7, #4]
 800a980:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800a982:	4a33      	ldr	r2, [pc, #204]	; (800aa50 <I2C_ITError+0x19c>)
 800a984:	639a      	str	r2, [r3, #56]	; 0x38
 800a986:	687b      	ldr	r3, [r7, #4]
 800a988:	2200      	movs	r2, #0
 800a98a:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800a98e:	687b      	ldr	r3, [r7, #4]
 800a990:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800a992:	4618      	mov	r0, r3
 800a994:	f7fd ff34 	bl	8008800 <HAL_DMA_Abort_IT>
 800a998:	4603      	mov	r3, r0
 800a99a:	2b00      	cmp	r3, #0
 800a99c:	d04d      	beq.n	800aa3a <I2C_ITError+0x186>
 800a99e:	687b      	ldr	r3, [r7, #4]
 800a9a0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800a9a2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800a9a4:	687a      	ldr	r2, [r7, #4]
 800a9a6:	6b92      	ldr	r2, [r2, #56]	; 0x38
 800a9a8:	4610      	mov	r0, r2
 800a9aa:	4798      	blx	r3
 800a9ac:	e045      	b.n	800aa3a <I2C_ITError+0x186>
 800a9ae:	6878      	ldr	r0, [r7, #4]
 800a9b0:	f000 f850 	bl	800aa54 <I2C_TreatErrorCallback>
 800a9b4:	e041      	b.n	800aa3a <I2C_ITError+0x186>
 800a9b6:	687b      	ldr	r3, [r7, #4]
 800a9b8:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800a9ba:	2b00      	cmp	r3, #0
 800a9bc:	d039      	beq.n	800aa32 <I2C_ITError+0x17e>
 800a9be:	68bb      	ldr	r3, [r7, #8]
 800a9c0:	2b12      	cmp	r3, #18
 800a9c2:	d002      	beq.n	800a9ca <I2C_ITError+0x116>
 800a9c4:	68bb      	ldr	r3, [r7, #8]
 800a9c6:	2b22      	cmp	r3, #34	; 0x22
 800a9c8:	d133      	bne.n	800aa32 <I2C_ITError+0x17e>
 800a9ca:	687b      	ldr	r3, [r7, #4]
 800a9cc:	681b      	ldr	r3, [r3, #0]
 800a9ce:	681b      	ldr	r3, [r3, #0]
 800a9d0:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 800a9d4:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 800a9d8:	d107      	bne.n	800a9ea <I2C_ITError+0x136>
 800a9da:	687b      	ldr	r3, [r7, #4]
 800a9dc:	681b      	ldr	r3, [r3, #0]
 800a9de:	681a      	ldr	r2, [r3, #0]
 800a9e0:	687b      	ldr	r3, [r7, #4]
 800a9e2:	681b      	ldr	r3, [r3, #0]
 800a9e4:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 800a9e8:	601a      	str	r2, [r3, #0]
 800a9ea:	687b      	ldr	r3, [r7, #4]
 800a9ec:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800a9ee:	4618      	mov	r0, r3
 800a9f0:	f7fe f82c 	bl	8008a4c <HAL_DMA_GetState>
 800a9f4:	4603      	mov	r3, r0
 800a9f6:	2b01      	cmp	r3, #1
 800a9f8:	d017      	beq.n	800aa2a <I2C_ITError+0x176>
 800a9fa:	687b      	ldr	r3, [r7, #4]
 800a9fc:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800a9fe:	4a14      	ldr	r2, [pc, #80]	; (800aa50 <I2C_ITError+0x19c>)
 800aa00:	639a      	str	r2, [r3, #56]	; 0x38
 800aa02:	687b      	ldr	r3, [r7, #4]
 800aa04:	2200      	movs	r2, #0
 800aa06:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800aa0a:	687b      	ldr	r3, [r7, #4]
 800aa0c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800aa0e:	4618      	mov	r0, r3
 800aa10:	f7fd fef6 	bl	8008800 <HAL_DMA_Abort_IT>
 800aa14:	4603      	mov	r3, r0
 800aa16:	2b00      	cmp	r3, #0
 800aa18:	d011      	beq.n	800aa3e <I2C_ITError+0x18a>
 800aa1a:	687b      	ldr	r3, [r7, #4]
 800aa1c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800aa1e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800aa20:	687a      	ldr	r2, [r7, #4]
 800aa22:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 800aa24:	4610      	mov	r0, r2
 800aa26:	4798      	blx	r3
 800aa28:	e009      	b.n	800aa3e <I2C_ITError+0x18a>
 800aa2a:	6878      	ldr	r0, [r7, #4]
 800aa2c:	f000 f812 	bl	800aa54 <I2C_TreatErrorCallback>
 800aa30:	e005      	b.n	800aa3e <I2C_ITError+0x18a>
 800aa32:	6878      	ldr	r0, [r7, #4]
 800aa34:	f000 f80e 	bl	800aa54 <I2C_TreatErrorCallback>
 800aa38:	e002      	b.n	800aa40 <I2C_ITError+0x18c>
 800aa3a:	bf00      	nop
 800aa3c:	e000      	b.n	800aa40 <I2C_ITError+0x18c>
 800aa3e:	bf00      	nop
 800aa40:	bf00      	nop
 800aa42:	3710      	adds	r7, #16
 800aa44:	46bd      	mov	sp, r7
 800aa46:	bd80      	pop	{r7, pc}
 800aa48:	ffff0000 	.word	0xffff0000
 800aa4c:	08009c77 	.word	0x08009c77
 800aa50:	0800ac43 	.word	0x0800ac43

0800aa54 <I2C_TreatErrorCallback>:
 800aa54:	b580      	push	{r7, lr}
 800aa56:	b082      	sub	sp, #8
 800aa58:	af00      	add	r7, sp, #0
 800aa5a:	6078      	str	r0, [r7, #4]
 800aa5c:	687b      	ldr	r3, [r7, #4]
 800aa5e:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 800aa62:	b2db      	uxtb	r3, r3
 800aa64:	2b60      	cmp	r3, #96	; 0x60
 800aa66:	d10e      	bne.n	800aa86 <I2C_TreatErrorCallback+0x32>
 800aa68:	687b      	ldr	r3, [r7, #4]
 800aa6a:	2220      	movs	r2, #32
 800aa6c:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800aa70:	687b      	ldr	r3, [r7, #4]
 800aa72:	2200      	movs	r2, #0
 800aa74:	631a      	str	r2, [r3, #48]	; 0x30
 800aa76:	687b      	ldr	r3, [r7, #4]
 800aa78:	2200      	movs	r2, #0
 800aa7a:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800aa7e:	6878      	ldr	r0, [r7, #4]
 800aa80:	f7fe ffc8 	bl	8009a14 <HAL_I2C_AbortCpltCallback>
 800aa84:	e009      	b.n	800aa9a <I2C_TreatErrorCallback+0x46>
 800aa86:	687b      	ldr	r3, [r7, #4]
 800aa88:	2200      	movs	r2, #0
 800aa8a:	631a      	str	r2, [r3, #48]	; 0x30
 800aa8c:	687b      	ldr	r3, [r7, #4]
 800aa8e:	2200      	movs	r2, #0
 800aa90:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800aa94:	6878      	ldr	r0, [r7, #4]
 800aa96:	f7fe ffb4 	bl	8009a02 <HAL_I2C_ErrorCallback>
 800aa9a:	bf00      	nop
 800aa9c:	3708      	adds	r7, #8
 800aa9e:	46bd      	mov	sp, r7
 800aaa0:	bd80      	pop	{r7, pc}

0800aaa2 <I2C_Flush_TXDR>:
 800aaa2:	b480      	push	{r7}
 800aaa4:	b083      	sub	sp, #12
 800aaa6:	af00      	add	r7, sp, #0
 800aaa8:	6078      	str	r0, [r7, #4]
 800aaaa:	687b      	ldr	r3, [r7, #4]
 800aaac:	681b      	ldr	r3, [r3, #0]
 800aaae:	699b      	ldr	r3, [r3, #24]
 800aab0:	f003 0302 	and.w	r3, r3, #2
 800aab4:	2b02      	cmp	r3, #2
 800aab6:	d103      	bne.n	800aac0 <I2C_Flush_TXDR+0x1e>
 800aab8:	687b      	ldr	r3, [r7, #4]
 800aaba:	681b      	ldr	r3, [r3, #0]
 800aabc:	2200      	movs	r2, #0
 800aabe:	629a      	str	r2, [r3, #40]	; 0x28
 800aac0:	687b      	ldr	r3, [r7, #4]
 800aac2:	681b      	ldr	r3, [r3, #0]
 800aac4:	699b      	ldr	r3, [r3, #24]
 800aac6:	f003 0301 	and.w	r3, r3, #1
 800aaca:	2b01      	cmp	r3, #1
 800aacc:	d007      	beq.n	800aade <I2C_Flush_TXDR+0x3c>
 800aace:	687b      	ldr	r3, [r7, #4]
 800aad0:	681b      	ldr	r3, [r3, #0]
 800aad2:	699a      	ldr	r2, [r3, #24]
 800aad4:	687b      	ldr	r3, [r7, #4]
 800aad6:	681b      	ldr	r3, [r3, #0]
 800aad8:	f042 0201 	orr.w	r2, r2, #1
 800aadc:	619a      	str	r2, [r3, #24]
 800aade:	bf00      	nop
 800aae0:	370c      	adds	r7, #12
 800aae2:	46bd      	mov	sp, r7
 800aae4:	bc80      	pop	{r7}
 800aae6:	4770      	bx	lr

0800aae8 <I2C_DMAMasterTransmitCplt>:
 800aae8:	b580      	push	{r7, lr}
 800aaea:	b084      	sub	sp, #16
 800aaec:	af00      	add	r7, sp, #0
 800aaee:	6078      	str	r0, [r7, #4]
 800aaf0:	687b      	ldr	r3, [r7, #4]
 800aaf2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800aaf4:	60fb      	str	r3, [r7, #12]
 800aaf6:	68fb      	ldr	r3, [r7, #12]
 800aaf8:	681b      	ldr	r3, [r3, #0]
 800aafa:	681a      	ldr	r2, [r3, #0]
 800aafc:	68fb      	ldr	r3, [r7, #12]
 800aafe:	681b      	ldr	r3, [r3, #0]
 800ab00:	f422 4280 	bic.w	r2, r2, #16384	; 0x4000
 800ab04:	601a      	str	r2, [r3, #0]
 800ab06:	68fb      	ldr	r3, [r7, #12]
 800ab08:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800ab0a:	b29b      	uxth	r3, r3
 800ab0c:	2b00      	cmp	r3, #0
 800ab0e:	d104      	bne.n	800ab1a <I2C_DMAMasterTransmitCplt+0x32>
 800ab10:	2120      	movs	r1, #32
 800ab12:	68f8      	ldr	r0, [r7, #12]
 800ab14:	f000 fa02 	bl	800af1c <I2C_Enable_IRQ>
 800ab18:	e02d      	b.n	800ab76 <I2C_DMAMasterTransmitCplt+0x8e>
 800ab1a:	68fb      	ldr	r3, [r7, #12]
 800ab1c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800ab1e:	68fa      	ldr	r2, [r7, #12]
 800ab20:	8d12      	ldrh	r2, [r2, #40]	; 0x28
 800ab22:	441a      	add	r2, r3
 800ab24:	68fb      	ldr	r3, [r7, #12]
 800ab26:	625a      	str	r2, [r3, #36]	; 0x24
 800ab28:	68fb      	ldr	r3, [r7, #12]
 800ab2a:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800ab2c:	b29b      	uxth	r3, r3
 800ab2e:	2bff      	cmp	r3, #255	; 0xff
 800ab30:	d903      	bls.n	800ab3a <I2C_DMAMasterTransmitCplt+0x52>
 800ab32:	68fb      	ldr	r3, [r7, #12]
 800ab34:	22ff      	movs	r2, #255	; 0xff
 800ab36:	851a      	strh	r2, [r3, #40]	; 0x28
 800ab38:	e004      	b.n	800ab44 <I2C_DMAMasterTransmitCplt+0x5c>
 800ab3a:	68fb      	ldr	r3, [r7, #12]
 800ab3c:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800ab3e:	b29a      	uxth	r2, r3
 800ab40:	68fb      	ldr	r3, [r7, #12]
 800ab42:	851a      	strh	r2, [r3, #40]	; 0x28
 800ab44:	68fb      	ldr	r3, [r7, #12]
 800ab46:	6b98      	ldr	r0, [r3, #56]	; 0x38
 800ab48:	68fb      	ldr	r3, [r7, #12]
 800ab4a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800ab4c:	4619      	mov	r1, r3
 800ab4e:	68fb      	ldr	r3, [r7, #12]
 800ab50:	681b      	ldr	r3, [r3, #0]
 800ab52:	3328      	adds	r3, #40	; 0x28
 800ab54:	461a      	mov	r2, r3
 800ab56:	68fb      	ldr	r3, [r7, #12]
 800ab58:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 800ab5a:	f7fd fd75 	bl	8008648 <HAL_DMA_Start_IT>
 800ab5e:	4603      	mov	r3, r0
 800ab60:	2b00      	cmp	r3, #0
 800ab62:	d004      	beq.n	800ab6e <I2C_DMAMasterTransmitCplt+0x86>
 800ab64:	2110      	movs	r1, #16
 800ab66:	68f8      	ldr	r0, [r7, #12]
 800ab68:	f7ff fea4 	bl	800a8b4 <I2C_ITError>
 800ab6c:	e003      	b.n	800ab76 <I2C_DMAMasterTransmitCplt+0x8e>
 800ab6e:	2140      	movs	r1, #64	; 0x40
 800ab70:	68f8      	ldr	r0, [r7, #12]
 800ab72:	f000 f9d3 	bl	800af1c <I2C_Enable_IRQ>
 800ab76:	bf00      	nop
 800ab78:	3710      	adds	r7, #16
 800ab7a:	46bd      	mov	sp, r7
 800ab7c:	bd80      	pop	{r7, pc}

0800ab7e <I2C_DMAMasterReceiveCplt>:
 800ab7e:	b580      	push	{r7, lr}
 800ab80:	b084      	sub	sp, #16
 800ab82:	af00      	add	r7, sp, #0
 800ab84:	6078      	str	r0, [r7, #4]
 800ab86:	687b      	ldr	r3, [r7, #4]
 800ab88:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800ab8a:	60fb      	str	r3, [r7, #12]
 800ab8c:	68fb      	ldr	r3, [r7, #12]
 800ab8e:	681b      	ldr	r3, [r3, #0]
 800ab90:	681a      	ldr	r2, [r3, #0]
 800ab92:	68fb      	ldr	r3, [r7, #12]
 800ab94:	681b      	ldr	r3, [r3, #0]
 800ab96:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 800ab9a:	601a      	str	r2, [r3, #0]
 800ab9c:	68fb      	ldr	r3, [r7, #12]
 800ab9e:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800aba0:	b29b      	uxth	r3, r3
 800aba2:	2b00      	cmp	r3, #0
 800aba4:	d104      	bne.n	800abb0 <I2C_DMAMasterReceiveCplt+0x32>
 800aba6:	2120      	movs	r1, #32
 800aba8:	68f8      	ldr	r0, [r7, #12]
 800abaa:	f000 f9b7 	bl	800af1c <I2C_Enable_IRQ>
 800abae:	e02d      	b.n	800ac0c <I2C_DMAMasterReceiveCplt+0x8e>
 800abb0:	68fb      	ldr	r3, [r7, #12]
 800abb2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800abb4:	68fa      	ldr	r2, [r7, #12]
 800abb6:	8d12      	ldrh	r2, [r2, #40]	; 0x28
 800abb8:	441a      	add	r2, r3
 800abba:	68fb      	ldr	r3, [r7, #12]
 800abbc:	625a      	str	r2, [r3, #36]	; 0x24
 800abbe:	68fb      	ldr	r3, [r7, #12]
 800abc0:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800abc2:	b29b      	uxth	r3, r3
 800abc4:	2bff      	cmp	r3, #255	; 0xff
 800abc6:	d903      	bls.n	800abd0 <I2C_DMAMasterReceiveCplt+0x52>
 800abc8:	68fb      	ldr	r3, [r7, #12]
 800abca:	22ff      	movs	r2, #255	; 0xff
 800abcc:	851a      	strh	r2, [r3, #40]	; 0x28
 800abce:	e004      	b.n	800abda <I2C_DMAMasterReceiveCplt+0x5c>
 800abd0:	68fb      	ldr	r3, [r7, #12]
 800abd2:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800abd4:	b29a      	uxth	r2, r3
 800abd6:	68fb      	ldr	r3, [r7, #12]
 800abd8:	851a      	strh	r2, [r3, #40]	; 0x28
 800abda:	68fb      	ldr	r3, [r7, #12]
 800abdc:	6bd8      	ldr	r0, [r3, #60]	; 0x3c
 800abde:	68fb      	ldr	r3, [r7, #12]
 800abe0:	681b      	ldr	r3, [r3, #0]
 800abe2:	3324      	adds	r3, #36	; 0x24
 800abe4:	4619      	mov	r1, r3
 800abe6:	68fb      	ldr	r3, [r7, #12]
 800abe8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800abea:	461a      	mov	r2, r3
 800abec:	68fb      	ldr	r3, [r7, #12]
 800abee:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 800abf0:	f7fd fd2a 	bl	8008648 <HAL_DMA_Start_IT>
 800abf4:	4603      	mov	r3, r0
 800abf6:	2b00      	cmp	r3, #0
 800abf8:	d004      	beq.n	800ac04 <I2C_DMAMasterReceiveCplt+0x86>
 800abfa:	2110      	movs	r1, #16
 800abfc:	68f8      	ldr	r0, [r7, #12]
 800abfe:	f7ff fe59 	bl	800a8b4 <I2C_ITError>
 800ac02:	e003      	b.n	800ac0c <I2C_DMAMasterReceiveCplt+0x8e>
 800ac04:	2140      	movs	r1, #64	; 0x40
 800ac06:	68f8      	ldr	r0, [r7, #12]
 800ac08:	f000 f988 	bl	800af1c <I2C_Enable_IRQ>
 800ac0c:	bf00      	nop
 800ac0e:	3710      	adds	r7, #16
 800ac10:	46bd      	mov	sp, r7
 800ac12:	bd80      	pop	{r7, pc}

0800ac14 <I2C_DMAError>:
 800ac14:	b580      	push	{r7, lr}
 800ac16:	b084      	sub	sp, #16
 800ac18:	af00      	add	r7, sp, #0
 800ac1a:	6078      	str	r0, [r7, #4]
 800ac1c:	687b      	ldr	r3, [r7, #4]
 800ac1e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800ac20:	60fb      	str	r3, [r7, #12]
 800ac22:	68fb      	ldr	r3, [r7, #12]
 800ac24:	681b      	ldr	r3, [r3, #0]
 800ac26:	685a      	ldr	r2, [r3, #4]
 800ac28:	68fb      	ldr	r3, [r7, #12]
 800ac2a:	681b      	ldr	r3, [r3, #0]
 800ac2c:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 800ac30:	605a      	str	r2, [r3, #4]
 800ac32:	2110      	movs	r1, #16
 800ac34:	68f8      	ldr	r0, [r7, #12]
 800ac36:	f7ff fe3d 	bl	800a8b4 <I2C_ITError>
 800ac3a:	bf00      	nop
 800ac3c:	3710      	adds	r7, #16
 800ac3e:	46bd      	mov	sp, r7
 800ac40:	bd80      	pop	{r7, pc}

0800ac42 <I2C_DMAAbort>:
 800ac42:	b580      	push	{r7, lr}
 800ac44:	b084      	sub	sp, #16
 800ac46:	af00      	add	r7, sp, #0
 800ac48:	6078      	str	r0, [r7, #4]
 800ac4a:	687b      	ldr	r3, [r7, #4]
 800ac4c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800ac4e:	60fb      	str	r3, [r7, #12]
 800ac50:	68fb      	ldr	r3, [r7, #12]
 800ac52:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800ac54:	2b00      	cmp	r3, #0
 800ac56:	d003      	beq.n	800ac60 <I2C_DMAAbort+0x1e>
 800ac58:	68fb      	ldr	r3, [r7, #12]
 800ac5a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800ac5c:	2200      	movs	r2, #0
 800ac5e:	639a      	str	r2, [r3, #56]	; 0x38
 800ac60:	68fb      	ldr	r3, [r7, #12]
 800ac62:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800ac64:	2b00      	cmp	r3, #0
 800ac66:	d003      	beq.n	800ac70 <I2C_DMAAbort+0x2e>
 800ac68:	68fb      	ldr	r3, [r7, #12]
 800ac6a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800ac6c:	2200      	movs	r2, #0
 800ac6e:	639a      	str	r2, [r3, #56]	; 0x38
 800ac70:	68f8      	ldr	r0, [r7, #12]
 800ac72:	f7ff feef 	bl	800aa54 <I2C_TreatErrorCallback>
 800ac76:	bf00      	nop
 800ac78:	3710      	adds	r7, #16
 800ac7a:	46bd      	mov	sp, r7
 800ac7c:	bd80      	pop	{r7, pc}

0800ac7e <I2C_WaitOnFlagUntilTimeout>:
 800ac7e:	b580      	push	{r7, lr}
 800ac80:	b084      	sub	sp, #16
 800ac82:	af00      	add	r7, sp, #0
 800ac84:	60f8      	str	r0, [r7, #12]
 800ac86:	60b9      	str	r1, [r7, #8]
 800ac88:	603b      	str	r3, [r7, #0]
 800ac8a:	4613      	mov	r3, r2
 800ac8c:	71fb      	strb	r3, [r7, #7]
 800ac8e:	e022      	b.n	800acd6 <I2C_WaitOnFlagUntilTimeout+0x58>
 800ac90:	683b      	ldr	r3, [r7, #0]
 800ac92:	f1b3 3fff 	cmp.w	r3, #4294967295
 800ac96:	d01e      	beq.n	800acd6 <I2C_WaitOnFlagUntilTimeout+0x58>
 800ac98:	f7fb fb9c 	bl	80063d4 <HAL_GetTick>
 800ac9c:	4602      	mov	r2, r0
 800ac9e:	69bb      	ldr	r3, [r7, #24]
 800aca0:	1ad3      	subs	r3, r2, r3
 800aca2:	683a      	ldr	r2, [r7, #0]
 800aca4:	429a      	cmp	r2, r3
 800aca6:	d302      	bcc.n	800acae <I2C_WaitOnFlagUntilTimeout+0x30>
 800aca8:	683b      	ldr	r3, [r7, #0]
 800acaa:	2b00      	cmp	r3, #0
 800acac:	d113      	bne.n	800acd6 <I2C_WaitOnFlagUntilTimeout+0x58>
 800acae:	68fb      	ldr	r3, [r7, #12]
 800acb0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800acb2:	f043 0220 	orr.w	r2, r3, #32
 800acb6:	68fb      	ldr	r3, [r7, #12]
 800acb8:	645a      	str	r2, [r3, #68]	; 0x44
 800acba:	68fb      	ldr	r3, [r7, #12]
 800acbc:	2220      	movs	r2, #32
 800acbe:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800acc2:	68fb      	ldr	r3, [r7, #12]
 800acc4:	2200      	movs	r2, #0
 800acc6:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 800acca:	68fb      	ldr	r3, [r7, #12]
 800accc:	2200      	movs	r2, #0
 800acce:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800acd2:	2301      	movs	r3, #1
 800acd4:	e00f      	b.n	800acf6 <I2C_WaitOnFlagUntilTimeout+0x78>
 800acd6:	68fb      	ldr	r3, [r7, #12]
 800acd8:	681b      	ldr	r3, [r3, #0]
 800acda:	699a      	ldr	r2, [r3, #24]
 800acdc:	68bb      	ldr	r3, [r7, #8]
 800acde:	4013      	ands	r3, r2
 800ace0:	68ba      	ldr	r2, [r7, #8]
 800ace2:	429a      	cmp	r2, r3
 800ace4:	bf0c      	ite	eq
 800ace6:	2301      	moveq	r3, #1
 800ace8:	2300      	movne	r3, #0
 800acea:	b2db      	uxtb	r3, r3
 800acec:	461a      	mov	r2, r3
 800acee:	79fb      	ldrb	r3, [r7, #7]
 800acf0:	429a      	cmp	r2, r3
 800acf2:	d0cd      	beq.n	800ac90 <I2C_WaitOnFlagUntilTimeout+0x12>
 800acf4:	2300      	movs	r3, #0
 800acf6:	4618      	mov	r0, r3
 800acf8:	3710      	adds	r7, #16
 800acfa:	46bd      	mov	sp, r7
 800acfc:	bd80      	pop	{r7, pc}

0800acfe <I2C_WaitOnTXISFlagUntilTimeout>:
 800acfe:	b580      	push	{r7, lr}
 800ad00:	b084      	sub	sp, #16
 800ad02:	af00      	add	r7, sp, #0
 800ad04:	60f8      	str	r0, [r7, #12]
 800ad06:	60b9      	str	r1, [r7, #8]
 800ad08:	607a      	str	r2, [r7, #4]
 800ad0a:	e02c      	b.n	800ad66 <I2C_WaitOnTXISFlagUntilTimeout+0x68>
 800ad0c:	687a      	ldr	r2, [r7, #4]
 800ad0e:	68b9      	ldr	r1, [r7, #8]
 800ad10:	68f8      	ldr	r0, [r7, #12]
 800ad12:	f000 f871 	bl	800adf8 <I2C_IsAcknowledgeFailed>
 800ad16:	4603      	mov	r3, r0
 800ad18:	2b00      	cmp	r3, #0
 800ad1a:	d001      	beq.n	800ad20 <I2C_WaitOnTXISFlagUntilTimeout+0x22>
 800ad1c:	2301      	movs	r3, #1
 800ad1e:	e02a      	b.n	800ad76 <I2C_WaitOnTXISFlagUntilTimeout+0x78>
 800ad20:	68bb      	ldr	r3, [r7, #8]
 800ad22:	f1b3 3fff 	cmp.w	r3, #4294967295
 800ad26:	d01e      	beq.n	800ad66 <I2C_WaitOnTXISFlagUntilTimeout+0x68>
 800ad28:	f7fb fb54 	bl	80063d4 <HAL_GetTick>
 800ad2c:	4602      	mov	r2, r0
 800ad2e:	687b      	ldr	r3, [r7, #4]
 800ad30:	1ad3      	subs	r3, r2, r3
 800ad32:	68ba      	ldr	r2, [r7, #8]
 800ad34:	429a      	cmp	r2, r3
 800ad36:	d302      	bcc.n	800ad3e <I2C_WaitOnTXISFlagUntilTimeout+0x40>
 800ad38:	68bb      	ldr	r3, [r7, #8]
 800ad3a:	2b00      	cmp	r3, #0
 800ad3c:	d113      	bne.n	800ad66 <I2C_WaitOnTXISFlagUntilTimeout+0x68>
 800ad3e:	68fb      	ldr	r3, [r7, #12]
 800ad40:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800ad42:	f043 0220 	orr.w	r2, r3, #32
 800ad46:	68fb      	ldr	r3, [r7, #12]
 800ad48:	645a      	str	r2, [r3, #68]	; 0x44
 800ad4a:	68fb      	ldr	r3, [r7, #12]
 800ad4c:	2220      	movs	r2, #32
 800ad4e:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800ad52:	68fb      	ldr	r3, [r7, #12]
 800ad54:	2200      	movs	r2, #0
 800ad56:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 800ad5a:	68fb      	ldr	r3, [r7, #12]
 800ad5c:	2200      	movs	r2, #0
 800ad5e:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800ad62:	2301      	movs	r3, #1
 800ad64:	e007      	b.n	800ad76 <I2C_WaitOnTXISFlagUntilTimeout+0x78>
 800ad66:	68fb      	ldr	r3, [r7, #12]
 800ad68:	681b      	ldr	r3, [r3, #0]
 800ad6a:	699b      	ldr	r3, [r3, #24]
 800ad6c:	f003 0302 	and.w	r3, r3, #2
 800ad70:	2b02      	cmp	r3, #2
 800ad72:	d1cb      	bne.n	800ad0c <I2C_WaitOnTXISFlagUntilTimeout+0xe>
 800ad74:	2300      	movs	r3, #0
 800ad76:	4618      	mov	r0, r3
 800ad78:	3710      	adds	r7, #16
 800ad7a:	46bd      	mov	sp, r7
 800ad7c:	bd80      	pop	{r7, pc}

0800ad7e <I2C_WaitOnSTOPFlagUntilTimeout>:
 800ad7e:	b580      	push	{r7, lr}
 800ad80:	b084      	sub	sp, #16
 800ad82:	af00      	add	r7, sp, #0
 800ad84:	60f8      	str	r0, [r7, #12]
 800ad86:	60b9      	str	r1, [r7, #8]
 800ad88:	607a      	str	r2, [r7, #4]
 800ad8a:	e028      	b.n	800adde <I2C_WaitOnSTOPFlagUntilTimeout+0x60>
 800ad8c:	687a      	ldr	r2, [r7, #4]
 800ad8e:	68b9      	ldr	r1, [r7, #8]
 800ad90:	68f8      	ldr	r0, [r7, #12]
 800ad92:	f000 f831 	bl	800adf8 <I2C_IsAcknowledgeFailed>
 800ad96:	4603      	mov	r3, r0
 800ad98:	2b00      	cmp	r3, #0
 800ad9a:	d001      	beq.n	800ada0 <I2C_WaitOnSTOPFlagUntilTimeout+0x22>
 800ad9c:	2301      	movs	r3, #1
 800ad9e:	e026      	b.n	800adee <I2C_WaitOnSTOPFlagUntilTimeout+0x70>
 800ada0:	f7fb fb18 	bl	80063d4 <HAL_GetTick>
 800ada4:	4602      	mov	r2, r0
 800ada6:	687b      	ldr	r3, [r7, #4]
 800ada8:	1ad3      	subs	r3, r2, r3
 800adaa:	68ba      	ldr	r2, [r7, #8]
 800adac:	429a      	cmp	r2, r3
 800adae:	d302      	bcc.n	800adb6 <I2C_WaitOnSTOPFlagUntilTimeout+0x38>
 800adb0:	68bb      	ldr	r3, [r7, #8]
 800adb2:	2b00      	cmp	r3, #0
 800adb4:	d113      	bne.n	800adde <I2C_WaitOnSTOPFlagUntilTimeout+0x60>
 800adb6:	68fb      	ldr	r3, [r7, #12]
 800adb8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800adba:	f043 0220 	orr.w	r2, r3, #32
 800adbe:	68fb      	ldr	r3, [r7, #12]
 800adc0:	645a      	str	r2, [r3, #68]	; 0x44
 800adc2:	68fb      	ldr	r3, [r7, #12]
 800adc4:	2220      	movs	r2, #32
 800adc6:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800adca:	68fb      	ldr	r3, [r7, #12]
 800adcc:	2200      	movs	r2, #0
 800adce:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 800add2:	68fb      	ldr	r3, [r7, #12]
 800add4:	2200      	movs	r2, #0
 800add6:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800adda:	2301      	movs	r3, #1
 800addc:	e007      	b.n	800adee <I2C_WaitOnSTOPFlagUntilTimeout+0x70>
 800adde:	68fb      	ldr	r3, [r7, #12]
 800ade0:	681b      	ldr	r3, [r3, #0]
 800ade2:	699b      	ldr	r3, [r3, #24]
 800ade4:	f003 0320 	and.w	r3, r3, #32
 800ade8:	2b20      	cmp	r3, #32
 800adea:	d1cf      	bne.n	800ad8c <I2C_WaitOnSTOPFlagUntilTimeout+0xe>
 800adec:	2300      	movs	r3, #0
 800adee:	4618      	mov	r0, r3
 800adf0:	3710      	adds	r7, #16
 800adf2:	46bd      	mov	sp, r7
 800adf4:	bd80      	pop	{r7, pc}
	...

0800adf8 <I2C_IsAcknowledgeFailed>:
 800adf8:	b580      	push	{r7, lr}
 800adfa:	b084      	sub	sp, #16
 800adfc:	af00      	add	r7, sp, #0
 800adfe:	60f8      	str	r0, [r7, #12]
 800ae00:	60b9      	str	r1, [r7, #8]
 800ae02:	607a      	str	r2, [r7, #4]
 800ae04:	68fb      	ldr	r3, [r7, #12]
 800ae06:	681b      	ldr	r3, [r3, #0]
 800ae08:	699b      	ldr	r3, [r3, #24]
 800ae0a:	f003 0310 	and.w	r3, r3, #16
 800ae0e:	2b10      	cmp	r3, #16
 800ae10:	d151      	bne.n	800aeb6 <I2C_IsAcknowledgeFailed+0xbe>
 800ae12:	e022      	b.n	800ae5a <I2C_IsAcknowledgeFailed+0x62>
 800ae14:	68bb      	ldr	r3, [r7, #8]
 800ae16:	f1b3 3fff 	cmp.w	r3, #4294967295
 800ae1a:	d01e      	beq.n	800ae5a <I2C_IsAcknowledgeFailed+0x62>
 800ae1c:	f7fb fada 	bl	80063d4 <HAL_GetTick>
 800ae20:	4602      	mov	r2, r0
 800ae22:	687b      	ldr	r3, [r7, #4]
 800ae24:	1ad3      	subs	r3, r2, r3
 800ae26:	68ba      	ldr	r2, [r7, #8]
 800ae28:	429a      	cmp	r2, r3
 800ae2a:	d302      	bcc.n	800ae32 <I2C_IsAcknowledgeFailed+0x3a>
 800ae2c:	68bb      	ldr	r3, [r7, #8]
 800ae2e:	2b00      	cmp	r3, #0
 800ae30:	d113      	bne.n	800ae5a <I2C_IsAcknowledgeFailed+0x62>
 800ae32:	68fb      	ldr	r3, [r7, #12]
 800ae34:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800ae36:	f043 0220 	orr.w	r2, r3, #32
 800ae3a:	68fb      	ldr	r3, [r7, #12]
 800ae3c:	645a      	str	r2, [r3, #68]	; 0x44
 800ae3e:	68fb      	ldr	r3, [r7, #12]
 800ae40:	2220      	movs	r2, #32
 800ae42:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800ae46:	68fb      	ldr	r3, [r7, #12]
 800ae48:	2200      	movs	r2, #0
 800ae4a:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 800ae4e:	68fb      	ldr	r3, [r7, #12]
 800ae50:	2200      	movs	r2, #0
 800ae52:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800ae56:	2301      	movs	r3, #1
 800ae58:	e02e      	b.n	800aeb8 <I2C_IsAcknowledgeFailed+0xc0>
 800ae5a:	68fb      	ldr	r3, [r7, #12]
 800ae5c:	681b      	ldr	r3, [r3, #0]
 800ae5e:	699b      	ldr	r3, [r3, #24]
 800ae60:	f003 0320 	and.w	r3, r3, #32
 800ae64:	2b20      	cmp	r3, #32
 800ae66:	d1d5      	bne.n	800ae14 <I2C_IsAcknowledgeFailed+0x1c>
 800ae68:	68fb      	ldr	r3, [r7, #12]
 800ae6a:	681b      	ldr	r3, [r3, #0]
 800ae6c:	2210      	movs	r2, #16
 800ae6e:	61da      	str	r2, [r3, #28]
 800ae70:	68fb      	ldr	r3, [r7, #12]
 800ae72:	681b      	ldr	r3, [r3, #0]
 800ae74:	2220      	movs	r2, #32
 800ae76:	61da      	str	r2, [r3, #28]
 800ae78:	68f8      	ldr	r0, [r7, #12]
 800ae7a:	f7ff fe12 	bl	800aaa2 <I2C_Flush_TXDR>
 800ae7e:	68fb      	ldr	r3, [r7, #12]
 800ae80:	681b      	ldr	r3, [r3, #0]
 800ae82:	6859      	ldr	r1, [r3, #4]
 800ae84:	68fb      	ldr	r3, [r7, #12]
 800ae86:	681a      	ldr	r2, [r3, #0]
 800ae88:	4b0d      	ldr	r3, [pc, #52]	; (800aec0 <I2C_IsAcknowledgeFailed+0xc8>)
 800ae8a:	400b      	ands	r3, r1
 800ae8c:	6053      	str	r3, [r2, #4]
 800ae8e:	68fb      	ldr	r3, [r7, #12]
 800ae90:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800ae92:	f043 0204 	orr.w	r2, r3, #4
 800ae96:	68fb      	ldr	r3, [r7, #12]
 800ae98:	645a      	str	r2, [r3, #68]	; 0x44
 800ae9a:	68fb      	ldr	r3, [r7, #12]
 800ae9c:	2220      	movs	r2, #32
 800ae9e:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800aea2:	68fb      	ldr	r3, [r7, #12]
 800aea4:	2200      	movs	r2, #0
 800aea6:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 800aeaa:	68fb      	ldr	r3, [r7, #12]
 800aeac:	2200      	movs	r2, #0
 800aeae:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800aeb2:	2301      	movs	r3, #1
 800aeb4:	e000      	b.n	800aeb8 <I2C_IsAcknowledgeFailed+0xc0>
 800aeb6:	2300      	movs	r3, #0
 800aeb8:	4618      	mov	r0, r3
 800aeba:	3710      	adds	r7, #16
 800aebc:	46bd      	mov	sp, r7
 800aebe:	bd80      	pop	{r7, pc}
 800aec0:	fe00e800 	.word	0xfe00e800

0800aec4 <I2C_TransferConfig>:
 800aec4:	b480      	push	{r7}
 800aec6:	b085      	sub	sp, #20
 800aec8:	af00      	add	r7, sp, #0
 800aeca:	60f8      	str	r0, [r7, #12]
 800aecc:	607b      	str	r3, [r7, #4]
 800aece:	460b      	mov	r3, r1
 800aed0:	817b      	strh	r3, [r7, #10]
 800aed2:	4613      	mov	r3, r2
 800aed4:	727b      	strb	r3, [r7, #9]
 800aed6:	68fb      	ldr	r3, [r7, #12]
 800aed8:	681b      	ldr	r3, [r3, #0]
 800aeda:	685a      	ldr	r2, [r3, #4]
 800aedc:	69bb      	ldr	r3, [r7, #24]
 800aede:	0d5b      	lsrs	r3, r3, #21
 800aee0:	f403 6180 	and.w	r1, r3, #1024	; 0x400
 800aee4:	4b0c      	ldr	r3, [pc, #48]	; (800af18 <I2C_TransferConfig+0x54>)
 800aee6:	430b      	orrs	r3, r1
 800aee8:	43db      	mvns	r3, r3
 800aeea:	ea02 0103 	and.w	r1, r2, r3
 800aeee:	897b      	ldrh	r3, [r7, #10]
 800aef0:	f3c3 0209 	ubfx	r2, r3, #0, #10
 800aef4:	7a7b      	ldrb	r3, [r7, #9]
 800aef6:	041b      	lsls	r3, r3, #16
 800aef8:	f403 037f 	and.w	r3, r3, #16711680	; 0xff0000
 800aefc:	431a      	orrs	r2, r3
 800aefe:	687b      	ldr	r3, [r7, #4]
 800af00:	431a      	orrs	r2, r3
 800af02:	69bb      	ldr	r3, [r7, #24]
 800af04:	431a      	orrs	r2, r3
 800af06:	68fb      	ldr	r3, [r7, #12]
 800af08:	681b      	ldr	r3, [r3, #0]
 800af0a:	430a      	orrs	r2, r1
 800af0c:	605a      	str	r2, [r3, #4]
 800af0e:	bf00      	nop
 800af10:	3714      	adds	r7, #20
 800af12:	46bd      	mov	sp, r7
 800af14:	bc80      	pop	{r7}
 800af16:	4770      	bx	lr
 800af18:	03ff63ff 	.word	0x03ff63ff

0800af1c <I2C_Enable_IRQ>:
 800af1c:	b480      	push	{r7}
 800af1e:	b085      	sub	sp, #20
 800af20:	af00      	add	r7, sp, #0
 800af22:	6078      	str	r0, [r7, #4]
 800af24:	460b      	mov	r3, r1
 800af26:	807b      	strh	r3, [r7, #2]
 800af28:	2300      	movs	r3, #0
 800af2a:	60fb      	str	r3, [r7, #12]
 800af2c:	687b      	ldr	r3, [r7, #4]
 800af2e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800af30:	4a29      	ldr	r2, [pc, #164]	; (800afd8 <I2C_Enable_IRQ+0xbc>)
 800af32:	4293      	cmp	r3, r2
 800af34:	d004      	beq.n	800af40 <I2C_Enable_IRQ+0x24>
 800af36:	687b      	ldr	r3, [r7, #4]
 800af38:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800af3a:	4a28      	ldr	r2, [pc, #160]	; (800afdc <I2C_Enable_IRQ+0xc0>)
 800af3c:	4293      	cmp	r3, r2
 800af3e:	d11d      	bne.n	800af7c <I2C_Enable_IRQ+0x60>
 800af40:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 800af44:	2b00      	cmp	r3, #0
 800af46:	da03      	bge.n	800af50 <I2C_Enable_IRQ+0x34>
 800af48:	68fb      	ldr	r3, [r7, #12]
 800af4a:	f043 03b8 	orr.w	r3, r3, #184	; 0xb8
 800af4e:	60fb      	str	r3, [r7, #12]
 800af50:	887b      	ldrh	r3, [r7, #2]
 800af52:	2b10      	cmp	r3, #16
 800af54:	d103      	bne.n	800af5e <I2C_Enable_IRQ+0x42>
 800af56:	68fb      	ldr	r3, [r7, #12]
 800af58:	f043 0390 	orr.w	r3, r3, #144	; 0x90
 800af5c:	60fb      	str	r3, [r7, #12]
 800af5e:	887b      	ldrh	r3, [r7, #2]
 800af60:	2b20      	cmp	r3, #32
 800af62:	d103      	bne.n	800af6c <I2C_Enable_IRQ+0x50>
 800af64:	68fb      	ldr	r3, [r7, #12]
 800af66:	f043 0360 	orr.w	r3, r3, #96	; 0x60
 800af6a:	60fb      	str	r3, [r7, #12]
 800af6c:	887b      	ldrh	r3, [r7, #2]
 800af6e:	2b40      	cmp	r3, #64	; 0x40
 800af70:	d125      	bne.n	800afbe <I2C_Enable_IRQ+0xa2>
 800af72:	68fb      	ldr	r3, [r7, #12]
 800af74:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800af78:	60fb      	str	r3, [r7, #12]
 800af7a:	e020      	b.n	800afbe <I2C_Enable_IRQ+0xa2>
 800af7c:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 800af80:	2b00      	cmp	r3, #0
 800af82:	da03      	bge.n	800af8c <I2C_Enable_IRQ+0x70>
 800af84:	68fb      	ldr	r3, [r7, #12]
 800af86:	f043 03b8 	orr.w	r3, r3, #184	; 0xb8
 800af8a:	60fb      	str	r3, [r7, #12]
 800af8c:	887b      	ldrh	r3, [r7, #2]
 800af8e:	f003 0301 	and.w	r3, r3, #1
 800af92:	2b00      	cmp	r3, #0
 800af94:	d003      	beq.n	800af9e <I2C_Enable_IRQ+0x82>
 800af96:	68fb      	ldr	r3, [r7, #12]
 800af98:	f043 03f2 	orr.w	r3, r3, #242	; 0xf2
 800af9c:	60fb      	str	r3, [r7, #12]
 800af9e:	887b      	ldrh	r3, [r7, #2]
 800afa0:	f003 0302 	and.w	r3, r3, #2
 800afa4:	2b00      	cmp	r3, #0
 800afa6:	d003      	beq.n	800afb0 <I2C_Enable_IRQ+0x94>
 800afa8:	68fb      	ldr	r3, [r7, #12]
 800afaa:	f043 03f4 	orr.w	r3, r3, #244	; 0xf4
 800afae:	60fb      	str	r3, [r7, #12]
 800afb0:	887b      	ldrh	r3, [r7, #2]
 800afb2:	2b20      	cmp	r3, #32
 800afb4:	d103      	bne.n	800afbe <I2C_Enable_IRQ+0xa2>
 800afb6:	68fb      	ldr	r3, [r7, #12]
 800afb8:	f043 0320 	orr.w	r3, r3, #32
 800afbc:	60fb      	str	r3, [r7, #12]
 800afbe:	687b      	ldr	r3, [r7, #4]
 800afc0:	681b      	ldr	r3, [r3, #0]
 800afc2:	6819      	ldr	r1, [r3, #0]
 800afc4:	687b      	ldr	r3, [r7, #4]
 800afc6:	681b      	ldr	r3, [r3, #0]
 800afc8:	68fa      	ldr	r2, [r7, #12]
 800afca:	430a      	orrs	r2, r1
 800afcc:	601a      	str	r2, [r3, #0]
 800afce:	bf00      	nop
 800afd0:	3714      	adds	r7, #20
 800afd2:	46bd      	mov	sp, r7
 800afd4:	bc80      	pop	{r7}
 800afd6:	4770      	bx	lr
 800afd8:	08009e7d 	.word	0x08009e7d
 800afdc:	0800a063 	.word	0x0800a063

0800afe0 <I2C_Disable_IRQ>:
 800afe0:	b480      	push	{r7}
 800afe2:	b085      	sub	sp, #20
 800afe4:	af00      	add	r7, sp, #0
 800afe6:	6078      	str	r0, [r7, #4]
 800afe8:	460b      	mov	r3, r1
 800afea:	807b      	strh	r3, [r7, #2]
 800afec:	2300      	movs	r3, #0
 800afee:	60fb      	str	r3, [r7, #12]
 800aff0:	887b      	ldrh	r3, [r7, #2]
 800aff2:	f003 0301 	and.w	r3, r3, #1
 800aff6:	2b00      	cmp	r3, #0
 800aff8:	d00f      	beq.n	800b01a <I2C_Disable_IRQ+0x3a>
 800affa:	68fb      	ldr	r3, [r7, #12]
 800affc:	f043 0342 	orr.w	r3, r3, #66	; 0x42
 800b000:	60fb      	str	r3, [r7, #12]
 800b002:	687b      	ldr	r3, [r7, #4]
 800b004:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 800b008:	b2db      	uxtb	r3, r3
 800b00a:	f003 0328 	and.w	r3, r3, #40	; 0x28
 800b00e:	2b28      	cmp	r3, #40	; 0x28
 800b010:	d003      	beq.n	800b01a <I2C_Disable_IRQ+0x3a>
 800b012:	68fb      	ldr	r3, [r7, #12]
 800b014:	f043 03b0 	orr.w	r3, r3, #176	; 0xb0
 800b018:	60fb      	str	r3, [r7, #12]
 800b01a:	887b      	ldrh	r3, [r7, #2]
 800b01c:	f003 0302 	and.w	r3, r3, #2
 800b020:	2b00      	cmp	r3, #0
 800b022:	d00f      	beq.n	800b044 <I2C_Disable_IRQ+0x64>
 800b024:	68fb      	ldr	r3, [r7, #12]
 800b026:	f043 0344 	orr.w	r3, r3, #68	; 0x44
 800b02a:	60fb      	str	r3, [r7, #12]
 800b02c:	687b      	ldr	r3, [r7, #4]
 800b02e:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 800b032:	b2db      	uxtb	r3, r3
 800b034:	f003 0328 	and.w	r3, r3, #40	; 0x28
 800b038:	2b28      	cmp	r3, #40	; 0x28
 800b03a:	d003      	beq.n	800b044 <I2C_Disable_IRQ+0x64>
 800b03c:	68fb      	ldr	r3, [r7, #12]
 800b03e:	f043 03b0 	orr.w	r3, r3, #176	; 0xb0
 800b042:	60fb      	str	r3, [r7, #12]
 800b044:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 800b048:	2b00      	cmp	r3, #0
 800b04a:	da03      	bge.n	800b054 <I2C_Disable_IRQ+0x74>
 800b04c:	68fb      	ldr	r3, [r7, #12]
 800b04e:	f043 03b8 	orr.w	r3, r3, #184	; 0xb8
 800b052:	60fb      	str	r3, [r7, #12]
 800b054:	887b      	ldrh	r3, [r7, #2]
 800b056:	2b10      	cmp	r3, #16
 800b058:	d103      	bne.n	800b062 <I2C_Disable_IRQ+0x82>
 800b05a:	68fb      	ldr	r3, [r7, #12]
 800b05c:	f043 0390 	orr.w	r3, r3, #144	; 0x90
 800b060:	60fb      	str	r3, [r7, #12]
 800b062:	887b      	ldrh	r3, [r7, #2]
 800b064:	2b20      	cmp	r3, #32
 800b066:	d103      	bne.n	800b070 <I2C_Disable_IRQ+0x90>
 800b068:	68fb      	ldr	r3, [r7, #12]
 800b06a:	f043 0320 	orr.w	r3, r3, #32
 800b06e:	60fb      	str	r3, [r7, #12]
 800b070:	887b      	ldrh	r3, [r7, #2]
 800b072:	2b40      	cmp	r3, #64	; 0x40
 800b074:	d103      	bne.n	800b07e <I2C_Disable_IRQ+0x9e>
 800b076:	68fb      	ldr	r3, [r7, #12]
 800b078:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800b07c:	60fb      	str	r3, [r7, #12]
 800b07e:	687b      	ldr	r3, [r7, #4]
 800b080:	681b      	ldr	r3, [r3, #0]
 800b082:	6819      	ldr	r1, [r3, #0]
 800b084:	68fb      	ldr	r3, [r7, #12]
 800b086:	43da      	mvns	r2, r3
 800b088:	687b      	ldr	r3, [r7, #4]
 800b08a:	681b      	ldr	r3, [r3, #0]
 800b08c:	400a      	ands	r2, r1
 800b08e:	601a      	str	r2, [r3, #0]
 800b090:	bf00      	nop
 800b092:	3714      	adds	r7, #20
 800b094:	46bd      	mov	sp, r7
 800b096:	bc80      	pop	{r7}
 800b098:	4770      	bx	lr

0800b09a <I2C_ConvertOtherXferOptions>:
 800b09a:	b480      	push	{r7}
 800b09c:	b083      	sub	sp, #12
 800b09e:	af00      	add	r7, sp, #0
 800b0a0:	6078      	str	r0, [r7, #4]
 800b0a2:	687b      	ldr	r3, [r7, #4]
 800b0a4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b0a6:	2baa      	cmp	r3, #170	; 0xaa
 800b0a8:	d103      	bne.n	800b0b2 <I2C_ConvertOtherXferOptions+0x18>
 800b0aa:	687b      	ldr	r3, [r7, #4]
 800b0ac:	2200      	movs	r2, #0
 800b0ae:	62da      	str	r2, [r3, #44]	; 0x2c
 800b0b0:	e008      	b.n	800b0c4 <I2C_ConvertOtherXferOptions+0x2a>
 800b0b2:	687b      	ldr	r3, [r7, #4]
 800b0b4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b0b6:	f5b3 4f2a 	cmp.w	r3, #43520	; 0xaa00
 800b0ba:	d103      	bne.n	800b0c4 <I2C_ConvertOtherXferOptions+0x2a>
 800b0bc:	687b      	ldr	r3, [r7, #4]
 800b0be:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
 800b0c2:	62da      	str	r2, [r3, #44]	; 0x2c
 800b0c4:	bf00      	nop
 800b0c6:	370c      	adds	r7, #12
 800b0c8:	46bd      	mov	sp, r7
 800b0ca:	bc80      	pop	{r7}
 800b0cc:	4770      	bx	lr

0800b0ce <HAL_I2CEx_ConfigAnalogFilter>:
 800b0ce:	b480      	push	{r7}
 800b0d0:	b083      	sub	sp, #12
 800b0d2:	af00      	add	r7, sp, #0
 800b0d4:	6078      	str	r0, [r7, #4]
 800b0d6:	6039      	str	r1, [r7, #0]
 800b0d8:	687b      	ldr	r3, [r7, #4]
 800b0da:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 800b0de:	b2db      	uxtb	r3, r3
 800b0e0:	2b20      	cmp	r3, #32
 800b0e2:	d138      	bne.n	800b156 <HAL_I2CEx_ConfigAnalogFilter+0x88>
 800b0e4:	687b      	ldr	r3, [r7, #4]
 800b0e6:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 800b0ea:	2b01      	cmp	r3, #1
 800b0ec:	d101      	bne.n	800b0f2 <HAL_I2CEx_ConfigAnalogFilter+0x24>
 800b0ee:	2302      	movs	r3, #2
 800b0f0:	e032      	b.n	800b158 <HAL_I2CEx_ConfigAnalogFilter+0x8a>
 800b0f2:	687b      	ldr	r3, [r7, #4]
 800b0f4:	2201      	movs	r2, #1
 800b0f6:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800b0fa:	687b      	ldr	r3, [r7, #4]
 800b0fc:	2224      	movs	r2, #36	; 0x24
 800b0fe:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800b102:	687b      	ldr	r3, [r7, #4]
 800b104:	681b      	ldr	r3, [r3, #0]
 800b106:	681a      	ldr	r2, [r3, #0]
 800b108:	687b      	ldr	r3, [r7, #4]
 800b10a:	681b      	ldr	r3, [r3, #0]
 800b10c:	f022 0201 	bic.w	r2, r2, #1
 800b110:	601a      	str	r2, [r3, #0]
 800b112:	687b      	ldr	r3, [r7, #4]
 800b114:	681b      	ldr	r3, [r3, #0]
 800b116:	681a      	ldr	r2, [r3, #0]
 800b118:	687b      	ldr	r3, [r7, #4]
 800b11a:	681b      	ldr	r3, [r3, #0]
 800b11c:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 800b120:	601a      	str	r2, [r3, #0]
 800b122:	687b      	ldr	r3, [r7, #4]
 800b124:	681b      	ldr	r3, [r3, #0]
 800b126:	6819      	ldr	r1, [r3, #0]
 800b128:	687b      	ldr	r3, [r7, #4]
 800b12a:	681b      	ldr	r3, [r3, #0]
 800b12c:	683a      	ldr	r2, [r7, #0]
 800b12e:	430a      	orrs	r2, r1
 800b130:	601a      	str	r2, [r3, #0]
 800b132:	687b      	ldr	r3, [r7, #4]
 800b134:	681b      	ldr	r3, [r3, #0]
 800b136:	681a      	ldr	r2, [r3, #0]
 800b138:	687b      	ldr	r3, [r7, #4]
 800b13a:	681b      	ldr	r3, [r3, #0]
 800b13c:	f042 0201 	orr.w	r2, r2, #1
 800b140:	601a      	str	r2, [r3, #0]
 800b142:	687b      	ldr	r3, [r7, #4]
 800b144:	2220      	movs	r2, #32
 800b146:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800b14a:	687b      	ldr	r3, [r7, #4]
 800b14c:	2200      	movs	r2, #0
 800b14e:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800b152:	2300      	movs	r3, #0
 800b154:	e000      	b.n	800b158 <HAL_I2CEx_ConfigAnalogFilter+0x8a>
 800b156:	2302      	movs	r3, #2
 800b158:	4618      	mov	r0, r3
 800b15a:	370c      	adds	r7, #12
 800b15c:	46bd      	mov	sp, r7
 800b15e:	bc80      	pop	{r7}
 800b160:	4770      	bx	lr

0800b162 <HAL_I2CEx_ConfigDigitalFilter>:
 800b162:	b480      	push	{r7}
 800b164:	b085      	sub	sp, #20
 800b166:	af00      	add	r7, sp, #0
 800b168:	6078      	str	r0, [r7, #4]
 800b16a:	6039      	str	r1, [r7, #0]
 800b16c:	687b      	ldr	r3, [r7, #4]
 800b16e:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 800b172:	b2db      	uxtb	r3, r3
 800b174:	2b20      	cmp	r3, #32
 800b176:	d139      	bne.n	800b1ec <HAL_I2CEx_ConfigDigitalFilter+0x8a>
 800b178:	687b      	ldr	r3, [r7, #4]
 800b17a:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 800b17e:	2b01      	cmp	r3, #1
 800b180:	d101      	bne.n	800b186 <HAL_I2CEx_ConfigDigitalFilter+0x24>
 800b182:	2302      	movs	r3, #2
 800b184:	e033      	b.n	800b1ee <HAL_I2CEx_ConfigDigitalFilter+0x8c>
 800b186:	687b      	ldr	r3, [r7, #4]
 800b188:	2201      	movs	r2, #1
 800b18a:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800b18e:	687b      	ldr	r3, [r7, #4]
 800b190:	2224      	movs	r2, #36	; 0x24
 800b192:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800b196:	687b      	ldr	r3, [r7, #4]
 800b198:	681b      	ldr	r3, [r3, #0]
 800b19a:	681a      	ldr	r2, [r3, #0]
 800b19c:	687b      	ldr	r3, [r7, #4]
 800b19e:	681b      	ldr	r3, [r3, #0]
 800b1a0:	f022 0201 	bic.w	r2, r2, #1
 800b1a4:	601a      	str	r2, [r3, #0]
 800b1a6:	687b      	ldr	r3, [r7, #4]
 800b1a8:	681b      	ldr	r3, [r3, #0]
 800b1aa:	681b      	ldr	r3, [r3, #0]
 800b1ac:	60fb      	str	r3, [r7, #12]
 800b1ae:	68fb      	ldr	r3, [r7, #12]
 800b1b0:	f423 6370 	bic.w	r3, r3, #3840	; 0xf00
 800b1b4:	60fb      	str	r3, [r7, #12]
 800b1b6:	683b      	ldr	r3, [r7, #0]
 800b1b8:	021b      	lsls	r3, r3, #8
 800b1ba:	68fa      	ldr	r2, [r7, #12]
 800b1bc:	4313      	orrs	r3, r2
 800b1be:	60fb      	str	r3, [r7, #12]
 800b1c0:	687b      	ldr	r3, [r7, #4]
 800b1c2:	681b      	ldr	r3, [r3, #0]
 800b1c4:	68fa      	ldr	r2, [r7, #12]
 800b1c6:	601a      	str	r2, [r3, #0]
 800b1c8:	687b      	ldr	r3, [r7, #4]
 800b1ca:	681b      	ldr	r3, [r3, #0]
 800b1cc:	681a      	ldr	r2, [r3, #0]
 800b1ce:	687b      	ldr	r3, [r7, #4]
 800b1d0:	681b      	ldr	r3, [r3, #0]
 800b1d2:	f042 0201 	orr.w	r2, r2, #1
 800b1d6:	601a      	str	r2, [r3, #0]
 800b1d8:	687b      	ldr	r3, [r7, #4]
 800b1da:	2220      	movs	r2, #32
 800b1dc:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800b1e0:	687b      	ldr	r3, [r7, #4]
 800b1e2:	2200      	movs	r2, #0
 800b1e4:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800b1e8:	2300      	movs	r3, #0
 800b1ea:	e000      	b.n	800b1ee <HAL_I2CEx_ConfigDigitalFilter+0x8c>
 800b1ec:	2302      	movs	r3, #2
 800b1ee:	4618      	mov	r0, r3
 800b1f0:	3714      	adds	r7, #20
 800b1f2:	46bd      	mov	sp, r7
 800b1f4:	bc80      	pop	{r7}
 800b1f6:	4770      	bx	lr

0800b1f8 <HAL_PWR_EnableBkUpAccess>:
 800b1f8:	b480      	push	{r7}
 800b1fa:	af00      	add	r7, sp, #0
 800b1fc:	4b04      	ldr	r3, [pc, #16]	; (800b210 <HAL_PWR_EnableBkUpAccess+0x18>)
 800b1fe:	681b      	ldr	r3, [r3, #0]
 800b200:	4a03      	ldr	r2, [pc, #12]	; (800b210 <HAL_PWR_EnableBkUpAccess+0x18>)
 800b202:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800b206:	6013      	str	r3, [r2, #0]
 800b208:	bf00      	nop
 800b20a:	46bd      	mov	sp, r7
 800b20c:	bc80      	pop	{r7}
 800b20e:	4770      	bx	lr
 800b210:	58000400 	.word	0x58000400

0800b214 <HAL_PWR_EnterSLEEPMode>:
 800b214:	b580      	push	{r7, lr}
 800b216:	b082      	sub	sp, #8
 800b218:	af00      	add	r7, sp, #0
 800b21a:	6078      	str	r0, [r7, #4]
 800b21c:	460b      	mov	r3, r1
 800b21e:	70fb      	strb	r3, [r7, #3]
 800b220:	687b      	ldr	r3, [r7, #4]
 800b222:	2b00      	cmp	r3, #0
 800b224:	d10c      	bne.n	800b240 <HAL_PWR_EnterSLEEPMode+0x2c>
 800b226:	4b13      	ldr	r3, [pc, #76]	; (800b274 <HAL_PWR_EnterSLEEPMode+0x60>)
 800b228:	695b      	ldr	r3, [r3, #20]
 800b22a:	f403 7300 	and.w	r3, r3, #512	; 0x200
 800b22e:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800b232:	d10d      	bne.n	800b250 <HAL_PWR_EnterSLEEPMode+0x3c>
 800b234:	f000 f83c 	bl	800b2b0 <HAL_PWREx_DisableLowPowerRunMode>
 800b238:	4603      	mov	r3, r0
 800b23a:	2b00      	cmp	r3, #0
 800b23c:	d008      	beq.n	800b250 <HAL_PWR_EnterSLEEPMode+0x3c>
 800b23e:	e015      	b.n	800b26c <HAL_PWR_EnterSLEEPMode+0x58>
 800b240:	4b0c      	ldr	r3, [pc, #48]	; (800b274 <HAL_PWR_EnterSLEEPMode+0x60>)
 800b242:	695b      	ldr	r3, [r3, #20]
 800b244:	f403 7300 	and.w	r3, r3, #512	; 0x200
 800b248:	2b00      	cmp	r3, #0
 800b24a:	d101      	bne.n	800b250 <HAL_PWR_EnterSLEEPMode+0x3c>
 800b24c:	f000 f822 	bl	800b294 <HAL_PWREx_EnableLowPowerRunMode>
 800b250:	4b09      	ldr	r3, [pc, #36]	; (800b278 <HAL_PWR_EnterSLEEPMode+0x64>)
 800b252:	691b      	ldr	r3, [r3, #16]
 800b254:	4a08      	ldr	r2, [pc, #32]	; (800b278 <HAL_PWR_EnterSLEEPMode+0x64>)
 800b256:	f023 0304 	bic.w	r3, r3, #4
 800b25a:	6113      	str	r3, [r2, #16]
 800b25c:	78fb      	ldrb	r3, [r7, #3]
 800b25e:	2b01      	cmp	r3, #1
 800b260:	d101      	bne.n	800b266 <HAL_PWR_EnterSLEEPMode+0x52>
 800b262:	bf30      	wfi
 800b264:	e002      	b.n	800b26c <HAL_PWR_EnterSLEEPMode+0x58>
 800b266:	bf40      	sev
 800b268:	bf20      	wfe
 800b26a:	bf20      	wfe
 800b26c:	3708      	adds	r7, #8
 800b26e:	46bd      	mov	sp, r7
 800b270:	bd80      	pop	{r7, pc}
 800b272:	bf00      	nop
 800b274:	58000400 	.word	0x58000400
 800b278:	e000ed00 	.word	0xe000ed00

0800b27c <HAL_PWREx_GetVoltageRange>:
 800b27c:	b480      	push	{r7}
 800b27e:	af00      	add	r7, sp, #0
 800b280:	4b03      	ldr	r3, [pc, #12]	; (800b290 <HAL_PWREx_GetVoltageRange+0x14>)
 800b282:	681b      	ldr	r3, [r3, #0]
 800b284:	f403 63c0 	and.w	r3, r3, #1536	; 0x600
 800b288:	4618      	mov	r0, r3
 800b28a:	46bd      	mov	sp, r7
 800b28c:	bc80      	pop	{r7}
 800b28e:	4770      	bx	lr
 800b290:	58000400 	.word	0x58000400

0800b294 <HAL_PWREx_EnableLowPowerRunMode>:
 800b294:	b480      	push	{r7}
 800b296:	af00      	add	r7, sp, #0
 800b298:	4b04      	ldr	r3, [pc, #16]	; (800b2ac <HAL_PWREx_EnableLowPowerRunMode+0x18>)
 800b29a:	681b      	ldr	r3, [r3, #0]
 800b29c:	4a03      	ldr	r2, [pc, #12]	; (800b2ac <HAL_PWREx_EnableLowPowerRunMode+0x18>)
 800b29e:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 800b2a2:	6013      	str	r3, [r2, #0]
 800b2a4:	bf00      	nop
 800b2a6:	46bd      	mov	sp, r7
 800b2a8:	bc80      	pop	{r7}
 800b2aa:	4770      	bx	lr
 800b2ac:	58000400 	.word	0x58000400

0800b2b0 <HAL_PWREx_DisableLowPowerRunMode>:
 800b2b0:	b480      	push	{r7}
 800b2b2:	b083      	sub	sp, #12
 800b2b4:	af00      	add	r7, sp, #0
 800b2b6:	4b16      	ldr	r3, [pc, #88]	; (800b310 <HAL_PWREx_DisableLowPowerRunMode+0x60>)
 800b2b8:	681b      	ldr	r3, [r3, #0]
 800b2ba:	4a15      	ldr	r2, [pc, #84]	; (800b310 <HAL_PWREx_DisableLowPowerRunMode+0x60>)
 800b2bc:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 800b2c0:	6013      	str	r3, [r2, #0]
 800b2c2:	4b14      	ldr	r3, [pc, #80]	; (800b314 <HAL_PWREx_DisableLowPowerRunMode+0x64>)
 800b2c4:	681b      	ldr	r3, [r3, #0]
 800b2c6:	2232      	movs	r2, #50	; 0x32
 800b2c8:	fb02 f303 	mul.w	r3, r2, r3
 800b2cc:	4a12      	ldr	r2, [pc, #72]	; (800b318 <HAL_PWREx_DisableLowPowerRunMode+0x68>)
 800b2ce:	fba2 2303 	umull	r2, r3, r2, r3
 800b2d2:	0c9b      	lsrs	r3, r3, #18
 800b2d4:	607b      	str	r3, [r7, #4]
 800b2d6:	e002      	b.n	800b2de <HAL_PWREx_DisableLowPowerRunMode+0x2e>
 800b2d8:	687b      	ldr	r3, [r7, #4]
 800b2da:	3b01      	subs	r3, #1
 800b2dc:	607b      	str	r3, [r7, #4]
 800b2de:	4b0c      	ldr	r3, [pc, #48]	; (800b310 <HAL_PWREx_DisableLowPowerRunMode+0x60>)
 800b2e0:	695b      	ldr	r3, [r3, #20]
 800b2e2:	f403 7300 	and.w	r3, r3, #512	; 0x200
 800b2e6:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800b2ea:	d102      	bne.n	800b2f2 <HAL_PWREx_DisableLowPowerRunMode+0x42>
 800b2ec:	687b      	ldr	r3, [r7, #4]
 800b2ee:	2b00      	cmp	r3, #0
 800b2f0:	d1f2      	bne.n	800b2d8 <HAL_PWREx_DisableLowPowerRunMode+0x28>
 800b2f2:	4b07      	ldr	r3, [pc, #28]	; (800b310 <HAL_PWREx_DisableLowPowerRunMode+0x60>)
 800b2f4:	695b      	ldr	r3, [r3, #20]
 800b2f6:	f403 7300 	and.w	r3, r3, #512	; 0x200
 800b2fa:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800b2fe:	d101      	bne.n	800b304 <HAL_PWREx_DisableLowPowerRunMode+0x54>
 800b300:	2303      	movs	r3, #3
 800b302:	e000      	b.n	800b306 <HAL_PWREx_DisableLowPowerRunMode+0x56>
 800b304:	2300      	movs	r3, #0
 800b306:	4618      	mov	r0, r3
 800b308:	370c      	adds	r7, #12
 800b30a:	46bd      	mov	sp, r7
 800b30c:	bc80      	pop	{r7}
 800b30e:	4770      	bx	lr
 800b310:	58000400 	.word	0x58000400
 800b314:	2000003c 	.word	0x2000003c
 800b318:	431bde83 	.word	0x431bde83

0800b31c <HAL_PWREx_EnterSTOP2Mode>:
 800b31c:	b480      	push	{r7}
 800b31e:	b083      	sub	sp, #12
 800b320:	af00      	add	r7, sp, #0
 800b322:	4603      	mov	r3, r0
 800b324:	71fb      	strb	r3, [r7, #7]
 800b326:	4b10      	ldr	r3, [pc, #64]	; (800b368 <HAL_PWREx_EnterSTOP2Mode+0x4c>)
 800b328:	681b      	ldr	r3, [r3, #0]
 800b32a:	f023 0307 	bic.w	r3, r3, #7
 800b32e:	4a0e      	ldr	r2, [pc, #56]	; (800b368 <HAL_PWREx_EnterSTOP2Mode+0x4c>)
 800b330:	f043 0302 	orr.w	r3, r3, #2
 800b334:	6013      	str	r3, [r2, #0]
 800b336:	4b0d      	ldr	r3, [pc, #52]	; (800b36c <HAL_PWREx_EnterSTOP2Mode+0x50>)
 800b338:	691b      	ldr	r3, [r3, #16]
 800b33a:	4a0c      	ldr	r2, [pc, #48]	; (800b36c <HAL_PWREx_EnterSTOP2Mode+0x50>)
 800b33c:	f043 0304 	orr.w	r3, r3, #4
 800b340:	6113      	str	r3, [r2, #16]
 800b342:	79fb      	ldrb	r3, [r7, #7]
 800b344:	2b01      	cmp	r3, #1
 800b346:	d101      	bne.n	800b34c <HAL_PWREx_EnterSTOP2Mode+0x30>
 800b348:	bf30      	wfi
 800b34a:	e002      	b.n	800b352 <HAL_PWREx_EnterSTOP2Mode+0x36>
 800b34c:	bf40      	sev
 800b34e:	bf20      	wfe
 800b350:	bf20      	wfe
 800b352:	4b06      	ldr	r3, [pc, #24]	; (800b36c <HAL_PWREx_EnterSTOP2Mode+0x50>)
 800b354:	691b      	ldr	r3, [r3, #16]
 800b356:	4a05      	ldr	r2, [pc, #20]	; (800b36c <HAL_PWREx_EnterSTOP2Mode+0x50>)
 800b358:	f023 0304 	bic.w	r3, r3, #4
 800b35c:	6113      	str	r3, [r2, #16]
 800b35e:	bf00      	nop
 800b360:	370c      	adds	r7, #12
 800b362:	46bd      	mov	sp, r7
 800b364:	bc80      	pop	{r7}
 800b366:	4770      	bx	lr
 800b368:	58000400 	.word	0x58000400
 800b36c:	e000ed00 	.word	0xe000ed00

0800b370 <LL_PWR_IsEnabledBkUpAccess>:
 800b370:	b480      	push	{r7}
 800b372:	af00      	add	r7, sp, #0
 800b374:	4b06      	ldr	r3, [pc, #24]	; (800b390 <LL_PWR_IsEnabledBkUpAccess+0x20>)
 800b376:	681b      	ldr	r3, [r3, #0]
 800b378:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800b37c:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800b380:	d101      	bne.n	800b386 <LL_PWR_IsEnabledBkUpAccess+0x16>
 800b382:	2301      	movs	r3, #1
 800b384:	e000      	b.n	800b388 <LL_PWR_IsEnabledBkUpAccess+0x18>
 800b386:	2300      	movs	r3, #0
 800b388:	4618      	mov	r0, r3
 800b38a:	46bd      	mov	sp, r7
 800b38c:	bc80      	pop	{r7}
 800b38e:	4770      	bx	lr
 800b390:	58000400 	.word	0x58000400

0800b394 <LL_RCC_HSE_EnableTcxo>:
 800b394:	b480      	push	{r7}
 800b396:	af00      	add	r7, sp, #0
 800b398:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 800b39c:	681b      	ldr	r3, [r3, #0]
 800b39e:	f04f 42b0 	mov.w	r2, #1476395008	; 0x58000000
 800b3a2:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 800b3a6:	6013      	str	r3, [r2, #0]
 800b3a8:	bf00      	nop
 800b3aa:	46bd      	mov	sp, r7
 800b3ac:	bc80      	pop	{r7}
 800b3ae:	4770      	bx	lr

0800b3b0 <LL_RCC_HSE_DisableTcxo>:
 800b3b0:	b480      	push	{r7}
 800b3b2:	af00      	add	r7, sp, #0
 800b3b4:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 800b3b8:	681b      	ldr	r3, [r3, #0]
 800b3ba:	f04f 42b0 	mov.w	r2, #1476395008	; 0x58000000
 800b3be:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 800b3c2:	6013      	str	r3, [r2, #0]
 800b3c4:	bf00      	nop
 800b3c6:	46bd      	mov	sp, r7
 800b3c8:	bc80      	pop	{r7}
 800b3ca:	4770      	bx	lr

0800b3cc <LL_RCC_HSE_IsEnabledDiv2>:
 800b3cc:	b480      	push	{r7}
 800b3ce:	af00      	add	r7, sp, #0
 800b3d0:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 800b3d4:	681b      	ldr	r3, [r3, #0]
 800b3d6:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 800b3da:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 800b3de:	d101      	bne.n	800b3e4 <LL_RCC_HSE_IsEnabledDiv2+0x18>
 800b3e0:	2301      	movs	r3, #1
 800b3e2:	e000      	b.n	800b3e6 <LL_RCC_HSE_IsEnabledDiv2+0x1a>
 800b3e4:	2300      	movs	r3, #0
 800b3e6:	4618      	mov	r0, r3
 800b3e8:	46bd      	mov	sp, r7
 800b3ea:	bc80      	pop	{r7}
 800b3ec:	4770      	bx	lr

0800b3ee <LL_RCC_HSE_Enable>:
 800b3ee:	b480      	push	{r7}
 800b3f0:	af00      	add	r7, sp, #0
 800b3f2:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 800b3f6:	681b      	ldr	r3, [r3, #0]
 800b3f8:	f04f 42b0 	mov.w	r2, #1476395008	; 0x58000000
 800b3fc:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800b400:	6013      	str	r3, [r2, #0]
 800b402:	bf00      	nop
 800b404:	46bd      	mov	sp, r7
 800b406:	bc80      	pop	{r7}
 800b408:	4770      	bx	lr

0800b40a <LL_RCC_HSE_Disable>:
 800b40a:	b480      	push	{r7}
 800b40c:	af00      	add	r7, sp, #0
 800b40e:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 800b412:	681b      	ldr	r3, [r3, #0]
 800b414:	f04f 42b0 	mov.w	r2, #1476395008	; 0x58000000
 800b418:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 800b41c:	6013      	str	r3, [r2, #0]
 800b41e:	bf00      	nop
 800b420:	46bd      	mov	sp, r7
 800b422:	bc80      	pop	{r7}
 800b424:	4770      	bx	lr

0800b426 <LL_RCC_HSE_IsReady>:
 800b426:	b480      	push	{r7}
 800b428:	af00      	add	r7, sp, #0
 800b42a:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 800b42e:	681b      	ldr	r3, [r3, #0]
 800b430:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800b434:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 800b438:	d101      	bne.n	800b43e <LL_RCC_HSE_IsReady+0x18>
 800b43a:	2301      	movs	r3, #1
 800b43c:	e000      	b.n	800b440 <LL_RCC_HSE_IsReady+0x1a>
 800b43e:	2300      	movs	r3, #0
 800b440:	4618      	mov	r0, r3
 800b442:	46bd      	mov	sp, r7
 800b444:	bc80      	pop	{r7}
 800b446:	4770      	bx	lr

0800b448 <LL_RCC_HSI_Enable>:
 800b448:	b480      	push	{r7}
 800b44a:	af00      	add	r7, sp, #0
 800b44c:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 800b450:	681b      	ldr	r3, [r3, #0]
 800b452:	f04f 42b0 	mov.w	r2, #1476395008	; 0x58000000
 800b456:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800b45a:	6013      	str	r3, [r2, #0]
 800b45c:	bf00      	nop
 800b45e:	46bd      	mov	sp, r7
 800b460:	bc80      	pop	{r7}
 800b462:	4770      	bx	lr

0800b464 <LL_RCC_HSI_Disable>:
 800b464:	b480      	push	{r7}
 800b466:	af00      	add	r7, sp, #0
 800b468:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 800b46c:	681b      	ldr	r3, [r3, #0]
 800b46e:	f04f 42b0 	mov.w	r2, #1476395008	; 0x58000000
 800b472:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 800b476:	6013      	str	r3, [r2, #0]
 800b478:	bf00      	nop
 800b47a:	46bd      	mov	sp, r7
 800b47c:	bc80      	pop	{r7}
 800b47e:	4770      	bx	lr

0800b480 <LL_RCC_HSI_IsReady>:
 800b480:	b480      	push	{r7}
 800b482:	af00      	add	r7, sp, #0
 800b484:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 800b488:	681b      	ldr	r3, [r3, #0]
 800b48a:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 800b48e:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800b492:	d101      	bne.n	800b498 <LL_RCC_HSI_IsReady+0x18>
 800b494:	2301      	movs	r3, #1
 800b496:	e000      	b.n	800b49a <LL_RCC_HSI_IsReady+0x1a>
 800b498:	2300      	movs	r3, #0
 800b49a:	4618      	mov	r0, r3
 800b49c:	46bd      	mov	sp, r7
 800b49e:	bc80      	pop	{r7}
 800b4a0:	4770      	bx	lr

0800b4a2 <LL_RCC_HSI_SetCalibTrimming>:
 800b4a2:	b480      	push	{r7}
 800b4a4:	b083      	sub	sp, #12
 800b4a6:	af00      	add	r7, sp, #0
 800b4a8:	6078      	str	r0, [r7, #4]
 800b4aa:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 800b4ae:	685b      	ldr	r3, [r3, #4]
 800b4b0:	f023 42fe 	bic.w	r2, r3, #2130706432	; 0x7f000000
 800b4b4:	687b      	ldr	r3, [r7, #4]
 800b4b6:	061b      	lsls	r3, r3, #24
 800b4b8:	f04f 41b0 	mov.w	r1, #1476395008	; 0x58000000
 800b4bc:	4313      	orrs	r3, r2
 800b4be:	604b      	str	r3, [r1, #4]
 800b4c0:	bf00      	nop
 800b4c2:	370c      	adds	r7, #12
 800b4c4:	46bd      	mov	sp, r7
 800b4c6:	bc80      	pop	{r7}
 800b4c8:	4770      	bx	lr

0800b4ca <LL_RCC_LSE_IsReady>:
 800b4ca:	b480      	push	{r7}
 800b4cc:	af00      	add	r7, sp, #0
 800b4ce:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 800b4d2:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800b4d6:	f003 0302 	and.w	r3, r3, #2
 800b4da:	2b02      	cmp	r3, #2
 800b4dc:	d101      	bne.n	800b4e2 <LL_RCC_LSE_IsReady+0x18>
 800b4de:	2301      	movs	r3, #1
 800b4e0:	e000      	b.n	800b4e4 <LL_RCC_LSE_IsReady+0x1a>
 800b4e2:	2300      	movs	r3, #0
 800b4e4:	4618      	mov	r0, r3
 800b4e6:	46bd      	mov	sp, r7
 800b4e8:	bc80      	pop	{r7}
 800b4ea:	4770      	bx	lr

0800b4ec <LL_RCC_LSI_Enable>:
 800b4ec:	b480      	push	{r7}
 800b4ee:	af00      	add	r7, sp, #0
 800b4f0:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 800b4f4:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 800b4f8:	f04f 42b0 	mov.w	r2, #1476395008	; 0x58000000
 800b4fc:	f043 0301 	orr.w	r3, r3, #1
 800b500:	f8c2 3094 	str.w	r3, [r2, #148]	; 0x94
 800b504:	bf00      	nop
 800b506:	46bd      	mov	sp, r7
 800b508:	bc80      	pop	{r7}
 800b50a:	4770      	bx	lr

0800b50c <LL_RCC_LSI_Disable>:
 800b50c:	b480      	push	{r7}
 800b50e:	af00      	add	r7, sp, #0
 800b510:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 800b514:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 800b518:	f04f 42b0 	mov.w	r2, #1476395008	; 0x58000000
 800b51c:	f023 0301 	bic.w	r3, r3, #1
 800b520:	f8c2 3094 	str.w	r3, [r2, #148]	; 0x94
 800b524:	bf00      	nop
 800b526:	46bd      	mov	sp, r7
 800b528:	bc80      	pop	{r7}
 800b52a:	4770      	bx	lr

0800b52c <LL_RCC_LSI_IsReady>:
 800b52c:	b480      	push	{r7}
 800b52e:	af00      	add	r7, sp, #0
 800b530:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 800b534:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 800b538:	f003 0302 	and.w	r3, r3, #2
 800b53c:	2b02      	cmp	r3, #2
 800b53e:	d101      	bne.n	800b544 <LL_RCC_LSI_IsReady+0x18>
 800b540:	2301      	movs	r3, #1
 800b542:	e000      	b.n	800b546 <LL_RCC_LSI_IsReady+0x1a>
 800b544:	2300      	movs	r3, #0
 800b546:	4618      	mov	r0, r3
 800b548:	46bd      	mov	sp, r7
 800b54a:	bc80      	pop	{r7}
 800b54c:	4770      	bx	lr

0800b54e <LL_RCC_MSI_Enable>:
 800b54e:	b480      	push	{r7}
 800b550:	af00      	add	r7, sp, #0
 800b552:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 800b556:	681b      	ldr	r3, [r3, #0]
 800b558:	f04f 42b0 	mov.w	r2, #1476395008	; 0x58000000
 800b55c:	f043 0301 	orr.w	r3, r3, #1
 800b560:	6013      	str	r3, [r2, #0]
 800b562:	bf00      	nop
 800b564:	46bd      	mov	sp, r7
 800b566:	bc80      	pop	{r7}
 800b568:	4770      	bx	lr

0800b56a <LL_RCC_MSI_Disable>:
 800b56a:	b480      	push	{r7}
 800b56c:	af00      	add	r7, sp, #0
 800b56e:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 800b572:	681b      	ldr	r3, [r3, #0]
 800b574:	f04f 42b0 	mov.w	r2, #1476395008	; 0x58000000
 800b578:	f023 0301 	bic.w	r3, r3, #1
 800b57c:	6013      	str	r3, [r2, #0]
 800b57e:	bf00      	nop
 800b580:	46bd      	mov	sp, r7
 800b582:	bc80      	pop	{r7}
 800b584:	4770      	bx	lr

0800b586 <LL_RCC_MSI_IsReady>:
 800b586:	b480      	push	{r7}
 800b588:	af00      	add	r7, sp, #0
 800b58a:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 800b58e:	681b      	ldr	r3, [r3, #0]
 800b590:	f003 0302 	and.w	r3, r3, #2
 800b594:	2b02      	cmp	r3, #2
 800b596:	d101      	bne.n	800b59c <LL_RCC_MSI_IsReady+0x16>
 800b598:	2301      	movs	r3, #1
 800b59a:	e000      	b.n	800b59e <LL_RCC_MSI_IsReady+0x18>
 800b59c:	2300      	movs	r3, #0
 800b59e:	4618      	mov	r0, r3
 800b5a0:	46bd      	mov	sp, r7
 800b5a2:	bc80      	pop	{r7}
 800b5a4:	4770      	bx	lr

0800b5a6 <LL_RCC_MSI_IsEnabledRangeSelect>:
 800b5a6:	b480      	push	{r7}
 800b5a8:	af00      	add	r7, sp, #0
 800b5aa:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 800b5ae:	681b      	ldr	r3, [r3, #0]
 800b5b0:	f003 0308 	and.w	r3, r3, #8
 800b5b4:	2b08      	cmp	r3, #8
 800b5b6:	d101      	bne.n	800b5bc <LL_RCC_MSI_IsEnabledRangeSelect+0x16>
 800b5b8:	2301      	movs	r3, #1
 800b5ba:	e000      	b.n	800b5be <LL_RCC_MSI_IsEnabledRangeSelect+0x18>
 800b5bc:	2300      	movs	r3, #0
 800b5be:	4618      	mov	r0, r3
 800b5c0:	46bd      	mov	sp, r7
 800b5c2:	bc80      	pop	{r7}
 800b5c4:	4770      	bx	lr

0800b5c6 <LL_RCC_MSI_GetRange>:
 800b5c6:	b480      	push	{r7}
 800b5c8:	af00      	add	r7, sp, #0
 800b5ca:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 800b5ce:	681b      	ldr	r3, [r3, #0]
 800b5d0:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 800b5d4:	4618      	mov	r0, r3
 800b5d6:	46bd      	mov	sp, r7
 800b5d8:	bc80      	pop	{r7}
 800b5da:	4770      	bx	lr

0800b5dc <LL_RCC_MSI_GetRangeAfterStandby>:
 800b5dc:	b480      	push	{r7}
 800b5de:	af00      	add	r7, sp, #0
 800b5e0:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 800b5e4:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 800b5e8:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
 800b5ec:	4618      	mov	r0, r3
 800b5ee:	46bd      	mov	sp, r7
 800b5f0:	bc80      	pop	{r7}
 800b5f2:	4770      	bx	lr

0800b5f4 <LL_RCC_MSI_SetCalibTrimming>:
 800b5f4:	b480      	push	{r7}
 800b5f6:	b083      	sub	sp, #12
 800b5f8:	af00      	add	r7, sp, #0
 800b5fa:	6078      	str	r0, [r7, #4]
 800b5fc:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 800b600:	685b      	ldr	r3, [r3, #4]
 800b602:	f423 427f 	bic.w	r2, r3, #65280	; 0xff00
 800b606:	687b      	ldr	r3, [r7, #4]
 800b608:	021b      	lsls	r3, r3, #8
 800b60a:	f04f 41b0 	mov.w	r1, #1476395008	; 0x58000000
 800b60e:	4313      	orrs	r3, r2
 800b610:	604b      	str	r3, [r1, #4]
 800b612:	bf00      	nop
 800b614:	370c      	adds	r7, #12
 800b616:	46bd      	mov	sp, r7
 800b618:	bc80      	pop	{r7}
 800b61a:	4770      	bx	lr

0800b61c <LL_RCC_SetSysClkSource>:
 800b61c:	b480      	push	{r7}
 800b61e:	b083      	sub	sp, #12
 800b620:	af00      	add	r7, sp, #0
 800b622:	6078      	str	r0, [r7, #4]
 800b624:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 800b628:	689b      	ldr	r3, [r3, #8]
 800b62a:	f023 0203 	bic.w	r2, r3, #3
 800b62e:	f04f 41b0 	mov.w	r1, #1476395008	; 0x58000000
 800b632:	687b      	ldr	r3, [r7, #4]
 800b634:	4313      	orrs	r3, r2
 800b636:	608b      	str	r3, [r1, #8]
 800b638:	bf00      	nop
 800b63a:	370c      	adds	r7, #12
 800b63c:	46bd      	mov	sp, r7
 800b63e:	bc80      	pop	{r7}
 800b640:	4770      	bx	lr

0800b642 <LL_RCC_GetSysClkSource>:
 800b642:	b480      	push	{r7}
 800b644:	af00      	add	r7, sp, #0
 800b646:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 800b64a:	689b      	ldr	r3, [r3, #8]
 800b64c:	f003 030c 	and.w	r3, r3, #12
 800b650:	4618      	mov	r0, r3
 800b652:	46bd      	mov	sp, r7
 800b654:	bc80      	pop	{r7}
 800b656:	4770      	bx	lr

0800b658 <LL_RCC_SetAHBPrescaler>:
 800b658:	b480      	push	{r7}
 800b65a:	b083      	sub	sp, #12
 800b65c:	af00      	add	r7, sp, #0
 800b65e:	6078      	str	r0, [r7, #4]
 800b660:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 800b664:	689b      	ldr	r3, [r3, #8]
 800b666:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 800b66a:	f04f 41b0 	mov.w	r1, #1476395008	; 0x58000000
 800b66e:	687b      	ldr	r3, [r7, #4]
 800b670:	4313      	orrs	r3, r2
 800b672:	608b      	str	r3, [r1, #8]
 800b674:	bf00      	nop
 800b676:	370c      	adds	r7, #12
 800b678:	46bd      	mov	sp, r7
 800b67a:	bc80      	pop	{r7}
 800b67c:	4770      	bx	lr

0800b67e <LL_C2_RCC_SetAHBPrescaler>:
 800b67e:	b480      	push	{r7}
 800b680:	b083      	sub	sp, #12
 800b682:	af00      	add	r7, sp, #0
 800b684:	6078      	str	r0, [r7, #4]
 800b686:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 800b68a:	f8d3 3108 	ldr.w	r3, [r3, #264]	; 0x108
 800b68e:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 800b692:	f04f 41b0 	mov.w	r1, #1476395008	; 0x58000000
 800b696:	687b      	ldr	r3, [r7, #4]
 800b698:	4313      	orrs	r3, r2
 800b69a:	f8c1 3108 	str.w	r3, [r1, #264]	; 0x108
 800b69e:	bf00      	nop
 800b6a0:	370c      	adds	r7, #12
 800b6a2:	46bd      	mov	sp, r7
 800b6a4:	bc80      	pop	{r7}
 800b6a6:	4770      	bx	lr

0800b6a8 <LL_RCC_SetAHB3Prescaler>:
 800b6a8:	b480      	push	{r7}
 800b6aa:	b083      	sub	sp, #12
 800b6ac:	af00      	add	r7, sp, #0
 800b6ae:	6078      	str	r0, [r7, #4]
 800b6b0:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 800b6b4:	f8d3 3108 	ldr.w	r3, [r3, #264]	; 0x108
 800b6b8:	f023 020f 	bic.w	r2, r3, #15
 800b6bc:	687b      	ldr	r3, [r7, #4]
 800b6be:	091b      	lsrs	r3, r3, #4
 800b6c0:	f04f 41b0 	mov.w	r1, #1476395008	; 0x58000000
 800b6c4:	4313      	orrs	r3, r2
 800b6c6:	f8c1 3108 	str.w	r3, [r1, #264]	; 0x108
 800b6ca:	bf00      	nop
 800b6cc:	370c      	adds	r7, #12
 800b6ce:	46bd      	mov	sp, r7
 800b6d0:	bc80      	pop	{r7}
 800b6d2:	4770      	bx	lr

0800b6d4 <LL_RCC_SetAPB1Prescaler>:
 800b6d4:	b480      	push	{r7}
 800b6d6:	b083      	sub	sp, #12
 800b6d8:	af00      	add	r7, sp, #0
 800b6da:	6078      	str	r0, [r7, #4]
 800b6dc:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 800b6e0:	689b      	ldr	r3, [r3, #8]
 800b6e2:	f423 62e0 	bic.w	r2, r3, #1792	; 0x700
 800b6e6:	f04f 41b0 	mov.w	r1, #1476395008	; 0x58000000
 800b6ea:	687b      	ldr	r3, [r7, #4]
 800b6ec:	4313      	orrs	r3, r2
 800b6ee:	608b      	str	r3, [r1, #8]
 800b6f0:	bf00      	nop
 800b6f2:	370c      	adds	r7, #12
 800b6f4:	46bd      	mov	sp, r7
 800b6f6:	bc80      	pop	{r7}
 800b6f8:	4770      	bx	lr

0800b6fa <LL_RCC_SetAPB2Prescaler>:
 800b6fa:	b480      	push	{r7}
 800b6fc:	b083      	sub	sp, #12
 800b6fe:	af00      	add	r7, sp, #0
 800b700:	6078      	str	r0, [r7, #4]
 800b702:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 800b706:	689b      	ldr	r3, [r3, #8]
 800b708:	f423 5260 	bic.w	r2, r3, #14336	; 0x3800
 800b70c:	f04f 41b0 	mov.w	r1, #1476395008	; 0x58000000
 800b710:	687b      	ldr	r3, [r7, #4]
 800b712:	4313      	orrs	r3, r2
 800b714:	608b      	str	r3, [r1, #8]
 800b716:	bf00      	nop
 800b718:	370c      	adds	r7, #12
 800b71a:	46bd      	mov	sp, r7
 800b71c:	bc80      	pop	{r7}
 800b71e:	4770      	bx	lr

0800b720 <LL_RCC_GetAHBPrescaler>:
 800b720:	b480      	push	{r7}
 800b722:	af00      	add	r7, sp, #0
 800b724:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 800b728:	689b      	ldr	r3, [r3, #8]
 800b72a:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 800b72e:	4618      	mov	r0, r3
 800b730:	46bd      	mov	sp, r7
 800b732:	bc80      	pop	{r7}
 800b734:	4770      	bx	lr

0800b736 <LL_RCC_GetAHB3Prescaler>:
 800b736:	b480      	push	{r7}
 800b738:	af00      	add	r7, sp, #0
 800b73a:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 800b73e:	f8d3 3108 	ldr.w	r3, [r3, #264]	; 0x108
 800b742:	011b      	lsls	r3, r3, #4
 800b744:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 800b748:	4618      	mov	r0, r3
 800b74a:	46bd      	mov	sp, r7
 800b74c:	bc80      	pop	{r7}
 800b74e:	4770      	bx	lr

0800b750 <LL_RCC_GetAPB1Prescaler>:
 800b750:	b480      	push	{r7}
 800b752:	af00      	add	r7, sp, #0
 800b754:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 800b758:	689b      	ldr	r3, [r3, #8]
 800b75a:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 800b75e:	4618      	mov	r0, r3
 800b760:	46bd      	mov	sp, r7
 800b762:	bc80      	pop	{r7}
 800b764:	4770      	bx	lr

0800b766 <LL_RCC_GetAPB2Prescaler>:
 800b766:	b480      	push	{r7}
 800b768:	af00      	add	r7, sp, #0
 800b76a:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 800b76e:	689b      	ldr	r3, [r3, #8]
 800b770:	f403 5360 	and.w	r3, r3, #14336	; 0x3800
 800b774:	4618      	mov	r0, r3
 800b776:	46bd      	mov	sp, r7
 800b778:	bc80      	pop	{r7}
 800b77a:	4770      	bx	lr

0800b77c <LL_RCC_ConfigMCO>:
 800b77c:	b480      	push	{r7}
 800b77e:	b083      	sub	sp, #12
 800b780:	af00      	add	r7, sp, #0
 800b782:	6078      	str	r0, [r7, #4]
 800b784:	6039      	str	r1, [r7, #0]
 800b786:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 800b78a:	689b      	ldr	r3, [r3, #8]
 800b78c:	f023 42fe 	bic.w	r2, r3, #2130706432	; 0x7f000000
 800b790:	6879      	ldr	r1, [r7, #4]
 800b792:	683b      	ldr	r3, [r7, #0]
 800b794:	430b      	orrs	r3, r1
 800b796:	f04f 41b0 	mov.w	r1, #1476395008	; 0x58000000
 800b79a:	4313      	orrs	r3, r2
 800b79c:	608b      	str	r3, [r1, #8]
 800b79e:	bf00      	nop
 800b7a0:	370c      	adds	r7, #12
 800b7a2:	46bd      	mov	sp, r7
 800b7a4:	bc80      	pop	{r7}
 800b7a6:	4770      	bx	lr

0800b7a8 <LL_RCC_PLL_Enable>:
 800b7a8:	b480      	push	{r7}
 800b7aa:	af00      	add	r7, sp, #0
 800b7ac:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 800b7b0:	681b      	ldr	r3, [r3, #0]
 800b7b2:	f04f 42b0 	mov.w	r2, #1476395008	; 0x58000000
 800b7b6:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 800b7ba:	6013      	str	r3, [r2, #0]
 800b7bc:	bf00      	nop
 800b7be:	46bd      	mov	sp, r7
 800b7c0:	bc80      	pop	{r7}
 800b7c2:	4770      	bx	lr

0800b7c4 <LL_RCC_PLL_Disable>:
 800b7c4:	b480      	push	{r7}
 800b7c6:	af00      	add	r7, sp, #0
 800b7c8:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 800b7cc:	681b      	ldr	r3, [r3, #0]
 800b7ce:	f04f 42b0 	mov.w	r2, #1476395008	; 0x58000000
 800b7d2:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 800b7d6:	6013      	str	r3, [r2, #0]
 800b7d8:	bf00      	nop
 800b7da:	46bd      	mov	sp, r7
 800b7dc:	bc80      	pop	{r7}
 800b7de:	4770      	bx	lr

0800b7e0 <LL_RCC_PLL_IsReady>:
 800b7e0:	b480      	push	{r7}
 800b7e2:	af00      	add	r7, sp, #0
 800b7e4:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 800b7e8:	681b      	ldr	r3, [r3, #0]
 800b7ea:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800b7ee:	f1b3 7f00 	cmp.w	r3, #33554432	; 0x2000000
 800b7f2:	d101      	bne.n	800b7f8 <LL_RCC_PLL_IsReady+0x18>
 800b7f4:	2301      	movs	r3, #1
 800b7f6:	e000      	b.n	800b7fa <LL_RCC_PLL_IsReady+0x1a>
 800b7f8:	2300      	movs	r3, #0
 800b7fa:	4618      	mov	r0, r3
 800b7fc:	46bd      	mov	sp, r7
 800b7fe:	bc80      	pop	{r7}
 800b800:	4770      	bx	lr

0800b802 <LL_RCC_PLL_GetN>:
 800b802:	b480      	push	{r7}
 800b804:	af00      	add	r7, sp, #0
 800b806:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 800b80a:	68db      	ldr	r3, [r3, #12]
 800b80c:	0a1b      	lsrs	r3, r3, #8
 800b80e:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 800b812:	4618      	mov	r0, r3
 800b814:	46bd      	mov	sp, r7
 800b816:	bc80      	pop	{r7}
 800b818:	4770      	bx	lr

0800b81a <LL_RCC_PLL_GetR>:
 800b81a:	b480      	push	{r7}
 800b81c:	af00      	add	r7, sp, #0
 800b81e:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 800b822:	68db      	ldr	r3, [r3, #12]
 800b824:	f003 4360 	and.w	r3, r3, #3758096384	; 0xe0000000
 800b828:	4618      	mov	r0, r3
 800b82a:	46bd      	mov	sp, r7
 800b82c:	bc80      	pop	{r7}
 800b82e:	4770      	bx	lr

0800b830 <LL_RCC_PLL_GetDivider>:
 800b830:	b480      	push	{r7}
 800b832:	af00      	add	r7, sp, #0
 800b834:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 800b838:	68db      	ldr	r3, [r3, #12]
 800b83a:	f003 0370 	and.w	r3, r3, #112	; 0x70
 800b83e:	4618      	mov	r0, r3
 800b840:	46bd      	mov	sp, r7
 800b842:	bc80      	pop	{r7}
 800b844:	4770      	bx	lr

0800b846 <LL_RCC_PLL_GetMainSource>:
 800b846:	b480      	push	{r7}
 800b848:	af00      	add	r7, sp, #0
 800b84a:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 800b84e:	68db      	ldr	r3, [r3, #12]
 800b850:	f003 0303 	and.w	r3, r3, #3
 800b854:	4618      	mov	r0, r3
 800b856:	46bd      	mov	sp, r7
 800b858:	bc80      	pop	{r7}
 800b85a:	4770      	bx	lr

0800b85c <LL_RCC_IsActiveFlag_HPRE>:
 800b85c:	b480      	push	{r7}
 800b85e:	af00      	add	r7, sp, #0
 800b860:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 800b864:	689b      	ldr	r3, [r3, #8]
 800b866:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 800b86a:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800b86e:	d101      	bne.n	800b874 <LL_RCC_IsActiveFlag_HPRE+0x18>
 800b870:	2301      	movs	r3, #1
 800b872:	e000      	b.n	800b876 <LL_RCC_IsActiveFlag_HPRE+0x1a>
 800b874:	2300      	movs	r3, #0
 800b876:	4618      	mov	r0, r3
 800b878:	46bd      	mov	sp, r7
 800b87a:	bc80      	pop	{r7}
 800b87c:	4770      	bx	lr

0800b87e <LL_RCC_IsActiveFlag_C2HPRE>:
 800b87e:	b480      	push	{r7}
 800b880:	af00      	add	r7, sp, #0
 800b882:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 800b886:	f8d3 3108 	ldr.w	r3, [r3, #264]	; 0x108
 800b88a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800b88e:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 800b892:	d101      	bne.n	800b898 <LL_RCC_IsActiveFlag_C2HPRE+0x1a>
 800b894:	2301      	movs	r3, #1
 800b896:	e000      	b.n	800b89a <LL_RCC_IsActiveFlag_C2HPRE+0x1c>
 800b898:	2300      	movs	r3, #0
 800b89a:	4618      	mov	r0, r3
 800b89c:	46bd      	mov	sp, r7
 800b89e:	bc80      	pop	{r7}
 800b8a0:	4770      	bx	lr

0800b8a2 <LL_RCC_IsActiveFlag_SHDHPRE>:
 800b8a2:	b480      	push	{r7}
 800b8a4:	af00      	add	r7, sp, #0
 800b8a6:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 800b8aa:	f8d3 3108 	ldr.w	r3, [r3, #264]	; 0x108
 800b8ae:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 800b8b2:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800b8b6:	d101      	bne.n	800b8bc <LL_RCC_IsActiveFlag_SHDHPRE+0x1a>
 800b8b8:	2301      	movs	r3, #1
 800b8ba:	e000      	b.n	800b8be <LL_RCC_IsActiveFlag_SHDHPRE+0x1c>
 800b8bc:	2300      	movs	r3, #0
 800b8be:	4618      	mov	r0, r3
 800b8c0:	46bd      	mov	sp, r7
 800b8c2:	bc80      	pop	{r7}
 800b8c4:	4770      	bx	lr

0800b8c6 <LL_RCC_IsActiveFlag_PPRE1>:
 800b8c6:	b480      	push	{r7}
 800b8c8:	af00      	add	r7, sp, #0
 800b8ca:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 800b8ce:	689b      	ldr	r3, [r3, #8]
 800b8d0:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800b8d4:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 800b8d8:	d101      	bne.n	800b8de <LL_RCC_IsActiveFlag_PPRE1+0x18>
 800b8da:	2301      	movs	r3, #1
 800b8dc:	e000      	b.n	800b8e0 <LL_RCC_IsActiveFlag_PPRE1+0x1a>
 800b8de:	2300      	movs	r3, #0
 800b8e0:	4618      	mov	r0, r3
 800b8e2:	46bd      	mov	sp, r7
 800b8e4:	bc80      	pop	{r7}
 800b8e6:	4770      	bx	lr

0800b8e8 <LL_RCC_IsActiveFlag_PPRE2>:
 800b8e8:	b480      	push	{r7}
 800b8ea:	af00      	add	r7, sp, #0
 800b8ec:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 800b8f0:	689b      	ldr	r3, [r3, #8]
 800b8f2:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 800b8f6:	f5b3 2f80 	cmp.w	r3, #262144	; 0x40000
 800b8fa:	d101      	bne.n	800b900 <LL_RCC_IsActiveFlag_PPRE2+0x18>
 800b8fc:	2301      	movs	r3, #1
 800b8fe:	e000      	b.n	800b902 <LL_RCC_IsActiveFlag_PPRE2+0x1a>
 800b900:	2300      	movs	r3, #0
 800b902:	4618      	mov	r0, r3
 800b904:	46bd      	mov	sp, r7
 800b906:	bc80      	pop	{r7}
 800b908:	4770      	bx	lr

0800b90a <LL_AHB2_GRP1_EnableClock>:
 800b90a:	b480      	push	{r7}
 800b90c:	b085      	sub	sp, #20
 800b90e:	af00      	add	r7, sp, #0
 800b910:	6078      	str	r0, [r7, #4]
 800b912:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 800b916:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 800b918:	f04f 41b0 	mov.w	r1, #1476395008	; 0x58000000
 800b91c:	687b      	ldr	r3, [r7, #4]
 800b91e:	4313      	orrs	r3, r2
 800b920:	64cb      	str	r3, [r1, #76]	; 0x4c
 800b922:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 800b926:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 800b928:	687b      	ldr	r3, [r7, #4]
 800b92a:	4013      	ands	r3, r2
 800b92c:	60fb      	str	r3, [r7, #12]
 800b92e:	68fb      	ldr	r3, [r7, #12]
 800b930:	bf00      	nop
 800b932:	3714      	adds	r7, #20
 800b934:	46bd      	mov	sp, r7
 800b936:	bc80      	pop	{r7}
 800b938:	4770      	bx	lr
	...

0800b93c <HAL_RCC_OscConfig>:
 800b93c:	b580      	push	{r7, lr}
 800b93e:	b088      	sub	sp, #32
 800b940:	af00      	add	r7, sp, #0
 800b942:	6078      	str	r0, [r7, #4]
 800b944:	687b      	ldr	r3, [r7, #4]
 800b946:	2b00      	cmp	r3, #0
 800b948:	d101      	bne.n	800b94e <HAL_RCC_OscConfig+0x12>
 800b94a:	2301      	movs	r3, #1
 800b94c:	e38a      	b.n	800c064 <HAL_RCC_OscConfig+0x728>
 800b94e:	f7ff fe78 	bl	800b642 <LL_RCC_GetSysClkSource>
 800b952:	61f8      	str	r0, [r7, #28]
 800b954:	f7ff ff77 	bl	800b846 <LL_RCC_PLL_GetMainSource>
 800b958:	61b8      	str	r0, [r7, #24]
 800b95a:	687b      	ldr	r3, [r7, #4]
 800b95c:	681b      	ldr	r3, [r3, #0]
 800b95e:	f003 0320 	and.w	r3, r3, #32
 800b962:	2b00      	cmp	r3, #0
 800b964:	f000 80c9 	beq.w	800bafa <HAL_RCC_OscConfig+0x1be>
 800b968:	69fb      	ldr	r3, [r7, #28]
 800b96a:	2b00      	cmp	r3, #0
 800b96c:	d005      	beq.n	800b97a <HAL_RCC_OscConfig+0x3e>
 800b96e:	69fb      	ldr	r3, [r7, #28]
 800b970:	2b0c      	cmp	r3, #12
 800b972:	d17b      	bne.n	800ba6c <HAL_RCC_OscConfig+0x130>
 800b974:	69bb      	ldr	r3, [r7, #24]
 800b976:	2b01      	cmp	r3, #1
 800b978:	d178      	bne.n	800ba6c <HAL_RCC_OscConfig+0x130>
 800b97a:	f7ff fe04 	bl	800b586 <LL_RCC_MSI_IsReady>
 800b97e:	4603      	mov	r3, r0
 800b980:	2b00      	cmp	r3, #0
 800b982:	d005      	beq.n	800b990 <HAL_RCC_OscConfig+0x54>
 800b984:	687b      	ldr	r3, [r7, #4]
 800b986:	6a1b      	ldr	r3, [r3, #32]
 800b988:	2b00      	cmp	r3, #0
 800b98a:	d101      	bne.n	800b990 <HAL_RCC_OscConfig+0x54>
 800b98c:	2301      	movs	r3, #1
 800b98e:	e369      	b.n	800c064 <HAL_RCC_OscConfig+0x728>
 800b990:	687b      	ldr	r3, [r7, #4]
 800b992:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 800b994:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 800b998:	681b      	ldr	r3, [r3, #0]
 800b99a:	f003 0308 	and.w	r3, r3, #8
 800b99e:	2b00      	cmp	r3, #0
 800b9a0:	d005      	beq.n	800b9ae <HAL_RCC_OscConfig+0x72>
 800b9a2:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 800b9a6:	681b      	ldr	r3, [r3, #0]
 800b9a8:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 800b9ac:	e006      	b.n	800b9bc <HAL_RCC_OscConfig+0x80>
 800b9ae:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 800b9b2:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 800b9b6:	091b      	lsrs	r3, r3, #4
 800b9b8:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 800b9bc:	4293      	cmp	r3, r2
 800b9be:	d222      	bcs.n	800ba06 <HAL_RCC_OscConfig+0xca>
 800b9c0:	687b      	ldr	r3, [r7, #4]
 800b9c2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800b9c4:	4618      	mov	r0, r3
 800b9c6:	f000 fd91 	bl	800c4ec <RCC_SetFlashLatencyFromMSIRange>
 800b9ca:	4603      	mov	r3, r0
 800b9cc:	2b00      	cmp	r3, #0
 800b9ce:	d001      	beq.n	800b9d4 <HAL_RCC_OscConfig+0x98>
 800b9d0:	2301      	movs	r3, #1
 800b9d2:	e347      	b.n	800c064 <HAL_RCC_OscConfig+0x728>
 800b9d4:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 800b9d8:	681b      	ldr	r3, [r3, #0]
 800b9da:	f04f 42b0 	mov.w	r2, #1476395008	; 0x58000000
 800b9de:	f043 0308 	orr.w	r3, r3, #8
 800b9e2:	6013      	str	r3, [r2, #0]
 800b9e4:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 800b9e8:	681b      	ldr	r3, [r3, #0]
 800b9ea:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 800b9ee:	687b      	ldr	r3, [r7, #4]
 800b9f0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800b9f2:	f04f 41b0 	mov.w	r1, #1476395008	; 0x58000000
 800b9f6:	4313      	orrs	r3, r2
 800b9f8:	600b      	str	r3, [r1, #0]
 800b9fa:	687b      	ldr	r3, [r7, #4]
 800b9fc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800b9fe:	4618      	mov	r0, r3
 800ba00:	f7ff fdf8 	bl	800b5f4 <LL_RCC_MSI_SetCalibTrimming>
 800ba04:	e021      	b.n	800ba4a <HAL_RCC_OscConfig+0x10e>
 800ba06:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 800ba0a:	681b      	ldr	r3, [r3, #0]
 800ba0c:	f04f 42b0 	mov.w	r2, #1476395008	; 0x58000000
 800ba10:	f043 0308 	orr.w	r3, r3, #8
 800ba14:	6013      	str	r3, [r2, #0]
 800ba16:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 800ba1a:	681b      	ldr	r3, [r3, #0]
 800ba1c:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 800ba20:	687b      	ldr	r3, [r7, #4]
 800ba22:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800ba24:	f04f 41b0 	mov.w	r1, #1476395008	; 0x58000000
 800ba28:	4313      	orrs	r3, r2
 800ba2a:	600b      	str	r3, [r1, #0]
 800ba2c:	687b      	ldr	r3, [r7, #4]
 800ba2e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800ba30:	4618      	mov	r0, r3
 800ba32:	f7ff fddf 	bl	800b5f4 <LL_RCC_MSI_SetCalibTrimming>
 800ba36:	687b      	ldr	r3, [r7, #4]
 800ba38:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800ba3a:	4618      	mov	r0, r3
 800ba3c:	f000 fd56 	bl	800c4ec <RCC_SetFlashLatencyFromMSIRange>
 800ba40:	4603      	mov	r3, r0
 800ba42:	2b00      	cmp	r3, #0
 800ba44:	d001      	beq.n	800ba4a <HAL_RCC_OscConfig+0x10e>
 800ba46:	2301      	movs	r3, #1
 800ba48:	e30c      	b.n	800c064 <HAL_RCC_OscConfig+0x728>
 800ba4a:	f000 fd17 	bl	800c47c <HAL_RCC_GetHCLKFreq>
 800ba4e:	4603      	mov	r3, r0
 800ba50:	4ab4      	ldr	r2, [pc, #720]	; (800bd24 <HAL_RCC_OscConfig+0x3e8>)
 800ba52:	6013      	str	r3, [r2, #0]
 800ba54:	4bb4      	ldr	r3, [pc, #720]	; (800bd28 <HAL_RCC_OscConfig+0x3ec>)
 800ba56:	681b      	ldr	r3, [r3, #0]
 800ba58:	4618      	mov	r0, r3
 800ba5a:	f7fa fcb1 	bl	80063c0 <HAL_InitTick>
 800ba5e:	4603      	mov	r3, r0
 800ba60:	74fb      	strb	r3, [r7, #19]
 800ba62:	7cfb      	ldrb	r3, [r7, #19]
 800ba64:	2b00      	cmp	r3, #0
 800ba66:	d047      	beq.n	800baf8 <HAL_RCC_OscConfig+0x1bc>
 800ba68:	7cfb      	ldrb	r3, [r7, #19]
 800ba6a:	e2fb      	b.n	800c064 <HAL_RCC_OscConfig+0x728>
 800ba6c:	687b      	ldr	r3, [r7, #4]
 800ba6e:	6a1b      	ldr	r3, [r3, #32]
 800ba70:	2b00      	cmp	r3, #0
 800ba72:	d02c      	beq.n	800bace <HAL_RCC_OscConfig+0x192>
 800ba74:	f7ff fd6b 	bl	800b54e <LL_RCC_MSI_Enable>
 800ba78:	f7fa fcac 	bl	80063d4 <HAL_GetTick>
 800ba7c:	6178      	str	r0, [r7, #20]
 800ba7e:	e008      	b.n	800ba92 <HAL_RCC_OscConfig+0x156>
 800ba80:	f7fa fca8 	bl	80063d4 <HAL_GetTick>
 800ba84:	4602      	mov	r2, r0
 800ba86:	697b      	ldr	r3, [r7, #20]
 800ba88:	1ad3      	subs	r3, r2, r3
 800ba8a:	2b02      	cmp	r3, #2
 800ba8c:	d901      	bls.n	800ba92 <HAL_RCC_OscConfig+0x156>
 800ba8e:	2303      	movs	r3, #3
 800ba90:	e2e8      	b.n	800c064 <HAL_RCC_OscConfig+0x728>
 800ba92:	f7ff fd78 	bl	800b586 <LL_RCC_MSI_IsReady>
 800ba96:	4603      	mov	r3, r0
 800ba98:	2b00      	cmp	r3, #0
 800ba9a:	d0f1      	beq.n	800ba80 <HAL_RCC_OscConfig+0x144>
 800ba9c:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 800baa0:	681b      	ldr	r3, [r3, #0]
 800baa2:	f04f 42b0 	mov.w	r2, #1476395008	; 0x58000000
 800baa6:	f043 0308 	orr.w	r3, r3, #8
 800baaa:	6013      	str	r3, [r2, #0]
 800baac:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 800bab0:	681b      	ldr	r3, [r3, #0]
 800bab2:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 800bab6:	687b      	ldr	r3, [r7, #4]
 800bab8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800baba:	f04f 41b0 	mov.w	r1, #1476395008	; 0x58000000
 800babe:	4313      	orrs	r3, r2
 800bac0:	600b      	str	r3, [r1, #0]
 800bac2:	687b      	ldr	r3, [r7, #4]
 800bac4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800bac6:	4618      	mov	r0, r3
 800bac8:	f7ff fd94 	bl	800b5f4 <LL_RCC_MSI_SetCalibTrimming>
 800bacc:	e015      	b.n	800bafa <HAL_RCC_OscConfig+0x1be>
 800bace:	f7ff fd4c 	bl	800b56a <LL_RCC_MSI_Disable>
 800bad2:	f7fa fc7f 	bl	80063d4 <HAL_GetTick>
 800bad6:	6178      	str	r0, [r7, #20]
 800bad8:	e008      	b.n	800baec <HAL_RCC_OscConfig+0x1b0>
 800bada:	f7fa fc7b 	bl	80063d4 <HAL_GetTick>
 800bade:	4602      	mov	r2, r0
 800bae0:	697b      	ldr	r3, [r7, #20]
 800bae2:	1ad3      	subs	r3, r2, r3
 800bae4:	2b02      	cmp	r3, #2
 800bae6:	d901      	bls.n	800baec <HAL_RCC_OscConfig+0x1b0>
 800bae8:	2303      	movs	r3, #3
 800baea:	e2bb      	b.n	800c064 <HAL_RCC_OscConfig+0x728>
 800baec:	f7ff fd4b 	bl	800b586 <LL_RCC_MSI_IsReady>
 800baf0:	4603      	mov	r3, r0
 800baf2:	2b00      	cmp	r3, #0
 800baf4:	d1f1      	bne.n	800bada <HAL_RCC_OscConfig+0x19e>
 800baf6:	e000      	b.n	800bafa <HAL_RCC_OscConfig+0x1be>
 800baf8:	bf00      	nop
 800bafa:	687b      	ldr	r3, [r7, #4]
 800bafc:	681b      	ldr	r3, [r3, #0]
 800bafe:	f003 0301 	and.w	r3, r3, #1
 800bb02:	2b00      	cmp	r3, #0
 800bb04:	d05f      	beq.n	800bbc6 <HAL_RCC_OscConfig+0x28a>
 800bb06:	69fb      	ldr	r3, [r7, #28]
 800bb08:	2b08      	cmp	r3, #8
 800bb0a:	d005      	beq.n	800bb18 <HAL_RCC_OscConfig+0x1dc>
 800bb0c:	69fb      	ldr	r3, [r7, #28]
 800bb0e:	2b0c      	cmp	r3, #12
 800bb10:	d10d      	bne.n	800bb2e <HAL_RCC_OscConfig+0x1f2>
 800bb12:	69bb      	ldr	r3, [r7, #24]
 800bb14:	2b03      	cmp	r3, #3
 800bb16:	d10a      	bne.n	800bb2e <HAL_RCC_OscConfig+0x1f2>
 800bb18:	f7ff fc85 	bl	800b426 <LL_RCC_HSE_IsReady>
 800bb1c:	4603      	mov	r3, r0
 800bb1e:	2b00      	cmp	r3, #0
 800bb20:	d050      	beq.n	800bbc4 <HAL_RCC_OscConfig+0x288>
 800bb22:	687b      	ldr	r3, [r7, #4]
 800bb24:	685b      	ldr	r3, [r3, #4]
 800bb26:	2b00      	cmp	r3, #0
 800bb28:	d14c      	bne.n	800bbc4 <HAL_RCC_OscConfig+0x288>
 800bb2a:	2301      	movs	r3, #1
 800bb2c:	e29a      	b.n	800c064 <HAL_RCC_OscConfig+0x728>
 800bb2e:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 800bb32:	681b      	ldr	r3, [r3, #0]
 800bb34:	f423 1280 	bic.w	r2, r3, #1048576	; 0x100000
 800bb38:	687b      	ldr	r3, [r7, #4]
 800bb3a:	689b      	ldr	r3, [r3, #8]
 800bb3c:	f04f 41b0 	mov.w	r1, #1476395008	; 0x58000000
 800bb40:	4313      	orrs	r3, r2
 800bb42:	600b      	str	r3, [r1, #0]
 800bb44:	687b      	ldr	r3, [r7, #4]
 800bb46:	685b      	ldr	r3, [r3, #4]
 800bb48:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800bb4c:	d102      	bne.n	800bb54 <HAL_RCC_OscConfig+0x218>
 800bb4e:	f7ff fc4e 	bl	800b3ee <LL_RCC_HSE_Enable>
 800bb52:	e00d      	b.n	800bb70 <HAL_RCC_OscConfig+0x234>
 800bb54:	687b      	ldr	r3, [r7, #4]
 800bb56:	685b      	ldr	r3, [r3, #4]
 800bb58:	f5b3 1f04 	cmp.w	r3, #2162688	; 0x210000
 800bb5c:	d104      	bne.n	800bb68 <HAL_RCC_OscConfig+0x22c>
 800bb5e:	f7ff fc19 	bl	800b394 <LL_RCC_HSE_EnableTcxo>
 800bb62:	f7ff fc44 	bl	800b3ee <LL_RCC_HSE_Enable>
 800bb66:	e003      	b.n	800bb70 <HAL_RCC_OscConfig+0x234>
 800bb68:	f7ff fc4f 	bl	800b40a <LL_RCC_HSE_Disable>
 800bb6c:	f7ff fc20 	bl	800b3b0 <LL_RCC_HSE_DisableTcxo>
 800bb70:	687b      	ldr	r3, [r7, #4]
 800bb72:	685b      	ldr	r3, [r3, #4]
 800bb74:	2b00      	cmp	r3, #0
 800bb76:	d012      	beq.n	800bb9e <HAL_RCC_OscConfig+0x262>
 800bb78:	f7fa fc2c 	bl	80063d4 <HAL_GetTick>
 800bb7c:	6178      	str	r0, [r7, #20]
 800bb7e:	e008      	b.n	800bb92 <HAL_RCC_OscConfig+0x256>
 800bb80:	f7fa fc28 	bl	80063d4 <HAL_GetTick>
 800bb84:	4602      	mov	r2, r0
 800bb86:	697b      	ldr	r3, [r7, #20]
 800bb88:	1ad3      	subs	r3, r2, r3
 800bb8a:	2b64      	cmp	r3, #100	; 0x64
 800bb8c:	d901      	bls.n	800bb92 <HAL_RCC_OscConfig+0x256>
 800bb8e:	2303      	movs	r3, #3
 800bb90:	e268      	b.n	800c064 <HAL_RCC_OscConfig+0x728>
 800bb92:	f7ff fc48 	bl	800b426 <LL_RCC_HSE_IsReady>
 800bb96:	4603      	mov	r3, r0
 800bb98:	2b00      	cmp	r3, #0
 800bb9a:	d0f1      	beq.n	800bb80 <HAL_RCC_OscConfig+0x244>
 800bb9c:	e013      	b.n	800bbc6 <HAL_RCC_OscConfig+0x28a>
 800bb9e:	f7fa fc19 	bl	80063d4 <HAL_GetTick>
 800bba2:	6178      	str	r0, [r7, #20]
 800bba4:	e008      	b.n	800bbb8 <HAL_RCC_OscConfig+0x27c>
 800bba6:	f7fa fc15 	bl	80063d4 <HAL_GetTick>
 800bbaa:	4602      	mov	r2, r0
 800bbac:	697b      	ldr	r3, [r7, #20]
 800bbae:	1ad3      	subs	r3, r2, r3
 800bbb0:	2b64      	cmp	r3, #100	; 0x64
 800bbb2:	d901      	bls.n	800bbb8 <HAL_RCC_OscConfig+0x27c>
 800bbb4:	2303      	movs	r3, #3
 800bbb6:	e255      	b.n	800c064 <HAL_RCC_OscConfig+0x728>
 800bbb8:	f7ff fc35 	bl	800b426 <LL_RCC_HSE_IsReady>
 800bbbc:	4603      	mov	r3, r0
 800bbbe:	2b00      	cmp	r3, #0
 800bbc0:	d1f1      	bne.n	800bba6 <HAL_RCC_OscConfig+0x26a>
 800bbc2:	e000      	b.n	800bbc6 <HAL_RCC_OscConfig+0x28a>
 800bbc4:	bf00      	nop
 800bbc6:	687b      	ldr	r3, [r7, #4]
 800bbc8:	681b      	ldr	r3, [r3, #0]
 800bbca:	f003 0302 	and.w	r3, r3, #2
 800bbce:	2b00      	cmp	r3, #0
 800bbd0:	d04b      	beq.n	800bc6a <HAL_RCC_OscConfig+0x32e>
 800bbd2:	69fb      	ldr	r3, [r7, #28]
 800bbd4:	2b04      	cmp	r3, #4
 800bbd6:	d005      	beq.n	800bbe4 <HAL_RCC_OscConfig+0x2a8>
 800bbd8:	69fb      	ldr	r3, [r7, #28]
 800bbda:	2b0c      	cmp	r3, #12
 800bbdc:	d113      	bne.n	800bc06 <HAL_RCC_OscConfig+0x2ca>
 800bbde:	69bb      	ldr	r3, [r7, #24]
 800bbe0:	2b02      	cmp	r3, #2
 800bbe2:	d110      	bne.n	800bc06 <HAL_RCC_OscConfig+0x2ca>
 800bbe4:	f7ff fc4c 	bl	800b480 <LL_RCC_HSI_IsReady>
 800bbe8:	4603      	mov	r3, r0
 800bbea:	2b00      	cmp	r3, #0
 800bbec:	d005      	beq.n	800bbfa <HAL_RCC_OscConfig+0x2be>
 800bbee:	687b      	ldr	r3, [r7, #4]
 800bbf0:	691b      	ldr	r3, [r3, #16]
 800bbf2:	2b00      	cmp	r3, #0
 800bbf4:	d101      	bne.n	800bbfa <HAL_RCC_OscConfig+0x2be>
 800bbf6:	2301      	movs	r3, #1
 800bbf8:	e234      	b.n	800c064 <HAL_RCC_OscConfig+0x728>
 800bbfa:	687b      	ldr	r3, [r7, #4]
 800bbfc:	695b      	ldr	r3, [r3, #20]
 800bbfe:	4618      	mov	r0, r3
 800bc00:	f7ff fc4f 	bl	800b4a2 <LL_RCC_HSI_SetCalibTrimming>
 800bc04:	e031      	b.n	800bc6a <HAL_RCC_OscConfig+0x32e>
 800bc06:	687b      	ldr	r3, [r7, #4]
 800bc08:	691b      	ldr	r3, [r3, #16]
 800bc0a:	2b00      	cmp	r3, #0
 800bc0c:	d019      	beq.n	800bc42 <HAL_RCC_OscConfig+0x306>
 800bc0e:	f7ff fc1b 	bl	800b448 <LL_RCC_HSI_Enable>
 800bc12:	f7fa fbdf 	bl	80063d4 <HAL_GetTick>
 800bc16:	6178      	str	r0, [r7, #20]
 800bc18:	e008      	b.n	800bc2c <HAL_RCC_OscConfig+0x2f0>
 800bc1a:	f7fa fbdb 	bl	80063d4 <HAL_GetTick>
 800bc1e:	4602      	mov	r2, r0
 800bc20:	697b      	ldr	r3, [r7, #20]
 800bc22:	1ad3      	subs	r3, r2, r3
 800bc24:	2b02      	cmp	r3, #2
 800bc26:	d901      	bls.n	800bc2c <HAL_RCC_OscConfig+0x2f0>
 800bc28:	2303      	movs	r3, #3
 800bc2a:	e21b      	b.n	800c064 <HAL_RCC_OscConfig+0x728>
 800bc2c:	f7ff fc28 	bl	800b480 <LL_RCC_HSI_IsReady>
 800bc30:	4603      	mov	r3, r0
 800bc32:	2b00      	cmp	r3, #0
 800bc34:	d0f1      	beq.n	800bc1a <HAL_RCC_OscConfig+0x2de>
 800bc36:	687b      	ldr	r3, [r7, #4]
 800bc38:	695b      	ldr	r3, [r3, #20]
 800bc3a:	4618      	mov	r0, r3
 800bc3c:	f7ff fc31 	bl	800b4a2 <LL_RCC_HSI_SetCalibTrimming>
 800bc40:	e013      	b.n	800bc6a <HAL_RCC_OscConfig+0x32e>
 800bc42:	f7ff fc0f 	bl	800b464 <LL_RCC_HSI_Disable>
 800bc46:	f7fa fbc5 	bl	80063d4 <HAL_GetTick>
 800bc4a:	6178      	str	r0, [r7, #20]
 800bc4c:	e008      	b.n	800bc60 <HAL_RCC_OscConfig+0x324>
 800bc4e:	f7fa fbc1 	bl	80063d4 <HAL_GetTick>
 800bc52:	4602      	mov	r2, r0
 800bc54:	697b      	ldr	r3, [r7, #20]
 800bc56:	1ad3      	subs	r3, r2, r3
 800bc58:	2b02      	cmp	r3, #2
 800bc5a:	d901      	bls.n	800bc60 <HAL_RCC_OscConfig+0x324>
 800bc5c:	2303      	movs	r3, #3
 800bc5e:	e201      	b.n	800c064 <HAL_RCC_OscConfig+0x728>
 800bc60:	f7ff fc0e 	bl	800b480 <LL_RCC_HSI_IsReady>
 800bc64:	4603      	mov	r3, r0
 800bc66:	2b00      	cmp	r3, #0
 800bc68:	d1f1      	bne.n	800bc4e <HAL_RCC_OscConfig+0x312>
 800bc6a:	687b      	ldr	r3, [r7, #4]
 800bc6c:	681b      	ldr	r3, [r3, #0]
 800bc6e:	f003 0308 	and.w	r3, r3, #8
 800bc72:	2b00      	cmp	r3, #0
 800bc74:	d06e      	beq.n	800bd54 <HAL_RCC_OscConfig+0x418>
 800bc76:	687b      	ldr	r3, [r7, #4]
 800bc78:	699b      	ldr	r3, [r3, #24]
 800bc7a:	2b00      	cmp	r3, #0
 800bc7c:	d056      	beq.n	800bd2c <HAL_RCC_OscConfig+0x3f0>
 800bc7e:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 800bc82:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 800bc86:	60fb      	str	r3, [r7, #12]
 800bc88:	687b      	ldr	r3, [r7, #4]
 800bc8a:	69da      	ldr	r2, [r3, #28]
 800bc8c:	68fb      	ldr	r3, [r7, #12]
 800bc8e:	f003 0310 	and.w	r3, r3, #16
 800bc92:	429a      	cmp	r2, r3
 800bc94:	d031      	beq.n	800bcfa <HAL_RCC_OscConfig+0x3be>
 800bc96:	68fb      	ldr	r3, [r7, #12]
 800bc98:	f003 0302 	and.w	r3, r3, #2
 800bc9c:	2b00      	cmp	r3, #0
 800bc9e:	d006      	beq.n	800bcae <HAL_RCC_OscConfig+0x372>
 800bca0:	68fb      	ldr	r3, [r7, #12]
 800bca2:	f003 0301 	and.w	r3, r3, #1
 800bca6:	2b00      	cmp	r3, #0
 800bca8:	d101      	bne.n	800bcae <HAL_RCC_OscConfig+0x372>
 800bcaa:	2301      	movs	r3, #1
 800bcac:	e1da      	b.n	800c064 <HAL_RCC_OscConfig+0x728>
 800bcae:	68fb      	ldr	r3, [r7, #12]
 800bcb0:	f003 0301 	and.w	r3, r3, #1
 800bcb4:	2b00      	cmp	r3, #0
 800bcb6:	d013      	beq.n	800bce0 <HAL_RCC_OscConfig+0x3a4>
 800bcb8:	f7ff fc28 	bl	800b50c <LL_RCC_LSI_Disable>
 800bcbc:	f7fa fb8a 	bl	80063d4 <HAL_GetTick>
 800bcc0:	6178      	str	r0, [r7, #20]
 800bcc2:	e008      	b.n	800bcd6 <HAL_RCC_OscConfig+0x39a>
 800bcc4:	f7fa fb86 	bl	80063d4 <HAL_GetTick>
 800bcc8:	4602      	mov	r2, r0
 800bcca:	697b      	ldr	r3, [r7, #20]
 800bccc:	1ad3      	subs	r3, r2, r3
 800bcce:	2b11      	cmp	r3, #17
 800bcd0:	d901      	bls.n	800bcd6 <HAL_RCC_OscConfig+0x39a>
 800bcd2:	2303      	movs	r3, #3
 800bcd4:	e1c6      	b.n	800c064 <HAL_RCC_OscConfig+0x728>
 800bcd6:	f7ff fc29 	bl	800b52c <LL_RCC_LSI_IsReady>
 800bcda:	4603      	mov	r3, r0
 800bcdc:	2b00      	cmp	r3, #0
 800bcde:	d1f1      	bne.n	800bcc4 <HAL_RCC_OscConfig+0x388>
 800bce0:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 800bce4:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 800bce8:	f023 0210 	bic.w	r2, r3, #16
 800bcec:	687b      	ldr	r3, [r7, #4]
 800bcee:	69db      	ldr	r3, [r3, #28]
 800bcf0:	f04f 41b0 	mov.w	r1, #1476395008	; 0x58000000
 800bcf4:	4313      	orrs	r3, r2
 800bcf6:	f8c1 3094 	str.w	r3, [r1, #148]	; 0x94
 800bcfa:	f7ff fbf7 	bl	800b4ec <LL_RCC_LSI_Enable>
 800bcfe:	f7fa fb69 	bl	80063d4 <HAL_GetTick>
 800bd02:	6178      	str	r0, [r7, #20]
 800bd04:	e008      	b.n	800bd18 <HAL_RCC_OscConfig+0x3dc>
 800bd06:	f7fa fb65 	bl	80063d4 <HAL_GetTick>
 800bd0a:	4602      	mov	r2, r0
 800bd0c:	697b      	ldr	r3, [r7, #20]
 800bd0e:	1ad3      	subs	r3, r2, r3
 800bd10:	2b11      	cmp	r3, #17
 800bd12:	d901      	bls.n	800bd18 <HAL_RCC_OscConfig+0x3dc>
 800bd14:	2303      	movs	r3, #3
 800bd16:	e1a5      	b.n	800c064 <HAL_RCC_OscConfig+0x728>
 800bd18:	f7ff fc08 	bl	800b52c <LL_RCC_LSI_IsReady>
 800bd1c:	4603      	mov	r3, r0
 800bd1e:	2b00      	cmp	r3, #0
 800bd20:	d0f1      	beq.n	800bd06 <HAL_RCC_OscConfig+0x3ca>
 800bd22:	e017      	b.n	800bd54 <HAL_RCC_OscConfig+0x418>
 800bd24:	2000003c 	.word	0x2000003c
 800bd28:	20000040 	.word	0x20000040
 800bd2c:	f7ff fbee 	bl	800b50c <LL_RCC_LSI_Disable>
 800bd30:	f7fa fb50 	bl	80063d4 <HAL_GetTick>
 800bd34:	6178      	str	r0, [r7, #20]
 800bd36:	e008      	b.n	800bd4a <HAL_RCC_OscConfig+0x40e>
 800bd38:	f7fa fb4c 	bl	80063d4 <HAL_GetTick>
 800bd3c:	4602      	mov	r2, r0
 800bd3e:	697b      	ldr	r3, [r7, #20]
 800bd40:	1ad3      	subs	r3, r2, r3
 800bd42:	2b11      	cmp	r3, #17
 800bd44:	d901      	bls.n	800bd4a <HAL_RCC_OscConfig+0x40e>
 800bd46:	2303      	movs	r3, #3
 800bd48:	e18c      	b.n	800c064 <HAL_RCC_OscConfig+0x728>
 800bd4a:	f7ff fbef 	bl	800b52c <LL_RCC_LSI_IsReady>
 800bd4e:	4603      	mov	r3, r0
 800bd50:	2b00      	cmp	r3, #0
 800bd52:	d1f1      	bne.n	800bd38 <HAL_RCC_OscConfig+0x3fc>
 800bd54:	687b      	ldr	r3, [r7, #4]
 800bd56:	681b      	ldr	r3, [r3, #0]
 800bd58:	f003 0304 	and.w	r3, r3, #4
 800bd5c:	2b00      	cmp	r3, #0
 800bd5e:	f000 80d8 	beq.w	800bf12 <HAL_RCC_OscConfig+0x5d6>
 800bd62:	f7ff fb05 	bl	800b370 <LL_PWR_IsEnabledBkUpAccess>
 800bd66:	4603      	mov	r3, r0
 800bd68:	2b00      	cmp	r3, #0
 800bd6a:	d113      	bne.n	800bd94 <HAL_RCC_OscConfig+0x458>
 800bd6c:	f7ff fa44 	bl	800b1f8 <HAL_PWR_EnableBkUpAccess>
 800bd70:	f7fa fb30 	bl	80063d4 <HAL_GetTick>
 800bd74:	6178      	str	r0, [r7, #20]
 800bd76:	e008      	b.n	800bd8a <HAL_RCC_OscConfig+0x44e>
 800bd78:	f7fa fb2c 	bl	80063d4 <HAL_GetTick>
 800bd7c:	4602      	mov	r2, r0
 800bd7e:	697b      	ldr	r3, [r7, #20]
 800bd80:	1ad3      	subs	r3, r2, r3
 800bd82:	2b02      	cmp	r3, #2
 800bd84:	d901      	bls.n	800bd8a <HAL_RCC_OscConfig+0x44e>
 800bd86:	2303      	movs	r3, #3
 800bd88:	e16c      	b.n	800c064 <HAL_RCC_OscConfig+0x728>
 800bd8a:	f7ff faf1 	bl	800b370 <LL_PWR_IsEnabledBkUpAccess>
 800bd8e:	4603      	mov	r3, r0
 800bd90:	2b00      	cmp	r3, #0
 800bd92:	d0f1      	beq.n	800bd78 <HAL_RCC_OscConfig+0x43c>
 800bd94:	687b      	ldr	r3, [r7, #4]
 800bd96:	68db      	ldr	r3, [r3, #12]
 800bd98:	2b00      	cmp	r3, #0
 800bd9a:	d07b      	beq.n	800be94 <HAL_RCC_OscConfig+0x558>
 800bd9c:	687b      	ldr	r3, [r7, #4]
 800bd9e:	68db      	ldr	r3, [r3, #12]
 800bda0:	2b85      	cmp	r3, #133	; 0x85
 800bda2:	d003      	beq.n	800bdac <HAL_RCC_OscConfig+0x470>
 800bda4:	687b      	ldr	r3, [r7, #4]
 800bda6:	68db      	ldr	r3, [r3, #12]
 800bda8:	2b05      	cmp	r3, #5
 800bdaa:	d109      	bne.n	800bdc0 <HAL_RCC_OscConfig+0x484>
 800bdac:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 800bdb0:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800bdb4:	f04f 42b0 	mov.w	r2, #1476395008	; 0x58000000
 800bdb8:	f043 0304 	orr.w	r3, r3, #4
 800bdbc:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
 800bdc0:	f7fa fb08 	bl	80063d4 <HAL_GetTick>
 800bdc4:	6178      	str	r0, [r7, #20]
 800bdc6:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 800bdca:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800bdce:	f04f 42b0 	mov.w	r2, #1476395008	; 0x58000000
 800bdd2:	f043 0301 	orr.w	r3, r3, #1
 800bdd6:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
 800bdda:	e00a      	b.n	800bdf2 <HAL_RCC_OscConfig+0x4b6>
 800bddc:	f7fa fafa 	bl	80063d4 <HAL_GetTick>
 800bde0:	4602      	mov	r2, r0
 800bde2:	697b      	ldr	r3, [r7, #20]
 800bde4:	1ad3      	subs	r3, r2, r3
 800bde6:	f241 3288 	movw	r2, #5000	; 0x1388
 800bdea:	4293      	cmp	r3, r2
 800bdec:	d901      	bls.n	800bdf2 <HAL_RCC_OscConfig+0x4b6>
 800bdee:	2303      	movs	r3, #3
 800bdf0:	e138      	b.n	800c064 <HAL_RCC_OscConfig+0x728>
 800bdf2:	f7ff fb6a 	bl	800b4ca <LL_RCC_LSE_IsReady>
 800bdf6:	4603      	mov	r3, r0
 800bdf8:	2b00      	cmp	r3, #0
 800bdfa:	d0ef      	beq.n	800bddc <HAL_RCC_OscConfig+0x4a0>
 800bdfc:	687b      	ldr	r3, [r7, #4]
 800bdfe:	68db      	ldr	r3, [r3, #12]
 800be00:	2b81      	cmp	r3, #129	; 0x81
 800be02:	d003      	beq.n	800be0c <HAL_RCC_OscConfig+0x4d0>
 800be04:	687b      	ldr	r3, [r7, #4]
 800be06:	68db      	ldr	r3, [r3, #12]
 800be08:	2b85      	cmp	r3, #133	; 0x85
 800be0a:	d121      	bne.n	800be50 <HAL_RCC_OscConfig+0x514>
 800be0c:	f7fa fae2 	bl	80063d4 <HAL_GetTick>
 800be10:	6178      	str	r0, [r7, #20]
 800be12:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 800be16:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800be1a:	f04f 42b0 	mov.w	r2, #1476395008	; 0x58000000
 800be1e:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800be22:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
 800be26:	e00a      	b.n	800be3e <HAL_RCC_OscConfig+0x502>
 800be28:	f7fa fad4 	bl	80063d4 <HAL_GetTick>
 800be2c:	4602      	mov	r2, r0
 800be2e:	697b      	ldr	r3, [r7, #20]
 800be30:	1ad3      	subs	r3, r2, r3
 800be32:	f241 3288 	movw	r2, #5000	; 0x1388
 800be36:	4293      	cmp	r3, r2
 800be38:	d901      	bls.n	800be3e <HAL_RCC_OscConfig+0x502>
 800be3a:	2303      	movs	r3, #3
 800be3c:	e112      	b.n	800c064 <HAL_RCC_OscConfig+0x728>
 800be3e:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 800be42:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800be46:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 800be4a:	2b00      	cmp	r3, #0
 800be4c:	d0ec      	beq.n	800be28 <HAL_RCC_OscConfig+0x4ec>
 800be4e:	e060      	b.n	800bf12 <HAL_RCC_OscConfig+0x5d6>
 800be50:	f7fa fac0 	bl	80063d4 <HAL_GetTick>
 800be54:	6178      	str	r0, [r7, #20]
 800be56:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 800be5a:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800be5e:	f04f 42b0 	mov.w	r2, #1476395008	; 0x58000000
 800be62:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800be66:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
 800be6a:	e00a      	b.n	800be82 <HAL_RCC_OscConfig+0x546>
 800be6c:	f7fa fab2 	bl	80063d4 <HAL_GetTick>
 800be70:	4602      	mov	r2, r0
 800be72:	697b      	ldr	r3, [r7, #20]
 800be74:	1ad3      	subs	r3, r2, r3
 800be76:	f241 3288 	movw	r2, #5000	; 0x1388
 800be7a:	4293      	cmp	r3, r2
 800be7c:	d901      	bls.n	800be82 <HAL_RCC_OscConfig+0x546>
 800be7e:	2303      	movs	r3, #3
 800be80:	e0f0      	b.n	800c064 <HAL_RCC_OscConfig+0x728>
 800be82:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 800be86:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800be8a:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 800be8e:	2b00      	cmp	r3, #0
 800be90:	d1ec      	bne.n	800be6c <HAL_RCC_OscConfig+0x530>
 800be92:	e03e      	b.n	800bf12 <HAL_RCC_OscConfig+0x5d6>
 800be94:	f7fa fa9e 	bl	80063d4 <HAL_GetTick>
 800be98:	6178      	str	r0, [r7, #20]
 800be9a:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 800be9e:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800bea2:	f04f 42b0 	mov.w	r2, #1476395008	; 0x58000000
 800bea6:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800beaa:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
 800beae:	e00a      	b.n	800bec6 <HAL_RCC_OscConfig+0x58a>
 800beb0:	f7fa fa90 	bl	80063d4 <HAL_GetTick>
 800beb4:	4602      	mov	r2, r0
 800beb6:	697b      	ldr	r3, [r7, #20]
 800beb8:	1ad3      	subs	r3, r2, r3
 800beba:	f241 3288 	movw	r2, #5000	; 0x1388
 800bebe:	4293      	cmp	r3, r2
 800bec0:	d901      	bls.n	800bec6 <HAL_RCC_OscConfig+0x58a>
 800bec2:	2303      	movs	r3, #3
 800bec4:	e0ce      	b.n	800c064 <HAL_RCC_OscConfig+0x728>
 800bec6:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 800beca:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800bece:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 800bed2:	2b00      	cmp	r3, #0
 800bed4:	d1ec      	bne.n	800beb0 <HAL_RCC_OscConfig+0x574>
 800bed6:	f7fa fa7d 	bl	80063d4 <HAL_GetTick>
 800beda:	6178      	str	r0, [r7, #20]
 800bedc:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 800bee0:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800bee4:	f04f 42b0 	mov.w	r2, #1476395008	; 0x58000000
 800bee8:	f023 0301 	bic.w	r3, r3, #1
 800beec:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
 800bef0:	e00a      	b.n	800bf08 <HAL_RCC_OscConfig+0x5cc>
 800bef2:	f7fa fa6f 	bl	80063d4 <HAL_GetTick>
 800bef6:	4602      	mov	r2, r0
 800bef8:	697b      	ldr	r3, [r7, #20]
 800befa:	1ad3      	subs	r3, r2, r3
 800befc:	f241 3288 	movw	r2, #5000	; 0x1388
 800bf00:	4293      	cmp	r3, r2
 800bf02:	d901      	bls.n	800bf08 <HAL_RCC_OscConfig+0x5cc>
 800bf04:	2303      	movs	r3, #3
 800bf06:	e0ad      	b.n	800c064 <HAL_RCC_OscConfig+0x728>
 800bf08:	f7ff fadf 	bl	800b4ca <LL_RCC_LSE_IsReady>
 800bf0c:	4603      	mov	r3, r0
 800bf0e:	2b00      	cmp	r3, #0
 800bf10:	d1ef      	bne.n	800bef2 <HAL_RCC_OscConfig+0x5b6>
 800bf12:	687b      	ldr	r3, [r7, #4]
 800bf14:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800bf16:	2b00      	cmp	r3, #0
 800bf18:	f000 80a3 	beq.w	800c062 <HAL_RCC_OscConfig+0x726>
 800bf1c:	69fb      	ldr	r3, [r7, #28]
 800bf1e:	2b0c      	cmp	r3, #12
 800bf20:	d076      	beq.n	800c010 <HAL_RCC_OscConfig+0x6d4>
 800bf22:	687b      	ldr	r3, [r7, #4]
 800bf24:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800bf26:	2b02      	cmp	r3, #2
 800bf28:	d14b      	bne.n	800bfc2 <HAL_RCC_OscConfig+0x686>
 800bf2a:	f7ff fc4b 	bl	800b7c4 <LL_RCC_PLL_Disable>
 800bf2e:	f7fa fa51 	bl	80063d4 <HAL_GetTick>
 800bf32:	6178      	str	r0, [r7, #20]
 800bf34:	e008      	b.n	800bf48 <HAL_RCC_OscConfig+0x60c>
 800bf36:	f7fa fa4d 	bl	80063d4 <HAL_GetTick>
 800bf3a:	4602      	mov	r2, r0
 800bf3c:	697b      	ldr	r3, [r7, #20]
 800bf3e:	1ad3      	subs	r3, r2, r3
 800bf40:	2b0a      	cmp	r3, #10
 800bf42:	d901      	bls.n	800bf48 <HAL_RCC_OscConfig+0x60c>
 800bf44:	2303      	movs	r3, #3
 800bf46:	e08d      	b.n	800c064 <HAL_RCC_OscConfig+0x728>
 800bf48:	f7ff fc4a 	bl	800b7e0 <LL_RCC_PLL_IsReady>
 800bf4c:	4603      	mov	r3, r0
 800bf4e:	2b00      	cmp	r3, #0
 800bf50:	d1f1      	bne.n	800bf36 <HAL_RCC_OscConfig+0x5fa>
 800bf52:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 800bf56:	68da      	ldr	r2, [r3, #12]
 800bf58:	4b44      	ldr	r3, [pc, #272]	; (800c06c <HAL_RCC_OscConfig+0x730>)
 800bf5a:	4013      	ands	r3, r2
 800bf5c:	687a      	ldr	r2, [r7, #4]
 800bf5e:	6b11      	ldr	r1, [r2, #48]	; 0x30
 800bf60:	687a      	ldr	r2, [r7, #4]
 800bf62:	6b52      	ldr	r2, [r2, #52]	; 0x34
 800bf64:	4311      	orrs	r1, r2
 800bf66:	687a      	ldr	r2, [r7, #4]
 800bf68:	6b92      	ldr	r2, [r2, #56]	; 0x38
 800bf6a:	0212      	lsls	r2, r2, #8
 800bf6c:	4311      	orrs	r1, r2
 800bf6e:	687a      	ldr	r2, [r7, #4]
 800bf70:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 800bf72:	4311      	orrs	r1, r2
 800bf74:	687a      	ldr	r2, [r7, #4]
 800bf76:	6c12      	ldr	r2, [r2, #64]	; 0x40
 800bf78:	4311      	orrs	r1, r2
 800bf7a:	687a      	ldr	r2, [r7, #4]
 800bf7c:	6c52      	ldr	r2, [r2, #68]	; 0x44
 800bf7e:	430a      	orrs	r2, r1
 800bf80:	f04f 41b0 	mov.w	r1, #1476395008	; 0x58000000
 800bf84:	4313      	orrs	r3, r2
 800bf86:	60cb      	str	r3, [r1, #12]
 800bf88:	f7ff fc0e 	bl	800b7a8 <LL_RCC_PLL_Enable>
 800bf8c:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 800bf90:	68db      	ldr	r3, [r3, #12]
 800bf92:	f04f 42b0 	mov.w	r2, #1476395008	; 0x58000000
 800bf96:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800bf9a:	60d3      	str	r3, [r2, #12]
 800bf9c:	f7fa fa1a 	bl	80063d4 <HAL_GetTick>
 800bfa0:	6178      	str	r0, [r7, #20]
 800bfa2:	e008      	b.n	800bfb6 <HAL_RCC_OscConfig+0x67a>
 800bfa4:	f7fa fa16 	bl	80063d4 <HAL_GetTick>
 800bfa8:	4602      	mov	r2, r0
 800bfaa:	697b      	ldr	r3, [r7, #20]
 800bfac:	1ad3      	subs	r3, r2, r3
 800bfae:	2b0a      	cmp	r3, #10
 800bfb0:	d901      	bls.n	800bfb6 <HAL_RCC_OscConfig+0x67a>
 800bfb2:	2303      	movs	r3, #3
 800bfb4:	e056      	b.n	800c064 <HAL_RCC_OscConfig+0x728>
 800bfb6:	f7ff fc13 	bl	800b7e0 <LL_RCC_PLL_IsReady>
 800bfba:	4603      	mov	r3, r0
 800bfbc:	2b00      	cmp	r3, #0
 800bfbe:	d0f1      	beq.n	800bfa4 <HAL_RCC_OscConfig+0x668>
 800bfc0:	e04f      	b.n	800c062 <HAL_RCC_OscConfig+0x726>
 800bfc2:	f7ff fbff 	bl	800b7c4 <LL_RCC_PLL_Disable>
 800bfc6:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 800bfca:	68db      	ldr	r3, [r3, #12]
 800bfcc:	f04f 42b0 	mov.w	r2, #1476395008	; 0x58000000
 800bfd0:	f023 0303 	bic.w	r3, r3, #3
 800bfd4:	60d3      	str	r3, [r2, #12]
 800bfd6:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 800bfda:	68db      	ldr	r3, [r3, #12]
 800bfdc:	f04f 42b0 	mov.w	r2, #1476395008	; 0x58000000
 800bfe0:	f023 5388 	bic.w	r3, r3, #285212672	; 0x11000000
 800bfe4:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 800bfe8:	60d3      	str	r3, [r2, #12]
 800bfea:	f7fa f9f3 	bl	80063d4 <HAL_GetTick>
 800bfee:	6178      	str	r0, [r7, #20]
 800bff0:	e008      	b.n	800c004 <HAL_RCC_OscConfig+0x6c8>
 800bff2:	f7fa f9ef 	bl	80063d4 <HAL_GetTick>
 800bff6:	4602      	mov	r2, r0
 800bff8:	697b      	ldr	r3, [r7, #20]
 800bffa:	1ad3      	subs	r3, r2, r3
 800bffc:	2b0a      	cmp	r3, #10
 800bffe:	d901      	bls.n	800c004 <HAL_RCC_OscConfig+0x6c8>
 800c000:	2303      	movs	r3, #3
 800c002:	e02f      	b.n	800c064 <HAL_RCC_OscConfig+0x728>
 800c004:	f7ff fbec 	bl	800b7e0 <LL_RCC_PLL_IsReady>
 800c008:	4603      	mov	r3, r0
 800c00a:	2b00      	cmp	r3, #0
 800c00c:	d1f1      	bne.n	800bff2 <HAL_RCC_OscConfig+0x6b6>
 800c00e:	e028      	b.n	800c062 <HAL_RCC_OscConfig+0x726>
 800c010:	687b      	ldr	r3, [r7, #4]
 800c012:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800c014:	2b01      	cmp	r3, #1
 800c016:	d101      	bne.n	800c01c <HAL_RCC_OscConfig+0x6e0>
 800c018:	2301      	movs	r3, #1
 800c01a:	e023      	b.n	800c064 <HAL_RCC_OscConfig+0x728>
 800c01c:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 800c020:	68db      	ldr	r3, [r3, #12]
 800c022:	61bb      	str	r3, [r7, #24]
 800c024:	69bb      	ldr	r3, [r7, #24]
 800c026:	f003 0203 	and.w	r2, r3, #3
 800c02a:	687b      	ldr	r3, [r7, #4]
 800c02c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800c02e:	429a      	cmp	r2, r3
 800c030:	d115      	bne.n	800c05e <HAL_RCC_OscConfig+0x722>
 800c032:	69bb      	ldr	r3, [r7, #24]
 800c034:	f003 0270 	and.w	r2, r3, #112	; 0x70
 800c038:	687b      	ldr	r3, [r7, #4]
 800c03a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800c03c:	429a      	cmp	r2, r3
 800c03e:	d10e      	bne.n	800c05e <HAL_RCC_OscConfig+0x722>
 800c040:	69bb      	ldr	r3, [r7, #24]
 800c042:	f403 42fe 	and.w	r2, r3, #32512	; 0x7f00
 800c046:	687b      	ldr	r3, [r7, #4]
 800c048:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800c04a:	021b      	lsls	r3, r3, #8
 800c04c:	429a      	cmp	r2, r3
 800c04e:	d106      	bne.n	800c05e <HAL_RCC_OscConfig+0x722>
 800c050:	69bb      	ldr	r3, [r7, #24]
 800c052:	f003 4260 	and.w	r2, r3, #3758096384	; 0xe0000000
 800c056:	687b      	ldr	r3, [r7, #4]
 800c058:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800c05a:	429a      	cmp	r2, r3
 800c05c:	d001      	beq.n	800c062 <HAL_RCC_OscConfig+0x726>
 800c05e:	2301      	movs	r3, #1
 800c060:	e000      	b.n	800c064 <HAL_RCC_OscConfig+0x728>
 800c062:	2300      	movs	r3, #0
 800c064:	4618      	mov	r0, r3
 800c066:	3720      	adds	r7, #32
 800c068:	46bd      	mov	sp, r7
 800c06a:	bd80      	pop	{r7, pc}
 800c06c:	11c1808c 	.word	0x11c1808c

0800c070 <HAL_RCC_ClockConfig>:
 800c070:	b580      	push	{r7, lr}
 800c072:	b084      	sub	sp, #16
 800c074:	af00      	add	r7, sp, #0
 800c076:	6078      	str	r0, [r7, #4]
 800c078:	6039      	str	r1, [r7, #0]
 800c07a:	687b      	ldr	r3, [r7, #4]
 800c07c:	2b00      	cmp	r3, #0
 800c07e:	d101      	bne.n	800c084 <HAL_RCC_ClockConfig+0x14>
 800c080:	2301      	movs	r3, #1
 800c082:	e12c      	b.n	800c2de <HAL_RCC_ClockConfig+0x26e>
 800c084:	4b98      	ldr	r3, [pc, #608]	; (800c2e8 <HAL_RCC_ClockConfig+0x278>)
 800c086:	681b      	ldr	r3, [r3, #0]
 800c088:	f003 0307 	and.w	r3, r3, #7
 800c08c:	683a      	ldr	r2, [r7, #0]
 800c08e:	429a      	cmp	r2, r3
 800c090:	d91b      	bls.n	800c0ca <HAL_RCC_ClockConfig+0x5a>
 800c092:	4b95      	ldr	r3, [pc, #596]	; (800c2e8 <HAL_RCC_ClockConfig+0x278>)
 800c094:	681b      	ldr	r3, [r3, #0]
 800c096:	f023 0207 	bic.w	r2, r3, #7
 800c09a:	4993      	ldr	r1, [pc, #588]	; (800c2e8 <HAL_RCC_ClockConfig+0x278>)
 800c09c:	683b      	ldr	r3, [r7, #0]
 800c09e:	4313      	orrs	r3, r2
 800c0a0:	600b      	str	r3, [r1, #0]
 800c0a2:	f7fa f997 	bl	80063d4 <HAL_GetTick>
 800c0a6:	60f8      	str	r0, [r7, #12]
 800c0a8:	e008      	b.n	800c0bc <HAL_RCC_ClockConfig+0x4c>
 800c0aa:	f7fa f993 	bl	80063d4 <HAL_GetTick>
 800c0ae:	4602      	mov	r2, r0
 800c0b0:	68fb      	ldr	r3, [r7, #12]
 800c0b2:	1ad3      	subs	r3, r2, r3
 800c0b4:	2b02      	cmp	r3, #2
 800c0b6:	d901      	bls.n	800c0bc <HAL_RCC_ClockConfig+0x4c>
 800c0b8:	2303      	movs	r3, #3
 800c0ba:	e110      	b.n	800c2de <HAL_RCC_ClockConfig+0x26e>
 800c0bc:	4b8a      	ldr	r3, [pc, #552]	; (800c2e8 <HAL_RCC_ClockConfig+0x278>)
 800c0be:	681b      	ldr	r3, [r3, #0]
 800c0c0:	f003 0307 	and.w	r3, r3, #7
 800c0c4:	683a      	ldr	r2, [r7, #0]
 800c0c6:	429a      	cmp	r2, r3
 800c0c8:	d1ef      	bne.n	800c0aa <HAL_RCC_ClockConfig+0x3a>
 800c0ca:	687b      	ldr	r3, [r7, #4]
 800c0cc:	681b      	ldr	r3, [r3, #0]
 800c0ce:	f003 0302 	and.w	r3, r3, #2
 800c0d2:	2b00      	cmp	r3, #0
 800c0d4:	d016      	beq.n	800c104 <HAL_RCC_ClockConfig+0x94>
 800c0d6:	687b      	ldr	r3, [r7, #4]
 800c0d8:	689b      	ldr	r3, [r3, #8]
 800c0da:	4618      	mov	r0, r3
 800c0dc:	f7ff fabc 	bl	800b658 <LL_RCC_SetAHBPrescaler>
 800c0e0:	f7fa f978 	bl	80063d4 <HAL_GetTick>
 800c0e4:	60f8      	str	r0, [r7, #12]
 800c0e6:	e008      	b.n	800c0fa <HAL_RCC_ClockConfig+0x8a>
 800c0e8:	f7fa f974 	bl	80063d4 <HAL_GetTick>
 800c0ec:	4602      	mov	r2, r0
 800c0ee:	68fb      	ldr	r3, [r7, #12]
 800c0f0:	1ad3      	subs	r3, r2, r3
 800c0f2:	2b02      	cmp	r3, #2
 800c0f4:	d901      	bls.n	800c0fa <HAL_RCC_ClockConfig+0x8a>
 800c0f6:	2303      	movs	r3, #3
 800c0f8:	e0f1      	b.n	800c2de <HAL_RCC_ClockConfig+0x26e>
 800c0fa:	f7ff fbaf 	bl	800b85c <LL_RCC_IsActiveFlag_HPRE>
 800c0fe:	4603      	mov	r3, r0
 800c100:	2b00      	cmp	r3, #0
 800c102:	d0f1      	beq.n	800c0e8 <HAL_RCC_ClockConfig+0x78>
 800c104:	687b      	ldr	r3, [r7, #4]
 800c106:	681b      	ldr	r3, [r3, #0]
 800c108:	f003 0320 	and.w	r3, r3, #32
 800c10c:	2b00      	cmp	r3, #0
 800c10e:	d016      	beq.n	800c13e <HAL_RCC_ClockConfig+0xce>
 800c110:	687b      	ldr	r3, [r7, #4]
 800c112:	695b      	ldr	r3, [r3, #20]
 800c114:	4618      	mov	r0, r3
 800c116:	f7ff fab2 	bl	800b67e <LL_C2_RCC_SetAHBPrescaler>
 800c11a:	f7fa f95b 	bl	80063d4 <HAL_GetTick>
 800c11e:	60f8      	str	r0, [r7, #12]
 800c120:	e008      	b.n	800c134 <HAL_RCC_ClockConfig+0xc4>
 800c122:	f7fa f957 	bl	80063d4 <HAL_GetTick>
 800c126:	4602      	mov	r2, r0
 800c128:	68fb      	ldr	r3, [r7, #12]
 800c12a:	1ad3      	subs	r3, r2, r3
 800c12c:	2b02      	cmp	r3, #2
 800c12e:	d901      	bls.n	800c134 <HAL_RCC_ClockConfig+0xc4>
 800c130:	2303      	movs	r3, #3
 800c132:	e0d4      	b.n	800c2de <HAL_RCC_ClockConfig+0x26e>
 800c134:	f7ff fba3 	bl	800b87e <LL_RCC_IsActiveFlag_C2HPRE>
 800c138:	4603      	mov	r3, r0
 800c13a:	2b00      	cmp	r3, #0
 800c13c:	d0f1      	beq.n	800c122 <HAL_RCC_ClockConfig+0xb2>
 800c13e:	687b      	ldr	r3, [r7, #4]
 800c140:	681b      	ldr	r3, [r3, #0]
 800c142:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800c146:	2b00      	cmp	r3, #0
 800c148:	d016      	beq.n	800c178 <HAL_RCC_ClockConfig+0x108>
 800c14a:	687b      	ldr	r3, [r7, #4]
 800c14c:	699b      	ldr	r3, [r3, #24]
 800c14e:	4618      	mov	r0, r3
 800c150:	f7ff faaa 	bl	800b6a8 <LL_RCC_SetAHB3Prescaler>
 800c154:	f7fa f93e 	bl	80063d4 <HAL_GetTick>
 800c158:	60f8      	str	r0, [r7, #12]
 800c15a:	e008      	b.n	800c16e <HAL_RCC_ClockConfig+0xfe>
 800c15c:	f7fa f93a 	bl	80063d4 <HAL_GetTick>
 800c160:	4602      	mov	r2, r0
 800c162:	68fb      	ldr	r3, [r7, #12]
 800c164:	1ad3      	subs	r3, r2, r3
 800c166:	2b02      	cmp	r3, #2
 800c168:	d901      	bls.n	800c16e <HAL_RCC_ClockConfig+0xfe>
 800c16a:	2303      	movs	r3, #3
 800c16c:	e0b7      	b.n	800c2de <HAL_RCC_ClockConfig+0x26e>
 800c16e:	f7ff fb98 	bl	800b8a2 <LL_RCC_IsActiveFlag_SHDHPRE>
 800c172:	4603      	mov	r3, r0
 800c174:	2b00      	cmp	r3, #0
 800c176:	d0f1      	beq.n	800c15c <HAL_RCC_ClockConfig+0xec>
 800c178:	687b      	ldr	r3, [r7, #4]
 800c17a:	681b      	ldr	r3, [r3, #0]
 800c17c:	f003 0304 	and.w	r3, r3, #4
 800c180:	2b00      	cmp	r3, #0
 800c182:	d016      	beq.n	800c1b2 <HAL_RCC_ClockConfig+0x142>
 800c184:	687b      	ldr	r3, [r7, #4]
 800c186:	68db      	ldr	r3, [r3, #12]
 800c188:	4618      	mov	r0, r3
 800c18a:	f7ff faa3 	bl	800b6d4 <LL_RCC_SetAPB1Prescaler>
 800c18e:	f7fa f921 	bl	80063d4 <HAL_GetTick>
 800c192:	60f8      	str	r0, [r7, #12]
 800c194:	e008      	b.n	800c1a8 <HAL_RCC_ClockConfig+0x138>
 800c196:	f7fa f91d 	bl	80063d4 <HAL_GetTick>
 800c19a:	4602      	mov	r2, r0
 800c19c:	68fb      	ldr	r3, [r7, #12]
 800c19e:	1ad3      	subs	r3, r2, r3
 800c1a0:	2b02      	cmp	r3, #2
 800c1a2:	d901      	bls.n	800c1a8 <HAL_RCC_ClockConfig+0x138>
 800c1a4:	2303      	movs	r3, #3
 800c1a6:	e09a      	b.n	800c2de <HAL_RCC_ClockConfig+0x26e>
 800c1a8:	f7ff fb8d 	bl	800b8c6 <LL_RCC_IsActiveFlag_PPRE1>
 800c1ac:	4603      	mov	r3, r0
 800c1ae:	2b00      	cmp	r3, #0
 800c1b0:	d0f1      	beq.n	800c196 <HAL_RCC_ClockConfig+0x126>
 800c1b2:	687b      	ldr	r3, [r7, #4]
 800c1b4:	681b      	ldr	r3, [r3, #0]
 800c1b6:	f003 0308 	and.w	r3, r3, #8
 800c1ba:	2b00      	cmp	r3, #0
 800c1bc:	d017      	beq.n	800c1ee <HAL_RCC_ClockConfig+0x17e>
 800c1be:	687b      	ldr	r3, [r7, #4]
 800c1c0:	691b      	ldr	r3, [r3, #16]
 800c1c2:	00db      	lsls	r3, r3, #3
 800c1c4:	4618      	mov	r0, r3
 800c1c6:	f7ff fa98 	bl	800b6fa <LL_RCC_SetAPB2Prescaler>
 800c1ca:	f7fa f903 	bl	80063d4 <HAL_GetTick>
 800c1ce:	60f8      	str	r0, [r7, #12]
 800c1d0:	e008      	b.n	800c1e4 <HAL_RCC_ClockConfig+0x174>
 800c1d2:	f7fa f8ff 	bl	80063d4 <HAL_GetTick>
 800c1d6:	4602      	mov	r2, r0
 800c1d8:	68fb      	ldr	r3, [r7, #12]
 800c1da:	1ad3      	subs	r3, r2, r3
 800c1dc:	2b02      	cmp	r3, #2
 800c1de:	d901      	bls.n	800c1e4 <HAL_RCC_ClockConfig+0x174>
 800c1e0:	2303      	movs	r3, #3
 800c1e2:	e07c      	b.n	800c2de <HAL_RCC_ClockConfig+0x26e>
 800c1e4:	f7ff fb80 	bl	800b8e8 <LL_RCC_IsActiveFlag_PPRE2>
 800c1e8:	4603      	mov	r3, r0
 800c1ea:	2b00      	cmp	r3, #0
 800c1ec:	d0f1      	beq.n	800c1d2 <HAL_RCC_ClockConfig+0x162>
 800c1ee:	687b      	ldr	r3, [r7, #4]
 800c1f0:	681b      	ldr	r3, [r3, #0]
 800c1f2:	f003 0301 	and.w	r3, r3, #1
 800c1f6:	2b00      	cmp	r3, #0
 800c1f8:	d043      	beq.n	800c282 <HAL_RCC_ClockConfig+0x212>
 800c1fa:	687b      	ldr	r3, [r7, #4]
 800c1fc:	685b      	ldr	r3, [r3, #4]
 800c1fe:	2b02      	cmp	r3, #2
 800c200:	d106      	bne.n	800c210 <HAL_RCC_ClockConfig+0x1a0>
 800c202:	f7ff f910 	bl	800b426 <LL_RCC_HSE_IsReady>
 800c206:	4603      	mov	r3, r0
 800c208:	2b00      	cmp	r3, #0
 800c20a:	d11e      	bne.n	800c24a <HAL_RCC_ClockConfig+0x1da>
 800c20c:	2301      	movs	r3, #1
 800c20e:	e066      	b.n	800c2de <HAL_RCC_ClockConfig+0x26e>
 800c210:	687b      	ldr	r3, [r7, #4]
 800c212:	685b      	ldr	r3, [r3, #4]
 800c214:	2b03      	cmp	r3, #3
 800c216:	d106      	bne.n	800c226 <HAL_RCC_ClockConfig+0x1b6>
 800c218:	f7ff fae2 	bl	800b7e0 <LL_RCC_PLL_IsReady>
 800c21c:	4603      	mov	r3, r0
 800c21e:	2b00      	cmp	r3, #0
 800c220:	d113      	bne.n	800c24a <HAL_RCC_ClockConfig+0x1da>
 800c222:	2301      	movs	r3, #1
 800c224:	e05b      	b.n	800c2de <HAL_RCC_ClockConfig+0x26e>
 800c226:	687b      	ldr	r3, [r7, #4]
 800c228:	685b      	ldr	r3, [r3, #4]
 800c22a:	2b00      	cmp	r3, #0
 800c22c:	d106      	bne.n	800c23c <HAL_RCC_ClockConfig+0x1cc>
 800c22e:	f7ff f9aa 	bl	800b586 <LL_RCC_MSI_IsReady>
 800c232:	4603      	mov	r3, r0
 800c234:	2b00      	cmp	r3, #0
 800c236:	d108      	bne.n	800c24a <HAL_RCC_ClockConfig+0x1da>
 800c238:	2301      	movs	r3, #1
 800c23a:	e050      	b.n	800c2de <HAL_RCC_ClockConfig+0x26e>
 800c23c:	f7ff f920 	bl	800b480 <LL_RCC_HSI_IsReady>
 800c240:	4603      	mov	r3, r0
 800c242:	2b00      	cmp	r3, #0
 800c244:	d101      	bne.n	800c24a <HAL_RCC_ClockConfig+0x1da>
 800c246:	2301      	movs	r3, #1
 800c248:	e049      	b.n	800c2de <HAL_RCC_ClockConfig+0x26e>
 800c24a:	687b      	ldr	r3, [r7, #4]
 800c24c:	685b      	ldr	r3, [r3, #4]
 800c24e:	4618      	mov	r0, r3
 800c250:	f7ff f9e4 	bl	800b61c <LL_RCC_SetSysClkSource>
 800c254:	f7fa f8be 	bl	80063d4 <HAL_GetTick>
 800c258:	60f8      	str	r0, [r7, #12]
 800c25a:	e00a      	b.n	800c272 <HAL_RCC_ClockConfig+0x202>
 800c25c:	f7fa f8ba 	bl	80063d4 <HAL_GetTick>
 800c260:	4602      	mov	r2, r0
 800c262:	68fb      	ldr	r3, [r7, #12]
 800c264:	1ad3      	subs	r3, r2, r3
 800c266:	f241 3288 	movw	r2, #5000	; 0x1388
 800c26a:	4293      	cmp	r3, r2
 800c26c:	d901      	bls.n	800c272 <HAL_RCC_ClockConfig+0x202>
 800c26e:	2303      	movs	r3, #3
 800c270:	e035      	b.n	800c2de <HAL_RCC_ClockConfig+0x26e>
 800c272:	f7ff f9e6 	bl	800b642 <LL_RCC_GetSysClkSource>
 800c276:	4602      	mov	r2, r0
 800c278:	687b      	ldr	r3, [r7, #4]
 800c27a:	685b      	ldr	r3, [r3, #4]
 800c27c:	009b      	lsls	r3, r3, #2
 800c27e:	429a      	cmp	r2, r3
 800c280:	d1ec      	bne.n	800c25c <HAL_RCC_ClockConfig+0x1ec>
 800c282:	4b19      	ldr	r3, [pc, #100]	; (800c2e8 <HAL_RCC_ClockConfig+0x278>)
 800c284:	681b      	ldr	r3, [r3, #0]
 800c286:	f003 0307 	and.w	r3, r3, #7
 800c28a:	683a      	ldr	r2, [r7, #0]
 800c28c:	429a      	cmp	r2, r3
 800c28e:	d21b      	bcs.n	800c2c8 <HAL_RCC_ClockConfig+0x258>
 800c290:	4b15      	ldr	r3, [pc, #84]	; (800c2e8 <HAL_RCC_ClockConfig+0x278>)
 800c292:	681b      	ldr	r3, [r3, #0]
 800c294:	f023 0207 	bic.w	r2, r3, #7
 800c298:	4913      	ldr	r1, [pc, #76]	; (800c2e8 <HAL_RCC_ClockConfig+0x278>)
 800c29a:	683b      	ldr	r3, [r7, #0]
 800c29c:	4313      	orrs	r3, r2
 800c29e:	600b      	str	r3, [r1, #0]
 800c2a0:	f7fa f898 	bl	80063d4 <HAL_GetTick>
 800c2a4:	60f8      	str	r0, [r7, #12]
 800c2a6:	e008      	b.n	800c2ba <HAL_RCC_ClockConfig+0x24a>
 800c2a8:	f7fa f894 	bl	80063d4 <HAL_GetTick>
 800c2ac:	4602      	mov	r2, r0
 800c2ae:	68fb      	ldr	r3, [r7, #12]
 800c2b0:	1ad3      	subs	r3, r2, r3
 800c2b2:	2b02      	cmp	r3, #2
 800c2b4:	d901      	bls.n	800c2ba <HAL_RCC_ClockConfig+0x24a>
 800c2b6:	2303      	movs	r3, #3
 800c2b8:	e011      	b.n	800c2de <HAL_RCC_ClockConfig+0x26e>
 800c2ba:	4b0b      	ldr	r3, [pc, #44]	; (800c2e8 <HAL_RCC_ClockConfig+0x278>)
 800c2bc:	681b      	ldr	r3, [r3, #0]
 800c2be:	f003 0307 	and.w	r3, r3, #7
 800c2c2:	683a      	ldr	r2, [r7, #0]
 800c2c4:	429a      	cmp	r2, r3
 800c2c6:	d1ef      	bne.n	800c2a8 <HAL_RCC_ClockConfig+0x238>
 800c2c8:	f000 f8d8 	bl	800c47c <HAL_RCC_GetHCLKFreq>
 800c2cc:	4603      	mov	r3, r0
 800c2ce:	4a07      	ldr	r2, [pc, #28]	; (800c2ec <HAL_RCC_ClockConfig+0x27c>)
 800c2d0:	6013      	str	r3, [r2, #0]
 800c2d2:	4b07      	ldr	r3, [pc, #28]	; (800c2f0 <HAL_RCC_ClockConfig+0x280>)
 800c2d4:	681b      	ldr	r3, [r3, #0]
 800c2d6:	4618      	mov	r0, r3
 800c2d8:	f7fa f872 	bl	80063c0 <HAL_InitTick>
 800c2dc:	4603      	mov	r3, r0
 800c2de:	4618      	mov	r0, r3
 800c2e0:	3710      	adds	r7, #16
 800c2e2:	46bd      	mov	sp, r7
 800c2e4:	bd80      	pop	{r7, pc}
 800c2e6:	bf00      	nop
 800c2e8:	58004000 	.word	0x58004000
 800c2ec:	2000003c 	.word	0x2000003c
 800c2f0:	20000040 	.word	0x20000040

0800c2f4 <HAL_RCC_MCOConfig>:
 800c2f4:	b580      	push	{r7, lr}
 800c2f6:	b08a      	sub	sp, #40	; 0x28
 800c2f8:	af00      	add	r7, sp, #0
 800c2fa:	60f8      	str	r0, [r7, #12]
 800c2fc:	60b9      	str	r1, [r7, #8]
 800c2fe:	607a      	str	r2, [r7, #4]
 800c300:	2001      	movs	r0, #1
 800c302:	f7ff fb02 	bl	800b90a <LL_AHB2_GRP1_EnableClock>
 800c306:	f44f 7380 	mov.w	r3, #256	; 0x100
 800c30a:	617b      	str	r3, [r7, #20]
 800c30c:	2302      	movs	r3, #2
 800c30e:	61bb      	str	r3, [r7, #24]
 800c310:	2303      	movs	r3, #3
 800c312:	623b      	str	r3, [r7, #32]
 800c314:	2300      	movs	r3, #0
 800c316:	61fb      	str	r3, [r7, #28]
 800c318:	2300      	movs	r3, #0
 800c31a:	627b      	str	r3, [r7, #36]	; 0x24
 800c31c:	f107 0314 	add.w	r3, r7, #20
 800c320:	4619      	mov	r1, r3
 800c322:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 800c326:	f7fc fca3 	bl	8008c70 <HAL_GPIO_Init>
 800c32a:	6879      	ldr	r1, [r7, #4]
 800c32c:	68b8      	ldr	r0, [r7, #8]
 800c32e:	f7ff fa25 	bl	800b77c <LL_RCC_ConfigMCO>
 800c332:	bf00      	nop
 800c334:	3728      	adds	r7, #40	; 0x28
 800c336:	46bd      	mov	sp, r7
 800c338:	bd80      	pop	{r7, pc}
	...

0800c33c <HAL_RCC_GetSysClockFreq>:
 800c33c:	b590      	push	{r4, r7, lr}
 800c33e:	b087      	sub	sp, #28
 800c340:	af00      	add	r7, sp, #0
 800c342:	2300      	movs	r3, #0
 800c344:	617b      	str	r3, [r7, #20]
 800c346:	2300      	movs	r3, #0
 800c348:	613b      	str	r3, [r7, #16]
 800c34a:	f7ff f97a 	bl	800b642 <LL_RCC_GetSysClkSource>
 800c34e:	60b8      	str	r0, [r7, #8]
 800c350:	f7ff fa79 	bl	800b846 <LL_RCC_PLL_GetMainSource>
 800c354:	6078      	str	r0, [r7, #4]
 800c356:	68bb      	ldr	r3, [r7, #8]
 800c358:	2b00      	cmp	r3, #0
 800c35a:	d005      	beq.n	800c368 <HAL_RCC_GetSysClockFreq+0x2c>
 800c35c:	68bb      	ldr	r3, [r7, #8]
 800c35e:	2b0c      	cmp	r3, #12
 800c360:	d139      	bne.n	800c3d6 <HAL_RCC_GetSysClockFreq+0x9a>
 800c362:	687b      	ldr	r3, [r7, #4]
 800c364:	2b01      	cmp	r3, #1
 800c366:	d136      	bne.n	800c3d6 <HAL_RCC_GetSysClockFreq+0x9a>
 800c368:	f7ff f91d 	bl	800b5a6 <LL_RCC_MSI_IsEnabledRangeSelect>
 800c36c:	4603      	mov	r3, r0
 800c36e:	2b00      	cmp	r3, #0
 800c370:	d115      	bne.n	800c39e <HAL_RCC_GetSysClockFreq+0x62>
 800c372:	f7ff f918 	bl	800b5a6 <LL_RCC_MSI_IsEnabledRangeSelect>
 800c376:	4603      	mov	r3, r0
 800c378:	2b01      	cmp	r3, #1
 800c37a:	d106      	bne.n	800c38a <HAL_RCC_GetSysClockFreq+0x4e>
 800c37c:	f7ff f923 	bl	800b5c6 <LL_RCC_MSI_GetRange>
 800c380:	4603      	mov	r3, r0
 800c382:	0a1b      	lsrs	r3, r3, #8
 800c384:	f003 030f 	and.w	r3, r3, #15
 800c388:	e005      	b.n	800c396 <HAL_RCC_GetSysClockFreq+0x5a>
 800c38a:	f7ff f927 	bl	800b5dc <LL_RCC_MSI_GetRangeAfterStandby>
 800c38e:	4603      	mov	r3, r0
 800c390:	0a1b      	lsrs	r3, r3, #8
 800c392:	f003 030f 	and.w	r3, r3, #15
 800c396:	4a36      	ldr	r2, [pc, #216]	; (800c470 <HAL_RCC_GetSysClockFreq+0x134>)
 800c398:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800c39c:	e014      	b.n	800c3c8 <HAL_RCC_GetSysClockFreq+0x8c>
 800c39e:	f7ff f902 	bl	800b5a6 <LL_RCC_MSI_IsEnabledRangeSelect>
 800c3a2:	4603      	mov	r3, r0
 800c3a4:	2b01      	cmp	r3, #1
 800c3a6:	d106      	bne.n	800c3b6 <HAL_RCC_GetSysClockFreq+0x7a>
 800c3a8:	f7ff f90d 	bl	800b5c6 <LL_RCC_MSI_GetRange>
 800c3ac:	4603      	mov	r3, r0
 800c3ae:	091b      	lsrs	r3, r3, #4
 800c3b0:	f003 030f 	and.w	r3, r3, #15
 800c3b4:	e005      	b.n	800c3c2 <HAL_RCC_GetSysClockFreq+0x86>
 800c3b6:	f7ff f911 	bl	800b5dc <LL_RCC_MSI_GetRangeAfterStandby>
 800c3ba:	4603      	mov	r3, r0
 800c3bc:	091b      	lsrs	r3, r3, #4
 800c3be:	f003 030f 	and.w	r3, r3, #15
 800c3c2:	4a2b      	ldr	r2, [pc, #172]	; (800c470 <HAL_RCC_GetSysClockFreq+0x134>)
 800c3c4:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800c3c8:	613b      	str	r3, [r7, #16]
 800c3ca:	68bb      	ldr	r3, [r7, #8]
 800c3cc:	2b00      	cmp	r3, #0
 800c3ce:	d115      	bne.n	800c3fc <HAL_RCC_GetSysClockFreq+0xc0>
 800c3d0:	693b      	ldr	r3, [r7, #16]
 800c3d2:	617b      	str	r3, [r7, #20]
 800c3d4:	e012      	b.n	800c3fc <HAL_RCC_GetSysClockFreq+0xc0>
 800c3d6:	68bb      	ldr	r3, [r7, #8]
 800c3d8:	2b04      	cmp	r3, #4
 800c3da:	d102      	bne.n	800c3e2 <HAL_RCC_GetSysClockFreq+0xa6>
 800c3dc:	4b25      	ldr	r3, [pc, #148]	; (800c474 <HAL_RCC_GetSysClockFreq+0x138>)
 800c3de:	617b      	str	r3, [r7, #20]
 800c3e0:	e00c      	b.n	800c3fc <HAL_RCC_GetSysClockFreq+0xc0>
 800c3e2:	68bb      	ldr	r3, [r7, #8]
 800c3e4:	2b08      	cmp	r3, #8
 800c3e6:	d109      	bne.n	800c3fc <HAL_RCC_GetSysClockFreq+0xc0>
 800c3e8:	f7fe fff0 	bl	800b3cc <LL_RCC_HSE_IsEnabledDiv2>
 800c3ec:	4603      	mov	r3, r0
 800c3ee:	2b01      	cmp	r3, #1
 800c3f0:	d102      	bne.n	800c3f8 <HAL_RCC_GetSysClockFreq+0xbc>
 800c3f2:	4b20      	ldr	r3, [pc, #128]	; (800c474 <HAL_RCC_GetSysClockFreq+0x138>)
 800c3f4:	617b      	str	r3, [r7, #20]
 800c3f6:	e001      	b.n	800c3fc <HAL_RCC_GetSysClockFreq+0xc0>
 800c3f8:	4b1f      	ldr	r3, [pc, #124]	; (800c478 <HAL_RCC_GetSysClockFreq+0x13c>)
 800c3fa:	617b      	str	r3, [r7, #20]
 800c3fc:	f7ff f921 	bl	800b642 <LL_RCC_GetSysClkSource>
 800c400:	4603      	mov	r3, r0
 800c402:	2b0c      	cmp	r3, #12
 800c404:	d12f      	bne.n	800c466 <HAL_RCC_GetSysClockFreq+0x12a>
 800c406:	f7ff fa1e 	bl	800b846 <LL_RCC_PLL_GetMainSource>
 800c40a:	6078      	str	r0, [r7, #4]
 800c40c:	687b      	ldr	r3, [r7, #4]
 800c40e:	2b02      	cmp	r3, #2
 800c410:	d003      	beq.n	800c41a <HAL_RCC_GetSysClockFreq+0xde>
 800c412:	687b      	ldr	r3, [r7, #4]
 800c414:	2b03      	cmp	r3, #3
 800c416:	d003      	beq.n	800c420 <HAL_RCC_GetSysClockFreq+0xe4>
 800c418:	e00d      	b.n	800c436 <HAL_RCC_GetSysClockFreq+0xfa>
 800c41a:	4b16      	ldr	r3, [pc, #88]	; (800c474 <HAL_RCC_GetSysClockFreq+0x138>)
 800c41c:	60fb      	str	r3, [r7, #12]
 800c41e:	e00d      	b.n	800c43c <HAL_RCC_GetSysClockFreq+0x100>
 800c420:	f7fe ffd4 	bl	800b3cc <LL_RCC_HSE_IsEnabledDiv2>
 800c424:	4603      	mov	r3, r0
 800c426:	2b01      	cmp	r3, #1
 800c428:	d102      	bne.n	800c430 <HAL_RCC_GetSysClockFreq+0xf4>
 800c42a:	4b12      	ldr	r3, [pc, #72]	; (800c474 <HAL_RCC_GetSysClockFreq+0x138>)
 800c42c:	60fb      	str	r3, [r7, #12]
 800c42e:	e005      	b.n	800c43c <HAL_RCC_GetSysClockFreq+0x100>
 800c430:	4b11      	ldr	r3, [pc, #68]	; (800c478 <HAL_RCC_GetSysClockFreq+0x13c>)
 800c432:	60fb      	str	r3, [r7, #12]
 800c434:	e002      	b.n	800c43c <HAL_RCC_GetSysClockFreq+0x100>
 800c436:	693b      	ldr	r3, [r7, #16]
 800c438:	60fb      	str	r3, [r7, #12]
 800c43a:	bf00      	nop
 800c43c:	f7ff f9e1 	bl	800b802 <LL_RCC_PLL_GetN>
 800c440:	4602      	mov	r2, r0
 800c442:	68fb      	ldr	r3, [r7, #12]
 800c444:	fb03 f402 	mul.w	r4, r3, r2
 800c448:	f7ff f9f2 	bl	800b830 <LL_RCC_PLL_GetDivider>
 800c44c:	4603      	mov	r3, r0
 800c44e:	091b      	lsrs	r3, r3, #4
 800c450:	3301      	adds	r3, #1
 800c452:	fbb4 f4f3 	udiv	r4, r4, r3
 800c456:	f7ff f9e0 	bl	800b81a <LL_RCC_PLL_GetR>
 800c45a:	4603      	mov	r3, r0
 800c45c:	0f5b      	lsrs	r3, r3, #29
 800c45e:	3301      	adds	r3, #1
 800c460:	fbb4 f3f3 	udiv	r3, r4, r3
 800c464:	617b      	str	r3, [r7, #20]
 800c466:	697b      	ldr	r3, [r7, #20]
 800c468:	4618      	mov	r0, r3
 800c46a:	371c      	adds	r7, #28
 800c46c:	46bd      	mov	sp, r7
 800c46e:	bd90      	pop	{r4, r7, pc}
 800c470:	0802631c 	.word	0x0802631c
 800c474:	00f42400 	.word	0x00f42400
 800c478:	01e84800 	.word	0x01e84800

0800c47c <HAL_RCC_GetHCLKFreq>:
 800c47c:	b598      	push	{r3, r4, r7, lr}
 800c47e:	af00      	add	r7, sp, #0
 800c480:	f7ff ff5c 	bl	800c33c <HAL_RCC_GetSysClockFreq>
 800c484:	4604      	mov	r4, r0
 800c486:	f7ff f94b 	bl	800b720 <LL_RCC_GetAHBPrescaler>
 800c48a:	4603      	mov	r3, r0
 800c48c:	091b      	lsrs	r3, r3, #4
 800c48e:	f003 030f 	and.w	r3, r3, #15
 800c492:	4a03      	ldr	r2, [pc, #12]	; (800c4a0 <HAL_RCC_GetHCLKFreq+0x24>)
 800c494:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800c498:	fbb4 f3f3 	udiv	r3, r4, r3
 800c49c:	4618      	mov	r0, r3
 800c49e:	bd98      	pop	{r3, r4, r7, pc}
 800c4a0:	080262bc 	.word	0x080262bc

0800c4a4 <HAL_RCC_GetPCLK1Freq>:
 800c4a4:	b598      	push	{r3, r4, r7, lr}
 800c4a6:	af00      	add	r7, sp, #0
 800c4a8:	f7ff ffe8 	bl	800c47c <HAL_RCC_GetHCLKFreq>
 800c4ac:	4604      	mov	r4, r0
 800c4ae:	f7ff f94f 	bl	800b750 <LL_RCC_GetAPB1Prescaler>
 800c4b2:	4603      	mov	r3, r0
 800c4b4:	0a1b      	lsrs	r3, r3, #8
 800c4b6:	4a03      	ldr	r2, [pc, #12]	; (800c4c4 <HAL_RCC_GetPCLK1Freq+0x20>)
 800c4b8:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800c4bc:	fa24 f303 	lsr.w	r3, r4, r3
 800c4c0:	4618      	mov	r0, r3
 800c4c2:	bd98      	pop	{r3, r4, r7, pc}
 800c4c4:	080262fc 	.word	0x080262fc

0800c4c8 <HAL_RCC_GetPCLK2Freq>:
 800c4c8:	b598      	push	{r3, r4, r7, lr}
 800c4ca:	af00      	add	r7, sp, #0
 800c4cc:	f7ff ffd6 	bl	800c47c <HAL_RCC_GetHCLKFreq>
 800c4d0:	4604      	mov	r4, r0
 800c4d2:	f7ff f948 	bl	800b766 <LL_RCC_GetAPB2Prescaler>
 800c4d6:	4603      	mov	r3, r0
 800c4d8:	0adb      	lsrs	r3, r3, #11
 800c4da:	4a03      	ldr	r2, [pc, #12]	; (800c4e8 <HAL_RCC_GetPCLK2Freq+0x20>)
 800c4dc:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800c4e0:	fa24 f303 	lsr.w	r3, r4, r3
 800c4e4:	4618      	mov	r0, r3
 800c4e6:	bd98      	pop	{r3, r4, r7, pc}
 800c4e8:	080262fc 	.word	0x080262fc

0800c4ec <RCC_SetFlashLatencyFromMSIRange>:
 800c4ec:	b590      	push	{r4, r7, lr}
 800c4ee:	b085      	sub	sp, #20
 800c4f0:	af00      	add	r7, sp, #0
 800c4f2:	6078      	str	r0, [r7, #4]
 800c4f4:	687b      	ldr	r3, [r7, #4]
 800c4f6:	091b      	lsrs	r3, r3, #4
 800c4f8:	f003 030f 	and.w	r3, r3, #15
 800c4fc:	4a10      	ldr	r2, [pc, #64]	; (800c540 <RCC_SetFlashLatencyFromMSIRange+0x54>)
 800c4fe:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800c502:	60fb      	str	r3, [r7, #12]
 800c504:	f7ff f917 	bl	800b736 <LL_RCC_GetAHB3Prescaler>
 800c508:	4603      	mov	r3, r0
 800c50a:	091b      	lsrs	r3, r3, #4
 800c50c:	f003 030f 	and.w	r3, r3, #15
 800c510:	4a0c      	ldr	r2, [pc, #48]	; (800c544 <RCC_SetFlashLatencyFromMSIRange+0x58>)
 800c512:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800c516:	68fa      	ldr	r2, [r7, #12]
 800c518:	fbb2 f3f3 	udiv	r3, r2, r3
 800c51c:	60bb      	str	r3, [r7, #8]
 800c51e:	68bb      	ldr	r3, [r7, #8]
 800c520:	4a09      	ldr	r2, [pc, #36]	; (800c548 <RCC_SetFlashLatencyFromMSIRange+0x5c>)
 800c522:	fba2 2303 	umull	r2, r3, r2, r3
 800c526:	0c9c      	lsrs	r4, r3, #18
 800c528:	f7fe fea8 	bl	800b27c <HAL_PWREx_GetVoltageRange>
 800c52c:	4603      	mov	r3, r0
 800c52e:	4619      	mov	r1, r3
 800c530:	4620      	mov	r0, r4
 800c532:	f000 f80b 	bl	800c54c <RCC_SetFlashLatency>
 800c536:	4603      	mov	r3, r0
 800c538:	4618      	mov	r0, r3
 800c53a:	3714      	adds	r7, #20
 800c53c:	46bd      	mov	sp, r7
 800c53e:	bd90      	pop	{r4, r7, pc}
 800c540:	0802631c 	.word	0x0802631c
 800c544:	080262bc 	.word	0x080262bc
 800c548:	431bde83 	.word	0x431bde83

0800c54c <RCC_SetFlashLatency>:
 800c54c:	b580      	push	{r7, lr}
 800c54e:	b08e      	sub	sp, #56	; 0x38
 800c550:	af00      	add	r7, sp, #0
 800c552:	6078      	str	r0, [r7, #4]
 800c554:	6039      	str	r1, [r7, #0]
 800c556:	4a3c      	ldr	r2, [pc, #240]	; (800c648 <RCC_SetFlashLatency+0xfc>)
 800c558:	f107 0320 	add.w	r3, r7, #32
 800c55c:	e892 0003 	ldmia.w	r2, {r0, r1}
 800c560:	6018      	str	r0, [r3, #0]
 800c562:	3304      	adds	r3, #4
 800c564:	8019      	strh	r1, [r3, #0]
 800c566:	4a39      	ldr	r2, [pc, #228]	; (800c64c <RCC_SetFlashLatency+0x100>)
 800c568:	f107 0318 	add.w	r3, r7, #24
 800c56c:	e892 0003 	ldmia.w	r2, {r0, r1}
 800c570:	6018      	str	r0, [r3, #0]
 800c572:	3304      	adds	r3, #4
 800c574:	8019      	strh	r1, [r3, #0]
 800c576:	4a36      	ldr	r2, [pc, #216]	; (800c650 <RCC_SetFlashLatency+0x104>)
 800c578:	f107 030c 	add.w	r3, r7, #12
 800c57c:	ca07      	ldmia	r2, {r0, r1, r2}
 800c57e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800c582:	2300      	movs	r3, #0
 800c584:	637b      	str	r3, [r7, #52]	; 0x34
 800c586:	683b      	ldr	r3, [r7, #0]
 800c588:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800c58c:	d11d      	bne.n	800c5ca <RCC_SetFlashLatency+0x7e>
 800c58e:	2300      	movs	r3, #0
 800c590:	633b      	str	r3, [r7, #48]	; 0x30
 800c592:	e016      	b.n	800c5c2 <RCC_SetFlashLatency+0x76>
 800c594:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800c596:	005b      	lsls	r3, r3, #1
 800c598:	f107 0238 	add.w	r2, r7, #56	; 0x38
 800c59c:	4413      	add	r3, r2
 800c59e:	f833 3c18 	ldrh.w	r3, [r3, #-24]
 800c5a2:	461a      	mov	r2, r3
 800c5a4:	687b      	ldr	r3, [r7, #4]
 800c5a6:	4293      	cmp	r3, r2
 800c5a8:	d808      	bhi.n	800c5bc <RCC_SetFlashLatency+0x70>
 800c5aa:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800c5ac:	009b      	lsls	r3, r3, #2
 800c5ae:	f107 0238 	add.w	r2, r7, #56	; 0x38
 800c5b2:	4413      	add	r3, r2
 800c5b4:	f853 3c2c 	ldr.w	r3, [r3, #-44]
 800c5b8:	637b      	str	r3, [r7, #52]	; 0x34
 800c5ba:	e023      	b.n	800c604 <RCC_SetFlashLatency+0xb8>
 800c5bc:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800c5be:	3301      	adds	r3, #1
 800c5c0:	633b      	str	r3, [r7, #48]	; 0x30
 800c5c2:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800c5c4:	2b02      	cmp	r3, #2
 800c5c6:	d9e5      	bls.n	800c594 <RCC_SetFlashLatency+0x48>
 800c5c8:	e01c      	b.n	800c604 <RCC_SetFlashLatency+0xb8>
 800c5ca:	2300      	movs	r3, #0
 800c5cc:	62fb      	str	r3, [r7, #44]	; 0x2c
 800c5ce:	e016      	b.n	800c5fe <RCC_SetFlashLatency+0xb2>
 800c5d0:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800c5d2:	005b      	lsls	r3, r3, #1
 800c5d4:	f107 0238 	add.w	r2, r7, #56	; 0x38
 800c5d8:	4413      	add	r3, r2
 800c5da:	f833 3c20 	ldrh.w	r3, [r3, #-32]
 800c5de:	461a      	mov	r2, r3
 800c5e0:	687b      	ldr	r3, [r7, #4]
 800c5e2:	4293      	cmp	r3, r2
 800c5e4:	d808      	bhi.n	800c5f8 <RCC_SetFlashLatency+0xac>
 800c5e6:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800c5e8:	009b      	lsls	r3, r3, #2
 800c5ea:	f107 0238 	add.w	r2, r7, #56	; 0x38
 800c5ee:	4413      	add	r3, r2
 800c5f0:	f853 3c2c 	ldr.w	r3, [r3, #-44]
 800c5f4:	637b      	str	r3, [r7, #52]	; 0x34
 800c5f6:	e005      	b.n	800c604 <RCC_SetFlashLatency+0xb8>
 800c5f8:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800c5fa:	3301      	adds	r3, #1
 800c5fc:	62fb      	str	r3, [r7, #44]	; 0x2c
 800c5fe:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800c600:	2b02      	cmp	r3, #2
 800c602:	d9e5      	bls.n	800c5d0 <RCC_SetFlashLatency+0x84>
 800c604:	4b13      	ldr	r3, [pc, #76]	; (800c654 <RCC_SetFlashLatency+0x108>)
 800c606:	681b      	ldr	r3, [r3, #0]
 800c608:	f023 0207 	bic.w	r2, r3, #7
 800c60c:	4911      	ldr	r1, [pc, #68]	; (800c654 <RCC_SetFlashLatency+0x108>)
 800c60e:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800c610:	4313      	orrs	r3, r2
 800c612:	600b      	str	r3, [r1, #0]
 800c614:	f7f9 fede 	bl	80063d4 <HAL_GetTick>
 800c618:	62b8      	str	r0, [r7, #40]	; 0x28
 800c61a:	e008      	b.n	800c62e <RCC_SetFlashLatency+0xe2>
 800c61c:	f7f9 feda 	bl	80063d4 <HAL_GetTick>
 800c620:	4602      	mov	r2, r0
 800c622:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800c624:	1ad3      	subs	r3, r2, r3
 800c626:	2b02      	cmp	r3, #2
 800c628:	d901      	bls.n	800c62e <RCC_SetFlashLatency+0xe2>
 800c62a:	2303      	movs	r3, #3
 800c62c:	e007      	b.n	800c63e <RCC_SetFlashLatency+0xf2>
 800c62e:	4b09      	ldr	r3, [pc, #36]	; (800c654 <RCC_SetFlashLatency+0x108>)
 800c630:	681b      	ldr	r3, [r3, #0]
 800c632:	f003 0307 	and.w	r3, r3, #7
 800c636:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 800c638:	429a      	cmp	r2, r3
 800c63a:	d1ef      	bne.n	800c61c <RCC_SetFlashLatency+0xd0>
 800c63c:	2300      	movs	r3, #0
 800c63e:	4618      	mov	r0, r3
 800c640:	3738      	adds	r7, #56	; 0x38
 800c642:	46bd      	mov	sp, r7
 800c644:	bd80      	pop	{r7, pc}
 800c646:	bf00      	nop
 800c648:	080259a4 	.word	0x080259a4
 800c64c:	080259ac 	.word	0x080259ac
 800c650:	080259b4 	.word	0x080259b4
 800c654:	58004000 	.word	0x58004000

0800c658 <LL_RCC_LSE_IsReady>:
 800c658:	b480      	push	{r7}
 800c65a:	af00      	add	r7, sp, #0
 800c65c:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 800c660:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800c664:	f003 0302 	and.w	r3, r3, #2
 800c668:	2b02      	cmp	r3, #2
 800c66a:	d101      	bne.n	800c670 <LL_RCC_LSE_IsReady+0x18>
 800c66c:	2301      	movs	r3, #1
 800c66e:	e000      	b.n	800c672 <LL_RCC_LSE_IsReady+0x1a>
 800c670:	2300      	movs	r3, #0
 800c672:	4618      	mov	r0, r3
 800c674:	46bd      	mov	sp, r7
 800c676:	bc80      	pop	{r7}
 800c678:	4770      	bx	lr

0800c67a <LL_RCC_SetUSARTClockSource>:
 800c67a:	b480      	push	{r7}
 800c67c:	b083      	sub	sp, #12
 800c67e:	af00      	add	r7, sp, #0
 800c680:	6078      	str	r0, [r7, #4]
 800c682:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 800c686:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88
 800c68a:	687b      	ldr	r3, [r7, #4]
 800c68c:	0c1b      	lsrs	r3, r3, #16
 800c68e:	43db      	mvns	r3, r3
 800c690:	401a      	ands	r2, r3
 800c692:	687b      	ldr	r3, [r7, #4]
 800c694:	b29b      	uxth	r3, r3
 800c696:	f04f 41b0 	mov.w	r1, #1476395008	; 0x58000000
 800c69a:	4313      	orrs	r3, r2
 800c69c:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 800c6a0:	bf00      	nop
 800c6a2:	370c      	adds	r7, #12
 800c6a4:	46bd      	mov	sp, r7
 800c6a6:	bc80      	pop	{r7}
 800c6a8:	4770      	bx	lr

0800c6aa <LL_RCC_SetI2SClockSource>:
 800c6aa:	b480      	push	{r7}
 800c6ac:	b083      	sub	sp, #12
 800c6ae:	af00      	add	r7, sp, #0
 800c6b0:	6078      	str	r0, [r7, #4]
 800c6b2:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 800c6b6:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800c6ba:	f423 7240 	bic.w	r2, r3, #768	; 0x300
 800c6be:	f04f 41b0 	mov.w	r1, #1476395008	; 0x58000000
 800c6c2:	687b      	ldr	r3, [r7, #4]
 800c6c4:	4313      	orrs	r3, r2
 800c6c6:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 800c6ca:	bf00      	nop
 800c6cc:	370c      	adds	r7, #12
 800c6ce:	46bd      	mov	sp, r7
 800c6d0:	bc80      	pop	{r7}
 800c6d2:	4770      	bx	lr

0800c6d4 <LL_RCC_SetLPUARTClockSource>:
 800c6d4:	b480      	push	{r7}
 800c6d6:	b083      	sub	sp, #12
 800c6d8:	af00      	add	r7, sp, #0
 800c6da:	6078      	str	r0, [r7, #4]
 800c6dc:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 800c6e0:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800c6e4:	f423 6240 	bic.w	r2, r3, #3072	; 0xc00
 800c6e8:	f04f 41b0 	mov.w	r1, #1476395008	; 0x58000000
 800c6ec:	687b      	ldr	r3, [r7, #4]
 800c6ee:	4313      	orrs	r3, r2
 800c6f0:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 800c6f4:	bf00      	nop
 800c6f6:	370c      	adds	r7, #12
 800c6f8:	46bd      	mov	sp, r7
 800c6fa:	bc80      	pop	{r7}
 800c6fc:	4770      	bx	lr

0800c6fe <LL_RCC_SetI2CClockSource>:
 800c6fe:	b480      	push	{r7}
 800c700:	b083      	sub	sp, #12
 800c702:	af00      	add	r7, sp, #0
 800c704:	6078      	str	r0, [r7, #4]
 800c706:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 800c70a:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88
 800c70e:	687b      	ldr	r3, [r7, #4]
 800c710:	091b      	lsrs	r3, r3, #4
 800c712:	f403 237f 	and.w	r3, r3, #1044480	; 0xff000
 800c716:	43db      	mvns	r3, r3
 800c718:	401a      	ands	r2, r3
 800c71a:	687b      	ldr	r3, [r7, #4]
 800c71c:	011b      	lsls	r3, r3, #4
 800c71e:	f403 237f 	and.w	r3, r3, #1044480	; 0xff000
 800c722:	f04f 41b0 	mov.w	r1, #1476395008	; 0x58000000
 800c726:	4313      	orrs	r3, r2
 800c728:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 800c72c:	bf00      	nop
 800c72e:	370c      	adds	r7, #12
 800c730:	46bd      	mov	sp, r7
 800c732:	bc80      	pop	{r7}
 800c734:	4770      	bx	lr

0800c736 <LL_RCC_SetLPTIMClockSource>:
 800c736:	b480      	push	{r7}
 800c738:	b083      	sub	sp, #12
 800c73a:	af00      	add	r7, sp, #0
 800c73c:	6078      	str	r0, [r7, #4]
 800c73e:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 800c742:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88
 800c746:	687b      	ldr	r3, [r7, #4]
 800c748:	0c1b      	lsrs	r3, r3, #16
 800c74a:	041b      	lsls	r3, r3, #16
 800c74c:	43db      	mvns	r3, r3
 800c74e:	401a      	ands	r2, r3
 800c750:	687b      	ldr	r3, [r7, #4]
 800c752:	041b      	lsls	r3, r3, #16
 800c754:	f04f 41b0 	mov.w	r1, #1476395008	; 0x58000000
 800c758:	4313      	orrs	r3, r2
 800c75a:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 800c75e:	bf00      	nop
 800c760:	370c      	adds	r7, #12
 800c762:	46bd      	mov	sp, r7
 800c764:	bc80      	pop	{r7}
 800c766:	4770      	bx	lr

0800c768 <LL_RCC_SetRNGClockSource>:
 800c768:	b480      	push	{r7}
 800c76a:	b083      	sub	sp, #12
 800c76c:	af00      	add	r7, sp, #0
 800c76e:	6078      	str	r0, [r7, #4]
 800c770:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 800c774:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800c778:	f023 4240 	bic.w	r2, r3, #3221225472	; 0xc0000000
 800c77c:	f04f 41b0 	mov.w	r1, #1476395008	; 0x58000000
 800c780:	687b      	ldr	r3, [r7, #4]
 800c782:	4313      	orrs	r3, r2
 800c784:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 800c788:	bf00      	nop
 800c78a:	370c      	adds	r7, #12
 800c78c:	46bd      	mov	sp, r7
 800c78e:	bc80      	pop	{r7}
 800c790:	4770      	bx	lr

0800c792 <LL_RCC_SetADCClockSource>:
 800c792:	b480      	push	{r7}
 800c794:	b083      	sub	sp, #12
 800c796:	af00      	add	r7, sp, #0
 800c798:	6078      	str	r0, [r7, #4]
 800c79a:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 800c79e:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800c7a2:	f023 5240 	bic.w	r2, r3, #805306368	; 0x30000000
 800c7a6:	f04f 41b0 	mov.w	r1, #1476395008	; 0x58000000
 800c7aa:	687b      	ldr	r3, [r7, #4]
 800c7ac:	4313      	orrs	r3, r2
 800c7ae:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 800c7b2:	bf00      	nop
 800c7b4:	370c      	adds	r7, #12
 800c7b6:	46bd      	mov	sp, r7
 800c7b8:	bc80      	pop	{r7}
 800c7ba:	4770      	bx	lr

0800c7bc <LL_RCC_SetRTCClockSource>:
 800c7bc:	b480      	push	{r7}
 800c7be:	b083      	sub	sp, #12
 800c7c0:	af00      	add	r7, sp, #0
 800c7c2:	6078      	str	r0, [r7, #4]
 800c7c4:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 800c7c8:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800c7cc:	f423 7240 	bic.w	r2, r3, #768	; 0x300
 800c7d0:	f04f 41b0 	mov.w	r1, #1476395008	; 0x58000000
 800c7d4:	687b      	ldr	r3, [r7, #4]
 800c7d6:	4313      	orrs	r3, r2
 800c7d8:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 800c7dc:	bf00      	nop
 800c7de:	370c      	adds	r7, #12
 800c7e0:	46bd      	mov	sp, r7
 800c7e2:	bc80      	pop	{r7}
 800c7e4:	4770      	bx	lr

0800c7e6 <LL_RCC_GetRTCClockSource>:
 800c7e6:	b480      	push	{r7}
 800c7e8:	af00      	add	r7, sp, #0
 800c7ea:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 800c7ee:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800c7f2:	f403 7340 	and.w	r3, r3, #768	; 0x300
 800c7f6:	4618      	mov	r0, r3
 800c7f8:	46bd      	mov	sp, r7
 800c7fa:	bc80      	pop	{r7}
 800c7fc:	4770      	bx	lr

0800c7fe <LL_RCC_ForceBackupDomainReset>:
 800c7fe:	b480      	push	{r7}
 800c800:	af00      	add	r7, sp, #0
 800c802:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 800c806:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800c80a:	f04f 42b0 	mov.w	r2, #1476395008	; 0x58000000
 800c80e:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800c812:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
 800c816:	bf00      	nop
 800c818:	46bd      	mov	sp, r7
 800c81a:	bc80      	pop	{r7}
 800c81c:	4770      	bx	lr

0800c81e <LL_RCC_ReleaseBackupDomainReset>:
 800c81e:	b480      	push	{r7}
 800c820:	af00      	add	r7, sp, #0
 800c822:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 800c826:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800c82a:	f04f 42b0 	mov.w	r2, #1476395008	; 0x58000000
 800c82e:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 800c832:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
 800c836:	bf00      	nop
 800c838:	46bd      	mov	sp, r7
 800c83a:	bc80      	pop	{r7}
 800c83c:	4770      	bx	lr
	...

0800c840 <HAL_RCCEx_PeriphCLKConfig>:
 800c840:	b580      	push	{r7, lr}
 800c842:	b086      	sub	sp, #24
 800c844:	af00      	add	r7, sp, #0
 800c846:	6078      	str	r0, [r7, #4]
 800c848:	2300      	movs	r3, #0
 800c84a:	617b      	str	r3, [r7, #20]
 800c84c:	2300      	movs	r3, #0
 800c84e:	74fb      	strb	r3, [r7, #19]
 800c850:	2300      	movs	r3, #0
 800c852:	74bb      	strb	r3, [r7, #18]
 800c854:	687b      	ldr	r3, [r7, #4]
 800c856:	681b      	ldr	r3, [r3, #0]
 800c858:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 800c85c:	2b00      	cmp	r3, #0
 800c85e:	d058      	beq.n	800c912 <HAL_RCCEx_PeriphCLKConfig+0xd2>
 800c860:	f7fe fcca 	bl	800b1f8 <HAL_PWR_EnableBkUpAccess>
 800c864:	f7f9 fdb6 	bl	80063d4 <HAL_GetTick>
 800c868:	60f8      	str	r0, [r7, #12]
 800c86a:	e009      	b.n	800c880 <HAL_RCCEx_PeriphCLKConfig+0x40>
 800c86c:	f7f9 fdb2 	bl	80063d4 <HAL_GetTick>
 800c870:	4602      	mov	r2, r0
 800c872:	68fb      	ldr	r3, [r7, #12]
 800c874:	1ad3      	subs	r3, r2, r3
 800c876:	2b02      	cmp	r3, #2
 800c878:	d902      	bls.n	800c880 <HAL_RCCEx_PeriphCLKConfig+0x40>
 800c87a:	2303      	movs	r3, #3
 800c87c:	74fb      	strb	r3, [r7, #19]
 800c87e:	e006      	b.n	800c88e <HAL_RCCEx_PeriphCLKConfig+0x4e>
 800c880:	4b7b      	ldr	r3, [pc, #492]	; (800ca70 <HAL_RCCEx_PeriphCLKConfig+0x230>)
 800c882:	681b      	ldr	r3, [r3, #0]
 800c884:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800c888:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800c88c:	d1ee      	bne.n	800c86c <HAL_RCCEx_PeriphCLKConfig+0x2c>
 800c88e:	7cfb      	ldrb	r3, [r7, #19]
 800c890:	2b00      	cmp	r3, #0
 800c892:	d13c      	bne.n	800c90e <HAL_RCCEx_PeriphCLKConfig+0xce>
 800c894:	f7ff ffa7 	bl	800c7e6 <LL_RCC_GetRTCClockSource>
 800c898:	4602      	mov	r2, r0
 800c89a:	687b      	ldr	r3, [r7, #4]
 800c89c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800c89e:	429a      	cmp	r2, r3
 800c8a0:	d00f      	beq.n	800c8c2 <HAL_RCCEx_PeriphCLKConfig+0x82>
 800c8a2:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 800c8a6:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800c8aa:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800c8ae:	617b      	str	r3, [r7, #20]
 800c8b0:	f7ff ffa5 	bl	800c7fe <LL_RCC_ForceBackupDomainReset>
 800c8b4:	f7ff ffb3 	bl	800c81e <LL_RCC_ReleaseBackupDomainReset>
 800c8b8:	f04f 42b0 	mov.w	r2, #1476395008	; 0x58000000
 800c8bc:	697b      	ldr	r3, [r7, #20]
 800c8be:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
 800c8c2:	697b      	ldr	r3, [r7, #20]
 800c8c4:	f003 0302 	and.w	r3, r3, #2
 800c8c8:	2b00      	cmp	r3, #0
 800c8ca:	d014      	beq.n	800c8f6 <HAL_RCCEx_PeriphCLKConfig+0xb6>
 800c8cc:	f7f9 fd82 	bl	80063d4 <HAL_GetTick>
 800c8d0:	60f8      	str	r0, [r7, #12]
 800c8d2:	e00b      	b.n	800c8ec <HAL_RCCEx_PeriphCLKConfig+0xac>
 800c8d4:	f7f9 fd7e 	bl	80063d4 <HAL_GetTick>
 800c8d8:	4602      	mov	r2, r0
 800c8da:	68fb      	ldr	r3, [r7, #12]
 800c8dc:	1ad3      	subs	r3, r2, r3
 800c8de:	f241 3288 	movw	r2, #5000	; 0x1388
 800c8e2:	4293      	cmp	r3, r2
 800c8e4:	d902      	bls.n	800c8ec <HAL_RCCEx_PeriphCLKConfig+0xac>
 800c8e6:	2303      	movs	r3, #3
 800c8e8:	74fb      	strb	r3, [r7, #19]
 800c8ea:	e004      	b.n	800c8f6 <HAL_RCCEx_PeriphCLKConfig+0xb6>
 800c8ec:	f7ff feb4 	bl	800c658 <LL_RCC_LSE_IsReady>
 800c8f0:	4603      	mov	r3, r0
 800c8f2:	2b01      	cmp	r3, #1
 800c8f4:	d1ee      	bne.n	800c8d4 <HAL_RCCEx_PeriphCLKConfig+0x94>
 800c8f6:	7cfb      	ldrb	r3, [r7, #19]
 800c8f8:	2b00      	cmp	r3, #0
 800c8fa:	d105      	bne.n	800c908 <HAL_RCCEx_PeriphCLKConfig+0xc8>
 800c8fc:	687b      	ldr	r3, [r7, #4]
 800c8fe:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800c900:	4618      	mov	r0, r3
 800c902:	f7ff ff5b 	bl	800c7bc <LL_RCC_SetRTCClockSource>
 800c906:	e004      	b.n	800c912 <HAL_RCCEx_PeriphCLKConfig+0xd2>
 800c908:	7cfb      	ldrb	r3, [r7, #19]
 800c90a:	74bb      	strb	r3, [r7, #18]
 800c90c:	e001      	b.n	800c912 <HAL_RCCEx_PeriphCLKConfig+0xd2>
 800c90e:	7cfb      	ldrb	r3, [r7, #19]
 800c910:	74bb      	strb	r3, [r7, #18]
 800c912:	687b      	ldr	r3, [r7, #4]
 800c914:	681b      	ldr	r3, [r3, #0]
 800c916:	f003 0301 	and.w	r3, r3, #1
 800c91a:	2b00      	cmp	r3, #0
 800c91c:	d004      	beq.n	800c928 <HAL_RCCEx_PeriphCLKConfig+0xe8>
 800c91e:	687b      	ldr	r3, [r7, #4]
 800c920:	685b      	ldr	r3, [r3, #4]
 800c922:	4618      	mov	r0, r3
 800c924:	f7ff fea9 	bl	800c67a <LL_RCC_SetUSARTClockSource>
 800c928:	687b      	ldr	r3, [r7, #4]
 800c92a:	681b      	ldr	r3, [r3, #0]
 800c92c:	f003 0302 	and.w	r3, r3, #2
 800c930:	2b00      	cmp	r3, #0
 800c932:	d004      	beq.n	800c93e <HAL_RCCEx_PeriphCLKConfig+0xfe>
 800c934:	687b      	ldr	r3, [r7, #4]
 800c936:	689b      	ldr	r3, [r3, #8]
 800c938:	4618      	mov	r0, r3
 800c93a:	f7ff fe9e 	bl	800c67a <LL_RCC_SetUSARTClockSource>
 800c93e:	687b      	ldr	r3, [r7, #4]
 800c940:	681b      	ldr	r3, [r3, #0]
 800c942:	f003 0320 	and.w	r3, r3, #32
 800c946:	2b00      	cmp	r3, #0
 800c948:	d004      	beq.n	800c954 <HAL_RCCEx_PeriphCLKConfig+0x114>
 800c94a:	687b      	ldr	r3, [r7, #4]
 800c94c:	691b      	ldr	r3, [r3, #16]
 800c94e:	4618      	mov	r0, r3
 800c950:	f7ff fec0 	bl	800c6d4 <LL_RCC_SetLPUARTClockSource>
 800c954:	687b      	ldr	r3, [r7, #4]
 800c956:	681b      	ldr	r3, [r3, #0]
 800c958:	f403 7300 	and.w	r3, r3, #512	; 0x200
 800c95c:	2b00      	cmp	r3, #0
 800c95e:	d004      	beq.n	800c96a <HAL_RCCEx_PeriphCLKConfig+0x12a>
 800c960:	687b      	ldr	r3, [r7, #4]
 800c962:	6a1b      	ldr	r3, [r3, #32]
 800c964:	4618      	mov	r0, r3
 800c966:	f7ff fee6 	bl	800c736 <LL_RCC_SetLPTIMClockSource>
 800c96a:	687b      	ldr	r3, [r7, #4]
 800c96c:	681b      	ldr	r3, [r3, #0]
 800c96e:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 800c972:	2b00      	cmp	r3, #0
 800c974:	d004      	beq.n	800c980 <HAL_RCCEx_PeriphCLKConfig+0x140>
 800c976:	687b      	ldr	r3, [r7, #4]
 800c978:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c97a:	4618      	mov	r0, r3
 800c97c:	f7ff fedb 	bl	800c736 <LL_RCC_SetLPTIMClockSource>
 800c980:	687b      	ldr	r3, [r7, #4]
 800c982:	681b      	ldr	r3, [r3, #0]
 800c984:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 800c988:	2b00      	cmp	r3, #0
 800c98a:	d004      	beq.n	800c996 <HAL_RCCEx_PeriphCLKConfig+0x156>
 800c98c:	687b      	ldr	r3, [r7, #4]
 800c98e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800c990:	4618      	mov	r0, r3
 800c992:	f7ff fed0 	bl	800c736 <LL_RCC_SetLPTIMClockSource>
 800c996:	687b      	ldr	r3, [r7, #4]
 800c998:	681b      	ldr	r3, [r3, #0]
 800c99a:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800c99e:	2b00      	cmp	r3, #0
 800c9a0:	d004      	beq.n	800c9ac <HAL_RCCEx_PeriphCLKConfig+0x16c>
 800c9a2:	687b      	ldr	r3, [r7, #4]
 800c9a4:	695b      	ldr	r3, [r3, #20]
 800c9a6:	4618      	mov	r0, r3
 800c9a8:	f7ff fea9 	bl	800c6fe <LL_RCC_SetI2CClockSource>
 800c9ac:	687b      	ldr	r3, [r7, #4]
 800c9ae:	681b      	ldr	r3, [r3, #0]
 800c9b0:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800c9b4:	2b00      	cmp	r3, #0
 800c9b6:	d004      	beq.n	800c9c2 <HAL_RCCEx_PeriphCLKConfig+0x182>
 800c9b8:	687b      	ldr	r3, [r7, #4]
 800c9ba:	699b      	ldr	r3, [r3, #24]
 800c9bc:	4618      	mov	r0, r3
 800c9be:	f7ff fe9e 	bl	800c6fe <LL_RCC_SetI2CClockSource>
 800c9c2:	687b      	ldr	r3, [r7, #4]
 800c9c4:	681b      	ldr	r3, [r3, #0]
 800c9c6:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800c9ca:	2b00      	cmp	r3, #0
 800c9cc:	d004      	beq.n	800c9d8 <HAL_RCCEx_PeriphCLKConfig+0x198>
 800c9ce:	687b      	ldr	r3, [r7, #4]
 800c9d0:	69db      	ldr	r3, [r3, #28]
 800c9d2:	4618      	mov	r0, r3
 800c9d4:	f7ff fe93 	bl	800c6fe <LL_RCC_SetI2CClockSource>
 800c9d8:	687b      	ldr	r3, [r7, #4]
 800c9da:	681b      	ldr	r3, [r3, #0]
 800c9dc:	f003 0310 	and.w	r3, r3, #16
 800c9e0:	2b00      	cmp	r3, #0
 800c9e2:	d011      	beq.n	800ca08 <HAL_RCCEx_PeriphCLKConfig+0x1c8>
 800c9e4:	687b      	ldr	r3, [r7, #4]
 800c9e6:	68db      	ldr	r3, [r3, #12]
 800c9e8:	4618      	mov	r0, r3
 800c9ea:	f7ff fe5e 	bl	800c6aa <LL_RCC_SetI2SClockSource>
 800c9ee:	687b      	ldr	r3, [r7, #4]
 800c9f0:	68db      	ldr	r3, [r3, #12]
 800c9f2:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800c9f6:	d107      	bne.n	800ca08 <HAL_RCCEx_PeriphCLKConfig+0x1c8>
 800c9f8:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 800c9fc:	68db      	ldr	r3, [r3, #12]
 800c9fe:	f04f 42b0 	mov.w	r2, #1476395008	; 0x58000000
 800ca02:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 800ca06:	60d3      	str	r3, [r2, #12]
 800ca08:	687b      	ldr	r3, [r7, #4]
 800ca0a:	681b      	ldr	r3, [r3, #0]
 800ca0c:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 800ca10:	2b00      	cmp	r3, #0
 800ca12:	d010      	beq.n	800ca36 <HAL_RCCEx_PeriphCLKConfig+0x1f6>
 800ca14:	687b      	ldr	r3, [r7, #4]
 800ca16:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800ca18:	4618      	mov	r0, r3
 800ca1a:	f7ff fea5 	bl	800c768 <LL_RCC_SetRNGClockSource>
 800ca1e:	687b      	ldr	r3, [r7, #4]
 800ca20:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800ca22:	2b00      	cmp	r3, #0
 800ca24:	d107      	bne.n	800ca36 <HAL_RCCEx_PeriphCLKConfig+0x1f6>
 800ca26:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 800ca2a:	68db      	ldr	r3, [r3, #12]
 800ca2c:	f04f 42b0 	mov.w	r2, #1476395008	; 0x58000000
 800ca30:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 800ca34:	60d3      	str	r3, [r2, #12]
 800ca36:	687b      	ldr	r3, [r7, #4]
 800ca38:	681b      	ldr	r3, [r3, #0]
 800ca3a:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 800ca3e:	2b00      	cmp	r3, #0
 800ca40:	d011      	beq.n	800ca66 <HAL_RCCEx_PeriphCLKConfig+0x226>
 800ca42:	687b      	ldr	r3, [r7, #4]
 800ca44:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ca46:	4618      	mov	r0, r3
 800ca48:	f7ff fea3 	bl	800c792 <LL_RCC_SetADCClockSource>
 800ca4c:	687b      	ldr	r3, [r7, #4]
 800ca4e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ca50:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 800ca54:	d107      	bne.n	800ca66 <HAL_RCCEx_PeriphCLKConfig+0x226>
 800ca56:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 800ca5a:	68db      	ldr	r3, [r3, #12]
 800ca5c:	f04f 42b0 	mov.w	r2, #1476395008	; 0x58000000
 800ca60:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800ca64:	60d3      	str	r3, [r2, #12]
 800ca66:	7cbb      	ldrb	r3, [r7, #18]
 800ca68:	4618      	mov	r0, r3
 800ca6a:	3718      	adds	r7, #24
 800ca6c:	46bd      	mov	sp, r7
 800ca6e:	bd80      	pop	{r7, pc}
 800ca70:	58000400 	.word	0x58000400

0800ca74 <HAL_RTC_Init>:
 800ca74:	b580      	push	{r7, lr}
 800ca76:	b084      	sub	sp, #16
 800ca78:	af00      	add	r7, sp, #0
 800ca7a:	6078      	str	r0, [r7, #4]
 800ca7c:	2301      	movs	r3, #1
 800ca7e:	73fb      	strb	r3, [r7, #15]
 800ca80:	687b      	ldr	r3, [r7, #4]
 800ca82:	2b00      	cmp	r3, #0
 800ca84:	d068      	beq.n	800cb58 <HAL_RTC_Init+0xe4>
 800ca86:	687b      	ldr	r3, [r7, #4]
 800ca88:	f893 302d 	ldrb.w	r3, [r3, #45]	; 0x2d
 800ca8c:	b2db      	uxtb	r3, r3
 800ca8e:	2b00      	cmp	r3, #0
 800ca90:	d106      	bne.n	800caa0 <HAL_RTC_Init+0x2c>
 800ca92:	687b      	ldr	r3, [r7, #4]
 800ca94:	2200      	movs	r2, #0
 800ca96:	f883 202c 	strb.w	r2, [r3, #44]	; 0x2c
 800ca9a:	6878      	ldr	r0, [r7, #4]
 800ca9c:	f7f9 f938 	bl	8005d10 <HAL_RTC_MspInit>
 800caa0:	687b      	ldr	r3, [r7, #4]
 800caa2:	2202      	movs	r2, #2
 800caa4:	f883 202d 	strb.w	r2, [r3, #45]	; 0x2d
 800caa8:	4b2e      	ldr	r3, [pc, #184]	; (800cb64 <HAL_RTC_Init+0xf0>)
 800caaa:	22ca      	movs	r2, #202	; 0xca
 800caac:	625a      	str	r2, [r3, #36]	; 0x24
 800caae:	4b2d      	ldr	r3, [pc, #180]	; (800cb64 <HAL_RTC_Init+0xf0>)
 800cab0:	2253      	movs	r2, #83	; 0x53
 800cab2:	625a      	str	r2, [r3, #36]	; 0x24
 800cab4:	6878      	ldr	r0, [r7, #4]
 800cab6:	f000 f9fb 	bl	800ceb0 <RTC_EnterInitMode>
 800caba:	4603      	mov	r3, r0
 800cabc:	73fb      	strb	r3, [r7, #15]
 800cabe:	7bfb      	ldrb	r3, [r7, #15]
 800cac0:	2b00      	cmp	r3, #0
 800cac2:	d13f      	bne.n	800cb44 <HAL_RTC_Init+0xd0>
 800cac4:	4b27      	ldr	r3, [pc, #156]	; (800cb64 <HAL_RTC_Init+0xf0>)
 800cac6:	699b      	ldr	r3, [r3, #24]
 800cac8:	4a26      	ldr	r2, [pc, #152]	; (800cb64 <HAL_RTC_Init+0xf0>)
 800caca:	f023 638e 	bic.w	r3, r3, #74448896	; 0x4700000
 800cace:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800cad2:	6193      	str	r3, [r2, #24]
 800cad4:	4b23      	ldr	r3, [pc, #140]	; (800cb64 <HAL_RTC_Init+0xf0>)
 800cad6:	699a      	ldr	r2, [r3, #24]
 800cad8:	687b      	ldr	r3, [r7, #4]
 800cada:	6859      	ldr	r1, [r3, #4]
 800cadc:	687b      	ldr	r3, [r7, #4]
 800cade:	691b      	ldr	r3, [r3, #16]
 800cae0:	4319      	orrs	r1, r3
 800cae2:	687b      	ldr	r3, [r7, #4]
 800cae4:	699b      	ldr	r3, [r3, #24]
 800cae6:	430b      	orrs	r3, r1
 800cae8:	491e      	ldr	r1, [pc, #120]	; (800cb64 <HAL_RTC_Init+0xf0>)
 800caea:	4313      	orrs	r3, r2
 800caec:	618b      	str	r3, [r1, #24]
 800caee:	687b      	ldr	r3, [r7, #4]
 800caf0:	68da      	ldr	r2, [r3, #12]
 800caf2:	687b      	ldr	r3, [r7, #4]
 800caf4:	689b      	ldr	r3, [r3, #8]
 800caf6:	041b      	lsls	r3, r3, #16
 800caf8:	491a      	ldr	r1, [pc, #104]	; (800cb64 <HAL_RTC_Init+0xf0>)
 800cafa:	4313      	orrs	r3, r2
 800cafc:	610b      	str	r3, [r1, #16]
 800cafe:	4b19      	ldr	r3, [pc, #100]	; (800cb64 <HAL_RTC_Init+0xf0>)
 800cb00:	68db      	ldr	r3, [r3, #12]
 800cb02:	f423 52f8 	bic.w	r2, r3, #7936	; 0x1f00
 800cb06:	687b      	ldr	r3, [r7, #4]
 800cb08:	6a59      	ldr	r1, [r3, #36]	; 0x24
 800cb0a:	687b      	ldr	r3, [r7, #4]
 800cb0c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800cb0e:	430b      	orrs	r3, r1
 800cb10:	4914      	ldr	r1, [pc, #80]	; (800cb64 <HAL_RTC_Init+0xf0>)
 800cb12:	4313      	orrs	r3, r2
 800cb14:	60cb      	str	r3, [r1, #12]
 800cb16:	6878      	ldr	r0, [r7, #4]
 800cb18:	f000 f9fe 	bl	800cf18 <RTC_ExitInitMode>
 800cb1c:	4603      	mov	r3, r0
 800cb1e:	73fb      	strb	r3, [r7, #15]
 800cb20:	7bfb      	ldrb	r3, [r7, #15]
 800cb22:	2b00      	cmp	r3, #0
 800cb24:	d10e      	bne.n	800cb44 <HAL_RTC_Init+0xd0>
 800cb26:	4b0f      	ldr	r3, [pc, #60]	; (800cb64 <HAL_RTC_Init+0xf0>)
 800cb28:	699b      	ldr	r3, [r3, #24]
 800cb2a:	f023 4260 	bic.w	r2, r3, #3758096384	; 0xe0000000
 800cb2e:	687b      	ldr	r3, [r7, #4]
 800cb30:	6a19      	ldr	r1, [r3, #32]
 800cb32:	687b      	ldr	r3, [r7, #4]
 800cb34:	69db      	ldr	r3, [r3, #28]
 800cb36:	4319      	orrs	r1, r3
 800cb38:	687b      	ldr	r3, [r7, #4]
 800cb3a:	695b      	ldr	r3, [r3, #20]
 800cb3c:	430b      	orrs	r3, r1
 800cb3e:	4909      	ldr	r1, [pc, #36]	; (800cb64 <HAL_RTC_Init+0xf0>)
 800cb40:	4313      	orrs	r3, r2
 800cb42:	618b      	str	r3, [r1, #24]
 800cb44:	4b07      	ldr	r3, [pc, #28]	; (800cb64 <HAL_RTC_Init+0xf0>)
 800cb46:	22ff      	movs	r2, #255	; 0xff
 800cb48:	625a      	str	r2, [r3, #36]	; 0x24
 800cb4a:	7bfb      	ldrb	r3, [r7, #15]
 800cb4c:	2b00      	cmp	r3, #0
 800cb4e:	d103      	bne.n	800cb58 <HAL_RTC_Init+0xe4>
 800cb50:	687b      	ldr	r3, [r7, #4]
 800cb52:	2201      	movs	r2, #1
 800cb54:	f883 202d 	strb.w	r2, [r3, #45]	; 0x2d
 800cb58:	7bfb      	ldrb	r3, [r7, #15]
 800cb5a:	4618      	mov	r0, r3
 800cb5c:	3710      	adds	r7, #16
 800cb5e:	46bd      	mov	sp, r7
 800cb60:	bd80      	pop	{r7, pc}
 800cb62:	bf00      	nop
 800cb64:	40002800 	.word	0x40002800

0800cb68 <HAL_RTC_SetAlarm_IT>:
 800cb68:	b590      	push	{r4, r7, lr}
 800cb6a:	b087      	sub	sp, #28
 800cb6c:	af00      	add	r7, sp, #0
 800cb6e:	60f8      	str	r0, [r7, #12]
 800cb70:	60b9      	str	r1, [r7, #8]
 800cb72:	607a      	str	r2, [r7, #4]
 800cb74:	2300      	movs	r3, #0
 800cb76:	617b      	str	r3, [r7, #20]
 800cb78:	68fb      	ldr	r3, [r7, #12]
 800cb7a:	f893 302c 	ldrb.w	r3, [r3, #44]	; 0x2c
 800cb7e:	2b01      	cmp	r3, #1
 800cb80:	d101      	bne.n	800cb86 <HAL_RTC_SetAlarm_IT+0x1e>
 800cb82:	2302      	movs	r3, #2
 800cb84:	e0e5      	b.n	800cd52 <HAL_RTC_SetAlarm_IT+0x1ea>
 800cb86:	68fb      	ldr	r3, [r7, #12]
 800cb88:	2201      	movs	r2, #1
 800cb8a:	f883 202c 	strb.w	r2, [r3, #44]	; 0x2c
 800cb8e:	68fb      	ldr	r3, [r7, #12]
 800cb90:	2202      	movs	r2, #2
 800cb92:	f883 202d 	strb.w	r2, [r3, #45]	; 0x2d
 800cb96:	4b71      	ldr	r3, [pc, #452]	; (800cd5c <HAL_RTC_SetAlarm_IT+0x1f4>)
 800cb98:	68db      	ldr	r3, [r3, #12]
 800cb9a:	f403 7340 	and.w	r3, r3, #768	; 0x300
 800cb9e:	613b      	str	r3, [r7, #16]
 800cba0:	693b      	ldr	r3, [r7, #16]
 800cba2:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800cba6:	d05c      	beq.n	800cc62 <HAL_RTC_SetAlarm_IT+0xfa>
 800cba8:	687b      	ldr	r3, [r7, #4]
 800cbaa:	2b00      	cmp	r3, #0
 800cbac:	d136      	bne.n	800cc1c <HAL_RTC_SetAlarm_IT+0xb4>
 800cbae:	4b6b      	ldr	r3, [pc, #428]	; (800cd5c <HAL_RTC_SetAlarm_IT+0x1f4>)
 800cbb0:	699b      	ldr	r3, [r3, #24]
 800cbb2:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800cbb6:	2b00      	cmp	r3, #0
 800cbb8:	d102      	bne.n	800cbc0 <HAL_RTC_SetAlarm_IT+0x58>
 800cbba:	68bb      	ldr	r3, [r7, #8]
 800cbbc:	2200      	movs	r2, #0
 800cbbe:	70da      	strb	r2, [r3, #3]
 800cbc0:	68bb      	ldr	r3, [r7, #8]
 800cbc2:	781b      	ldrb	r3, [r3, #0]
 800cbc4:	4618      	mov	r0, r3
 800cbc6:	f000 f9e5 	bl	800cf94 <RTC_ByteToBcd2>
 800cbca:	4603      	mov	r3, r0
 800cbcc:	041c      	lsls	r4, r3, #16
 800cbce:	68bb      	ldr	r3, [r7, #8]
 800cbd0:	785b      	ldrb	r3, [r3, #1]
 800cbd2:	4618      	mov	r0, r3
 800cbd4:	f000 f9de 	bl	800cf94 <RTC_ByteToBcd2>
 800cbd8:	4603      	mov	r3, r0
 800cbda:	021b      	lsls	r3, r3, #8
 800cbdc:	431c      	orrs	r4, r3
 800cbde:	68bb      	ldr	r3, [r7, #8]
 800cbe0:	789b      	ldrb	r3, [r3, #2]
 800cbe2:	4618      	mov	r0, r3
 800cbe4:	f000 f9d6 	bl	800cf94 <RTC_ByteToBcd2>
 800cbe8:	4603      	mov	r3, r0
 800cbea:	ea44 0203 	orr.w	r2, r4, r3
 800cbee:	68bb      	ldr	r3, [r7, #8]
 800cbf0:	78db      	ldrb	r3, [r3, #3]
 800cbf2:	059b      	lsls	r3, r3, #22
 800cbf4:	ea42 0403 	orr.w	r4, r2, r3
 800cbf8:	68bb      	ldr	r3, [r7, #8]
 800cbfa:	f893 3024 	ldrb.w	r3, [r3, #36]	; 0x24
 800cbfe:	4618      	mov	r0, r3
 800cc00:	f000 f9c8 	bl	800cf94 <RTC_ByteToBcd2>
 800cc04:	4603      	mov	r3, r0
 800cc06:	061b      	lsls	r3, r3, #24
 800cc08:	ea44 0203 	orr.w	r2, r4, r3
 800cc0c:	68bb      	ldr	r3, [r7, #8]
 800cc0e:	6a1b      	ldr	r3, [r3, #32]
 800cc10:	431a      	orrs	r2, r3
 800cc12:	68bb      	ldr	r3, [r7, #8]
 800cc14:	695b      	ldr	r3, [r3, #20]
 800cc16:	4313      	orrs	r3, r2
 800cc18:	617b      	str	r3, [r7, #20]
 800cc1a:	e022      	b.n	800cc62 <HAL_RTC_SetAlarm_IT+0xfa>
 800cc1c:	4b4f      	ldr	r3, [pc, #316]	; (800cd5c <HAL_RTC_SetAlarm_IT+0x1f4>)
 800cc1e:	699b      	ldr	r3, [r3, #24]
 800cc20:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800cc24:	2b00      	cmp	r3, #0
 800cc26:	d102      	bne.n	800cc2e <HAL_RTC_SetAlarm_IT+0xc6>
 800cc28:	68bb      	ldr	r3, [r7, #8]
 800cc2a:	2200      	movs	r2, #0
 800cc2c:	70da      	strb	r2, [r3, #3]
 800cc2e:	68bb      	ldr	r3, [r7, #8]
 800cc30:	781b      	ldrb	r3, [r3, #0]
 800cc32:	041a      	lsls	r2, r3, #16
 800cc34:	68bb      	ldr	r3, [r7, #8]
 800cc36:	785b      	ldrb	r3, [r3, #1]
 800cc38:	021b      	lsls	r3, r3, #8
 800cc3a:	4313      	orrs	r3, r2
 800cc3c:	68ba      	ldr	r2, [r7, #8]
 800cc3e:	7892      	ldrb	r2, [r2, #2]
 800cc40:	431a      	orrs	r2, r3
 800cc42:	68bb      	ldr	r3, [r7, #8]
 800cc44:	78db      	ldrb	r3, [r3, #3]
 800cc46:	059b      	lsls	r3, r3, #22
 800cc48:	431a      	orrs	r2, r3
 800cc4a:	68bb      	ldr	r3, [r7, #8]
 800cc4c:	f893 3024 	ldrb.w	r3, [r3, #36]	; 0x24
 800cc50:	061b      	lsls	r3, r3, #24
 800cc52:	431a      	orrs	r2, r3
 800cc54:	68bb      	ldr	r3, [r7, #8]
 800cc56:	6a1b      	ldr	r3, [r3, #32]
 800cc58:	431a      	orrs	r2, r3
 800cc5a:	68bb      	ldr	r3, [r7, #8]
 800cc5c:	695b      	ldr	r3, [r3, #20]
 800cc5e:	4313      	orrs	r3, r2
 800cc60:	617b      	str	r3, [r7, #20]
 800cc62:	4b3e      	ldr	r3, [pc, #248]	; (800cd5c <HAL_RTC_SetAlarm_IT+0x1f4>)
 800cc64:	22ca      	movs	r2, #202	; 0xca
 800cc66:	625a      	str	r2, [r3, #36]	; 0x24
 800cc68:	4b3c      	ldr	r3, [pc, #240]	; (800cd5c <HAL_RTC_SetAlarm_IT+0x1f4>)
 800cc6a:	2253      	movs	r2, #83	; 0x53
 800cc6c:	625a      	str	r2, [r3, #36]	; 0x24
 800cc6e:	68bb      	ldr	r3, [r7, #8]
 800cc70:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800cc72:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800cc76:	d12c      	bne.n	800ccd2 <HAL_RTC_SetAlarm_IT+0x16a>
 800cc78:	4b38      	ldr	r3, [pc, #224]	; (800cd5c <HAL_RTC_SetAlarm_IT+0x1f4>)
 800cc7a:	699b      	ldr	r3, [r3, #24]
 800cc7c:	4a37      	ldr	r2, [pc, #220]	; (800cd5c <HAL_RTC_SetAlarm_IT+0x1f4>)
 800cc7e:	f423 5388 	bic.w	r3, r3, #4352	; 0x1100
 800cc82:	6193      	str	r3, [r2, #24]
 800cc84:	4b35      	ldr	r3, [pc, #212]	; (800cd5c <HAL_RTC_SetAlarm_IT+0x1f4>)
 800cc86:	2201      	movs	r2, #1
 800cc88:	65da      	str	r2, [r3, #92]	; 0x5c
 800cc8a:	693b      	ldr	r3, [r7, #16]
 800cc8c:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800cc90:	d107      	bne.n	800cca2 <HAL_RTC_SetAlarm_IT+0x13a>
 800cc92:	68bb      	ldr	r3, [r7, #8]
 800cc94:	699a      	ldr	r2, [r3, #24]
 800cc96:	68bb      	ldr	r3, [r7, #8]
 800cc98:	69db      	ldr	r3, [r3, #28]
 800cc9a:	4930      	ldr	r1, [pc, #192]	; (800cd5c <HAL_RTC_SetAlarm_IT+0x1f4>)
 800cc9c:	4313      	orrs	r3, r2
 800cc9e:	644b      	str	r3, [r1, #68]	; 0x44
 800cca0:	e006      	b.n	800ccb0 <HAL_RTC_SetAlarm_IT+0x148>
 800cca2:	4a2e      	ldr	r2, [pc, #184]	; (800cd5c <HAL_RTC_SetAlarm_IT+0x1f4>)
 800cca4:	697b      	ldr	r3, [r7, #20]
 800cca6:	6413      	str	r3, [r2, #64]	; 0x40
 800cca8:	4a2c      	ldr	r2, [pc, #176]	; (800cd5c <HAL_RTC_SetAlarm_IT+0x1f4>)
 800ccaa:	68bb      	ldr	r3, [r7, #8]
 800ccac:	699b      	ldr	r3, [r3, #24]
 800ccae:	6453      	str	r3, [r2, #68]	; 0x44
 800ccb0:	4a2a      	ldr	r2, [pc, #168]	; (800cd5c <HAL_RTC_SetAlarm_IT+0x1f4>)
 800ccb2:	68bb      	ldr	r3, [r7, #8]
 800ccb4:	685b      	ldr	r3, [r3, #4]
 800ccb6:	6713      	str	r3, [r2, #112]	; 0x70
 800ccb8:	68fb      	ldr	r3, [r7, #12]
 800ccba:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800ccbc:	f043 0201 	orr.w	r2, r3, #1
 800ccc0:	68fb      	ldr	r3, [r7, #12]
 800ccc2:	631a      	str	r2, [r3, #48]	; 0x30
 800ccc4:	4b25      	ldr	r3, [pc, #148]	; (800cd5c <HAL_RTC_SetAlarm_IT+0x1f4>)
 800ccc6:	699b      	ldr	r3, [r3, #24]
 800ccc8:	4a24      	ldr	r2, [pc, #144]	; (800cd5c <HAL_RTC_SetAlarm_IT+0x1f4>)
 800ccca:	f443 5388 	orr.w	r3, r3, #4352	; 0x1100
 800ccce:	6193      	str	r3, [r2, #24]
 800ccd0:	e02b      	b.n	800cd2a <HAL_RTC_SetAlarm_IT+0x1c2>
 800ccd2:	4b22      	ldr	r3, [pc, #136]	; (800cd5c <HAL_RTC_SetAlarm_IT+0x1f4>)
 800ccd4:	699b      	ldr	r3, [r3, #24]
 800ccd6:	4a21      	ldr	r2, [pc, #132]	; (800cd5c <HAL_RTC_SetAlarm_IT+0x1f4>)
 800ccd8:	f423 5308 	bic.w	r3, r3, #8704	; 0x2200
 800ccdc:	6193      	str	r3, [r2, #24]
 800ccde:	4b1f      	ldr	r3, [pc, #124]	; (800cd5c <HAL_RTC_SetAlarm_IT+0x1f4>)
 800cce0:	2202      	movs	r2, #2
 800cce2:	65da      	str	r2, [r3, #92]	; 0x5c
 800cce4:	693b      	ldr	r3, [r7, #16]
 800cce6:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800ccea:	d107      	bne.n	800ccfc <HAL_RTC_SetAlarm_IT+0x194>
 800ccec:	68bb      	ldr	r3, [r7, #8]
 800ccee:	699a      	ldr	r2, [r3, #24]
 800ccf0:	68bb      	ldr	r3, [r7, #8]
 800ccf2:	69db      	ldr	r3, [r3, #28]
 800ccf4:	4919      	ldr	r1, [pc, #100]	; (800cd5c <HAL_RTC_SetAlarm_IT+0x1f4>)
 800ccf6:	4313      	orrs	r3, r2
 800ccf8:	64cb      	str	r3, [r1, #76]	; 0x4c
 800ccfa:	e006      	b.n	800cd0a <HAL_RTC_SetAlarm_IT+0x1a2>
 800ccfc:	4a17      	ldr	r2, [pc, #92]	; (800cd5c <HAL_RTC_SetAlarm_IT+0x1f4>)
 800ccfe:	697b      	ldr	r3, [r7, #20]
 800cd00:	6493      	str	r3, [r2, #72]	; 0x48
 800cd02:	4a16      	ldr	r2, [pc, #88]	; (800cd5c <HAL_RTC_SetAlarm_IT+0x1f4>)
 800cd04:	68bb      	ldr	r3, [r7, #8]
 800cd06:	699b      	ldr	r3, [r3, #24]
 800cd08:	64d3      	str	r3, [r2, #76]	; 0x4c
 800cd0a:	4a14      	ldr	r2, [pc, #80]	; (800cd5c <HAL_RTC_SetAlarm_IT+0x1f4>)
 800cd0c:	68bb      	ldr	r3, [r7, #8]
 800cd0e:	685b      	ldr	r3, [r3, #4]
 800cd10:	6753      	str	r3, [r2, #116]	; 0x74
 800cd12:	68fb      	ldr	r3, [r7, #12]
 800cd14:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800cd16:	f043 0202 	orr.w	r2, r3, #2
 800cd1a:	68fb      	ldr	r3, [r7, #12]
 800cd1c:	631a      	str	r2, [r3, #48]	; 0x30
 800cd1e:	4b0f      	ldr	r3, [pc, #60]	; (800cd5c <HAL_RTC_SetAlarm_IT+0x1f4>)
 800cd20:	699b      	ldr	r3, [r3, #24]
 800cd22:	4a0e      	ldr	r2, [pc, #56]	; (800cd5c <HAL_RTC_SetAlarm_IT+0x1f4>)
 800cd24:	f443 5308 	orr.w	r3, r3, #8704	; 0x2200
 800cd28:	6193      	str	r3, [r2, #24]
 800cd2a:	4b0d      	ldr	r3, [pc, #52]	; (800cd60 <HAL_RTC_SetAlarm_IT+0x1f8>)
 800cd2c:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800cd30:	4a0b      	ldr	r2, [pc, #44]	; (800cd60 <HAL_RTC_SetAlarm_IT+0x1f8>)
 800cd32:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 800cd36:	f8c2 3080 	str.w	r3, [r2, #128]	; 0x80
 800cd3a:	4b08      	ldr	r3, [pc, #32]	; (800cd5c <HAL_RTC_SetAlarm_IT+0x1f4>)
 800cd3c:	22ff      	movs	r2, #255	; 0xff
 800cd3e:	625a      	str	r2, [r3, #36]	; 0x24
 800cd40:	68fb      	ldr	r3, [r7, #12]
 800cd42:	2201      	movs	r2, #1
 800cd44:	f883 202d 	strb.w	r2, [r3, #45]	; 0x2d
 800cd48:	68fb      	ldr	r3, [r7, #12]
 800cd4a:	2200      	movs	r2, #0
 800cd4c:	f883 202c 	strb.w	r2, [r3, #44]	; 0x2c
 800cd50:	2300      	movs	r3, #0
 800cd52:	4618      	mov	r0, r3
 800cd54:	371c      	adds	r7, #28
 800cd56:	46bd      	mov	sp, r7
 800cd58:	bd90      	pop	{r4, r7, pc}
 800cd5a:	bf00      	nop
 800cd5c:	40002800 	.word	0x40002800
 800cd60:	58000800 	.word	0x58000800

0800cd64 <HAL_RTC_DeactivateAlarm>:
 800cd64:	b480      	push	{r7}
 800cd66:	b083      	sub	sp, #12
 800cd68:	af00      	add	r7, sp, #0
 800cd6a:	6078      	str	r0, [r7, #4]
 800cd6c:	6039      	str	r1, [r7, #0]
 800cd6e:	687b      	ldr	r3, [r7, #4]
 800cd70:	f893 302c 	ldrb.w	r3, [r3, #44]	; 0x2c
 800cd74:	2b01      	cmp	r3, #1
 800cd76:	d101      	bne.n	800cd7c <HAL_RTC_DeactivateAlarm+0x18>
 800cd78:	2302      	movs	r3, #2
 800cd7a:	e042      	b.n	800ce02 <HAL_RTC_DeactivateAlarm+0x9e>
 800cd7c:	687b      	ldr	r3, [r7, #4]
 800cd7e:	2201      	movs	r2, #1
 800cd80:	f883 202c 	strb.w	r2, [r3, #44]	; 0x2c
 800cd84:	687b      	ldr	r3, [r7, #4]
 800cd86:	2202      	movs	r2, #2
 800cd88:	f883 202d 	strb.w	r2, [r3, #45]	; 0x2d
 800cd8c:	4b1f      	ldr	r3, [pc, #124]	; (800ce0c <HAL_RTC_DeactivateAlarm+0xa8>)
 800cd8e:	22ca      	movs	r2, #202	; 0xca
 800cd90:	625a      	str	r2, [r3, #36]	; 0x24
 800cd92:	4b1e      	ldr	r3, [pc, #120]	; (800ce0c <HAL_RTC_DeactivateAlarm+0xa8>)
 800cd94:	2253      	movs	r2, #83	; 0x53
 800cd96:	625a      	str	r2, [r3, #36]	; 0x24
 800cd98:	683b      	ldr	r3, [r7, #0]
 800cd9a:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800cd9e:	d112      	bne.n	800cdc6 <HAL_RTC_DeactivateAlarm+0x62>
 800cda0:	4b1a      	ldr	r3, [pc, #104]	; (800ce0c <HAL_RTC_DeactivateAlarm+0xa8>)
 800cda2:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800cda4:	4a19      	ldr	r2, [pc, #100]	; (800ce0c <HAL_RTC_DeactivateAlarm+0xa8>)
 800cda6:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 800cdaa:	6453      	str	r3, [r2, #68]	; 0x44
 800cdac:	4b17      	ldr	r3, [pc, #92]	; (800ce0c <HAL_RTC_DeactivateAlarm+0xa8>)
 800cdae:	699b      	ldr	r3, [r3, #24]
 800cdb0:	4a16      	ldr	r2, [pc, #88]	; (800ce0c <HAL_RTC_DeactivateAlarm+0xa8>)
 800cdb2:	f423 5388 	bic.w	r3, r3, #4352	; 0x1100
 800cdb6:	6193      	str	r3, [r2, #24]
 800cdb8:	687b      	ldr	r3, [r7, #4]
 800cdba:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800cdbc:	f023 0201 	bic.w	r2, r3, #1
 800cdc0:	687b      	ldr	r3, [r7, #4]
 800cdc2:	631a      	str	r2, [r3, #48]	; 0x30
 800cdc4:	e011      	b.n	800cdea <HAL_RTC_DeactivateAlarm+0x86>
 800cdc6:	4b11      	ldr	r3, [pc, #68]	; (800ce0c <HAL_RTC_DeactivateAlarm+0xa8>)
 800cdc8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800cdca:	4a10      	ldr	r2, [pc, #64]	; (800ce0c <HAL_RTC_DeactivateAlarm+0xa8>)
 800cdcc:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 800cdd0:	64d3      	str	r3, [r2, #76]	; 0x4c
 800cdd2:	4b0e      	ldr	r3, [pc, #56]	; (800ce0c <HAL_RTC_DeactivateAlarm+0xa8>)
 800cdd4:	699b      	ldr	r3, [r3, #24]
 800cdd6:	4a0d      	ldr	r2, [pc, #52]	; (800ce0c <HAL_RTC_DeactivateAlarm+0xa8>)
 800cdd8:	f423 5308 	bic.w	r3, r3, #8704	; 0x2200
 800cddc:	6193      	str	r3, [r2, #24]
 800cdde:	687b      	ldr	r3, [r7, #4]
 800cde0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800cde2:	f023 0202 	bic.w	r2, r3, #2
 800cde6:	687b      	ldr	r3, [r7, #4]
 800cde8:	631a      	str	r2, [r3, #48]	; 0x30
 800cdea:	4b08      	ldr	r3, [pc, #32]	; (800ce0c <HAL_RTC_DeactivateAlarm+0xa8>)
 800cdec:	22ff      	movs	r2, #255	; 0xff
 800cdee:	625a      	str	r2, [r3, #36]	; 0x24
 800cdf0:	687b      	ldr	r3, [r7, #4]
 800cdf2:	2201      	movs	r2, #1
 800cdf4:	f883 202d 	strb.w	r2, [r3, #45]	; 0x2d
 800cdf8:	687b      	ldr	r3, [r7, #4]
 800cdfa:	2200      	movs	r2, #0
 800cdfc:	f883 202c 	strb.w	r2, [r3, #44]	; 0x2c
 800ce00:	2300      	movs	r3, #0
 800ce02:	4618      	mov	r0, r3
 800ce04:	370c      	adds	r7, #12
 800ce06:	46bd      	mov	sp, r7
 800ce08:	bc80      	pop	{r7}
 800ce0a:	4770      	bx	lr
 800ce0c:	40002800 	.word	0x40002800

0800ce10 <HAL_RTC_AlarmIRQHandler>:
 800ce10:	b580      	push	{r7, lr}
 800ce12:	b084      	sub	sp, #16
 800ce14:	af00      	add	r7, sp, #0
 800ce16:	6078      	str	r0, [r7, #4]
 800ce18:	4b11      	ldr	r3, [pc, #68]	; (800ce60 <HAL_RTC_AlarmIRQHandler+0x50>)
 800ce1a:	6d5a      	ldr	r2, [r3, #84]	; 0x54
 800ce1c:	687b      	ldr	r3, [r7, #4]
 800ce1e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800ce20:	4013      	ands	r3, r2
 800ce22:	60fb      	str	r3, [r7, #12]
 800ce24:	68fb      	ldr	r3, [r7, #12]
 800ce26:	f003 0301 	and.w	r3, r3, #1
 800ce2a:	2b00      	cmp	r3, #0
 800ce2c:	d005      	beq.n	800ce3a <HAL_RTC_AlarmIRQHandler+0x2a>
 800ce2e:	4b0c      	ldr	r3, [pc, #48]	; (800ce60 <HAL_RTC_AlarmIRQHandler+0x50>)
 800ce30:	2201      	movs	r2, #1
 800ce32:	65da      	str	r2, [r3, #92]	; 0x5c
 800ce34:	6878      	ldr	r0, [r7, #4]
 800ce36:	f7f9 fe4b 	bl	8006ad0 <HAL_RTC_AlarmAEventCallback>
 800ce3a:	68fb      	ldr	r3, [r7, #12]
 800ce3c:	f003 0302 	and.w	r3, r3, #2
 800ce40:	2b00      	cmp	r3, #0
 800ce42:	d005      	beq.n	800ce50 <HAL_RTC_AlarmIRQHandler+0x40>
 800ce44:	4b06      	ldr	r3, [pc, #24]	; (800ce60 <HAL_RTC_AlarmIRQHandler+0x50>)
 800ce46:	2202      	movs	r2, #2
 800ce48:	65da      	str	r2, [r3, #92]	; 0x5c
 800ce4a:	6878      	ldr	r0, [r7, #4]
 800ce4c:	f000 f94a 	bl	800d0e4 <HAL_RTCEx_AlarmBEventCallback>
 800ce50:	687b      	ldr	r3, [r7, #4]
 800ce52:	2201      	movs	r2, #1
 800ce54:	f883 202d 	strb.w	r2, [r3, #45]	; 0x2d
 800ce58:	bf00      	nop
 800ce5a:	3710      	adds	r7, #16
 800ce5c:	46bd      	mov	sp, r7
 800ce5e:	bd80      	pop	{r7, pc}
 800ce60:	40002800 	.word	0x40002800

0800ce64 <HAL_RTC_WaitForSynchro>:
 800ce64:	b580      	push	{r7, lr}
 800ce66:	b084      	sub	sp, #16
 800ce68:	af00      	add	r7, sp, #0
 800ce6a:	6078      	str	r0, [r7, #4]
 800ce6c:	4b0f      	ldr	r3, [pc, #60]	; (800ceac <HAL_RTC_WaitForSynchro+0x48>)
 800ce6e:	68db      	ldr	r3, [r3, #12]
 800ce70:	4a0e      	ldr	r2, [pc, #56]	; (800ceac <HAL_RTC_WaitForSynchro+0x48>)
 800ce72:	f063 03a0 	orn	r3, r3, #160	; 0xa0
 800ce76:	60d3      	str	r3, [r2, #12]
 800ce78:	f7f9 faac 	bl	80063d4 <HAL_GetTick>
 800ce7c:	60f8      	str	r0, [r7, #12]
 800ce7e:	e009      	b.n	800ce94 <HAL_RTC_WaitForSynchro+0x30>
 800ce80:	f7f9 faa8 	bl	80063d4 <HAL_GetTick>
 800ce84:	4602      	mov	r2, r0
 800ce86:	68fb      	ldr	r3, [r7, #12]
 800ce88:	1ad3      	subs	r3, r2, r3
 800ce8a:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 800ce8e:	d901      	bls.n	800ce94 <HAL_RTC_WaitForSynchro+0x30>
 800ce90:	2303      	movs	r3, #3
 800ce92:	e006      	b.n	800cea2 <HAL_RTC_WaitForSynchro+0x3e>
 800ce94:	4b05      	ldr	r3, [pc, #20]	; (800ceac <HAL_RTC_WaitForSynchro+0x48>)
 800ce96:	68db      	ldr	r3, [r3, #12]
 800ce98:	f003 0320 	and.w	r3, r3, #32
 800ce9c:	2b00      	cmp	r3, #0
 800ce9e:	d0ef      	beq.n	800ce80 <HAL_RTC_WaitForSynchro+0x1c>
 800cea0:	2300      	movs	r3, #0
 800cea2:	4618      	mov	r0, r3
 800cea4:	3710      	adds	r7, #16
 800cea6:	46bd      	mov	sp, r7
 800cea8:	bd80      	pop	{r7, pc}
 800ceaa:	bf00      	nop
 800ceac:	40002800 	.word	0x40002800

0800ceb0 <RTC_EnterInitMode>:
 800ceb0:	b580      	push	{r7, lr}
 800ceb2:	b084      	sub	sp, #16
 800ceb4:	af00      	add	r7, sp, #0
 800ceb6:	6078      	str	r0, [r7, #4]
 800ceb8:	2300      	movs	r3, #0
 800ceba:	73fb      	strb	r3, [r7, #15]
 800cebc:	4b15      	ldr	r3, [pc, #84]	; (800cf14 <RTC_EnterInitMode+0x64>)
 800cebe:	68db      	ldr	r3, [r3, #12]
 800cec0:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800cec4:	2b00      	cmp	r3, #0
 800cec6:	d120      	bne.n	800cf0a <RTC_EnterInitMode+0x5a>
 800cec8:	4b12      	ldr	r3, [pc, #72]	; (800cf14 <RTC_EnterInitMode+0x64>)
 800ceca:	68db      	ldr	r3, [r3, #12]
 800cecc:	4a11      	ldr	r2, [pc, #68]	; (800cf14 <RTC_EnterInitMode+0x64>)
 800cece:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800ced2:	60d3      	str	r3, [r2, #12]
 800ced4:	f7f9 fa7e 	bl	80063d4 <HAL_GetTick>
 800ced8:	60b8      	str	r0, [r7, #8]
 800ceda:	e00d      	b.n	800cef8 <RTC_EnterInitMode+0x48>
 800cedc:	f7f9 fa7a 	bl	80063d4 <HAL_GetTick>
 800cee0:	4602      	mov	r2, r0
 800cee2:	68bb      	ldr	r3, [r7, #8]
 800cee4:	1ad3      	subs	r3, r2, r3
 800cee6:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 800ceea:	d905      	bls.n	800cef8 <RTC_EnterInitMode+0x48>
 800ceec:	2303      	movs	r3, #3
 800ceee:	73fb      	strb	r3, [r7, #15]
 800cef0:	687b      	ldr	r3, [r7, #4]
 800cef2:	2203      	movs	r2, #3
 800cef4:	f883 202d 	strb.w	r2, [r3, #45]	; 0x2d
 800cef8:	4b06      	ldr	r3, [pc, #24]	; (800cf14 <RTC_EnterInitMode+0x64>)
 800cefa:	68db      	ldr	r3, [r3, #12]
 800cefc:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800cf00:	2b00      	cmp	r3, #0
 800cf02:	d102      	bne.n	800cf0a <RTC_EnterInitMode+0x5a>
 800cf04:	7bfb      	ldrb	r3, [r7, #15]
 800cf06:	2b03      	cmp	r3, #3
 800cf08:	d1e8      	bne.n	800cedc <RTC_EnterInitMode+0x2c>
 800cf0a:	7bfb      	ldrb	r3, [r7, #15]
 800cf0c:	4618      	mov	r0, r3
 800cf0e:	3710      	adds	r7, #16
 800cf10:	46bd      	mov	sp, r7
 800cf12:	bd80      	pop	{r7, pc}
 800cf14:	40002800 	.word	0x40002800

0800cf18 <RTC_ExitInitMode>:
 800cf18:	b580      	push	{r7, lr}
 800cf1a:	b084      	sub	sp, #16
 800cf1c:	af00      	add	r7, sp, #0
 800cf1e:	6078      	str	r0, [r7, #4]
 800cf20:	2300      	movs	r3, #0
 800cf22:	73fb      	strb	r3, [r7, #15]
 800cf24:	4b1a      	ldr	r3, [pc, #104]	; (800cf90 <RTC_ExitInitMode+0x78>)
 800cf26:	68db      	ldr	r3, [r3, #12]
 800cf28:	4a19      	ldr	r2, [pc, #100]	; (800cf90 <RTC_ExitInitMode+0x78>)
 800cf2a:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800cf2e:	60d3      	str	r3, [r2, #12]
 800cf30:	4b17      	ldr	r3, [pc, #92]	; (800cf90 <RTC_ExitInitMode+0x78>)
 800cf32:	699b      	ldr	r3, [r3, #24]
 800cf34:	f003 0320 	and.w	r3, r3, #32
 800cf38:	2b00      	cmp	r3, #0
 800cf3a:	d10c      	bne.n	800cf56 <RTC_ExitInitMode+0x3e>
 800cf3c:	6878      	ldr	r0, [r7, #4]
 800cf3e:	f7ff ff91 	bl	800ce64 <HAL_RTC_WaitForSynchro>
 800cf42:	4603      	mov	r3, r0
 800cf44:	2b00      	cmp	r3, #0
 800cf46:	d01e      	beq.n	800cf86 <RTC_ExitInitMode+0x6e>
 800cf48:	687b      	ldr	r3, [r7, #4]
 800cf4a:	2203      	movs	r2, #3
 800cf4c:	f883 202d 	strb.w	r2, [r3, #45]	; 0x2d
 800cf50:	2303      	movs	r3, #3
 800cf52:	73fb      	strb	r3, [r7, #15]
 800cf54:	e017      	b.n	800cf86 <RTC_ExitInitMode+0x6e>
 800cf56:	4b0e      	ldr	r3, [pc, #56]	; (800cf90 <RTC_ExitInitMode+0x78>)
 800cf58:	699b      	ldr	r3, [r3, #24]
 800cf5a:	4a0d      	ldr	r2, [pc, #52]	; (800cf90 <RTC_ExitInitMode+0x78>)
 800cf5c:	f023 0320 	bic.w	r3, r3, #32
 800cf60:	6193      	str	r3, [r2, #24]
 800cf62:	6878      	ldr	r0, [r7, #4]
 800cf64:	f7ff ff7e 	bl	800ce64 <HAL_RTC_WaitForSynchro>
 800cf68:	4603      	mov	r3, r0
 800cf6a:	2b00      	cmp	r3, #0
 800cf6c:	d005      	beq.n	800cf7a <RTC_ExitInitMode+0x62>
 800cf6e:	687b      	ldr	r3, [r7, #4]
 800cf70:	2203      	movs	r2, #3
 800cf72:	f883 202d 	strb.w	r2, [r3, #45]	; 0x2d
 800cf76:	2303      	movs	r3, #3
 800cf78:	73fb      	strb	r3, [r7, #15]
 800cf7a:	4b05      	ldr	r3, [pc, #20]	; (800cf90 <RTC_ExitInitMode+0x78>)
 800cf7c:	699b      	ldr	r3, [r3, #24]
 800cf7e:	4a04      	ldr	r2, [pc, #16]	; (800cf90 <RTC_ExitInitMode+0x78>)
 800cf80:	f043 0320 	orr.w	r3, r3, #32
 800cf84:	6193      	str	r3, [r2, #24]
 800cf86:	7bfb      	ldrb	r3, [r7, #15]
 800cf88:	4618      	mov	r0, r3
 800cf8a:	3710      	adds	r7, #16
 800cf8c:	46bd      	mov	sp, r7
 800cf8e:	bd80      	pop	{r7, pc}
 800cf90:	40002800 	.word	0x40002800

0800cf94 <RTC_ByteToBcd2>:
 800cf94:	b480      	push	{r7}
 800cf96:	b085      	sub	sp, #20
 800cf98:	af00      	add	r7, sp, #0
 800cf9a:	4603      	mov	r3, r0
 800cf9c:	71fb      	strb	r3, [r7, #7]
 800cf9e:	2300      	movs	r3, #0
 800cfa0:	60fb      	str	r3, [r7, #12]
 800cfa2:	79fb      	ldrb	r3, [r7, #7]
 800cfa4:	72fb      	strb	r3, [r7, #11]
 800cfa6:	e005      	b.n	800cfb4 <RTC_ByteToBcd2+0x20>
 800cfa8:	68fb      	ldr	r3, [r7, #12]
 800cfaa:	3301      	adds	r3, #1
 800cfac:	60fb      	str	r3, [r7, #12]
 800cfae:	7afb      	ldrb	r3, [r7, #11]
 800cfb0:	3b0a      	subs	r3, #10
 800cfb2:	72fb      	strb	r3, [r7, #11]
 800cfb4:	7afb      	ldrb	r3, [r7, #11]
 800cfb6:	2b09      	cmp	r3, #9
 800cfb8:	d8f6      	bhi.n	800cfa8 <RTC_ByteToBcd2+0x14>
 800cfba:	68fb      	ldr	r3, [r7, #12]
 800cfbc:	b2db      	uxtb	r3, r3
 800cfbe:	011b      	lsls	r3, r3, #4
 800cfc0:	b2da      	uxtb	r2, r3
 800cfc2:	7afb      	ldrb	r3, [r7, #11]
 800cfc4:	4313      	orrs	r3, r2
 800cfc6:	b2db      	uxtb	r3, r3
 800cfc8:	4618      	mov	r0, r3
 800cfca:	3714      	adds	r7, #20
 800cfcc:	46bd      	mov	sp, r7
 800cfce:	bc80      	pop	{r7}
 800cfd0:	4770      	bx	lr
	...

0800cfd4 <HAL_RTCEx_EnableBypassShadow>:
 800cfd4:	b480      	push	{r7}
 800cfd6:	b083      	sub	sp, #12
 800cfd8:	af00      	add	r7, sp, #0
 800cfda:	6078      	str	r0, [r7, #4]
 800cfdc:	687b      	ldr	r3, [r7, #4]
 800cfde:	f893 302c 	ldrb.w	r3, [r3, #44]	; 0x2c
 800cfe2:	2b01      	cmp	r3, #1
 800cfe4:	d101      	bne.n	800cfea <HAL_RTCEx_EnableBypassShadow+0x16>
 800cfe6:	2302      	movs	r3, #2
 800cfe8:	e01f      	b.n	800d02a <HAL_RTCEx_EnableBypassShadow+0x56>
 800cfea:	687b      	ldr	r3, [r7, #4]
 800cfec:	2201      	movs	r2, #1
 800cfee:	f883 202c 	strb.w	r2, [r3, #44]	; 0x2c
 800cff2:	687b      	ldr	r3, [r7, #4]
 800cff4:	2202      	movs	r2, #2
 800cff6:	f883 202d 	strb.w	r2, [r3, #45]	; 0x2d
 800cffa:	4b0e      	ldr	r3, [pc, #56]	; (800d034 <HAL_RTCEx_EnableBypassShadow+0x60>)
 800cffc:	22ca      	movs	r2, #202	; 0xca
 800cffe:	625a      	str	r2, [r3, #36]	; 0x24
 800d000:	4b0c      	ldr	r3, [pc, #48]	; (800d034 <HAL_RTCEx_EnableBypassShadow+0x60>)
 800d002:	2253      	movs	r2, #83	; 0x53
 800d004:	625a      	str	r2, [r3, #36]	; 0x24
 800d006:	4b0b      	ldr	r3, [pc, #44]	; (800d034 <HAL_RTCEx_EnableBypassShadow+0x60>)
 800d008:	699b      	ldr	r3, [r3, #24]
 800d00a:	4a0a      	ldr	r2, [pc, #40]	; (800d034 <HAL_RTCEx_EnableBypassShadow+0x60>)
 800d00c:	f043 0320 	orr.w	r3, r3, #32
 800d010:	6193      	str	r3, [r2, #24]
 800d012:	4b08      	ldr	r3, [pc, #32]	; (800d034 <HAL_RTCEx_EnableBypassShadow+0x60>)
 800d014:	22ff      	movs	r2, #255	; 0xff
 800d016:	625a      	str	r2, [r3, #36]	; 0x24
 800d018:	687b      	ldr	r3, [r7, #4]
 800d01a:	2201      	movs	r2, #1
 800d01c:	f883 202d 	strb.w	r2, [r3, #45]	; 0x2d
 800d020:	687b      	ldr	r3, [r7, #4]
 800d022:	2200      	movs	r2, #0
 800d024:	f883 202c 	strb.w	r2, [r3, #44]	; 0x2c
 800d028:	2300      	movs	r3, #0
 800d02a:	4618      	mov	r0, r3
 800d02c:	370c      	adds	r7, #12
 800d02e:	46bd      	mov	sp, r7
 800d030:	bc80      	pop	{r7}
 800d032:	4770      	bx	lr
 800d034:	40002800 	.word	0x40002800

0800d038 <HAL_RTCEx_SetSSRU_IT>:
 800d038:	b480      	push	{r7}
 800d03a:	b083      	sub	sp, #12
 800d03c:	af00      	add	r7, sp, #0
 800d03e:	6078      	str	r0, [r7, #4]
 800d040:	687b      	ldr	r3, [r7, #4]
 800d042:	f893 302c 	ldrb.w	r3, [r3, #44]	; 0x2c
 800d046:	2b01      	cmp	r3, #1
 800d048:	d101      	bne.n	800d04e <HAL_RTCEx_SetSSRU_IT+0x16>
 800d04a:	2302      	movs	r3, #2
 800d04c:	e027      	b.n	800d09e <HAL_RTCEx_SetSSRU_IT+0x66>
 800d04e:	687b      	ldr	r3, [r7, #4]
 800d050:	2201      	movs	r2, #1
 800d052:	f883 202c 	strb.w	r2, [r3, #44]	; 0x2c
 800d056:	687b      	ldr	r3, [r7, #4]
 800d058:	2202      	movs	r2, #2
 800d05a:	f883 202d 	strb.w	r2, [r3, #45]	; 0x2d
 800d05e:	4b12      	ldr	r3, [pc, #72]	; (800d0a8 <HAL_RTCEx_SetSSRU_IT+0x70>)
 800d060:	22ca      	movs	r2, #202	; 0xca
 800d062:	625a      	str	r2, [r3, #36]	; 0x24
 800d064:	4b10      	ldr	r3, [pc, #64]	; (800d0a8 <HAL_RTCEx_SetSSRU_IT+0x70>)
 800d066:	2253      	movs	r2, #83	; 0x53
 800d068:	625a      	str	r2, [r3, #36]	; 0x24
 800d06a:	4b0f      	ldr	r3, [pc, #60]	; (800d0a8 <HAL_RTCEx_SetSSRU_IT+0x70>)
 800d06c:	699b      	ldr	r3, [r3, #24]
 800d06e:	4a0e      	ldr	r2, [pc, #56]	; (800d0a8 <HAL_RTCEx_SetSSRU_IT+0x70>)
 800d070:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800d074:	6193      	str	r3, [r2, #24]
 800d076:	4b0d      	ldr	r3, [pc, #52]	; (800d0ac <HAL_RTCEx_SetSSRU_IT+0x74>)
 800d078:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800d07c:	4a0b      	ldr	r2, [pc, #44]	; (800d0ac <HAL_RTCEx_SetSSRU_IT+0x74>)
 800d07e:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 800d082:	f8c2 3080 	str.w	r3, [r2, #128]	; 0x80
 800d086:	4b08      	ldr	r3, [pc, #32]	; (800d0a8 <HAL_RTCEx_SetSSRU_IT+0x70>)
 800d088:	22ff      	movs	r2, #255	; 0xff
 800d08a:	625a      	str	r2, [r3, #36]	; 0x24
 800d08c:	687b      	ldr	r3, [r7, #4]
 800d08e:	2201      	movs	r2, #1
 800d090:	f883 202d 	strb.w	r2, [r3, #45]	; 0x2d
 800d094:	687b      	ldr	r3, [r7, #4]
 800d096:	2200      	movs	r2, #0
 800d098:	f883 202c 	strb.w	r2, [r3, #44]	; 0x2c
 800d09c:	2300      	movs	r3, #0
 800d09e:	4618      	mov	r0, r3
 800d0a0:	370c      	adds	r7, #12
 800d0a2:	46bd      	mov	sp, r7
 800d0a4:	bc80      	pop	{r7}
 800d0a6:	4770      	bx	lr
 800d0a8:	40002800 	.word	0x40002800
 800d0ac:	58000800 	.word	0x58000800

0800d0b0 <HAL_RTCEx_SSRUIRQHandler>:
 800d0b0:	b580      	push	{r7, lr}
 800d0b2:	b082      	sub	sp, #8
 800d0b4:	af00      	add	r7, sp, #0
 800d0b6:	6078      	str	r0, [r7, #4]
 800d0b8:	4b09      	ldr	r3, [pc, #36]	; (800d0e0 <HAL_RTCEx_SSRUIRQHandler+0x30>)
 800d0ba:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800d0bc:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800d0c0:	2b00      	cmp	r3, #0
 800d0c2:	d005      	beq.n	800d0d0 <HAL_RTCEx_SSRUIRQHandler+0x20>
 800d0c4:	4b06      	ldr	r3, [pc, #24]	; (800d0e0 <HAL_RTCEx_SSRUIRQHandler+0x30>)
 800d0c6:	2240      	movs	r2, #64	; 0x40
 800d0c8:	65da      	str	r2, [r3, #92]	; 0x5c
 800d0ca:	6878      	ldr	r0, [r7, #4]
 800d0cc:	f7f9 fd0a 	bl	8006ae4 <HAL_RTCEx_SSRUEventCallback>
 800d0d0:	687b      	ldr	r3, [r7, #4]
 800d0d2:	2201      	movs	r2, #1
 800d0d4:	f883 202d 	strb.w	r2, [r3, #45]	; 0x2d
 800d0d8:	bf00      	nop
 800d0da:	3708      	adds	r7, #8
 800d0dc:	46bd      	mov	sp, r7
 800d0de:	bd80      	pop	{r7, pc}
 800d0e0:	40002800 	.word	0x40002800

0800d0e4 <HAL_RTCEx_AlarmBEventCallback>:
 800d0e4:	b480      	push	{r7}
 800d0e6:	b083      	sub	sp, #12
 800d0e8:	af00      	add	r7, sp, #0
 800d0ea:	6078      	str	r0, [r7, #4]
 800d0ec:	bf00      	nop
 800d0ee:	370c      	adds	r7, #12
 800d0f0:	46bd      	mov	sp, r7
 800d0f2:	bc80      	pop	{r7}
 800d0f4:	4770      	bx	lr
	...

0800d0f8 <HAL_RTCEx_BKUPWrite>:
 800d0f8:	b480      	push	{r7}
 800d0fa:	b087      	sub	sp, #28
 800d0fc:	af00      	add	r7, sp, #0
 800d0fe:	60f8      	str	r0, [r7, #12]
 800d100:	60b9      	str	r1, [r7, #8]
 800d102:	607a      	str	r2, [r7, #4]
 800d104:	4b07      	ldr	r3, [pc, #28]	; (800d124 <HAL_RTCEx_BKUPWrite+0x2c>)
 800d106:	617b      	str	r3, [r7, #20]
 800d108:	68bb      	ldr	r3, [r7, #8]
 800d10a:	009b      	lsls	r3, r3, #2
 800d10c:	697a      	ldr	r2, [r7, #20]
 800d10e:	4413      	add	r3, r2
 800d110:	617b      	str	r3, [r7, #20]
 800d112:	697b      	ldr	r3, [r7, #20]
 800d114:	687a      	ldr	r2, [r7, #4]
 800d116:	601a      	str	r2, [r3, #0]
 800d118:	bf00      	nop
 800d11a:	371c      	adds	r7, #28
 800d11c:	46bd      	mov	sp, r7
 800d11e:	bc80      	pop	{r7}
 800d120:	4770      	bx	lr
 800d122:	bf00      	nop
 800d124:	4000b100 	.word	0x4000b100

0800d128 <HAL_RTCEx_BKUPRead>:
 800d128:	b480      	push	{r7}
 800d12a:	b085      	sub	sp, #20
 800d12c:	af00      	add	r7, sp, #0
 800d12e:	6078      	str	r0, [r7, #4]
 800d130:	6039      	str	r1, [r7, #0]
 800d132:	4b07      	ldr	r3, [pc, #28]	; (800d150 <HAL_RTCEx_BKUPRead+0x28>)
 800d134:	60fb      	str	r3, [r7, #12]
 800d136:	683b      	ldr	r3, [r7, #0]
 800d138:	009b      	lsls	r3, r3, #2
 800d13a:	68fa      	ldr	r2, [r7, #12]
 800d13c:	4413      	add	r3, r2
 800d13e:	60fb      	str	r3, [r7, #12]
 800d140:	68fb      	ldr	r3, [r7, #12]
 800d142:	681b      	ldr	r3, [r3, #0]
 800d144:	4618      	mov	r0, r3
 800d146:	3714      	adds	r7, #20
 800d148:	46bd      	mov	sp, r7
 800d14a:	bc80      	pop	{r7}
 800d14c:	4770      	bx	lr
 800d14e:	bf00      	nop
 800d150:	4000b100 	.word	0x4000b100

0800d154 <LL_PWR_SetRadioBusyTrigger>:
 800d154:	b480      	push	{r7}
 800d156:	b083      	sub	sp, #12
 800d158:	af00      	add	r7, sp, #0
 800d15a:	6078      	str	r0, [r7, #4]
 800d15c:	4b06      	ldr	r3, [pc, #24]	; (800d178 <LL_PWR_SetRadioBusyTrigger+0x24>)
 800d15e:	689b      	ldr	r3, [r3, #8]
 800d160:	f423 6200 	bic.w	r2, r3, #2048	; 0x800
 800d164:	4904      	ldr	r1, [pc, #16]	; (800d178 <LL_PWR_SetRadioBusyTrigger+0x24>)
 800d166:	687b      	ldr	r3, [r7, #4]
 800d168:	4313      	orrs	r3, r2
 800d16a:	608b      	str	r3, [r1, #8]
 800d16c:	bf00      	nop
 800d16e:	370c      	adds	r7, #12
 800d170:	46bd      	mov	sp, r7
 800d172:	bc80      	pop	{r7}
 800d174:	4770      	bx	lr
 800d176:	bf00      	nop
 800d178:	58000400 	.word	0x58000400

0800d17c <LL_PWR_UnselectSUBGHZSPI_NSS>:
 800d17c:	b480      	push	{r7}
 800d17e:	af00      	add	r7, sp, #0
 800d180:	4b05      	ldr	r3, [pc, #20]	; (800d198 <LL_PWR_UnselectSUBGHZSPI_NSS+0x1c>)
 800d182:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800d186:	4a04      	ldr	r2, [pc, #16]	; (800d198 <LL_PWR_UnselectSUBGHZSPI_NSS+0x1c>)
 800d188:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 800d18c:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
 800d190:	bf00      	nop
 800d192:	46bd      	mov	sp, r7
 800d194:	bc80      	pop	{r7}
 800d196:	4770      	bx	lr
 800d198:	58000400 	.word	0x58000400

0800d19c <LL_PWR_SelectSUBGHZSPI_NSS>:
 800d19c:	b480      	push	{r7}
 800d19e:	af00      	add	r7, sp, #0
 800d1a0:	4b05      	ldr	r3, [pc, #20]	; (800d1b8 <LL_PWR_SelectSUBGHZSPI_NSS+0x1c>)
 800d1a2:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800d1a6:	4a04      	ldr	r2, [pc, #16]	; (800d1b8 <LL_PWR_SelectSUBGHZSPI_NSS+0x1c>)
 800d1a8:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 800d1ac:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
 800d1b0:	bf00      	nop
 800d1b2:	46bd      	mov	sp, r7
 800d1b4:	bc80      	pop	{r7}
 800d1b6:	4770      	bx	lr
 800d1b8:	58000400 	.word	0x58000400

0800d1bc <LL_PWR_ClearFlag_RFBUSY>:
 800d1bc:	b480      	push	{r7}
 800d1be:	af00      	add	r7, sp, #0
 800d1c0:	4b03      	ldr	r3, [pc, #12]	; (800d1d0 <LL_PWR_ClearFlag_RFBUSY+0x14>)
 800d1c2:	f44f 6200 	mov.w	r2, #2048	; 0x800
 800d1c6:	619a      	str	r2, [r3, #24]
 800d1c8:	bf00      	nop
 800d1ca:	46bd      	mov	sp, r7
 800d1cc:	bc80      	pop	{r7}
 800d1ce:	4770      	bx	lr
 800d1d0:	58000400 	.word	0x58000400

0800d1d4 <LL_PWR_IsActiveFlag_RFBUSYS>:
 800d1d4:	b480      	push	{r7}
 800d1d6:	af00      	add	r7, sp, #0
 800d1d8:	4b06      	ldr	r3, [pc, #24]	; (800d1f4 <LL_PWR_IsActiveFlag_RFBUSYS+0x20>)
 800d1da:	695b      	ldr	r3, [r3, #20]
 800d1dc:	f003 0302 	and.w	r3, r3, #2
 800d1e0:	2b02      	cmp	r3, #2
 800d1e2:	d101      	bne.n	800d1e8 <LL_PWR_IsActiveFlag_RFBUSYS+0x14>
 800d1e4:	2301      	movs	r3, #1
 800d1e6:	e000      	b.n	800d1ea <LL_PWR_IsActiveFlag_RFBUSYS+0x16>
 800d1e8:	2300      	movs	r3, #0
 800d1ea:	4618      	mov	r0, r3
 800d1ec:	46bd      	mov	sp, r7
 800d1ee:	bc80      	pop	{r7}
 800d1f0:	4770      	bx	lr
 800d1f2:	bf00      	nop
 800d1f4:	58000400 	.word	0x58000400

0800d1f8 <LL_PWR_IsActiveFlag_RFBUSYMS>:
 800d1f8:	b480      	push	{r7}
 800d1fa:	af00      	add	r7, sp, #0
 800d1fc:	4b06      	ldr	r3, [pc, #24]	; (800d218 <LL_PWR_IsActiveFlag_RFBUSYMS+0x20>)
 800d1fe:	695b      	ldr	r3, [r3, #20]
 800d200:	f003 0304 	and.w	r3, r3, #4
 800d204:	2b04      	cmp	r3, #4
 800d206:	d101      	bne.n	800d20c <LL_PWR_IsActiveFlag_RFBUSYMS+0x14>
 800d208:	2301      	movs	r3, #1
 800d20a:	e000      	b.n	800d20e <LL_PWR_IsActiveFlag_RFBUSYMS+0x16>
 800d20c:	2300      	movs	r3, #0
 800d20e:	4618      	mov	r0, r3
 800d210:	46bd      	mov	sp, r7
 800d212:	bc80      	pop	{r7}
 800d214:	4770      	bx	lr
 800d216:	bf00      	nop
 800d218:	58000400 	.word	0x58000400

0800d21c <LL_RCC_RF_DisableReset>:
 800d21c:	b480      	push	{r7}
 800d21e:	af00      	add	r7, sp, #0
 800d220:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 800d224:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 800d228:	f04f 42b0 	mov.w	r2, #1476395008	; 0x58000000
 800d22c:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 800d230:	f8c2 3094 	str.w	r3, [r2, #148]	; 0x94
 800d234:	bf00      	nop
 800d236:	46bd      	mov	sp, r7
 800d238:	bc80      	pop	{r7}
 800d23a:	4770      	bx	lr

0800d23c <LL_RCC_IsRFUnderReset>:
 800d23c:	b480      	push	{r7}
 800d23e:	af00      	add	r7, sp, #0
 800d240:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 800d244:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 800d248:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 800d24c:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 800d250:	d101      	bne.n	800d256 <LL_RCC_IsRFUnderReset+0x1a>
 800d252:	2301      	movs	r3, #1
 800d254:	e000      	b.n	800d258 <LL_RCC_IsRFUnderReset+0x1c>
 800d256:	2300      	movs	r3, #0
 800d258:	4618      	mov	r0, r3
 800d25a:	46bd      	mov	sp, r7
 800d25c:	bc80      	pop	{r7}
 800d25e:	4770      	bx	lr

0800d260 <LL_EXTI_EnableIT_32_63>:
 800d260:	b480      	push	{r7}
 800d262:	b083      	sub	sp, #12
 800d264:	af00      	add	r7, sp, #0
 800d266:	6078      	str	r0, [r7, #4]
 800d268:	4b06      	ldr	r3, [pc, #24]	; (800d284 <LL_EXTI_EnableIT_32_63+0x24>)
 800d26a:	f8d3 2090 	ldr.w	r2, [r3, #144]	; 0x90
 800d26e:	4905      	ldr	r1, [pc, #20]	; (800d284 <LL_EXTI_EnableIT_32_63+0x24>)
 800d270:	687b      	ldr	r3, [r7, #4]
 800d272:	4313      	orrs	r3, r2
 800d274:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 800d278:	bf00      	nop
 800d27a:	370c      	adds	r7, #12
 800d27c:	46bd      	mov	sp, r7
 800d27e:	bc80      	pop	{r7}
 800d280:	4770      	bx	lr
 800d282:	bf00      	nop
 800d284:	58000800 	.word	0x58000800

0800d288 <HAL_SUBGHZ_Init>:
 800d288:	b580      	push	{r7, lr}
 800d28a:	b084      	sub	sp, #16
 800d28c:	af00      	add	r7, sp, #0
 800d28e:	6078      	str	r0, [r7, #4]
 800d290:	687b      	ldr	r3, [r7, #4]
 800d292:	2b00      	cmp	r3, #0
 800d294:	d103      	bne.n	800d29e <HAL_SUBGHZ_Init+0x16>
 800d296:	2301      	movs	r3, #1
 800d298:	73fb      	strb	r3, [r7, #15]
 800d29a:	7bfb      	ldrb	r3, [r7, #15]
 800d29c:	e04b      	b.n	800d336 <HAL_SUBGHZ_Init+0xae>
 800d29e:	2300      	movs	r3, #0
 800d2a0:	73fb      	strb	r3, [r7, #15]
 800d2a2:	687b      	ldr	r3, [r7, #4]
 800d2a4:	799b      	ldrb	r3, [r3, #6]
 800d2a6:	b2db      	uxtb	r3, r3
 800d2a8:	2b00      	cmp	r3, #0
 800d2aa:	d105      	bne.n	800d2b8 <HAL_SUBGHZ_Init+0x30>
 800d2ac:	687b      	ldr	r3, [r7, #4]
 800d2ae:	2200      	movs	r2, #0
 800d2b0:	715a      	strb	r2, [r3, #5]
 800d2b2:	6878      	ldr	r0, [r7, #4]
 800d2b4:	f7f8 fe62 	bl	8005f7c <HAL_SUBGHZ_MspInit>
 800d2b8:	687b      	ldr	r3, [r7, #4]
 800d2ba:	2202      	movs	r2, #2
 800d2bc:	719a      	strb	r2, [r3, #6]
 800d2be:	f7ff ffad 	bl	800d21c <LL_RCC_RF_DisableReset>
 800d2c2:	4b1f      	ldr	r3, [pc, #124]	; (800d340 <HAL_SUBGHZ_Init+0xb8>)
 800d2c4:	681a      	ldr	r2, [r3, #0]
 800d2c6:	4613      	mov	r3, r2
 800d2c8:	00db      	lsls	r3, r3, #3
 800d2ca:	1a9b      	subs	r3, r3, r2
 800d2cc:	009b      	lsls	r3, r3, #2
 800d2ce:	0cdb      	lsrs	r3, r3, #19
 800d2d0:	2264      	movs	r2, #100	; 0x64
 800d2d2:	fb02 f303 	mul.w	r3, r2, r3
 800d2d6:	60bb      	str	r3, [r7, #8]
 800d2d8:	68bb      	ldr	r3, [r7, #8]
 800d2da:	2b00      	cmp	r3, #0
 800d2dc:	d105      	bne.n	800d2ea <HAL_SUBGHZ_Init+0x62>
 800d2de:	2301      	movs	r3, #1
 800d2e0:	73fb      	strb	r3, [r7, #15]
 800d2e2:	687b      	ldr	r3, [r7, #4]
 800d2e4:	2201      	movs	r2, #1
 800d2e6:	609a      	str	r2, [r3, #8]
 800d2e8:	e007      	b.n	800d2fa <HAL_SUBGHZ_Init+0x72>
 800d2ea:	68bb      	ldr	r3, [r7, #8]
 800d2ec:	3b01      	subs	r3, #1
 800d2ee:	60bb      	str	r3, [r7, #8]
 800d2f0:	f7ff ffa4 	bl	800d23c <LL_RCC_IsRFUnderReset>
 800d2f4:	4603      	mov	r3, r0
 800d2f6:	2b00      	cmp	r3, #0
 800d2f8:	d1ee      	bne.n	800d2d8 <HAL_SUBGHZ_Init+0x50>
 800d2fa:	f7ff ff3f 	bl	800d17c <LL_PWR_UnselectSUBGHZSPI_NSS>
 800d2fe:	f44f 5080 	mov.w	r0, #4096	; 0x1000
 800d302:	f7ff ffad 	bl	800d260 <LL_EXTI_EnableIT_32_63>
 800d306:	f44f 6000 	mov.w	r0, #2048	; 0x800
 800d30a:	f7ff ff23 	bl	800d154 <LL_PWR_SetRadioBusyTrigger>
 800d30e:	f7ff ff55 	bl	800d1bc <LL_PWR_ClearFlag_RFBUSY>
 800d312:	7bfb      	ldrb	r3, [r7, #15]
 800d314:	2b00      	cmp	r3, #0
 800d316:	d10a      	bne.n	800d32e <HAL_SUBGHZ_Init+0xa6>
 800d318:	687b      	ldr	r3, [r7, #4]
 800d31a:	681b      	ldr	r3, [r3, #0]
 800d31c:	4618      	mov	r0, r3
 800d31e:	f000 faad 	bl	800d87c <SUBGHZSPI_Init>
 800d322:	687b      	ldr	r3, [r7, #4]
 800d324:	2201      	movs	r2, #1
 800d326:	711a      	strb	r2, [r3, #4]
 800d328:	687b      	ldr	r3, [r7, #4]
 800d32a:	2200      	movs	r2, #0
 800d32c:	609a      	str	r2, [r3, #8]
 800d32e:	687b      	ldr	r3, [r7, #4]
 800d330:	2201      	movs	r2, #1
 800d332:	719a      	strb	r2, [r3, #6]
 800d334:	7bfb      	ldrb	r3, [r7, #15]
 800d336:	4618      	mov	r0, r3
 800d338:	3710      	adds	r7, #16
 800d33a:	46bd      	mov	sp, r7
 800d33c:	bd80      	pop	{r7, pc}
 800d33e:	bf00      	nop
 800d340:	2000003c 	.word	0x2000003c

0800d344 <HAL_SUBGHZ_WriteRegisters>:
 800d344:	b580      	push	{r7, lr}
 800d346:	b086      	sub	sp, #24
 800d348:	af00      	add	r7, sp, #0
 800d34a:	60f8      	str	r0, [r7, #12]
 800d34c:	607a      	str	r2, [r7, #4]
 800d34e:	461a      	mov	r2, r3
 800d350:	460b      	mov	r3, r1
 800d352:	817b      	strh	r3, [r7, #10]
 800d354:	4613      	mov	r3, r2
 800d356:	813b      	strh	r3, [r7, #8]
 800d358:	68fb      	ldr	r3, [r7, #12]
 800d35a:	799b      	ldrb	r3, [r3, #6]
 800d35c:	b2db      	uxtb	r3, r3
 800d35e:	2b01      	cmp	r3, #1
 800d360:	d14a      	bne.n	800d3f8 <HAL_SUBGHZ_WriteRegisters+0xb4>
 800d362:	68fb      	ldr	r3, [r7, #12]
 800d364:	795b      	ldrb	r3, [r3, #5]
 800d366:	2b01      	cmp	r3, #1
 800d368:	d101      	bne.n	800d36e <HAL_SUBGHZ_WriteRegisters+0x2a>
 800d36a:	2302      	movs	r3, #2
 800d36c:	e045      	b.n	800d3fa <HAL_SUBGHZ_WriteRegisters+0xb6>
 800d36e:	68fb      	ldr	r3, [r7, #12]
 800d370:	2201      	movs	r2, #1
 800d372:	715a      	strb	r2, [r3, #5]
 800d374:	68fb      	ldr	r3, [r7, #12]
 800d376:	2202      	movs	r2, #2
 800d378:	719a      	strb	r2, [r3, #6]
 800d37a:	68f8      	ldr	r0, [r7, #12]
 800d37c:	f000 fb4c 	bl	800da18 <SUBGHZ_CheckDeviceReady>
 800d380:	f7ff ff0c 	bl	800d19c <LL_PWR_SelectSUBGHZSPI_NSS>
 800d384:	210d      	movs	r1, #13
 800d386:	68f8      	ldr	r0, [r7, #12]
 800d388:	f000 fa98 	bl	800d8bc <SUBGHZSPI_Transmit>
 800d38c:	897b      	ldrh	r3, [r7, #10]
 800d38e:	0a1b      	lsrs	r3, r3, #8
 800d390:	b29b      	uxth	r3, r3
 800d392:	b2db      	uxtb	r3, r3
 800d394:	4619      	mov	r1, r3
 800d396:	68f8      	ldr	r0, [r7, #12]
 800d398:	f000 fa90 	bl	800d8bc <SUBGHZSPI_Transmit>
 800d39c:	897b      	ldrh	r3, [r7, #10]
 800d39e:	b2db      	uxtb	r3, r3
 800d3a0:	4619      	mov	r1, r3
 800d3a2:	68f8      	ldr	r0, [r7, #12]
 800d3a4:	f000 fa8a 	bl	800d8bc <SUBGHZSPI_Transmit>
 800d3a8:	2300      	movs	r3, #0
 800d3aa:	82bb      	strh	r3, [r7, #20]
 800d3ac:	e00a      	b.n	800d3c4 <HAL_SUBGHZ_WriteRegisters+0x80>
 800d3ae:	8abb      	ldrh	r3, [r7, #20]
 800d3b0:	687a      	ldr	r2, [r7, #4]
 800d3b2:	4413      	add	r3, r2
 800d3b4:	781b      	ldrb	r3, [r3, #0]
 800d3b6:	4619      	mov	r1, r3
 800d3b8:	68f8      	ldr	r0, [r7, #12]
 800d3ba:	f000 fa7f 	bl	800d8bc <SUBGHZSPI_Transmit>
 800d3be:	8abb      	ldrh	r3, [r7, #20]
 800d3c0:	3301      	adds	r3, #1
 800d3c2:	82bb      	strh	r3, [r7, #20]
 800d3c4:	8aba      	ldrh	r2, [r7, #20]
 800d3c6:	893b      	ldrh	r3, [r7, #8]
 800d3c8:	429a      	cmp	r2, r3
 800d3ca:	d3f0      	bcc.n	800d3ae <HAL_SUBGHZ_WriteRegisters+0x6a>
 800d3cc:	f7ff fed6 	bl	800d17c <LL_PWR_UnselectSUBGHZSPI_NSS>
 800d3d0:	68f8      	ldr	r0, [r7, #12]
 800d3d2:	f000 fb39 	bl	800da48 <SUBGHZ_WaitOnBusy>
 800d3d6:	68fb      	ldr	r3, [r7, #12]
 800d3d8:	689b      	ldr	r3, [r3, #8]
 800d3da:	2b00      	cmp	r3, #0
 800d3dc:	d002      	beq.n	800d3e4 <HAL_SUBGHZ_WriteRegisters+0xa0>
 800d3de:	2301      	movs	r3, #1
 800d3e0:	75fb      	strb	r3, [r7, #23]
 800d3e2:	e001      	b.n	800d3e8 <HAL_SUBGHZ_WriteRegisters+0xa4>
 800d3e4:	2300      	movs	r3, #0
 800d3e6:	75fb      	strb	r3, [r7, #23]
 800d3e8:	68fb      	ldr	r3, [r7, #12]
 800d3ea:	2201      	movs	r2, #1
 800d3ec:	719a      	strb	r2, [r3, #6]
 800d3ee:	68fb      	ldr	r3, [r7, #12]
 800d3f0:	2200      	movs	r2, #0
 800d3f2:	715a      	strb	r2, [r3, #5]
 800d3f4:	7dfb      	ldrb	r3, [r7, #23]
 800d3f6:	e000      	b.n	800d3fa <HAL_SUBGHZ_WriteRegisters+0xb6>
 800d3f8:	2302      	movs	r3, #2
 800d3fa:	4618      	mov	r0, r3
 800d3fc:	3718      	adds	r7, #24
 800d3fe:	46bd      	mov	sp, r7
 800d400:	bd80      	pop	{r7, pc}

0800d402 <HAL_SUBGHZ_ReadRegisters>:
 800d402:	b580      	push	{r7, lr}
 800d404:	b088      	sub	sp, #32
 800d406:	af00      	add	r7, sp, #0
 800d408:	60f8      	str	r0, [r7, #12]
 800d40a:	607a      	str	r2, [r7, #4]
 800d40c:	461a      	mov	r2, r3
 800d40e:	460b      	mov	r3, r1
 800d410:	817b      	strh	r3, [r7, #10]
 800d412:	4613      	mov	r3, r2
 800d414:	813b      	strh	r3, [r7, #8]
 800d416:	687b      	ldr	r3, [r7, #4]
 800d418:	61bb      	str	r3, [r7, #24]
 800d41a:	68fb      	ldr	r3, [r7, #12]
 800d41c:	799b      	ldrb	r3, [r3, #6]
 800d41e:	b2db      	uxtb	r3, r3
 800d420:	2b01      	cmp	r3, #1
 800d422:	d14a      	bne.n	800d4ba <HAL_SUBGHZ_ReadRegisters+0xb8>
 800d424:	68fb      	ldr	r3, [r7, #12]
 800d426:	795b      	ldrb	r3, [r3, #5]
 800d428:	2b01      	cmp	r3, #1
 800d42a:	d101      	bne.n	800d430 <HAL_SUBGHZ_ReadRegisters+0x2e>
 800d42c:	2302      	movs	r3, #2
 800d42e:	e045      	b.n	800d4bc <HAL_SUBGHZ_ReadRegisters+0xba>
 800d430:	68fb      	ldr	r3, [r7, #12]
 800d432:	2201      	movs	r2, #1
 800d434:	715a      	strb	r2, [r3, #5]
 800d436:	68f8      	ldr	r0, [r7, #12]
 800d438:	f000 faee 	bl	800da18 <SUBGHZ_CheckDeviceReady>
 800d43c:	f7ff feae 	bl	800d19c <LL_PWR_SelectSUBGHZSPI_NSS>
 800d440:	211d      	movs	r1, #29
 800d442:	68f8      	ldr	r0, [r7, #12]
 800d444:	f000 fa3a 	bl	800d8bc <SUBGHZSPI_Transmit>
 800d448:	897b      	ldrh	r3, [r7, #10]
 800d44a:	0a1b      	lsrs	r3, r3, #8
 800d44c:	b29b      	uxth	r3, r3
 800d44e:	b2db      	uxtb	r3, r3
 800d450:	4619      	mov	r1, r3
 800d452:	68f8      	ldr	r0, [r7, #12]
 800d454:	f000 fa32 	bl	800d8bc <SUBGHZSPI_Transmit>
 800d458:	897b      	ldrh	r3, [r7, #10]
 800d45a:	b2db      	uxtb	r3, r3
 800d45c:	4619      	mov	r1, r3
 800d45e:	68f8      	ldr	r0, [r7, #12]
 800d460:	f000 fa2c 	bl	800d8bc <SUBGHZSPI_Transmit>
 800d464:	2100      	movs	r1, #0
 800d466:	68f8      	ldr	r0, [r7, #12]
 800d468:	f000 fa28 	bl	800d8bc <SUBGHZSPI_Transmit>
 800d46c:	2300      	movs	r3, #0
 800d46e:	82fb      	strh	r3, [r7, #22]
 800d470:	e009      	b.n	800d486 <HAL_SUBGHZ_ReadRegisters+0x84>
 800d472:	69b9      	ldr	r1, [r7, #24]
 800d474:	68f8      	ldr	r0, [r7, #12]
 800d476:	f000 fa77 	bl	800d968 <SUBGHZSPI_Receive>
 800d47a:	69bb      	ldr	r3, [r7, #24]
 800d47c:	3301      	adds	r3, #1
 800d47e:	61bb      	str	r3, [r7, #24]
 800d480:	8afb      	ldrh	r3, [r7, #22]
 800d482:	3301      	adds	r3, #1
 800d484:	82fb      	strh	r3, [r7, #22]
 800d486:	8afa      	ldrh	r2, [r7, #22]
 800d488:	893b      	ldrh	r3, [r7, #8]
 800d48a:	429a      	cmp	r2, r3
 800d48c:	d3f1      	bcc.n	800d472 <HAL_SUBGHZ_ReadRegisters+0x70>
 800d48e:	f7ff fe75 	bl	800d17c <LL_PWR_UnselectSUBGHZSPI_NSS>
 800d492:	68f8      	ldr	r0, [r7, #12]
 800d494:	f000 fad8 	bl	800da48 <SUBGHZ_WaitOnBusy>
 800d498:	68fb      	ldr	r3, [r7, #12]
 800d49a:	689b      	ldr	r3, [r3, #8]
 800d49c:	2b00      	cmp	r3, #0
 800d49e:	d002      	beq.n	800d4a6 <HAL_SUBGHZ_ReadRegisters+0xa4>
 800d4a0:	2301      	movs	r3, #1
 800d4a2:	77fb      	strb	r3, [r7, #31]
 800d4a4:	e001      	b.n	800d4aa <HAL_SUBGHZ_ReadRegisters+0xa8>
 800d4a6:	2300      	movs	r3, #0
 800d4a8:	77fb      	strb	r3, [r7, #31]
 800d4aa:	68fb      	ldr	r3, [r7, #12]
 800d4ac:	2201      	movs	r2, #1
 800d4ae:	719a      	strb	r2, [r3, #6]
 800d4b0:	68fb      	ldr	r3, [r7, #12]
 800d4b2:	2200      	movs	r2, #0
 800d4b4:	715a      	strb	r2, [r3, #5]
 800d4b6:	7ffb      	ldrb	r3, [r7, #31]
 800d4b8:	e000      	b.n	800d4bc <HAL_SUBGHZ_ReadRegisters+0xba>
 800d4ba:	2302      	movs	r3, #2
 800d4bc:	4618      	mov	r0, r3
 800d4be:	3720      	adds	r7, #32
 800d4c0:	46bd      	mov	sp, r7
 800d4c2:	bd80      	pop	{r7, pc}

0800d4c4 <HAL_SUBGHZ_ExecSetCmd>:
 800d4c4:	b580      	push	{r7, lr}
 800d4c6:	b086      	sub	sp, #24
 800d4c8:	af00      	add	r7, sp, #0
 800d4ca:	60f8      	str	r0, [r7, #12]
 800d4cc:	607a      	str	r2, [r7, #4]
 800d4ce:	461a      	mov	r2, r3
 800d4d0:	460b      	mov	r3, r1
 800d4d2:	72fb      	strb	r3, [r7, #11]
 800d4d4:	4613      	mov	r3, r2
 800d4d6:	813b      	strh	r3, [r7, #8]
 800d4d8:	68fb      	ldr	r3, [r7, #12]
 800d4da:	799b      	ldrb	r3, [r3, #6]
 800d4dc:	b2db      	uxtb	r3, r3
 800d4de:	2b01      	cmp	r3, #1
 800d4e0:	d14a      	bne.n	800d578 <HAL_SUBGHZ_ExecSetCmd+0xb4>
 800d4e2:	68fb      	ldr	r3, [r7, #12]
 800d4e4:	795b      	ldrb	r3, [r3, #5]
 800d4e6:	2b01      	cmp	r3, #1
 800d4e8:	d101      	bne.n	800d4ee <HAL_SUBGHZ_ExecSetCmd+0x2a>
 800d4ea:	2302      	movs	r3, #2
 800d4ec:	e045      	b.n	800d57a <HAL_SUBGHZ_ExecSetCmd+0xb6>
 800d4ee:	68fb      	ldr	r3, [r7, #12]
 800d4f0:	2201      	movs	r2, #1
 800d4f2:	715a      	strb	r2, [r3, #5]
 800d4f4:	68f8      	ldr	r0, [r7, #12]
 800d4f6:	f000 fa8f 	bl	800da18 <SUBGHZ_CheckDeviceReady>
 800d4fa:	7afb      	ldrb	r3, [r7, #11]
 800d4fc:	2b84      	cmp	r3, #132	; 0x84
 800d4fe:	d002      	beq.n	800d506 <HAL_SUBGHZ_ExecSetCmd+0x42>
 800d500:	7afb      	ldrb	r3, [r7, #11]
 800d502:	2b94      	cmp	r3, #148	; 0x94
 800d504:	d103      	bne.n	800d50e <HAL_SUBGHZ_ExecSetCmd+0x4a>
 800d506:	68fb      	ldr	r3, [r7, #12]
 800d508:	2201      	movs	r2, #1
 800d50a:	711a      	strb	r2, [r3, #4]
 800d50c:	e002      	b.n	800d514 <HAL_SUBGHZ_ExecSetCmd+0x50>
 800d50e:	68fb      	ldr	r3, [r7, #12]
 800d510:	2200      	movs	r2, #0
 800d512:	711a      	strb	r2, [r3, #4]
 800d514:	f7ff fe42 	bl	800d19c <LL_PWR_SelectSUBGHZSPI_NSS>
 800d518:	7afb      	ldrb	r3, [r7, #11]
 800d51a:	4619      	mov	r1, r3
 800d51c:	68f8      	ldr	r0, [r7, #12]
 800d51e:	f000 f9cd 	bl	800d8bc <SUBGHZSPI_Transmit>
 800d522:	2300      	movs	r3, #0
 800d524:	82bb      	strh	r3, [r7, #20]
 800d526:	e00a      	b.n	800d53e <HAL_SUBGHZ_ExecSetCmd+0x7a>
 800d528:	8abb      	ldrh	r3, [r7, #20]
 800d52a:	687a      	ldr	r2, [r7, #4]
 800d52c:	4413      	add	r3, r2
 800d52e:	781b      	ldrb	r3, [r3, #0]
 800d530:	4619      	mov	r1, r3
 800d532:	68f8      	ldr	r0, [r7, #12]
 800d534:	f000 f9c2 	bl	800d8bc <SUBGHZSPI_Transmit>
 800d538:	8abb      	ldrh	r3, [r7, #20]
 800d53a:	3301      	adds	r3, #1
 800d53c:	82bb      	strh	r3, [r7, #20]
 800d53e:	8aba      	ldrh	r2, [r7, #20]
 800d540:	893b      	ldrh	r3, [r7, #8]
 800d542:	429a      	cmp	r2, r3
 800d544:	d3f0      	bcc.n	800d528 <HAL_SUBGHZ_ExecSetCmd+0x64>
 800d546:	f7ff fe19 	bl	800d17c <LL_PWR_UnselectSUBGHZSPI_NSS>
 800d54a:	7afb      	ldrb	r3, [r7, #11]
 800d54c:	2b84      	cmp	r3, #132	; 0x84
 800d54e:	d002      	beq.n	800d556 <HAL_SUBGHZ_ExecSetCmd+0x92>
 800d550:	68f8      	ldr	r0, [r7, #12]
 800d552:	f000 fa79 	bl	800da48 <SUBGHZ_WaitOnBusy>
 800d556:	68fb      	ldr	r3, [r7, #12]
 800d558:	689b      	ldr	r3, [r3, #8]
 800d55a:	2b00      	cmp	r3, #0
 800d55c:	d002      	beq.n	800d564 <HAL_SUBGHZ_ExecSetCmd+0xa0>
 800d55e:	2301      	movs	r3, #1
 800d560:	75fb      	strb	r3, [r7, #23]
 800d562:	e001      	b.n	800d568 <HAL_SUBGHZ_ExecSetCmd+0xa4>
 800d564:	2300      	movs	r3, #0
 800d566:	75fb      	strb	r3, [r7, #23]
 800d568:	68fb      	ldr	r3, [r7, #12]
 800d56a:	2201      	movs	r2, #1
 800d56c:	719a      	strb	r2, [r3, #6]
 800d56e:	68fb      	ldr	r3, [r7, #12]
 800d570:	2200      	movs	r2, #0
 800d572:	715a      	strb	r2, [r3, #5]
 800d574:	7dfb      	ldrb	r3, [r7, #23]
 800d576:	e000      	b.n	800d57a <HAL_SUBGHZ_ExecSetCmd+0xb6>
 800d578:	2302      	movs	r3, #2
 800d57a:	4618      	mov	r0, r3
 800d57c:	3718      	adds	r7, #24
 800d57e:	46bd      	mov	sp, r7
 800d580:	bd80      	pop	{r7, pc}

0800d582 <HAL_SUBGHZ_ExecGetCmd>:
 800d582:	b580      	push	{r7, lr}
 800d584:	b088      	sub	sp, #32
 800d586:	af00      	add	r7, sp, #0
 800d588:	60f8      	str	r0, [r7, #12]
 800d58a:	607a      	str	r2, [r7, #4]
 800d58c:	461a      	mov	r2, r3
 800d58e:	460b      	mov	r3, r1
 800d590:	72fb      	strb	r3, [r7, #11]
 800d592:	4613      	mov	r3, r2
 800d594:	813b      	strh	r3, [r7, #8]
 800d596:	687b      	ldr	r3, [r7, #4]
 800d598:	61bb      	str	r3, [r7, #24]
 800d59a:	68fb      	ldr	r3, [r7, #12]
 800d59c:	799b      	ldrb	r3, [r3, #6]
 800d59e:	b2db      	uxtb	r3, r3
 800d5a0:	2b01      	cmp	r3, #1
 800d5a2:	d13d      	bne.n	800d620 <HAL_SUBGHZ_ExecGetCmd+0x9e>
 800d5a4:	68fb      	ldr	r3, [r7, #12]
 800d5a6:	795b      	ldrb	r3, [r3, #5]
 800d5a8:	2b01      	cmp	r3, #1
 800d5aa:	d101      	bne.n	800d5b0 <HAL_SUBGHZ_ExecGetCmd+0x2e>
 800d5ac:	2302      	movs	r3, #2
 800d5ae:	e038      	b.n	800d622 <HAL_SUBGHZ_ExecGetCmd+0xa0>
 800d5b0:	68fb      	ldr	r3, [r7, #12]
 800d5b2:	2201      	movs	r2, #1
 800d5b4:	715a      	strb	r2, [r3, #5]
 800d5b6:	68f8      	ldr	r0, [r7, #12]
 800d5b8:	f000 fa2e 	bl	800da18 <SUBGHZ_CheckDeviceReady>
 800d5bc:	f7ff fdee 	bl	800d19c <LL_PWR_SelectSUBGHZSPI_NSS>
 800d5c0:	7afb      	ldrb	r3, [r7, #11]
 800d5c2:	4619      	mov	r1, r3
 800d5c4:	68f8      	ldr	r0, [r7, #12]
 800d5c6:	f000 f979 	bl	800d8bc <SUBGHZSPI_Transmit>
 800d5ca:	2100      	movs	r1, #0
 800d5cc:	68f8      	ldr	r0, [r7, #12]
 800d5ce:	f000 f975 	bl	800d8bc <SUBGHZSPI_Transmit>
 800d5d2:	2300      	movs	r3, #0
 800d5d4:	82fb      	strh	r3, [r7, #22]
 800d5d6:	e009      	b.n	800d5ec <HAL_SUBGHZ_ExecGetCmd+0x6a>
 800d5d8:	69b9      	ldr	r1, [r7, #24]
 800d5da:	68f8      	ldr	r0, [r7, #12]
 800d5dc:	f000 f9c4 	bl	800d968 <SUBGHZSPI_Receive>
 800d5e0:	69bb      	ldr	r3, [r7, #24]
 800d5e2:	3301      	adds	r3, #1
 800d5e4:	61bb      	str	r3, [r7, #24]
 800d5e6:	8afb      	ldrh	r3, [r7, #22]
 800d5e8:	3301      	adds	r3, #1
 800d5ea:	82fb      	strh	r3, [r7, #22]
 800d5ec:	8afa      	ldrh	r2, [r7, #22]
 800d5ee:	893b      	ldrh	r3, [r7, #8]
 800d5f0:	429a      	cmp	r2, r3
 800d5f2:	d3f1      	bcc.n	800d5d8 <HAL_SUBGHZ_ExecGetCmd+0x56>
 800d5f4:	f7ff fdc2 	bl	800d17c <LL_PWR_UnselectSUBGHZSPI_NSS>
 800d5f8:	68f8      	ldr	r0, [r7, #12]
 800d5fa:	f000 fa25 	bl	800da48 <SUBGHZ_WaitOnBusy>
 800d5fe:	68fb      	ldr	r3, [r7, #12]
 800d600:	689b      	ldr	r3, [r3, #8]
 800d602:	2b00      	cmp	r3, #0
 800d604:	d002      	beq.n	800d60c <HAL_SUBGHZ_ExecGetCmd+0x8a>
 800d606:	2301      	movs	r3, #1
 800d608:	77fb      	strb	r3, [r7, #31]
 800d60a:	e001      	b.n	800d610 <HAL_SUBGHZ_ExecGetCmd+0x8e>
 800d60c:	2300      	movs	r3, #0
 800d60e:	77fb      	strb	r3, [r7, #31]
 800d610:	68fb      	ldr	r3, [r7, #12]
 800d612:	2201      	movs	r2, #1
 800d614:	719a      	strb	r2, [r3, #6]
 800d616:	68fb      	ldr	r3, [r7, #12]
 800d618:	2200      	movs	r2, #0
 800d61a:	715a      	strb	r2, [r3, #5]
 800d61c:	7ffb      	ldrb	r3, [r7, #31]
 800d61e:	e000      	b.n	800d622 <HAL_SUBGHZ_ExecGetCmd+0xa0>
 800d620:	2302      	movs	r3, #2
 800d622:	4618      	mov	r0, r3
 800d624:	3720      	adds	r7, #32
 800d626:	46bd      	mov	sp, r7
 800d628:	bd80      	pop	{r7, pc}

0800d62a <HAL_SUBGHZ_WriteBuffer>:
 800d62a:	b580      	push	{r7, lr}
 800d62c:	b086      	sub	sp, #24
 800d62e:	af00      	add	r7, sp, #0
 800d630:	60f8      	str	r0, [r7, #12]
 800d632:	607a      	str	r2, [r7, #4]
 800d634:	461a      	mov	r2, r3
 800d636:	460b      	mov	r3, r1
 800d638:	72fb      	strb	r3, [r7, #11]
 800d63a:	4613      	mov	r3, r2
 800d63c:	813b      	strh	r3, [r7, #8]
 800d63e:	68fb      	ldr	r3, [r7, #12]
 800d640:	799b      	ldrb	r3, [r3, #6]
 800d642:	b2db      	uxtb	r3, r3
 800d644:	2b01      	cmp	r3, #1
 800d646:	d13e      	bne.n	800d6c6 <HAL_SUBGHZ_WriteBuffer+0x9c>
 800d648:	68fb      	ldr	r3, [r7, #12]
 800d64a:	795b      	ldrb	r3, [r3, #5]
 800d64c:	2b01      	cmp	r3, #1
 800d64e:	d101      	bne.n	800d654 <HAL_SUBGHZ_WriteBuffer+0x2a>
 800d650:	2302      	movs	r3, #2
 800d652:	e039      	b.n	800d6c8 <HAL_SUBGHZ_WriteBuffer+0x9e>
 800d654:	68fb      	ldr	r3, [r7, #12]
 800d656:	2201      	movs	r2, #1
 800d658:	715a      	strb	r2, [r3, #5]
 800d65a:	68f8      	ldr	r0, [r7, #12]
 800d65c:	f000 f9dc 	bl	800da18 <SUBGHZ_CheckDeviceReady>
 800d660:	f7ff fd9c 	bl	800d19c <LL_PWR_SelectSUBGHZSPI_NSS>
 800d664:	210e      	movs	r1, #14
 800d666:	68f8      	ldr	r0, [r7, #12]
 800d668:	f000 f928 	bl	800d8bc <SUBGHZSPI_Transmit>
 800d66c:	7afb      	ldrb	r3, [r7, #11]
 800d66e:	4619      	mov	r1, r3
 800d670:	68f8      	ldr	r0, [r7, #12]
 800d672:	f000 f923 	bl	800d8bc <SUBGHZSPI_Transmit>
 800d676:	2300      	movs	r3, #0
 800d678:	82bb      	strh	r3, [r7, #20]
 800d67a:	e00a      	b.n	800d692 <HAL_SUBGHZ_WriteBuffer+0x68>
 800d67c:	8abb      	ldrh	r3, [r7, #20]
 800d67e:	687a      	ldr	r2, [r7, #4]
 800d680:	4413      	add	r3, r2
 800d682:	781b      	ldrb	r3, [r3, #0]
 800d684:	4619      	mov	r1, r3
 800d686:	68f8      	ldr	r0, [r7, #12]
 800d688:	f000 f918 	bl	800d8bc <SUBGHZSPI_Transmit>
 800d68c:	8abb      	ldrh	r3, [r7, #20]
 800d68e:	3301      	adds	r3, #1
 800d690:	82bb      	strh	r3, [r7, #20]
 800d692:	8aba      	ldrh	r2, [r7, #20]
 800d694:	893b      	ldrh	r3, [r7, #8]
 800d696:	429a      	cmp	r2, r3
 800d698:	d3f0      	bcc.n	800d67c <HAL_SUBGHZ_WriteBuffer+0x52>
 800d69a:	f7ff fd6f 	bl	800d17c <LL_PWR_UnselectSUBGHZSPI_NSS>
 800d69e:	68f8      	ldr	r0, [r7, #12]
 800d6a0:	f000 f9d2 	bl	800da48 <SUBGHZ_WaitOnBusy>
 800d6a4:	68fb      	ldr	r3, [r7, #12]
 800d6a6:	689b      	ldr	r3, [r3, #8]
 800d6a8:	2b00      	cmp	r3, #0
 800d6aa:	d002      	beq.n	800d6b2 <HAL_SUBGHZ_WriteBuffer+0x88>
 800d6ac:	2301      	movs	r3, #1
 800d6ae:	75fb      	strb	r3, [r7, #23]
 800d6b0:	e001      	b.n	800d6b6 <HAL_SUBGHZ_WriteBuffer+0x8c>
 800d6b2:	2300      	movs	r3, #0
 800d6b4:	75fb      	strb	r3, [r7, #23]
 800d6b6:	68fb      	ldr	r3, [r7, #12]
 800d6b8:	2201      	movs	r2, #1
 800d6ba:	719a      	strb	r2, [r3, #6]
 800d6bc:	68fb      	ldr	r3, [r7, #12]
 800d6be:	2200      	movs	r2, #0
 800d6c0:	715a      	strb	r2, [r3, #5]
 800d6c2:	7dfb      	ldrb	r3, [r7, #23]
 800d6c4:	e000      	b.n	800d6c8 <HAL_SUBGHZ_WriteBuffer+0x9e>
 800d6c6:	2302      	movs	r3, #2
 800d6c8:	4618      	mov	r0, r3
 800d6ca:	3718      	adds	r7, #24
 800d6cc:	46bd      	mov	sp, r7
 800d6ce:	bd80      	pop	{r7, pc}

0800d6d0 <HAL_SUBGHZ_ReadBuffer>:
 800d6d0:	b580      	push	{r7, lr}
 800d6d2:	b088      	sub	sp, #32
 800d6d4:	af00      	add	r7, sp, #0
 800d6d6:	60f8      	str	r0, [r7, #12]
 800d6d8:	607a      	str	r2, [r7, #4]
 800d6da:	461a      	mov	r2, r3
 800d6dc:	460b      	mov	r3, r1
 800d6de:	72fb      	strb	r3, [r7, #11]
 800d6e0:	4613      	mov	r3, r2
 800d6e2:	813b      	strh	r3, [r7, #8]
 800d6e4:	687b      	ldr	r3, [r7, #4]
 800d6e6:	61bb      	str	r3, [r7, #24]
 800d6e8:	68fb      	ldr	r3, [r7, #12]
 800d6ea:	799b      	ldrb	r3, [r3, #6]
 800d6ec:	b2db      	uxtb	r3, r3
 800d6ee:	2b01      	cmp	r3, #1
 800d6f0:	d141      	bne.n	800d776 <HAL_SUBGHZ_ReadBuffer+0xa6>
 800d6f2:	68fb      	ldr	r3, [r7, #12]
 800d6f4:	795b      	ldrb	r3, [r3, #5]
 800d6f6:	2b01      	cmp	r3, #1
 800d6f8:	d101      	bne.n	800d6fe <HAL_SUBGHZ_ReadBuffer+0x2e>
 800d6fa:	2302      	movs	r3, #2
 800d6fc:	e03c      	b.n	800d778 <HAL_SUBGHZ_ReadBuffer+0xa8>
 800d6fe:	68fb      	ldr	r3, [r7, #12]
 800d700:	2201      	movs	r2, #1
 800d702:	715a      	strb	r2, [r3, #5]
 800d704:	68f8      	ldr	r0, [r7, #12]
 800d706:	f000 f987 	bl	800da18 <SUBGHZ_CheckDeviceReady>
 800d70a:	f7ff fd47 	bl	800d19c <LL_PWR_SelectSUBGHZSPI_NSS>
 800d70e:	211e      	movs	r1, #30
 800d710:	68f8      	ldr	r0, [r7, #12]
 800d712:	f000 f8d3 	bl	800d8bc <SUBGHZSPI_Transmit>
 800d716:	7afb      	ldrb	r3, [r7, #11]
 800d718:	4619      	mov	r1, r3
 800d71a:	68f8      	ldr	r0, [r7, #12]
 800d71c:	f000 f8ce 	bl	800d8bc <SUBGHZSPI_Transmit>
 800d720:	2100      	movs	r1, #0
 800d722:	68f8      	ldr	r0, [r7, #12]
 800d724:	f000 f8ca 	bl	800d8bc <SUBGHZSPI_Transmit>
 800d728:	2300      	movs	r3, #0
 800d72a:	82fb      	strh	r3, [r7, #22]
 800d72c:	e009      	b.n	800d742 <HAL_SUBGHZ_ReadBuffer+0x72>
 800d72e:	69b9      	ldr	r1, [r7, #24]
 800d730:	68f8      	ldr	r0, [r7, #12]
 800d732:	f000 f919 	bl	800d968 <SUBGHZSPI_Receive>
 800d736:	69bb      	ldr	r3, [r7, #24]
 800d738:	3301      	adds	r3, #1
 800d73a:	61bb      	str	r3, [r7, #24]
 800d73c:	8afb      	ldrh	r3, [r7, #22]
 800d73e:	3301      	adds	r3, #1
 800d740:	82fb      	strh	r3, [r7, #22]
 800d742:	8afa      	ldrh	r2, [r7, #22]
 800d744:	893b      	ldrh	r3, [r7, #8]
 800d746:	429a      	cmp	r2, r3
 800d748:	d3f1      	bcc.n	800d72e <HAL_SUBGHZ_ReadBuffer+0x5e>
 800d74a:	f7ff fd17 	bl	800d17c <LL_PWR_UnselectSUBGHZSPI_NSS>
 800d74e:	68f8      	ldr	r0, [r7, #12]
 800d750:	f000 f97a 	bl	800da48 <SUBGHZ_WaitOnBusy>
 800d754:	68fb      	ldr	r3, [r7, #12]
 800d756:	689b      	ldr	r3, [r3, #8]
 800d758:	2b00      	cmp	r3, #0
 800d75a:	d002      	beq.n	800d762 <HAL_SUBGHZ_ReadBuffer+0x92>
 800d75c:	2301      	movs	r3, #1
 800d75e:	77fb      	strb	r3, [r7, #31]
 800d760:	e001      	b.n	800d766 <HAL_SUBGHZ_ReadBuffer+0x96>
 800d762:	2300      	movs	r3, #0
 800d764:	77fb      	strb	r3, [r7, #31]
 800d766:	68fb      	ldr	r3, [r7, #12]
 800d768:	2201      	movs	r2, #1
 800d76a:	719a      	strb	r2, [r3, #6]
 800d76c:	68fb      	ldr	r3, [r7, #12]
 800d76e:	2200      	movs	r2, #0
 800d770:	715a      	strb	r2, [r3, #5]
 800d772:	7ffb      	ldrb	r3, [r7, #31]
 800d774:	e000      	b.n	800d778 <HAL_SUBGHZ_ReadBuffer+0xa8>
 800d776:	2302      	movs	r3, #2
 800d778:	4618      	mov	r0, r3
 800d77a:	3720      	adds	r7, #32
 800d77c:	46bd      	mov	sp, r7
 800d77e:	bd80      	pop	{r7, pc}

0800d780 <HAL_SUBGHZ_IRQHandler>:
 800d780:	b580      	push	{r7, lr}
 800d782:	b084      	sub	sp, #16
 800d784:	af00      	add	r7, sp, #0
 800d786:	6078      	str	r0, [r7, #4]
 800d788:	2300      	movs	r3, #0
 800d78a:	81bb      	strh	r3, [r7, #12]
 800d78c:	f107 020c 	add.w	r2, r7, #12
 800d790:	2302      	movs	r3, #2
 800d792:	2112      	movs	r1, #18
 800d794:	6878      	ldr	r0, [r7, #4]
 800d796:	f7ff fef4 	bl	800d582 <HAL_SUBGHZ_ExecGetCmd>
 800d79a:	7b3b      	ldrb	r3, [r7, #12]
 800d79c:	81fb      	strh	r3, [r7, #14]
 800d79e:	89fb      	ldrh	r3, [r7, #14]
 800d7a0:	021b      	lsls	r3, r3, #8
 800d7a2:	b21a      	sxth	r2, r3
 800d7a4:	7b7b      	ldrb	r3, [r7, #13]
 800d7a6:	b21b      	sxth	r3, r3
 800d7a8:	4313      	orrs	r3, r2
 800d7aa:	b21b      	sxth	r3, r3
 800d7ac:	81fb      	strh	r3, [r7, #14]
 800d7ae:	89fb      	ldrh	r3, [r7, #14]
 800d7b0:	f003 0301 	and.w	r3, r3, #1
 800d7b4:	2b00      	cmp	r3, #0
 800d7b6:	d002      	beq.n	800d7be <HAL_SUBGHZ_IRQHandler+0x3e>
 800d7b8:	6878      	ldr	r0, [r7, #4]
 800d7ba:	f012 fd6f 	bl	802029c <HAL_SUBGHZ_TxCpltCallback>
 800d7be:	89fb      	ldrh	r3, [r7, #14]
 800d7c0:	085b      	lsrs	r3, r3, #1
 800d7c2:	f003 0301 	and.w	r3, r3, #1
 800d7c6:	2b00      	cmp	r3, #0
 800d7c8:	d002      	beq.n	800d7d0 <HAL_SUBGHZ_IRQHandler+0x50>
 800d7ca:	6878      	ldr	r0, [r7, #4]
 800d7cc:	f012 fd74 	bl	80202b8 <HAL_SUBGHZ_RxCpltCallback>
 800d7d0:	89fb      	ldrh	r3, [r7, #14]
 800d7d2:	089b      	lsrs	r3, r3, #2
 800d7d4:	f003 0301 	and.w	r3, r3, #1
 800d7d8:	2b00      	cmp	r3, #0
 800d7da:	d002      	beq.n	800d7e2 <HAL_SUBGHZ_IRQHandler+0x62>
 800d7dc:	6878      	ldr	r0, [r7, #4]
 800d7de:	f012 fdc3 	bl	8020368 <HAL_SUBGHZ_PreambleDetectedCallback>
 800d7e2:	89fb      	ldrh	r3, [r7, #14]
 800d7e4:	08db      	lsrs	r3, r3, #3
 800d7e6:	f003 0301 	and.w	r3, r3, #1
 800d7ea:	2b00      	cmp	r3, #0
 800d7ec:	d002      	beq.n	800d7f4 <HAL_SUBGHZ_IRQHandler+0x74>
 800d7ee:	6878      	ldr	r0, [r7, #4]
 800d7f0:	f012 fdc8 	bl	8020384 <HAL_SUBGHZ_SyncWordValidCallback>
 800d7f4:	89fb      	ldrh	r3, [r7, #14]
 800d7f6:	091b      	lsrs	r3, r3, #4
 800d7f8:	f003 0301 	and.w	r3, r3, #1
 800d7fc:	2b00      	cmp	r3, #0
 800d7fe:	d002      	beq.n	800d806 <HAL_SUBGHZ_IRQHandler+0x86>
 800d800:	6878      	ldr	r0, [r7, #4]
 800d802:	f012 fdcd 	bl	80203a0 <HAL_SUBGHZ_HeaderValidCallback>
 800d806:	89fb      	ldrh	r3, [r7, #14]
 800d808:	095b      	lsrs	r3, r3, #5
 800d80a:	f003 0301 	and.w	r3, r3, #1
 800d80e:	2b00      	cmp	r3, #0
 800d810:	d002      	beq.n	800d818 <HAL_SUBGHZ_IRQHandler+0x98>
 800d812:	6878      	ldr	r0, [r7, #4]
 800d814:	f012 fd9a 	bl	802034c <HAL_SUBGHZ_HeaderErrorCallback>
 800d818:	89fb      	ldrh	r3, [r7, #14]
 800d81a:	099b      	lsrs	r3, r3, #6
 800d81c:	f003 0301 	and.w	r3, r3, #1
 800d820:	2b00      	cmp	r3, #0
 800d822:	d002      	beq.n	800d82a <HAL_SUBGHZ_IRQHandler+0xaa>
 800d824:	6878      	ldr	r0, [r7, #4]
 800d826:	f012 fd55 	bl	80202d4 <HAL_SUBGHZ_CRCErrorCallback>
 800d82a:	89fb      	ldrh	r3, [r7, #14]
 800d82c:	09db      	lsrs	r3, r3, #7
 800d82e:	f003 0301 	and.w	r3, r3, #1
 800d832:	2b00      	cmp	r3, #0
 800d834:	d00e      	beq.n	800d854 <HAL_SUBGHZ_IRQHandler+0xd4>
 800d836:	89fb      	ldrh	r3, [r7, #14]
 800d838:	0a1b      	lsrs	r3, r3, #8
 800d83a:	f003 0301 	and.w	r3, r3, #1
 800d83e:	2b00      	cmp	r3, #0
 800d840:	d004      	beq.n	800d84c <HAL_SUBGHZ_IRQHandler+0xcc>
 800d842:	2101      	movs	r1, #1
 800d844:	6878      	ldr	r0, [r7, #4]
 800d846:	f012 fd53 	bl	80202f0 <HAL_SUBGHZ_CADStatusCallback>
 800d84a:	e003      	b.n	800d854 <HAL_SUBGHZ_IRQHandler+0xd4>
 800d84c:	2100      	movs	r1, #0
 800d84e:	6878      	ldr	r0, [r7, #4]
 800d850:	f012 fd4e 	bl	80202f0 <HAL_SUBGHZ_CADStatusCallback>
 800d854:	89fb      	ldrh	r3, [r7, #14]
 800d856:	0a5b      	lsrs	r3, r3, #9
 800d858:	f003 0301 	and.w	r3, r3, #1
 800d85c:	2b00      	cmp	r3, #0
 800d85e:	d002      	beq.n	800d866 <HAL_SUBGHZ_IRQHandler+0xe6>
 800d860:	6878      	ldr	r0, [r7, #4]
 800d862:	f012 fd63 	bl	802032c <HAL_SUBGHZ_RxTxTimeoutCallback>
 800d866:	f107 020c 	add.w	r2, r7, #12
 800d86a:	2302      	movs	r3, #2
 800d86c:	2102      	movs	r1, #2
 800d86e:	6878      	ldr	r0, [r7, #4]
 800d870:	f7ff fe28 	bl	800d4c4 <HAL_SUBGHZ_ExecSetCmd>
 800d874:	bf00      	nop
 800d876:	3710      	adds	r7, #16
 800d878:	46bd      	mov	sp, r7
 800d87a:	bd80      	pop	{r7, pc}

0800d87c <SUBGHZSPI_Init>:
 800d87c:	b480      	push	{r7}
 800d87e:	b083      	sub	sp, #12
 800d880:	af00      	add	r7, sp, #0
 800d882:	6078      	str	r0, [r7, #4]
 800d884:	4b0c      	ldr	r3, [pc, #48]	; (800d8b8 <SUBGHZSPI_Init+0x3c>)
 800d886:	681b      	ldr	r3, [r3, #0]
 800d888:	4a0b      	ldr	r2, [pc, #44]	; (800d8b8 <SUBGHZSPI_Init+0x3c>)
 800d88a:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800d88e:	6013      	str	r3, [r2, #0]
 800d890:	4a09      	ldr	r2, [pc, #36]	; (800d8b8 <SUBGHZSPI_Init+0x3c>)
 800d892:	687b      	ldr	r3, [r7, #4]
 800d894:	f443 7341 	orr.w	r3, r3, #772	; 0x304
 800d898:	6013      	str	r3, [r2, #0]
 800d89a:	4b07      	ldr	r3, [pc, #28]	; (800d8b8 <SUBGHZSPI_Init+0x3c>)
 800d89c:	f44f 52b8 	mov.w	r2, #5888	; 0x1700
 800d8a0:	605a      	str	r2, [r3, #4]
 800d8a2:	4b05      	ldr	r3, [pc, #20]	; (800d8b8 <SUBGHZSPI_Init+0x3c>)
 800d8a4:	681b      	ldr	r3, [r3, #0]
 800d8a6:	4a04      	ldr	r2, [pc, #16]	; (800d8b8 <SUBGHZSPI_Init+0x3c>)
 800d8a8:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800d8ac:	6013      	str	r3, [r2, #0]
 800d8ae:	bf00      	nop
 800d8b0:	370c      	adds	r7, #12
 800d8b2:	46bd      	mov	sp, r7
 800d8b4:	bc80      	pop	{r7}
 800d8b6:	4770      	bx	lr
 800d8b8:	58010000 	.word	0x58010000

0800d8bc <SUBGHZSPI_Transmit>:
 800d8bc:	b480      	push	{r7}
 800d8be:	b087      	sub	sp, #28
 800d8c0:	af00      	add	r7, sp, #0
 800d8c2:	6078      	str	r0, [r7, #4]
 800d8c4:	460b      	mov	r3, r1
 800d8c6:	70fb      	strb	r3, [r7, #3]
 800d8c8:	2300      	movs	r3, #0
 800d8ca:	75fb      	strb	r3, [r7, #23]
 800d8cc:	4b23      	ldr	r3, [pc, #140]	; (800d95c <SUBGHZSPI_Transmit+0xa0>)
 800d8ce:	681a      	ldr	r2, [r3, #0]
 800d8d0:	4613      	mov	r3, r2
 800d8d2:	00db      	lsls	r3, r3, #3
 800d8d4:	1a9b      	subs	r3, r3, r2
 800d8d6:	009b      	lsls	r3, r3, #2
 800d8d8:	0cdb      	lsrs	r3, r3, #19
 800d8da:	2264      	movs	r2, #100	; 0x64
 800d8dc:	fb02 f303 	mul.w	r3, r2, r3
 800d8e0:	60fb      	str	r3, [r7, #12]
 800d8e2:	68fb      	ldr	r3, [r7, #12]
 800d8e4:	2b00      	cmp	r3, #0
 800d8e6:	d105      	bne.n	800d8f4 <SUBGHZSPI_Transmit+0x38>
 800d8e8:	2301      	movs	r3, #1
 800d8ea:	75fb      	strb	r3, [r7, #23]
 800d8ec:	687b      	ldr	r3, [r7, #4]
 800d8ee:	2201      	movs	r2, #1
 800d8f0:	609a      	str	r2, [r3, #8]
 800d8f2:	e008      	b.n	800d906 <SUBGHZSPI_Transmit+0x4a>
 800d8f4:	68fb      	ldr	r3, [r7, #12]
 800d8f6:	3b01      	subs	r3, #1
 800d8f8:	60fb      	str	r3, [r7, #12]
 800d8fa:	4b19      	ldr	r3, [pc, #100]	; (800d960 <SUBGHZSPI_Transmit+0xa4>)
 800d8fc:	689b      	ldr	r3, [r3, #8]
 800d8fe:	f003 0302 	and.w	r3, r3, #2
 800d902:	2b02      	cmp	r3, #2
 800d904:	d1ed      	bne.n	800d8e2 <SUBGHZSPI_Transmit+0x26>
 800d906:	4b17      	ldr	r3, [pc, #92]	; (800d964 <SUBGHZSPI_Transmit+0xa8>)
 800d908:	613b      	str	r3, [r7, #16]
 800d90a:	693b      	ldr	r3, [r7, #16]
 800d90c:	78fa      	ldrb	r2, [r7, #3]
 800d90e:	701a      	strb	r2, [r3, #0]
 800d910:	4b12      	ldr	r3, [pc, #72]	; (800d95c <SUBGHZSPI_Transmit+0xa0>)
 800d912:	681a      	ldr	r2, [r3, #0]
 800d914:	4613      	mov	r3, r2
 800d916:	00db      	lsls	r3, r3, #3
 800d918:	1a9b      	subs	r3, r3, r2
 800d91a:	009b      	lsls	r3, r3, #2
 800d91c:	0cdb      	lsrs	r3, r3, #19
 800d91e:	2264      	movs	r2, #100	; 0x64
 800d920:	fb02 f303 	mul.w	r3, r2, r3
 800d924:	60fb      	str	r3, [r7, #12]
 800d926:	68fb      	ldr	r3, [r7, #12]
 800d928:	2b00      	cmp	r3, #0
 800d92a:	d105      	bne.n	800d938 <SUBGHZSPI_Transmit+0x7c>
 800d92c:	2301      	movs	r3, #1
 800d92e:	75fb      	strb	r3, [r7, #23]
 800d930:	687b      	ldr	r3, [r7, #4]
 800d932:	2201      	movs	r2, #1
 800d934:	609a      	str	r2, [r3, #8]
 800d936:	e008      	b.n	800d94a <SUBGHZSPI_Transmit+0x8e>
 800d938:	68fb      	ldr	r3, [r7, #12]
 800d93a:	3b01      	subs	r3, #1
 800d93c:	60fb      	str	r3, [r7, #12]
 800d93e:	4b08      	ldr	r3, [pc, #32]	; (800d960 <SUBGHZSPI_Transmit+0xa4>)
 800d940:	689b      	ldr	r3, [r3, #8]
 800d942:	f003 0301 	and.w	r3, r3, #1
 800d946:	2b01      	cmp	r3, #1
 800d948:	d1ed      	bne.n	800d926 <SUBGHZSPI_Transmit+0x6a>
 800d94a:	4b05      	ldr	r3, [pc, #20]	; (800d960 <SUBGHZSPI_Transmit+0xa4>)
 800d94c:	68db      	ldr	r3, [r3, #12]
 800d94e:	7dfb      	ldrb	r3, [r7, #23]
 800d950:	4618      	mov	r0, r3
 800d952:	371c      	adds	r7, #28
 800d954:	46bd      	mov	sp, r7
 800d956:	bc80      	pop	{r7}
 800d958:	4770      	bx	lr
 800d95a:	bf00      	nop
 800d95c:	2000003c 	.word	0x2000003c
 800d960:	58010000 	.word	0x58010000
 800d964:	5801000c 	.word	0x5801000c

0800d968 <SUBGHZSPI_Receive>:
 800d968:	b480      	push	{r7}
 800d96a:	b087      	sub	sp, #28
 800d96c:	af00      	add	r7, sp, #0
 800d96e:	6078      	str	r0, [r7, #4]
 800d970:	6039      	str	r1, [r7, #0]
 800d972:	2300      	movs	r3, #0
 800d974:	75fb      	strb	r3, [r7, #23]
 800d976:	4b25      	ldr	r3, [pc, #148]	; (800da0c <SUBGHZSPI_Receive+0xa4>)
 800d978:	681a      	ldr	r2, [r3, #0]
 800d97a:	4613      	mov	r3, r2
 800d97c:	00db      	lsls	r3, r3, #3
 800d97e:	1a9b      	subs	r3, r3, r2
 800d980:	009b      	lsls	r3, r3, #2
 800d982:	0cdb      	lsrs	r3, r3, #19
 800d984:	2264      	movs	r2, #100	; 0x64
 800d986:	fb02 f303 	mul.w	r3, r2, r3
 800d98a:	60fb      	str	r3, [r7, #12]
 800d98c:	68fb      	ldr	r3, [r7, #12]
 800d98e:	2b00      	cmp	r3, #0
 800d990:	d105      	bne.n	800d99e <SUBGHZSPI_Receive+0x36>
 800d992:	2301      	movs	r3, #1
 800d994:	75fb      	strb	r3, [r7, #23]
 800d996:	687b      	ldr	r3, [r7, #4]
 800d998:	2201      	movs	r2, #1
 800d99a:	609a      	str	r2, [r3, #8]
 800d99c:	e008      	b.n	800d9b0 <SUBGHZSPI_Receive+0x48>
 800d99e:	68fb      	ldr	r3, [r7, #12]
 800d9a0:	3b01      	subs	r3, #1
 800d9a2:	60fb      	str	r3, [r7, #12]
 800d9a4:	4b1a      	ldr	r3, [pc, #104]	; (800da10 <SUBGHZSPI_Receive+0xa8>)
 800d9a6:	689b      	ldr	r3, [r3, #8]
 800d9a8:	f003 0302 	and.w	r3, r3, #2
 800d9ac:	2b02      	cmp	r3, #2
 800d9ae:	d1ed      	bne.n	800d98c <SUBGHZSPI_Receive+0x24>
 800d9b0:	4b18      	ldr	r3, [pc, #96]	; (800da14 <SUBGHZSPI_Receive+0xac>)
 800d9b2:	613b      	str	r3, [r7, #16]
 800d9b4:	693b      	ldr	r3, [r7, #16]
 800d9b6:	22ff      	movs	r2, #255	; 0xff
 800d9b8:	701a      	strb	r2, [r3, #0]
 800d9ba:	4b14      	ldr	r3, [pc, #80]	; (800da0c <SUBGHZSPI_Receive+0xa4>)
 800d9bc:	681a      	ldr	r2, [r3, #0]
 800d9be:	4613      	mov	r3, r2
 800d9c0:	00db      	lsls	r3, r3, #3
 800d9c2:	1a9b      	subs	r3, r3, r2
 800d9c4:	009b      	lsls	r3, r3, #2
 800d9c6:	0cdb      	lsrs	r3, r3, #19
 800d9c8:	2264      	movs	r2, #100	; 0x64
 800d9ca:	fb02 f303 	mul.w	r3, r2, r3
 800d9ce:	60fb      	str	r3, [r7, #12]
 800d9d0:	68fb      	ldr	r3, [r7, #12]
 800d9d2:	2b00      	cmp	r3, #0
 800d9d4:	d105      	bne.n	800d9e2 <SUBGHZSPI_Receive+0x7a>
 800d9d6:	2301      	movs	r3, #1
 800d9d8:	75fb      	strb	r3, [r7, #23]
 800d9da:	687b      	ldr	r3, [r7, #4]
 800d9dc:	2201      	movs	r2, #1
 800d9de:	609a      	str	r2, [r3, #8]
 800d9e0:	e008      	b.n	800d9f4 <SUBGHZSPI_Receive+0x8c>
 800d9e2:	68fb      	ldr	r3, [r7, #12]
 800d9e4:	3b01      	subs	r3, #1
 800d9e6:	60fb      	str	r3, [r7, #12]
 800d9e8:	4b09      	ldr	r3, [pc, #36]	; (800da10 <SUBGHZSPI_Receive+0xa8>)
 800d9ea:	689b      	ldr	r3, [r3, #8]
 800d9ec:	f003 0301 	and.w	r3, r3, #1
 800d9f0:	2b01      	cmp	r3, #1
 800d9f2:	d1ed      	bne.n	800d9d0 <SUBGHZSPI_Receive+0x68>
 800d9f4:	4b06      	ldr	r3, [pc, #24]	; (800da10 <SUBGHZSPI_Receive+0xa8>)
 800d9f6:	68db      	ldr	r3, [r3, #12]
 800d9f8:	b2da      	uxtb	r2, r3
 800d9fa:	683b      	ldr	r3, [r7, #0]
 800d9fc:	701a      	strb	r2, [r3, #0]
 800d9fe:	7dfb      	ldrb	r3, [r7, #23]
 800da00:	4618      	mov	r0, r3
 800da02:	371c      	adds	r7, #28
 800da04:	46bd      	mov	sp, r7
 800da06:	bc80      	pop	{r7}
 800da08:	4770      	bx	lr
 800da0a:	bf00      	nop
 800da0c:	2000003c 	.word	0x2000003c
 800da10:	58010000 	.word	0x58010000
 800da14:	5801000c 	.word	0x5801000c

0800da18 <SUBGHZ_CheckDeviceReady>:
 800da18:	b580      	push	{r7, lr}
 800da1a:	b082      	sub	sp, #8
 800da1c:	af00      	add	r7, sp, #0
 800da1e:	6078      	str	r0, [r7, #4]
 800da20:	687b      	ldr	r3, [r7, #4]
 800da22:	791b      	ldrb	r3, [r3, #4]
 800da24:	2b01      	cmp	r3, #1
 800da26:	d106      	bne.n	800da36 <SUBGHZ_CheckDeviceReady+0x1e>
 800da28:	f7ff fbb8 	bl	800d19c <LL_PWR_SelectSUBGHZSPI_NSS>
 800da2c:	2001      	movs	r0, #1
 800da2e:	f7f8 fcd8 	bl	80063e2 <HAL_Delay>
 800da32:	f7ff fba3 	bl	800d17c <LL_PWR_UnselectSUBGHZSPI_NSS>
 800da36:	6878      	ldr	r0, [r7, #4]
 800da38:	f000 f806 	bl	800da48 <SUBGHZ_WaitOnBusy>
 800da3c:	4603      	mov	r3, r0
 800da3e:	4618      	mov	r0, r3
 800da40:	3708      	adds	r7, #8
 800da42:	46bd      	mov	sp, r7
 800da44:	bd80      	pop	{r7, pc}
	...

0800da48 <SUBGHZ_WaitOnBusy>:
 800da48:	b580      	push	{r7, lr}
 800da4a:	b086      	sub	sp, #24
 800da4c:	af00      	add	r7, sp, #0
 800da4e:	6078      	str	r0, [r7, #4]
 800da50:	2300      	movs	r3, #0
 800da52:	75fb      	strb	r3, [r7, #23]
 800da54:	4b12      	ldr	r3, [pc, #72]	; (800daa0 <SUBGHZ_WaitOnBusy+0x58>)
 800da56:	681a      	ldr	r2, [r3, #0]
 800da58:	4613      	mov	r3, r2
 800da5a:	005b      	lsls	r3, r3, #1
 800da5c:	4413      	add	r3, r2
 800da5e:	00db      	lsls	r3, r3, #3
 800da60:	0d1b      	lsrs	r3, r3, #20
 800da62:	2264      	movs	r2, #100	; 0x64
 800da64:	fb02 f303 	mul.w	r3, r2, r3
 800da68:	60fb      	str	r3, [r7, #12]
 800da6a:	f7ff fbc5 	bl	800d1f8 <LL_PWR_IsActiveFlag_RFBUSYMS>
 800da6e:	6138      	str	r0, [r7, #16]
 800da70:	68fb      	ldr	r3, [r7, #12]
 800da72:	2b00      	cmp	r3, #0
 800da74:	d105      	bne.n	800da82 <SUBGHZ_WaitOnBusy+0x3a>
 800da76:	2301      	movs	r3, #1
 800da78:	75fb      	strb	r3, [r7, #23]
 800da7a:	687b      	ldr	r3, [r7, #4]
 800da7c:	2202      	movs	r2, #2
 800da7e:	609a      	str	r2, [r3, #8]
 800da80:	e009      	b.n	800da96 <SUBGHZ_WaitOnBusy+0x4e>
 800da82:	68fb      	ldr	r3, [r7, #12]
 800da84:	3b01      	subs	r3, #1
 800da86:	60fb      	str	r3, [r7, #12]
 800da88:	f7ff fba4 	bl	800d1d4 <LL_PWR_IsActiveFlag_RFBUSYS>
 800da8c:	4602      	mov	r2, r0
 800da8e:	693b      	ldr	r3, [r7, #16]
 800da90:	4013      	ands	r3, r2
 800da92:	2b01      	cmp	r3, #1
 800da94:	d0e9      	beq.n	800da6a <SUBGHZ_WaitOnBusy+0x22>
 800da96:	7dfb      	ldrb	r3, [r7, #23]
 800da98:	4618      	mov	r0, r3
 800da9a:	3718      	adds	r7, #24
 800da9c:	46bd      	mov	sp, r7
 800da9e:	bd80      	pop	{r7, pc}
 800daa0:	2000003c 	.word	0x2000003c

0800daa4 <HAL_TIM_Base_Init>:
 800daa4:	b580      	push	{r7, lr}
 800daa6:	b082      	sub	sp, #8
 800daa8:	af00      	add	r7, sp, #0
 800daaa:	6078      	str	r0, [r7, #4]
 800daac:	687b      	ldr	r3, [r7, #4]
 800daae:	2b00      	cmp	r3, #0
 800dab0:	d101      	bne.n	800dab6 <HAL_TIM_Base_Init+0x12>
 800dab2:	2301      	movs	r3, #1
 800dab4:	e049      	b.n	800db4a <HAL_TIM_Base_Init+0xa6>
 800dab6:	687b      	ldr	r3, [r7, #4]
 800dab8:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800dabc:	b2db      	uxtb	r3, r3
 800dabe:	2b00      	cmp	r3, #0
 800dac0:	d106      	bne.n	800dad0 <HAL_TIM_Base_Init+0x2c>
 800dac2:	687b      	ldr	r3, [r7, #4]
 800dac4:	2200      	movs	r2, #0
 800dac6:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800daca:	6878      	ldr	r0, [r7, #4]
 800dacc:	f7f8 feb0 	bl	8006830 <HAL_TIM_Base_MspInit>
 800dad0:	687b      	ldr	r3, [r7, #4]
 800dad2:	2202      	movs	r2, #2
 800dad4:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800dad8:	687b      	ldr	r3, [r7, #4]
 800dada:	681a      	ldr	r2, [r3, #0]
 800dadc:	687b      	ldr	r3, [r7, #4]
 800dade:	3304      	adds	r3, #4
 800dae0:	4619      	mov	r1, r3
 800dae2:	4610      	mov	r0, r2
 800dae4:	f000 f8fc 	bl	800dce0 <TIM_Base_SetConfig>
 800dae8:	687b      	ldr	r3, [r7, #4]
 800daea:	2201      	movs	r2, #1
 800daec:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
 800daf0:	687b      	ldr	r3, [r7, #4]
 800daf2:	2201      	movs	r2, #1
 800daf4:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800daf8:	687b      	ldr	r3, [r7, #4]
 800dafa:	2201      	movs	r2, #1
 800dafc:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 800db00:	687b      	ldr	r3, [r7, #4]
 800db02:	2201      	movs	r2, #1
 800db04:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800db08:	687b      	ldr	r3, [r7, #4]
 800db0a:	2201      	movs	r2, #1
 800db0c:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800db10:	687b      	ldr	r3, [r7, #4]
 800db12:	2201      	movs	r2, #1
 800db14:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 800db18:	687b      	ldr	r3, [r7, #4]
 800db1a:	2201      	movs	r2, #1
 800db1c:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 800db20:	687b      	ldr	r3, [r7, #4]
 800db22:	2201      	movs	r2, #1
 800db24:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 800db28:	687b      	ldr	r3, [r7, #4]
 800db2a:	2201      	movs	r2, #1
 800db2c:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 800db30:	687b      	ldr	r3, [r7, #4]
 800db32:	2201      	movs	r2, #1
 800db34:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 800db38:	687b      	ldr	r3, [r7, #4]
 800db3a:	2201      	movs	r2, #1
 800db3c:	f883 2047 	strb.w	r2, [r3, #71]	; 0x47
 800db40:	687b      	ldr	r3, [r7, #4]
 800db42:	2201      	movs	r2, #1
 800db44:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800db48:	2300      	movs	r3, #0
 800db4a:	4618      	mov	r0, r3
 800db4c:	3708      	adds	r7, #8
 800db4e:	46bd      	mov	sp, r7
 800db50:	bd80      	pop	{r7, pc}

0800db52 <HAL_TIM_ConfigClockSource>:
 800db52:	b580      	push	{r7, lr}
 800db54:	b084      	sub	sp, #16
 800db56:	af00      	add	r7, sp, #0
 800db58:	6078      	str	r0, [r7, #4]
 800db5a:	6039      	str	r1, [r7, #0]
 800db5c:	687b      	ldr	r3, [r7, #4]
 800db5e:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800db62:	2b01      	cmp	r3, #1
 800db64:	d101      	bne.n	800db6a <HAL_TIM_ConfigClockSource+0x18>
 800db66:	2302      	movs	r3, #2
 800db68:	e0b5      	b.n	800dcd6 <HAL_TIM_ConfigClockSource+0x184>
 800db6a:	687b      	ldr	r3, [r7, #4]
 800db6c:	2201      	movs	r2, #1
 800db6e:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800db72:	687b      	ldr	r3, [r7, #4]
 800db74:	2202      	movs	r2, #2
 800db76:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800db7a:	687b      	ldr	r3, [r7, #4]
 800db7c:	681b      	ldr	r3, [r3, #0]
 800db7e:	689b      	ldr	r3, [r3, #8]
 800db80:	60fb      	str	r3, [r7, #12]
 800db82:	68fb      	ldr	r3, [r7, #12]
 800db84:	f423 1344 	bic.w	r3, r3, #3211264	; 0x310000
 800db88:	f023 0377 	bic.w	r3, r3, #119	; 0x77
 800db8c:	60fb      	str	r3, [r7, #12]
 800db8e:	68fb      	ldr	r3, [r7, #12]
 800db90:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 800db94:	60fb      	str	r3, [r7, #12]
 800db96:	687b      	ldr	r3, [r7, #4]
 800db98:	681b      	ldr	r3, [r3, #0]
 800db9a:	68fa      	ldr	r2, [r7, #12]
 800db9c:	609a      	str	r2, [r3, #8]
 800db9e:	683b      	ldr	r3, [r7, #0]
 800dba0:	681b      	ldr	r3, [r3, #0]
 800dba2:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800dba6:	d03e      	beq.n	800dc26 <HAL_TIM_ConfigClockSource+0xd4>
 800dba8:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800dbac:	f200 8087 	bhi.w	800dcbe <HAL_TIM_ConfigClockSource+0x16c>
 800dbb0:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800dbb4:	f000 8085 	beq.w	800dcc2 <HAL_TIM_ConfigClockSource+0x170>
 800dbb8:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800dbbc:	d87f      	bhi.n	800dcbe <HAL_TIM_ConfigClockSource+0x16c>
 800dbbe:	2b70      	cmp	r3, #112	; 0x70
 800dbc0:	d01a      	beq.n	800dbf8 <HAL_TIM_ConfigClockSource+0xa6>
 800dbc2:	2b70      	cmp	r3, #112	; 0x70
 800dbc4:	d87b      	bhi.n	800dcbe <HAL_TIM_ConfigClockSource+0x16c>
 800dbc6:	2b60      	cmp	r3, #96	; 0x60
 800dbc8:	d050      	beq.n	800dc6c <HAL_TIM_ConfigClockSource+0x11a>
 800dbca:	2b60      	cmp	r3, #96	; 0x60
 800dbcc:	d877      	bhi.n	800dcbe <HAL_TIM_ConfigClockSource+0x16c>
 800dbce:	2b50      	cmp	r3, #80	; 0x50
 800dbd0:	d03c      	beq.n	800dc4c <HAL_TIM_ConfigClockSource+0xfa>
 800dbd2:	2b50      	cmp	r3, #80	; 0x50
 800dbd4:	d873      	bhi.n	800dcbe <HAL_TIM_ConfigClockSource+0x16c>
 800dbd6:	2b40      	cmp	r3, #64	; 0x40
 800dbd8:	d058      	beq.n	800dc8c <HAL_TIM_ConfigClockSource+0x13a>
 800dbda:	2b40      	cmp	r3, #64	; 0x40
 800dbdc:	d86f      	bhi.n	800dcbe <HAL_TIM_ConfigClockSource+0x16c>
 800dbde:	2b30      	cmp	r3, #48	; 0x30
 800dbe0:	d064      	beq.n	800dcac <HAL_TIM_ConfigClockSource+0x15a>
 800dbe2:	2b30      	cmp	r3, #48	; 0x30
 800dbe4:	d86b      	bhi.n	800dcbe <HAL_TIM_ConfigClockSource+0x16c>
 800dbe6:	2b20      	cmp	r3, #32
 800dbe8:	d060      	beq.n	800dcac <HAL_TIM_ConfigClockSource+0x15a>
 800dbea:	2b20      	cmp	r3, #32
 800dbec:	d867      	bhi.n	800dcbe <HAL_TIM_ConfigClockSource+0x16c>
 800dbee:	2b00      	cmp	r3, #0
 800dbf0:	d05c      	beq.n	800dcac <HAL_TIM_ConfigClockSource+0x15a>
 800dbf2:	2b10      	cmp	r3, #16
 800dbf4:	d05a      	beq.n	800dcac <HAL_TIM_ConfigClockSource+0x15a>
 800dbf6:	e062      	b.n	800dcbe <HAL_TIM_ConfigClockSource+0x16c>
 800dbf8:	687b      	ldr	r3, [r7, #4]
 800dbfa:	6818      	ldr	r0, [r3, #0]
 800dbfc:	683b      	ldr	r3, [r7, #0]
 800dbfe:	6899      	ldr	r1, [r3, #8]
 800dc00:	683b      	ldr	r3, [r7, #0]
 800dc02:	685a      	ldr	r2, [r3, #4]
 800dc04:	683b      	ldr	r3, [r7, #0]
 800dc06:	68db      	ldr	r3, [r3, #12]
 800dc08:	f000 f945 	bl	800de96 <TIM_ETR_SetConfig>
 800dc0c:	687b      	ldr	r3, [r7, #4]
 800dc0e:	681b      	ldr	r3, [r3, #0]
 800dc10:	689b      	ldr	r3, [r3, #8]
 800dc12:	60fb      	str	r3, [r7, #12]
 800dc14:	68fb      	ldr	r3, [r7, #12]
 800dc16:	f043 0377 	orr.w	r3, r3, #119	; 0x77
 800dc1a:	60fb      	str	r3, [r7, #12]
 800dc1c:	687b      	ldr	r3, [r7, #4]
 800dc1e:	681b      	ldr	r3, [r3, #0]
 800dc20:	68fa      	ldr	r2, [r7, #12]
 800dc22:	609a      	str	r2, [r3, #8]
 800dc24:	e04e      	b.n	800dcc4 <HAL_TIM_ConfigClockSource+0x172>
 800dc26:	687b      	ldr	r3, [r7, #4]
 800dc28:	6818      	ldr	r0, [r3, #0]
 800dc2a:	683b      	ldr	r3, [r7, #0]
 800dc2c:	6899      	ldr	r1, [r3, #8]
 800dc2e:	683b      	ldr	r3, [r7, #0]
 800dc30:	685a      	ldr	r2, [r3, #4]
 800dc32:	683b      	ldr	r3, [r7, #0]
 800dc34:	68db      	ldr	r3, [r3, #12]
 800dc36:	f000 f92e 	bl	800de96 <TIM_ETR_SetConfig>
 800dc3a:	687b      	ldr	r3, [r7, #4]
 800dc3c:	681b      	ldr	r3, [r3, #0]
 800dc3e:	689a      	ldr	r2, [r3, #8]
 800dc40:	687b      	ldr	r3, [r7, #4]
 800dc42:	681b      	ldr	r3, [r3, #0]
 800dc44:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 800dc48:	609a      	str	r2, [r3, #8]
 800dc4a:	e03b      	b.n	800dcc4 <HAL_TIM_ConfigClockSource+0x172>
 800dc4c:	687b      	ldr	r3, [r7, #4]
 800dc4e:	6818      	ldr	r0, [r3, #0]
 800dc50:	683b      	ldr	r3, [r7, #0]
 800dc52:	6859      	ldr	r1, [r3, #4]
 800dc54:	683b      	ldr	r3, [r7, #0]
 800dc56:	68db      	ldr	r3, [r3, #12]
 800dc58:	461a      	mov	r2, r3
 800dc5a:	f000 f8a3 	bl	800dda4 <TIM_TI1_ConfigInputStage>
 800dc5e:	687b      	ldr	r3, [r7, #4]
 800dc60:	681b      	ldr	r3, [r3, #0]
 800dc62:	2150      	movs	r1, #80	; 0x50
 800dc64:	4618      	mov	r0, r3
 800dc66:	f000 f8fa 	bl	800de5e <TIM_ITRx_SetConfig>
 800dc6a:	e02b      	b.n	800dcc4 <HAL_TIM_ConfigClockSource+0x172>
 800dc6c:	687b      	ldr	r3, [r7, #4]
 800dc6e:	6818      	ldr	r0, [r3, #0]
 800dc70:	683b      	ldr	r3, [r7, #0]
 800dc72:	6859      	ldr	r1, [r3, #4]
 800dc74:	683b      	ldr	r3, [r7, #0]
 800dc76:	68db      	ldr	r3, [r3, #12]
 800dc78:	461a      	mov	r2, r3
 800dc7a:	f000 f8c1 	bl	800de00 <TIM_TI2_ConfigInputStage>
 800dc7e:	687b      	ldr	r3, [r7, #4]
 800dc80:	681b      	ldr	r3, [r3, #0]
 800dc82:	2160      	movs	r1, #96	; 0x60
 800dc84:	4618      	mov	r0, r3
 800dc86:	f000 f8ea 	bl	800de5e <TIM_ITRx_SetConfig>
 800dc8a:	e01b      	b.n	800dcc4 <HAL_TIM_ConfigClockSource+0x172>
 800dc8c:	687b      	ldr	r3, [r7, #4]
 800dc8e:	6818      	ldr	r0, [r3, #0]
 800dc90:	683b      	ldr	r3, [r7, #0]
 800dc92:	6859      	ldr	r1, [r3, #4]
 800dc94:	683b      	ldr	r3, [r7, #0]
 800dc96:	68db      	ldr	r3, [r3, #12]
 800dc98:	461a      	mov	r2, r3
 800dc9a:	f000 f883 	bl	800dda4 <TIM_TI1_ConfigInputStage>
 800dc9e:	687b      	ldr	r3, [r7, #4]
 800dca0:	681b      	ldr	r3, [r3, #0]
 800dca2:	2140      	movs	r1, #64	; 0x40
 800dca4:	4618      	mov	r0, r3
 800dca6:	f000 f8da 	bl	800de5e <TIM_ITRx_SetConfig>
 800dcaa:	e00b      	b.n	800dcc4 <HAL_TIM_ConfigClockSource+0x172>
 800dcac:	687b      	ldr	r3, [r7, #4]
 800dcae:	681a      	ldr	r2, [r3, #0]
 800dcb0:	683b      	ldr	r3, [r7, #0]
 800dcb2:	681b      	ldr	r3, [r3, #0]
 800dcb4:	4619      	mov	r1, r3
 800dcb6:	4610      	mov	r0, r2
 800dcb8:	f000 f8d1 	bl	800de5e <TIM_ITRx_SetConfig>
 800dcbc:	e002      	b.n	800dcc4 <HAL_TIM_ConfigClockSource+0x172>
 800dcbe:	bf00      	nop
 800dcc0:	e000      	b.n	800dcc4 <HAL_TIM_ConfigClockSource+0x172>
 800dcc2:	bf00      	nop
 800dcc4:	687b      	ldr	r3, [r7, #4]
 800dcc6:	2201      	movs	r2, #1
 800dcc8:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800dccc:	687b      	ldr	r3, [r7, #4]
 800dcce:	2200      	movs	r2, #0
 800dcd0:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800dcd4:	2300      	movs	r3, #0
 800dcd6:	4618      	mov	r0, r3
 800dcd8:	3710      	adds	r7, #16
 800dcda:	46bd      	mov	sp, r7
 800dcdc:	bd80      	pop	{r7, pc}
	...

0800dce0 <TIM_Base_SetConfig>:
 800dce0:	b480      	push	{r7}
 800dce2:	b085      	sub	sp, #20
 800dce4:	af00      	add	r7, sp, #0
 800dce6:	6078      	str	r0, [r7, #4]
 800dce8:	6039      	str	r1, [r7, #0]
 800dcea:	687b      	ldr	r3, [r7, #4]
 800dcec:	681b      	ldr	r3, [r3, #0]
 800dcee:	60fb      	str	r3, [r7, #12]
 800dcf0:	687b      	ldr	r3, [r7, #4]
 800dcf2:	4a29      	ldr	r2, [pc, #164]	; (800dd98 <TIM_Base_SetConfig+0xb8>)
 800dcf4:	4293      	cmp	r3, r2
 800dcf6:	d003      	beq.n	800dd00 <TIM_Base_SetConfig+0x20>
 800dcf8:	687b      	ldr	r3, [r7, #4]
 800dcfa:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800dcfe:	d108      	bne.n	800dd12 <TIM_Base_SetConfig+0x32>
 800dd00:	68fb      	ldr	r3, [r7, #12]
 800dd02:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800dd06:	60fb      	str	r3, [r7, #12]
 800dd08:	683b      	ldr	r3, [r7, #0]
 800dd0a:	685b      	ldr	r3, [r3, #4]
 800dd0c:	68fa      	ldr	r2, [r7, #12]
 800dd0e:	4313      	orrs	r3, r2
 800dd10:	60fb      	str	r3, [r7, #12]
 800dd12:	687b      	ldr	r3, [r7, #4]
 800dd14:	4a20      	ldr	r2, [pc, #128]	; (800dd98 <TIM_Base_SetConfig+0xb8>)
 800dd16:	4293      	cmp	r3, r2
 800dd18:	d00b      	beq.n	800dd32 <TIM_Base_SetConfig+0x52>
 800dd1a:	687b      	ldr	r3, [r7, #4]
 800dd1c:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800dd20:	d007      	beq.n	800dd32 <TIM_Base_SetConfig+0x52>
 800dd22:	687b      	ldr	r3, [r7, #4]
 800dd24:	4a1d      	ldr	r2, [pc, #116]	; (800dd9c <TIM_Base_SetConfig+0xbc>)
 800dd26:	4293      	cmp	r3, r2
 800dd28:	d003      	beq.n	800dd32 <TIM_Base_SetConfig+0x52>
 800dd2a:	687b      	ldr	r3, [r7, #4]
 800dd2c:	4a1c      	ldr	r2, [pc, #112]	; (800dda0 <TIM_Base_SetConfig+0xc0>)
 800dd2e:	4293      	cmp	r3, r2
 800dd30:	d108      	bne.n	800dd44 <TIM_Base_SetConfig+0x64>
 800dd32:	68fb      	ldr	r3, [r7, #12]
 800dd34:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800dd38:	60fb      	str	r3, [r7, #12]
 800dd3a:	683b      	ldr	r3, [r7, #0]
 800dd3c:	68db      	ldr	r3, [r3, #12]
 800dd3e:	68fa      	ldr	r2, [r7, #12]
 800dd40:	4313      	orrs	r3, r2
 800dd42:	60fb      	str	r3, [r7, #12]
 800dd44:	68fb      	ldr	r3, [r7, #12]
 800dd46:	f023 0280 	bic.w	r2, r3, #128	; 0x80
 800dd4a:	683b      	ldr	r3, [r7, #0]
 800dd4c:	695b      	ldr	r3, [r3, #20]
 800dd4e:	4313      	orrs	r3, r2
 800dd50:	60fb      	str	r3, [r7, #12]
 800dd52:	687b      	ldr	r3, [r7, #4]
 800dd54:	68fa      	ldr	r2, [r7, #12]
 800dd56:	601a      	str	r2, [r3, #0]
 800dd58:	683b      	ldr	r3, [r7, #0]
 800dd5a:	689a      	ldr	r2, [r3, #8]
 800dd5c:	687b      	ldr	r3, [r7, #4]
 800dd5e:	62da      	str	r2, [r3, #44]	; 0x2c
 800dd60:	683b      	ldr	r3, [r7, #0]
 800dd62:	681a      	ldr	r2, [r3, #0]
 800dd64:	687b      	ldr	r3, [r7, #4]
 800dd66:	629a      	str	r2, [r3, #40]	; 0x28
 800dd68:	687b      	ldr	r3, [r7, #4]
 800dd6a:	4a0b      	ldr	r2, [pc, #44]	; (800dd98 <TIM_Base_SetConfig+0xb8>)
 800dd6c:	4293      	cmp	r3, r2
 800dd6e:	d007      	beq.n	800dd80 <TIM_Base_SetConfig+0xa0>
 800dd70:	687b      	ldr	r3, [r7, #4]
 800dd72:	4a0a      	ldr	r2, [pc, #40]	; (800dd9c <TIM_Base_SetConfig+0xbc>)
 800dd74:	4293      	cmp	r3, r2
 800dd76:	d003      	beq.n	800dd80 <TIM_Base_SetConfig+0xa0>
 800dd78:	687b      	ldr	r3, [r7, #4]
 800dd7a:	4a09      	ldr	r2, [pc, #36]	; (800dda0 <TIM_Base_SetConfig+0xc0>)
 800dd7c:	4293      	cmp	r3, r2
 800dd7e:	d103      	bne.n	800dd88 <TIM_Base_SetConfig+0xa8>
 800dd80:	683b      	ldr	r3, [r7, #0]
 800dd82:	691a      	ldr	r2, [r3, #16]
 800dd84:	687b      	ldr	r3, [r7, #4]
 800dd86:	631a      	str	r2, [r3, #48]	; 0x30
 800dd88:	687b      	ldr	r3, [r7, #4]
 800dd8a:	2201      	movs	r2, #1
 800dd8c:	615a      	str	r2, [r3, #20]
 800dd8e:	bf00      	nop
 800dd90:	3714      	adds	r7, #20
 800dd92:	46bd      	mov	sp, r7
 800dd94:	bc80      	pop	{r7}
 800dd96:	4770      	bx	lr
 800dd98:	40012c00 	.word	0x40012c00
 800dd9c:	40014400 	.word	0x40014400
 800dda0:	40014800 	.word	0x40014800

0800dda4 <TIM_TI1_ConfigInputStage>:
 800dda4:	b480      	push	{r7}
 800dda6:	b087      	sub	sp, #28
 800dda8:	af00      	add	r7, sp, #0
 800ddaa:	60f8      	str	r0, [r7, #12]
 800ddac:	60b9      	str	r1, [r7, #8]
 800ddae:	607a      	str	r2, [r7, #4]
 800ddb0:	68fb      	ldr	r3, [r7, #12]
 800ddb2:	6a1b      	ldr	r3, [r3, #32]
 800ddb4:	617b      	str	r3, [r7, #20]
 800ddb6:	68fb      	ldr	r3, [r7, #12]
 800ddb8:	6a1b      	ldr	r3, [r3, #32]
 800ddba:	f023 0201 	bic.w	r2, r3, #1
 800ddbe:	68fb      	ldr	r3, [r7, #12]
 800ddc0:	621a      	str	r2, [r3, #32]
 800ddc2:	68fb      	ldr	r3, [r7, #12]
 800ddc4:	699b      	ldr	r3, [r3, #24]
 800ddc6:	613b      	str	r3, [r7, #16]
 800ddc8:	693b      	ldr	r3, [r7, #16]
 800ddca:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 800ddce:	613b      	str	r3, [r7, #16]
 800ddd0:	687b      	ldr	r3, [r7, #4]
 800ddd2:	011b      	lsls	r3, r3, #4
 800ddd4:	693a      	ldr	r2, [r7, #16]
 800ddd6:	4313      	orrs	r3, r2
 800ddd8:	613b      	str	r3, [r7, #16]
 800ddda:	697b      	ldr	r3, [r7, #20]
 800dddc:	f023 030a 	bic.w	r3, r3, #10
 800dde0:	617b      	str	r3, [r7, #20]
 800dde2:	697a      	ldr	r2, [r7, #20]
 800dde4:	68bb      	ldr	r3, [r7, #8]
 800dde6:	4313      	orrs	r3, r2
 800dde8:	617b      	str	r3, [r7, #20]
 800ddea:	68fb      	ldr	r3, [r7, #12]
 800ddec:	693a      	ldr	r2, [r7, #16]
 800ddee:	619a      	str	r2, [r3, #24]
 800ddf0:	68fb      	ldr	r3, [r7, #12]
 800ddf2:	697a      	ldr	r2, [r7, #20]
 800ddf4:	621a      	str	r2, [r3, #32]
 800ddf6:	bf00      	nop
 800ddf8:	371c      	adds	r7, #28
 800ddfa:	46bd      	mov	sp, r7
 800ddfc:	bc80      	pop	{r7}
 800ddfe:	4770      	bx	lr

0800de00 <TIM_TI2_ConfigInputStage>:
 800de00:	b480      	push	{r7}
 800de02:	b087      	sub	sp, #28
 800de04:	af00      	add	r7, sp, #0
 800de06:	60f8      	str	r0, [r7, #12]
 800de08:	60b9      	str	r1, [r7, #8]
 800de0a:	607a      	str	r2, [r7, #4]
 800de0c:	68fb      	ldr	r3, [r7, #12]
 800de0e:	6a1b      	ldr	r3, [r3, #32]
 800de10:	f023 0210 	bic.w	r2, r3, #16
 800de14:	68fb      	ldr	r3, [r7, #12]
 800de16:	621a      	str	r2, [r3, #32]
 800de18:	68fb      	ldr	r3, [r7, #12]
 800de1a:	699b      	ldr	r3, [r3, #24]
 800de1c:	617b      	str	r3, [r7, #20]
 800de1e:	68fb      	ldr	r3, [r7, #12]
 800de20:	6a1b      	ldr	r3, [r3, #32]
 800de22:	613b      	str	r3, [r7, #16]
 800de24:	697b      	ldr	r3, [r7, #20]
 800de26:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 800de2a:	617b      	str	r3, [r7, #20]
 800de2c:	687b      	ldr	r3, [r7, #4]
 800de2e:	031b      	lsls	r3, r3, #12
 800de30:	697a      	ldr	r2, [r7, #20]
 800de32:	4313      	orrs	r3, r2
 800de34:	617b      	str	r3, [r7, #20]
 800de36:	693b      	ldr	r3, [r7, #16]
 800de38:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
 800de3c:	613b      	str	r3, [r7, #16]
 800de3e:	68bb      	ldr	r3, [r7, #8]
 800de40:	011b      	lsls	r3, r3, #4
 800de42:	693a      	ldr	r2, [r7, #16]
 800de44:	4313      	orrs	r3, r2
 800de46:	613b      	str	r3, [r7, #16]
 800de48:	68fb      	ldr	r3, [r7, #12]
 800de4a:	697a      	ldr	r2, [r7, #20]
 800de4c:	619a      	str	r2, [r3, #24]
 800de4e:	68fb      	ldr	r3, [r7, #12]
 800de50:	693a      	ldr	r2, [r7, #16]
 800de52:	621a      	str	r2, [r3, #32]
 800de54:	bf00      	nop
 800de56:	371c      	adds	r7, #28
 800de58:	46bd      	mov	sp, r7
 800de5a:	bc80      	pop	{r7}
 800de5c:	4770      	bx	lr

0800de5e <TIM_ITRx_SetConfig>:
 800de5e:	b480      	push	{r7}
 800de60:	b085      	sub	sp, #20
 800de62:	af00      	add	r7, sp, #0
 800de64:	6078      	str	r0, [r7, #4]
 800de66:	6039      	str	r1, [r7, #0]
 800de68:	687b      	ldr	r3, [r7, #4]
 800de6a:	689b      	ldr	r3, [r3, #8]
 800de6c:	60fb      	str	r3, [r7, #12]
 800de6e:	68fb      	ldr	r3, [r7, #12]
 800de70:	f423 1340 	bic.w	r3, r3, #3145728	; 0x300000
 800de74:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800de78:	60fb      	str	r3, [r7, #12]
 800de7a:	683a      	ldr	r2, [r7, #0]
 800de7c:	68fb      	ldr	r3, [r7, #12]
 800de7e:	4313      	orrs	r3, r2
 800de80:	f043 0307 	orr.w	r3, r3, #7
 800de84:	60fb      	str	r3, [r7, #12]
 800de86:	687b      	ldr	r3, [r7, #4]
 800de88:	68fa      	ldr	r2, [r7, #12]
 800de8a:	609a      	str	r2, [r3, #8]
 800de8c:	bf00      	nop
 800de8e:	3714      	adds	r7, #20
 800de90:	46bd      	mov	sp, r7
 800de92:	bc80      	pop	{r7}
 800de94:	4770      	bx	lr

0800de96 <TIM_ETR_SetConfig>:
 800de96:	b480      	push	{r7}
 800de98:	b087      	sub	sp, #28
 800de9a:	af00      	add	r7, sp, #0
 800de9c:	60f8      	str	r0, [r7, #12]
 800de9e:	60b9      	str	r1, [r7, #8]
 800dea0:	607a      	str	r2, [r7, #4]
 800dea2:	603b      	str	r3, [r7, #0]
 800dea4:	68fb      	ldr	r3, [r7, #12]
 800dea6:	689b      	ldr	r3, [r3, #8]
 800dea8:	617b      	str	r3, [r7, #20]
 800deaa:	697b      	ldr	r3, [r7, #20]
 800deac:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 800deb0:	617b      	str	r3, [r7, #20]
 800deb2:	683b      	ldr	r3, [r7, #0]
 800deb4:	021a      	lsls	r2, r3, #8
 800deb6:	687b      	ldr	r3, [r7, #4]
 800deb8:	431a      	orrs	r2, r3
 800deba:	68bb      	ldr	r3, [r7, #8]
 800debc:	4313      	orrs	r3, r2
 800debe:	697a      	ldr	r2, [r7, #20]
 800dec0:	4313      	orrs	r3, r2
 800dec2:	617b      	str	r3, [r7, #20]
 800dec4:	68fb      	ldr	r3, [r7, #12]
 800dec6:	697a      	ldr	r2, [r7, #20]
 800dec8:	609a      	str	r2, [r3, #8]
 800deca:	bf00      	nop
 800decc:	371c      	adds	r7, #28
 800dece:	46bd      	mov	sp, r7
 800ded0:	bc80      	pop	{r7}
 800ded2:	4770      	bx	lr

0800ded4 <HAL_TIMEx_MasterConfigSynchronization>:
 800ded4:	b480      	push	{r7}
 800ded6:	b085      	sub	sp, #20
 800ded8:	af00      	add	r7, sp, #0
 800deda:	6078      	str	r0, [r7, #4]
 800dedc:	6039      	str	r1, [r7, #0]
 800dede:	687b      	ldr	r3, [r7, #4]
 800dee0:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800dee4:	2b01      	cmp	r3, #1
 800dee6:	d101      	bne.n	800deec <HAL_TIMEx_MasterConfigSynchronization+0x18>
 800dee8:	2302      	movs	r3, #2
 800deea:	e04a      	b.n	800df82 <HAL_TIMEx_MasterConfigSynchronization+0xae>
 800deec:	687b      	ldr	r3, [r7, #4]
 800deee:	2201      	movs	r2, #1
 800def0:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800def4:	687b      	ldr	r3, [r7, #4]
 800def6:	2202      	movs	r2, #2
 800def8:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800defc:	687b      	ldr	r3, [r7, #4]
 800defe:	681b      	ldr	r3, [r3, #0]
 800df00:	685b      	ldr	r3, [r3, #4]
 800df02:	60fb      	str	r3, [r7, #12]
 800df04:	687b      	ldr	r3, [r7, #4]
 800df06:	681b      	ldr	r3, [r3, #0]
 800df08:	689b      	ldr	r3, [r3, #8]
 800df0a:	60bb      	str	r3, [r7, #8]
 800df0c:	687b      	ldr	r3, [r7, #4]
 800df0e:	681b      	ldr	r3, [r3, #0]
 800df10:	4a1e      	ldr	r2, [pc, #120]	; (800df8c <HAL_TIMEx_MasterConfigSynchronization+0xb8>)
 800df12:	4293      	cmp	r3, r2
 800df14:	d108      	bne.n	800df28 <HAL_TIMEx_MasterConfigSynchronization+0x54>
 800df16:	68fb      	ldr	r3, [r7, #12]
 800df18:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
 800df1c:	60fb      	str	r3, [r7, #12]
 800df1e:	683b      	ldr	r3, [r7, #0]
 800df20:	685b      	ldr	r3, [r3, #4]
 800df22:	68fa      	ldr	r2, [r7, #12]
 800df24:	4313      	orrs	r3, r2
 800df26:	60fb      	str	r3, [r7, #12]
 800df28:	68fb      	ldr	r3, [r7, #12]
 800df2a:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800df2e:	60fb      	str	r3, [r7, #12]
 800df30:	683b      	ldr	r3, [r7, #0]
 800df32:	681b      	ldr	r3, [r3, #0]
 800df34:	68fa      	ldr	r2, [r7, #12]
 800df36:	4313      	orrs	r3, r2
 800df38:	60fb      	str	r3, [r7, #12]
 800df3a:	687b      	ldr	r3, [r7, #4]
 800df3c:	681b      	ldr	r3, [r3, #0]
 800df3e:	68fa      	ldr	r2, [r7, #12]
 800df40:	605a      	str	r2, [r3, #4]
 800df42:	687b      	ldr	r3, [r7, #4]
 800df44:	681b      	ldr	r3, [r3, #0]
 800df46:	4a11      	ldr	r2, [pc, #68]	; (800df8c <HAL_TIMEx_MasterConfigSynchronization+0xb8>)
 800df48:	4293      	cmp	r3, r2
 800df4a:	d004      	beq.n	800df56 <HAL_TIMEx_MasterConfigSynchronization+0x82>
 800df4c:	687b      	ldr	r3, [r7, #4]
 800df4e:	681b      	ldr	r3, [r3, #0]
 800df50:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800df54:	d10c      	bne.n	800df70 <HAL_TIMEx_MasterConfigSynchronization+0x9c>
 800df56:	68bb      	ldr	r3, [r7, #8]
 800df58:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800df5c:	60bb      	str	r3, [r7, #8]
 800df5e:	683b      	ldr	r3, [r7, #0]
 800df60:	689b      	ldr	r3, [r3, #8]
 800df62:	68ba      	ldr	r2, [r7, #8]
 800df64:	4313      	orrs	r3, r2
 800df66:	60bb      	str	r3, [r7, #8]
 800df68:	687b      	ldr	r3, [r7, #4]
 800df6a:	681b      	ldr	r3, [r3, #0]
 800df6c:	68ba      	ldr	r2, [r7, #8]
 800df6e:	609a      	str	r2, [r3, #8]
 800df70:	687b      	ldr	r3, [r7, #4]
 800df72:	2201      	movs	r2, #1
 800df74:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800df78:	687b      	ldr	r3, [r7, #4]
 800df7a:	2200      	movs	r2, #0
 800df7c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800df80:	2300      	movs	r3, #0
 800df82:	4618      	mov	r0, r3
 800df84:	3714      	adds	r7, #20
 800df86:	46bd      	mov	sp, r7
 800df88:	bc80      	pop	{r7}
 800df8a:	4770      	bx	lr
 800df8c:	40012c00 	.word	0x40012c00

0800df90 <LL_RCC_GetUSARTClockSource>:
 800df90:	b480      	push	{r7}
 800df92:	b083      	sub	sp, #12
 800df94:	af00      	add	r7, sp, #0
 800df96:	6078      	str	r0, [r7, #4]
 800df98:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 800df9c:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88
 800dfa0:	687b      	ldr	r3, [r7, #4]
 800dfa2:	401a      	ands	r2, r3
 800dfa4:	687b      	ldr	r3, [r7, #4]
 800dfa6:	041b      	lsls	r3, r3, #16
 800dfa8:	4313      	orrs	r3, r2
 800dfaa:	4618      	mov	r0, r3
 800dfac:	370c      	adds	r7, #12
 800dfae:	46bd      	mov	sp, r7
 800dfb0:	bc80      	pop	{r7}
 800dfb2:	4770      	bx	lr

0800dfb4 <LL_RCC_GetLPUARTClockSource>:
 800dfb4:	b480      	push	{r7}
 800dfb6:	b083      	sub	sp, #12
 800dfb8:	af00      	add	r7, sp, #0
 800dfba:	6078      	str	r0, [r7, #4]
 800dfbc:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 800dfc0:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88
 800dfc4:	687b      	ldr	r3, [r7, #4]
 800dfc6:	4013      	ands	r3, r2
 800dfc8:	4618      	mov	r0, r3
 800dfca:	370c      	adds	r7, #12
 800dfcc:	46bd      	mov	sp, r7
 800dfce:	bc80      	pop	{r7}
 800dfd0:	4770      	bx	lr

0800dfd2 <HAL_UART_Init>:
 800dfd2:	b580      	push	{r7, lr}
 800dfd4:	b082      	sub	sp, #8
 800dfd6:	af00      	add	r7, sp, #0
 800dfd8:	6078      	str	r0, [r7, #4]
 800dfda:	687b      	ldr	r3, [r7, #4]
 800dfdc:	2b00      	cmp	r3, #0
 800dfde:	d101      	bne.n	800dfe4 <HAL_UART_Init+0x12>
 800dfe0:	2301      	movs	r3, #1
 800dfe2:	e042      	b.n	800e06a <HAL_UART_Init+0x98>
 800dfe4:	687b      	ldr	r3, [r7, #4]
 800dfe6:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800dfea:	2b00      	cmp	r3, #0
 800dfec:	d106      	bne.n	800dffc <HAL_UART_Init+0x2a>
 800dfee:	687b      	ldr	r3, [r7, #4]
 800dff0:	2200      	movs	r2, #0
 800dff2:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80
 800dff6:	6878      	ldr	r0, [r7, #4]
 800dff8:	f7f8 febe 	bl	8006d78 <HAL_UART_MspInit>
 800dffc:	687b      	ldr	r3, [r7, #4]
 800dffe:	2224      	movs	r2, #36	; 0x24
 800e000:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
 800e004:	687b      	ldr	r3, [r7, #4]
 800e006:	681b      	ldr	r3, [r3, #0]
 800e008:	681a      	ldr	r2, [r3, #0]
 800e00a:	687b      	ldr	r3, [r7, #4]
 800e00c:	681b      	ldr	r3, [r3, #0]
 800e00e:	f022 0201 	bic.w	r2, r2, #1
 800e012:	601a      	str	r2, [r3, #0]
 800e014:	6878      	ldr	r0, [r7, #4]
 800e016:	f000 fb2d 	bl	800e674 <UART_SetConfig>
 800e01a:	4603      	mov	r3, r0
 800e01c:	2b01      	cmp	r3, #1
 800e01e:	d101      	bne.n	800e024 <HAL_UART_Init+0x52>
 800e020:	2301      	movs	r3, #1
 800e022:	e022      	b.n	800e06a <HAL_UART_Init+0x98>
 800e024:	687b      	ldr	r3, [r7, #4]
 800e026:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800e028:	2b00      	cmp	r3, #0
 800e02a:	d002      	beq.n	800e032 <HAL_UART_Init+0x60>
 800e02c:	6878      	ldr	r0, [r7, #4]
 800e02e:	f000 fd71 	bl	800eb14 <UART_AdvFeatureConfig>
 800e032:	687b      	ldr	r3, [r7, #4]
 800e034:	681b      	ldr	r3, [r3, #0]
 800e036:	685a      	ldr	r2, [r3, #4]
 800e038:	687b      	ldr	r3, [r7, #4]
 800e03a:	681b      	ldr	r3, [r3, #0]
 800e03c:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 800e040:	605a      	str	r2, [r3, #4]
 800e042:	687b      	ldr	r3, [r7, #4]
 800e044:	681b      	ldr	r3, [r3, #0]
 800e046:	689a      	ldr	r2, [r3, #8]
 800e048:	687b      	ldr	r3, [r7, #4]
 800e04a:	681b      	ldr	r3, [r3, #0]
 800e04c:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 800e050:	609a      	str	r2, [r3, #8]
 800e052:	687b      	ldr	r3, [r7, #4]
 800e054:	681b      	ldr	r3, [r3, #0]
 800e056:	681a      	ldr	r2, [r3, #0]
 800e058:	687b      	ldr	r3, [r7, #4]
 800e05a:	681b      	ldr	r3, [r3, #0]
 800e05c:	f042 0201 	orr.w	r2, r2, #1
 800e060:	601a      	str	r2, [r3, #0]
 800e062:	6878      	ldr	r0, [r7, #4]
 800e064:	f000 fdf7 	bl	800ec56 <UART_CheckIdleState>
 800e068:	4603      	mov	r3, r0
 800e06a:	4618      	mov	r0, r3
 800e06c:	3708      	adds	r7, #8
 800e06e:	46bd      	mov	sp, r7
 800e070:	bd80      	pop	{r7, pc}

0800e072 <HAL_UART_Receive_IT>:
 800e072:	b580      	push	{r7, lr}
 800e074:	b084      	sub	sp, #16
 800e076:	af00      	add	r7, sp, #0
 800e078:	60f8      	str	r0, [r7, #12]
 800e07a:	60b9      	str	r1, [r7, #8]
 800e07c:	4613      	mov	r3, r2
 800e07e:	80fb      	strh	r3, [r7, #6]
 800e080:	68fb      	ldr	r3, [r7, #12]
 800e082:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800e086:	2b20      	cmp	r3, #32
 800e088:	d11d      	bne.n	800e0c6 <HAL_UART_Receive_IT+0x54>
 800e08a:	68bb      	ldr	r3, [r7, #8]
 800e08c:	2b00      	cmp	r3, #0
 800e08e:	d002      	beq.n	800e096 <HAL_UART_Receive_IT+0x24>
 800e090:	88fb      	ldrh	r3, [r7, #6]
 800e092:	2b00      	cmp	r3, #0
 800e094:	d101      	bne.n	800e09a <HAL_UART_Receive_IT+0x28>
 800e096:	2301      	movs	r3, #1
 800e098:	e016      	b.n	800e0c8 <HAL_UART_Receive_IT+0x56>
 800e09a:	68fb      	ldr	r3, [r7, #12]
 800e09c:	f893 3080 	ldrb.w	r3, [r3, #128]	; 0x80
 800e0a0:	2b01      	cmp	r3, #1
 800e0a2:	d101      	bne.n	800e0a8 <HAL_UART_Receive_IT+0x36>
 800e0a4:	2302      	movs	r3, #2
 800e0a6:	e00f      	b.n	800e0c8 <HAL_UART_Receive_IT+0x56>
 800e0a8:	68fb      	ldr	r3, [r7, #12]
 800e0aa:	2201      	movs	r2, #1
 800e0ac:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80
 800e0b0:	68fb      	ldr	r3, [r7, #12]
 800e0b2:	2200      	movs	r2, #0
 800e0b4:	66da      	str	r2, [r3, #108]	; 0x6c
 800e0b6:	88fb      	ldrh	r3, [r7, #6]
 800e0b8:	461a      	mov	r2, r3
 800e0ba:	68b9      	ldr	r1, [r7, #8]
 800e0bc:	68f8      	ldr	r0, [r7, #12]
 800e0be:	f000 fe95 	bl	800edec <UART_Start_Receive_IT>
 800e0c2:	4603      	mov	r3, r0
 800e0c4:	e000      	b.n	800e0c8 <HAL_UART_Receive_IT+0x56>
 800e0c6:	2302      	movs	r3, #2
 800e0c8:	4618      	mov	r0, r3
 800e0ca:	3710      	adds	r7, #16
 800e0cc:	46bd      	mov	sp, r7
 800e0ce:	bd80      	pop	{r7, pc}

0800e0d0 <HAL_UART_Transmit_DMA>:
 800e0d0:	b580      	push	{r7, lr}
 800e0d2:	b084      	sub	sp, #16
 800e0d4:	af00      	add	r7, sp, #0
 800e0d6:	60f8      	str	r0, [r7, #12]
 800e0d8:	60b9      	str	r1, [r7, #8]
 800e0da:	4613      	mov	r3, r2
 800e0dc:	80fb      	strh	r3, [r7, #6]
 800e0de:	68fb      	ldr	r3, [r7, #12]
 800e0e0:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800e0e4:	2b20      	cmp	r3, #32
 800e0e6:	d168      	bne.n	800e1ba <HAL_UART_Transmit_DMA+0xea>
 800e0e8:	68bb      	ldr	r3, [r7, #8]
 800e0ea:	2b00      	cmp	r3, #0
 800e0ec:	d002      	beq.n	800e0f4 <HAL_UART_Transmit_DMA+0x24>
 800e0ee:	88fb      	ldrh	r3, [r7, #6]
 800e0f0:	2b00      	cmp	r3, #0
 800e0f2:	d101      	bne.n	800e0f8 <HAL_UART_Transmit_DMA+0x28>
 800e0f4:	2301      	movs	r3, #1
 800e0f6:	e061      	b.n	800e1bc <HAL_UART_Transmit_DMA+0xec>
 800e0f8:	68fb      	ldr	r3, [r7, #12]
 800e0fa:	f893 3080 	ldrb.w	r3, [r3, #128]	; 0x80
 800e0fe:	2b01      	cmp	r3, #1
 800e100:	d101      	bne.n	800e106 <HAL_UART_Transmit_DMA+0x36>
 800e102:	2302      	movs	r3, #2
 800e104:	e05a      	b.n	800e1bc <HAL_UART_Transmit_DMA+0xec>
 800e106:	68fb      	ldr	r3, [r7, #12]
 800e108:	2201      	movs	r2, #1
 800e10a:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80
 800e10e:	68fb      	ldr	r3, [r7, #12]
 800e110:	68ba      	ldr	r2, [r7, #8]
 800e112:	651a      	str	r2, [r3, #80]	; 0x50
 800e114:	68fb      	ldr	r3, [r7, #12]
 800e116:	88fa      	ldrh	r2, [r7, #6]
 800e118:	f8a3 2054 	strh.w	r2, [r3, #84]	; 0x54
 800e11c:	68fb      	ldr	r3, [r7, #12]
 800e11e:	88fa      	ldrh	r2, [r7, #6]
 800e120:	f8a3 2056 	strh.w	r2, [r3, #86]	; 0x56
 800e124:	68fb      	ldr	r3, [r7, #12]
 800e126:	2200      	movs	r2, #0
 800e128:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
 800e12c:	68fb      	ldr	r3, [r7, #12]
 800e12e:	2221      	movs	r2, #33	; 0x21
 800e130:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
 800e134:	68fb      	ldr	r3, [r7, #12]
 800e136:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800e138:	2b00      	cmp	r3, #0
 800e13a:	d02c      	beq.n	800e196 <HAL_UART_Transmit_DMA+0xc6>
 800e13c:	68fb      	ldr	r3, [r7, #12]
 800e13e:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800e140:	4a20      	ldr	r2, [pc, #128]	; (800e1c4 <HAL_UART_Transmit_DMA+0xf4>)
 800e142:	62da      	str	r2, [r3, #44]	; 0x2c
 800e144:	68fb      	ldr	r3, [r7, #12]
 800e146:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800e148:	4a1f      	ldr	r2, [pc, #124]	; (800e1c8 <HAL_UART_Transmit_DMA+0xf8>)
 800e14a:	631a      	str	r2, [r3, #48]	; 0x30
 800e14c:	68fb      	ldr	r3, [r7, #12]
 800e14e:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800e150:	4a1e      	ldr	r2, [pc, #120]	; (800e1cc <HAL_UART_Transmit_DMA+0xfc>)
 800e152:	635a      	str	r2, [r3, #52]	; 0x34
 800e154:	68fb      	ldr	r3, [r7, #12]
 800e156:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800e158:	2200      	movs	r2, #0
 800e15a:	639a      	str	r2, [r3, #56]	; 0x38
 800e15c:	68fb      	ldr	r3, [r7, #12]
 800e15e:	6f98      	ldr	r0, [r3, #120]	; 0x78
 800e160:	68fb      	ldr	r3, [r7, #12]
 800e162:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800e164:	4619      	mov	r1, r3
 800e166:	68fb      	ldr	r3, [r7, #12]
 800e168:	681b      	ldr	r3, [r3, #0]
 800e16a:	3328      	adds	r3, #40	; 0x28
 800e16c:	461a      	mov	r2, r3
 800e16e:	88fb      	ldrh	r3, [r7, #6]
 800e170:	f7fa fa6a 	bl	8008648 <HAL_DMA_Start_IT>
 800e174:	4603      	mov	r3, r0
 800e176:	2b00      	cmp	r3, #0
 800e178:	d00d      	beq.n	800e196 <HAL_UART_Transmit_DMA+0xc6>
 800e17a:	68fb      	ldr	r3, [r7, #12]
 800e17c:	2210      	movs	r2, #16
 800e17e:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
 800e182:	68fb      	ldr	r3, [r7, #12]
 800e184:	2200      	movs	r2, #0
 800e186:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80
 800e18a:	68fb      	ldr	r3, [r7, #12]
 800e18c:	2220      	movs	r2, #32
 800e18e:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
 800e192:	2301      	movs	r3, #1
 800e194:	e012      	b.n	800e1bc <HAL_UART_Transmit_DMA+0xec>
 800e196:	68fb      	ldr	r3, [r7, #12]
 800e198:	681b      	ldr	r3, [r3, #0]
 800e19a:	2240      	movs	r2, #64	; 0x40
 800e19c:	621a      	str	r2, [r3, #32]
 800e19e:	68fb      	ldr	r3, [r7, #12]
 800e1a0:	2200      	movs	r2, #0
 800e1a2:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80
 800e1a6:	68fb      	ldr	r3, [r7, #12]
 800e1a8:	681b      	ldr	r3, [r3, #0]
 800e1aa:	689a      	ldr	r2, [r3, #8]
 800e1ac:	68fb      	ldr	r3, [r7, #12]
 800e1ae:	681b      	ldr	r3, [r3, #0]
 800e1b0:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 800e1b4:	609a      	str	r2, [r3, #8]
 800e1b6:	2300      	movs	r3, #0
 800e1b8:	e000      	b.n	800e1bc <HAL_UART_Transmit_DMA+0xec>
 800e1ba:	2302      	movs	r3, #2
 800e1bc:	4618      	mov	r0, r3
 800e1be:	3710      	adds	r7, #16
 800e1c0:	46bd      	mov	sp, r7
 800e1c2:	bd80      	pop	{r7, pc}
 800e1c4:	0800f001 	.word	0x0800f001
 800e1c8:	0800f055 	.word	0x0800f055
 800e1cc:	0800f071 	.word	0x0800f071

0800e1d0 <HAL_UART_IRQHandler>:
 800e1d0:	b580      	push	{r7, lr}
 800e1d2:	b088      	sub	sp, #32
 800e1d4:	af00      	add	r7, sp, #0
 800e1d6:	6078      	str	r0, [r7, #4]
 800e1d8:	687b      	ldr	r3, [r7, #4]
 800e1da:	681b      	ldr	r3, [r3, #0]
 800e1dc:	69db      	ldr	r3, [r3, #28]
 800e1de:	61fb      	str	r3, [r7, #28]
 800e1e0:	687b      	ldr	r3, [r7, #4]
 800e1e2:	681b      	ldr	r3, [r3, #0]
 800e1e4:	681b      	ldr	r3, [r3, #0]
 800e1e6:	61bb      	str	r3, [r7, #24]
 800e1e8:	687b      	ldr	r3, [r7, #4]
 800e1ea:	681b      	ldr	r3, [r3, #0]
 800e1ec:	689b      	ldr	r3, [r3, #8]
 800e1ee:	617b      	str	r3, [r7, #20]
 800e1f0:	69fa      	ldr	r2, [r7, #28]
 800e1f2:	f640 030f 	movw	r3, #2063	; 0x80f
 800e1f6:	4013      	ands	r3, r2
 800e1f8:	613b      	str	r3, [r7, #16]
 800e1fa:	693b      	ldr	r3, [r7, #16]
 800e1fc:	2b00      	cmp	r3, #0
 800e1fe:	d118      	bne.n	800e232 <HAL_UART_IRQHandler+0x62>
 800e200:	69fb      	ldr	r3, [r7, #28]
 800e202:	f003 0320 	and.w	r3, r3, #32
 800e206:	2b00      	cmp	r3, #0
 800e208:	d013      	beq.n	800e232 <HAL_UART_IRQHandler+0x62>
 800e20a:	69bb      	ldr	r3, [r7, #24]
 800e20c:	f003 0320 	and.w	r3, r3, #32
 800e210:	2b00      	cmp	r3, #0
 800e212:	d104      	bne.n	800e21e <HAL_UART_IRQHandler+0x4e>
 800e214:	697b      	ldr	r3, [r7, #20]
 800e216:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800e21a:	2b00      	cmp	r3, #0
 800e21c:	d009      	beq.n	800e232 <HAL_UART_IRQHandler+0x62>
 800e21e:	687b      	ldr	r3, [r7, #4]
 800e220:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800e222:	2b00      	cmp	r3, #0
 800e224:	f000 81fb 	beq.w	800e61e <HAL_UART_IRQHandler+0x44e>
 800e228:	687b      	ldr	r3, [r7, #4]
 800e22a:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800e22c:	6878      	ldr	r0, [r7, #4]
 800e22e:	4798      	blx	r3
 800e230:	e1f5      	b.n	800e61e <HAL_UART_IRQHandler+0x44e>
 800e232:	693b      	ldr	r3, [r7, #16]
 800e234:	2b00      	cmp	r3, #0
 800e236:	f000 80ef 	beq.w	800e418 <HAL_UART_IRQHandler+0x248>
 800e23a:	697a      	ldr	r2, [r7, #20]
 800e23c:	4b73      	ldr	r3, [pc, #460]	; (800e40c <HAL_UART_IRQHandler+0x23c>)
 800e23e:	4013      	ands	r3, r2
 800e240:	2b00      	cmp	r3, #0
 800e242:	d105      	bne.n	800e250 <HAL_UART_IRQHandler+0x80>
 800e244:	69ba      	ldr	r2, [r7, #24]
 800e246:	4b72      	ldr	r3, [pc, #456]	; (800e410 <HAL_UART_IRQHandler+0x240>)
 800e248:	4013      	ands	r3, r2
 800e24a:	2b00      	cmp	r3, #0
 800e24c:	f000 80e4 	beq.w	800e418 <HAL_UART_IRQHandler+0x248>
 800e250:	69fb      	ldr	r3, [r7, #28]
 800e252:	f003 0301 	and.w	r3, r3, #1
 800e256:	2b00      	cmp	r3, #0
 800e258:	d010      	beq.n	800e27c <HAL_UART_IRQHandler+0xac>
 800e25a:	69bb      	ldr	r3, [r7, #24]
 800e25c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800e260:	2b00      	cmp	r3, #0
 800e262:	d00b      	beq.n	800e27c <HAL_UART_IRQHandler+0xac>
 800e264:	687b      	ldr	r3, [r7, #4]
 800e266:	681b      	ldr	r3, [r3, #0]
 800e268:	2201      	movs	r2, #1
 800e26a:	621a      	str	r2, [r3, #32]
 800e26c:	687b      	ldr	r3, [r7, #4]
 800e26e:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800e272:	f043 0201 	orr.w	r2, r3, #1
 800e276:	687b      	ldr	r3, [r7, #4]
 800e278:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
 800e27c:	69fb      	ldr	r3, [r7, #28]
 800e27e:	f003 0302 	and.w	r3, r3, #2
 800e282:	2b00      	cmp	r3, #0
 800e284:	d010      	beq.n	800e2a8 <HAL_UART_IRQHandler+0xd8>
 800e286:	697b      	ldr	r3, [r7, #20]
 800e288:	f003 0301 	and.w	r3, r3, #1
 800e28c:	2b00      	cmp	r3, #0
 800e28e:	d00b      	beq.n	800e2a8 <HAL_UART_IRQHandler+0xd8>
 800e290:	687b      	ldr	r3, [r7, #4]
 800e292:	681b      	ldr	r3, [r3, #0]
 800e294:	2202      	movs	r2, #2
 800e296:	621a      	str	r2, [r3, #32]
 800e298:	687b      	ldr	r3, [r7, #4]
 800e29a:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800e29e:	f043 0204 	orr.w	r2, r3, #4
 800e2a2:	687b      	ldr	r3, [r7, #4]
 800e2a4:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
 800e2a8:	69fb      	ldr	r3, [r7, #28]
 800e2aa:	f003 0304 	and.w	r3, r3, #4
 800e2ae:	2b00      	cmp	r3, #0
 800e2b0:	d010      	beq.n	800e2d4 <HAL_UART_IRQHandler+0x104>
 800e2b2:	697b      	ldr	r3, [r7, #20]
 800e2b4:	f003 0301 	and.w	r3, r3, #1
 800e2b8:	2b00      	cmp	r3, #0
 800e2ba:	d00b      	beq.n	800e2d4 <HAL_UART_IRQHandler+0x104>
 800e2bc:	687b      	ldr	r3, [r7, #4]
 800e2be:	681b      	ldr	r3, [r3, #0]
 800e2c0:	2204      	movs	r2, #4
 800e2c2:	621a      	str	r2, [r3, #32]
 800e2c4:	687b      	ldr	r3, [r7, #4]
 800e2c6:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800e2ca:	f043 0202 	orr.w	r2, r3, #2
 800e2ce:	687b      	ldr	r3, [r7, #4]
 800e2d0:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
 800e2d4:	69fb      	ldr	r3, [r7, #28]
 800e2d6:	f003 0308 	and.w	r3, r3, #8
 800e2da:	2b00      	cmp	r3, #0
 800e2dc:	d015      	beq.n	800e30a <HAL_UART_IRQHandler+0x13a>
 800e2de:	69bb      	ldr	r3, [r7, #24]
 800e2e0:	f003 0320 	and.w	r3, r3, #32
 800e2e4:	2b00      	cmp	r3, #0
 800e2e6:	d104      	bne.n	800e2f2 <HAL_UART_IRQHandler+0x122>
 800e2e8:	697a      	ldr	r2, [r7, #20]
 800e2ea:	4b48      	ldr	r3, [pc, #288]	; (800e40c <HAL_UART_IRQHandler+0x23c>)
 800e2ec:	4013      	ands	r3, r2
 800e2ee:	2b00      	cmp	r3, #0
 800e2f0:	d00b      	beq.n	800e30a <HAL_UART_IRQHandler+0x13a>
 800e2f2:	687b      	ldr	r3, [r7, #4]
 800e2f4:	681b      	ldr	r3, [r3, #0]
 800e2f6:	2208      	movs	r2, #8
 800e2f8:	621a      	str	r2, [r3, #32]
 800e2fa:	687b      	ldr	r3, [r7, #4]
 800e2fc:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800e300:	f043 0208 	orr.w	r2, r3, #8
 800e304:	687b      	ldr	r3, [r7, #4]
 800e306:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
 800e30a:	69fb      	ldr	r3, [r7, #28]
 800e30c:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 800e310:	2b00      	cmp	r3, #0
 800e312:	d011      	beq.n	800e338 <HAL_UART_IRQHandler+0x168>
 800e314:	69bb      	ldr	r3, [r7, #24]
 800e316:	f003 6380 	and.w	r3, r3, #67108864	; 0x4000000
 800e31a:	2b00      	cmp	r3, #0
 800e31c:	d00c      	beq.n	800e338 <HAL_UART_IRQHandler+0x168>
 800e31e:	687b      	ldr	r3, [r7, #4]
 800e320:	681b      	ldr	r3, [r3, #0]
 800e322:	f44f 6200 	mov.w	r2, #2048	; 0x800
 800e326:	621a      	str	r2, [r3, #32]
 800e328:	687b      	ldr	r3, [r7, #4]
 800e32a:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800e32e:	f043 0220 	orr.w	r2, r3, #32
 800e332:	687b      	ldr	r3, [r7, #4]
 800e334:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
 800e338:	687b      	ldr	r3, [r7, #4]
 800e33a:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800e33e:	2b00      	cmp	r3, #0
 800e340:	f000 816f 	beq.w	800e622 <HAL_UART_IRQHandler+0x452>
 800e344:	69fb      	ldr	r3, [r7, #28]
 800e346:	f003 0320 	and.w	r3, r3, #32
 800e34a:	2b00      	cmp	r3, #0
 800e34c:	d011      	beq.n	800e372 <HAL_UART_IRQHandler+0x1a2>
 800e34e:	69bb      	ldr	r3, [r7, #24]
 800e350:	f003 0320 	and.w	r3, r3, #32
 800e354:	2b00      	cmp	r3, #0
 800e356:	d104      	bne.n	800e362 <HAL_UART_IRQHandler+0x192>
 800e358:	697b      	ldr	r3, [r7, #20]
 800e35a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800e35e:	2b00      	cmp	r3, #0
 800e360:	d007      	beq.n	800e372 <HAL_UART_IRQHandler+0x1a2>
 800e362:	687b      	ldr	r3, [r7, #4]
 800e364:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800e366:	2b00      	cmp	r3, #0
 800e368:	d003      	beq.n	800e372 <HAL_UART_IRQHandler+0x1a2>
 800e36a:	687b      	ldr	r3, [r7, #4]
 800e36c:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800e36e:	6878      	ldr	r0, [r7, #4]
 800e370:	4798      	blx	r3
 800e372:	687b      	ldr	r3, [r7, #4]
 800e374:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800e378:	60fb      	str	r3, [r7, #12]
 800e37a:	687b      	ldr	r3, [r7, #4]
 800e37c:	681b      	ldr	r3, [r3, #0]
 800e37e:	689b      	ldr	r3, [r3, #8]
 800e380:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800e384:	2b40      	cmp	r3, #64	; 0x40
 800e386:	d004      	beq.n	800e392 <HAL_UART_IRQHandler+0x1c2>
 800e388:	68fb      	ldr	r3, [r7, #12]
 800e38a:	f003 0328 	and.w	r3, r3, #40	; 0x28
 800e38e:	2b00      	cmp	r3, #0
 800e390:	d031      	beq.n	800e3f6 <HAL_UART_IRQHandler+0x226>
 800e392:	6878      	ldr	r0, [r7, #4]
 800e394:	f000 fe03 	bl	800ef9e <UART_EndRxTransfer>
 800e398:	687b      	ldr	r3, [r7, #4]
 800e39a:	681b      	ldr	r3, [r3, #0]
 800e39c:	689b      	ldr	r3, [r3, #8]
 800e39e:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800e3a2:	2b40      	cmp	r3, #64	; 0x40
 800e3a4:	d123      	bne.n	800e3ee <HAL_UART_IRQHandler+0x21e>
 800e3a6:	687b      	ldr	r3, [r7, #4]
 800e3a8:	681b      	ldr	r3, [r3, #0]
 800e3aa:	689a      	ldr	r2, [r3, #8]
 800e3ac:	687b      	ldr	r3, [r7, #4]
 800e3ae:	681b      	ldr	r3, [r3, #0]
 800e3b0:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800e3b4:	609a      	str	r2, [r3, #8]
 800e3b6:	687b      	ldr	r3, [r7, #4]
 800e3b8:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800e3ba:	2b00      	cmp	r3, #0
 800e3bc:	d013      	beq.n	800e3e6 <HAL_UART_IRQHandler+0x216>
 800e3be:	687b      	ldr	r3, [r7, #4]
 800e3c0:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800e3c2:	4a14      	ldr	r2, [pc, #80]	; (800e414 <HAL_UART_IRQHandler+0x244>)
 800e3c4:	639a      	str	r2, [r3, #56]	; 0x38
 800e3c6:	687b      	ldr	r3, [r7, #4]
 800e3c8:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800e3ca:	4618      	mov	r0, r3
 800e3cc:	f7fa fa18 	bl	8008800 <HAL_DMA_Abort_IT>
 800e3d0:	4603      	mov	r3, r0
 800e3d2:	2b00      	cmp	r3, #0
 800e3d4:	d017      	beq.n	800e406 <HAL_UART_IRQHandler+0x236>
 800e3d6:	687b      	ldr	r3, [r7, #4]
 800e3d8:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800e3da:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800e3dc:	687a      	ldr	r2, [r7, #4]
 800e3de:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 800e3e0:	4610      	mov	r0, r2
 800e3e2:	4798      	blx	r3
 800e3e4:	e00f      	b.n	800e406 <HAL_UART_IRQHandler+0x236>
 800e3e6:	6878      	ldr	r0, [r7, #4]
 800e3e8:	f000 f92f 	bl	800e64a <HAL_UART_ErrorCallback>
 800e3ec:	e00b      	b.n	800e406 <HAL_UART_IRQHandler+0x236>
 800e3ee:	6878      	ldr	r0, [r7, #4]
 800e3f0:	f000 f92b 	bl	800e64a <HAL_UART_ErrorCallback>
 800e3f4:	e007      	b.n	800e406 <HAL_UART_IRQHandler+0x236>
 800e3f6:	6878      	ldr	r0, [r7, #4]
 800e3f8:	f000 f927 	bl	800e64a <HAL_UART_ErrorCallback>
 800e3fc:	687b      	ldr	r3, [r7, #4]
 800e3fe:	2200      	movs	r2, #0
 800e400:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
 800e404:	e10d      	b.n	800e622 <HAL_UART_IRQHandler+0x452>
 800e406:	bf00      	nop
 800e408:	e10b      	b.n	800e622 <HAL_UART_IRQHandler+0x452>
 800e40a:	bf00      	nop
 800e40c:	10000001 	.word	0x10000001
 800e410:	04000120 	.word	0x04000120
 800e414:	0800f0f1 	.word	0x0800f0f1
 800e418:	687b      	ldr	r3, [r7, #4]
 800e41a:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800e41c:	2b01      	cmp	r3, #1
 800e41e:	f040 80ab 	bne.w	800e578 <HAL_UART_IRQHandler+0x3a8>
 800e422:	69fb      	ldr	r3, [r7, #28]
 800e424:	f003 0310 	and.w	r3, r3, #16
 800e428:	2b00      	cmp	r3, #0
 800e42a:	f000 80a5 	beq.w	800e578 <HAL_UART_IRQHandler+0x3a8>
 800e42e:	69bb      	ldr	r3, [r7, #24]
 800e430:	f003 0310 	and.w	r3, r3, #16
 800e434:	2b00      	cmp	r3, #0
 800e436:	f000 809f 	beq.w	800e578 <HAL_UART_IRQHandler+0x3a8>
 800e43a:	687b      	ldr	r3, [r7, #4]
 800e43c:	681b      	ldr	r3, [r3, #0]
 800e43e:	2210      	movs	r2, #16
 800e440:	621a      	str	r2, [r3, #32]
 800e442:	687b      	ldr	r3, [r7, #4]
 800e444:	681b      	ldr	r3, [r3, #0]
 800e446:	689b      	ldr	r3, [r3, #8]
 800e448:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800e44c:	2b40      	cmp	r3, #64	; 0x40
 800e44e:	d155      	bne.n	800e4fc <HAL_UART_IRQHandler+0x32c>
 800e450:	687b      	ldr	r3, [r7, #4]
 800e452:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800e454:	681b      	ldr	r3, [r3, #0]
 800e456:	685b      	ldr	r3, [r3, #4]
 800e458:	813b      	strh	r3, [r7, #8]
 800e45a:	893b      	ldrh	r3, [r7, #8]
 800e45c:	2b00      	cmp	r3, #0
 800e45e:	f000 80e2 	beq.w	800e626 <HAL_UART_IRQHandler+0x456>
 800e462:	687b      	ldr	r3, [r7, #4]
 800e464:	f8b3 305c 	ldrh.w	r3, [r3, #92]	; 0x5c
 800e468:	893a      	ldrh	r2, [r7, #8]
 800e46a:	429a      	cmp	r2, r3
 800e46c:	f080 80db 	bcs.w	800e626 <HAL_UART_IRQHandler+0x456>
 800e470:	687b      	ldr	r3, [r7, #4]
 800e472:	893a      	ldrh	r2, [r7, #8]
 800e474:	f8a3 205e 	strh.w	r2, [r3, #94]	; 0x5e
 800e478:	687b      	ldr	r3, [r7, #4]
 800e47a:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800e47c:	681b      	ldr	r3, [r3, #0]
 800e47e:	681b      	ldr	r3, [r3, #0]
 800e480:	f003 0320 	and.w	r3, r3, #32
 800e484:	2b00      	cmp	r3, #0
 800e486:	d12b      	bne.n	800e4e0 <HAL_UART_IRQHandler+0x310>
 800e488:	687b      	ldr	r3, [r7, #4]
 800e48a:	681b      	ldr	r3, [r3, #0]
 800e48c:	681a      	ldr	r2, [r3, #0]
 800e48e:	687b      	ldr	r3, [r7, #4]
 800e490:	681b      	ldr	r3, [r3, #0]
 800e492:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 800e496:	601a      	str	r2, [r3, #0]
 800e498:	687b      	ldr	r3, [r7, #4]
 800e49a:	681b      	ldr	r3, [r3, #0]
 800e49c:	689a      	ldr	r2, [r3, #8]
 800e49e:	687b      	ldr	r3, [r7, #4]
 800e4a0:	681b      	ldr	r3, [r3, #0]
 800e4a2:	f022 0201 	bic.w	r2, r2, #1
 800e4a6:	609a      	str	r2, [r3, #8]
 800e4a8:	687b      	ldr	r3, [r7, #4]
 800e4aa:	681b      	ldr	r3, [r3, #0]
 800e4ac:	689a      	ldr	r2, [r3, #8]
 800e4ae:	687b      	ldr	r3, [r7, #4]
 800e4b0:	681b      	ldr	r3, [r3, #0]
 800e4b2:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800e4b6:	609a      	str	r2, [r3, #8]
 800e4b8:	687b      	ldr	r3, [r7, #4]
 800e4ba:	2220      	movs	r2, #32
 800e4bc:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
 800e4c0:	687b      	ldr	r3, [r7, #4]
 800e4c2:	2200      	movs	r2, #0
 800e4c4:	66da      	str	r2, [r3, #108]	; 0x6c
 800e4c6:	687b      	ldr	r3, [r7, #4]
 800e4c8:	681b      	ldr	r3, [r3, #0]
 800e4ca:	681a      	ldr	r2, [r3, #0]
 800e4cc:	687b      	ldr	r3, [r7, #4]
 800e4ce:	681b      	ldr	r3, [r3, #0]
 800e4d0:	f022 0210 	bic.w	r2, r2, #16
 800e4d4:	601a      	str	r2, [r3, #0]
 800e4d6:	687b      	ldr	r3, [r7, #4]
 800e4d8:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800e4da:	4618      	mov	r0, r3
 800e4dc:	f7fa f932 	bl	8008744 <HAL_DMA_Abort>
 800e4e0:	687b      	ldr	r3, [r7, #4]
 800e4e2:	f8b3 205c 	ldrh.w	r2, [r3, #92]	; 0x5c
 800e4e6:	687b      	ldr	r3, [r7, #4]
 800e4e8:	f8b3 305e 	ldrh.w	r3, [r3, #94]	; 0x5e
 800e4ec:	b29b      	uxth	r3, r3
 800e4ee:	1ad3      	subs	r3, r2, r3
 800e4f0:	b29b      	uxth	r3, r3
 800e4f2:	4619      	mov	r1, r3
 800e4f4:	6878      	ldr	r0, [r7, #4]
 800e4f6:	f000 f8b1 	bl	800e65c <HAL_UARTEx_RxEventCallback>
 800e4fa:	e094      	b.n	800e626 <HAL_UART_IRQHandler+0x456>
 800e4fc:	687b      	ldr	r3, [r7, #4]
 800e4fe:	f8b3 205c 	ldrh.w	r2, [r3, #92]	; 0x5c
 800e502:	687b      	ldr	r3, [r7, #4]
 800e504:	f8b3 305e 	ldrh.w	r3, [r3, #94]	; 0x5e
 800e508:	b29b      	uxth	r3, r3
 800e50a:	1ad3      	subs	r3, r2, r3
 800e50c:	817b      	strh	r3, [r7, #10]
 800e50e:	687b      	ldr	r3, [r7, #4]
 800e510:	f8b3 305e 	ldrh.w	r3, [r3, #94]	; 0x5e
 800e514:	b29b      	uxth	r3, r3
 800e516:	2b00      	cmp	r3, #0
 800e518:	f000 8087 	beq.w	800e62a <HAL_UART_IRQHandler+0x45a>
 800e51c:	897b      	ldrh	r3, [r7, #10]
 800e51e:	2b00      	cmp	r3, #0
 800e520:	f000 8083 	beq.w	800e62a <HAL_UART_IRQHandler+0x45a>
 800e524:	687b      	ldr	r3, [r7, #4]
 800e526:	681b      	ldr	r3, [r3, #0]
 800e528:	681a      	ldr	r2, [r3, #0]
 800e52a:	687b      	ldr	r3, [r7, #4]
 800e52c:	681b      	ldr	r3, [r3, #0]
 800e52e:	f422 7290 	bic.w	r2, r2, #288	; 0x120
 800e532:	601a      	str	r2, [r3, #0]
 800e534:	687b      	ldr	r3, [r7, #4]
 800e536:	681b      	ldr	r3, [r3, #0]
 800e538:	689b      	ldr	r3, [r3, #8]
 800e53a:	687a      	ldr	r2, [r7, #4]
 800e53c:	6812      	ldr	r2, [r2, #0]
 800e53e:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 800e542:	f023 0301 	bic.w	r3, r3, #1
 800e546:	6093      	str	r3, [r2, #8]
 800e548:	687b      	ldr	r3, [r7, #4]
 800e54a:	2220      	movs	r2, #32
 800e54c:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
 800e550:	687b      	ldr	r3, [r7, #4]
 800e552:	2200      	movs	r2, #0
 800e554:	66da      	str	r2, [r3, #108]	; 0x6c
 800e556:	687b      	ldr	r3, [r7, #4]
 800e558:	2200      	movs	r2, #0
 800e55a:	671a      	str	r2, [r3, #112]	; 0x70
 800e55c:	687b      	ldr	r3, [r7, #4]
 800e55e:	681b      	ldr	r3, [r3, #0]
 800e560:	681a      	ldr	r2, [r3, #0]
 800e562:	687b      	ldr	r3, [r7, #4]
 800e564:	681b      	ldr	r3, [r3, #0]
 800e566:	f022 0210 	bic.w	r2, r2, #16
 800e56a:	601a      	str	r2, [r3, #0]
 800e56c:	897b      	ldrh	r3, [r7, #10]
 800e56e:	4619      	mov	r1, r3
 800e570:	6878      	ldr	r0, [r7, #4]
 800e572:	f000 f873 	bl	800e65c <HAL_UARTEx_RxEventCallback>
 800e576:	e058      	b.n	800e62a <HAL_UART_IRQHandler+0x45a>
 800e578:	69fb      	ldr	r3, [r7, #28]
 800e57a:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 800e57e:	2b00      	cmp	r3, #0
 800e580:	d00d      	beq.n	800e59e <HAL_UART_IRQHandler+0x3ce>
 800e582:	697b      	ldr	r3, [r7, #20]
 800e584:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 800e588:	2b00      	cmp	r3, #0
 800e58a:	d008      	beq.n	800e59e <HAL_UART_IRQHandler+0x3ce>
 800e58c:	687b      	ldr	r3, [r7, #4]
 800e58e:	681b      	ldr	r3, [r3, #0]
 800e590:	f44f 1280 	mov.w	r2, #1048576	; 0x100000
 800e594:	621a      	str	r2, [r3, #32]
 800e596:	6878      	ldr	r0, [r7, #4]
 800e598:	f001 f8b6 	bl	800f708 <HAL_UARTEx_WakeupCallback>
 800e59c:	e048      	b.n	800e630 <HAL_UART_IRQHandler+0x460>
 800e59e:	69fb      	ldr	r3, [r7, #28]
 800e5a0:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800e5a4:	2b00      	cmp	r3, #0
 800e5a6:	d012      	beq.n	800e5ce <HAL_UART_IRQHandler+0x3fe>
 800e5a8:	69bb      	ldr	r3, [r7, #24]
 800e5aa:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800e5ae:	2b00      	cmp	r3, #0
 800e5b0:	d104      	bne.n	800e5bc <HAL_UART_IRQHandler+0x3ec>
 800e5b2:	697b      	ldr	r3, [r7, #20]
 800e5b4:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 800e5b8:	2b00      	cmp	r3, #0
 800e5ba:	d008      	beq.n	800e5ce <HAL_UART_IRQHandler+0x3fe>
 800e5bc:	687b      	ldr	r3, [r7, #4]
 800e5be:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800e5c0:	2b00      	cmp	r3, #0
 800e5c2:	d034      	beq.n	800e62e <HAL_UART_IRQHandler+0x45e>
 800e5c4:	687b      	ldr	r3, [r7, #4]
 800e5c6:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800e5c8:	6878      	ldr	r0, [r7, #4]
 800e5ca:	4798      	blx	r3
 800e5cc:	e02f      	b.n	800e62e <HAL_UART_IRQHandler+0x45e>
 800e5ce:	69fb      	ldr	r3, [r7, #28]
 800e5d0:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800e5d4:	2b00      	cmp	r3, #0
 800e5d6:	d008      	beq.n	800e5ea <HAL_UART_IRQHandler+0x41a>
 800e5d8:	69bb      	ldr	r3, [r7, #24]
 800e5da:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800e5de:	2b00      	cmp	r3, #0
 800e5e0:	d003      	beq.n	800e5ea <HAL_UART_IRQHandler+0x41a>
 800e5e2:	6878      	ldr	r0, [r7, #4]
 800e5e4:	f000 fd9a 	bl	800f11c <UART_EndTransmit_IT>
 800e5e8:	e022      	b.n	800e630 <HAL_UART_IRQHandler+0x460>
 800e5ea:	69fb      	ldr	r3, [r7, #28]
 800e5ec:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 800e5f0:	2b00      	cmp	r3, #0
 800e5f2:	d008      	beq.n	800e606 <HAL_UART_IRQHandler+0x436>
 800e5f4:	69bb      	ldr	r3, [r7, #24]
 800e5f6:	f003 4380 	and.w	r3, r3, #1073741824	; 0x40000000
 800e5fa:	2b00      	cmp	r3, #0
 800e5fc:	d003      	beq.n	800e606 <HAL_UART_IRQHandler+0x436>
 800e5fe:	6878      	ldr	r0, [r7, #4]
 800e600:	f001 f894 	bl	800f72c <HAL_UARTEx_TxFifoEmptyCallback>
 800e604:	e014      	b.n	800e630 <HAL_UART_IRQHandler+0x460>
 800e606:	69fb      	ldr	r3, [r7, #28]
 800e608:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 800e60c:	2b00      	cmp	r3, #0
 800e60e:	d00f      	beq.n	800e630 <HAL_UART_IRQHandler+0x460>
 800e610:	69bb      	ldr	r3, [r7, #24]
 800e612:	2b00      	cmp	r3, #0
 800e614:	da0c      	bge.n	800e630 <HAL_UART_IRQHandler+0x460>
 800e616:	6878      	ldr	r0, [r7, #4]
 800e618:	f001 f87f 	bl	800f71a <HAL_UARTEx_RxFifoFullCallback>
 800e61c:	e008      	b.n	800e630 <HAL_UART_IRQHandler+0x460>
 800e61e:	bf00      	nop
 800e620:	e006      	b.n	800e630 <HAL_UART_IRQHandler+0x460>
 800e622:	bf00      	nop
 800e624:	e004      	b.n	800e630 <HAL_UART_IRQHandler+0x460>
 800e626:	bf00      	nop
 800e628:	e002      	b.n	800e630 <HAL_UART_IRQHandler+0x460>
 800e62a:	bf00      	nop
 800e62c:	e000      	b.n	800e630 <HAL_UART_IRQHandler+0x460>
 800e62e:	bf00      	nop
 800e630:	3720      	adds	r7, #32
 800e632:	46bd      	mov	sp, r7
 800e634:	bd80      	pop	{r7, pc}
 800e636:	bf00      	nop

0800e638 <HAL_UART_TxHalfCpltCallback>:
 800e638:	b480      	push	{r7}
 800e63a:	b083      	sub	sp, #12
 800e63c:	af00      	add	r7, sp, #0
 800e63e:	6078      	str	r0, [r7, #4]
 800e640:	bf00      	nop
 800e642:	370c      	adds	r7, #12
 800e644:	46bd      	mov	sp, r7
 800e646:	bc80      	pop	{r7}
 800e648:	4770      	bx	lr

0800e64a <HAL_UART_ErrorCallback>:
 800e64a:	b480      	push	{r7}
 800e64c:	b083      	sub	sp, #12
 800e64e:	af00      	add	r7, sp, #0
 800e650:	6078      	str	r0, [r7, #4]
 800e652:	bf00      	nop
 800e654:	370c      	adds	r7, #12
 800e656:	46bd      	mov	sp, r7
 800e658:	bc80      	pop	{r7}
 800e65a:	4770      	bx	lr

0800e65c <HAL_UARTEx_RxEventCallback>:
 800e65c:	b480      	push	{r7}
 800e65e:	b083      	sub	sp, #12
 800e660:	af00      	add	r7, sp, #0
 800e662:	6078      	str	r0, [r7, #4]
 800e664:	460b      	mov	r3, r1
 800e666:	807b      	strh	r3, [r7, #2]
 800e668:	bf00      	nop
 800e66a:	370c      	adds	r7, #12
 800e66c:	46bd      	mov	sp, r7
 800e66e:	bc80      	pop	{r7}
 800e670:	4770      	bx	lr
	...

0800e674 <UART_SetConfig>:
 800e674:	b5b0      	push	{r4, r5, r7, lr}
 800e676:	b088      	sub	sp, #32
 800e678:	af00      	add	r7, sp, #0
 800e67a:	6078      	str	r0, [r7, #4]
 800e67c:	2300      	movs	r3, #0
 800e67e:	76bb      	strb	r3, [r7, #26]
 800e680:	687b      	ldr	r3, [r7, #4]
 800e682:	689a      	ldr	r2, [r3, #8]
 800e684:	687b      	ldr	r3, [r7, #4]
 800e686:	691b      	ldr	r3, [r3, #16]
 800e688:	431a      	orrs	r2, r3
 800e68a:	687b      	ldr	r3, [r7, #4]
 800e68c:	695b      	ldr	r3, [r3, #20]
 800e68e:	431a      	orrs	r2, r3
 800e690:	687b      	ldr	r3, [r7, #4]
 800e692:	69db      	ldr	r3, [r3, #28]
 800e694:	4313      	orrs	r3, r2
 800e696:	61fb      	str	r3, [r7, #28]
 800e698:	687b      	ldr	r3, [r7, #4]
 800e69a:	681b      	ldr	r3, [r3, #0]
 800e69c:	681a      	ldr	r2, [r3, #0]
 800e69e:	4bab      	ldr	r3, [pc, #684]	; (800e94c <UART_SetConfig+0x2d8>)
 800e6a0:	4013      	ands	r3, r2
 800e6a2:	687a      	ldr	r2, [r7, #4]
 800e6a4:	6812      	ldr	r2, [r2, #0]
 800e6a6:	69f9      	ldr	r1, [r7, #28]
 800e6a8:	430b      	orrs	r3, r1
 800e6aa:	6013      	str	r3, [r2, #0]
 800e6ac:	687b      	ldr	r3, [r7, #4]
 800e6ae:	681b      	ldr	r3, [r3, #0]
 800e6b0:	685b      	ldr	r3, [r3, #4]
 800e6b2:	f423 5140 	bic.w	r1, r3, #12288	; 0x3000
 800e6b6:	687b      	ldr	r3, [r7, #4]
 800e6b8:	68da      	ldr	r2, [r3, #12]
 800e6ba:	687b      	ldr	r3, [r7, #4]
 800e6bc:	681b      	ldr	r3, [r3, #0]
 800e6be:	430a      	orrs	r2, r1
 800e6c0:	605a      	str	r2, [r3, #4]
 800e6c2:	687b      	ldr	r3, [r7, #4]
 800e6c4:	699b      	ldr	r3, [r3, #24]
 800e6c6:	61fb      	str	r3, [r7, #28]
 800e6c8:	687b      	ldr	r3, [r7, #4]
 800e6ca:	681b      	ldr	r3, [r3, #0]
 800e6cc:	4aa0      	ldr	r2, [pc, #640]	; (800e950 <UART_SetConfig+0x2dc>)
 800e6ce:	4293      	cmp	r3, r2
 800e6d0:	d004      	beq.n	800e6dc <UART_SetConfig+0x68>
 800e6d2:	687b      	ldr	r3, [r7, #4]
 800e6d4:	6a1b      	ldr	r3, [r3, #32]
 800e6d6:	69fa      	ldr	r2, [r7, #28]
 800e6d8:	4313      	orrs	r3, r2
 800e6da:	61fb      	str	r3, [r7, #28]
 800e6dc:	687b      	ldr	r3, [r7, #4]
 800e6de:	681b      	ldr	r3, [r3, #0]
 800e6e0:	689b      	ldr	r3, [r3, #8]
 800e6e2:	f023 436e 	bic.w	r3, r3, #3992977408	; 0xee000000
 800e6e6:	f423 6330 	bic.w	r3, r3, #2816	; 0xb00
 800e6ea:	687a      	ldr	r2, [r7, #4]
 800e6ec:	6812      	ldr	r2, [r2, #0]
 800e6ee:	69f9      	ldr	r1, [r7, #28]
 800e6f0:	430b      	orrs	r3, r1
 800e6f2:	6093      	str	r3, [r2, #8]
 800e6f4:	687b      	ldr	r3, [r7, #4]
 800e6f6:	681b      	ldr	r3, [r3, #0]
 800e6f8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e6fa:	f023 010f 	bic.w	r1, r3, #15
 800e6fe:	687b      	ldr	r3, [r7, #4]
 800e700:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 800e702:	687b      	ldr	r3, [r7, #4]
 800e704:	681b      	ldr	r3, [r3, #0]
 800e706:	430a      	orrs	r2, r1
 800e708:	62da      	str	r2, [r3, #44]	; 0x2c
 800e70a:	687b      	ldr	r3, [r7, #4]
 800e70c:	681b      	ldr	r3, [r3, #0]
 800e70e:	4a91      	ldr	r2, [pc, #580]	; (800e954 <UART_SetConfig+0x2e0>)
 800e710:	4293      	cmp	r3, r2
 800e712:	d122      	bne.n	800e75a <UART_SetConfig+0xe6>
 800e714:	2003      	movs	r0, #3
 800e716:	f7ff fc3b 	bl	800df90 <LL_RCC_GetUSARTClockSource>
 800e71a:	4603      	mov	r3, r0
 800e71c:	f5a3 3340 	sub.w	r3, r3, #196608	; 0x30000
 800e720:	2b03      	cmp	r3, #3
 800e722:	d817      	bhi.n	800e754 <UART_SetConfig+0xe0>
 800e724:	a201      	add	r2, pc, #4	; (adr r2, 800e72c <UART_SetConfig+0xb8>)
 800e726:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800e72a:	bf00      	nop
 800e72c:	0800e73d 	.word	0x0800e73d
 800e730:	0800e749 	.word	0x0800e749
 800e734:	0800e743 	.word	0x0800e743
 800e738:	0800e74f 	.word	0x0800e74f
 800e73c:	2301      	movs	r3, #1
 800e73e:	76fb      	strb	r3, [r7, #27]
 800e740:	e072      	b.n	800e828 <UART_SetConfig+0x1b4>
 800e742:	2302      	movs	r3, #2
 800e744:	76fb      	strb	r3, [r7, #27]
 800e746:	e06f      	b.n	800e828 <UART_SetConfig+0x1b4>
 800e748:	2304      	movs	r3, #4
 800e74a:	76fb      	strb	r3, [r7, #27]
 800e74c:	e06c      	b.n	800e828 <UART_SetConfig+0x1b4>
 800e74e:	2308      	movs	r3, #8
 800e750:	76fb      	strb	r3, [r7, #27]
 800e752:	e069      	b.n	800e828 <UART_SetConfig+0x1b4>
 800e754:	2310      	movs	r3, #16
 800e756:	76fb      	strb	r3, [r7, #27]
 800e758:	e066      	b.n	800e828 <UART_SetConfig+0x1b4>
 800e75a:	687b      	ldr	r3, [r7, #4]
 800e75c:	681b      	ldr	r3, [r3, #0]
 800e75e:	4a7e      	ldr	r2, [pc, #504]	; (800e958 <UART_SetConfig+0x2e4>)
 800e760:	4293      	cmp	r3, r2
 800e762:	d134      	bne.n	800e7ce <UART_SetConfig+0x15a>
 800e764:	200c      	movs	r0, #12
 800e766:	f7ff fc13 	bl	800df90 <LL_RCC_GetUSARTClockSource>
 800e76a:	4603      	mov	r3, r0
 800e76c:	f5a3 2340 	sub.w	r3, r3, #786432	; 0xc0000
 800e770:	2b0c      	cmp	r3, #12
 800e772:	d829      	bhi.n	800e7c8 <UART_SetConfig+0x154>
 800e774:	a201      	add	r2, pc, #4	; (adr r2, 800e77c <UART_SetConfig+0x108>)
 800e776:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800e77a:	bf00      	nop
 800e77c:	0800e7b1 	.word	0x0800e7b1
 800e780:	0800e7c9 	.word	0x0800e7c9
 800e784:	0800e7c9 	.word	0x0800e7c9
 800e788:	0800e7c9 	.word	0x0800e7c9
 800e78c:	0800e7bd 	.word	0x0800e7bd
 800e790:	0800e7c9 	.word	0x0800e7c9
 800e794:	0800e7c9 	.word	0x0800e7c9
 800e798:	0800e7c9 	.word	0x0800e7c9
 800e79c:	0800e7b7 	.word	0x0800e7b7
 800e7a0:	0800e7c9 	.word	0x0800e7c9
 800e7a4:	0800e7c9 	.word	0x0800e7c9
 800e7a8:	0800e7c9 	.word	0x0800e7c9
 800e7ac:	0800e7c3 	.word	0x0800e7c3
 800e7b0:	2300      	movs	r3, #0
 800e7b2:	76fb      	strb	r3, [r7, #27]
 800e7b4:	e038      	b.n	800e828 <UART_SetConfig+0x1b4>
 800e7b6:	2302      	movs	r3, #2
 800e7b8:	76fb      	strb	r3, [r7, #27]
 800e7ba:	e035      	b.n	800e828 <UART_SetConfig+0x1b4>
 800e7bc:	2304      	movs	r3, #4
 800e7be:	76fb      	strb	r3, [r7, #27]
 800e7c0:	e032      	b.n	800e828 <UART_SetConfig+0x1b4>
 800e7c2:	2308      	movs	r3, #8
 800e7c4:	76fb      	strb	r3, [r7, #27]
 800e7c6:	e02f      	b.n	800e828 <UART_SetConfig+0x1b4>
 800e7c8:	2310      	movs	r3, #16
 800e7ca:	76fb      	strb	r3, [r7, #27]
 800e7cc:	e02c      	b.n	800e828 <UART_SetConfig+0x1b4>
 800e7ce:	687b      	ldr	r3, [r7, #4]
 800e7d0:	681b      	ldr	r3, [r3, #0]
 800e7d2:	4a5f      	ldr	r2, [pc, #380]	; (800e950 <UART_SetConfig+0x2dc>)
 800e7d4:	4293      	cmp	r3, r2
 800e7d6:	d125      	bne.n	800e824 <UART_SetConfig+0x1b0>
 800e7d8:	f44f 6040 	mov.w	r0, #3072	; 0xc00
 800e7dc:	f7ff fbea 	bl	800dfb4 <LL_RCC_GetLPUARTClockSource>
 800e7e0:	4603      	mov	r3, r0
 800e7e2:	f5b3 6f40 	cmp.w	r3, #3072	; 0xc00
 800e7e6:	d017      	beq.n	800e818 <UART_SetConfig+0x1a4>
 800e7e8:	f5b3 6f40 	cmp.w	r3, #3072	; 0xc00
 800e7ec:	d817      	bhi.n	800e81e <UART_SetConfig+0x1aa>
 800e7ee:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 800e7f2:	d00b      	beq.n	800e80c <UART_SetConfig+0x198>
 800e7f4:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 800e7f8:	d811      	bhi.n	800e81e <UART_SetConfig+0x1aa>
 800e7fa:	2b00      	cmp	r3, #0
 800e7fc:	d003      	beq.n	800e806 <UART_SetConfig+0x192>
 800e7fe:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800e802:	d006      	beq.n	800e812 <UART_SetConfig+0x19e>
 800e804:	e00b      	b.n	800e81e <UART_SetConfig+0x1aa>
 800e806:	2300      	movs	r3, #0
 800e808:	76fb      	strb	r3, [r7, #27]
 800e80a:	e00d      	b.n	800e828 <UART_SetConfig+0x1b4>
 800e80c:	2302      	movs	r3, #2
 800e80e:	76fb      	strb	r3, [r7, #27]
 800e810:	e00a      	b.n	800e828 <UART_SetConfig+0x1b4>
 800e812:	2304      	movs	r3, #4
 800e814:	76fb      	strb	r3, [r7, #27]
 800e816:	e007      	b.n	800e828 <UART_SetConfig+0x1b4>
 800e818:	2308      	movs	r3, #8
 800e81a:	76fb      	strb	r3, [r7, #27]
 800e81c:	e004      	b.n	800e828 <UART_SetConfig+0x1b4>
 800e81e:	2310      	movs	r3, #16
 800e820:	76fb      	strb	r3, [r7, #27]
 800e822:	e001      	b.n	800e828 <UART_SetConfig+0x1b4>
 800e824:	2310      	movs	r3, #16
 800e826:	76fb      	strb	r3, [r7, #27]
 800e828:	687b      	ldr	r3, [r7, #4]
 800e82a:	681b      	ldr	r3, [r3, #0]
 800e82c:	4a48      	ldr	r2, [pc, #288]	; (800e950 <UART_SetConfig+0x2dc>)
 800e82e:	4293      	cmp	r3, r2
 800e830:	f040 8098 	bne.w	800e964 <UART_SetConfig+0x2f0>
 800e834:	7efb      	ldrb	r3, [r7, #27]
 800e836:	2b08      	cmp	r3, #8
 800e838:	d823      	bhi.n	800e882 <UART_SetConfig+0x20e>
 800e83a:	a201      	add	r2, pc, #4	; (adr r2, 800e840 <UART_SetConfig+0x1cc>)
 800e83c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800e840:	0800e865 	.word	0x0800e865
 800e844:	0800e883 	.word	0x0800e883
 800e848:	0800e86d 	.word	0x0800e86d
 800e84c:	0800e883 	.word	0x0800e883
 800e850:	0800e873 	.word	0x0800e873
 800e854:	0800e883 	.word	0x0800e883
 800e858:	0800e883 	.word	0x0800e883
 800e85c:	0800e883 	.word	0x0800e883
 800e860:	0800e87b 	.word	0x0800e87b
 800e864:	f7fd fe1e 	bl	800c4a4 <HAL_RCC_GetPCLK1Freq>
 800e868:	6178      	str	r0, [r7, #20]
 800e86a:	e00f      	b.n	800e88c <UART_SetConfig+0x218>
 800e86c:	4b3b      	ldr	r3, [pc, #236]	; (800e95c <UART_SetConfig+0x2e8>)
 800e86e:	617b      	str	r3, [r7, #20]
 800e870:	e00c      	b.n	800e88c <UART_SetConfig+0x218>
 800e872:	f7fd fd63 	bl	800c33c <HAL_RCC_GetSysClockFreq>
 800e876:	6178      	str	r0, [r7, #20]
 800e878:	e008      	b.n	800e88c <UART_SetConfig+0x218>
 800e87a:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 800e87e:	617b      	str	r3, [r7, #20]
 800e880:	e004      	b.n	800e88c <UART_SetConfig+0x218>
 800e882:	2300      	movs	r3, #0
 800e884:	617b      	str	r3, [r7, #20]
 800e886:	2301      	movs	r3, #1
 800e888:	76bb      	strb	r3, [r7, #26]
 800e88a:	bf00      	nop
 800e88c:	697b      	ldr	r3, [r7, #20]
 800e88e:	2b00      	cmp	r3, #0
 800e890:	f000 8128 	beq.w	800eae4 <UART_SetConfig+0x470>
 800e894:	687b      	ldr	r3, [r7, #4]
 800e896:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800e898:	4a31      	ldr	r2, [pc, #196]	; (800e960 <UART_SetConfig+0x2ec>)
 800e89a:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 800e89e:	461a      	mov	r2, r3
 800e8a0:	697b      	ldr	r3, [r7, #20]
 800e8a2:	fbb3 f3f2 	udiv	r3, r3, r2
 800e8a6:	60bb      	str	r3, [r7, #8]
 800e8a8:	687b      	ldr	r3, [r7, #4]
 800e8aa:	685a      	ldr	r2, [r3, #4]
 800e8ac:	4613      	mov	r3, r2
 800e8ae:	005b      	lsls	r3, r3, #1
 800e8b0:	4413      	add	r3, r2
 800e8b2:	68ba      	ldr	r2, [r7, #8]
 800e8b4:	429a      	cmp	r2, r3
 800e8b6:	d305      	bcc.n	800e8c4 <UART_SetConfig+0x250>
 800e8b8:	687b      	ldr	r3, [r7, #4]
 800e8ba:	685b      	ldr	r3, [r3, #4]
 800e8bc:	031b      	lsls	r3, r3, #12
 800e8be:	68ba      	ldr	r2, [r7, #8]
 800e8c0:	429a      	cmp	r2, r3
 800e8c2:	d902      	bls.n	800e8ca <UART_SetConfig+0x256>
 800e8c4:	2301      	movs	r3, #1
 800e8c6:	76bb      	strb	r3, [r7, #26]
 800e8c8:	e10c      	b.n	800eae4 <UART_SetConfig+0x470>
 800e8ca:	697b      	ldr	r3, [r7, #20]
 800e8cc:	4618      	mov	r0, r3
 800e8ce:	f04f 0100 	mov.w	r1, #0
 800e8d2:	687b      	ldr	r3, [r7, #4]
 800e8d4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800e8d6:	4a22      	ldr	r2, [pc, #136]	; (800e960 <UART_SetConfig+0x2ec>)
 800e8d8:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 800e8dc:	b29a      	uxth	r2, r3
 800e8de:	f04f 0300 	mov.w	r3, #0
 800e8e2:	f7f2 fcb9 	bl	8001258 <__aeabi_uldivmod>
 800e8e6:	4602      	mov	r2, r0
 800e8e8:	460b      	mov	r3, r1
 800e8ea:	4610      	mov	r0, r2
 800e8ec:	4619      	mov	r1, r3
 800e8ee:	f04f 0200 	mov.w	r2, #0
 800e8f2:	f04f 0300 	mov.w	r3, #0
 800e8f6:	020b      	lsls	r3, r1, #8
 800e8f8:	ea43 6310 	orr.w	r3, r3, r0, lsr #24
 800e8fc:	0202      	lsls	r2, r0, #8
 800e8fe:	6879      	ldr	r1, [r7, #4]
 800e900:	6849      	ldr	r1, [r1, #4]
 800e902:	0849      	lsrs	r1, r1, #1
 800e904:	4608      	mov	r0, r1
 800e906:	f04f 0100 	mov.w	r1, #0
 800e90a:	1814      	adds	r4, r2, r0
 800e90c:	eb43 0501 	adc.w	r5, r3, r1
 800e910:	687b      	ldr	r3, [r7, #4]
 800e912:	685b      	ldr	r3, [r3, #4]
 800e914:	461a      	mov	r2, r3
 800e916:	f04f 0300 	mov.w	r3, #0
 800e91a:	4620      	mov	r0, r4
 800e91c:	4629      	mov	r1, r5
 800e91e:	f7f2 fc9b 	bl	8001258 <__aeabi_uldivmod>
 800e922:	4602      	mov	r2, r0
 800e924:	460b      	mov	r3, r1
 800e926:	4613      	mov	r3, r2
 800e928:	613b      	str	r3, [r7, #16]
 800e92a:	693b      	ldr	r3, [r7, #16]
 800e92c:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 800e930:	d308      	bcc.n	800e944 <UART_SetConfig+0x2d0>
 800e932:	693b      	ldr	r3, [r7, #16]
 800e934:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 800e938:	d204      	bcs.n	800e944 <UART_SetConfig+0x2d0>
 800e93a:	687b      	ldr	r3, [r7, #4]
 800e93c:	681b      	ldr	r3, [r3, #0]
 800e93e:	693a      	ldr	r2, [r7, #16]
 800e940:	60da      	str	r2, [r3, #12]
 800e942:	e0cf      	b.n	800eae4 <UART_SetConfig+0x470>
 800e944:	2301      	movs	r3, #1
 800e946:	76bb      	strb	r3, [r7, #26]
 800e948:	e0cc      	b.n	800eae4 <UART_SetConfig+0x470>
 800e94a:	bf00      	nop
 800e94c:	cfff69f3 	.word	0xcfff69f3
 800e950:	40008000 	.word	0x40008000
 800e954:	40013800 	.word	0x40013800
 800e958:	40004400 	.word	0x40004400
 800e95c:	00f42400 	.word	0x00f42400
 800e960:	080263ac 	.word	0x080263ac
 800e964:	687b      	ldr	r3, [r7, #4]
 800e966:	69db      	ldr	r3, [r3, #28]
 800e968:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 800e96c:	d165      	bne.n	800ea3a <UART_SetConfig+0x3c6>
 800e96e:	7efb      	ldrb	r3, [r7, #27]
 800e970:	2b08      	cmp	r3, #8
 800e972:	d828      	bhi.n	800e9c6 <UART_SetConfig+0x352>
 800e974:	a201      	add	r2, pc, #4	; (adr r2, 800e97c <UART_SetConfig+0x308>)
 800e976:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800e97a:	bf00      	nop
 800e97c:	0800e9a1 	.word	0x0800e9a1
 800e980:	0800e9a9 	.word	0x0800e9a9
 800e984:	0800e9b1 	.word	0x0800e9b1
 800e988:	0800e9c7 	.word	0x0800e9c7
 800e98c:	0800e9b7 	.word	0x0800e9b7
 800e990:	0800e9c7 	.word	0x0800e9c7
 800e994:	0800e9c7 	.word	0x0800e9c7
 800e998:	0800e9c7 	.word	0x0800e9c7
 800e99c:	0800e9bf 	.word	0x0800e9bf
 800e9a0:	f7fd fd80 	bl	800c4a4 <HAL_RCC_GetPCLK1Freq>
 800e9a4:	6178      	str	r0, [r7, #20]
 800e9a6:	e013      	b.n	800e9d0 <UART_SetConfig+0x35c>
 800e9a8:	f7fd fd8e 	bl	800c4c8 <HAL_RCC_GetPCLK2Freq>
 800e9ac:	6178      	str	r0, [r7, #20]
 800e9ae:	e00f      	b.n	800e9d0 <UART_SetConfig+0x35c>
 800e9b0:	4b56      	ldr	r3, [pc, #344]	; (800eb0c <UART_SetConfig+0x498>)
 800e9b2:	617b      	str	r3, [r7, #20]
 800e9b4:	e00c      	b.n	800e9d0 <UART_SetConfig+0x35c>
 800e9b6:	f7fd fcc1 	bl	800c33c <HAL_RCC_GetSysClockFreq>
 800e9ba:	6178      	str	r0, [r7, #20]
 800e9bc:	e008      	b.n	800e9d0 <UART_SetConfig+0x35c>
 800e9be:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 800e9c2:	617b      	str	r3, [r7, #20]
 800e9c4:	e004      	b.n	800e9d0 <UART_SetConfig+0x35c>
 800e9c6:	2300      	movs	r3, #0
 800e9c8:	617b      	str	r3, [r7, #20]
 800e9ca:	2301      	movs	r3, #1
 800e9cc:	76bb      	strb	r3, [r7, #26]
 800e9ce:	bf00      	nop
 800e9d0:	697b      	ldr	r3, [r7, #20]
 800e9d2:	2b00      	cmp	r3, #0
 800e9d4:	f000 8086 	beq.w	800eae4 <UART_SetConfig+0x470>
 800e9d8:	687b      	ldr	r3, [r7, #4]
 800e9da:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800e9dc:	4a4c      	ldr	r2, [pc, #304]	; (800eb10 <UART_SetConfig+0x49c>)
 800e9de:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 800e9e2:	461a      	mov	r2, r3
 800e9e4:	697b      	ldr	r3, [r7, #20]
 800e9e6:	fbb3 f3f2 	udiv	r3, r3, r2
 800e9ea:	005a      	lsls	r2, r3, #1
 800e9ec:	687b      	ldr	r3, [r7, #4]
 800e9ee:	685b      	ldr	r3, [r3, #4]
 800e9f0:	085b      	lsrs	r3, r3, #1
 800e9f2:	441a      	add	r2, r3
 800e9f4:	687b      	ldr	r3, [r7, #4]
 800e9f6:	685b      	ldr	r3, [r3, #4]
 800e9f8:	fbb2 f3f3 	udiv	r3, r2, r3
 800e9fc:	b29b      	uxth	r3, r3
 800e9fe:	613b      	str	r3, [r7, #16]
 800ea00:	693b      	ldr	r3, [r7, #16]
 800ea02:	2b0f      	cmp	r3, #15
 800ea04:	d916      	bls.n	800ea34 <UART_SetConfig+0x3c0>
 800ea06:	693b      	ldr	r3, [r7, #16]
 800ea08:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800ea0c:	d212      	bcs.n	800ea34 <UART_SetConfig+0x3c0>
 800ea0e:	693b      	ldr	r3, [r7, #16]
 800ea10:	b29b      	uxth	r3, r3
 800ea12:	f023 030f 	bic.w	r3, r3, #15
 800ea16:	81fb      	strh	r3, [r7, #14]
 800ea18:	693b      	ldr	r3, [r7, #16]
 800ea1a:	085b      	lsrs	r3, r3, #1
 800ea1c:	b29b      	uxth	r3, r3
 800ea1e:	f003 0307 	and.w	r3, r3, #7
 800ea22:	b29a      	uxth	r2, r3
 800ea24:	89fb      	ldrh	r3, [r7, #14]
 800ea26:	4313      	orrs	r3, r2
 800ea28:	81fb      	strh	r3, [r7, #14]
 800ea2a:	687b      	ldr	r3, [r7, #4]
 800ea2c:	681b      	ldr	r3, [r3, #0]
 800ea2e:	89fa      	ldrh	r2, [r7, #14]
 800ea30:	60da      	str	r2, [r3, #12]
 800ea32:	e057      	b.n	800eae4 <UART_SetConfig+0x470>
 800ea34:	2301      	movs	r3, #1
 800ea36:	76bb      	strb	r3, [r7, #26]
 800ea38:	e054      	b.n	800eae4 <UART_SetConfig+0x470>
 800ea3a:	7efb      	ldrb	r3, [r7, #27]
 800ea3c:	2b08      	cmp	r3, #8
 800ea3e:	d828      	bhi.n	800ea92 <UART_SetConfig+0x41e>
 800ea40:	a201      	add	r2, pc, #4	; (adr r2, 800ea48 <UART_SetConfig+0x3d4>)
 800ea42:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800ea46:	bf00      	nop
 800ea48:	0800ea6d 	.word	0x0800ea6d
 800ea4c:	0800ea75 	.word	0x0800ea75
 800ea50:	0800ea7d 	.word	0x0800ea7d
 800ea54:	0800ea93 	.word	0x0800ea93
 800ea58:	0800ea83 	.word	0x0800ea83
 800ea5c:	0800ea93 	.word	0x0800ea93
 800ea60:	0800ea93 	.word	0x0800ea93
 800ea64:	0800ea93 	.word	0x0800ea93
 800ea68:	0800ea8b 	.word	0x0800ea8b
 800ea6c:	f7fd fd1a 	bl	800c4a4 <HAL_RCC_GetPCLK1Freq>
 800ea70:	6178      	str	r0, [r7, #20]
 800ea72:	e013      	b.n	800ea9c <UART_SetConfig+0x428>
 800ea74:	f7fd fd28 	bl	800c4c8 <HAL_RCC_GetPCLK2Freq>
 800ea78:	6178      	str	r0, [r7, #20]
 800ea7a:	e00f      	b.n	800ea9c <UART_SetConfig+0x428>
 800ea7c:	4b23      	ldr	r3, [pc, #140]	; (800eb0c <UART_SetConfig+0x498>)
 800ea7e:	617b      	str	r3, [r7, #20]
 800ea80:	e00c      	b.n	800ea9c <UART_SetConfig+0x428>
 800ea82:	f7fd fc5b 	bl	800c33c <HAL_RCC_GetSysClockFreq>
 800ea86:	6178      	str	r0, [r7, #20]
 800ea88:	e008      	b.n	800ea9c <UART_SetConfig+0x428>
 800ea8a:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 800ea8e:	617b      	str	r3, [r7, #20]
 800ea90:	e004      	b.n	800ea9c <UART_SetConfig+0x428>
 800ea92:	2300      	movs	r3, #0
 800ea94:	617b      	str	r3, [r7, #20]
 800ea96:	2301      	movs	r3, #1
 800ea98:	76bb      	strb	r3, [r7, #26]
 800ea9a:	bf00      	nop
 800ea9c:	697b      	ldr	r3, [r7, #20]
 800ea9e:	2b00      	cmp	r3, #0
 800eaa0:	d020      	beq.n	800eae4 <UART_SetConfig+0x470>
 800eaa2:	687b      	ldr	r3, [r7, #4]
 800eaa4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800eaa6:	4a1a      	ldr	r2, [pc, #104]	; (800eb10 <UART_SetConfig+0x49c>)
 800eaa8:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 800eaac:	461a      	mov	r2, r3
 800eaae:	697b      	ldr	r3, [r7, #20]
 800eab0:	fbb3 f2f2 	udiv	r2, r3, r2
 800eab4:	687b      	ldr	r3, [r7, #4]
 800eab6:	685b      	ldr	r3, [r3, #4]
 800eab8:	085b      	lsrs	r3, r3, #1
 800eaba:	441a      	add	r2, r3
 800eabc:	687b      	ldr	r3, [r7, #4]
 800eabe:	685b      	ldr	r3, [r3, #4]
 800eac0:	fbb2 f3f3 	udiv	r3, r2, r3
 800eac4:	b29b      	uxth	r3, r3
 800eac6:	613b      	str	r3, [r7, #16]
 800eac8:	693b      	ldr	r3, [r7, #16]
 800eaca:	2b0f      	cmp	r3, #15
 800eacc:	d908      	bls.n	800eae0 <UART_SetConfig+0x46c>
 800eace:	693b      	ldr	r3, [r7, #16]
 800ead0:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800ead4:	d204      	bcs.n	800eae0 <UART_SetConfig+0x46c>
 800ead6:	687b      	ldr	r3, [r7, #4]
 800ead8:	681b      	ldr	r3, [r3, #0]
 800eada:	693a      	ldr	r2, [r7, #16]
 800eadc:	60da      	str	r2, [r3, #12]
 800eade:	e001      	b.n	800eae4 <UART_SetConfig+0x470>
 800eae0:	2301      	movs	r3, #1
 800eae2:	76bb      	strb	r3, [r7, #26]
 800eae4:	687b      	ldr	r3, [r7, #4]
 800eae6:	2201      	movs	r2, #1
 800eae8:	f8a3 206a 	strh.w	r2, [r3, #106]	; 0x6a
 800eaec:	687b      	ldr	r3, [r7, #4]
 800eaee:	2201      	movs	r2, #1
 800eaf0:	f8a3 2068 	strh.w	r2, [r3, #104]	; 0x68
 800eaf4:	687b      	ldr	r3, [r7, #4]
 800eaf6:	2200      	movs	r2, #0
 800eaf8:	671a      	str	r2, [r3, #112]	; 0x70
 800eafa:	687b      	ldr	r3, [r7, #4]
 800eafc:	2200      	movs	r2, #0
 800eafe:	675a      	str	r2, [r3, #116]	; 0x74
 800eb00:	7ebb      	ldrb	r3, [r7, #26]
 800eb02:	4618      	mov	r0, r3
 800eb04:	3720      	adds	r7, #32
 800eb06:	46bd      	mov	sp, r7
 800eb08:	bdb0      	pop	{r4, r5, r7, pc}
 800eb0a:	bf00      	nop
 800eb0c:	00f42400 	.word	0x00f42400
 800eb10:	080263ac 	.word	0x080263ac

0800eb14 <UART_AdvFeatureConfig>:
 800eb14:	b480      	push	{r7}
 800eb16:	b083      	sub	sp, #12
 800eb18:	af00      	add	r7, sp, #0
 800eb1a:	6078      	str	r0, [r7, #4]
 800eb1c:	687b      	ldr	r3, [r7, #4]
 800eb1e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800eb20:	f003 0301 	and.w	r3, r3, #1
 800eb24:	2b00      	cmp	r3, #0
 800eb26:	d00a      	beq.n	800eb3e <UART_AdvFeatureConfig+0x2a>
 800eb28:	687b      	ldr	r3, [r7, #4]
 800eb2a:	681b      	ldr	r3, [r3, #0]
 800eb2c:	685b      	ldr	r3, [r3, #4]
 800eb2e:	f423 3100 	bic.w	r1, r3, #131072	; 0x20000
 800eb32:	687b      	ldr	r3, [r7, #4]
 800eb34:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800eb36:	687b      	ldr	r3, [r7, #4]
 800eb38:	681b      	ldr	r3, [r3, #0]
 800eb3a:	430a      	orrs	r2, r1
 800eb3c:	605a      	str	r2, [r3, #4]
 800eb3e:	687b      	ldr	r3, [r7, #4]
 800eb40:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800eb42:	f003 0302 	and.w	r3, r3, #2
 800eb46:	2b00      	cmp	r3, #0
 800eb48:	d00a      	beq.n	800eb60 <UART_AdvFeatureConfig+0x4c>
 800eb4a:	687b      	ldr	r3, [r7, #4]
 800eb4c:	681b      	ldr	r3, [r3, #0]
 800eb4e:	685b      	ldr	r3, [r3, #4]
 800eb50:	f423 3180 	bic.w	r1, r3, #65536	; 0x10000
 800eb54:	687b      	ldr	r3, [r7, #4]
 800eb56:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800eb58:	687b      	ldr	r3, [r7, #4]
 800eb5a:	681b      	ldr	r3, [r3, #0]
 800eb5c:	430a      	orrs	r2, r1
 800eb5e:	605a      	str	r2, [r3, #4]
 800eb60:	687b      	ldr	r3, [r7, #4]
 800eb62:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800eb64:	f003 0304 	and.w	r3, r3, #4
 800eb68:	2b00      	cmp	r3, #0
 800eb6a:	d00a      	beq.n	800eb82 <UART_AdvFeatureConfig+0x6e>
 800eb6c:	687b      	ldr	r3, [r7, #4]
 800eb6e:	681b      	ldr	r3, [r3, #0]
 800eb70:	685b      	ldr	r3, [r3, #4]
 800eb72:	f423 2180 	bic.w	r1, r3, #262144	; 0x40000
 800eb76:	687b      	ldr	r3, [r7, #4]
 800eb78:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800eb7a:	687b      	ldr	r3, [r7, #4]
 800eb7c:	681b      	ldr	r3, [r3, #0]
 800eb7e:	430a      	orrs	r2, r1
 800eb80:	605a      	str	r2, [r3, #4]
 800eb82:	687b      	ldr	r3, [r7, #4]
 800eb84:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800eb86:	f003 0308 	and.w	r3, r3, #8
 800eb8a:	2b00      	cmp	r3, #0
 800eb8c:	d00a      	beq.n	800eba4 <UART_AdvFeatureConfig+0x90>
 800eb8e:	687b      	ldr	r3, [r7, #4]
 800eb90:	681b      	ldr	r3, [r3, #0]
 800eb92:	685b      	ldr	r3, [r3, #4]
 800eb94:	f423 4100 	bic.w	r1, r3, #32768	; 0x8000
 800eb98:	687b      	ldr	r3, [r7, #4]
 800eb9a:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800eb9c:	687b      	ldr	r3, [r7, #4]
 800eb9e:	681b      	ldr	r3, [r3, #0]
 800eba0:	430a      	orrs	r2, r1
 800eba2:	605a      	str	r2, [r3, #4]
 800eba4:	687b      	ldr	r3, [r7, #4]
 800eba6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800eba8:	f003 0310 	and.w	r3, r3, #16
 800ebac:	2b00      	cmp	r3, #0
 800ebae:	d00a      	beq.n	800ebc6 <UART_AdvFeatureConfig+0xb2>
 800ebb0:	687b      	ldr	r3, [r7, #4]
 800ebb2:	681b      	ldr	r3, [r3, #0]
 800ebb4:	689b      	ldr	r3, [r3, #8]
 800ebb6:	f423 5180 	bic.w	r1, r3, #4096	; 0x1000
 800ebba:	687b      	ldr	r3, [r7, #4]
 800ebbc:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 800ebbe:	687b      	ldr	r3, [r7, #4]
 800ebc0:	681b      	ldr	r3, [r3, #0]
 800ebc2:	430a      	orrs	r2, r1
 800ebc4:	609a      	str	r2, [r3, #8]
 800ebc6:	687b      	ldr	r3, [r7, #4]
 800ebc8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800ebca:	f003 0320 	and.w	r3, r3, #32
 800ebce:	2b00      	cmp	r3, #0
 800ebd0:	d00a      	beq.n	800ebe8 <UART_AdvFeatureConfig+0xd4>
 800ebd2:	687b      	ldr	r3, [r7, #4]
 800ebd4:	681b      	ldr	r3, [r3, #0]
 800ebd6:	689b      	ldr	r3, [r3, #8]
 800ebd8:	f423 5100 	bic.w	r1, r3, #8192	; 0x2000
 800ebdc:	687b      	ldr	r3, [r7, #4]
 800ebde:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800ebe0:	687b      	ldr	r3, [r7, #4]
 800ebe2:	681b      	ldr	r3, [r3, #0]
 800ebe4:	430a      	orrs	r2, r1
 800ebe6:	609a      	str	r2, [r3, #8]
 800ebe8:	687b      	ldr	r3, [r7, #4]
 800ebea:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800ebec:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800ebf0:	2b00      	cmp	r3, #0
 800ebf2:	d01a      	beq.n	800ec2a <UART_AdvFeatureConfig+0x116>
 800ebf4:	687b      	ldr	r3, [r7, #4]
 800ebf6:	681b      	ldr	r3, [r3, #0]
 800ebf8:	685b      	ldr	r3, [r3, #4]
 800ebfa:	f423 1180 	bic.w	r1, r3, #1048576	; 0x100000
 800ebfe:	687b      	ldr	r3, [r7, #4]
 800ec00:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 800ec02:	687b      	ldr	r3, [r7, #4]
 800ec04:	681b      	ldr	r3, [r3, #0]
 800ec06:	430a      	orrs	r2, r1
 800ec08:	605a      	str	r2, [r3, #4]
 800ec0a:	687b      	ldr	r3, [r7, #4]
 800ec0c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800ec0e:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 800ec12:	d10a      	bne.n	800ec2a <UART_AdvFeatureConfig+0x116>
 800ec14:	687b      	ldr	r3, [r7, #4]
 800ec16:	681b      	ldr	r3, [r3, #0]
 800ec18:	685b      	ldr	r3, [r3, #4]
 800ec1a:	f423 01c0 	bic.w	r1, r3, #6291456	; 0x600000
 800ec1e:	687b      	ldr	r3, [r7, #4]
 800ec20:	6c9a      	ldr	r2, [r3, #72]	; 0x48
 800ec22:	687b      	ldr	r3, [r7, #4]
 800ec24:	681b      	ldr	r3, [r3, #0]
 800ec26:	430a      	orrs	r2, r1
 800ec28:	605a      	str	r2, [r3, #4]
 800ec2a:	687b      	ldr	r3, [r7, #4]
 800ec2c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800ec2e:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800ec32:	2b00      	cmp	r3, #0
 800ec34:	d00a      	beq.n	800ec4c <UART_AdvFeatureConfig+0x138>
 800ec36:	687b      	ldr	r3, [r7, #4]
 800ec38:	681b      	ldr	r3, [r3, #0]
 800ec3a:	685b      	ldr	r3, [r3, #4]
 800ec3c:	f423 2100 	bic.w	r1, r3, #524288	; 0x80000
 800ec40:	687b      	ldr	r3, [r7, #4]
 800ec42:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 800ec44:	687b      	ldr	r3, [r7, #4]
 800ec46:	681b      	ldr	r3, [r3, #0]
 800ec48:	430a      	orrs	r2, r1
 800ec4a:	605a      	str	r2, [r3, #4]
 800ec4c:	bf00      	nop
 800ec4e:	370c      	adds	r7, #12
 800ec50:	46bd      	mov	sp, r7
 800ec52:	bc80      	pop	{r7}
 800ec54:	4770      	bx	lr

0800ec56 <UART_CheckIdleState>:
 800ec56:	b580      	push	{r7, lr}
 800ec58:	b086      	sub	sp, #24
 800ec5a:	af02      	add	r7, sp, #8
 800ec5c:	6078      	str	r0, [r7, #4]
 800ec5e:	687b      	ldr	r3, [r7, #4]
 800ec60:	2200      	movs	r2, #0
 800ec62:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
 800ec66:	f7f7 fbb5 	bl	80063d4 <HAL_GetTick>
 800ec6a:	60f8      	str	r0, [r7, #12]
 800ec6c:	687b      	ldr	r3, [r7, #4]
 800ec6e:	681b      	ldr	r3, [r3, #0]
 800ec70:	681b      	ldr	r3, [r3, #0]
 800ec72:	f003 0308 	and.w	r3, r3, #8
 800ec76:	2b08      	cmp	r3, #8
 800ec78:	d10e      	bne.n	800ec98 <UART_CheckIdleState+0x42>
 800ec7a:	f06f 437e 	mvn.w	r3, #4261412864	; 0xfe000000
 800ec7e:	9300      	str	r3, [sp, #0]
 800ec80:	68fb      	ldr	r3, [r7, #12]
 800ec82:	2200      	movs	r2, #0
 800ec84:	f44f 1100 	mov.w	r1, #2097152	; 0x200000
 800ec88:	6878      	ldr	r0, [r7, #4]
 800ec8a:	f000 f82f 	bl	800ecec <UART_WaitOnFlagUntilTimeout>
 800ec8e:	4603      	mov	r3, r0
 800ec90:	2b00      	cmp	r3, #0
 800ec92:	d001      	beq.n	800ec98 <UART_CheckIdleState+0x42>
 800ec94:	2303      	movs	r3, #3
 800ec96:	e025      	b.n	800ece4 <UART_CheckIdleState+0x8e>
 800ec98:	687b      	ldr	r3, [r7, #4]
 800ec9a:	681b      	ldr	r3, [r3, #0]
 800ec9c:	681b      	ldr	r3, [r3, #0]
 800ec9e:	f003 0304 	and.w	r3, r3, #4
 800eca2:	2b04      	cmp	r3, #4
 800eca4:	d10e      	bne.n	800ecc4 <UART_CheckIdleState+0x6e>
 800eca6:	f06f 437e 	mvn.w	r3, #4261412864	; 0xfe000000
 800ecaa:	9300      	str	r3, [sp, #0]
 800ecac:	68fb      	ldr	r3, [r7, #12]
 800ecae:	2200      	movs	r2, #0
 800ecb0:	f44f 0180 	mov.w	r1, #4194304	; 0x400000
 800ecb4:	6878      	ldr	r0, [r7, #4]
 800ecb6:	f000 f819 	bl	800ecec <UART_WaitOnFlagUntilTimeout>
 800ecba:	4603      	mov	r3, r0
 800ecbc:	2b00      	cmp	r3, #0
 800ecbe:	d001      	beq.n	800ecc4 <UART_CheckIdleState+0x6e>
 800ecc0:	2303      	movs	r3, #3
 800ecc2:	e00f      	b.n	800ece4 <UART_CheckIdleState+0x8e>
 800ecc4:	687b      	ldr	r3, [r7, #4]
 800ecc6:	2220      	movs	r2, #32
 800ecc8:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
 800eccc:	687b      	ldr	r3, [r7, #4]
 800ecce:	2220      	movs	r2, #32
 800ecd0:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
 800ecd4:	687b      	ldr	r3, [r7, #4]
 800ecd6:	2200      	movs	r2, #0
 800ecd8:	66da      	str	r2, [r3, #108]	; 0x6c
 800ecda:	687b      	ldr	r3, [r7, #4]
 800ecdc:	2200      	movs	r2, #0
 800ecde:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80
 800ece2:	2300      	movs	r3, #0
 800ece4:	4618      	mov	r0, r3
 800ece6:	3710      	adds	r7, #16
 800ece8:	46bd      	mov	sp, r7
 800ecea:	bd80      	pop	{r7, pc}

0800ecec <UART_WaitOnFlagUntilTimeout>:
 800ecec:	b580      	push	{r7, lr}
 800ecee:	b084      	sub	sp, #16
 800ecf0:	af00      	add	r7, sp, #0
 800ecf2:	60f8      	str	r0, [r7, #12]
 800ecf4:	60b9      	str	r1, [r7, #8]
 800ecf6:	603b      	str	r3, [r7, #0]
 800ecf8:	4613      	mov	r3, r2
 800ecfa:	71fb      	strb	r3, [r7, #7]
 800ecfc:	e062      	b.n	800edc4 <UART_WaitOnFlagUntilTimeout+0xd8>
 800ecfe:	69bb      	ldr	r3, [r7, #24]
 800ed00:	f1b3 3fff 	cmp.w	r3, #4294967295
 800ed04:	d05e      	beq.n	800edc4 <UART_WaitOnFlagUntilTimeout+0xd8>
 800ed06:	f7f7 fb65 	bl	80063d4 <HAL_GetTick>
 800ed0a:	4602      	mov	r2, r0
 800ed0c:	683b      	ldr	r3, [r7, #0]
 800ed0e:	1ad3      	subs	r3, r2, r3
 800ed10:	69ba      	ldr	r2, [r7, #24]
 800ed12:	429a      	cmp	r2, r3
 800ed14:	d302      	bcc.n	800ed1c <UART_WaitOnFlagUntilTimeout+0x30>
 800ed16:	69bb      	ldr	r3, [r7, #24]
 800ed18:	2b00      	cmp	r3, #0
 800ed1a:	d11d      	bne.n	800ed58 <UART_WaitOnFlagUntilTimeout+0x6c>
 800ed1c:	68fb      	ldr	r3, [r7, #12]
 800ed1e:	681b      	ldr	r3, [r3, #0]
 800ed20:	681a      	ldr	r2, [r3, #0]
 800ed22:	68fb      	ldr	r3, [r7, #12]
 800ed24:	681b      	ldr	r3, [r3, #0]
 800ed26:	f422 72d0 	bic.w	r2, r2, #416	; 0x1a0
 800ed2a:	601a      	str	r2, [r3, #0]
 800ed2c:	68fb      	ldr	r3, [r7, #12]
 800ed2e:	681b      	ldr	r3, [r3, #0]
 800ed30:	689a      	ldr	r2, [r3, #8]
 800ed32:	68fb      	ldr	r3, [r7, #12]
 800ed34:	681b      	ldr	r3, [r3, #0]
 800ed36:	f022 0201 	bic.w	r2, r2, #1
 800ed3a:	609a      	str	r2, [r3, #8]
 800ed3c:	68fb      	ldr	r3, [r7, #12]
 800ed3e:	2220      	movs	r2, #32
 800ed40:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
 800ed44:	68fb      	ldr	r3, [r7, #12]
 800ed46:	2220      	movs	r2, #32
 800ed48:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
 800ed4c:	68fb      	ldr	r3, [r7, #12]
 800ed4e:	2200      	movs	r2, #0
 800ed50:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80
 800ed54:	2303      	movs	r3, #3
 800ed56:	e045      	b.n	800ede4 <UART_WaitOnFlagUntilTimeout+0xf8>
 800ed58:	68fb      	ldr	r3, [r7, #12]
 800ed5a:	681b      	ldr	r3, [r3, #0]
 800ed5c:	681b      	ldr	r3, [r3, #0]
 800ed5e:	f003 0304 	and.w	r3, r3, #4
 800ed62:	2b00      	cmp	r3, #0
 800ed64:	d02e      	beq.n	800edc4 <UART_WaitOnFlagUntilTimeout+0xd8>
 800ed66:	68fb      	ldr	r3, [r7, #12]
 800ed68:	681b      	ldr	r3, [r3, #0]
 800ed6a:	69db      	ldr	r3, [r3, #28]
 800ed6c:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 800ed70:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 800ed74:	d126      	bne.n	800edc4 <UART_WaitOnFlagUntilTimeout+0xd8>
 800ed76:	68fb      	ldr	r3, [r7, #12]
 800ed78:	681b      	ldr	r3, [r3, #0]
 800ed7a:	f44f 6200 	mov.w	r2, #2048	; 0x800
 800ed7e:	621a      	str	r2, [r3, #32]
 800ed80:	68fb      	ldr	r3, [r7, #12]
 800ed82:	681b      	ldr	r3, [r3, #0]
 800ed84:	681a      	ldr	r2, [r3, #0]
 800ed86:	68fb      	ldr	r3, [r7, #12]
 800ed88:	681b      	ldr	r3, [r3, #0]
 800ed8a:	f422 72d0 	bic.w	r2, r2, #416	; 0x1a0
 800ed8e:	601a      	str	r2, [r3, #0]
 800ed90:	68fb      	ldr	r3, [r7, #12]
 800ed92:	681b      	ldr	r3, [r3, #0]
 800ed94:	689a      	ldr	r2, [r3, #8]
 800ed96:	68fb      	ldr	r3, [r7, #12]
 800ed98:	681b      	ldr	r3, [r3, #0]
 800ed9a:	f022 0201 	bic.w	r2, r2, #1
 800ed9e:	609a      	str	r2, [r3, #8]
 800eda0:	68fb      	ldr	r3, [r7, #12]
 800eda2:	2220      	movs	r2, #32
 800eda4:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
 800eda8:	68fb      	ldr	r3, [r7, #12]
 800edaa:	2220      	movs	r2, #32
 800edac:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
 800edb0:	68fb      	ldr	r3, [r7, #12]
 800edb2:	2220      	movs	r2, #32
 800edb4:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
 800edb8:	68fb      	ldr	r3, [r7, #12]
 800edba:	2200      	movs	r2, #0
 800edbc:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80
 800edc0:	2303      	movs	r3, #3
 800edc2:	e00f      	b.n	800ede4 <UART_WaitOnFlagUntilTimeout+0xf8>
 800edc4:	68fb      	ldr	r3, [r7, #12]
 800edc6:	681b      	ldr	r3, [r3, #0]
 800edc8:	69da      	ldr	r2, [r3, #28]
 800edca:	68bb      	ldr	r3, [r7, #8]
 800edcc:	4013      	ands	r3, r2
 800edce:	68ba      	ldr	r2, [r7, #8]
 800edd0:	429a      	cmp	r2, r3
 800edd2:	bf0c      	ite	eq
 800edd4:	2301      	moveq	r3, #1
 800edd6:	2300      	movne	r3, #0
 800edd8:	b2db      	uxtb	r3, r3
 800edda:	461a      	mov	r2, r3
 800eddc:	79fb      	ldrb	r3, [r7, #7]
 800edde:	429a      	cmp	r2, r3
 800ede0:	d08d      	beq.n	800ecfe <UART_WaitOnFlagUntilTimeout+0x12>
 800ede2:	2300      	movs	r3, #0
 800ede4:	4618      	mov	r0, r3
 800ede6:	3710      	adds	r7, #16
 800ede8:	46bd      	mov	sp, r7
 800edea:	bd80      	pop	{r7, pc}

0800edec <UART_Start_Receive_IT>:
 800edec:	b480      	push	{r7}
 800edee:	b085      	sub	sp, #20
 800edf0:	af00      	add	r7, sp, #0
 800edf2:	60f8      	str	r0, [r7, #12]
 800edf4:	60b9      	str	r1, [r7, #8]
 800edf6:	4613      	mov	r3, r2
 800edf8:	80fb      	strh	r3, [r7, #6]
 800edfa:	68fb      	ldr	r3, [r7, #12]
 800edfc:	68ba      	ldr	r2, [r7, #8]
 800edfe:	659a      	str	r2, [r3, #88]	; 0x58
 800ee00:	68fb      	ldr	r3, [r7, #12]
 800ee02:	88fa      	ldrh	r2, [r7, #6]
 800ee04:	f8a3 205c 	strh.w	r2, [r3, #92]	; 0x5c
 800ee08:	68fb      	ldr	r3, [r7, #12]
 800ee0a:	88fa      	ldrh	r2, [r7, #6]
 800ee0c:	f8a3 205e 	strh.w	r2, [r3, #94]	; 0x5e
 800ee10:	68fb      	ldr	r3, [r7, #12]
 800ee12:	2200      	movs	r2, #0
 800ee14:	671a      	str	r2, [r3, #112]	; 0x70
 800ee16:	68fb      	ldr	r3, [r7, #12]
 800ee18:	689b      	ldr	r3, [r3, #8]
 800ee1a:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800ee1e:	d10e      	bne.n	800ee3e <UART_Start_Receive_IT+0x52>
 800ee20:	68fb      	ldr	r3, [r7, #12]
 800ee22:	691b      	ldr	r3, [r3, #16]
 800ee24:	2b00      	cmp	r3, #0
 800ee26:	d105      	bne.n	800ee34 <UART_Start_Receive_IT+0x48>
 800ee28:	68fb      	ldr	r3, [r7, #12]
 800ee2a:	f240 12ff 	movw	r2, #511	; 0x1ff
 800ee2e:	f8a3 2060 	strh.w	r2, [r3, #96]	; 0x60
 800ee32:	e02d      	b.n	800ee90 <UART_Start_Receive_IT+0xa4>
 800ee34:	68fb      	ldr	r3, [r7, #12]
 800ee36:	22ff      	movs	r2, #255	; 0xff
 800ee38:	f8a3 2060 	strh.w	r2, [r3, #96]	; 0x60
 800ee3c:	e028      	b.n	800ee90 <UART_Start_Receive_IT+0xa4>
 800ee3e:	68fb      	ldr	r3, [r7, #12]
 800ee40:	689b      	ldr	r3, [r3, #8]
 800ee42:	2b00      	cmp	r3, #0
 800ee44:	d10d      	bne.n	800ee62 <UART_Start_Receive_IT+0x76>
 800ee46:	68fb      	ldr	r3, [r7, #12]
 800ee48:	691b      	ldr	r3, [r3, #16]
 800ee4a:	2b00      	cmp	r3, #0
 800ee4c:	d104      	bne.n	800ee58 <UART_Start_Receive_IT+0x6c>
 800ee4e:	68fb      	ldr	r3, [r7, #12]
 800ee50:	22ff      	movs	r2, #255	; 0xff
 800ee52:	f8a3 2060 	strh.w	r2, [r3, #96]	; 0x60
 800ee56:	e01b      	b.n	800ee90 <UART_Start_Receive_IT+0xa4>
 800ee58:	68fb      	ldr	r3, [r7, #12]
 800ee5a:	227f      	movs	r2, #127	; 0x7f
 800ee5c:	f8a3 2060 	strh.w	r2, [r3, #96]	; 0x60
 800ee60:	e016      	b.n	800ee90 <UART_Start_Receive_IT+0xa4>
 800ee62:	68fb      	ldr	r3, [r7, #12]
 800ee64:	689b      	ldr	r3, [r3, #8]
 800ee66:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 800ee6a:	d10d      	bne.n	800ee88 <UART_Start_Receive_IT+0x9c>
 800ee6c:	68fb      	ldr	r3, [r7, #12]
 800ee6e:	691b      	ldr	r3, [r3, #16]
 800ee70:	2b00      	cmp	r3, #0
 800ee72:	d104      	bne.n	800ee7e <UART_Start_Receive_IT+0x92>
 800ee74:	68fb      	ldr	r3, [r7, #12]
 800ee76:	227f      	movs	r2, #127	; 0x7f
 800ee78:	f8a3 2060 	strh.w	r2, [r3, #96]	; 0x60
 800ee7c:	e008      	b.n	800ee90 <UART_Start_Receive_IT+0xa4>
 800ee7e:	68fb      	ldr	r3, [r7, #12]
 800ee80:	223f      	movs	r2, #63	; 0x3f
 800ee82:	f8a3 2060 	strh.w	r2, [r3, #96]	; 0x60
 800ee86:	e003      	b.n	800ee90 <UART_Start_Receive_IT+0xa4>
 800ee88:	68fb      	ldr	r3, [r7, #12]
 800ee8a:	2200      	movs	r2, #0
 800ee8c:	f8a3 2060 	strh.w	r2, [r3, #96]	; 0x60
 800ee90:	68fb      	ldr	r3, [r7, #12]
 800ee92:	2200      	movs	r2, #0
 800ee94:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
 800ee98:	68fb      	ldr	r3, [r7, #12]
 800ee9a:	2222      	movs	r2, #34	; 0x22
 800ee9c:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
 800eea0:	68fb      	ldr	r3, [r7, #12]
 800eea2:	681b      	ldr	r3, [r3, #0]
 800eea4:	689a      	ldr	r2, [r3, #8]
 800eea6:	68fb      	ldr	r3, [r7, #12]
 800eea8:	681b      	ldr	r3, [r3, #0]
 800eeaa:	f042 0201 	orr.w	r2, r2, #1
 800eeae:	609a      	str	r2, [r3, #8]
 800eeb0:	68fb      	ldr	r3, [r7, #12]
 800eeb2:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800eeb4:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 800eeb8:	d12a      	bne.n	800ef10 <UART_Start_Receive_IT+0x124>
 800eeba:	68fb      	ldr	r3, [r7, #12]
 800eebc:	f8b3 3068 	ldrh.w	r3, [r3, #104]	; 0x68
 800eec0:	88fa      	ldrh	r2, [r7, #6]
 800eec2:	429a      	cmp	r2, r3
 800eec4:	d324      	bcc.n	800ef10 <UART_Start_Receive_IT+0x124>
 800eec6:	68fb      	ldr	r3, [r7, #12]
 800eec8:	689b      	ldr	r3, [r3, #8]
 800eeca:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800eece:	d107      	bne.n	800eee0 <UART_Start_Receive_IT+0xf4>
 800eed0:	68fb      	ldr	r3, [r7, #12]
 800eed2:	691b      	ldr	r3, [r3, #16]
 800eed4:	2b00      	cmp	r3, #0
 800eed6:	d103      	bne.n	800eee0 <UART_Start_Receive_IT+0xf4>
 800eed8:	68fb      	ldr	r3, [r7, #12]
 800eeda:	4a1e      	ldr	r2, [pc, #120]	; (800ef54 <UART_Start_Receive_IT+0x168>)
 800eedc:	671a      	str	r2, [r3, #112]	; 0x70
 800eede:	e002      	b.n	800eee6 <UART_Start_Receive_IT+0xfa>
 800eee0:	68fb      	ldr	r3, [r7, #12]
 800eee2:	4a1d      	ldr	r2, [pc, #116]	; (800ef58 <UART_Start_Receive_IT+0x16c>)
 800eee4:	671a      	str	r2, [r3, #112]	; 0x70
 800eee6:	68fb      	ldr	r3, [r7, #12]
 800eee8:	2200      	movs	r2, #0
 800eeea:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80
 800eeee:	68fb      	ldr	r3, [r7, #12]
 800eef0:	681b      	ldr	r3, [r3, #0]
 800eef2:	681a      	ldr	r2, [r3, #0]
 800eef4:	68fb      	ldr	r3, [r7, #12]
 800eef6:	681b      	ldr	r3, [r3, #0]
 800eef8:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800eefc:	601a      	str	r2, [r3, #0]
 800eefe:	68fb      	ldr	r3, [r7, #12]
 800ef00:	681b      	ldr	r3, [r3, #0]
 800ef02:	689a      	ldr	r2, [r3, #8]
 800ef04:	68fb      	ldr	r3, [r7, #12]
 800ef06:	681b      	ldr	r3, [r3, #0]
 800ef08:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 800ef0c:	609a      	str	r2, [r3, #8]
 800ef0e:	e01b      	b.n	800ef48 <UART_Start_Receive_IT+0x15c>
 800ef10:	68fb      	ldr	r3, [r7, #12]
 800ef12:	689b      	ldr	r3, [r3, #8]
 800ef14:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800ef18:	d107      	bne.n	800ef2a <UART_Start_Receive_IT+0x13e>
 800ef1a:	68fb      	ldr	r3, [r7, #12]
 800ef1c:	691b      	ldr	r3, [r3, #16]
 800ef1e:	2b00      	cmp	r3, #0
 800ef20:	d103      	bne.n	800ef2a <UART_Start_Receive_IT+0x13e>
 800ef22:	68fb      	ldr	r3, [r7, #12]
 800ef24:	4a0d      	ldr	r2, [pc, #52]	; (800ef5c <UART_Start_Receive_IT+0x170>)
 800ef26:	671a      	str	r2, [r3, #112]	; 0x70
 800ef28:	e002      	b.n	800ef30 <UART_Start_Receive_IT+0x144>
 800ef2a:	68fb      	ldr	r3, [r7, #12]
 800ef2c:	4a0c      	ldr	r2, [pc, #48]	; (800ef60 <UART_Start_Receive_IT+0x174>)
 800ef2e:	671a      	str	r2, [r3, #112]	; 0x70
 800ef30:	68fb      	ldr	r3, [r7, #12]
 800ef32:	2200      	movs	r2, #0
 800ef34:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80
 800ef38:	68fb      	ldr	r3, [r7, #12]
 800ef3a:	681b      	ldr	r3, [r3, #0]
 800ef3c:	681a      	ldr	r2, [r3, #0]
 800ef3e:	68fb      	ldr	r3, [r7, #12]
 800ef40:	681b      	ldr	r3, [r3, #0]
 800ef42:	f442 7290 	orr.w	r2, r2, #288	; 0x120
 800ef46:	601a      	str	r2, [r3, #0]
 800ef48:	2300      	movs	r3, #0
 800ef4a:	4618      	mov	r0, r3
 800ef4c:	3714      	adds	r7, #20
 800ef4e:	46bd      	mov	sp, r7
 800ef50:	bc80      	pop	{r7}
 800ef52:	4770      	bx	lr
 800ef54:	0800f505 	.word	0x0800f505
 800ef58:	0800f301 	.word	0x0800f301
 800ef5c:	0800f229 	.word	0x0800f229
 800ef60:	0800f151 	.word	0x0800f151

0800ef64 <UART_EndTxTransfer>:
 800ef64:	b480      	push	{r7}
 800ef66:	b083      	sub	sp, #12
 800ef68:	af00      	add	r7, sp, #0
 800ef6a:	6078      	str	r0, [r7, #4]
 800ef6c:	687b      	ldr	r3, [r7, #4]
 800ef6e:	681b      	ldr	r3, [r3, #0]
 800ef70:	681a      	ldr	r2, [r3, #0]
 800ef72:	687b      	ldr	r3, [r7, #4]
 800ef74:	681b      	ldr	r3, [r3, #0]
 800ef76:	f022 02c0 	bic.w	r2, r2, #192	; 0xc0
 800ef7a:	601a      	str	r2, [r3, #0]
 800ef7c:	687b      	ldr	r3, [r7, #4]
 800ef7e:	681b      	ldr	r3, [r3, #0]
 800ef80:	689a      	ldr	r2, [r3, #8]
 800ef82:	687b      	ldr	r3, [r7, #4]
 800ef84:	681b      	ldr	r3, [r3, #0]
 800ef86:	f422 0200 	bic.w	r2, r2, #8388608	; 0x800000
 800ef8a:	609a      	str	r2, [r3, #8]
 800ef8c:	687b      	ldr	r3, [r7, #4]
 800ef8e:	2220      	movs	r2, #32
 800ef90:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
 800ef94:	bf00      	nop
 800ef96:	370c      	adds	r7, #12
 800ef98:	46bd      	mov	sp, r7
 800ef9a:	bc80      	pop	{r7}
 800ef9c:	4770      	bx	lr

0800ef9e <UART_EndRxTransfer>:
 800ef9e:	b480      	push	{r7}
 800efa0:	b083      	sub	sp, #12
 800efa2:	af00      	add	r7, sp, #0
 800efa4:	6078      	str	r0, [r7, #4]
 800efa6:	687b      	ldr	r3, [r7, #4]
 800efa8:	681b      	ldr	r3, [r3, #0]
 800efaa:	681a      	ldr	r2, [r3, #0]
 800efac:	687b      	ldr	r3, [r7, #4]
 800efae:	681b      	ldr	r3, [r3, #0]
 800efb0:	f422 7290 	bic.w	r2, r2, #288	; 0x120
 800efb4:	601a      	str	r2, [r3, #0]
 800efb6:	687b      	ldr	r3, [r7, #4]
 800efb8:	681b      	ldr	r3, [r3, #0]
 800efba:	689b      	ldr	r3, [r3, #8]
 800efbc:	687a      	ldr	r2, [r7, #4]
 800efbe:	6812      	ldr	r2, [r2, #0]
 800efc0:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 800efc4:	f023 0301 	bic.w	r3, r3, #1
 800efc8:	6093      	str	r3, [r2, #8]
 800efca:	687b      	ldr	r3, [r7, #4]
 800efcc:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800efce:	2b01      	cmp	r3, #1
 800efd0:	d107      	bne.n	800efe2 <UART_EndRxTransfer+0x44>
 800efd2:	687b      	ldr	r3, [r7, #4]
 800efd4:	681b      	ldr	r3, [r3, #0]
 800efd6:	681a      	ldr	r2, [r3, #0]
 800efd8:	687b      	ldr	r3, [r7, #4]
 800efda:	681b      	ldr	r3, [r3, #0]
 800efdc:	f022 0210 	bic.w	r2, r2, #16
 800efe0:	601a      	str	r2, [r3, #0]
 800efe2:	687b      	ldr	r3, [r7, #4]
 800efe4:	2220      	movs	r2, #32
 800efe6:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
 800efea:	687b      	ldr	r3, [r7, #4]
 800efec:	2200      	movs	r2, #0
 800efee:	66da      	str	r2, [r3, #108]	; 0x6c
 800eff0:	687b      	ldr	r3, [r7, #4]
 800eff2:	2200      	movs	r2, #0
 800eff4:	671a      	str	r2, [r3, #112]	; 0x70
 800eff6:	bf00      	nop
 800eff8:	370c      	adds	r7, #12
 800effa:	46bd      	mov	sp, r7
 800effc:	bc80      	pop	{r7}
 800effe:	4770      	bx	lr

0800f000 <UART_DMATransmitCplt>:
 800f000:	b580      	push	{r7, lr}
 800f002:	b084      	sub	sp, #16
 800f004:	af00      	add	r7, sp, #0
 800f006:	6078      	str	r0, [r7, #4]
 800f008:	687b      	ldr	r3, [r7, #4]
 800f00a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800f00c:	60fb      	str	r3, [r7, #12]
 800f00e:	687b      	ldr	r3, [r7, #4]
 800f010:	681b      	ldr	r3, [r3, #0]
 800f012:	681b      	ldr	r3, [r3, #0]
 800f014:	f003 0320 	and.w	r3, r3, #32
 800f018:	2b00      	cmp	r3, #0
 800f01a:	d114      	bne.n	800f046 <UART_DMATransmitCplt+0x46>
 800f01c:	68fb      	ldr	r3, [r7, #12]
 800f01e:	2200      	movs	r2, #0
 800f020:	f8a3 2056 	strh.w	r2, [r3, #86]	; 0x56
 800f024:	68fb      	ldr	r3, [r7, #12]
 800f026:	681b      	ldr	r3, [r3, #0]
 800f028:	689a      	ldr	r2, [r3, #8]
 800f02a:	68fb      	ldr	r3, [r7, #12]
 800f02c:	681b      	ldr	r3, [r3, #0]
 800f02e:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 800f032:	609a      	str	r2, [r3, #8]
 800f034:	68fb      	ldr	r3, [r7, #12]
 800f036:	681b      	ldr	r3, [r3, #0]
 800f038:	681a      	ldr	r2, [r3, #0]
 800f03a:	68fb      	ldr	r3, [r7, #12]
 800f03c:	681b      	ldr	r3, [r3, #0]
 800f03e:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 800f042:	601a      	str	r2, [r3, #0]
 800f044:	e002      	b.n	800f04c <UART_DMATransmitCplt+0x4c>
 800f046:	68f8      	ldr	r0, [r7, #12]
 800f048:	f7f8 f808 	bl	800705c <HAL_UART_TxCpltCallback>
 800f04c:	bf00      	nop
 800f04e:	3710      	adds	r7, #16
 800f050:	46bd      	mov	sp, r7
 800f052:	bd80      	pop	{r7, pc}

0800f054 <UART_DMATxHalfCplt>:
 800f054:	b580      	push	{r7, lr}
 800f056:	b084      	sub	sp, #16
 800f058:	af00      	add	r7, sp, #0
 800f05a:	6078      	str	r0, [r7, #4]
 800f05c:	687b      	ldr	r3, [r7, #4]
 800f05e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800f060:	60fb      	str	r3, [r7, #12]
 800f062:	68f8      	ldr	r0, [r7, #12]
 800f064:	f7ff fae8 	bl	800e638 <HAL_UART_TxHalfCpltCallback>
 800f068:	bf00      	nop
 800f06a:	3710      	adds	r7, #16
 800f06c:	46bd      	mov	sp, r7
 800f06e:	bd80      	pop	{r7, pc}

0800f070 <UART_DMAError>:
 800f070:	b580      	push	{r7, lr}
 800f072:	b086      	sub	sp, #24
 800f074:	af00      	add	r7, sp, #0
 800f076:	6078      	str	r0, [r7, #4]
 800f078:	687b      	ldr	r3, [r7, #4]
 800f07a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800f07c:	617b      	str	r3, [r7, #20]
 800f07e:	697b      	ldr	r3, [r7, #20]
 800f080:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800f084:	613b      	str	r3, [r7, #16]
 800f086:	697b      	ldr	r3, [r7, #20]
 800f088:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800f08c:	60fb      	str	r3, [r7, #12]
 800f08e:	697b      	ldr	r3, [r7, #20]
 800f090:	681b      	ldr	r3, [r3, #0]
 800f092:	689b      	ldr	r3, [r3, #8]
 800f094:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800f098:	2b80      	cmp	r3, #128	; 0x80
 800f09a:	d109      	bne.n	800f0b0 <UART_DMAError+0x40>
 800f09c:	693b      	ldr	r3, [r7, #16]
 800f09e:	2b21      	cmp	r3, #33	; 0x21
 800f0a0:	d106      	bne.n	800f0b0 <UART_DMAError+0x40>
 800f0a2:	697b      	ldr	r3, [r7, #20]
 800f0a4:	2200      	movs	r2, #0
 800f0a6:	f8a3 2056 	strh.w	r2, [r3, #86]	; 0x56
 800f0aa:	6978      	ldr	r0, [r7, #20]
 800f0ac:	f7ff ff5a 	bl	800ef64 <UART_EndTxTransfer>
 800f0b0:	697b      	ldr	r3, [r7, #20]
 800f0b2:	681b      	ldr	r3, [r3, #0]
 800f0b4:	689b      	ldr	r3, [r3, #8]
 800f0b6:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800f0ba:	2b40      	cmp	r3, #64	; 0x40
 800f0bc:	d109      	bne.n	800f0d2 <UART_DMAError+0x62>
 800f0be:	68fb      	ldr	r3, [r7, #12]
 800f0c0:	2b22      	cmp	r3, #34	; 0x22
 800f0c2:	d106      	bne.n	800f0d2 <UART_DMAError+0x62>
 800f0c4:	697b      	ldr	r3, [r7, #20]
 800f0c6:	2200      	movs	r2, #0
 800f0c8:	f8a3 205e 	strh.w	r2, [r3, #94]	; 0x5e
 800f0cc:	6978      	ldr	r0, [r7, #20]
 800f0ce:	f7ff ff66 	bl	800ef9e <UART_EndRxTransfer>
 800f0d2:	697b      	ldr	r3, [r7, #20]
 800f0d4:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800f0d8:	f043 0210 	orr.w	r2, r3, #16
 800f0dc:	697b      	ldr	r3, [r7, #20]
 800f0de:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
 800f0e2:	6978      	ldr	r0, [r7, #20]
 800f0e4:	f7ff fab1 	bl	800e64a <HAL_UART_ErrorCallback>
 800f0e8:	bf00      	nop
 800f0ea:	3718      	adds	r7, #24
 800f0ec:	46bd      	mov	sp, r7
 800f0ee:	bd80      	pop	{r7, pc}

0800f0f0 <UART_DMAAbortOnError>:
 800f0f0:	b580      	push	{r7, lr}
 800f0f2:	b084      	sub	sp, #16
 800f0f4:	af00      	add	r7, sp, #0
 800f0f6:	6078      	str	r0, [r7, #4]
 800f0f8:	687b      	ldr	r3, [r7, #4]
 800f0fa:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800f0fc:	60fb      	str	r3, [r7, #12]
 800f0fe:	68fb      	ldr	r3, [r7, #12]
 800f100:	2200      	movs	r2, #0
 800f102:	f8a3 205e 	strh.w	r2, [r3, #94]	; 0x5e
 800f106:	68fb      	ldr	r3, [r7, #12]
 800f108:	2200      	movs	r2, #0
 800f10a:	f8a3 2056 	strh.w	r2, [r3, #86]	; 0x56
 800f10e:	68f8      	ldr	r0, [r7, #12]
 800f110:	f7ff fa9b 	bl	800e64a <HAL_UART_ErrorCallback>
 800f114:	bf00      	nop
 800f116:	3710      	adds	r7, #16
 800f118:	46bd      	mov	sp, r7
 800f11a:	bd80      	pop	{r7, pc}

0800f11c <UART_EndTransmit_IT>:
 800f11c:	b580      	push	{r7, lr}
 800f11e:	b082      	sub	sp, #8
 800f120:	af00      	add	r7, sp, #0
 800f122:	6078      	str	r0, [r7, #4]
 800f124:	687b      	ldr	r3, [r7, #4]
 800f126:	681b      	ldr	r3, [r3, #0]
 800f128:	681a      	ldr	r2, [r3, #0]
 800f12a:	687b      	ldr	r3, [r7, #4]
 800f12c:	681b      	ldr	r3, [r3, #0]
 800f12e:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800f132:	601a      	str	r2, [r3, #0]
 800f134:	687b      	ldr	r3, [r7, #4]
 800f136:	2220      	movs	r2, #32
 800f138:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
 800f13c:	687b      	ldr	r3, [r7, #4]
 800f13e:	2200      	movs	r2, #0
 800f140:	675a      	str	r2, [r3, #116]	; 0x74
 800f142:	6878      	ldr	r0, [r7, #4]
 800f144:	f7f7 ff8a 	bl	800705c <HAL_UART_TxCpltCallback>
 800f148:	bf00      	nop
 800f14a:	3708      	adds	r7, #8
 800f14c:	46bd      	mov	sp, r7
 800f14e:	bd80      	pop	{r7, pc}

0800f150 <UART_RxISR_8BIT>:
 800f150:	b580      	push	{r7, lr}
 800f152:	b084      	sub	sp, #16
 800f154:	af00      	add	r7, sp, #0
 800f156:	6078      	str	r0, [r7, #4]
 800f158:	687b      	ldr	r3, [r7, #4]
 800f15a:	f8b3 3060 	ldrh.w	r3, [r3, #96]	; 0x60
 800f15e:	81fb      	strh	r3, [r7, #14]
 800f160:	687b      	ldr	r3, [r7, #4]
 800f162:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800f166:	2b22      	cmp	r3, #34	; 0x22
 800f168:	d152      	bne.n	800f210 <UART_RxISR_8BIT+0xc0>
 800f16a:	687b      	ldr	r3, [r7, #4]
 800f16c:	681b      	ldr	r3, [r3, #0]
 800f16e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800f170:	81bb      	strh	r3, [r7, #12]
 800f172:	89bb      	ldrh	r3, [r7, #12]
 800f174:	b2d9      	uxtb	r1, r3
 800f176:	89fb      	ldrh	r3, [r7, #14]
 800f178:	b2da      	uxtb	r2, r3
 800f17a:	687b      	ldr	r3, [r7, #4]
 800f17c:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800f17e:	400a      	ands	r2, r1
 800f180:	b2d2      	uxtb	r2, r2
 800f182:	701a      	strb	r2, [r3, #0]
 800f184:	687b      	ldr	r3, [r7, #4]
 800f186:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800f188:	1c5a      	adds	r2, r3, #1
 800f18a:	687b      	ldr	r3, [r7, #4]
 800f18c:	659a      	str	r2, [r3, #88]	; 0x58
 800f18e:	687b      	ldr	r3, [r7, #4]
 800f190:	f8b3 305e 	ldrh.w	r3, [r3, #94]	; 0x5e
 800f194:	b29b      	uxth	r3, r3
 800f196:	3b01      	subs	r3, #1
 800f198:	b29a      	uxth	r2, r3
 800f19a:	687b      	ldr	r3, [r7, #4]
 800f19c:	f8a3 205e 	strh.w	r2, [r3, #94]	; 0x5e
 800f1a0:	687b      	ldr	r3, [r7, #4]
 800f1a2:	f8b3 305e 	ldrh.w	r3, [r3, #94]	; 0x5e
 800f1a6:	b29b      	uxth	r3, r3
 800f1a8:	2b00      	cmp	r3, #0
 800f1aa:	d139      	bne.n	800f220 <UART_RxISR_8BIT+0xd0>
 800f1ac:	687b      	ldr	r3, [r7, #4]
 800f1ae:	681b      	ldr	r3, [r3, #0]
 800f1b0:	681a      	ldr	r2, [r3, #0]
 800f1b2:	687b      	ldr	r3, [r7, #4]
 800f1b4:	681b      	ldr	r3, [r3, #0]
 800f1b6:	f422 7290 	bic.w	r2, r2, #288	; 0x120
 800f1ba:	601a      	str	r2, [r3, #0]
 800f1bc:	687b      	ldr	r3, [r7, #4]
 800f1be:	681b      	ldr	r3, [r3, #0]
 800f1c0:	689a      	ldr	r2, [r3, #8]
 800f1c2:	687b      	ldr	r3, [r7, #4]
 800f1c4:	681b      	ldr	r3, [r3, #0]
 800f1c6:	f022 0201 	bic.w	r2, r2, #1
 800f1ca:	609a      	str	r2, [r3, #8]
 800f1cc:	687b      	ldr	r3, [r7, #4]
 800f1ce:	2220      	movs	r2, #32
 800f1d0:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
 800f1d4:	687b      	ldr	r3, [r7, #4]
 800f1d6:	2200      	movs	r2, #0
 800f1d8:	671a      	str	r2, [r3, #112]	; 0x70
 800f1da:	687b      	ldr	r3, [r7, #4]
 800f1dc:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800f1de:	2b01      	cmp	r3, #1
 800f1e0:	d10f      	bne.n	800f202 <UART_RxISR_8BIT+0xb2>
 800f1e2:	687b      	ldr	r3, [r7, #4]
 800f1e4:	681b      	ldr	r3, [r3, #0]
 800f1e6:	681a      	ldr	r2, [r3, #0]
 800f1e8:	687b      	ldr	r3, [r7, #4]
 800f1ea:	681b      	ldr	r3, [r3, #0]
 800f1ec:	f022 0210 	bic.w	r2, r2, #16
 800f1f0:	601a      	str	r2, [r3, #0]
 800f1f2:	687b      	ldr	r3, [r7, #4]
 800f1f4:	f8b3 305c 	ldrh.w	r3, [r3, #92]	; 0x5c
 800f1f8:	4619      	mov	r1, r3
 800f1fa:	6878      	ldr	r0, [r7, #4]
 800f1fc:	f7ff fa2e 	bl	800e65c <HAL_UARTEx_RxEventCallback>
 800f200:	e002      	b.n	800f208 <UART_RxISR_8BIT+0xb8>
 800f202:	6878      	ldr	r0, [r7, #4]
 800f204:	f7f7 ff38 	bl	8007078 <HAL_UART_RxCpltCallback>
 800f208:	687b      	ldr	r3, [r7, #4]
 800f20a:	2200      	movs	r2, #0
 800f20c:	66da      	str	r2, [r3, #108]	; 0x6c
 800f20e:	e007      	b.n	800f220 <UART_RxISR_8BIT+0xd0>
 800f210:	687b      	ldr	r3, [r7, #4]
 800f212:	681b      	ldr	r3, [r3, #0]
 800f214:	699a      	ldr	r2, [r3, #24]
 800f216:	687b      	ldr	r3, [r7, #4]
 800f218:	681b      	ldr	r3, [r3, #0]
 800f21a:	f042 0208 	orr.w	r2, r2, #8
 800f21e:	619a      	str	r2, [r3, #24]
 800f220:	bf00      	nop
 800f222:	3710      	adds	r7, #16
 800f224:	46bd      	mov	sp, r7
 800f226:	bd80      	pop	{r7, pc}

0800f228 <UART_RxISR_16BIT>:
 800f228:	b580      	push	{r7, lr}
 800f22a:	b084      	sub	sp, #16
 800f22c:	af00      	add	r7, sp, #0
 800f22e:	6078      	str	r0, [r7, #4]
 800f230:	687b      	ldr	r3, [r7, #4]
 800f232:	f8b3 3060 	ldrh.w	r3, [r3, #96]	; 0x60
 800f236:	81fb      	strh	r3, [r7, #14]
 800f238:	687b      	ldr	r3, [r7, #4]
 800f23a:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800f23e:	2b22      	cmp	r3, #34	; 0x22
 800f240:	d152      	bne.n	800f2e8 <UART_RxISR_16BIT+0xc0>
 800f242:	687b      	ldr	r3, [r7, #4]
 800f244:	681b      	ldr	r3, [r3, #0]
 800f246:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800f248:	81bb      	strh	r3, [r7, #12]
 800f24a:	687b      	ldr	r3, [r7, #4]
 800f24c:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800f24e:	60bb      	str	r3, [r7, #8]
 800f250:	89ba      	ldrh	r2, [r7, #12]
 800f252:	89fb      	ldrh	r3, [r7, #14]
 800f254:	4013      	ands	r3, r2
 800f256:	b29a      	uxth	r2, r3
 800f258:	68bb      	ldr	r3, [r7, #8]
 800f25a:	801a      	strh	r2, [r3, #0]
 800f25c:	687b      	ldr	r3, [r7, #4]
 800f25e:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800f260:	1c9a      	adds	r2, r3, #2
 800f262:	687b      	ldr	r3, [r7, #4]
 800f264:	659a      	str	r2, [r3, #88]	; 0x58
 800f266:	687b      	ldr	r3, [r7, #4]
 800f268:	f8b3 305e 	ldrh.w	r3, [r3, #94]	; 0x5e
 800f26c:	b29b      	uxth	r3, r3
 800f26e:	3b01      	subs	r3, #1
 800f270:	b29a      	uxth	r2, r3
 800f272:	687b      	ldr	r3, [r7, #4]
 800f274:	f8a3 205e 	strh.w	r2, [r3, #94]	; 0x5e
 800f278:	687b      	ldr	r3, [r7, #4]
 800f27a:	f8b3 305e 	ldrh.w	r3, [r3, #94]	; 0x5e
 800f27e:	b29b      	uxth	r3, r3
 800f280:	2b00      	cmp	r3, #0
 800f282:	d139      	bne.n	800f2f8 <UART_RxISR_16BIT+0xd0>
 800f284:	687b      	ldr	r3, [r7, #4]
 800f286:	681b      	ldr	r3, [r3, #0]
 800f288:	681a      	ldr	r2, [r3, #0]
 800f28a:	687b      	ldr	r3, [r7, #4]
 800f28c:	681b      	ldr	r3, [r3, #0]
 800f28e:	f422 7290 	bic.w	r2, r2, #288	; 0x120
 800f292:	601a      	str	r2, [r3, #0]
 800f294:	687b      	ldr	r3, [r7, #4]
 800f296:	681b      	ldr	r3, [r3, #0]
 800f298:	689a      	ldr	r2, [r3, #8]
 800f29a:	687b      	ldr	r3, [r7, #4]
 800f29c:	681b      	ldr	r3, [r3, #0]
 800f29e:	f022 0201 	bic.w	r2, r2, #1
 800f2a2:	609a      	str	r2, [r3, #8]
 800f2a4:	687b      	ldr	r3, [r7, #4]
 800f2a6:	2220      	movs	r2, #32
 800f2a8:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
 800f2ac:	687b      	ldr	r3, [r7, #4]
 800f2ae:	2200      	movs	r2, #0
 800f2b0:	671a      	str	r2, [r3, #112]	; 0x70
 800f2b2:	687b      	ldr	r3, [r7, #4]
 800f2b4:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800f2b6:	2b01      	cmp	r3, #1
 800f2b8:	d10f      	bne.n	800f2da <UART_RxISR_16BIT+0xb2>
 800f2ba:	687b      	ldr	r3, [r7, #4]
 800f2bc:	681b      	ldr	r3, [r3, #0]
 800f2be:	681a      	ldr	r2, [r3, #0]
 800f2c0:	687b      	ldr	r3, [r7, #4]
 800f2c2:	681b      	ldr	r3, [r3, #0]
 800f2c4:	f022 0210 	bic.w	r2, r2, #16
 800f2c8:	601a      	str	r2, [r3, #0]
 800f2ca:	687b      	ldr	r3, [r7, #4]
 800f2cc:	f8b3 305c 	ldrh.w	r3, [r3, #92]	; 0x5c
 800f2d0:	4619      	mov	r1, r3
 800f2d2:	6878      	ldr	r0, [r7, #4]
 800f2d4:	f7ff f9c2 	bl	800e65c <HAL_UARTEx_RxEventCallback>
 800f2d8:	e002      	b.n	800f2e0 <UART_RxISR_16BIT+0xb8>
 800f2da:	6878      	ldr	r0, [r7, #4]
 800f2dc:	f7f7 fecc 	bl	8007078 <HAL_UART_RxCpltCallback>
 800f2e0:	687b      	ldr	r3, [r7, #4]
 800f2e2:	2200      	movs	r2, #0
 800f2e4:	66da      	str	r2, [r3, #108]	; 0x6c
 800f2e6:	e007      	b.n	800f2f8 <UART_RxISR_16BIT+0xd0>
 800f2e8:	687b      	ldr	r3, [r7, #4]
 800f2ea:	681b      	ldr	r3, [r3, #0]
 800f2ec:	699a      	ldr	r2, [r3, #24]
 800f2ee:	687b      	ldr	r3, [r7, #4]
 800f2f0:	681b      	ldr	r3, [r3, #0]
 800f2f2:	f042 0208 	orr.w	r2, r2, #8
 800f2f6:	619a      	str	r2, [r3, #24]
 800f2f8:	bf00      	nop
 800f2fa:	3710      	adds	r7, #16
 800f2fc:	46bd      	mov	sp, r7
 800f2fe:	bd80      	pop	{r7, pc}

0800f300 <UART_RxISR_8BIT_FIFOEN>:
 800f300:	b580      	push	{r7, lr}
 800f302:	b088      	sub	sp, #32
 800f304:	af00      	add	r7, sp, #0
 800f306:	6078      	str	r0, [r7, #4]
 800f308:	687b      	ldr	r3, [r7, #4]
 800f30a:	f8b3 3060 	ldrh.w	r3, [r3, #96]	; 0x60
 800f30e:	837b      	strh	r3, [r7, #26]
 800f310:	687b      	ldr	r3, [r7, #4]
 800f312:	681b      	ldr	r3, [r3, #0]
 800f314:	69db      	ldr	r3, [r3, #28]
 800f316:	61fb      	str	r3, [r7, #28]
 800f318:	687b      	ldr	r3, [r7, #4]
 800f31a:	681b      	ldr	r3, [r3, #0]
 800f31c:	681b      	ldr	r3, [r3, #0]
 800f31e:	617b      	str	r3, [r7, #20]
 800f320:	687b      	ldr	r3, [r7, #4]
 800f322:	681b      	ldr	r3, [r3, #0]
 800f324:	689b      	ldr	r3, [r3, #8]
 800f326:	613b      	str	r3, [r7, #16]
 800f328:	687b      	ldr	r3, [r7, #4]
 800f32a:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800f32e:	2b22      	cmp	r3, #34	; 0x22
 800f330:	f040 80da 	bne.w	800f4e8 <UART_RxISR_8BIT_FIFOEN+0x1e8>
 800f334:	687b      	ldr	r3, [r7, #4]
 800f336:	f8b3 3068 	ldrh.w	r3, [r3, #104]	; 0x68
 800f33a:	81fb      	strh	r3, [r7, #14]
 800f33c:	e0aa      	b.n	800f494 <UART_RxISR_8BIT_FIFOEN+0x194>
 800f33e:	687b      	ldr	r3, [r7, #4]
 800f340:	681b      	ldr	r3, [r3, #0]
 800f342:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800f344:	81bb      	strh	r3, [r7, #12]
 800f346:	89bb      	ldrh	r3, [r7, #12]
 800f348:	b2d9      	uxtb	r1, r3
 800f34a:	8b7b      	ldrh	r3, [r7, #26]
 800f34c:	b2da      	uxtb	r2, r3
 800f34e:	687b      	ldr	r3, [r7, #4]
 800f350:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800f352:	400a      	ands	r2, r1
 800f354:	b2d2      	uxtb	r2, r2
 800f356:	701a      	strb	r2, [r3, #0]
 800f358:	687b      	ldr	r3, [r7, #4]
 800f35a:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800f35c:	1c5a      	adds	r2, r3, #1
 800f35e:	687b      	ldr	r3, [r7, #4]
 800f360:	659a      	str	r2, [r3, #88]	; 0x58
 800f362:	687b      	ldr	r3, [r7, #4]
 800f364:	f8b3 305e 	ldrh.w	r3, [r3, #94]	; 0x5e
 800f368:	b29b      	uxth	r3, r3
 800f36a:	3b01      	subs	r3, #1
 800f36c:	b29a      	uxth	r2, r3
 800f36e:	687b      	ldr	r3, [r7, #4]
 800f370:	f8a3 205e 	strh.w	r2, [r3, #94]	; 0x5e
 800f374:	687b      	ldr	r3, [r7, #4]
 800f376:	681b      	ldr	r3, [r3, #0]
 800f378:	69db      	ldr	r3, [r3, #28]
 800f37a:	61fb      	str	r3, [r7, #28]
 800f37c:	69fb      	ldr	r3, [r7, #28]
 800f37e:	f003 0307 	and.w	r3, r3, #7
 800f382:	2b00      	cmp	r3, #0
 800f384:	d04d      	beq.n	800f422 <UART_RxISR_8BIT_FIFOEN+0x122>
 800f386:	69fb      	ldr	r3, [r7, #28]
 800f388:	f003 0301 	and.w	r3, r3, #1
 800f38c:	2b00      	cmp	r3, #0
 800f38e:	d010      	beq.n	800f3b2 <UART_RxISR_8BIT_FIFOEN+0xb2>
 800f390:	697b      	ldr	r3, [r7, #20]
 800f392:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800f396:	2b00      	cmp	r3, #0
 800f398:	d00b      	beq.n	800f3b2 <UART_RxISR_8BIT_FIFOEN+0xb2>
 800f39a:	687b      	ldr	r3, [r7, #4]
 800f39c:	681b      	ldr	r3, [r3, #0]
 800f39e:	2201      	movs	r2, #1
 800f3a0:	621a      	str	r2, [r3, #32]
 800f3a2:	687b      	ldr	r3, [r7, #4]
 800f3a4:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800f3a8:	f043 0201 	orr.w	r2, r3, #1
 800f3ac:	687b      	ldr	r3, [r7, #4]
 800f3ae:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
 800f3b2:	69fb      	ldr	r3, [r7, #28]
 800f3b4:	f003 0302 	and.w	r3, r3, #2
 800f3b8:	2b00      	cmp	r3, #0
 800f3ba:	d010      	beq.n	800f3de <UART_RxISR_8BIT_FIFOEN+0xde>
 800f3bc:	693b      	ldr	r3, [r7, #16]
 800f3be:	f003 0301 	and.w	r3, r3, #1
 800f3c2:	2b00      	cmp	r3, #0
 800f3c4:	d00b      	beq.n	800f3de <UART_RxISR_8BIT_FIFOEN+0xde>
 800f3c6:	687b      	ldr	r3, [r7, #4]
 800f3c8:	681b      	ldr	r3, [r3, #0]
 800f3ca:	2202      	movs	r2, #2
 800f3cc:	621a      	str	r2, [r3, #32]
 800f3ce:	687b      	ldr	r3, [r7, #4]
 800f3d0:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800f3d4:	f043 0204 	orr.w	r2, r3, #4
 800f3d8:	687b      	ldr	r3, [r7, #4]
 800f3da:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
 800f3de:	69fb      	ldr	r3, [r7, #28]
 800f3e0:	f003 0304 	and.w	r3, r3, #4
 800f3e4:	2b00      	cmp	r3, #0
 800f3e6:	d010      	beq.n	800f40a <UART_RxISR_8BIT_FIFOEN+0x10a>
 800f3e8:	693b      	ldr	r3, [r7, #16]
 800f3ea:	f003 0301 	and.w	r3, r3, #1
 800f3ee:	2b00      	cmp	r3, #0
 800f3f0:	d00b      	beq.n	800f40a <UART_RxISR_8BIT_FIFOEN+0x10a>
 800f3f2:	687b      	ldr	r3, [r7, #4]
 800f3f4:	681b      	ldr	r3, [r3, #0]
 800f3f6:	2204      	movs	r2, #4
 800f3f8:	621a      	str	r2, [r3, #32]
 800f3fa:	687b      	ldr	r3, [r7, #4]
 800f3fc:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800f400:	f043 0202 	orr.w	r2, r3, #2
 800f404:	687b      	ldr	r3, [r7, #4]
 800f406:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
 800f40a:	687b      	ldr	r3, [r7, #4]
 800f40c:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800f410:	2b00      	cmp	r3, #0
 800f412:	d006      	beq.n	800f422 <UART_RxISR_8BIT_FIFOEN+0x122>
 800f414:	6878      	ldr	r0, [r7, #4]
 800f416:	f7ff f918 	bl	800e64a <HAL_UART_ErrorCallback>
 800f41a:	687b      	ldr	r3, [r7, #4]
 800f41c:	2200      	movs	r2, #0
 800f41e:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
 800f422:	687b      	ldr	r3, [r7, #4]
 800f424:	f8b3 305e 	ldrh.w	r3, [r3, #94]	; 0x5e
 800f428:	b29b      	uxth	r3, r3
 800f42a:	2b00      	cmp	r3, #0
 800f42c:	d132      	bne.n	800f494 <UART_RxISR_8BIT_FIFOEN+0x194>
 800f42e:	687b      	ldr	r3, [r7, #4]
 800f430:	681b      	ldr	r3, [r3, #0]
 800f432:	681a      	ldr	r2, [r3, #0]
 800f434:	687b      	ldr	r3, [r7, #4]
 800f436:	681b      	ldr	r3, [r3, #0]
 800f438:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 800f43c:	601a      	str	r2, [r3, #0]
 800f43e:	687b      	ldr	r3, [r7, #4]
 800f440:	681b      	ldr	r3, [r3, #0]
 800f442:	689b      	ldr	r3, [r3, #8]
 800f444:	687a      	ldr	r2, [r7, #4]
 800f446:	6812      	ldr	r2, [r2, #0]
 800f448:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 800f44c:	f023 0301 	bic.w	r3, r3, #1
 800f450:	6093      	str	r3, [r2, #8]
 800f452:	687b      	ldr	r3, [r7, #4]
 800f454:	2220      	movs	r2, #32
 800f456:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
 800f45a:	687b      	ldr	r3, [r7, #4]
 800f45c:	2200      	movs	r2, #0
 800f45e:	671a      	str	r2, [r3, #112]	; 0x70
 800f460:	687b      	ldr	r3, [r7, #4]
 800f462:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800f464:	2b01      	cmp	r3, #1
 800f466:	d10f      	bne.n	800f488 <UART_RxISR_8BIT_FIFOEN+0x188>
 800f468:	687b      	ldr	r3, [r7, #4]
 800f46a:	681b      	ldr	r3, [r3, #0]
 800f46c:	681a      	ldr	r2, [r3, #0]
 800f46e:	687b      	ldr	r3, [r7, #4]
 800f470:	681b      	ldr	r3, [r3, #0]
 800f472:	f022 0210 	bic.w	r2, r2, #16
 800f476:	601a      	str	r2, [r3, #0]
 800f478:	687b      	ldr	r3, [r7, #4]
 800f47a:	f8b3 305c 	ldrh.w	r3, [r3, #92]	; 0x5c
 800f47e:	4619      	mov	r1, r3
 800f480:	6878      	ldr	r0, [r7, #4]
 800f482:	f7ff f8eb 	bl	800e65c <HAL_UARTEx_RxEventCallback>
 800f486:	e002      	b.n	800f48e <UART_RxISR_8BIT_FIFOEN+0x18e>
 800f488:	6878      	ldr	r0, [r7, #4]
 800f48a:	f7f7 fdf5 	bl	8007078 <HAL_UART_RxCpltCallback>
 800f48e:	687b      	ldr	r3, [r7, #4]
 800f490:	2200      	movs	r2, #0
 800f492:	66da      	str	r2, [r3, #108]	; 0x6c
 800f494:	89fb      	ldrh	r3, [r7, #14]
 800f496:	2b00      	cmp	r3, #0
 800f498:	d005      	beq.n	800f4a6 <UART_RxISR_8BIT_FIFOEN+0x1a6>
 800f49a:	69fb      	ldr	r3, [r7, #28]
 800f49c:	f003 0320 	and.w	r3, r3, #32
 800f4a0:	2b00      	cmp	r3, #0
 800f4a2:	f47f af4c 	bne.w	800f33e <UART_RxISR_8BIT_FIFOEN+0x3e>
 800f4a6:	687b      	ldr	r3, [r7, #4]
 800f4a8:	f8b3 305e 	ldrh.w	r3, [r3, #94]	; 0x5e
 800f4ac:	817b      	strh	r3, [r7, #10]
 800f4ae:	897b      	ldrh	r3, [r7, #10]
 800f4b0:	2b00      	cmp	r3, #0
 800f4b2:	d021      	beq.n	800f4f8 <UART_RxISR_8BIT_FIFOEN+0x1f8>
 800f4b4:	687b      	ldr	r3, [r7, #4]
 800f4b6:	f8b3 3068 	ldrh.w	r3, [r3, #104]	; 0x68
 800f4ba:	897a      	ldrh	r2, [r7, #10]
 800f4bc:	429a      	cmp	r2, r3
 800f4be:	d21b      	bcs.n	800f4f8 <UART_RxISR_8BIT_FIFOEN+0x1f8>
 800f4c0:	687b      	ldr	r3, [r7, #4]
 800f4c2:	681b      	ldr	r3, [r3, #0]
 800f4c4:	689a      	ldr	r2, [r3, #8]
 800f4c6:	687b      	ldr	r3, [r7, #4]
 800f4c8:	681b      	ldr	r3, [r3, #0]
 800f4ca:	f022 5280 	bic.w	r2, r2, #268435456	; 0x10000000
 800f4ce:	609a      	str	r2, [r3, #8]
 800f4d0:	687b      	ldr	r3, [r7, #4]
 800f4d2:	4a0b      	ldr	r2, [pc, #44]	; (800f500 <UART_RxISR_8BIT_FIFOEN+0x200>)
 800f4d4:	671a      	str	r2, [r3, #112]	; 0x70
 800f4d6:	687b      	ldr	r3, [r7, #4]
 800f4d8:	681b      	ldr	r3, [r3, #0]
 800f4da:	681a      	ldr	r2, [r3, #0]
 800f4dc:	687b      	ldr	r3, [r7, #4]
 800f4de:	681b      	ldr	r3, [r3, #0]
 800f4e0:	f042 0220 	orr.w	r2, r2, #32
 800f4e4:	601a      	str	r2, [r3, #0]
 800f4e6:	e007      	b.n	800f4f8 <UART_RxISR_8BIT_FIFOEN+0x1f8>
 800f4e8:	687b      	ldr	r3, [r7, #4]
 800f4ea:	681b      	ldr	r3, [r3, #0]
 800f4ec:	699a      	ldr	r2, [r3, #24]
 800f4ee:	687b      	ldr	r3, [r7, #4]
 800f4f0:	681b      	ldr	r3, [r3, #0]
 800f4f2:	f042 0208 	orr.w	r2, r2, #8
 800f4f6:	619a      	str	r2, [r3, #24]
 800f4f8:	bf00      	nop
 800f4fa:	3720      	adds	r7, #32
 800f4fc:	46bd      	mov	sp, r7
 800f4fe:	bd80      	pop	{r7, pc}
 800f500:	0800f151 	.word	0x0800f151

0800f504 <UART_RxISR_16BIT_FIFOEN>:
 800f504:	b580      	push	{r7, lr}
 800f506:	b08a      	sub	sp, #40	; 0x28
 800f508:	af00      	add	r7, sp, #0
 800f50a:	6078      	str	r0, [r7, #4]
 800f50c:	687b      	ldr	r3, [r7, #4]
 800f50e:	f8b3 3060 	ldrh.w	r3, [r3, #96]	; 0x60
 800f512:	847b      	strh	r3, [r7, #34]	; 0x22
 800f514:	687b      	ldr	r3, [r7, #4]
 800f516:	681b      	ldr	r3, [r3, #0]
 800f518:	69db      	ldr	r3, [r3, #28]
 800f51a:	627b      	str	r3, [r7, #36]	; 0x24
 800f51c:	687b      	ldr	r3, [r7, #4]
 800f51e:	681b      	ldr	r3, [r3, #0]
 800f520:	681b      	ldr	r3, [r3, #0]
 800f522:	61fb      	str	r3, [r7, #28]
 800f524:	687b      	ldr	r3, [r7, #4]
 800f526:	681b      	ldr	r3, [r3, #0]
 800f528:	689b      	ldr	r3, [r3, #8]
 800f52a:	61bb      	str	r3, [r7, #24]
 800f52c:	687b      	ldr	r3, [r7, #4]
 800f52e:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800f532:	2b22      	cmp	r3, #34	; 0x22
 800f534:	f040 80da 	bne.w	800f6ec <UART_RxISR_16BIT_FIFOEN+0x1e8>
 800f538:	687b      	ldr	r3, [r7, #4]
 800f53a:	f8b3 3068 	ldrh.w	r3, [r3, #104]	; 0x68
 800f53e:	82fb      	strh	r3, [r7, #22]
 800f540:	e0aa      	b.n	800f698 <UART_RxISR_16BIT_FIFOEN+0x194>
 800f542:	687b      	ldr	r3, [r7, #4]
 800f544:	681b      	ldr	r3, [r3, #0]
 800f546:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800f548:	82bb      	strh	r3, [r7, #20]
 800f54a:	687b      	ldr	r3, [r7, #4]
 800f54c:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800f54e:	613b      	str	r3, [r7, #16]
 800f550:	8aba      	ldrh	r2, [r7, #20]
 800f552:	8c7b      	ldrh	r3, [r7, #34]	; 0x22
 800f554:	4013      	ands	r3, r2
 800f556:	b29a      	uxth	r2, r3
 800f558:	693b      	ldr	r3, [r7, #16]
 800f55a:	801a      	strh	r2, [r3, #0]
 800f55c:	687b      	ldr	r3, [r7, #4]
 800f55e:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800f560:	1c9a      	adds	r2, r3, #2
 800f562:	687b      	ldr	r3, [r7, #4]
 800f564:	659a      	str	r2, [r3, #88]	; 0x58
 800f566:	687b      	ldr	r3, [r7, #4]
 800f568:	f8b3 305e 	ldrh.w	r3, [r3, #94]	; 0x5e
 800f56c:	b29b      	uxth	r3, r3
 800f56e:	3b01      	subs	r3, #1
 800f570:	b29a      	uxth	r2, r3
 800f572:	687b      	ldr	r3, [r7, #4]
 800f574:	f8a3 205e 	strh.w	r2, [r3, #94]	; 0x5e
 800f578:	687b      	ldr	r3, [r7, #4]
 800f57a:	681b      	ldr	r3, [r3, #0]
 800f57c:	69db      	ldr	r3, [r3, #28]
 800f57e:	627b      	str	r3, [r7, #36]	; 0x24
 800f580:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800f582:	f003 0307 	and.w	r3, r3, #7
 800f586:	2b00      	cmp	r3, #0
 800f588:	d04d      	beq.n	800f626 <UART_RxISR_16BIT_FIFOEN+0x122>
 800f58a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800f58c:	f003 0301 	and.w	r3, r3, #1
 800f590:	2b00      	cmp	r3, #0
 800f592:	d010      	beq.n	800f5b6 <UART_RxISR_16BIT_FIFOEN+0xb2>
 800f594:	69fb      	ldr	r3, [r7, #28]
 800f596:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800f59a:	2b00      	cmp	r3, #0
 800f59c:	d00b      	beq.n	800f5b6 <UART_RxISR_16BIT_FIFOEN+0xb2>
 800f59e:	687b      	ldr	r3, [r7, #4]
 800f5a0:	681b      	ldr	r3, [r3, #0]
 800f5a2:	2201      	movs	r2, #1
 800f5a4:	621a      	str	r2, [r3, #32]
 800f5a6:	687b      	ldr	r3, [r7, #4]
 800f5a8:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800f5ac:	f043 0201 	orr.w	r2, r3, #1
 800f5b0:	687b      	ldr	r3, [r7, #4]
 800f5b2:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
 800f5b6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800f5b8:	f003 0302 	and.w	r3, r3, #2
 800f5bc:	2b00      	cmp	r3, #0
 800f5be:	d010      	beq.n	800f5e2 <UART_RxISR_16BIT_FIFOEN+0xde>
 800f5c0:	69bb      	ldr	r3, [r7, #24]
 800f5c2:	f003 0301 	and.w	r3, r3, #1
 800f5c6:	2b00      	cmp	r3, #0
 800f5c8:	d00b      	beq.n	800f5e2 <UART_RxISR_16BIT_FIFOEN+0xde>
 800f5ca:	687b      	ldr	r3, [r7, #4]
 800f5cc:	681b      	ldr	r3, [r3, #0]
 800f5ce:	2202      	movs	r2, #2
 800f5d0:	621a      	str	r2, [r3, #32]
 800f5d2:	687b      	ldr	r3, [r7, #4]
 800f5d4:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800f5d8:	f043 0204 	orr.w	r2, r3, #4
 800f5dc:	687b      	ldr	r3, [r7, #4]
 800f5de:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
 800f5e2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800f5e4:	f003 0304 	and.w	r3, r3, #4
 800f5e8:	2b00      	cmp	r3, #0
 800f5ea:	d010      	beq.n	800f60e <UART_RxISR_16BIT_FIFOEN+0x10a>
 800f5ec:	69bb      	ldr	r3, [r7, #24]
 800f5ee:	f003 0301 	and.w	r3, r3, #1
 800f5f2:	2b00      	cmp	r3, #0
 800f5f4:	d00b      	beq.n	800f60e <UART_RxISR_16BIT_FIFOEN+0x10a>
 800f5f6:	687b      	ldr	r3, [r7, #4]
 800f5f8:	681b      	ldr	r3, [r3, #0]
 800f5fa:	2204      	movs	r2, #4
 800f5fc:	621a      	str	r2, [r3, #32]
 800f5fe:	687b      	ldr	r3, [r7, #4]
 800f600:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800f604:	f043 0202 	orr.w	r2, r3, #2
 800f608:	687b      	ldr	r3, [r7, #4]
 800f60a:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
 800f60e:	687b      	ldr	r3, [r7, #4]
 800f610:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800f614:	2b00      	cmp	r3, #0
 800f616:	d006      	beq.n	800f626 <UART_RxISR_16BIT_FIFOEN+0x122>
 800f618:	6878      	ldr	r0, [r7, #4]
 800f61a:	f7ff f816 	bl	800e64a <HAL_UART_ErrorCallback>
 800f61e:	687b      	ldr	r3, [r7, #4]
 800f620:	2200      	movs	r2, #0
 800f622:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
 800f626:	687b      	ldr	r3, [r7, #4]
 800f628:	f8b3 305e 	ldrh.w	r3, [r3, #94]	; 0x5e
 800f62c:	b29b      	uxth	r3, r3
 800f62e:	2b00      	cmp	r3, #0
 800f630:	d132      	bne.n	800f698 <UART_RxISR_16BIT_FIFOEN+0x194>
 800f632:	687b      	ldr	r3, [r7, #4]
 800f634:	681b      	ldr	r3, [r3, #0]
 800f636:	681a      	ldr	r2, [r3, #0]
 800f638:	687b      	ldr	r3, [r7, #4]
 800f63a:	681b      	ldr	r3, [r3, #0]
 800f63c:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 800f640:	601a      	str	r2, [r3, #0]
 800f642:	687b      	ldr	r3, [r7, #4]
 800f644:	681b      	ldr	r3, [r3, #0]
 800f646:	689b      	ldr	r3, [r3, #8]
 800f648:	687a      	ldr	r2, [r7, #4]
 800f64a:	6812      	ldr	r2, [r2, #0]
 800f64c:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 800f650:	f023 0301 	bic.w	r3, r3, #1
 800f654:	6093      	str	r3, [r2, #8]
 800f656:	687b      	ldr	r3, [r7, #4]
 800f658:	2220      	movs	r2, #32
 800f65a:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
 800f65e:	687b      	ldr	r3, [r7, #4]
 800f660:	2200      	movs	r2, #0
 800f662:	671a      	str	r2, [r3, #112]	; 0x70
 800f664:	687b      	ldr	r3, [r7, #4]
 800f666:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800f668:	2b01      	cmp	r3, #1
 800f66a:	d10f      	bne.n	800f68c <UART_RxISR_16BIT_FIFOEN+0x188>
 800f66c:	687b      	ldr	r3, [r7, #4]
 800f66e:	681b      	ldr	r3, [r3, #0]
 800f670:	681a      	ldr	r2, [r3, #0]
 800f672:	687b      	ldr	r3, [r7, #4]
 800f674:	681b      	ldr	r3, [r3, #0]
 800f676:	f022 0210 	bic.w	r2, r2, #16
 800f67a:	601a      	str	r2, [r3, #0]
 800f67c:	687b      	ldr	r3, [r7, #4]
 800f67e:	f8b3 305c 	ldrh.w	r3, [r3, #92]	; 0x5c
 800f682:	4619      	mov	r1, r3
 800f684:	6878      	ldr	r0, [r7, #4]
 800f686:	f7fe ffe9 	bl	800e65c <HAL_UARTEx_RxEventCallback>
 800f68a:	e002      	b.n	800f692 <UART_RxISR_16BIT_FIFOEN+0x18e>
 800f68c:	6878      	ldr	r0, [r7, #4]
 800f68e:	f7f7 fcf3 	bl	8007078 <HAL_UART_RxCpltCallback>
 800f692:	687b      	ldr	r3, [r7, #4]
 800f694:	2200      	movs	r2, #0
 800f696:	66da      	str	r2, [r3, #108]	; 0x6c
 800f698:	8afb      	ldrh	r3, [r7, #22]
 800f69a:	2b00      	cmp	r3, #0
 800f69c:	d005      	beq.n	800f6aa <UART_RxISR_16BIT_FIFOEN+0x1a6>
 800f69e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800f6a0:	f003 0320 	and.w	r3, r3, #32
 800f6a4:	2b00      	cmp	r3, #0
 800f6a6:	f47f af4c 	bne.w	800f542 <UART_RxISR_16BIT_FIFOEN+0x3e>
 800f6aa:	687b      	ldr	r3, [r7, #4]
 800f6ac:	f8b3 305e 	ldrh.w	r3, [r3, #94]	; 0x5e
 800f6b0:	81fb      	strh	r3, [r7, #14]
 800f6b2:	89fb      	ldrh	r3, [r7, #14]
 800f6b4:	2b00      	cmp	r3, #0
 800f6b6:	d021      	beq.n	800f6fc <UART_RxISR_16BIT_FIFOEN+0x1f8>
 800f6b8:	687b      	ldr	r3, [r7, #4]
 800f6ba:	f8b3 3068 	ldrh.w	r3, [r3, #104]	; 0x68
 800f6be:	89fa      	ldrh	r2, [r7, #14]
 800f6c0:	429a      	cmp	r2, r3
 800f6c2:	d21b      	bcs.n	800f6fc <UART_RxISR_16BIT_FIFOEN+0x1f8>
 800f6c4:	687b      	ldr	r3, [r7, #4]
 800f6c6:	681b      	ldr	r3, [r3, #0]
 800f6c8:	689a      	ldr	r2, [r3, #8]
 800f6ca:	687b      	ldr	r3, [r7, #4]
 800f6cc:	681b      	ldr	r3, [r3, #0]
 800f6ce:	f022 5280 	bic.w	r2, r2, #268435456	; 0x10000000
 800f6d2:	609a      	str	r2, [r3, #8]
 800f6d4:	687b      	ldr	r3, [r7, #4]
 800f6d6:	4a0b      	ldr	r2, [pc, #44]	; (800f704 <UART_RxISR_16BIT_FIFOEN+0x200>)
 800f6d8:	671a      	str	r2, [r3, #112]	; 0x70
 800f6da:	687b      	ldr	r3, [r7, #4]
 800f6dc:	681b      	ldr	r3, [r3, #0]
 800f6de:	681a      	ldr	r2, [r3, #0]
 800f6e0:	687b      	ldr	r3, [r7, #4]
 800f6e2:	681b      	ldr	r3, [r3, #0]
 800f6e4:	f042 0220 	orr.w	r2, r2, #32
 800f6e8:	601a      	str	r2, [r3, #0]
 800f6ea:	e007      	b.n	800f6fc <UART_RxISR_16BIT_FIFOEN+0x1f8>
 800f6ec:	687b      	ldr	r3, [r7, #4]
 800f6ee:	681b      	ldr	r3, [r3, #0]
 800f6f0:	699a      	ldr	r2, [r3, #24]
 800f6f2:	687b      	ldr	r3, [r7, #4]
 800f6f4:	681b      	ldr	r3, [r3, #0]
 800f6f6:	f042 0208 	orr.w	r2, r2, #8
 800f6fa:	619a      	str	r2, [r3, #24]
 800f6fc:	bf00      	nop
 800f6fe:	3728      	adds	r7, #40	; 0x28
 800f700:	46bd      	mov	sp, r7
 800f702:	bd80      	pop	{r7, pc}
 800f704:	0800f229 	.word	0x0800f229

0800f708 <HAL_UARTEx_WakeupCallback>:
 800f708:	b480      	push	{r7}
 800f70a:	b083      	sub	sp, #12
 800f70c:	af00      	add	r7, sp, #0
 800f70e:	6078      	str	r0, [r7, #4]
 800f710:	bf00      	nop
 800f712:	370c      	adds	r7, #12
 800f714:	46bd      	mov	sp, r7
 800f716:	bc80      	pop	{r7}
 800f718:	4770      	bx	lr

0800f71a <HAL_UARTEx_RxFifoFullCallback>:
 800f71a:	b480      	push	{r7}
 800f71c:	b083      	sub	sp, #12
 800f71e:	af00      	add	r7, sp, #0
 800f720:	6078      	str	r0, [r7, #4]
 800f722:	bf00      	nop
 800f724:	370c      	adds	r7, #12
 800f726:	46bd      	mov	sp, r7
 800f728:	bc80      	pop	{r7}
 800f72a:	4770      	bx	lr

0800f72c <HAL_UARTEx_TxFifoEmptyCallback>:
 800f72c:	b480      	push	{r7}
 800f72e:	b083      	sub	sp, #12
 800f730:	af00      	add	r7, sp, #0
 800f732:	6078      	str	r0, [r7, #4]
 800f734:	bf00      	nop
 800f736:	370c      	adds	r7, #12
 800f738:	46bd      	mov	sp, r7
 800f73a:	bc80      	pop	{r7}
 800f73c:	4770      	bx	lr

0800f73e <HAL_UARTEx_StopModeWakeUpSourceConfig>:
 800f73e:	b580      	push	{r7, lr}
 800f740:	b088      	sub	sp, #32
 800f742:	af02      	add	r7, sp, #8
 800f744:	60f8      	str	r0, [r7, #12]
 800f746:	1d3b      	adds	r3, r7, #4
 800f748:	e883 0006 	stmia.w	r3, {r1, r2}
 800f74c:	2300      	movs	r3, #0
 800f74e:	75fb      	strb	r3, [r7, #23]
 800f750:	68fb      	ldr	r3, [r7, #12]
 800f752:	f893 3080 	ldrb.w	r3, [r3, #128]	; 0x80
 800f756:	2b01      	cmp	r3, #1
 800f758:	d101      	bne.n	800f75e <HAL_UARTEx_StopModeWakeUpSourceConfig+0x20>
 800f75a:	2302      	movs	r3, #2
 800f75c:	e046      	b.n	800f7ec <HAL_UARTEx_StopModeWakeUpSourceConfig+0xae>
 800f75e:	68fb      	ldr	r3, [r7, #12]
 800f760:	2201      	movs	r2, #1
 800f762:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80
 800f766:	68fb      	ldr	r3, [r7, #12]
 800f768:	2224      	movs	r2, #36	; 0x24
 800f76a:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
 800f76e:	68fb      	ldr	r3, [r7, #12]
 800f770:	681b      	ldr	r3, [r3, #0]
 800f772:	681a      	ldr	r2, [r3, #0]
 800f774:	68fb      	ldr	r3, [r7, #12]
 800f776:	681b      	ldr	r3, [r3, #0]
 800f778:	f022 0201 	bic.w	r2, r2, #1
 800f77c:	601a      	str	r2, [r3, #0]
 800f77e:	68fb      	ldr	r3, [r7, #12]
 800f780:	681b      	ldr	r3, [r3, #0]
 800f782:	689b      	ldr	r3, [r3, #8]
 800f784:	f423 1140 	bic.w	r1, r3, #3145728	; 0x300000
 800f788:	687a      	ldr	r2, [r7, #4]
 800f78a:	68fb      	ldr	r3, [r7, #12]
 800f78c:	681b      	ldr	r3, [r3, #0]
 800f78e:	430a      	orrs	r2, r1
 800f790:	609a      	str	r2, [r3, #8]
 800f792:	687b      	ldr	r3, [r7, #4]
 800f794:	2b00      	cmp	r3, #0
 800f796:	d105      	bne.n	800f7a4 <HAL_UARTEx_StopModeWakeUpSourceConfig+0x66>
 800f798:	1d3b      	adds	r3, r7, #4
 800f79a:	e893 0006 	ldmia.w	r3, {r1, r2}
 800f79e:	68f8      	ldr	r0, [r7, #12]
 800f7a0:	f000 f900 	bl	800f9a4 <UARTEx_Wakeup_AddressConfig>
 800f7a4:	68fb      	ldr	r3, [r7, #12]
 800f7a6:	681b      	ldr	r3, [r3, #0]
 800f7a8:	681a      	ldr	r2, [r3, #0]
 800f7aa:	68fb      	ldr	r3, [r7, #12]
 800f7ac:	681b      	ldr	r3, [r3, #0]
 800f7ae:	f042 0201 	orr.w	r2, r2, #1
 800f7b2:	601a      	str	r2, [r3, #0]
 800f7b4:	f7f6 fe0e 	bl	80063d4 <HAL_GetTick>
 800f7b8:	6138      	str	r0, [r7, #16]
 800f7ba:	f06f 437e 	mvn.w	r3, #4261412864	; 0xfe000000
 800f7be:	9300      	str	r3, [sp, #0]
 800f7c0:	693b      	ldr	r3, [r7, #16]
 800f7c2:	2200      	movs	r2, #0
 800f7c4:	f44f 0180 	mov.w	r1, #4194304	; 0x400000
 800f7c8:	68f8      	ldr	r0, [r7, #12]
 800f7ca:	f7ff fa8f 	bl	800ecec <UART_WaitOnFlagUntilTimeout>
 800f7ce:	4603      	mov	r3, r0
 800f7d0:	2b00      	cmp	r3, #0
 800f7d2:	d002      	beq.n	800f7da <HAL_UARTEx_StopModeWakeUpSourceConfig+0x9c>
 800f7d4:	2303      	movs	r3, #3
 800f7d6:	75fb      	strb	r3, [r7, #23]
 800f7d8:	e003      	b.n	800f7e2 <HAL_UARTEx_StopModeWakeUpSourceConfig+0xa4>
 800f7da:	68fb      	ldr	r3, [r7, #12]
 800f7dc:	2220      	movs	r2, #32
 800f7de:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
 800f7e2:	68fb      	ldr	r3, [r7, #12]
 800f7e4:	2200      	movs	r2, #0
 800f7e6:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80
 800f7ea:	7dfb      	ldrb	r3, [r7, #23]
 800f7ec:	4618      	mov	r0, r3
 800f7ee:	3718      	adds	r7, #24
 800f7f0:	46bd      	mov	sp, r7
 800f7f2:	bd80      	pop	{r7, pc}

0800f7f4 <HAL_UARTEx_EnableStopMode>:
 800f7f4:	b480      	push	{r7}
 800f7f6:	b083      	sub	sp, #12
 800f7f8:	af00      	add	r7, sp, #0
 800f7fa:	6078      	str	r0, [r7, #4]
 800f7fc:	687b      	ldr	r3, [r7, #4]
 800f7fe:	f893 3080 	ldrb.w	r3, [r3, #128]	; 0x80
 800f802:	2b01      	cmp	r3, #1
 800f804:	d101      	bne.n	800f80a <HAL_UARTEx_EnableStopMode+0x16>
 800f806:	2302      	movs	r3, #2
 800f808:	e010      	b.n	800f82c <HAL_UARTEx_EnableStopMode+0x38>
 800f80a:	687b      	ldr	r3, [r7, #4]
 800f80c:	2201      	movs	r2, #1
 800f80e:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80
 800f812:	687b      	ldr	r3, [r7, #4]
 800f814:	681b      	ldr	r3, [r3, #0]
 800f816:	681a      	ldr	r2, [r3, #0]
 800f818:	687b      	ldr	r3, [r7, #4]
 800f81a:	681b      	ldr	r3, [r3, #0]
 800f81c:	f042 0202 	orr.w	r2, r2, #2
 800f820:	601a      	str	r2, [r3, #0]
 800f822:	687b      	ldr	r3, [r7, #4]
 800f824:	2200      	movs	r2, #0
 800f826:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80
 800f82a:	2300      	movs	r3, #0
 800f82c:	4618      	mov	r0, r3
 800f82e:	370c      	adds	r7, #12
 800f830:	46bd      	mov	sp, r7
 800f832:	bc80      	pop	{r7}
 800f834:	4770      	bx	lr

0800f836 <HAL_UARTEx_EnableFifoMode>:
 800f836:	b580      	push	{r7, lr}
 800f838:	b084      	sub	sp, #16
 800f83a:	af00      	add	r7, sp, #0
 800f83c:	6078      	str	r0, [r7, #4]
 800f83e:	687b      	ldr	r3, [r7, #4]
 800f840:	f893 3080 	ldrb.w	r3, [r3, #128]	; 0x80
 800f844:	2b01      	cmp	r3, #1
 800f846:	d101      	bne.n	800f84c <HAL_UARTEx_EnableFifoMode+0x16>
 800f848:	2302      	movs	r3, #2
 800f84a:	e02b      	b.n	800f8a4 <HAL_UARTEx_EnableFifoMode+0x6e>
 800f84c:	687b      	ldr	r3, [r7, #4]
 800f84e:	2201      	movs	r2, #1
 800f850:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80
 800f854:	687b      	ldr	r3, [r7, #4]
 800f856:	2224      	movs	r2, #36	; 0x24
 800f858:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
 800f85c:	687b      	ldr	r3, [r7, #4]
 800f85e:	681b      	ldr	r3, [r3, #0]
 800f860:	681b      	ldr	r3, [r3, #0]
 800f862:	60fb      	str	r3, [r7, #12]
 800f864:	687b      	ldr	r3, [r7, #4]
 800f866:	681b      	ldr	r3, [r3, #0]
 800f868:	681a      	ldr	r2, [r3, #0]
 800f86a:	687b      	ldr	r3, [r7, #4]
 800f86c:	681b      	ldr	r3, [r3, #0]
 800f86e:	f022 0201 	bic.w	r2, r2, #1
 800f872:	601a      	str	r2, [r3, #0]
 800f874:	68fb      	ldr	r3, [r7, #12]
 800f876:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
 800f87a:	60fb      	str	r3, [r7, #12]
 800f87c:	687b      	ldr	r3, [r7, #4]
 800f87e:	f04f 5200 	mov.w	r2, #536870912	; 0x20000000
 800f882:	665a      	str	r2, [r3, #100]	; 0x64
 800f884:	687b      	ldr	r3, [r7, #4]
 800f886:	681b      	ldr	r3, [r3, #0]
 800f888:	68fa      	ldr	r2, [r7, #12]
 800f88a:	601a      	str	r2, [r3, #0]
 800f88c:	6878      	ldr	r0, [r7, #4]
 800f88e:	f000 f8ab 	bl	800f9e8 <UARTEx_SetNbDataToProcess>
 800f892:	687b      	ldr	r3, [r7, #4]
 800f894:	2220      	movs	r2, #32
 800f896:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
 800f89a:	687b      	ldr	r3, [r7, #4]
 800f89c:	2200      	movs	r2, #0
 800f89e:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80
 800f8a2:	2300      	movs	r3, #0
 800f8a4:	4618      	mov	r0, r3
 800f8a6:	3710      	adds	r7, #16
 800f8a8:	46bd      	mov	sp, r7
 800f8aa:	bd80      	pop	{r7, pc}

0800f8ac <HAL_UARTEx_SetTxFifoThreshold>:
 800f8ac:	b580      	push	{r7, lr}
 800f8ae:	b084      	sub	sp, #16
 800f8b0:	af00      	add	r7, sp, #0
 800f8b2:	6078      	str	r0, [r7, #4]
 800f8b4:	6039      	str	r1, [r7, #0]
 800f8b6:	687b      	ldr	r3, [r7, #4]
 800f8b8:	f893 3080 	ldrb.w	r3, [r3, #128]	; 0x80
 800f8bc:	2b01      	cmp	r3, #1
 800f8be:	d101      	bne.n	800f8c4 <HAL_UARTEx_SetTxFifoThreshold+0x18>
 800f8c0:	2302      	movs	r3, #2
 800f8c2:	e02d      	b.n	800f920 <HAL_UARTEx_SetTxFifoThreshold+0x74>
 800f8c4:	687b      	ldr	r3, [r7, #4]
 800f8c6:	2201      	movs	r2, #1
 800f8c8:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80
 800f8cc:	687b      	ldr	r3, [r7, #4]
 800f8ce:	2224      	movs	r2, #36	; 0x24
 800f8d0:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
 800f8d4:	687b      	ldr	r3, [r7, #4]
 800f8d6:	681b      	ldr	r3, [r3, #0]
 800f8d8:	681b      	ldr	r3, [r3, #0]
 800f8da:	60fb      	str	r3, [r7, #12]
 800f8dc:	687b      	ldr	r3, [r7, #4]
 800f8de:	681b      	ldr	r3, [r3, #0]
 800f8e0:	681a      	ldr	r2, [r3, #0]
 800f8e2:	687b      	ldr	r3, [r7, #4]
 800f8e4:	681b      	ldr	r3, [r3, #0]
 800f8e6:	f022 0201 	bic.w	r2, r2, #1
 800f8ea:	601a      	str	r2, [r3, #0]
 800f8ec:	687b      	ldr	r3, [r7, #4]
 800f8ee:	681b      	ldr	r3, [r3, #0]
 800f8f0:	689b      	ldr	r3, [r3, #8]
 800f8f2:	f023 4160 	bic.w	r1, r3, #3758096384	; 0xe0000000
 800f8f6:	687b      	ldr	r3, [r7, #4]
 800f8f8:	681b      	ldr	r3, [r3, #0]
 800f8fa:	683a      	ldr	r2, [r7, #0]
 800f8fc:	430a      	orrs	r2, r1
 800f8fe:	609a      	str	r2, [r3, #8]
 800f900:	6878      	ldr	r0, [r7, #4]
 800f902:	f000 f871 	bl	800f9e8 <UARTEx_SetNbDataToProcess>
 800f906:	687b      	ldr	r3, [r7, #4]
 800f908:	681b      	ldr	r3, [r3, #0]
 800f90a:	68fa      	ldr	r2, [r7, #12]
 800f90c:	601a      	str	r2, [r3, #0]
 800f90e:	687b      	ldr	r3, [r7, #4]
 800f910:	2220      	movs	r2, #32
 800f912:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
 800f916:	687b      	ldr	r3, [r7, #4]
 800f918:	2200      	movs	r2, #0
 800f91a:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80
 800f91e:	2300      	movs	r3, #0
 800f920:	4618      	mov	r0, r3
 800f922:	3710      	adds	r7, #16
 800f924:	46bd      	mov	sp, r7
 800f926:	bd80      	pop	{r7, pc}

0800f928 <HAL_UARTEx_SetRxFifoThreshold>:
 800f928:	b580      	push	{r7, lr}
 800f92a:	b084      	sub	sp, #16
 800f92c:	af00      	add	r7, sp, #0
 800f92e:	6078      	str	r0, [r7, #4]
 800f930:	6039      	str	r1, [r7, #0]
 800f932:	687b      	ldr	r3, [r7, #4]
 800f934:	f893 3080 	ldrb.w	r3, [r3, #128]	; 0x80
 800f938:	2b01      	cmp	r3, #1
 800f93a:	d101      	bne.n	800f940 <HAL_UARTEx_SetRxFifoThreshold+0x18>
 800f93c:	2302      	movs	r3, #2
 800f93e:	e02d      	b.n	800f99c <HAL_UARTEx_SetRxFifoThreshold+0x74>
 800f940:	687b      	ldr	r3, [r7, #4]
 800f942:	2201      	movs	r2, #1
 800f944:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80
 800f948:	687b      	ldr	r3, [r7, #4]
 800f94a:	2224      	movs	r2, #36	; 0x24
 800f94c:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
 800f950:	687b      	ldr	r3, [r7, #4]
 800f952:	681b      	ldr	r3, [r3, #0]
 800f954:	681b      	ldr	r3, [r3, #0]
 800f956:	60fb      	str	r3, [r7, #12]
 800f958:	687b      	ldr	r3, [r7, #4]
 800f95a:	681b      	ldr	r3, [r3, #0]
 800f95c:	681a      	ldr	r2, [r3, #0]
 800f95e:	687b      	ldr	r3, [r7, #4]
 800f960:	681b      	ldr	r3, [r3, #0]
 800f962:	f022 0201 	bic.w	r2, r2, #1
 800f966:	601a      	str	r2, [r3, #0]
 800f968:	687b      	ldr	r3, [r7, #4]
 800f96a:	681b      	ldr	r3, [r3, #0]
 800f96c:	689b      	ldr	r3, [r3, #8]
 800f96e:	f023 6160 	bic.w	r1, r3, #234881024	; 0xe000000
 800f972:	687b      	ldr	r3, [r7, #4]
 800f974:	681b      	ldr	r3, [r3, #0]
 800f976:	683a      	ldr	r2, [r7, #0]
 800f978:	430a      	orrs	r2, r1
 800f97a:	609a      	str	r2, [r3, #8]
 800f97c:	6878      	ldr	r0, [r7, #4]
 800f97e:	f000 f833 	bl	800f9e8 <UARTEx_SetNbDataToProcess>
 800f982:	687b      	ldr	r3, [r7, #4]
 800f984:	681b      	ldr	r3, [r3, #0]
 800f986:	68fa      	ldr	r2, [r7, #12]
 800f988:	601a      	str	r2, [r3, #0]
 800f98a:	687b      	ldr	r3, [r7, #4]
 800f98c:	2220      	movs	r2, #32
 800f98e:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
 800f992:	687b      	ldr	r3, [r7, #4]
 800f994:	2200      	movs	r2, #0
 800f996:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80
 800f99a:	2300      	movs	r3, #0
 800f99c:	4618      	mov	r0, r3
 800f99e:	3710      	adds	r7, #16
 800f9a0:	46bd      	mov	sp, r7
 800f9a2:	bd80      	pop	{r7, pc}

0800f9a4 <UARTEx_Wakeup_AddressConfig>:
 800f9a4:	b480      	push	{r7}
 800f9a6:	b085      	sub	sp, #20
 800f9a8:	af00      	add	r7, sp, #0
 800f9aa:	60f8      	str	r0, [r7, #12]
 800f9ac:	1d3b      	adds	r3, r7, #4
 800f9ae:	e883 0006 	stmia.w	r3, {r1, r2}
 800f9b2:	68fb      	ldr	r3, [r7, #12]
 800f9b4:	681b      	ldr	r3, [r3, #0]
 800f9b6:	685b      	ldr	r3, [r3, #4]
 800f9b8:	f023 0210 	bic.w	r2, r3, #16
 800f9bc:	893b      	ldrh	r3, [r7, #8]
 800f9be:	4619      	mov	r1, r3
 800f9c0:	68fb      	ldr	r3, [r7, #12]
 800f9c2:	681b      	ldr	r3, [r3, #0]
 800f9c4:	430a      	orrs	r2, r1
 800f9c6:	605a      	str	r2, [r3, #4]
 800f9c8:	68fb      	ldr	r3, [r7, #12]
 800f9ca:	681b      	ldr	r3, [r3, #0]
 800f9cc:	685b      	ldr	r3, [r3, #4]
 800f9ce:	f023 417f 	bic.w	r1, r3, #4278190080	; 0xff000000
 800f9d2:	7abb      	ldrb	r3, [r7, #10]
 800f9d4:	061a      	lsls	r2, r3, #24
 800f9d6:	68fb      	ldr	r3, [r7, #12]
 800f9d8:	681b      	ldr	r3, [r3, #0]
 800f9da:	430a      	orrs	r2, r1
 800f9dc:	605a      	str	r2, [r3, #4]
 800f9de:	bf00      	nop
 800f9e0:	3714      	adds	r7, #20
 800f9e2:	46bd      	mov	sp, r7
 800f9e4:	bc80      	pop	{r7}
 800f9e6:	4770      	bx	lr

0800f9e8 <UARTEx_SetNbDataToProcess>:
 800f9e8:	b480      	push	{r7}
 800f9ea:	b089      	sub	sp, #36	; 0x24
 800f9ec:	af00      	add	r7, sp, #0
 800f9ee:	6078      	str	r0, [r7, #4]
 800f9f0:	4a2e      	ldr	r2, [pc, #184]	; (800faac <UARTEx_SetNbDataToProcess+0xc4>)
 800f9f2:	f107 0314 	add.w	r3, r7, #20
 800f9f6:	e892 0003 	ldmia.w	r2, {r0, r1}
 800f9fa:	e883 0003 	stmia.w	r3, {r0, r1}
 800f9fe:	4a2c      	ldr	r2, [pc, #176]	; (800fab0 <UARTEx_SetNbDataToProcess+0xc8>)
 800fa00:	f107 030c 	add.w	r3, r7, #12
 800fa04:	e892 0003 	ldmia.w	r2, {r0, r1}
 800fa08:	e883 0003 	stmia.w	r3, {r0, r1}
 800fa0c:	687b      	ldr	r3, [r7, #4]
 800fa0e:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800fa10:	2b00      	cmp	r3, #0
 800fa12:	d108      	bne.n	800fa26 <UARTEx_SetNbDataToProcess+0x3e>
 800fa14:	687b      	ldr	r3, [r7, #4]
 800fa16:	2201      	movs	r2, #1
 800fa18:	f8a3 206a 	strh.w	r2, [r3, #106]	; 0x6a
 800fa1c:	687b      	ldr	r3, [r7, #4]
 800fa1e:	2201      	movs	r2, #1
 800fa20:	f8a3 2068 	strh.w	r2, [r3, #104]	; 0x68
 800fa24:	e03d      	b.n	800faa2 <UARTEx_SetNbDataToProcess+0xba>
 800fa26:	2308      	movs	r3, #8
 800fa28:	77fb      	strb	r3, [r7, #31]
 800fa2a:	2308      	movs	r3, #8
 800fa2c:	77bb      	strb	r3, [r7, #30]
 800fa2e:	687b      	ldr	r3, [r7, #4]
 800fa30:	681b      	ldr	r3, [r3, #0]
 800fa32:	689b      	ldr	r3, [r3, #8]
 800fa34:	0e5b      	lsrs	r3, r3, #25
 800fa36:	b2db      	uxtb	r3, r3
 800fa38:	f003 0307 	and.w	r3, r3, #7
 800fa3c:	777b      	strb	r3, [r7, #29]
 800fa3e:	687b      	ldr	r3, [r7, #4]
 800fa40:	681b      	ldr	r3, [r3, #0]
 800fa42:	689b      	ldr	r3, [r3, #8]
 800fa44:	0f5b      	lsrs	r3, r3, #29
 800fa46:	b2db      	uxtb	r3, r3
 800fa48:	f003 0307 	and.w	r3, r3, #7
 800fa4c:	773b      	strb	r3, [r7, #28]
 800fa4e:	7fbb      	ldrb	r3, [r7, #30]
 800fa50:	7f3a      	ldrb	r2, [r7, #28]
 800fa52:	f107 0120 	add.w	r1, r7, #32
 800fa56:	440a      	add	r2, r1
 800fa58:	f812 2c0c 	ldrb.w	r2, [r2, #-12]
 800fa5c:	fb02 f303 	mul.w	r3, r2, r3
 800fa60:	7f3a      	ldrb	r2, [r7, #28]
 800fa62:	f107 0120 	add.w	r1, r7, #32
 800fa66:	440a      	add	r2, r1
 800fa68:	f812 2c14 	ldrb.w	r2, [r2, #-20]
 800fa6c:	fb93 f3f2 	sdiv	r3, r3, r2
 800fa70:	b29a      	uxth	r2, r3
 800fa72:	687b      	ldr	r3, [r7, #4]
 800fa74:	f8a3 206a 	strh.w	r2, [r3, #106]	; 0x6a
 800fa78:	7ffb      	ldrb	r3, [r7, #31]
 800fa7a:	7f7a      	ldrb	r2, [r7, #29]
 800fa7c:	f107 0120 	add.w	r1, r7, #32
 800fa80:	440a      	add	r2, r1
 800fa82:	f812 2c0c 	ldrb.w	r2, [r2, #-12]
 800fa86:	fb02 f303 	mul.w	r3, r2, r3
 800fa8a:	7f7a      	ldrb	r2, [r7, #29]
 800fa8c:	f107 0120 	add.w	r1, r7, #32
 800fa90:	440a      	add	r2, r1
 800fa92:	f812 2c14 	ldrb.w	r2, [r2, #-20]
 800fa96:	fb93 f3f2 	sdiv	r3, r3, r2
 800fa9a:	b29a      	uxth	r2, r3
 800fa9c:	687b      	ldr	r3, [r7, #4]
 800fa9e:	f8a3 2068 	strh.w	r2, [r3, #104]	; 0x68
 800faa2:	bf00      	nop
 800faa4:	3724      	adds	r7, #36	; 0x24
 800faa6:	46bd      	mov	sp, r7
 800faa8:	bc80      	pop	{r7}
 800faaa:	4770      	bx	lr
 800faac:	080259c0 	.word	0x080259c0
 800fab0:	080259c8 	.word	0x080259c8

0800fab4 <MX_LoRaWAN_Init>:
/* USER CODE END PFP */

/* Exported functions --------------------------------------------------------*/

void MX_LoRaWAN_Init(void)
{
 800fab4:	b580      	push	{r7, lr}
 800fab6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MX_LoRaWAN_Init_1 */
  //sprintf( myString, "... vor ... SystemApp_Init() ... counter: %d \n", counter++ ); ITM_PrintString(myString);
  //ITM_SendChar('x');
  printf( "... MX_LoRaWAN_init() ... \n" );
 800fab8:	4804      	ldr	r0, [pc, #16]	; (800facc <MX_LoRaWAN_Init+0x18>)
 800faba:	f014 ff11 	bl	80248e0 <puts>
  /* USER CODE END MX_LoRaWAN_Init_1 */
  SystemApp_Init();
 800fabe:	f7f6 facf 	bl	8006060 <SystemApp_Init>
  /* USER CODE BEGIN MX_LoRaWAN_Init_2 */
  //sprintf( myString, "... nach ... SystemApp_Init() ... counter: %d \n", counter++ ); ITM_PrintString(myString);
  /* USER CODE END MX_LoRaWAN_Init_2 */
  LoRaWAN_Init();
 800fac2:	f000 f813 	bl	800faec <LoRaWAN_Init>
  /* USER CODE BEGIN MX_LoRaWAN_Init_3 */
  //sprintf( myString, "... nach ... LoRaWAN_Init() ... counter: %d \n", counter++ ); ITM_PrintString(myString);
  /* USER CODE END MX_LoRaWAN_Init_3 */
}
 800fac6:	bf00      	nop
 800fac8:	bd80      	pop	{r7, pc}
 800faca:	bf00      	nop
 800facc:	080259d0 	.word	0x080259d0

0800fad0 <MX_LoRaWAN_Process>:

void MX_LoRaWAN_Process(void)
{
 800fad0:	b580      	push	{r7, lr}
 800fad2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MX_LoRaWAN_Process_1 */
  //sprintf( myString, "... nach ... SystemClock_Config() ... counter: %d \n", counter++ ); ITM_PrintString(myString);
  printf( "... MX_LoRaWAN_Process() ... \n" );
 800fad4:	4804      	ldr	r0, [pc, #16]	; (800fae8 <MX_LoRaWAN_Process+0x18>)
 800fad6:	f014 ff03 	bl	80248e0 <puts>

  /* USER CODE END MX_LoRaWAN_Process_1 */
  UTIL_SEQ_Run(UTIL_SEQ_DEFAULT);
 800fada:	f04f 30ff 	mov.w	r0, #4294967295
 800fade:	f011 f8d3 	bl	8020c88 <UTIL_SEQ_Run>
  /* USER CODE BEGIN MX_LoRaWAN_Process_2 */

  /* USER CODE END MX_LoRaWAN_Process_2 */
}
 800fae2:	bf00      	nop
 800fae4:	bd80      	pop	{r7, pc}
 800fae6:	bf00      	nop
 800fae8:	080259ec 	.word	0x080259ec

0800faec <LoRaWAN_Init>:
/* USER CODE BEGIN EF */

/* USER CODE END EF */

void LoRaWAN_Init(void)
{
 800faec:	b580      	push	{r7, lr}
 800faee:	b084      	sub	sp, #16
 800faf0:	af04      	add	r7, sp, #16
  /* USER CODE BEGIN LoRaWAN_Init_1 */
  printf( "... LoRaWAN_Init() ... \n" );
 800faf2:	484a      	ldr	r0, [pc, #296]	; (800fc1c <LoRaWAN_Init+0x130>)
 800faf4:	f014 fef4 	bl	80248e0 <puts>
  BSP_LED_Init(LED_BLUE);
  BSP_LED_Init(LED_GREEN);
  BSP_LED_Init(LED_RED);
  BSP_PB_Init(BUTTON_SW2, BUTTON_MODE_EXTI);
#elif defined(MX_BOARD_PSEUDODRIVER)
  SYS_LED_Init(SYS_LED_BLUE);
 800faf8:	2002      	movs	r0, #2
 800fafa:	f7f5 f90f 	bl	8004d1c <SYS_LED_Init>
  SYS_LED_Init(SYS_LED_GREEN);
 800fafe:	2001      	movs	r0, #1
 800fb00:	f7f5 f90c 	bl	8004d1c <SYS_LED_Init>
  SYS_LED_Init(SYS_LED_RED);
 800fb04:	2000      	movs	r0, #0
 800fb06:	f7f5 f909 	bl	8004d1c <SYS_LED_Init>
  SYS_PB_Init(SYS_BUTTON2, SYS_BUTTON_MODE_EXTI);
 800fb0a:	2101      	movs	r1, #1
 800fb0c:	2002      	movs	r0, #2
 800fb0e:	f7f5 f98d 	bl	8004e2c <SYS_PB_Init>
#else
#error user to provide its board code or to call his board driver functions
#endif  /* USE_BSP_DRIVER || MX_BOARD_PSEUDODRIVER */

  /* Get LoRa APP version*/
  APP_LOG(TS_OFF, VLEVEL_M, "APP_VERSION:        V%X.%X.%X\r\n",
 800fb12:	2300      	movs	r3, #0
 800fb14:	9302      	str	r3, [sp, #8]
 800fb16:	2300      	movs	r3, #0
 800fb18:	9301      	str	r3, [sp, #4]
 800fb1a:	2301      	movs	r3, #1
 800fb1c:	9300      	str	r3, [sp, #0]
 800fb1e:	4b40      	ldr	r3, [pc, #256]	; (800fc20 <LoRaWAN_Init+0x134>)
 800fb20:	2200      	movs	r2, #0
 800fb22:	2100      	movs	r1, #0
 800fb24:	2002      	movs	r0, #2
 800fb26:	f011 fcd1 	bl	80214cc <UTIL_ADV_TRACE_COND_FSend>
          (uint8_t)(__LORA_APP_VERSION >> __APP_VERSION_MAIN_SHIFT),
          (uint8_t)(__LORA_APP_VERSION >> __APP_VERSION_SUB1_SHIFT),
          (uint8_t)(__LORA_APP_VERSION >> __APP_VERSION_SUB2_SHIFT));

  /* Get MW LoraWAN info */
  APP_LOG(TS_OFF, VLEVEL_M, "MW_LORAWAN_VERSION: V%X.%X.%X\r\n",
 800fb2a:	2301      	movs	r3, #1
 800fb2c:	9302      	str	r3, [sp, #8]
 800fb2e:	2302      	movs	r3, #2
 800fb30:	9301      	str	r3, [sp, #4]
 800fb32:	2302      	movs	r3, #2
 800fb34:	9300      	str	r3, [sp, #0]
 800fb36:	4b3b      	ldr	r3, [pc, #236]	; (800fc24 <LoRaWAN_Init+0x138>)
 800fb38:	2200      	movs	r2, #0
 800fb3a:	2100      	movs	r1, #0
 800fb3c:	2002      	movs	r0, #2
 800fb3e:	f011 fcc5 	bl	80214cc <UTIL_ADV_TRACE_COND_FSend>
          (uint8_t)(__LORAWAN_VERSION >> __APP_VERSION_MAIN_SHIFT),
          (uint8_t)(__LORAWAN_VERSION >> __APP_VERSION_SUB1_SHIFT),
          (uint8_t)(__LORAWAN_VERSION >> __APP_VERSION_SUB2_SHIFT));

  /* Get MW SubGhz_Phy info */
  APP_LOG(TS_OFF, VLEVEL_M, "MW_RADIO_VERSION:   V%X.%X.%X\r\n",
 800fb42:	2301      	movs	r3, #1
 800fb44:	9302      	str	r3, [sp, #8]
 800fb46:	2306      	movs	r3, #6
 800fb48:	9301      	str	r3, [sp, #4]
 800fb4a:	2300      	movs	r3, #0
 800fb4c:	9300      	str	r3, [sp, #0]
 800fb4e:	4b36      	ldr	r3, [pc, #216]	; (800fc28 <LoRaWAN_Init+0x13c>)
 800fb50:	2200      	movs	r2, #0
 800fb52:	2100      	movs	r1, #0
 800fb54:	2002      	movs	r0, #2
 800fb56:	f011 fcb9 	bl	80214cc <UTIL_ADV_TRACE_COND_FSend>
          (uint8_t)(__SUBGHZ_PHY_VERSION >> __APP_VERSION_MAIN_SHIFT),
          (uint8_t)(__SUBGHZ_PHY_VERSION >> __APP_VERSION_SUB1_SHIFT),
          (uint8_t)(__SUBGHZ_PHY_VERSION >> __APP_VERSION_SUB2_SHIFT));

  UTIL_TIMER_Create(&TxLedTimer, 0xFFFFFFFFU, UTIL_TIMER_ONESHOT, OnTxTimerLedEvent, NULL);
 800fb5a:	2300      	movs	r3, #0
 800fb5c:	9300      	str	r3, [sp, #0]
 800fb5e:	4b33      	ldr	r3, [pc, #204]	; (800fc2c <LoRaWAN_Init+0x140>)
 800fb60:	2200      	movs	r2, #0
 800fb62:	f04f 31ff 	mov.w	r1, #4294967295
 800fb66:	4832      	ldr	r0, [pc, #200]	; (800fc30 <LoRaWAN_Init+0x144>)
 800fb68:	f011 fa14 	bl	8020f94 <UTIL_TIMER_Create>
  UTIL_TIMER_Create(&RxLedTimer, 0xFFFFFFFFU, UTIL_TIMER_ONESHOT, OnRxTimerLedEvent, NULL);
 800fb6c:	2300      	movs	r3, #0
 800fb6e:	9300      	str	r3, [sp, #0]
 800fb70:	4b30      	ldr	r3, [pc, #192]	; (800fc34 <LoRaWAN_Init+0x148>)
 800fb72:	2200      	movs	r2, #0
 800fb74:	f04f 31ff 	mov.w	r1, #4294967295
 800fb78:	482f      	ldr	r0, [pc, #188]	; (800fc38 <LoRaWAN_Init+0x14c>)
 800fb7a:	f011 fa0b 	bl	8020f94 <UTIL_TIMER_Create>
  UTIL_TIMER_Create(&JoinLedTimer, 0xFFFFFFFFU, UTIL_TIMER_PERIODIC, OnJoinTimerLedEvent, NULL);
 800fb7e:	2300      	movs	r3, #0
 800fb80:	9300      	str	r3, [sp, #0]
 800fb82:	4b2e      	ldr	r3, [pc, #184]	; (800fc3c <LoRaWAN_Init+0x150>)
 800fb84:	2201      	movs	r2, #1
 800fb86:	f04f 31ff 	mov.w	r1, #4294967295
 800fb8a:	482d      	ldr	r0, [pc, #180]	; (800fc40 <LoRaWAN_Init+0x154>)
 800fb8c:	f011 fa02 	bl	8020f94 <UTIL_TIMER_Create>
  UTIL_TIMER_SetPeriod(&TxLedTimer, 500);
 800fb90:	f44f 71fa 	mov.w	r1, #500	; 0x1f4
 800fb94:	4826      	ldr	r0, [pc, #152]	; (800fc30 <LoRaWAN_Init+0x144>)
 800fb96:	f011 fb11 	bl	80211bc <UTIL_TIMER_SetPeriod>
  UTIL_TIMER_SetPeriod(&RxLedTimer, 500);
 800fb9a:	f44f 71fa 	mov.w	r1, #500	; 0x1f4
 800fb9e:	4826      	ldr	r0, [pc, #152]	; (800fc38 <LoRaWAN_Init+0x14c>)
 800fba0:	f011 fb0c 	bl	80211bc <UTIL_TIMER_SetPeriod>
  UTIL_TIMER_SetPeriod(&JoinLedTimer, 500);
 800fba4:	f44f 71fa 	mov.w	r1, #500	; 0x1f4
 800fba8:	4825      	ldr	r0, [pc, #148]	; (800fc40 <LoRaWAN_Init+0x154>)
 800fbaa:	f011 fb07 	bl	80211bc <UTIL_TIMER_SetPeriod>

  UTIL_SEQ_RegTask((1 << CFG_SEQ_Task_LmHandlerProcess), UTIL_SEQ_RFU, LmHandlerProcess);
 800fbae:	4a25      	ldr	r2, [pc, #148]	; (800fc44 <LoRaWAN_Init+0x158>)
 800fbb0:	2100      	movs	r1, #0
 800fbb2:	2001      	movs	r0, #1
 800fbb4:	f011 f94c 	bl	8020e50 <UTIL_SEQ_RegTask>
  UTIL_SEQ_RegTask((1 << CFG_SEQ_Task_LoRaSendOnTxTimerOrButtonEvent), UTIL_SEQ_RFU, SendTxData);
 800fbb8:	4a23      	ldr	r2, [pc, #140]	; (800fc48 <LoRaWAN_Init+0x15c>)
 800fbba:	2100      	movs	r1, #0
 800fbbc:	2002      	movs	r0, #2
 800fbbe:	f011 f947 	bl	8020e50 <UTIL_SEQ_RegTask>
  /* Init Info table used by LmHandler*/
  LoraInfo_Init();
 800fbc2:	f000 faaf 	bl	8010124 <LoraInfo_Init>

  /* Init the Lora Stack*/
  LmHandlerInit(&LmHandlerCallbacks);
 800fbc6:	4821      	ldr	r0, [pc, #132]	; (800fc4c <LoRaWAN_Init+0x160>)
 800fbc8:	f002 f816 	bl	8011bf8 <LmHandlerInit>

  LmHandlerConfigure(&LmHandlerParams);
 800fbcc:	4820      	ldr	r0, [pc, #128]	; (800fc50 <LoRaWAN_Init+0x164>)
 800fbce:	f002 f859 	bl	8011c84 <LmHandlerConfigure>

  UTIL_TIMER_Start(&JoinLedTimer);
 800fbd2:	481b      	ldr	r0, [pc, #108]	; (800fc40 <LoRaWAN_Init+0x154>)
 800fbd4:	f011 fa14 	bl	8021000 <UTIL_TIMER_Start>

  LmHandlerJoin(ActivationType);
 800fbd8:	4b1e      	ldr	r3, [pc, #120]	; (800fc54 <LoRaWAN_Init+0x168>)
 800fbda:	781b      	ldrb	r3, [r3, #0]
 800fbdc:	4618      	mov	r0, r3
 800fbde:	f002 f997 	bl	8011f10 <LmHandlerJoin>

  if (EventType == TX_ON_TIMER)
 800fbe2:	4b1d      	ldr	r3, [pc, #116]	; (800fc58 <LoRaWAN_Init+0x16c>)
 800fbe4:	781b      	ldrb	r3, [r3, #0]
 800fbe6:	2b00      	cmp	r3, #0
 800fbe8:	d110      	bne.n	800fc0c <LoRaWAN_Init+0x120>
  {
    /* send every time timer elapses */
    UTIL_TIMER_Create(&TxTimer,  0xFFFFFFFFU, UTIL_TIMER_ONESHOT, OnTxTimerEvent, NULL);
 800fbea:	2300      	movs	r3, #0
 800fbec:	9300      	str	r3, [sp, #0]
 800fbee:	4b1b      	ldr	r3, [pc, #108]	; (800fc5c <LoRaWAN_Init+0x170>)
 800fbf0:	2200      	movs	r2, #0
 800fbf2:	f04f 31ff 	mov.w	r1, #4294967295
 800fbf6:	481a      	ldr	r0, [pc, #104]	; (800fc60 <LoRaWAN_Init+0x174>)
 800fbf8:	f011 f9cc 	bl	8020f94 <UTIL_TIMER_Create>
    UTIL_TIMER_SetPeriod(&TxTimer,  APP_TX_DUTYCYCLE);
 800fbfc:	2164      	movs	r1, #100	; 0x64
 800fbfe:	4818      	ldr	r0, [pc, #96]	; (800fc60 <LoRaWAN_Init+0x174>)
 800fc00:	f011 fadc 	bl	80211bc <UTIL_TIMER_SetPeriod>
    UTIL_TIMER_Start(&TxTimer);
 800fc04:	4816      	ldr	r0, [pc, #88]	; (800fc60 <LoRaWAN_Init+0x174>)
 800fc06:	f011 f9fb 	bl	8021000 <UTIL_TIMER_Start>
  }

  /* USER CODE BEGIN LoRaWAN_Init_Last */

  /* USER CODE END LoRaWAN_Init_Last */
}
 800fc0a:	e003      	b.n	800fc14 <LoRaWAN_Init+0x128>
    SYS_PB_Init(SYS_BUTTON1, SYS_BUTTON_MODE_EXTI);
 800fc0c:	2101      	movs	r1, #1
 800fc0e:	2000      	movs	r0, #0
 800fc10:	f7f5 f90c 	bl	8004e2c <SYS_PB_Init>
}
 800fc14:	bf00      	nop
 800fc16:	46bd      	mov	sp, r7
 800fc18:	bd80      	pop	{r7, pc}
 800fc1a:	bf00      	nop
 800fc1c:	08025a0c 	.word	0x08025a0c
 800fc20:	08025a24 	.word	0x08025a24
 800fc24:	08025a44 	.word	0x08025a44
 800fc28:	08025a64 	.word	0x08025a64
 800fc2c:	0800ff19 	.word	0x0800ff19
 800fc30:	200009f4 	.word	0x200009f4
 800fc34:	0800ff39 	.word	0x0800ff39
 800fc38:	20000a0c 	.word	0x20000a0c
 800fc3c:	0800ff59 	.word	0x0800ff59
 800fc40:	20000a24 	.word	0x20000a24
 800fc44:	08011e69 	.word	0x08011e69
 800fc48:	0800fddd 	.word	0x0800fddd
 800fc4c:	20000054 	.word	0x20000054
 800fc50:	2000006c 	.word	0x2000006c
 800fc54:	20000050 	.word	0x20000050
 800fc58:	20000072 	.word	0x20000072
 800fc5c:	0800feed 	.word	0x0800feed
 800fc60:	200009dc 	.word	0x200009dc

0800fc64 <HAL_GPIO_EXTI_Callback>:
/* Calling BSP_PB_Callback() from here it shortcuts the BSP. */
/* If users wants to go through the BSP, it can remove BSP_PB_Callback() from here */
/* and add a call to BSP_PB_IRQHandler() in the USER CODE SESSION of the */
/* correspondent EXTIn_IRQHandler() in the stm32wlxx_it.c */
void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin)
{
 800fc64:	b580      	push	{r7, lr}
 800fc66:	b082      	sub	sp, #8
 800fc68:	af00      	add	r7, sp, #0
 800fc6a:	4603      	mov	r3, r0
 800fc6c:	80fb      	strh	r3, [r7, #6]
  /* USER CODE BEGIN HAL_GPIO_EXTI_Callback_1 */
   printf( "... HAL_GPIO_EXTI_Callback() ... GPIO_Pin: %d \n", GPIO_Pin );
 800fc6e:	88fb      	ldrh	r3, [r7, #6]
 800fc70:	4619      	mov	r1, r3
 800fc72:	4809      	ldr	r0, [pc, #36]	; (800fc98 <HAL_GPIO_EXTI_Callback+0x34>)
 800fc74:	f014 fdae 	bl	80247d4 <iprintf>

  /* USER CODE END HAL_GPIO_EXTI_Callback_1 */
  switch (GPIO_Pin)
 800fc78:	88fb      	ldrh	r3, [r7, #6]
 800fc7a:	2b01      	cmp	r3, #1
 800fc7c:	d002      	beq.n	800fc84 <HAL_GPIO_EXTI_Callback+0x20>
 800fc7e:	2b02      	cmp	r3, #2
 800fc80:	d005      	beq.n	800fc8e <HAL_GPIO_EXTI_Callback+0x2a>

    /* USER CODE END EXTI_Callback_Switch_case */
    default:
    /* USER CODE BEGIN EXTI_Callback_Switch_default */
    /* USER CODE END EXTI_Callback_Switch_default */
      break;
 800fc82:	e005      	b.n	800fc90 <HAL_GPIO_EXTI_Callback+0x2c>
      UTIL_SEQ_SetTask((1 << CFG_SEQ_Task_LoRaSendOnTxTimerOrButtonEvent), CFG_SEQ_Prio_0);
 800fc84:	2100      	movs	r1, #0
 800fc86:	2002      	movs	r0, #2
 800fc88:	f011 f904 	bl	8020e94 <UTIL_SEQ_SetTask>
      break;
 800fc8c:	e000      	b.n	800fc90 <HAL_GPIO_EXTI_Callback+0x2c>
      break;
 800fc8e:	bf00      	nop
  }
  /* USER CODE BEGIN HAL_GPIO_EXTI_Callback_Last */

  /* USER CODE END HAL_GPIO_EXTI_Callback_Last */
}
 800fc90:	bf00      	nop
 800fc92:	3708      	adds	r7, #8
 800fc94:	46bd      	mov	sp, r7
 800fc96:	bd80      	pop	{r7, pc}
 800fc98:	08025a84 	.word	0x08025a84

0800fc9c <OnRxData>:
/* USER CODE BEGIN PrFD */

/* USER CODE END PrFD */

static void OnRxData(LmHandlerAppData_t *appData, LmHandlerRxParams_t *params)
{
 800fc9c:	b5b0      	push	{r4, r5, r7, lr}
 800fc9e:	b088      	sub	sp, #32
 800fca0:	af06      	add	r7, sp, #24
 800fca2:	6078      	str	r0, [r7, #4]
 800fca4:	6039      	str	r1, [r7, #0]
  /* USER CODE BEGIN OnRxData_1 */
  printf( "... OnRxData() ... \n" );
 800fca6:	4845      	ldr	r0, [pc, #276]	; (800fdbc <OnRxData+0x120>)
 800fca8:	f014 fe1a 	bl	80248e0 <puts>

  /* USER CODE END OnRxData_1 */
  if ((appData != NULL) && (params != NULL))
 800fcac:	687b      	ldr	r3, [r7, #4]
 800fcae:	2b00      	cmp	r3, #0
 800fcb0:	d07b      	beq.n	800fdaa <OnRxData+0x10e>
 800fcb2:	683b      	ldr	r3, [r7, #0]
 800fcb4:	2b00      	cmp	r3, #0
 800fcb6:	d078      	beq.n	800fdaa <OnRxData+0x10e>
  {
#if defined(USE_BSP_DRIVER)
    BSP_LED_On(LED_BLUE) ;
#elif defined(MX_BOARD_PSEUDODRIVER)
    SYS_LED_On(SYS_LED_BLUE) ;
 800fcb8:	2002      	movs	r0, #2
 800fcba:	f7f5 f869 	bl	8004d90 <SYS_LED_On>
#endif /* USE_BSP_DRIVER || MX_BOARD_PSEUDODRIVER */
    UTIL_TIMER_Start(&RxLedTimer);
 800fcbe:	4840      	ldr	r0, [pc, #256]	; (800fdc0 <OnRxData+0x124>)
 800fcc0:	f011 f99e 	bl	8021000 <UTIL_TIMER_Start>

    static const char *slotStrings[] = { "1", "2", "C", "C Multicast", "B Ping-Slot", "B Multicast Ping-Slot" };

    APP_LOG(TS_OFF, VLEVEL_M, "\r\n###### ========== MCPS-Indication ==========\r\n");
 800fcc4:	4b3f      	ldr	r3, [pc, #252]	; (800fdc4 <OnRxData+0x128>)
 800fcc6:	2200      	movs	r2, #0
 800fcc8:	2100      	movs	r1, #0
 800fcca:	2002      	movs	r0, #2
 800fccc:	f011 fbfe 	bl	80214cc <UTIL_ADV_TRACE_COND_FSend>
    APP_LOG(TS_OFF, VLEVEL_H, "###### D/L FRAME:%04d | SLOT:%s | PORT:%d | DR:%d | RSSI:%d | SNR:%d\r\n",
 800fcd0:	683b      	ldr	r3, [r7, #0]
 800fcd2:	689b      	ldr	r3, [r3, #8]
 800fcd4:	683a      	ldr	r2, [r7, #0]
 800fcd6:	f992 200c 	ldrsb.w	r2, [r2, #12]
 800fcda:	4611      	mov	r1, r2
 800fcdc:	4a3a      	ldr	r2, [pc, #232]	; (800fdc8 <OnRxData+0x12c>)
 800fcde:	f852 2021 	ldr.w	r2, [r2, r1, lsl #2]
 800fce2:	6879      	ldr	r1, [r7, #4]
 800fce4:	7809      	ldrb	r1, [r1, #0]
 800fce6:	4608      	mov	r0, r1
 800fce8:	6839      	ldr	r1, [r7, #0]
 800fcea:	f991 1002 	ldrsb.w	r1, [r1, #2]
 800fcee:	460c      	mov	r4, r1
 800fcf0:	6839      	ldr	r1, [r7, #0]
 800fcf2:	f991 1003 	ldrsb.w	r1, [r1, #3]
 800fcf6:	460d      	mov	r5, r1
 800fcf8:	6839      	ldr	r1, [r7, #0]
 800fcfa:	f991 1004 	ldrsb.w	r1, [r1, #4]
 800fcfe:	9105      	str	r1, [sp, #20]
 800fd00:	9504      	str	r5, [sp, #16]
 800fd02:	9403      	str	r4, [sp, #12]
 800fd04:	9002      	str	r0, [sp, #8]
 800fd06:	9201      	str	r2, [sp, #4]
 800fd08:	9300      	str	r3, [sp, #0]
 800fd0a:	4b30      	ldr	r3, [pc, #192]	; (800fdcc <OnRxData+0x130>)
 800fd0c:	2200      	movs	r2, #0
 800fd0e:	2100      	movs	r1, #0
 800fd10:	2003      	movs	r0, #3
 800fd12:	f011 fbdb 	bl	80214cc <UTIL_ADV_TRACE_COND_FSend>
            params->DownlinkCounter, slotStrings[params->RxSlot], appData->Port, params->Datarate, params->Rssi, params->Snr);
    switch (appData->Port)
 800fd16:	687b      	ldr	r3, [r7, #4]
 800fd18:	781b      	ldrb	r3, [r3, #0]
 800fd1a:	2b02      	cmp	r3, #2
 800fd1c:	d021      	beq.n	800fd62 <OnRxData+0xc6>
 800fd1e:	2b03      	cmp	r3, #3
 800fd20:	d145      	bne.n	800fdae <OnRxData+0x112>
    {
      case LORAWAN_SWITCH_CLASS_PORT:
        /*this port switches the class*/
        if (appData->BufferSize == 1)
 800fd22:	687b      	ldr	r3, [r7, #4]
 800fd24:	785b      	ldrb	r3, [r3, #1]
 800fd26:	2b01      	cmp	r3, #1
 800fd28:	d117      	bne.n	800fd5a <OnRxData+0xbe>
        {
          switch (appData->Buffer[0])
 800fd2a:	687b      	ldr	r3, [r7, #4]
 800fd2c:	685b      	ldr	r3, [r3, #4]
 800fd2e:	781b      	ldrb	r3, [r3, #0]
 800fd30:	2b02      	cmp	r3, #2
 800fd32:	d00e      	beq.n	800fd52 <OnRxData+0xb6>
 800fd34:	2b02      	cmp	r3, #2
 800fd36:	dc12      	bgt.n	800fd5e <OnRxData+0xc2>
 800fd38:	2b00      	cmp	r3, #0
 800fd3a:	d002      	beq.n	800fd42 <OnRxData+0xa6>
 800fd3c:	2b01      	cmp	r3, #1
 800fd3e:	d004      	beq.n	800fd4a <OnRxData+0xae>
            {
              LmHandlerRequestClass(CLASS_C);
              break;
            }
            default:
              break;
 800fd40:	e00d      	b.n	800fd5e <OnRxData+0xc2>
              LmHandlerRequestClass(CLASS_A);
 800fd42:	2000      	movs	r0, #0
 800fd44:	f002 fa34 	bl	80121b0 <LmHandlerRequestClass>
              break;
 800fd48:	e00a      	b.n	800fd60 <OnRxData+0xc4>
              LmHandlerRequestClass(CLASS_B);
 800fd4a:	2001      	movs	r0, #1
 800fd4c:	f002 fa30 	bl	80121b0 <LmHandlerRequestClass>
              break;
 800fd50:	e006      	b.n	800fd60 <OnRxData+0xc4>
              LmHandlerRequestClass(CLASS_C);
 800fd52:	2002      	movs	r0, #2
 800fd54:	f002 fa2c 	bl	80121b0 <LmHandlerRequestClass>
              break;
 800fd58:	e002      	b.n	800fd60 <OnRxData+0xc4>
          }
        }
 800fd5a:	bf00      	nop
 800fd5c:	e02a      	b.n	800fdb4 <OnRxData+0x118>
              break;
 800fd5e:	bf00      	nop
        break;
 800fd60:	e028      	b.n	800fdb4 <OnRxData+0x118>
      case LORAWAN_USER_APP_PORT:
        if (appData->BufferSize == 1)
 800fd62:	687b      	ldr	r3, [r7, #4]
 800fd64:	785b      	ldrb	r3, [r3, #1]
 800fd66:	2b01      	cmp	r3, #1
 800fd68:	d123      	bne.n	800fdb2 <OnRxData+0x116>
        {
          AppLedStateOn = appData->Buffer[0] & 0x01;
 800fd6a:	687b      	ldr	r3, [r7, #4]
 800fd6c:	685b      	ldr	r3, [r3, #4]
 800fd6e:	781b      	ldrb	r3, [r3, #0]
 800fd70:	f003 0301 	and.w	r3, r3, #1
 800fd74:	b2da      	uxtb	r2, r3
 800fd76:	4b16      	ldr	r3, [pc, #88]	; (800fdd0 <OnRxData+0x134>)
 800fd78:	701a      	strb	r2, [r3, #0]
          if (AppLedStateOn == RESET)
 800fd7a:	4b15      	ldr	r3, [pc, #84]	; (800fdd0 <OnRxData+0x134>)
 800fd7c:	781b      	ldrb	r3, [r3, #0]
 800fd7e:	2b00      	cmp	r3, #0
 800fd80:	d109      	bne.n	800fd96 <OnRxData+0xfa>
          {
            APP_LOG(TS_OFF, VLEVEL_H,   "LED OFF\r\n");
 800fd82:	4b14      	ldr	r3, [pc, #80]	; (800fdd4 <OnRxData+0x138>)
 800fd84:	2200      	movs	r2, #0
 800fd86:	2100      	movs	r1, #0
 800fd88:	2003      	movs	r0, #3
 800fd8a:	f011 fb9f 	bl	80214cc <UTIL_ADV_TRACE_COND_FSend>

#if defined(USE_BSP_DRIVER)
            BSP_LED_Off(LED_RED) ;
#elif defined(MX_BOARD_PSEUDODRIVER)
            SYS_LED_Off(SYS_LED_RED) ;
 800fd8e:	2000      	movs	r0, #0
 800fd90:	f7f5 f818 	bl	8004dc4 <SYS_LED_Off>
#elif defined(MX_BOARD_PSEUDODRIVER)
            SYS_LED_On(SYS_LED_RED) ;
#endif /* USE_BSP_DRIVER || MX_BOARD_PSEUDODRIVER */
          }
        }
        break;
 800fd94:	e00d      	b.n	800fdb2 <OnRxData+0x116>
            APP_LOG(TS_OFF, VLEVEL_H, "LED ON\r\n");
 800fd96:	4b10      	ldr	r3, [pc, #64]	; (800fdd8 <OnRxData+0x13c>)
 800fd98:	2200      	movs	r2, #0
 800fd9a:	2100      	movs	r1, #0
 800fd9c:	2003      	movs	r0, #3
 800fd9e:	f011 fb95 	bl	80214cc <UTIL_ADV_TRACE_COND_FSend>
            SYS_LED_On(SYS_LED_RED) ;
 800fda2:	2000      	movs	r0, #0
 800fda4:	f7f4 fff4 	bl	8004d90 <SYS_LED_On>
        break;
 800fda8:	e003      	b.n	800fdb2 <OnRxData+0x116>
    /* USER CODE BEGIN OnRxData_Switch_default */

    /* USER CODE END OnRxData_Switch_default */
        break;
    }
  }
 800fdaa:	bf00      	nop
 800fdac:	e002      	b.n	800fdb4 <OnRxData+0x118>
        break;
 800fdae:	bf00      	nop
 800fdb0:	e000      	b.n	800fdb4 <OnRxData+0x118>
        break;
 800fdb2:	bf00      	nop

  /* USER CODE BEGIN OnRxData_2 */

  /* USER CODE END OnRxData_2 */
}
 800fdb4:	bf00      	nop
 800fdb6:	3708      	adds	r7, #8
 800fdb8:	46bd      	mov	sp, r7
 800fdba:	bdb0      	pop	{r4, r5, r7, pc}
 800fdbc:	08025ab4 	.word	0x08025ab4
 800fdc0:	20000a0c 	.word	0x20000a0c
 800fdc4:	08025ac8 	.word	0x08025ac8
 800fdc8:	20000074 	.word	0x20000074
 800fdcc:	08025afc 	.word	0x08025afc
 800fdd0:	200009da 	.word	0x200009da
 800fdd4:	08025b44 	.word	0x08025b44
 800fdd8:	08025b50 	.word	0x08025b50

0800fddc <SendTxData>:

static void SendTxData(void)
{
 800fddc:	b580      	push	{r7, lr}
 800fdde:	b090      	sub	sp, #64	; 0x40
 800fde0:	af02      	add	r7, sp, #8
  uint16_t pressure = 0;
 800fde2:	2300      	movs	r3, #0
 800fde4:	867b      	strh	r3, [r7, #50]	; 0x32
  int16_t temperature = 0;
 800fde6:	2300      	movs	r3, #0
 800fde8:	863b      	strh	r3, [r7, #48]	; 0x30
  sensor_t sensor_data;
  UTIL_TIMER_Time_t nextTxIn = 0;
 800fdea:	2300      	movs	r3, #0
 800fdec:	607b      	str	r3, [r7, #4]
//  extern long arrLastPoint[];

#ifdef CAYENNE_LPP
  uint8_t channel = 0;
#else
  uint16_t humidity = 0;
 800fdee:	2300      	movs	r3, #0
 800fdf0:	85fb      	strh	r3, [r7, #46]	; 0x2e
  uint32_t i = 0;
 800fdf2:	2300      	movs	r3, #0
 800fdf4:	637b      	str	r3, [r7, #52]	; 0x34
  int32_t latitude = 0;
 800fdf6:	2300      	movs	r3, #0
 800fdf8:	62bb      	str	r3, [r7, #40]	; 0x28
  int32_t longitude = 0;
 800fdfa:	2300      	movs	r3, #0
 800fdfc:	627b      	str	r3, [r7, #36]	; 0x24
  uint16_t altitudeGps = 0;
 800fdfe:	2300      	movs	r3, #0
 800fe00:	847b      	strh	r3, [r7, #34]	; 0x22
#endif /* CAYENNE_LPP */
  /* USER CODE BEGIN SendTxData_1 */

  /* USER CODE END SendTxData_1 */

  EnvSensors_Read(&sensor_data);
 800fe02:	f107 0308 	add.w	r3, r7, #8
 800fe06:	4618      	mov	r0, r3
 800fe08:	f7f6 fbb2 	bl	8006570 <EnvSensors_Read>
  temperature = (SYS_GetTemperatureLevel() >> 8);
 800fe0c:	f7f4 fe7a 	bl	8004b04 <SYS_GetTemperatureLevel>
 800fe10:	4603      	mov	r3, r0
 800fe12:	121b      	asrs	r3, r3, #8
 800fe14:	863b      	strh	r3, [r7, #48]	; 0x30
  pressure    = (uint16_t)(sensor_data.pressure * 100 / 10);      /* in hPa / 10 */
 800fe16:	68bb      	ldr	r3, [r7, #8]
 800fe18:	492d      	ldr	r1, [pc, #180]	; (800fed0 <SendTxData+0xf4>)
 800fe1a:	4618      	mov	r0, r3
 800fe1c:	f7f0 fffa 	bl	8000e14 <__aeabi_fmul>
 800fe20:	4603      	mov	r3, r0
 800fe22:	492c      	ldr	r1, [pc, #176]	; (800fed4 <SendTxData+0xf8>)
 800fe24:	4618      	mov	r0, r3
 800fe26:	f7f1 f8a9 	bl	8000f7c <__aeabi_fdiv>
 800fe2a:	4603      	mov	r3, r0
 800fe2c:	4618      	mov	r0, r3
 800fe2e:	f7f1 f9f3 	bl	8001218 <__aeabi_f2uiz>
 800fe32:	4603      	mov	r3, r0
 800fe34:	867b      	strh	r3, [r7, #50]	; 0x32

  AppData.Port = LORAWAN_USER_APP_PORT;
 800fe36:	4b28      	ldr	r3, [pc, #160]	; (800fed8 <SendTxData+0xfc>)
 800fe38:	2202      	movs	r2, #2
 800fe3a:	701a      	strb	r2, [r3, #0]
  }

  CayenneLppCopy(AppData.Buffer);
  AppData.BufferSize = CayenneLppGetSize();
#else  /* not CAYENNE_LPP */
  humidity    = (uint16_t)(sensor_data.humidity * 10);            /* in %*10     */
 800fe3c:	693b      	ldr	r3, [r7, #16]
 800fe3e:	4925      	ldr	r1, [pc, #148]	; (800fed4 <SendTxData+0xf8>)
 800fe40:	4618      	mov	r0, r3
 800fe42:	f7f0 ffe7 	bl	8000e14 <__aeabi_fmul>
 800fe46:	4603      	mov	r3, r0
 800fe48:	4618      	mov	r0, r3
 800fe4a:	f7f1 f9e5 	bl	8001218 <__aeabi_f2uiz>
 800fe4e:	4603      	mov	r3, r0
 800fe50:	85fb      	strh	r3, [r7, #46]	; 0x2e
//  AppData.Buffer[i++] = (uint8_t)(pressure & 0xFF);
//  AppData.Buffer[i++] = (uint8_t)(temperature & 0xFF);
//  AppData.Buffer[i++] = (uint8_t)((humidity >> 8) & 0xFF);
//  AppData.Buffer[i++] = (uint8_t)(humidity & 0xFF);

  if ((LmHandlerParams.ActiveRegion == LORAMAC_REGION_US915) || (LmHandlerParams.ActiveRegion == LORAMAC_REGION_AU915)
 800fe52:	4b22      	ldr	r3, [pc, #136]	; (800fedc <SendTxData+0x100>)
 800fe54:	781b      	ldrb	r3, [r3, #0]
 800fe56:	2b08      	cmp	r3, #8
 800fe58:	d013      	beq.n	800fe82 <SendTxData+0xa6>
 800fe5a:	4b20      	ldr	r3, [pc, #128]	; (800fedc <SendTxData+0x100>)
 800fe5c:	781b      	ldrb	r3, [r3, #0]
 800fe5e:	2b01      	cmp	r3, #1
 800fe60:	d00f      	beq.n	800fe82 <SendTxData+0xa6>
      || (LmHandlerParams.ActiveRegion == LORAMAC_REGION_AS923))
 800fe62:	4b1e      	ldr	r3, [pc, #120]	; (800fedc <SendTxData+0x100>)
 800fe64:	781b      	ldrb	r3, [r3, #0]
 800fe66:	2b00      	cmp	r3, #0
 800fe68:	d00b      	beq.n	800fe82 <SendTxData+0xa6>
//    AppData.Buffer[i++] = 0;
//    AppData.Buffer[i++] = 0;
  }
  else
  {
    latitude = sensor_data.latitude;
 800fe6a:	697b      	ldr	r3, [r7, #20]
 800fe6c:	62bb      	str	r3, [r7, #40]	; 0x28
    longitude = sensor_data.longitude;
 800fe6e:	69bb      	ldr	r3, [r7, #24]
 800fe70:	627b      	str	r3, [r7, #36]	; 0x24
//    AppData.Buffer[i++] = (uint8_t)((longitude >> 8) & 0xFF);
//    AppData.Buffer[i++] = (uint8_t)(longitude & 0xFF);
//    AppData.Buffer[i++] = (uint8_t)((altitudeGps >> 8) & 0xFF);
//    AppData.Buffer[i++] = (uint8_t)(altitudeGps & 0xFF);

	AppData.Buffer[i++] = (uint8_t) ((0x01) & 0xFF);
 800fe72:	4b19      	ldr	r3, [pc, #100]	; (800fed8 <SendTxData+0xfc>)
 800fe74:	685a      	ldr	r2, [r3, #4]
 800fe76:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800fe78:	1c59      	adds	r1, r3, #1
 800fe7a:	6379      	str	r1, [r7, #52]	; 0x34
 800fe7c:	4413      	add	r3, r2
 800fe7e:	2201      	movs	r2, #1
 800fe80:	701a      	strb	r2, [r3, #0]
//	AppData.Buffer[i++] = (uint8_t) ((arrLastPoint[1] >> 8) & 0xFF);
//	AppData.Buffer[i++] = (uint8_t) (arrLastPoint[1] & 0xFF);

  }

  AppData.BufferSize = i;
 800fe82:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800fe84:	b2da      	uxtb	r2, r3
 800fe86:	4b14      	ldr	r3, [pc, #80]	; (800fed8 <SendTxData+0xfc>)
 800fe88:	705a      	strb	r2, [r3, #1]
#endif /* CAYENNE_LPP */

  if (LORAMAC_HANDLER_SUCCESS == LmHandlerSend(&AppData, LORAWAN_DEFAULT_CONFIRMED_MSG_STATE, &nextTxIn, false))
 800fe8a:	1d3a      	adds	r2, r7, #4
 800fe8c:	2300      	movs	r3, #0
 800fe8e:	2100      	movs	r1, #0
 800fe90:	4811      	ldr	r0, [pc, #68]	; (800fed8 <SendTxData+0xfc>)
 800fe92:	f002 f8b7 	bl	8012004 <LmHandlerSend>
 800fe96:	4603      	mov	r3, r0
 800fe98:	2b00      	cmp	r3, #0
 800fe9a:	d106      	bne.n	800feaa <SendTxData+0xce>
  {
    APP_LOG(TS_ON, VLEVEL_M, "SEND REQUEST\r\n");
 800fe9c:	4b10      	ldr	r3, [pc, #64]	; (800fee0 <SendTxData+0x104>)
 800fe9e:	2201      	movs	r2, #1
 800fea0:	2100      	movs	r1, #0
 800fea2:	2002      	movs	r0, #2
 800fea4:	f011 fb12 	bl	80214cc <UTIL_ADV_TRACE_COND_FSend>
    APP_LOG(TS_ON, VLEVEL_L, "Next Tx in  : ~%d second(s)\r\n", (nextTxIn / 1000));
  }
  /* USER CODE BEGIN SendTxData_2 */

  /* USER CODE END SendTxData_2 */
}
 800fea8:	e00e      	b.n	800fec8 <SendTxData+0xec>
  else if (nextTxIn > 0)
 800feaa:	687b      	ldr	r3, [r7, #4]
 800feac:	2b00      	cmp	r3, #0
 800feae:	d00b      	beq.n	800fec8 <SendTxData+0xec>
    APP_LOG(TS_ON, VLEVEL_L, "Next Tx in  : ~%d second(s)\r\n", (nextTxIn / 1000));
 800feb0:	687b      	ldr	r3, [r7, #4]
 800feb2:	4a0c      	ldr	r2, [pc, #48]	; (800fee4 <SendTxData+0x108>)
 800feb4:	fba2 2303 	umull	r2, r3, r2, r3
 800feb8:	099b      	lsrs	r3, r3, #6
 800feba:	9300      	str	r3, [sp, #0]
 800febc:	4b0a      	ldr	r3, [pc, #40]	; (800fee8 <SendTxData+0x10c>)
 800febe:	2201      	movs	r2, #1
 800fec0:	2100      	movs	r1, #0
 800fec2:	2001      	movs	r0, #1
 800fec4:	f011 fb02 	bl	80214cc <UTIL_ADV_TRACE_COND_FSend>
}
 800fec8:	bf00      	nop
 800feca:	3738      	adds	r7, #56	; 0x38
 800fecc:	46bd      	mov	sp, r7
 800fece:	bd80      	pop	{r7, pc}
 800fed0:	42c80000 	.word	0x42c80000
 800fed4:	41200000 	.word	0x41200000
 800fed8:	20000048 	.word	0x20000048
 800fedc:	2000006c 	.word	0x2000006c
 800fee0:	08025b5c 	.word	0x08025b5c
 800fee4:	10624dd3 	.word	0x10624dd3
 800fee8:	08025b6c 	.word	0x08025b6c

0800feec <OnTxTimerEvent>:

static void OnTxTimerEvent(void *context)
{
 800feec:	b580      	push	{r7, lr}
 800feee:	b082      	sub	sp, #8
 800fef0:	af00      	add	r7, sp, #0
 800fef2:	6078      	str	r0, [r7, #4]
  /* USER CODE BEGIN OnTxTimerEvent_1 */
  printf( "... OnTxTimerEvent() ... \n" );
 800fef4:	4806      	ldr	r0, [pc, #24]	; (800ff10 <OnTxTimerEvent+0x24>)
 800fef6:	f014 fcf3 	bl	80248e0 <puts>

  /* USER CODE END OnTxTimerEvent_1 */
  UTIL_SEQ_SetTask((1 << CFG_SEQ_Task_LoRaSendOnTxTimerOrButtonEvent), CFG_SEQ_Prio_0);
 800fefa:	2100      	movs	r1, #0
 800fefc:	2002      	movs	r0, #2
 800fefe:	f010 ffc9 	bl	8020e94 <UTIL_SEQ_SetTask>

  /*Wait for next tx slot*/
  UTIL_TIMER_Start(&TxTimer);
 800ff02:	4804      	ldr	r0, [pc, #16]	; (800ff14 <OnTxTimerEvent+0x28>)
 800ff04:	f011 f87c 	bl	8021000 <UTIL_TIMER_Start>
  /* USER CODE BEGIN OnTxTimerEvent_2 */

  /* USER CODE END OnTxTimerEvent_2 */
}
 800ff08:	bf00      	nop
 800ff0a:	3708      	adds	r7, #8
 800ff0c:	46bd      	mov	sp, r7
 800ff0e:	bd80      	pop	{r7, pc}
 800ff10:	08025b8c 	.word	0x08025b8c
 800ff14:	200009dc 	.word	0x200009dc

0800ff18 <OnTxTimerLedEvent>:

static void OnTxTimerLedEvent(void *context)
{
 800ff18:	b580      	push	{r7, lr}
 800ff1a:	b082      	sub	sp, #8
 800ff1c:	af00      	add	r7, sp, #0
 800ff1e:	6078      	str	r0, [r7, #4]
  /* USER CODE BEGIN OnTxTimerLedEvent_1 */
  printf( "... OnTxTimerLedEvent() ... \n" );
 800ff20:	4804      	ldr	r0, [pc, #16]	; (800ff34 <OnTxTimerLedEvent+0x1c>)
 800ff22:	f014 fcdd 	bl	80248e0 <puts>

  /* USER CODE END OnTxTimerLedEvent_1 */
#if defined(USE_BSP_DRIVER)
  BSP_LED_Off(LED_GREEN) ;
#else
  SYS_LED_Off(SYS_LED_GREEN) ;
 800ff26:	2001      	movs	r0, #1
 800ff28:	f7f4 ff4c 	bl	8004dc4 <SYS_LED_Off>
#endif /* USE_BSP_DRIVER || MX_BOARD_PSEUDODRIVER */
  /* USER CODE BEGIN OnTxTimerLedEvent_2 */

  /* USER CODE END OnTxTimerLedEvent_2 */
}
 800ff2c:	bf00      	nop
 800ff2e:	3708      	adds	r7, #8
 800ff30:	46bd      	mov	sp, r7
 800ff32:	bd80      	pop	{r7, pc}
 800ff34:	08025ba8 	.word	0x08025ba8

0800ff38 <OnRxTimerLedEvent>:

static void OnRxTimerLedEvent(void *context)
{
 800ff38:	b580      	push	{r7, lr}
 800ff3a:	b082      	sub	sp, #8
 800ff3c:	af00      	add	r7, sp, #0
 800ff3e:	6078      	str	r0, [r7, #4]
  /* USER CODE BEGIN OnRxTimerLedEvent_1 */
  printf( "... OnRxTimerLedEvent() ... \n" );
 800ff40:	4804      	ldr	r0, [pc, #16]	; (800ff54 <OnRxTimerLedEvent+0x1c>)
 800ff42:	f014 fccd 	bl	80248e0 <puts>

  /* USER CODE END OnRxTimerLedEvent_1 */
#if defined(USE_BSP_DRIVER)
  BSP_LED_Off(LED_BLUE) ;
#else
  SYS_LED_Off(SYS_LED_BLUE) ;
 800ff46:	2002      	movs	r0, #2
 800ff48:	f7f4 ff3c 	bl	8004dc4 <SYS_LED_Off>
#endif /* USE_BSP_DRIVER || MX_BOARD_PSEUDODRIVER */
  /* USER CODE BEGIN OnRxTimerLedEvent_2 */

  /* USER CODE END OnRxTimerLedEvent_2 */
}
 800ff4c:	bf00      	nop
 800ff4e:	3708      	adds	r7, #8
 800ff50:	46bd      	mov	sp, r7
 800ff52:	bd80      	pop	{r7, pc}
 800ff54:	08025bc8 	.word	0x08025bc8

0800ff58 <OnJoinTimerLedEvent>:

static void OnJoinTimerLedEvent(void *context)
{
 800ff58:	b580      	push	{r7, lr}
 800ff5a:	b082      	sub	sp, #8
 800ff5c:	af00      	add	r7, sp, #0
 800ff5e:	6078      	str	r0, [r7, #4]
  /* USER CODE BEGIN OnJoinTimerLedEvent_1 */
  printf( "... OnJoinTimerLedEvent() ... \n" );
 800ff60:	4804      	ldr	r0, [pc, #16]	; (800ff74 <OnJoinTimerLedEvent+0x1c>)
 800ff62:	f014 fcbd 	bl	80248e0 <puts>

  /* USER CODE END OnJoinTimerLedEvent_1 */
#if defined(USE_BSP_DRIVER)
  BSP_LED_Toggle(LED_RED) ;
#else
  SYS_LED_Toggle(SYS_LED_RED) ;
 800ff66:	2000      	movs	r0, #0
 800ff68:	f7f4 ff46 	bl	8004df8 <SYS_LED_Toggle>
#endif /* USE_BSP_DRIVER || MX_BOARD_PSEUDODRIVER */
  /* USER CODE BEGIN OnJoinTimerLedEvent_2 */

  /* USER CODE END OnJoinTimerLedEvent_2 */
}
 800ff6c:	bf00      	nop
 800ff6e:	3708      	adds	r7, #8
 800ff70:	46bd      	mov	sp, r7
 800ff72:	bd80      	pop	{r7, pc}
 800ff74:	08025be8 	.word	0x08025be8

0800ff78 <OnTxData>:

static void OnTxData(LmHandlerTxParams_t *params)
{
 800ff78:	b580      	push	{r7, lr}
 800ff7a:	b086      	sub	sp, #24
 800ff7c:	af04      	add	r7, sp, #16
 800ff7e:	6078      	str	r0, [r7, #4]
  /* USER CODE BEGIN OnTxData_1 */
  printf( "... OnTxData() ... \n" );
 800ff80:	482a      	ldr	r0, [pc, #168]	; (801002c <OnTxData+0xb4>)
 800ff82:	f014 fcad 	bl	80248e0 <puts>

  /* USER CODE END OnTxData_1 */
  if ((params != NULL) && (params->IsMcpsConfirm != 0))
 800ff86:	687b      	ldr	r3, [r7, #4]
 800ff88:	2b00      	cmp	r3, #0
 800ff8a:	d04a      	beq.n	8010022 <OnTxData+0xaa>
 800ff8c:	687b      	ldr	r3, [r7, #4]
 800ff8e:	781b      	ldrb	r3, [r3, #0]
 800ff90:	2b00      	cmp	r3, #0
 800ff92:	d046      	beq.n	8010022 <OnTxData+0xaa>
  {
#if defined(USE_BSP_DRIVER)
    BSP_LED_On(LED_GREEN) ;
#elif defined(MX_BOARD_PSEUDODRIVER)
    SYS_LED_On(SYS_LED_GREEN) ;
 800ff94:	2001      	movs	r0, #1
 800ff96:	f7f4 fefb 	bl	8004d90 <SYS_LED_On>
#endif /* USE_BSP_DRIVER || MX_BOARD_PSEUDODRIVER */
    UTIL_TIMER_Start(&TxLedTimer);
 800ff9a:	4825      	ldr	r0, [pc, #148]	; (8010030 <OnTxData+0xb8>)
 800ff9c:	f011 f830 	bl	8021000 <UTIL_TIMER_Start>

    APP_LOG(TS_OFF, VLEVEL_M, "\r\n###### ========== MCPS-Confirm =============\r\n");
 800ffa0:	4b24      	ldr	r3, [pc, #144]	; (8010034 <OnTxData+0xbc>)
 800ffa2:	2200      	movs	r2, #0
 800ffa4:	2100      	movs	r1, #0
 800ffa6:	2002      	movs	r0, #2
 800ffa8:	f011 fa90 	bl	80214cc <UTIL_ADV_TRACE_COND_FSend>
    APP_LOG(TS_OFF, VLEVEL_M, "###### U/L FRAME:%04d | PORT:%d | DR:%d | PWR:%d", params->UplinkCounter,
 800ffac:	687b      	ldr	r3, [r7, #4]
 800ffae:	689b      	ldr	r3, [r3, #8]
 800ffb0:	687a      	ldr	r2, [r7, #4]
 800ffb2:	7b12      	ldrb	r2, [r2, #12]
 800ffb4:	4611      	mov	r1, r2
 800ffb6:	687a      	ldr	r2, [r7, #4]
 800ffb8:	f992 2004 	ldrsb.w	r2, [r2, #4]
 800ffbc:	4610      	mov	r0, r2
 800ffbe:	687a      	ldr	r2, [r7, #4]
 800ffc0:	f992 2014 	ldrsb.w	r2, [r2, #20]
 800ffc4:	9203      	str	r2, [sp, #12]
 800ffc6:	9002      	str	r0, [sp, #8]
 800ffc8:	9101      	str	r1, [sp, #4]
 800ffca:	9300      	str	r3, [sp, #0]
 800ffcc:	4b1a      	ldr	r3, [pc, #104]	; (8010038 <OnTxData+0xc0>)
 800ffce:	2200      	movs	r2, #0
 800ffd0:	2100      	movs	r1, #0
 800ffd2:	2002      	movs	r0, #2
 800ffd4:	f011 fa7a 	bl	80214cc <UTIL_ADV_TRACE_COND_FSend>
            params->AppData.Port, params->Datarate, params->TxPower);
    mLockout = false;
 800ffd8:	4b18      	ldr	r3, [pc, #96]	; (801003c <OnTxData+0xc4>)
 800ffda:	2200      	movs	r2, #0
 800ffdc:	701a      	strb	r2, [r3, #0]
    APP_LOG(TS_OFF, VLEVEL_M, " | MSG TYPE:");
 800ffde:	4b18      	ldr	r3, [pc, #96]	; (8010040 <OnTxData+0xc8>)
 800ffe0:	2200      	movs	r2, #0
 800ffe2:	2100      	movs	r1, #0
 800ffe4:	2002      	movs	r0, #2
 800ffe6:	f011 fa71 	bl	80214cc <UTIL_ADV_TRACE_COND_FSend>
    if (params->MsgType == LORAMAC_HANDLER_CONFIRMED_MSG)
 800ffea:	687b      	ldr	r3, [r7, #4]
 800ffec:	789b      	ldrb	r3, [r3, #2]
 800ffee:	2b01      	cmp	r3, #1
 800fff0:	d10e      	bne.n	8010010 <OnTxData+0x98>
    {
      APP_LOG(TS_OFF, VLEVEL_M, "CONFIRMED [%s]\r\n", (params->AckReceived != 0) ? "ACK" : "NACK");
 800fff2:	687b      	ldr	r3, [r7, #4]
 800fff4:	78db      	ldrb	r3, [r3, #3]
 800fff6:	2b00      	cmp	r3, #0
 800fff8:	d001      	beq.n	800fffe <OnTxData+0x86>
 800fffa:	4b12      	ldr	r3, [pc, #72]	; (8010044 <OnTxData+0xcc>)
 800fffc:	e000      	b.n	8010000 <OnTxData+0x88>
 800fffe:	4b12      	ldr	r3, [pc, #72]	; (8010048 <OnTxData+0xd0>)
 8010000:	9300      	str	r3, [sp, #0]
 8010002:	4b12      	ldr	r3, [pc, #72]	; (801004c <OnTxData+0xd4>)
 8010004:	2200      	movs	r2, #0
 8010006:	2100      	movs	r1, #0
 8010008:	2002      	movs	r0, #2
 801000a:	f011 fa5f 	bl	80214cc <UTIL_ADV_TRACE_COND_FSend>
  }

  /* USER CODE BEGIN OnTxData_2 */
//  mLockout = false;			//not in standard program! defined myself
  /* USER CODE END OnTxData_2 */
}
 801000e:	e008      	b.n	8010022 <OnTxData+0xaa>
      APP_LOG(TS_OFF, VLEVEL_M, "UNCONFIRMED\r\n");
 8010010:	4b0f      	ldr	r3, [pc, #60]	; (8010050 <OnTxData+0xd8>)
 8010012:	2200      	movs	r2, #0
 8010014:	2100      	movs	r1, #0
 8010016:	2002      	movs	r0, #2
 8010018:	f011 fa58 	bl	80214cc <UTIL_ADV_TRACE_COND_FSend>
      rxReceived = false;
 801001c:	4b0d      	ldr	r3, [pc, #52]	; (8010054 <OnTxData+0xdc>)
 801001e:	2200      	movs	r2, #0
 8010020:	701a      	strb	r2, [r3, #0]
}
 8010022:	bf00      	nop
 8010024:	3708      	adds	r7, #8
 8010026:	46bd      	mov	sp, r7
 8010028:	bd80      	pop	{r7, pc}
 801002a:	bf00      	nop
 801002c:	08025c08 	.word	0x08025c08
 8010030:	200009f4 	.word	0x200009f4
 8010034:	08025c1c 	.word	0x08025c1c
 8010038:	08025c50 	.word	0x08025c50
 801003c:	200008d0 	.word	0x200008d0
 8010040:	08025c84 	.word	0x08025c84
 8010044:	08025c94 	.word	0x08025c94
 8010048:	08025c98 	.word	0x08025c98
 801004c:	08025ca0 	.word	0x08025ca0
 8010050:	08025cb4 	.word	0x08025cb4
 8010054:	200008d2 	.word	0x200008d2

08010058 <OnJoinRequest>:

static void OnJoinRequest(LmHandlerJoinParams_t *joinParams)
{
 8010058:	b580      	push	{r7, lr}
 801005a:	b082      	sub	sp, #8
 801005c:	af00      	add	r7, sp, #0
 801005e:	6078      	str	r0, [r7, #4]
  /* USER CODE BEGIN OnJoinRequest_1 */
  printf( "... OnJoinRequest() ... \n" );
 8010060:	4820      	ldr	r0, [pc, #128]	; (80100e4 <OnJoinRequest+0x8c>)
 8010062:	f014 fc3d 	bl	80248e0 <puts>

  /* USER CODE END OnJoinRequest_1 */
  if (joinParams != NULL)
 8010066:	687b      	ldr	r3, [r7, #4]
 8010068:	2b00      	cmp	r3, #0
 801006a:	d034      	beq.n	80100d6 <OnJoinRequest+0x7e>
  {
    if (joinParams->Status == LORAMAC_HANDLER_SUCCESS)
 801006c:	687b      	ldr	r3, [r7, #4]
 801006e:	f993 3001 	ldrsb.w	r3, [r3, #1]
 8010072:	2b00      	cmp	r3, #0
 8010074:	d123      	bne.n	80100be <OnJoinRequest+0x66>
    {
      UTIL_TIMER_Stop(&JoinLedTimer);
 8010076:	481c      	ldr	r0, [pc, #112]	; (80100e8 <OnJoinRequest+0x90>)
 8010078:	f011 f830 	bl	80210dc <UTIL_TIMER_Stop>

#if defined(USE_BSP_DRIVER)
      BSP_LED_Off(LED_RED) ;
#elif defined(MX_BOARD_PSEUDODRIVER)
      SYS_LED_Off(SYS_LED_RED) ;
 801007c:	2000      	movs	r0, #0
 801007e:	f7f4 fea1 	bl	8004dc4 <SYS_LED_Off>
#endif /* USE_BSP_DRIVER || MX_BOARD_PSEUDODRIVER */

      APP_LOG(TS_OFF, VLEVEL_M, "\r\n###### = JOINED = ");
 8010082:	4b1a      	ldr	r3, [pc, #104]	; (80100ec <OnJoinRequest+0x94>)
 8010084:	2200      	movs	r2, #0
 8010086:	2100      	movs	r1, #0
 8010088:	2002      	movs	r0, #2
 801008a:	f011 fa1f 	bl	80214cc <UTIL_ADV_TRACE_COND_FSend>
      if (joinParams->Mode == ACTIVATION_TYPE_ABP)
 801008e:	687b      	ldr	r3, [r7, #4]
 8010090:	789b      	ldrb	r3, [r3, #2]
 8010092:	2b01      	cmp	r3, #1
 8010094:	d106      	bne.n	80100a4 <OnJoinRequest+0x4c>
      {
        APP_LOG(TS_OFF, VLEVEL_M, "ABP ======================\r\n");
 8010096:	4b16      	ldr	r3, [pc, #88]	; (80100f0 <OnJoinRequest+0x98>)
 8010098:	2200      	movs	r2, #0
 801009a:	2100      	movs	r1, #0
 801009c:	2002      	movs	r0, #2
 801009e:	f011 fa15 	bl	80214cc <UTIL_ADV_TRACE_COND_FSend>
 80100a2:	e018      	b.n	80100d6 <OnJoinRequest+0x7e>
      }
      else
      {
        APP_LOG(TS_OFF, VLEVEL_M, "OTAA =====================\r\n");
 80100a4:	4b13      	ldr	r3, [pc, #76]	; (80100f4 <OnJoinRequest+0x9c>)
 80100a6:	2200      	movs	r2, #0
 80100a8:	2100      	movs	r1, #0
 80100aa:	2002      	movs	r0, #2
 80100ac:	f011 fa0e 	bl	80214cc <UTIL_ADV_TRACE_COND_FSend>
        isJoined = true;
 80100b0:	4b11      	ldr	r3, [pc, #68]	; (80100f8 <OnJoinRequest+0xa0>)
 80100b2:	2201      	movs	r2, #1
 80100b4:	701a      	strb	r2, [r3, #0]
        rxReceived = false;
 80100b6:	4b11      	ldr	r3, [pc, #68]	; (80100fc <OnJoinRequest+0xa4>)
 80100b8:	2200      	movs	r2, #0
 80100ba:	701a      	strb	r2, [r3, #0]
 80100bc:	e00b      	b.n	80100d6 <OnJoinRequest+0x7e>
      }
    }
    else
    {
      APP_LOG(TS_OFF, VLEVEL_M, "\r\n###### = JOIN FAILED this?\r\n");
 80100be:	4b10      	ldr	r3, [pc, #64]	; (8010100 <OnJoinRequest+0xa8>)
 80100c0:	2200      	movs	r2, #0
 80100c2:	2100      	movs	r1, #0
 80100c4:	2002      	movs	r0, #2
 80100c6:	f011 fa01 	bl	80214cc <UTIL_ADV_TRACE_COND_FSend>
      isJoined = false;
 80100ca:	4b0b      	ldr	r3, [pc, #44]	; (80100f8 <OnJoinRequest+0xa0>)
 80100cc:	2200      	movs	r2, #0
 80100ce:	701a      	strb	r2, [r3, #0]
      rxReceived = false;
 80100d0:	4b0a      	ldr	r3, [pc, #40]	; (80100fc <OnJoinRequest+0xa4>)
 80100d2:	2200      	movs	r2, #0
 80100d4:	701a      	strb	r2, [r3, #0]
    }
  }

  /* USER CODE BEGIN OnJoinRequest_2 */
 mLockout = false;
 80100d6:	4b0b      	ldr	r3, [pc, #44]	; (8010104 <OnJoinRequest+0xac>)
 80100d8:	2200      	movs	r2, #0
 80100da:	701a      	strb	r2, [r3, #0]
  /* USER CODE END OnJoinRequest_2 */
}
 80100dc:	bf00      	nop
 80100de:	3708      	adds	r7, #8
 80100e0:	46bd      	mov	sp, r7
 80100e2:	bd80      	pop	{r7, pc}
 80100e4:	08025cc4 	.word	0x08025cc4
 80100e8:	20000a24 	.word	0x20000a24
 80100ec:	08025ce0 	.word	0x08025ce0
 80100f0:	08025cf8 	.word	0x08025cf8
 80100f4:	08025d18 	.word	0x08025d18
 80100f8:	200008d1 	.word	0x200008d1
 80100fc:	200008d2 	.word	0x200008d2
 8010100:	08025d38 	.word	0x08025d38
 8010104:	200008d0 	.word	0x200008d0

08010108 <OnMacProcessNotify>:

static void OnMacProcessNotify(void)
{
 8010108:	b580      	push	{r7, lr}
 801010a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN OnMacProcessNotify_1 */
  printf( "... OnMacProcessNotify() ... \n" );
 801010c:	4804      	ldr	r0, [pc, #16]	; (8010120 <OnMacProcessNotify+0x18>)
 801010e:	f014 fbe7 	bl	80248e0 <puts>

  /* USER CODE END OnMacProcessNotify_1 */
  UTIL_SEQ_SetTask((1 << CFG_SEQ_Task_LmHandlerProcess), CFG_SEQ_Prio_0);
 8010112:	2100      	movs	r1, #0
 8010114:	2001      	movs	r0, #1
 8010116:	f010 febd 	bl	8020e94 <UTIL_SEQ_SetTask>
  /* USER CODE BEGIN OnMacProcessNotify_2 */

  /* USER CODE END OnMacProcessNotify_2 */
}
 801011a:	bf00      	nop
 801011c:	bd80      	pop	{r7, pc}
 801011e:	bf00      	nop
 8010120:	08025d58 	.word	0x08025d58

08010124 <LoraInfo_Init>:
 8010124:	b580      	push	{r7, lr}
 8010126:	af00      	add	r7, sp, #0
 8010128:	4b15      	ldr	r3, [pc, #84]	; (8010180 <LoraInfo_Init+0x5c>)
 801012a:	2200      	movs	r2, #0
 801012c:	601a      	str	r2, [r3, #0]
 801012e:	4b14      	ldr	r3, [pc, #80]	; (8010180 <LoraInfo_Init+0x5c>)
 8010130:	2200      	movs	r2, #0
 8010132:	605a      	str	r2, [r3, #4]
 8010134:	4b12      	ldr	r3, [pc, #72]	; (8010180 <LoraInfo_Init+0x5c>)
 8010136:	2200      	movs	r2, #0
 8010138:	609a      	str	r2, [r3, #8]
 801013a:	4b11      	ldr	r3, [pc, #68]	; (8010180 <LoraInfo_Init+0x5c>)
 801013c:	2200      	movs	r2, #0
 801013e:	60da      	str	r2, [r3, #12]
 8010140:	4b0f      	ldr	r3, [pc, #60]	; (8010180 <LoraInfo_Init+0x5c>)
 8010142:	685b      	ldr	r3, [r3, #4]
 8010144:	f043 0320 	orr.w	r3, r3, #32
 8010148:	4a0d      	ldr	r2, [pc, #52]	; (8010180 <LoraInfo_Init+0x5c>)
 801014a:	6053      	str	r3, [r2, #4]
 801014c:	4b0c      	ldr	r3, [pc, #48]	; (8010180 <LoraInfo_Init+0x5c>)
 801014e:	685b      	ldr	r3, [r3, #4]
 8010150:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8010154:	4a0a      	ldr	r2, [pc, #40]	; (8010180 <LoraInfo_Init+0x5c>)
 8010156:	6053      	str	r3, [r2, #4]
 8010158:	4b09      	ldr	r3, [pc, #36]	; (8010180 <LoraInfo_Init+0x5c>)
 801015a:	685b      	ldr	r3, [r3, #4]
 801015c:	2b00      	cmp	r3, #0
 801015e:	d106      	bne.n	801016e <LoraInfo_Init+0x4a>
 8010160:	4b08      	ldr	r3, [pc, #32]	; (8010184 <LoraInfo_Init+0x60>)
 8010162:	2200      	movs	r2, #0
 8010164:	2100      	movs	r1, #0
 8010166:	2000      	movs	r0, #0
 8010168:	f011 f9b0 	bl	80214cc <UTIL_ADV_TRACE_COND_FSend>
 801016c:	e7fe      	b.n	801016c <LoraInfo_Init+0x48>
 801016e:	4b04      	ldr	r3, [pc, #16]	; (8010180 <LoraInfo_Init+0x5c>)
 8010170:	2200      	movs	r2, #0
 8010172:	60da      	str	r2, [r3, #12]
 8010174:	4b02      	ldr	r3, [pc, #8]	; (8010180 <LoraInfo_Init+0x5c>)
 8010176:	2203      	movs	r2, #3
 8010178:	601a      	str	r2, [r3, #0]
 801017a:	bf00      	nop
 801017c:	bd80      	pop	{r7, pc}
 801017e:	bf00      	nop
 8010180:	20000a3c 	.word	0x20000a3c
 8010184:	08025db4 	.word	0x08025db4

08010188 <LoraInfo_GetPtr>:
 8010188:	b480      	push	{r7}
 801018a:	af00      	add	r7, sp, #0
 801018c:	4b02      	ldr	r3, [pc, #8]	; (8010198 <LoraInfo_GetPtr+0x10>)
 801018e:	4618      	mov	r0, r3
 8010190:	46bd      	mov	sp, r7
 8010192:	bc80      	pop	{r7}
 8010194:	4770      	bx	lr
 8010196:	bf00      	nop
 8010198:	20000a3c 	.word	0x20000a3c

0801019c <LL_AHB2_GRP1_EnableClock>:
 801019c:	b480      	push	{r7}
 801019e:	b085      	sub	sp, #20
 80101a0:	af00      	add	r7, sp, #0
 80101a2:	6078      	str	r0, [r7, #4]
 80101a4:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 80101a8:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 80101aa:	f04f 41b0 	mov.w	r1, #1476395008	; 0x58000000
 80101ae:	687b      	ldr	r3, [r7, #4]
 80101b0:	4313      	orrs	r3, r2
 80101b2:	64cb      	str	r3, [r1, #76]	; 0x4c
 80101b4:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 80101b8:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 80101ba:	687b      	ldr	r3, [r7, #4]
 80101bc:	4013      	ands	r3, r2
 80101be:	60fb      	str	r3, [r7, #12]
 80101c0:	68fb      	ldr	r3, [r7, #12]
 80101c2:	bf00      	nop
 80101c4:	3714      	adds	r7, #20
 80101c6:	46bd      	mov	sp, r7
 80101c8:	bc80      	pop	{r7}
 80101ca:	4770      	bx	lr

080101cc <RBI_Init>:
 80101cc:	b580      	push	{r7, lr}
 80101ce:	b086      	sub	sp, #24
 80101d0:	af00      	add	r7, sp, #0
 80101d2:	1d3b      	adds	r3, r7, #4
 80101d4:	2200      	movs	r2, #0
 80101d6:	601a      	str	r2, [r3, #0]
 80101d8:	605a      	str	r2, [r3, #4]
 80101da:	609a      	str	r2, [r3, #8]
 80101dc:	60da      	str	r2, [r3, #12]
 80101de:	611a      	str	r2, [r3, #16]
 80101e0:	2004      	movs	r0, #4
 80101e2:	f7ff ffdb 	bl	801019c <LL_AHB2_GRP1_EnableClock>
 80101e6:	2310      	movs	r3, #16
 80101e8:	607b      	str	r3, [r7, #4]
 80101ea:	2301      	movs	r3, #1
 80101ec:	60bb      	str	r3, [r7, #8]
 80101ee:	2300      	movs	r3, #0
 80101f0:	60fb      	str	r3, [r7, #12]
 80101f2:	2303      	movs	r3, #3
 80101f4:	613b      	str	r3, [r7, #16]
 80101f6:	1d3b      	adds	r3, r7, #4
 80101f8:	4619      	mov	r1, r3
 80101fa:	4812      	ldr	r0, [pc, #72]	; (8010244 <RBI_Init+0x78>)
 80101fc:	f7f8 fd38 	bl	8008c70 <HAL_GPIO_Init>
 8010200:	2320      	movs	r3, #32
 8010202:	607b      	str	r3, [r7, #4]
 8010204:	1d3b      	adds	r3, r7, #4
 8010206:	4619      	mov	r1, r3
 8010208:	480e      	ldr	r0, [pc, #56]	; (8010244 <RBI_Init+0x78>)
 801020a:	f7f8 fd31 	bl	8008c70 <HAL_GPIO_Init>
 801020e:	2308      	movs	r3, #8
 8010210:	607b      	str	r3, [r7, #4]
 8010212:	1d3b      	adds	r3, r7, #4
 8010214:	4619      	mov	r1, r3
 8010216:	480b      	ldr	r0, [pc, #44]	; (8010244 <RBI_Init+0x78>)
 8010218:	f7f8 fd2a 	bl	8008c70 <HAL_GPIO_Init>
 801021c:	2200      	movs	r2, #0
 801021e:	2120      	movs	r1, #32
 8010220:	4808      	ldr	r0, [pc, #32]	; (8010244 <RBI_Init+0x78>)
 8010222:	f7f8 ff53 	bl	80090cc <HAL_GPIO_WritePin>
 8010226:	2200      	movs	r2, #0
 8010228:	2110      	movs	r1, #16
 801022a:	4806      	ldr	r0, [pc, #24]	; (8010244 <RBI_Init+0x78>)
 801022c:	f7f8 ff4e 	bl	80090cc <HAL_GPIO_WritePin>
 8010230:	2200      	movs	r2, #0
 8010232:	2108      	movs	r1, #8
 8010234:	4803      	ldr	r0, [pc, #12]	; (8010244 <RBI_Init+0x78>)
 8010236:	f7f8 ff49 	bl	80090cc <HAL_GPIO_WritePin>
 801023a:	2300      	movs	r3, #0
 801023c:	4618      	mov	r0, r3
 801023e:	3718      	adds	r7, #24
 8010240:	46bd      	mov	sp, r7
 8010242:	bd80      	pop	{r7, pc}
 8010244:	48000800 	.word	0x48000800

08010248 <RBI_ConfigRFSwitch>:
 8010248:	b580      	push	{r7, lr}
 801024a:	b082      	sub	sp, #8
 801024c:	af00      	add	r7, sp, #0
 801024e:	4603      	mov	r3, r0
 8010250:	71fb      	strb	r3, [r7, #7]
 8010252:	79fb      	ldrb	r3, [r7, #7]
 8010254:	2b03      	cmp	r3, #3
 8010256:	d84b      	bhi.n	80102f0 <RBI_ConfigRFSwitch+0xa8>
 8010258:	a201      	add	r2, pc, #4	; (adr r2, 8010260 <RBI_ConfigRFSwitch+0x18>)
 801025a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 801025e:	bf00      	nop
 8010260:	08010271 	.word	0x08010271
 8010264:	08010291 	.word	0x08010291
 8010268:	080102b1 	.word	0x080102b1
 801026c:	080102d1 	.word	0x080102d1
 8010270:	2200      	movs	r2, #0
 8010272:	2108      	movs	r1, #8
 8010274:	4821      	ldr	r0, [pc, #132]	; (80102fc <RBI_ConfigRFSwitch+0xb4>)
 8010276:	f7f8 ff29 	bl	80090cc <HAL_GPIO_WritePin>
 801027a:	2200      	movs	r2, #0
 801027c:	2110      	movs	r1, #16
 801027e:	481f      	ldr	r0, [pc, #124]	; (80102fc <RBI_ConfigRFSwitch+0xb4>)
 8010280:	f7f8 ff24 	bl	80090cc <HAL_GPIO_WritePin>
 8010284:	2200      	movs	r2, #0
 8010286:	2120      	movs	r1, #32
 8010288:	481c      	ldr	r0, [pc, #112]	; (80102fc <RBI_ConfigRFSwitch+0xb4>)
 801028a:	f7f8 ff1f 	bl	80090cc <HAL_GPIO_WritePin>
 801028e:	e030      	b.n	80102f2 <RBI_ConfigRFSwitch+0xaa>
 8010290:	2201      	movs	r2, #1
 8010292:	2108      	movs	r1, #8
 8010294:	4819      	ldr	r0, [pc, #100]	; (80102fc <RBI_ConfigRFSwitch+0xb4>)
 8010296:	f7f8 ff19 	bl	80090cc <HAL_GPIO_WritePin>
 801029a:	2201      	movs	r2, #1
 801029c:	2110      	movs	r1, #16
 801029e:	4817      	ldr	r0, [pc, #92]	; (80102fc <RBI_ConfigRFSwitch+0xb4>)
 80102a0:	f7f8 ff14 	bl	80090cc <HAL_GPIO_WritePin>
 80102a4:	2200      	movs	r2, #0
 80102a6:	2120      	movs	r1, #32
 80102a8:	4814      	ldr	r0, [pc, #80]	; (80102fc <RBI_ConfigRFSwitch+0xb4>)
 80102aa:	f7f8 ff0f 	bl	80090cc <HAL_GPIO_WritePin>
 80102ae:	e020      	b.n	80102f2 <RBI_ConfigRFSwitch+0xaa>
 80102b0:	2201      	movs	r2, #1
 80102b2:	2108      	movs	r1, #8
 80102b4:	4811      	ldr	r0, [pc, #68]	; (80102fc <RBI_ConfigRFSwitch+0xb4>)
 80102b6:	f7f8 ff09 	bl	80090cc <HAL_GPIO_WritePin>
 80102ba:	2201      	movs	r2, #1
 80102bc:	2110      	movs	r1, #16
 80102be:	480f      	ldr	r0, [pc, #60]	; (80102fc <RBI_ConfigRFSwitch+0xb4>)
 80102c0:	f7f8 ff04 	bl	80090cc <HAL_GPIO_WritePin>
 80102c4:	2201      	movs	r2, #1
 80102c6:	2120      	movs	r1, #32
 80102c8:	480c      	ldr	r0, [pc, #48]	; (80102fc <RBI_ConfigRFSwitch+0xb4>)
 80102ca:	f7f8 feff 	bl	80090cc <HAL_GPIO_WritePin>
 80102ce:	e010      	b.n	80102f2 <RBI_ConfigRFSwitch+0xaa>
 80102d0:	2201      	movs	r2, #1
 80102d2:	2108      	movs	r1, #8
 80102d4:	4809      	ldr	r0, [pc, #36]	; (80102fc <RBI_ConfigRFSwitch+0xb4>)
 80102d6:	f7f8 fef9 	bl	80090cc <HAL_GPIO_WritePin>
 80102da:	2200      	movs	r2, #0
 80102dc:	2110      	movs	r1, #16
 80102de:	4807      	ldr	r0, [pc, #28]	; (80102fc <RBI_ConfigRFSwitch+0xb4>)
 80102e0:	f7f8 fef4 	bl	80090cc <HAL_GPIO_WritePin>
 80102e4:	2201      	movs	r2, #1
 80102e6:	2120      	movs	r1, #32
 80102e8:	4804      	ldr	r0, [pc, #16]	; (80102fc <RBI_ConfigRFSwitch+0xb4>)
 80102ea:	f7f8 feef 	bl	80090cc <HAL_GPIO_WritePin>
 80102ee:	e000      	b.n	80102f2 <RBI_ConfigRFSwitch+0xaa>
 80102f0:	bf00      	nop
 80102f2:	2300      	movs	r3, #0
 80102f4:	4618      	mov	r0, r3
 80102f6:	3708      	adds	r7, #8
 80102f8:	46bd      	mov	sp, r7
 80102fa:	bd80      	pop	{r7, pc}
 80102fc:	48000800 	.word	0x48000800

08010300 <RBI_GetTxConfig>:
 8010300:	b480      	push	{r7}
 8010302:	af00      	add	r7, sp, #0
 8010304:	2300      	movs	r3, #0
 8010306:	4618      	mov	r0, r3
 8010308:	46bd      	mov	sp, r7
 801030a:	bc80      	pop	{r7}
 801030c:	4770      	bx	lr

0801030e <RBI_GetWakeUpTime>:
 801030e:	b480      	push	{r7}
 8010310:	af00      	add	r7, sp, #0
 8010312:	230a      	movs	r3, #10
 8010314:	4618      	mov	r0, r3
 8010316:	46bd      	mov	sp, r7
 8010318:	bc80      	pop	{r7}
 801031a:	4770      	bx	lr

0801031c <RBI_IsTCXO>:
 801031c:	b480      	push	{r7}
 801031e:	af00      	add	r7, sp, #0
 8010320:	2301      	movs	r3, #1
 8010322:	4618      	mov	r0, r3
 8010324:	46bd      	mov	sp, r7
 8010326:	bc80      	pop	{r7}
 8010328:	4770      	bx	lr

0801032a <RBI_IsDCDC>:
 801032a:	b480      	push	{r7}
 801032c:	af00      	add	r7, sp, #0
 801032e:	2301      	movs	r3, #1
 8010330:	4618      	mov	r0, r3
 8010332:	46bd      	mov	sp, r7
 8010334:	bc80      	pop	{r7}
 8010336:	4770      	bx	lr

08010338 <AES_CMAC_Init>:
 8010338:	b580      	push	{r7, lr}
 801033a:	b082      	sub	sp, #8
 801033c:	af00      	add	r7, sp, #0
 801033e:	6078      	str	r0, [r7, #4]
 8010340:	687b      	ldr	r3, [r7, #4]
 8010342:	33f1      	adds	r3, #241	; 0xf1
 8010344:	2210      	movs	r2, #16
 8010346:	2100      	movs	r1, #0
 8010348:	4618      	mov	r0, r3
 801034a:	f00d f9a9 	bl	801d6a0 <memset1>
 801034e:	687b      	ldr	r3, [r7, #4]
 8010350:	2200      	movs	r2, #0
 8010352:	f8c3 2114 	str.w	r2, [r3, #276]	; 0x114
 8010356:	687b      	ldr	r3, [r7, #4]
 8010358:	22f0      	movs	r2, #240	; 0xf0
 801035a:	2100      	movs	r1, #0
 801035c:	4618      	mov	r0, r3
 801035e:	f00d f99f 	bl	801d6a0 <memset1>
 8010362:	bf00      	nop
 8010364:	3708      	adds	r7, #8
 8010366:	46bd      	mov	sp, r7
 8010368:	bd80      	pop	{r7, pc}

0801036a <AES_CMAC_SetKey>:
 801036a:	b580      	push	{r7, lr}
 801036c:	b082      	sub	sp, #8
 801036e:	af00      	add	r7, sp, #0
 8010370:	6078      	str	r0, [r7, #4]
 8010372:	6039      	str	r1, [r7, #0]
 8010374:	687b      	ldr	r3, [r7, #4]
 8010376:	461a      	mov	r2, r3
 8010378:	2110      	movs	r1, #16
 801037a:	6838      	ldr	r0, [r7, #0]
 801037c:	f000 fe60 	bl	8011040 <lorawan_aes_set_key>
 8010380:	bf00      	nop
 8010382:	3708      	adds	r7, #8
 8010384:	46bd      	mov	sp, r7
 8010386:	bd80      	pop	{r7, pc}

08010388 <AES_CMAC_Update>:
 8010388:	b580      	push	{r7, lr}
 801038a:	b08c      	sub	sp, #48	; 0x30
 801038c:	af00      	add	r7, sp, #0
 801038e:	60f8      	str	r0, [r7, #12]
 8010390:	60b9      	str	r1, [r7, #8]
 8010392:	607a      	str	r2, [r7, #4]
 8010394:	68fb      	ldr	r3, [r7, #12]
 8010396:	f8d3 3114 	ldr.w	r3, [r3, #276]	; 0x114
 801039a:	2b00      	cmp	r3, #0
 801039c:	f000 80a1 	beq.w	80104e2 <AES_CMAC_Update+0x15a>
 80103a0:	68fb      	ldr	r3, [r7, #12]
 80103a2:	f8d3 3114 	ldr.w	r3, [r3, #276]	; 0x114
 80103a6:	f1c3 0310 	rsb	r3, r3, #16
 80103aa:	687a      	ldr	r2, [r7, #4]
 80103ac:	4293      	cmp	r3, r2
 80103ae:	bf28      	it	cs
 80103b0:	4613      	movcs	r3, r2
 80103b2:	627b      	str	r3, [r7, #36]	; 0x24
 80103b4:	68fb      	ldr	r3, [r7, #12]
 80103b6:	f203 1201 	addw	r2, r3, #257	; 0x101
 80103ba:	68fb      	ldr	r3, [r7, #12]
 80103bc:	f8d3 3114 	ldr.w	r3, [r3, #276]	; 0x114
 80103c0:	4413      	add	r3, r2
 80103c2:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80103c4:	b292      	uxth	r2, r2
 80103c6:	68b9      	ldr	r1, [r7, #8]
 80103c8:	4618      	mov	r0, r3
 80103ca:	f00d f92e 	bl	801d62a <memcpy1>
 80103ce:	68fb      	ldr	r3, [r7, #12]
 80103d0:	f8d3 2114 	ldr.w	r2, [r3, #276]	; 0x114
 80103d4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80103d6:	441a      	add	r2, r3
 80103d8:	68fb      	ldr	r3, [r7, #12]
 80103da:	f8c3 2114 	str.w	r2, [r3, #276]	; 0x114
 80103de:	68fb      	ldr	r3, [r7, #12]
 80103e0:	f8d3 3114 	ldr.w	r3, [r3, #276]	; 0x114
 80103e4:	2b0f      	cmp	r3, #15
 80103e6:	f240 808d 	bls.w	8010504 <AES_CMAC_Update+0x17c>
 80103ea:	687a      	ldr	r2, [r7, #4]
 80103ec:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80103ee:	429a      	cmp	r2, r3
 80103f0:	f000 8088 	beq.w	8010504 <AES_CMAC_Update+0x17c>
 80103f4:	2300      	movs	r3, #0
 80103f6:	62fb      	str	r3, [r7, #44]	; 0x2c
 80103f8:	e015      	b.n	8010426 <AES_CMAC_Update+0x9e>
 80103fa:	68fa      	ldr	r2, [r7, #12]
 80103fc:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80103fe:	4413      	add	r3, r2
 8010400:	33f1      	adds	r3, #241	; 0xf1
 8010402:	781a      	ldrb	r2, [r3, #0]
 8010404:	68f9      	ldr	r1, [r7, #12]
 8010406:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8010408:	440b      	add	r3, r1
 801040a:	f203 1301 	addw	r3, r3, #257	; 0x101
 801040e:	781b      	ldrb	r3, [r3, #0]
 8010410:	4053      	eors	r3, r2
 8010412:	b2d9      	uxtb	r1, r3
 8010414:	68fa      	ldr	r2, [r7, #12]
 8010416:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8010418:	4413      	add	r3, r2
 801041a:	33f1      	adds	r3, #241	; 0xf1
 801041c:	460a      	mov	r2, r1
 801041e:	701a      	strb	r2, [r3, #0]
 8010420:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8010422:	3301      	adds	r3, #1
 8010424:	62fb      	str	r3, [r7, #44]	; 0x2c
 8010426:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8010428:	2b0f      	cmp	r3, #15
 801042a:	dde6      	ble.n	80103fa <AES_CMAC_Update+0x72>
 801042c:	68fb      	ldr	r3, [r7, #12]
 801042e:	f103 01f1 	add.w	r1, r3, #241	; 0xf1
 8010432:	f107 0314 	add.w	r3, r7, #20
 8010436:	2210      	movs	r2, #16
 8010438:	4618      	mov	r0, r3
 801043a:	f00d f8f6 	bl	801d62a <memcpy1>
 801043e:	68fa      	ldr	r2, [r7, #12]
 8010440:	f107 0114 	add.w	r1, r7, #20
 8010444:	f107 0314 	add.w	r3, r7, #20
 8010448:	4618      	mov	r0, r3
 801044a:	f000 fed7 	bl	80111fc <lorawan_aes_encrypt>
 801044e:	68fb      	ldr	r3, [r7, #12]
 8010450:	33f1      	adds	r3, #241	; 0xf1
 8010452:	f107 0114 	add.w	r1, r7, #20
 8010456:	2210      	movs	r2, #16
 8010458:	4618      	mov	r0, r3
 801045a:	f00d f8e6 	bl	801d62a <memcpy1>
 801045e:	68ba      	ldr	r2, [r7, #8]
 8010460:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8010462:	4413      	add	r3, r2
 8010464:	60bb      	str	r3, [r7, #8]
 8010466:	687a      	ldr	r2, [r7, #4]
 8010468:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801046a:	1ad3      	subs	r3, r2, r3
 801046c:	607b      	str	r3, [r7, #4]
 801046e:	e038      	b.n	80104e2 <AES_CMAC_Update+0x15a>
 8010470:	2300      	movs	r3, #0
 8010472:	62bb      	str	r3, [r7, #40]	; 0x28
 8010474:	e013      	b.n	801049e <AES_CMAC_Update+0x116>
 8010476:	68fa      	ldr	r2, [r7, #12]
 8010478:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801047a:	4413      	add	r3, r2
 801047c:	33f1      	adds	r3, #241	; 0xf1
 801047e:	781a      	ldrb	r2, [r3, #0]
 8010480:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8010482:	68b9      	ldr	r1, [r7, #8]
 8010484:	440b      	add	r3, r1
 8010486:	781b      	ldrb	r3, [r3, #0]
 8010488:	4053      	eors	r3, r2
 801048a:	b2d9      	uxtb	r1, r3
 801048c:	68fa      	ldr	r2, [r7, #12]
 801048e:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8010490:	4413      	add	r3, r2
 8010492:	33f1      	adds	r3, #241	; 0xf1
 8010494:	460a      	mov	r2, r1
 8010496:	701a      	strb	r2, [r3, #0]
 8010498:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801049a:	3301      	adds	r3, #1
 801049c:	62bb      	str	r3, [r7, #40]	; 0x28
 801049e:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80104a0:	2b0f      	cmp	r3, #15
 80104a2:	dde8      	ble.n	8010476 <AES_CMAC_Update+0xee>
 80104a4:	68fb      	ldr	r3, [r7, #12]
 80104a6:	f103 01f1 	add.w	r1, r3, #241	; 0xf1
 80104aa:	f107 0314 	add.w	r3, r7, #20
 80104ae:	2210      	movs	r2, #16
 80104b0:	4618      	mov	r0, r3
 80104b2:	f00d f8ba 	bl	801d62a <memcpy1>
 80104b6:	68fa      	ldr	r2, [r7, #12]
 80104b8:	f107 0114 	add.w	r1, r7, #20
 80104bc:	f107 0314 	add.w	r3, r7, #20
 80104c0:	4618      	mov	r0, r3
 80104c2:	f000 fe9b 	bl	80111fc <lorawan_aes_encrypt>
 80104c6:	68fb      	ldr	r3, [r7, #12]
 80104c8:	33f1      	adds	r3, #241	; 0xf1
 80104ca:	f107 0114 	add.w	r1, r7, #20
 80104ce:	2210      	movs	r2, #16
 80104d0:	4618      	mov	r0, r3
 80104d2:	f00d f8aa 	bl	801d62a <memcpy1>
 80104d6:	68bb      	ldr	r3, [r7, #8]
 80104d8:	3310      	adds	r3, #16
 80104da:	60bb      	str	r3, [r7, #8]
 80104dc:	687b      	ldr	r3, [r7, #4]
 80104de:	3b10      	subs	r3, #16
 80104e0:	607b      	str	r3, [r7, #4]
 80104e2:	687b      	ldr	r3, [r7, #4]
 80104e4:	2b10      	cmp	r3, #16
 80104e6:	d8c3      	bhi.n	8010470 <AES_CMAC_Update+0xe8>
 80104e8:	68fb      	ldr	r3, [r7, #12]
 80104ea:	f203 1301 	addw	r3, r3, #257	; 0x101
 80104ee:	687a      	ldr	r2, [r7, #4]
 80104f0:	b292      	uxth	r2, r2
 80104f2:	68b9      	ldr	r1, [r7, #8]
 80104f4:	4618      	mov	r0, r3
 80104f6:	f00d f898 	bl	801d62a <memcpy1>
 80104fa:	68fb      	ldr	r3, [r7, #12]
 80104fc:	687a      	ldr	r2, [r7, #4]
 80104fe:	f8c3 2114 	str.w	r2, [r3, #276]	; 0x114
 8010502:	e000      	b.n	8010506 <AES_CMAC_Update+0x17e>
 8010504:	bf00      	nop
 8010506:	3730      	adds	r7, #48	; 0x30
 8010508:	46bd      	mov	sp, r7
 801050a:	bd80      	pop	{r7, pc}

0801050c <AES_CMAC_Final>:
 801050c:	b580      	push	{r7, lr}
 801050e:	b092      	sub	sp, #72	; 0x48
 8010510:	af00      	add	r7, sp, #0
 8010512:	6078      	str	r0, [r7, #4]
 8010514:	6039      	str	r1, [r7, #0]
 8010516:	f107 031c 	add.w	r3, r7, #28
 801051a:	2210      	movs	r2, #16
 801051c:	2100      	movs	r1, #0
 801051e:	4618      	mov	r0, r3
 8010520:	f00d f8be 	bl	801d6a0 <memset1>
 8010524:	683a      	ldr	r2, [r7, #0]
 8010526:	f107 011c 	add.w	r1, r7, #28
 801052a:	f107 031c 	add.w	r3, r7, #28
 801052e:	4618      	mov	r0, r3
 8010530:	f000 fe64 	bl	80111fc <lorawan_aes_encrypt>
 8010534:	7f3b      	ldrb	r3, [r7, #28]
 8010536:	b25b      	sxtb	r3, r3
 8010538:	2b00      	cmp	r3, #0
 801053a:	da31      	bge.n	80105a0 <AES_CMAC_Final+0x94>
 801053c:	2300      	movs	r3, #0
 801053e:	647b      	str	r3, [r7, #68]	; 0x44
 8010540:	e01c      	b.n	801057c <AES_CMAC_Final+0x70>
 8010542:	f107 021c 	add.w	r2, r7, #28
 8010546:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8010548:	4413      	add	r3, r2
 801054a:	781b      	ldrb	r3, [r3, #0]
 801054c:	005b      	lsls	r3, r3, #1
 801054e:	b25a      	sxtb	r2, r3
 8010550:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8010552:	3301      	adds	r3, #1
 8010554:	f107 0148 	add.w	r1, r7, #72	; 0x48
 8010558:	440b      	add	r3, r1
 801055a:	f813 3c2c 	ldrb.w	r3, [r3, #-44]
 801055e:	09db      	lsrs	r3, r3, #7
 8010560:	b2db      	uxtb	r3, r3
 8010562:	b25b      	sxtb	r3, r3
 8010564:	4313      	orrs	r3, r2
 8010566:	b25b      	sxtb	r3, r3
 8010568:	b2d9      	uxtb	r1, r3
 801056a:	f107 021c 	add.w	r2, r7, #28
 801056e:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8010570:	4413      	add	r3, r2
 8010572:	460a      	mov	r2, r1
 8010574:	701a      	strb	r2, [r3, #0]
 8010576:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8010578:	3301      	adds	r3, #1
 801057a:	647b      	str	r3, [r7, #68]	; 0x44
 801057c:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 801057e:	2b0e      	cmp	r3, #14
 8010580:	dddf      	ble.n	8010542 <AES_CMAC_Final+0x36>
 8010582:	f897 302b 	ldrb.w	r3, [r7, #43]	; 0x2b
 8010586:	005b      	lsls	r3, r3, #1
 8010588:	b2db      	uxtb	r3, r3
 801058a:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 801058e:	f897 302b 	ldrb.w	r3, [r7, #43]	; 0x2b
 8010592:	f083 0378 	eor.w	r3, r3, #120	; 0x78
 8010596:	43db      	mvns	r3, r3
 8010598:	b2db      	uxtb	r3, r3
 801059a:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 801059e:	e028      	b.n	80105f2 <AES_CMAC_Final+0xe6>
 80105a0:	2300      	movs	r3, #0
 80105a2:	643b      	str	r3, [r7, #64]	; 0x40
 80105a4:	e01c      	b.n	80105e0 <AES_CMAC_Final+0xd4>
 80105a6:	f107 021c 	add.w	r2, r7, #28
 80105aa:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 80105ac:	4413      	add	r3, r2
 80105ae:	781b      	ldrb	r3, [r3, #0]
 80105b0:	005b      	lsls	r3, r3, #1
 80105b2:	b25a      	sxtb	r2, r3
 80105b4:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 80105b6:	3301      	adds	r3, #1
 80105b8:	f107 0148 	add.w	r1, r7, #72	; 0x48
 80105bc:	440b      	add	r3, r1
 80105be:	f813 3c2c 	ldrb.w	r3, [r3, #-44]
 80105c2:	09db      	lsrs	r3, r3, #7
 80105c4:	b2db      	uxtb	r3, r3
 80105c6:	b25b      	sxtb	r3, r3
 80105c8:	4313      	orrs	r3, r2
 80105ca:	b25b      	sxtb	r3, r3
 80105cc:	b2d9      	uxtb	r1, r3
 80105ce:	f107 021c 	add.w	r2, r7, #28
 80105d2:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 80105d4:	4413      	add	r3, r2
 80105d6:	460a      	mov	r2, r1
 80105d8:	701a      	strb	r2, [r3, #0]
 80105da:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 80105dc:	3301      	adds	r3, #1
 80105de:	643b      	str	r3, [r7, #64]	; 0x40
 80105e0:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 80105e2:	2b0e      	cmp	r3, #14
 80105e4:	dddf      	ble.n	80105a6 <AES_CMAC_Final+0x9a>
 80105e6:	f897 302b 	ldrb.w	r3, [r7, #43]	; 0x2b
 80105ea:	005b      	lsls	r3, r3, #1
 80105ec:	b2db      	uxtb	r3, r3
 80105ee:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 80105f2:	683b      	ldr	r3, [r7, #0]
 80105f4:	f8d3 3114 	ldr.w	r3, [r3, #276]	; 0x114
 80105f8:	2b10      	cmp	r3, #16
 80105fa:	d11d      	bne.n	8010638 <AES_CMAC_Final+0x12c>
 80105fc:	2300      	movs	r3, #0
 80105fe:	63fb      	str	r3, [r7, #60]	; 0x3c
 8010600:	e016      	b.n	8010630 <AES_CMAC_Final+0x124>
 8010602:	683a      	ldr	r2, [r7, #0]
 8010604:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8010606:	4413      	add	r3, r2
 8010608:	f203 1301 	addw	r3, r3, #257	; 0x101
 801060c:	781a      	ldrb	r2, [r3, #0]
 801060e:	f107 011c 	add.w	r1, r7, #28
 8010612:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8010614:	440b      	add	r3, r1
 8010616:	781b      	ldrb	r3, [r3, #0]
 8010618:	4053      	eors	r3, r2
 801061a:	b2d9      	uxtb	r1, r3
 801061c:	683a      	ldr	r2, [r7, #0]
 801061e:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8010620:	4413      	add	r3, r2
 8010622:	f203 1301 	addw	r3, r3, #257	; 0x101
 8010626:	460a      	mov	r2, r1
 8010628:	701a      	strb	r2, [r3, #0]
 801062a:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 801062c:	3301      	adds	r3, #1
 801062e:	63fb      	str	r3, [r7, #60]	; 0x3c
 8010630:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8010632:	2b0f      	cmp	r3, #15
 8010634:	dde5      	ble.n	8010602 <AES_CMAC_Final+0xf6>
 8010636:	e098      	b.n	801076a <AES_CMAC_Final+0x25e>
 8010638:	7f3b      	ldrb	r3, [r7, #28]
 801063a:	b25b      	sxtb	r3, r3
 801063c:	2b00      	cmp	r3, #0
 801063e:	da31      	bge.n	80106a4 <AES_CMAC_Final+0x198>
 8010640:	2300      	movs	r3, #0
 8010642:	63bb      	str	r3, [r7, #56]	; 0x38
 8010644:	e01c      	b.n	8010680 <AES_CMAC_Final+0x174>
 8010646:	f107 021c 	add.w	r2, r7, #28
 801064a:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 801064c:	4413      	add	r3, r2
 801064e:	781b      	ldrb	r3, [r3, #0]
 8010650:	005b      	lsls	r3, r3, #1
 8010652:	b25a      	sxtb	r2, r3
 8010654:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8010656:	3301      	adds	r3, #1
 8010658:	f107 0148 	add.w	r1, r7, #72	; 0x48
 801065c:	440b      	add	r3, r1
 801065e:	f813 3c2c 	ldrb.w	r3, [r3, #-44]
 8010662:	09db      	lsrs	r3, r3, #7
 8010664:	b2db      	uxtb	r3, r3
 8010666:	b25b      	sxtb	r3, r3
 8010668:	4313      	orrs	r3, r2
 801066a:	b25b      	sxtb	r3, r3
 801066c:	b2d9      	uxtb	r1, r3
 801066e:	f107 021c 	add.w	r2, r7, #28
 8010672:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8010674:	4413      	add	r3, r2
 8010676:	460a      	mov	r2, r1
 8010678:	701a      	strb	r2, [r3, #0]
 801067a:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 801067c:	3301      	adds	r3, #1
 801067e:	63bb      	str	r3, [r7, #56]	; 0x38
 8010680:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8010682:	2b0e      	cmp	r3, #14
 8010684:	dddf      	ble.n	8010646 <AES_CMAC_Final+0x13a>
 8010686:	f897 302b 	ldrb.w	r3, [r7, #43]	; 0x2b
 801068a:	005b      	lsls	r3, r3, #1
 801068c:	b2db      	uxtb	r3, r3
 801068e:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 8010692:	f897 302b 	ldrb.w	r3, [r7, #43]	; 0x2b
 8010696:	f083 0378 	eor.w	r3, r3, #120	; 0x78
 801069a:	43db      	mvns	r3, r3
 801069c:	b2db      	uxtb	r3, r3
 801069e:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 80106a2:	e028      	b.n	80106f6 <AES_CMAC_Final+0x1ea>
 80106a4:	2300      	movs	r3, #0
 80106a6:	637b      	str	r3, [r7, #52]	; 0x34
 80106a8:	e01c      	b.n	80106e4 <AES_CMAC_Final+0x1d8>
 80106aa:	f107 021c 	add.w	r2, r7, #28
 80106ae:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80106b0:	4413      	add	r3, r2
 80106b2:	781b      	ldrb	r3, [r3, #0]
 80106b4:	005b      	lsls	r3, r3, #1
 80106b6:	b25a      	sxtb	r2, r3
 80106b8:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80106ba:	3301      	adds	r3, #1
 80106bc:	f107 0148 	add.w	r1, r7, #72	; 0x48
 80106c0:	440b      	add	r3, r1
 80106c2:	f813 3c2c 	ldrb.w	r3, [r3, #-44]
 80106c6:	09db      	lsrs	r3, r3, #7
 80106c8:	b2db      	uxtb	r3, r3
 80106ca:	b25b      	sxtb	r3, r3
 80106cc:	4313      	orrs	r3, r2
 80106ce:	b25b      	sxtb	r3, r3
 80106d0:	b2d9      	uxtb	r1, r3
 80106d2:	f107 021c 	add.w	r2, r7, #28
 80106d6:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80106d8:	4413      	add	r3, r2
 80106da:	460a      	mov	r2, r1
 80106dc:	701a      	strb	r2, [r3, #0]
 80106de:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80106e0:	3301      	adds	r3, #1
 80106e2:	637b      	str	r3, [r7, #52]	; 0x34
 80106e4:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80106e6:	2b0e      	cmp	r3, #14
 80106e8:	dddf      	ble.n	80106aa <AES_CMAC_Final+0x19e>
 80106ea:	f897 302b 	ldrb.w	r3, [r7, #43]	; 0x2b
 80106ee:	005b      	lsls	r3, r3, #1
 80106f0:	b2db      	uxtb	r3, r3
 80106f2:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 80106f6:	683b      	ldr	r3, [r7, #0]
 80106f8:	f8d3 3114 	ldr.w	r3, [r3, #276]	; 0x114
 80106fc:	683a      	ldr	r2, [r7, #0]
 80106fe:	4413      	add	r3, r2
 8010700:	2280      	movs	r2, #128	; 0x80
 8010702:	f883 2101 	strb.w	r2, [r3, #257]	; 0x101
 8010706:	e007      	b.n	8010718 <AES_CMAC_Final+0x20c>
 8010708:	683b      	ldr	r3, [r7, #0]
 801070a:	f8d3 3114 	ldr.w	r3, [r3, #276]	; 0x114
 801070e:	683a      	ldr	r2, [r7, #0]
 8010710:	4413      	add	r3, r2
 8010712:	2200      	movs	r2, #0
 8010714:	f883 2101 	strb.w	r2, [r3, #257]	; 0x101
 8010718:	683b      	ldr	r3, [r7, #0]
 801071a:	f8d3 3114 	ldr.w	r3, [r3, #276]	; 0x114
 801071e:	1c5a      	adds	r2, r3, #1
 8010720:	683b      	ldr	r3, [r7, #0]
 8010722:	f8c3 2114 	str.w	r2, [r3, #276]	; 0x114
 8010726:	683b      	ldr	r3, [r7, #0]
 8010728:	f8d3 3114 	ldr.w	r3, [r3, #276]	; 0x114
 801072c:	2b0f      	cmp	r3, #15
 801072e:	d9eb      	bls.n	8010708 <AES_CMAC_Final+0x1fc>
 8010730:	2300      	movs	r3, #0
 8010732:	633b      	str	r3, [r7, #48]	; 0x30
 8010734:	e016      	b.n	8010764 <AES_CMAC_Final+0x258>
 8010736:	683a      	ldr	r2, [r7, #0]
 8010738:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 801073a:	4413      	add	r3, r2
 801073c:	f203 1301 	addw	r3, r3, #257	; 0x101
 8010740:	781a      	ldrb	r2, [r3, #0]
 8010742:	f107 011c 	add.w	r1, r7, #28
 8010746:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8010748:	440b      	add	r3, r1
 801074a:	781b      	ldrb	r3, [r3, #0]
 801074c:	4053      	eors	r3, r2
 801074e:	b2d9      	uxtb	r1, r3
 8010750:	683a      	ldr	r2, [r7, #0]
 8010752:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8010754:	4413      	add	r3, r2
 8010756:	f203 1301 	addw	r3, r3, #257	; 0x101
 801075a:	460a      	mov	r2, r1
 801075c:	701a      	strb	r2, [r3, #0]
 801075e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8010760:	3301      	adds	r3, #1
 8010762:	633b      	str	r3, [r7, #48]	; 0x30
 8010764:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8010766:	2b0f      	cmp	r3, #15
 8010768:	dde5      	ble.n	8010736 <AES_CMAC_Final+0x22a>
 801076a:	2300      	movs	r3, #0
 801076c:	62fb      	str	r3, [r7, #44]	; 0x2c
 801076e:	e015      	b.n	801079c <AES_CMAC_Final+0x290>
 8010770:	683a      	ldr	r2, [r7, #0]
 8010772:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8010774:	4413      	add	r3, r2
 8010776:	33f1      	adds	r3, #241	; 0xf1
 8010778:	781a      	ldrb	r2, [r3, #0]
 801077a:	6839      	ldr	r1, [r7, #0]
 801077c:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 801077e:	440b      	add	r3, r1
 8010780:	f203 1301 	addw	r3, r3, #257	; 0x101
 8010784:	781b      	ldrb	r3, [r3, #0]
 8010786:	4053      	eors	r3, r2
 8010788:	b2d9      	uxtb	r1, r3
 801078a:	683a      	ldr	r2, [r7, #0]
 801078c:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 801078e:	4413      	add	r3, r2
 8010790:	33f1      	adds	r3, #241	; 0xf1
 8010792:	460a      	mov	r2, r1
 8010794:	701a      	strb	r2, [r3, #0]
 8010796:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8010798:	3301      	adds	r3, #1
 801079a:	62fb      	str	r3, [r7, #44]	; 0x2c
 801079c:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 801079e:	2b0f      	cmp	r3, #15
 80107a0:	dde6      	ble.n	8010770 <AES_CMAC_Final+0x264>
 80107a2:	683b      	ldr	r3, [r7, #0]
 80107a4:	f103 01f1 	add.w	r1, r3, #241	; 0xf1
 80107a8:	f107 030c 	add.w	r3, r7, #12
 80107ac:	2210      	movs	r2, #16
 80107ae:	4618      	mov	r0, r3
 80107b0:	f00c ff3b 	bl	801d62a <memcpy1>
 80107b4:	683a      	ldr	r2, [r7, #0]
 80107b6:	f107 030c 	add.w	r3, r7, #12
 80107ba:	6879      	ldr	r1, [r7, #4]
 80107bc:	4618      	mov	r0, r3
 80107be:	f000 fd1d 	bl	80111fc <lorawan_aes_encrypt>
 80107c2:	f107 031c 	add.w	r3, r7, #28
 80107c6:	2210      	movs	r2, #16
 80107c8:	2100      	movs	r1, #0
 80107ca:	4618      	mov	r0, r3
 80107cc:	f00c ff68 	bl	801d6a0 <memset1>
 80107d0:	bf00      	nop
 80107d2:	3748      	adds	r7, #72	; 0x48
 80107d4:	46bd      	mov	sp, r7
 80107d6:	bd80      	pop	{r7, pc}

080107d8 <copy_block>:
 80107d8:	b480      	push	{r7}
 80107da:	b083      	sub	sp, #12
 80107dc:	af00      	add	r7, sp, #0
 80107de:	6078      	str	r0, [r7, #4]
 80107e0:	6039      	str	r1, [r7, #0]
 80107e2:	683b      	ldr	r3, [r7, #0]
 80107e4:	781a      	ldrb	r2, [r3, #0]
 80107e6:	687b      	ldr	r3, [r7, #4]
 80107e8:	701a      	strb	r2, [r3, #0]
 80107ea:	687b      	ldr	r3, [r7, #4]
 80107ec:	3301      	adds	r3, #1
 80107ee:	683a      	ldr	r2, [r7, #0]
 80107f0:	7852      	ldrb	r2, [r2, #1]
 80107f2:	701a      	strb	r2, [r3, #0]
 80107f4:	687b      	ldr	r3, [r7, #4]
 80107f6:	3302      	adds	r3, #2
 80107f8:	683a      	ldr	r2, [r7, #0]
 80107fa:	7892      	ldrb	r2, [r2, #2]
 80107fc:	701a      	strb	r2, [r3, #0]
 80107fe:	687b      	ldr	r3, [r7, #4]
 8010800:	3303      	adds	r3, #3
 8010802:	683a      	ldr	r2, [r7, #0]
 8010804:	78d2      	ldrb	r2, [r2, #3]
 8010806:	701a      	strb	r2, [r3, #0]
 8010808:	687b      	ldr	r3, [r7, #4]
 801080a:	3304      	adds	r3, #4
 801080c:	683a      	ldr	r2, [r7, #0]
 801080e:	7912      	ldrb	r2, [r2, #4]
 8010810:	701a      	strb	r2, [r3, #0]
 8010812:	687b      	ldr	r3, [r7, #4]
 8010814:	3305      	adds	r3, #5
 8010816:	683a      	ldr	r2, [r7, #0]
 8010818:	7952      	ldrb	r2, [r2, #5]
 801081a:	701a      	strb	r2, [r3, #0]
 801081c:	687b      	ldr	r3, [r7, #4]
 801081e:	3306      	adds	r3, #6
 8010820:	683a      	ldr	r2, [r7, #0]
 8010822:	7992      	ldrb	r2, [r2, #6]
 8010824:	701a      	strb	r2, [r3, #0]
 8010826:	687b      	ldr	r3, [r7, #4]
 8010828:	3307      	adds	r3, #7
 801082a:	683a      	ldr	r2, [r7, #0]
 801082c:	79d2      	ldrb	r2, [r2, #7]
 801082e:	701a      	strb	r2, [r3, #0]
 8010830:	687b      	ldr	r3, [r7, #4]
 8010832:	3308      	adds	r3, #8
 8010834:	683a      	ldr	r2, [r7, #0]
 8010836:	7a12      	ldrb	r2, [r2, #8]
 8010838:	701a      	strb	r2, [r3, #0]
 801083a:	687b      	ldr	r3, [r7, #4]
 801083c:	3309      	adds	r3, #9
 801083e:	683a      	ldr	r2, [r7, #0]
 8010840:	7a52      	ldrb	r2, [r2, #9]
 8010842:	701a      	strb	r2, [r3, #0]
 8010844:	687b      	ldr	r3, [r7, #4]
 8010846:	330a      	adds	r3, #10
 8010848:	683a      	ldr	r2, [r7, #0]
 801084a:	7a92      	ldrb	r2, [r2, #10]
 801084c:	701a      	strb	r2, [r3, #0]
 801084e:	687b      	ldr	r3, [r7, #4]
 8010850:	330b      	adds	r3, #11
 8010852:	683a      	ldr	r2, [r7, #0]
 8010854:	7ad2      	ldrb	r2, [r2, #11]
 8010856:	701a      	strb	r2, [r3, #0]
 8010858:	687b      	ldr	r3, [r7, #4]
 801085a:	330c      	adds	r3, #12
 801085c:	683a      	ldr	r2, [r7, #0]
 801085e:	7b12      	ldrb	r2, [r2, #12]
 8010860:	701a      	strb	r2, [r3, #0]
 8010862:	687b      	ldr	r3, [r7, #4]
 8010864:	330d      	adds	r3, #13
 8010866:	683a      	ldr	r2, [r7, #0]
 8010868:	7b52      	ldrb	r2, [r2, #13]
 801086a:	701a      	strb	r2, [r3, #0]
 801086c:	687b      	ldr	r3, [r7, #4]
 801086e:	330e      	adds	r3, #14
 8010870:	683a      	ldr	r2, [r7, #0]
 8010872:	7b92      	ldrb	r2, [r2, #14]
 8010874:	701a      	strb	r2, [r3, #0]
 8010876:	687b      	ldr	r3, [r7, #4]
 8010878:	330f      	adds	r3, #15
 801087a:	683a      	ldr	r2, [r7, #0]
 801087c:	7bd2      	ldrb	r2, [r2, #15]
 801087e:	701a      	strb	r2, [r3, #0]
 8010880:	bf00      	nop
 8010882:	370c      	adds	r7, #12
 8010884:	46bd      	mov	sp, r7
 8010886:	bc80      	pop	{r7}
 8010888:	4770      	bx	lr

0801088a <copy_block_nn>:
 801088a:	b480      	push	{r7}
 801088c:	b085      	sub	sp, #20
 801088e:	af00      	add	r7, sp, #0
 8010890:	60f8      	str	r0, [r7, #12]
 8010892:	60b9      	str	r1, [r7, #8]
 8010894:	4613      	mov	r3, r2
 8010896:	71fb      	strb	r3, [r7, #7]
 8010898:	e007      	b.n	80108aa <copy_block_nn+0x20>
 801089a:	68ba      	ldr	r2, [r7, #8]
 801089c:	1c53      	adds	r3, r2, #1
 801089e:	60bb      	str	r3, [r7, #8]
 80108a0:	68fb      	ldr	r3, [r7, #12]
 80108a2:	1c59      	adds	r1, r3, #1
 80108a4:	60f9      	str	r1, [r7, #12]
 80108a6:	7812      	ldrb	r2, [r2, #0]
 80108a8:	701a      	strb	r2, [r3, #0]
 80108aa:	79fb      	ldrb	r3, [r7, #7]
 80108ac:	1e5a      	subs	r2, r3, #1
 80108ae:	71fa      	strb	r2, [r7, #7]
 80108b0:	2b00      	cmp	r3, #0
 80108b2:	d1f2      	bne.n	801089a <copy_block_nn+0x10>
 80108b4:	bf00      	nop
 80108b6:	bf00      	nop
 80108b8:	3714      	adds	r7, #20
 80108ba:	46bd      	mov	sp, r7
 80108bc:	bc80      	pop	{r7}
 80108be:	4770      	bx	lr

080108c0 <xor_block>:
 80108c0:	b480      	push	{r7}
 80108c2:	b083      	sub	sp, #12
 80108c4:	af00      	add	r7, sp, #0
 80108c6:	6078      	str	r0, [r7, #4]
 80108c8:	6039      	str	r1, [r7, #0]
 80108ca:	687b      	ldr	r3, [r7, #4]
 80108cc:	781a      	ldrb	r2, [r3, #0]
 80108ce:	683b      	ldr	r3, [r7, #0]
 80108d0:	781b      	ldrb	r3, [r3, #0]
 80108d2:	4053      	eors	r3, r2
 80108d4:	b2da      	uxtb	r2, r3
 80108d6:	687b      	ldr	r3, [r7, #4]
 80108d8:	701a      	strb	r2, [r3, #0]
 80108da:	687b      	ldr	r3, [r7, #4]
 80108dc:	3301      	adds	r3, #1
 80108de:	7819      	ldrb	r1, [r3, #0]
 80108e0:	683b      	ldr	r3, [r7, #0]
 80108e2:	3301      	adds	r3, #1
 80108e4:	781a      	ldrb	r2, [r3, #0]
 80108e6:	687b      	ldr	r3, [r7, #4]
 80108e8:	3301      	adds	r3, #1
 80108ea:	404a      	eors	r2, r1
 80108ec:	b2d2      	uxtb	r2, r2
 80108ee:	701a      	strb	r2, [r3, #0]
 80108f0:	687b      	ldr	r3, [r7, #4]
 80108f2:	3302      	adds	r3, #2
 80108f4:	7819      	ldrb	r1, [r3, #0]
 80108f6:	683b      	ldr	r3, [r7, #0]
 80108f8:	3302      	adds	r3, #2
 80108fa:	781a      	ldrb	r2, [r3, #0]
 80108fc:	687b      	ldr	r3, [r7, #4]
 80108fe:	3302      	adds	r3, #2
 8010900:	404a      	eors	r2, r1
 8010902:	b2d2      	uxtb	r2, r2
 8010904:	701a      	strb	r2, [r3, #0]
 8010906:	687b      	ldr	r3, [r7, #4]
 8010908:	3303      	adds	r3, #3
 801090a:	7819      	ldrb	r1, [r3, #0]
 801090c:	683b      	ldr	r3, [r7, #0]
 801090e:	3303      	adds	r3, #3
 8010910:	781a      	ldrb	r2, [r3, #0]
 8010912:	687b      	ldr	r3, [r7, #4]
 8010914:	3303      	adds	r3, #3
 8010916:	404a      	eors	r2, r1
 8010918:	b2d2      	uxtb	r2, r2
 801091a:	701a      	strb	r2, [r3, #0]
 801091c:	687b      	ldr	r3, [r7, #4]
 801091e:	3304      	adds	r3, #4
 8010920:	7819      	ldrb	r1, [r3, #0]
 8010922:	683b      	ldr	r3, [r7, #0]
 8010924:	3304      	adds	r3, #4
 8010926:	781a      	ldrb	r2, [r3, #0]
 8010928:	687b      	ldr	r3, [r7, #4]
 801092a:	3304      	adds	r3, #4
 801092c:	404a      	eors	r2, r1
 801092e:	b2d2      	uxtb	r2, r2
 8010930:	701a      	strb	r2, [r3, #0]
 8010932:	687b      	ldr	r3, [r7, #4]
 8010934:	3305      	adds	r3, #5
 8010936:	7819      	ldrb	r1, [r3, #0]
 8010938:	683b      	ldr	r3, [r7, #0]
 801093a:	3305      	adds	r3, #5
 801093c:	781a      	ldrb	r2, [r3, #0]
 801093e:	687b      	ldr	r3, [r7, #4]
 8010940:	3305      	adds	r3, #5
 8010942:	404a      	eors	r2, r1
 8010944:	b2d2      	uxtb	r2, r2
 8010946:	701a      	strb	r2, [r3, #0]
 8010948:	687b      	ldr	r3, [r7, #4]
 801094a:	3306      	adds	r3, #6
 801094c:	7819      	ldrb	r1, [r3, #0]
 801094e:	683b      	ldr	r3, [r7, #0]
 8010950:	3306      	adds	r3, #6
 8010952:	781a      	ldrb	r2, [r3, #0]
 8010954:	687b      	ldr	r3, [r7, #4]
 8010956:	3306      	adds	r3, #6
 8010958:	404a      	eors	r2, r1
 801095a:	b2d2      	uxtb	r2, r2
 801095c:	701a      	strb	r2, [r3, #0]
 801095e:	687b      	ldr	r3, [r7, #4]
 8010960:	3307      	adds	r3, #7
 8010962:	7819      	ldrb	r1, [r3, #0]
 8010964:	683b      	ldr	r3, [r7, #0]
 8010966:	3307      	adds	r3, #7
 8010968:	781a      	ldrb	r2, [r3, #0]
 801096a:	687b      	ldr	r3, [r7, #4]
 801096c:	3307      	adds	r3, #7
 801096e:	404a      	eors	r2, r1
 8010970:	b2d2      	uxtb	r2, r2
 8010972:	701a      	strb	r2, [r3, #0]
 8010974:	687b      	ldr	r3, [r7, #4]
 8010976:	3308      	adds	r3, #8
 8010978:	7819      	ldrb	r1, [r3, #0]
 801097a:	683b      	ldr	r3, [r7, #0]
 801097c:	3308      	adds	r3, #8
 801097e:	781a      	ldrb	r2, [r3, #0]
 8010980:	687b      	ldr	r3, [r7, #4]
 8010982:	3308      	adds	r3, #8
 8010984:	404a      	eors	r2, r1
 8010986:	b2d2      	uxtb	r2, r2
 8010988:	701a      	strb	r2, [r3, #0]
 801098a:	687b      	ldr	r3, [r7, #4]
 801098c:	3309      	adds	r3, #9
 801098e:	7819      	ldrb	r1, [r3, #0]
 8010990:	683b      	ldr	r3, [r7, #0]
 8010992:	3309      	adds	r3, #9
 8010994:	781a      	ldrb	r2, [r3, #0]
 8010996:	687b      	ldr	r3, [r7, #4]
 8010998:	3309      	adds	r3, #9
 801099a:	404a      	eors	r2, r1
 801099c:	b2d2      	uxtb	r2, r2
 801099e:	701a      	strb	r2, [r3, #0]
 80109a0:	687b      	ldr	r3, [r7, #4]
 80109a2:	330a      	adds	r3, #10
 80109a4:	7819      	ldrb	r1, [r3, #0]
 80109a6:	683b      	ldr	r3, [r7, #0]
 80109a8:	330a      	adds	r3, #10
 80109aa:	781a      	ldrb	r2, [r3, #0]
 80109ac:	687b      	ldr	r3, [r7, #4]
 80109ae:	330a      	adds	r3, #10
 80109b0:	404a      	eors	r2, r1
 80109b2:	b2d2      	uxtb	r2, r2
 80109b4:	701a      	strb	r2, [r3, #0]
 80109b6:	687b      	ldr	r3, [r7, #4]
 80109b8:	330b      	adds	r3, #11
 80109ba:	7819      	ldrb	r1, [r3, #0]
 80109bc:	683b      	ldr	r3, [r7, #0]
 80109be:	330b      	adds	r3, #11
 80109c0:	781a      	ldrb	r2, [r3, #0]
 80109c2:	687b      	ldr	r3, [r7, #4]
 80109c4:	330b      	adds	r3, #11
 80109c6:	404a      	eors	r2, r1
 80109c8:	b2d2      	uxtb	r2, r2
 80109ca:	701a      	strb	r2, [r3, #0]
 80109cc:	687b      	ldr	r3, [r7, #4]
 80109ce:	330c      	adds	r3, #12
 80109d0:	7819      	ldrb	r1, [r3, #0]
 80109d2:	683b      	ldr	r3, [r7, #0]
 80109d4:	330c      	adds	r3, #12
 80109d6:	781a      	ldrb	r2, [r3, #0]
 80109d8:	687b      	ldr	r3, [r7, #4]
 80109da:	330c      	adds	r3, #12
 80109dc:	404a      	eors	r2, r1
 80109de:	b2d2      	uxtb	r2, r2
 80109e0:	701a      	strb	r2, [r3, #0]
 80109e2:	687b      	ldr	r3, [r7, #4]
 80109e4:	330d      	adds	r3, #13
 80109e6:	7819      	ldrb	r1, [r3, #0]
 80109e8:	683b      	ldr	r3, [r7, #0]
 80109ea:	330d      	adds	r3, #13
 80109ec:	781a      	ldrb	r2, [r3, #0]
 80109ee:	687b      	ldr	r3, [r7, #4]
 80109f0:	330d      	adds	r3, #13
 80109f2:	404a      	eors	r2, r1
 80109f4:	b2d2      	uxtb	r2, r2
 80109f6:	701a      	strb	r2, [r3, #0]
 80109f8:	687b      	ldr	r3, [r7, #4]
 80109fa:	330e      	adds	r3, #14
 80109fc:	7819      	ldrb	r1, [r3, #0]
 80109fe:	683b      	ldr	r3, [r7, #0]
 8010a00:	330e      	adds	r3, #14
 8010a02:	781a      	ldrb	r2, [r3, #0]
 8010a04:	687b      	ldr	r3, [r7, #4]
 8010a06:	330e      	adds	r3, #14
 8010a08:	404a      	eors	r2, r1
 8010a0a:	b2d2      	uxtb	r2, r2
 8010a0c:	701a      	strb	r2, [r3, #0]
 8010a0e:	687b      	ldr	r3, [r7, #4]
 8010a10:	330f      	adds	r3, #15
 8010a12:	7819      	ldrb	r1, [r3, #0]
 8010a14:	683b      	ldr	r3, [r7, #0]
 8010a16:	330f      	adds	r3, #15
 8010a18:	781a      	ldrb	r2, [r3, #0]
 8010a1a:	687b      	ldr	r3, [r7, #4]
 8010a1c:	330f      	adds	r3, #15
 8010a1e:	404a      	eors	r2, r1
 8010a20:	b2d2      	uxtb	r2, r2
 8010a22:	701a      	strb	r2, [r3, #0]
 8010a24:	bf00      	nop
 8010a26:	370c      	adds	r7, #12
 8010a28:	46bd      	mov	sp, r7
 8010a2a:	bc80      	pop	{r7}
 8010a2c:	4770      	bx	lr

08010a2e <copy_and_key>:
 8010a2e:	b480      	push	{r7}
 8010a30:	b085      	sub	sp, #20
 8010a32:	af00      	add	r7, sp, #0
 8010a34:	60f8      	str	r0, [r7, #12]
 8010a36:	60b9      	str	r1, [r7, #8]
 8010a38:	607a      	str	r2, [r7, #4]
 8010a3a:	68bb      	ldr	r3, [r7, #8]
 8010a3c:	781a      	ldrb	r2, [r3, #0]
 8010a3e:	687b      	ldr	r3, [r7, #4]
 8010a40:	781b      	ldrb	r3, [r3, #0]
 8010a42:	4053      	eors	r3, r2
 8010a44:	b2da      	uxtb	r2, r3
 8010a46:	68fb      	ldr	r3, [r7, #12]
 8010a48:	701a      	strb	r2, [r3, #0]
 8010a4a:	68bb      	ldr	r3, [r7, #8]
 8010a4c:	3301      	adds	r3, #1
 8010a4e:	7819      	ldrb	r1, [r3, #0]
 8010a50:	687b      	ldr	r3, [r7, #4]
 8010a52:	3301      	adds	r3, #1
 8010a54:	781a      	ldrb	r2, [r3, #0]
 8010a56:	68fb      	ldr	r3, [r7, #12]
 8010a58:	3301      	adds	r3, #1
 8010a5a:	404a      	eors	r2, r1
 8010a5c:	b2d2      	uxtb	r2, r2
 8010a5e:	701a      	strb	r2, [r3, #0]
 8010a60:	68bb      	ldr	r3, [r7, #8]
 8010a62:	3302      	adds	r3, #2
 8010a64:	7819      	ldrb	r1, [r3, #0]
 8010a66:	687b      	ldr	r3, [r7, #4]
 8010a68:	3302      	adds	r3, #2
 8010a6a:	781a      	ldrb	r2, [r3, #0]
 8010a6c:	68fb      	ldr	r3, [r7, #12]
 8010a6e:	3302      	adds	r3, #2
 8010a70:	404a      	eors	r2, r1
 8010a72:	b2d2      	uxtb	r2, r2
 8010a74:	701a      	strb	r2, [r3, #0]
 8010a76:	68bb      	ldr	r3, [r7, #8]
 8010a78:	3303      	adds	r3, #3
 8010a7a:	7819      	ldrb	r1, [r3, #0]
 8010a7c:	687b      	ldr	r3, [r7, #4]
 8010a7e:	3303      	adds	r3, #3
 8010a80:	781a      	ldrb	r2, [r3, #0]
 8010a82:	68fb      	ldr	r3, [r7, #12]
 8010a84:	3303      	adds	r3, #3
 8010a86:	404a      	eors	r2, r1
 8010a88:	b2d2      	uxtb	r2, r2
 8010a8a:	701a      	strb	r2, [r3, #0]
 8010a8c:	68bb      	ldr	r3, [r7, #8]
 8010a8e:	3304      	adds	r3, #4
 8010a90:	7819      	ldrb	r1, [r3, #0]
 8010a92:	687b      	ldr	r3, [r7, #4]
 8010a94:	3304      	adds	r3, #4
 8010a96:	781a      	ldrb	r2, [r3, #0]
 8010a98:	68fb      	ldr	r3, [r7, #12]
 8010a9a:	3304      	adds	r3, #4
 8010a9c:	404a      	eors	r2, r1
 8010a9e:	b2d2      	uxtb	r2, r2
 8010aa0:	701a      	strb	r2, [r3, #0]
 8010aa2:	68bb      	ldr	r3, [r7, #8]
 8010aa4:	3305      	adds	r3, #5
 8010aa6:	7819      	ldrb	r1, [r3, #0]
 8010aa8:	687b      	ldr	r3, [r7, #4]
 8010aaa:	3305      	adds	r3, #5
 8010aac:	781a      	ldrb	r2, [r3, #0]
 8010aae:	68fb      	ldr	r3, [r7, #12]
 8010ab0:	3305      	adds	r3, #5
 8010ab2:	404a      	eors	r2, r1
 8010ab4:	b2d2      	uxtb	r2, r2
 8010ab6:	701a      	strb	r2, [r3, #0]
 8010ab8:	68bb      	ldr	r3, [r7, #8]
 8010aba:	3306      	adds	r3, #6
 8010abc:	7819      	ldrb	r1, [r3, #0]
 8010abe:	687b      	ldr	r3, [r7, #4]
 8010ac0:	3306      	adds	r3, #6
 8010ac2:	781a      	ldrb	r2, [r3, #0]
 8010ac4:	68fb      	ldr	r3, [r7, #12]
 8010ac6:	3306      	adds	r3, #6
 8010ac8:	404a      	eors	r2, r1
 8010aca:	b2d2      	uxtb	r2, r2
 8010acc:	701a      	strb	r2, [r3, #0]
 8010ace:	68bb      	ldr	r3, [r7, #8]
 8010ad0:	3307      	adds	r3, #7
 8010ad2:	7819      	ldrb	r1, [r3, #0]
 8010ad4:	687b      	ldr	r3, [r7, #4]
 8010ad6:	3307      	adds	r3, #7
 8010ad8:	781a      	ldrb	r2, [r3, #0]
 8010ada:	68fb      	ldr	r3, [r7, #12]
 8010adc:	3307      	adds	r3, #7
 8010ade:	404a      	eors	r2, r1
 8010ae0:	b2d2      	uxtb	r2, r2
 8010ae2:	701a      	strb	r2, [r3, #0]
 8010ae4:	68bb      	ldr	r3, [r7, #8]
 8010ae6:	3308      	adds	r3, #8
 8010ae8:	7819      	ldrb	r1, [r3, #0]
 8010aea:	687b      	ldr	r3, [r7, #4]
 8010aec:	3308      	adds	r3, #8
 8010aee:	781a      	ldrb	r2, [r3, #0]
 8010af0:	68fb      	ldr	r3, [r7, #12]
 8010af2:	3308      	adds	r3, #8
 8010af4:	404a      	eors	r2, r1
 8010af6:	b2d2      	uxtb	r2, r2
 8010af8:	701a      	strb	r2, [r3, #0]
 8010afa:	68bb      	ldr	r3, [r7, #8]
 8010afc:	3309      	adds	r3, #9
 8010afe:	7819      	ldrb	r1, [r3, #0]
 8010b00:	687b      	ldr	r3, [r7, #4]
 8010b02:	3309      	adds	r3, #9
 8010b04:	781a      	ldrb	r2, [r3, #0]
 8010b06:	68fb      	ldr	r3, [r7, #12]
 8010b08:	3309      	adds	r3, #9
 8010b0a:	404a      	eors	r2, r1
 8010b0c:	b2d2      	uxtb	r2, r2
 8010b0e:	701a      	strb	r2, [r3, #0]
 8010b10:	68bb      	ldr	r3, [r7, #8]
 8010b12:	330a      	adds	r3, #10
 8010b14:	7819      	ldrb	r1, [r3, #0]
 8010b16:	687b      	ldr	r3, [r7, #4]
 8010b18:	330a      	adds	r3, #10
 8010b1a:	781a      	ldrb	r2, [r3, #0]
 8010b1c:	68fb      	ldr	r3, [r7, #12]
 8010b1e:	330a      	adds	r3, #10
 8010b20:	404a      	eors	r2, r1
 8010b22:	b2d2      	uxtb	r2, r2
 8010b24:	701a      	strb	r2, [r3, #0]
 8010b26:	68bb      	ldr	r3, [r7, #8]
 8010b28:	330b      	adds	r3, #11
 8010b2a:	7819      	ldrb	r1, [r3, #0]
 8010b2c:	687b      	ldr	r3, [r7, #4]
 8010b2e:	330b      	adds	r3, #11
 8010b30:	781a      	ldrb	r2, [r3, #0]
 8010b32:	68fb      	ldr	r3, [r7, #12]
 8010b34:	330b      	adds	r3, #11
 8010b36:	404a      	eors	r2, r1
 8010b38:	b2d2      	uxtb	r2, r2
 8010b3a:	701a      	strb	r2, [r3, #0]
 8010b3c:	68bb      	ldr	r3, [r7, #8]
 8010b3e:	330c      	adds	r3, #12
 8010b40:	7819      	ldrb	r1, [r3, #0]
 8010b42:	687b      	ldr	r3, [r7, #4]
 8010b44:	330c      	adds	r3, #12
 8010b46:	781a      	ldrb	r2, [r3, #0]
 8010b48:	68fb      	ldr	r3, [r7, #12]
 8010b4a:	330c      	adds	r3, #12
 8010b4c:	404a      	eors	r2, r1
 8010b4e:	b2d2      	uxtb	r2, r2
 8010b50:	701a      	strb	r2, [r3, #0]
 8010b52:	68bb      	ldr	r3, [r7, #8]
 8010b54:	330d      	adds	r3, #13
 8010b56:	7819      	ldrb	r1, [r3, #0]
 8010b58:	687b      	ldr	r3, [r7, #4]
 8010b5a:	330d      	adds	r3, #13
 8010b5c:	781a      	ldrb	r2, [r3, #0]
 8010b5e:	68fb      	ldr	r3, [r7, #12]
 8010b60:	330d      	adds	r3, #13
 8010b62:	404a      	eors	r2, r1
 8010b64:	b2d2      	uxtb	r2, r2
 8010b66:	701a      	strb	r2, [r3, #0]
 8010b68:	68bb      	ldr	r3, [r7, #8]
 8010b6a:	330e      	adds	r3, #14
 8010b6c:	7819      	ldrb	r1, [r3, #0]
 8010b6e:	687b      	ldr	r3, [r7, #4]
 8010b70:	330e      	adds	r3, #14
 8010b72:	781a      	ldrb	r2, [r3, #0]
 8010b74:	68fb      	ldr	r3, [r7, #12]
 8010b76:	330e      	adds	r3, #14
 8010b78:	404a      	eors	r2, r1
 8010b7a:	b2d2      	uxtb	r2, r2
 8010b7c:	701a      	strb	r2, [r3, #0]
 8010b7e:	68bb      	ldr	r3, [r7, #8]
 8010b80:	330f      	adds	r3, #15
 8010b82:	7819      	ldrb	r1, [r3, #0]
 8010b84:	687b      	ldr	r3, [r7, #4]
 8010b86:	330f      	adds	r3, #15
 8010b88:	781a      	ldrb	r2, [r3, #0]
 8010b8a:	68fb      	ldr	r3, [r7, #12]
 8010b8c:	330f      	adds	r3, #15
 8010b8e:	404a      	eors	r2, r1
 8010b90:	b2d2      	uxtb	r2, r2
 8010b92:	701a      	strb	r2, [r3, #0]
 8010b94:	bf00      	nop
 8010b96:	3714      	adds	r7, #20
 8010b98:	46bd      	mov	sp, r7
 8010b9a:	bc80      	pop	{r7}
 8010b9c:	4770      	bx	lr

08010b9e <add_round_key>:
 8010b9e:	b580      	push	{r7, lr}
 8010ba0:	b082      	sub	sp, #8
 8010ba2:	af00      	add	r7, sp, #0
 8010ba4:	6078      	str	r0, [r7, #4]
 8010ba6:	6039      	str	r1, [r7, #0]
 8010ba8:	6839      	ldr	r1, [r7, #0]
 8010baa:	6878      	ldr	r0, [r7, #4]
 8010bac:	f7ff fe88 	bl	80108c0 <xor_block>
 8010bb0:	bf00      	nop
 8010bb2:	3708      	adds	r7, #8
 8010bb4:	46bd      	mov	sp, r7
 8010bb6:	bd80      	pop	{r7, pc}

08010bb8 <shift_sub_rows>:
 8010bb8:	b480      	push	{r7}
 8010bba:	b085      	sub	sp, #20
 8010bbc:	af00      	add	r7, sp, #0
 8010bbe:	6078      	str	r0, [r7, #4]
 8010bc0:	687b      	ldr	r3, [r7, #4]
 8010bc2:	781b      	ldrb	r3, [r3, #0]
 8010bc4:	461a      	mov	r2, r3
 8010bc6:	4b48      	ldr	r3, [pc, #288]	; (8010ce8 <shift_sub_rows+0x130>)
 8010bc8:	5c9a      	ldrb	r2, [r3, r2]
 8010bca:	687b      	ldr	r3, [r7, #4]
 8010bcc:	701a      	strb	r2, [r3, #0]
 8010bce:	687b      	ldr	r3, [r7, #4]
 8010bd0:	3304      	adds	r3, #4
 8010bd2:	781b      	ldrb	r3, [r3, #0]
 8010bd4:	4619      	mov	r1, r3
 8010bd6:	687b      	ldr	r3, [r7, #4]
 8010bd8:	3304      	adds	r3, #4
 8010bda:	4a43      	ldr	r2, [pc, #268]	; (8010ce8 <shift_sub_rows+0x130>)
 8010bdc:	5c52      	ldrb	r2, [r2, r1]
 8010bde:	701a      	strb	r2, [r3, #0]
 8010be0:	687b      	ldr	r3, [r7, #4]
 8010be2:	3308      	adds	r3, #8
 8010be4:	781b      	ldrb	r3, [r3, #0]
 8010be6:	4619      	mov	r1, r3
 8010be8:	687b      	ldr	r3, [r7, #4]
 8010bea:	3308      	adds	r3, #8
 8010bec:	4a3e      	ldr	r2, [pc, #248]	; (8010ce8 <shift_sub_rows+0x130>)
 8010bee:	5c52      	ldrb	r2, [r2, r1]
 8010bf0:	701a      	strb	r2, [r3, #0]
 8010bf2:	687b      	ldr	r3, [r7, #4]
 8010bf4:	330c      	adds	r3, #12
 8010bf6:	781b      	ldrb	r3, [r3, #0]
 8010bf8:	4619      	mov	r1, r3
 8010bfa:	687b      	ldr	r3, [r7, #4]
 8010bfc:	330c      	adds	r3, #12
 8010bfe:	4a3a      	ldr	r2, [pc, #232]	; (8010ce8 <shift_sub_rows+0x130>)
 8010c00:	5c52      	ldrb	r2, [r2, r1]
 8010c02:	701a      	strb	r2, [r3, #0]
 8010c04:	687b      	ldr	r3, [r7, #4]
 8010c06:	785b      	ldrb	r3, [r3, #1]
 8010c08:	73fb      	strb	r3, [r7, #15]
 8010c0a:	687b      	ldr	r3, [r7, #4]
 8010c0c:	3305      	adds	r3, #5
 8010c0e:	781b      	ldrb	r3, [r3, #0]
 8010c10:	4619      	mov	r1, r3
 8010c12:	687b      	ldr	r3, [r7, #4]
 8010c14:	3301      	adds	r3, #1
 8010c16:	4a34      	ldr	r2, [pc, #208]	; (8010ce8 <shift_sub_rows+0x130>)
 8010c18:	5c52      	ldrb	r2, [r2, r1]
 8010c1a:	701a      	strb	r2, [r3, #0]
 8010c1c:	687b      	ldr	r3, [r7, #4]
 8010c1e:	3309      	adds	r3, #9
 8010c20:	781b      	ldrb	r3, [r3, #0]
 8010c22:	4619      	mov	r1, r3
 8010c24:	687b      	ldr	r3, [r7, #4]
 8010c26:	3305      	adds	r3, #5
 8010c28:	4a2f      	ldr	r2, [pc, #188]	; (8010ce8 <shift_sub_rows+0x130>)
 8010c2a:	5c52      	ldrb	r2, [r2, r1]
 8010c2c:	701a      	strb	r2, [r3, #0]
 8010c2e:	687b      	ldr	r3, [r7, #4]
 8010c30:	330d      	adds	r3, #13
 8010c32:	781b      	ldrb	r3, [r3, #0]
 8010c34:	4619      	mov	r1, r3
 8010c36:	687b      	ldr	r3, [r7, #4]
 8010c38:	3309      	adds	r3, #9
 8010c3a:	4a2b      	ldr	r2, [pc, #172]	; (8010ce8 <shift_sub_rows+0x130>)
 8010c3c:	5c52      	ldrb	r2, [r2, r1]
 8010c3e:	701a      	strb	r2, [r3, #0]
 8010c40:	7bfa      	ldrb	r2, [r7, #15]
 8010c42:	687b      	ldr	r3, [r7, #4]
 8010c44:	330d      	adds	r3, #13
 8010c46:	4928      	ldr	r1, [pc, #160]	; (8010ce8 <shift_sub_rows+0x130>)
 8010c48:	5c8a      	ldrb	r2, [r1, r2]
 8010c4a:	701a      	strb	r2, [r3, #0]
 8010c4c:	687b      	ldr	r3, [r7, #4]
 8010c4e:	789b      	ldrb	r3, [r3, #2]
 8010c50:	73fb      	strb	r3, [r7, #15]
 8010c52:	687b      	ldr	r3, [r7, #4]
 8010c54:	330a      	adds	r3, #10
 8010c56:	781b      	ldrb	r3, [r3, #0]
 8010c58:	4619      	mov	r1, r3
 8010c5a:	687b      	ldr	r3, [r7, #4]
 8010c5c:	3302      	adds	r3, #2
 8010c5e:	4a22      	ldr	r2, [pc, #136]	; (8010ce8 <shift_sub_rows+0x130>)
 8010c60:	5c52      	ldrb	r2, [r2, r1]
 8010c62:	701a      	strb	r2, [r3, #0]
 8010c64:	7bfa      	ldrb	r2, [r7, #15]
 8010c66:	687b      	ldr	r3, [r7, #4]
 8010c68:	330a      	adds	r3, #10
 8010c6a:	491f      	ldr	r1, [pc, #124]	; (8010ce8 <shift_sub_rows+0x130>)
 8010c6c:	5c8a      	ldrb	r2, [r1, r2]
 8010c6e:	701a      	strb	r2, [r3, #0]
 8010c70:	687b      	ldr	r3, [r7, #4]
 8010c72:	799b      	ldrb	r3, [r3, #6]
 8010c74:	73fb      	strb	r3, [r7, #15]
 8010c76:	687b      	ldr	r3, [r7, #4]
 8010c78:	330e      	adds	r3, #14
 8010c7a:	781b      	ldrb	r3, [r3, #0]
 8010c7c:	4619      	mov	r1, r3
 8010c7e:	687b      	ldr	r3, [r7, #4]
 8010c80:	3306      	adds	r3, #6
 8010c82:	4a19      	ldr	r2, [pc, #100]	; (8010ce8 <shift_sub_rows+0x130>)
 8010c84:	5c52      	ldrb	r2, [r2, r1]
 8010c86:	701a      	strb	r2, [r3, #0]
 8010c88:	7bfa      	ldrb	r2, [r7, #15]
 8010c8a:	687b      	ldr	r3, [r7, #4]
 8010c8c:	330e      	adds	r3, #14
 8010c8e:	4916      	ldr	r1, [pc, #88]	; (8010ce8 <shift_sub_rows+0x130>)
 8010c90:	5c8a      	ldrb	r2, [r1, r2]
 8010c92:	701a      	strb	r2, [r3, #0]
 8010c94:	687b      	ldr	r3, [r7, #4]
 8010c96:	7bdb      	ldrb	r3, [r3, #15]
 8010c98:	73fb      	strb	r3, [r7, #15]
 8010c9a:	687b      	ldr	r3, [r7, #4]
 8010c9c:	330b      	adds	r3, #11
 8010c9e:	781b      	ldrb	r3, [r3, #0]
 8010ca0:	4619      	mov	r1, r3
 8010ca2:	687b      	ldr	r3, [r7, #4]
 8010ca4:	330f      	adds	r3, #15
 8010ca6:	4a10      	ldr	r2, [pc, #64]	; (8010ce8 <shift_sub_rows+0x130>)
 8010ca8:	5c52      	ldrb	r2, [r2, r1]
 8010caa:	701a      	strb	r2, [r3, #0]
 8010cac:	687b      	ldr	r3, [r7, #4]
 8010cae:	3307      	adds	r3, #7
 8010cb0:	781b      	ldrb	r3, [r3, #0]
 8010cb2:	4619      	mov	r1, r3
 8010cb4:	687b      	ldr	r3, [r7, #4]
 8010cb6:	330b      	adds	r3, #11
 8010cb8:	4a0b      	ldr	r2, [pc, #44]	; (8010ce8 <shift_sub_rows+0x130>)
 8010cba:	5c52      	ldrb	r2, [r2, r1]
 8010cbc:	701a      	strb	r2, [r3, #0]
 8010cbe:	687b      	ldr	r3, [r7, #4]
 8010cc0:	3303      	adds	r3, #3
 8010cc2:	781b      	ldrb	r3, [r3, #0]
 8010cc4:	4619      	mov	r1, r3
 8010cc6:	687b      	ldr	r3, [r7, #4]
 8010cc8:	3307      	adds	r3, #7
 8010cca:	4a07      	ldr	r2, [pc, #28]	; (8010ce8 <shift_sub_rows+0x130>)
 8010ccc:	5c52      	ldrb	r2, [r2, r1]
 8010cce:	701a      	strb	r2, [r3, #0]
 8010cd0:	7bfa      	ldrb	r2, [r7, #15]
 8010cd2:	687b      	ldr	r3, [r7, #4]
 8010cd4:	3303      	adds	r3, #3
 8010cd6:	4904      	ldr	r1, [pc, #16]	; (8010ce8 <shift_sub_rows+0x130>)
 8010cd8:	5c8a      	ldrb	r2, [r1, r2]
 8010cda:	701a      	strb	r2, [r3, #0]
 8010cdc:	bf00      	nop
 8010cde:	3714      	adds	r7, #20
 8010ce0:	46bd      	mov	sp, r7
 8010ce2:	bc80      	pop	{r7}
 8010ce4:	4770      	bx	lr
 8010ce6:	bf00      	nop
 8010ce8:	080263c4 	.word	0x080263c4

08010cec <mix_sub_columns>:
 8010cec:	b580      	push	{r7, lr}
 8010cee:	b086      	sub	sp, #24
 8010cf0:	af00      	add	r7, sp, #0
 8010cf2:	6078      	str	r0, [r7, #4]
 8010cf4:	f107 0308 	add.w	r3, r7, #8
 8010cf8:	6879      	ldr	r1, [r7, #4]
 8010cfa:	4618      	mov	r0, r3
 8010cfc:	f7ff fd6c 	bl	80107d8 <copy_block>
 8010d00:	7a3b      	ldrb	r3, [r7, #8]
 8010d02:	461a      	mov	r2, r3
 8010d04:	4b9a      	ldr	r3, [pc, #616]	; (8010f70 <mix_sub_columns+0x284>)
 8010d06:	5c9a      	ldrb	r2, [r3, r2]
 8010d08:	7b7b      	ldrb	r3, [r7, #13]
 8010d0a:	4619      	mov	r1, r3
 8010d0c:	4b99      	ldr	r3, [pc, #612]	; (8010f74 <mix_sub_columns+0x288>)
 8010d0e:	5c5b      	ldrb	r3, [r3, r1]
 8010d10:	4053      	eors	r3, r2
 8010d12:	b2da      	uxtb	r2, r3
 8010d14:	7cbb      	ldrb	r3, [r7, #18]
 8010d16:	4619      	mov	r1, r3
 8010d18:	4b97      	ldr	r3, [pc, #604]	; (8010f78 <mix_sub_columns+0x28c>)
 8010d1a:	5c5b      	ldrb	r3, [r3, r1]
 8010d1c:	4053      	eors	r3, r2
 8010d1e:	b2da      	uxtb	r2, r3
 8010d20:	7dfb      	ldrb	r3, [r7, #23]
 8010d22:	4619      	mov	r1, r3
 8010d24:	4b94      	ldr	r3, [pc, #592]	; (8010f78 <mix_sub_columns+0x28c>)
 8010d26:	5c5b      	ldrb	r3, [r3, r1]
 8010d28:	4053      	eors	r3, r2
 8010d2a:	b2da      	uxtb	r2, r3
 8010d2c:	687b      	ldr	r3, [r7, #4]
 8010d2e:	701a      	strb	r2, [r3, #0]
 8010d30:	7a3b      	ldrb	r3, [r7, #8]
 8010d32:	461a      	mov	r2, r3
 8010d34:	4b90      	ldr	r3, [pc, #576]	; (8010f78 <mix_sub_columns+0x28c>)
 8010d36:	5c9a      	ldrb	r2, [r3, r2]
 8010d38:	7b7b      	ldrb	r3, [r7, #13]
 8010d3a:	4619      	mov	r1, r3
 8010d3c:	4b8c      	ldr	r3, [pc, #560]	; (8010f70 <mix_sub_columns+0x284>)
 8010d3e:	5c5b      	ldrb	r3, [r3, r1]
 8010d40:	4053      	eors	r3, r2
 8010d42:	b2da      	uxtb	r2, r3
 8010d44:	7cbb      	ldrb	r3, [r7, #18]
 8010d46:	4619      	mov	r1, r3
 8010d48:	4b8a      	ldr	r3, [pc, #552]	; (8010f74 <mix_sub_columns+0x288>)
 8010d4a:	5c5b      	ldrb	r3, [r3, r1]
 8010d4c:	4053      	eors	r3, r2
 8010d4e:	b2d9      	uxtb	r1, r3
 8010d50:	7dfb      	ldrb	r3, [r7, #23]
 8010d52:	461a      	mov	r2, r3
 8010d54:	4b88      	ldr	r3, [pc, #544]	; (8010f78 <mix_sub_columns+0x28c>)
 8010d56:	5c9a      	ldrb	r2, [r3, r2]
 8010d58:	687b      	ldr	r3, [r7, #4]
 8010d5a:	3301      	adds	r3, #1
 8010d5c:	404a      	eors	r2, r1
 8010d5e:	b2d2      	uxtb	r2, r2
 8010d60:	701a      	strb	r2, [r3, #0]
 8010d62:	7a3b      	ldrb	r3, [r7, #8]
 8010d64:	461a      	mov	r2, r3
 8010d66:	4b84      	ldr	r3, [pc, #528]	; (8010f78 <mix_sub_columns+0x28c>)
 8010d68:	5c9a      	ldrb	r2, [r3, r2]
 8010d6a:	7b7b      	ldrb	r3, [r7, #13]
 8010d6c:	4619      	mov	r1, r3
 8010d6e:	4b82      	ldr	r3, [pc, #520]	; (8010f78 <mix_sub_columns+0x28c>)
 8010d70:	5c5b      	ldrb	r3, [r3, r1]
 8010d72:	4053      	eors	r3, r2
 8010d74:	b2da      	uxtb	r2, r3
 8010d76:	7cbb      	ldrb	r3, [r7, #18]
 8010d78:	4619      	mov	r1, r3
 8010d7a:	4b7d      	ldr	r3, [pc, #500]	; (8010f70 <mix_sub_columns+0x284>)
 8010d7c:	5c5b      	ldrb	r3, [r3, r1]
 8010d7e:	4053      	eors	r3, r2
 8010d80:	b2d9      	uxtb	r1, r3
 8010d82:	7dfb      	ldrb	r3, [r7, #23]
 8010d84:	461a      	mov	r2, r3
 8010d86:	4b7b      	ldr	r3, [pc, #492]	; (8010f74 <mix_sub_columns+0x288>)
 8010d88:	5c9a      	ldrb	r2, [r3, r2]
 8010d8a:	687b      	ldr	r3, [r7, #4]
 8010d8c:	3302      	adds	r3, #2
 8010d8e:	404a      	eors	r2, r1
 8010d90:	b2d2      	uxtb	r2, r2
 8010d92:	701a      	strb	r2, [r3, #0]
 8010d94:	7a3b      	ldrb	r3, [r7, #8]
 8010d96:	461a      	mov	r2, r3
 8010d98:	4b76      	ldr	r3, [pc, #472]	; (8010f74 <mix_sub_columns+0x288>)
 8010d9a:	5c9a      	ldrb	r2, [r3, r2]
 8010d9c:	7b7b      	ldrb	r3, [r7, #13]
 8010d9e:	4619      	mov	r1, r3
 8010da0:	4b75      	ldr	r3, [pc, #468]	; (8010f78 <mix_sub_columns+0x28c>)
 8010da2:	5c5b      	ldrb	r3, [r3, r1]
 8010da4:	4053      	eors	r3, r2
 8010da6:	b2da      	uxtb	r2, r3
 8010da8:	7cbb      	ldrb	r3, [r7, #18]
 8010daa:	4619      	mov	r1, r3
 8010dac:	4b72      	ldr	r3, [pc, #456]	; (8010f78 <mix_sub_columns+0x28c>)
 8010dae:	5c5b      	ldrb	r3, [r3, r1]
 8010db0:	4053      	eors	r3, r2
 8010db2:	b2d9      	uxtb	r1, r3
 8010db4:	7dfb      	ldrb	r3, [r7, #23]
 8010db6:	461a      	mov	r2, r3
 8010db8:	4b6d      	ldr	r3, [pc, #436]	; (8010f70 <mix_sub_columns+0x284>)
 8010dba:	5c9a      	ldrb	r2, [r3, r2]
 8010dbc:	687b      	ldr	r3, [r7, #4]
 8010dbe:	3303      	adds	r3, #3
 8010dc0:	404a      	eors	r2, r1
 8010dc2:	b2d2      	uxtb	r2, r2
 8010dc4:	701a      	strb	r2, [r3, #0]
 8010dc6:	7b3b      	ldrb	r3, [r7, #12]
 8010dc8:	461a      	mov	r2, r3
 8010dca:	4b69      	ldr	r3, [pc, #420]	; (8010f70 <mix_sub_columns+0x284>)
 8010dcc:	5c9a      	ldrb	r2, [r3, r2]
 8010dce:	7c7b      	ldrb	r3, [r7, #17]
 8010dd0:	4619      	mov	r1, r3
 8010dd2:	4b68      	ldr	r3, [pc, #416]	; (8010f74 <mix_sub_columns+0x288>)
 8010dd4:	5c5b      	ldrb	r3, [r3, r1]
 8010dd6:	4053      	eors	r3, r2
 8010dd8:	b2da      	uxtb	r2, r3
 8010dda:	7dbb      	ldrb	r3, [r7, #22]
 8010ddc:	4619      	mov	r1, r3
 8010dde:	4b66      	ldr	r3, [pc, #408]	; (8010f78 <mix_sub_columns+0x28c>)
 8010de0:	5c5b      	ldrb	r3, [r3, r1]
 8010de2:	4053      	eors	r3, r2
 8010de4:	b2d9      	uxtb	r1, r3
 8010de6:	7afb      	ldrb	r3, [r7, #11]
 8010de8:	461a      	mov	r2, r3
 8010dea:	4b63      	ldr	r3, [pc, #396]	; (8010f78 <mix_sub_columns+0x28c>)
 8010dec:	5c9a      	ldrb	r2, [r3, r2]
 8010dee:	687b      	ldr	r3, [r7, #4]
 8010df0:	3304      	adds	r3, #4
 8010df2:	404a      	eors	r2, r1
 8010df4:	b2d2      	uxtb	r2, r2
 8010df6:	701a      	strb	r2, [r3, #0]
 8010df8:	7b3b      	ldrb	r3, [r7, #12]
 8010dfa:	461a      	mov	r2, r3
 8010dfc:	4b5e      	ldr	r3, [pc, #376]	; (8010f78 <mix_sub_columns+0x28c>)
 8010dfe:	5c9a      	ldrb	r2, [r3, r2]
 8010e00:	7c7b      	ldrb	r3, [r7, #17]
 8010e02:	4619      	mov	r1, r3
 8010e04:	4b5a      	ldr	r3, [pc, #360]	; (8010f70 <mix_sub_columns+0x284>)
 8010e06:	5c5b      	ldrb	r3, [r3, r1]
 8010e08:	4053      	eors	r3, r2
 8010e0a:	b2da      	uxtb	r2, r3
 8010e0c:	7dbb      	ldrb	r3, [r7, #22]
 8010e0e:	4619      	mov	r1, r3
 8010e10:	4b58      	ldr	r3, [pc, #352]	; (8010f74 <mix_sub_columns+0x288>)
 8010e12:	5c5b      	ldrb	r3, [r3, r1]
 8010e14:	4053      	eors	r3, r2
 8010e16:	b2d9      	uxtb	r1, r3
 8010e18:	7afb      	ldrb	r3, [r7, #11]
 8010e1a:	461a      	mov	r2, r3
 8010e1c:	4b56      	ldr	r3, [pc, #344]	; (8010f78 <mix_sub_columns+0x28c>)
 8010e1e:	5c9a      	ldrb	r2, [r3, r2]
 8010e20:	687b      	ldr	r3, [r7, #4]
 8010e22:	3305      	adds	r3, #5
 8010e24:	404a      	eors	r2, r1
 8010e26:	b2d2      	uxtb	r2, r2
 8010e28:	701a      	strb	r2, [r3, #0]
 8010e2a:	7b3b      	ldrb	r3, [r7, #12]
 8010e2c:	461a      	mov	r2, r3
 8010e2e:	4b52      	ldr	r3, [pc, #328]	; (8010f78 <mix_sub_columns+0x28c>)
 8010e30:	5c9a      	ldrb	r2, [r3, r2]
 8010e32:	7c7b      	ldrb	r3, [r7, #17]
 8010e34:	4619      	mov	r1, r3
 8010e36:	4b50      	ldr	r3, [pc, #320]	; (8010f78 <mix_sub_columns+0x28c>)
 8010e38:	5c5b      	ldrb	r3, [r3, r1]
 8010e3a:	4053      	eors	r3, r2
 8010e3c:	b2da      	uxtb	r2, r3
 8010e3e:	7dbb      	ldrb	r3, [r7, #22]
 8010e40:	4619      	mov	r1, r3
 8010e42:	4b4b      	ldr	r3, [pc, #300]	; (8010f70 <mix_sub_columns+0x284>)
 8010e44:	5c5b      	ldrb	r3, [r3, r1]
 8010e46:	4053      	eors	r3, r2
 8010e48:	b2d9      	uxtb	r1, r3
 8010e4a:	7afb      	ldrb	r3, [r7, #11]
 8010e4c:	461a      	mov	r2, r3
 8010e4e:	4b49      	ldr	r3, [pc, #292]	; (8010f74 <mix_sub_columns+0x288>)
 8010e50:	5c9a      	ldrb	r2, [r3, r2]
 8010e52:	687b      	ldr	r3, [r7, #4]
 8010e54:	3306      	adds	r3, #6
 8010e56:	404a      	eors	r2, r1
 8010e58:	b2d2      	uxtb	r2, r2
 8010e5a:	701a      	strb	r2, [r3, #0]
 8010e5c:	7b3b      	ldrb	r3, [r7, #12]
 8010e5e:	461a      	mov	r2, r3
 8010e60:	4b44      	ldr	r3, [pc, #272]	; (8010f74 <mix_sub_columns+0x288>)
 8010e62:	5c9a      	ldrb	r2, [r3, r2]
 8010e64:	7c7b      	ldrb	r3, [r7, #17]
 8010e66:	4619      	mov	r1, r3
 8010e68:	4b43      	ldr	r3, [pc, #268]	; (8010f78 <mix_sub_columns+0x28c>)
 8010e6a:	5c5b      	ldrb	r3, [r3, r1]
 8010e6c:	4053      	eors	r3, r2
 8010e6e:	b2da      	uxtb	r2, r3
 8010e70:	7dbb      	ldrb	r3, [r7, #22]
 8010e72:	4619      	mov	r1, r3
 8010e74:	4b40      	ldr	r3, [pc, #256]	; (8010f78 <mix_sub_columns+0x28c>)
 8010e76:	5c5b      	ldrb	r3, [r3, r1]
 8010e78:	4053      	eors	r3, r2
 8010e7a:	b2d9      	uxtb	r1, r3
 8010e7c:	7afb      	ldrb	r3, [r7, #11]
 8010e7e:	461a      	mov	r2, r3
 8010e80:	4b3b      	ldr	r3, [pc, #236]	; (8010f70 <mix_sub_columns+0x284>)
 8010e82:	5c9a      	ldrb	r2, [r3, r2]
 8010e84:	687b      	ldr	r3, [r7, #4]
 8010e86:	3307      	adds	r3, #7
 8010e88:	404a      	eors	r2, r1
 8010e8a:	b2d2      	uxtb	r2, r2
 8010e8c:	701a      	strb	r2, [r3, #0]
 8010e8e:	7c3b      	ldrb	r3, [r7, #16]
 8010e90:	461a      	mov	r2, r3
 8010e92:	4b37      	ldr	r3, [pc, #220]	; (8010f70 <mix_sub_columns+0x284>)
 8010e94:	5c9a      	ldrb	r2, [r3, r2]
 8010e96:	7d7b      	ldrb	r3, [r7, #21]
 8010e98:	4619      	mov	r1, r3
 8010e9a:	4b36      	ldr	r3, [pc, #216]	; (8010f74 <mix_sub_columns+0x288>)
 8010e9c:	5c5b      	ldrb	r3, [r3, r1]
 8010e9e:	4053      	eors	r3, r2
 8010ea0:	b2da      	uxtb	r2, r3
 8010ea2:	7abb      	ldrb	r3, [r7, #10]
 8010ea4:	4619      	mov	r1, r3
 8010ea6:	4b34      	ldr	r3, [pc, #208]	; (8010f78 <mix_sub_columns+0x28c>)
 8010ea8:	5c5b      	ldrb	r3, [r3, r1]
 8010eaa:	4053      	eors	r3, r2
 8010eac:	b2d9      	uxtb	r1, r3
 8010eae:	7bfb      	ldrb	r3, [r7, #15]
 8010eb0:	461a      	mov	r2, r3
 8010eb2:	4b31      	ldr	r3, [pc, #196]	; (8010f78 <mix_sub_columns+0x28c>)
 8010eb4:	5c9a      	ldrb	r2, [r3, r2]
 8010eb6:	687b      	ldr	r3, [r7, #4]
 8010eb8:	3308      	adds	r3, #8
 8010eba:	404a      	eors	r2, r1
 8010ebc:	b2d2      	uxtb	r2, r2
 8010ebe:	701a      	strb	r2, [r3, #0]
 8010ec0:	7c3b      	ldrb	r3, [r7, #16]
 8010ec2:	461a      	mov	r2, r3
 8010ec4:	4b2c      	ldr	r3, [pc, #176]	; (8010f78 <mix_sub_columns+0x28c>)
 8010ec6:	5c9a      	ldrb	r2, [r3, r2]
 8010ec8:	7d7b      	ldrb	r3, [r7, #21]
 8010eca:	4619      	mov	r1, r3
 8010ecc:	4b28      	ldr	r3, [pc, #160]	; (8010f70 <mix_sub_columns+0x284>)
 8010ece:	5c5b      	ldrb	r3, [r3, r1]
 8010ed0:	4053      	eors	r3, r2
 8010ed2:	b2da      	uxtb	r2, r3
 8010ed4:	7abb      	ldrb	r3, [r7, #10]
 8010ed6:	4619      	mov	r1, r3
 8010ed8:	4b26      	ldr	r3, [pc, #152]	; (8010f74 <mix_sub_columns+0x288>)
 8010eda:	5c5b      	ldrb	r3, [r3, r1]
 8010edc:	4053      	eors	r3, r2
 8010ede:	b2d9      	uxtb	r1, r3
 8010ee0:	7bfb      	ldrb	r3, [r7, #15]
 8010ee2:	461a      	mov	r2, r3
 8010ee4:	4b24      	ldr	r3, [pc, #144]	; (8010f78 <mix_sub_columns+0x28c>)
 8010ee6:	5c9a      	ldrb	r2, [r3, r2]
 8010ee8:	687b      	ldr	r3, [r7, #4]
 8010eea:	3309      	adds	r3, #9
 8010eec:	404a      	eors	r2, r1
 8010eee:	b2d2      	uxtb	r2, r2
 8010ef0:	701a      	strb	r2, [r3, #0]
 8010ef2:	7c3b      	ldrb	r3, [r7, #16]
 8010ef4:	461a      	mov	r2, r3
 8010ef6:	4b20      	ldr	r3, [pc, #128]	; (8010f78 <mix_sub_columns+0x28c>)
 8010ef8:	5c9a      	ldrb	r2, [r3, r2]
 8010efa:	7d7b      	ldrb	r3, [r7, #21]
 8010efc:	4619      	mov	r1, r3
 8010efe:	4b1e      	ldr	r3, [pc, #120]	; (8010f78 <mix_sub_columns+0x28c>)
 8010f00:	5c5b      	ldrb	r3, [r3, r1]
 8010f02:	4053      	eors	r3, r2
 8010f04:	b2da      	uxtb	r2, r3
 8010f06:	7abb      	ldrb	r3, [r7, #10]
 8010f08:	4619      	mov	r1, r3
 8010f0a:	4b19      	ldr	r3, [pc, #100]	; (8010f70 <mix_sub_columns+0x284>)
 8010f0c:	5c5b      	ldrb	r3, [r3, r1]
 8010f0e:	4053      	eors	r3, r2
 8010f10:	b2d9      	uxtb	r1, r3
 8010f12:	7bfb      	ldrb	r3, [r7, #15]
 8010f14:	461a      	mov	r2, r3
 8010f16:	4b17      	ldr	r3, [pc, #92]	; (8010f74 <mix_sub_columns+0x288>)
 8010f18:	5c9a      	ldrb	r2, [r3, r2]
 8010f1a:	687b      	ldr	r3, [r7, #4]
 8010f1c:	330a      	adds	r3, #10
 8010f1e:	404a      	eors	r2, r1
 8010f20:	b2d2      	uxtb	r2, r2
 8010f22:	701a      	strb	r2, [r3, #0]
 8010f24:	7c3b      	ldrb	r3, [r7, #16]
 8010f26:	461a      	mov	r2, r3
 8010f28:	4b12      	ldr	r3, [pc, #72]	; (8010f74 <mix_sub_columns+0x288>)
 8010f2a:	5c9a      	ldrb	r2, [r3, r2]
 8010f2c:	7d7b      	ldrb	r3, [r7, #21]
 8010f2e:	4619      	mov	r1, r3
 8010f30:	4b11      	ldr	r3, [pc, #68]	; (8010f78 <mix_sub_columns+0x28c>)
 8010f32:	5c5b      	ldrb	r3, [r3, r1]
 8010f34:	4053      	eors	r3, r2
 8010f36:	b2da      	uxtb	r2, r3
 8010f38:	7abb      	ldrb	r3, [r7, #10]
 8010f3a:	4619      	mov	r1, r3
 8010f3c:	4b0e      	ldr	r3, [pc, #56]	; (8010f78 <mix_sub_columns+0x28c>)
 8010f3e:	5c5b      	ldrb	r3, [r3, r1]
 8010f40:	4053      	eors	r3, r2
 8010f42:	b2d9      	uxtb	r1, r3
 8010f44:	7bfb      	ldrb	r3, [r7, #15]
 8010f46:	461a      	mov	r2, r3
 8010f48:	4b09      	ldr	r3, [pc, #36]	; (8010f70 <mix_sub_columns+0x284>)
 8010f4a:	5c9a      	ldrb	r2, [r3, r2]
 8010f4c:	687b      	ldr	r3, [r7, #4]
 8010f4e:	330b      	adds	r3, #11
 8010f50:	404a      	eors	r2, r1
 8010f52:	b2d2      	uxtb	r2, r2
 8010f54:	701a      	strb	r2, [r3, #0]
 8010f56:	7d3b      	ldrb	r3, [r7, #20]
 8010f58:	461a      	mov	r2, r3
 8010f5a:	4b05      	ldr	r3, [pc, #20]	; (8010f70 <mix_sub_columns+0x284>)
 8010f5c:	5c9a      	ldrb	r2, [r3, r2]
 8010f5e:	7a7b      	ldrb	r3, [r7, #9]
 8010f60:	4619      	mov	r1, r3
 8010f62:	4b04      	ldr	r3, [pc, #16]	; (8010f74 <mix_sub_columns+0x288>)
 8010f64:	5c5b      	ldrb	r3, [r3, r1]
 8010f66:	4053      	eors	r3, r2
 8010f68:	b2da      	uxtb	r2, r3
 8010f6a:	7bbb      	ldrb	r3, [r7, #14]
 8010f6c:	4619      	mov	r1, r3
 8010f6e:	e005      	b.n	8010f7c <mix_sub_columns+0x290>
 8010f70:	080264c4 	.word	0x080264c4
 8010f74:	080265c4 	.word	0x080265c4
 8010f78:	080263c4 	.word	0x080263c4
 8010f7c:	4b2d      	ldr	r3, [pc, #180]	; (8011034 <mix_sub_columns+0x348>)
 8010f7e:	5c5b      	ldrb	r3, [r3, r1]
 8010f80:	4053      	eors	r3, r2
 8010f82:	b2d9      	uxtb	r1, r3
 8010f84:	7cfb      	ldrb	r3, [r7, #19]
 8010f86:	461a      	mov	r2, r3
 8010f88:	4b2a      	ldr	r3, [pc, #168]	; (8011034 <mix_sub_columns+0x348>)
 8010f8a:	5c9a      	ldrb	r2, [r3, r2]
 8010f8c:	687b      	ldr	r3, [r7, #4]
 8010f8e:	330c      	adds	r3, #12
 8010f90:	404a      	eors	r2, r1
 8010f92:	b2d2      	uxtb	r2, r2
 8010f94:	701a      	strb	r2, [r3, #0]
 8010f96:	7d3b      	ldrb	r3, [r7, #20]
 8010f98:	461a      	mov	r2, r3
 8010f9a:	4b26      	ldr	r3, [pc, #152]	; (8011034 <mix_sub_columns+0x348>)
 8010f9c:	5c9a      	ldrb	r2, [r3, r2]
 8010f9e:	7a7b      	ldrb	r3, [r7, #9]
 8010fa0:	4619      	mov	r1, r3
 8010fa2:	4b25      	ldr	r3, [pc, #148]	; (8011038 <mix_sub_columns+0x34c>)
 8010fa4:	5c5b      	ldrb	r3, [r3, r1]
 8010fa6:	4053      	eors	r3, r2
 8010fa8:	b2da      	uxtb	r2, r3
 8010faa:	7bbb      	ldrb	r3, [r7, #14]
 8010fac:	4619      	mov	r1, r3
 8010fae:	4b23      	ldr	r3, [pc, #140]	; (801103c <mix_sub_columns+0x350>)
 8010fb0:	5c5b      	ldrb	r3, [r3, r1]
 8010fb2:	4053      	eors	r3, r2
 8010fb4:	b2d9      	uxtb	r1, r3
 8010fb6:	7cfb      	ldrb	r3, [r7, #19]
 8010fb8:	461a      	mov	r2, r3
 8010fba:	4b1e      	ldr	r3, [pc, #120]	; (8011034 <mix_sub_columns+0x348>)
 8010fbc:	5c9a      	ldrb	r2, [r3, r2]
 8010fbe:	687b      	ldr	r3, [r7, #4]
 8010fc0:	330d      	adds	r3, #13
 8010fc2:	404a      	eors	r2, r1
 8010fc4:	b2d2      	uxtb	r2, r2
 8010fc6:	701a      	strb	r2, [r3, #0]
 8010fc8:	7d3b      	ldrb	r3, [r7, #20]
 8010fca:	461a      	mov	r2, r3
 8010fcc:	4b19      	ldr	r3, [pc, #100]	; (8011034 <mix_sub_columns+0x348>)
 8010fce:	5c9a      	ldrb	r2, [r3, r2]
 8010fd0:	7a7b      	ldrb	r3, [r7, #9]
 8010fd2:	4619      	mov	r1, r3
 8010fd4:	4b17      	ldr	r3, [pc, #92]	; (8011034 <mix_sub_columns+0x348>)
 8010fd6:	5c5b      	ldrb	r3, [r3, r1]
 8010fd8:	4053      	eors	r3, r2
 8010fda:	b2da      	uxtb	r2, r3
 8010fdc:	7bbb      	ldrb	r3, [r7, #14]
 8010fde:	4619      	mov	r1, r3
 8010fe0:	4b15      	ldr	r3, [pc, #84]	; (8011038 <mix_sub_columns+0x34c>)
 8010fe2:	5c5b      	ldrb	r3, [r3, r1]
 8010fe4:	4053      	eors	r3, r2
 8010fe6:	b2d9      	uxtb	r1, r3
 8010fe8:	7cfb      	ldrb	r3, [r7, #19]
 8010fea:	461a      	mov	r2, r3
 8010fec:	4b13      	ldr	r3, [pc, #76]	; (801103c <mix_sub_columns+0x350>)
 8010fee:	5c9a      	ldrb	r2, [r3, r2]
 8010ff0:	687b      	ldr	r3, [r7, #4]
 8010ff2:	330e      	adds	r3, #14
 8010ff4:	404a      	eors	r2, r1
 8010ff6:	b2d2      	uxtb	r2, r2
 8010ff8:	701a      	strb	r2, [r3, #0]
 8010ffa:	7d3b      	ldrb	r3, [r7, #20]
 8010ffc:	461a      	mov	r2, r3
 8010ffe:	4b0f      	ldr	r3, [pc, #60]	; (801103c <mix_sub_columns+0x350>)
 8011000:	5c9a      	ldrb	r2, [r3, r2]
 8011002:	7a7b      	ldrb	r3, [r7, #9]
 8011004:	4619      	mov	r1, r3
 8011006:	4b0b      	ldr	r3, [pc, #44]	; (8011034 <mix_sub_columns+0x348>)
 8011008:	5c5b      	ldrb	r3, [r3, r1]
 801100a:	4053      	eors	r3, r2
 801100c:	b2da      	uxtb	r2, r3
 801100e:	7bbb      	ldrb	r3, [r7, #14]
 8011010:	4619      	mov	r1, r3
 8011012:	4b08      	ldr	r3, [pc, #32]	; (8011034 <mix_sub_columns+0x348>)
 8011014:	5c5b      	ldrb	r3, [r3, r1]
 8011016:	4053      	eors	r3, r2
 8011018:	b2d9      	uxtb	r1, r3
 801101a:	7cfb      	ldrb	r3, [r7, #19]
 801101c:	461a      	mov	r2, r3
 801101e:	4b06      	ldr	r3, [pc, #24]	; (8011038 <mix_sub_columns+0x34c>)
 8011020:	5c9a      	ldrb	r2, [r3, r2]
 8011022:	687b      	ldr	r3, [r7, #4]
 8011024:	330f      	adds	r3, #15
 8011026:	404a      	eors	r2, r1
 8011028:	b2d2      	uxtb	r2, r2
 801102a:	701a      	strb	r2, [r3, #0]
 801102c:	bf00      	nop
 801102e:	3718      	adds	r7, #24
 8011030:	46bd      	mov	sp, r7
 8011032:	bd80      	pop	{r7, pc}
 8011034:	080263c4 	.word	0x080263c4
 8011038:	080264c4 	.word	0x080264c4
 801103c:	080265c4 	.word	0x080265c4

08011040 <lorawan_aes_set_key>:
 8011040:	b580      	push	{r7, lr}
 8011042:	b086      	sub	sp, #24
 8011044:	af00      	add	r7, sp, #0
 8011046:	60f8      	str	r0, [r7, #12]
 8011048:	460b      	mov	r3, r1
 801104a:	607a      	str	r2, [r7, #4]
 801104c:	72fb      	strb	r3, [r7, #11]
 801104e:	7afb      	ldrb	r3, [r7, #11]
 8011050:	3b10      	subs	r3, #16
 8011052:	2b10      	cmp	r3, #16
 8011054:	bf8c      	ite	hi
 8011056:	2201      	movhi	r2, #1
 8011058:	2200      	movls	r2, #0
 801105a:	b2d2      	uxtb	r2, r2
 801105c:	2a00      	cmp	r2, #0
 801105e:	d10d      	bne.n	801107c <lorawan_aes_set_key+0x3c>
 8011060:	2201      	movs	r2, #1
 8011062:	fa02 f303 	lsl.w	r3, r2, r3
 8011066:	f003 3301 	and.w	r3, r3, #16843009	; 0x1010101
 801106a:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 801106e:	2b00      	cmp	r3, #0
 8011070:	bf14      	ite	ne
 8011072:	2301      	movne	r3, #1
 8011074:	2300      	moveq	r3, #0
 8011076:	b2db      	uxtb	r3, r3
 8011078:	2b00      	cmp	r3, #0
 801107a:	d105      	bne.n	8011088 <lorawan_aes_set_key+0x48>
 801107c:	687b      	ldr	r3, [r7, #4]
 801107e:	2200      	movs	r2, #0
 8011080:	f883 20f0 	strb.w	r2, [r3, #240]	; 0xf0
 8011084:	23ff      	movs	r3, #255	; 0xff
 8011086:	e0b2      	b.n	80111ee <lorawan_aes_set_key+0x1ae>
 8011088:	bf00      	nop
 801108a:	687b      	ldr	r3, [r7, #4]
 801108c:	7afa      	ldrb	r2, [r7, #11]
 801108e:	68f9      	ldr	r1, [r7, #12]
 8011090:	4618      	mov	r0, r3
 8011092:	f7ff fbfa 	bl	801088a <copy_block_nn>
 8011096:	7afb      	ldrb	r3, [r7, #11]
 8011098:	331c      	adds	r3, #28
 801109a:	b2db      	uxtb	r3, r3
 801109c:	009b      	lsls	r3, r3, #2
 801109e:	747b      	strb	r3, [r7, #17]
 80110a0:	7c7b      	ldrb	r3, [r7, #17]
 80110a2:	091b      	lsrs	r3, r3, #4
 80110a4:	b2db      	uxtb	r3, r3
 80110a6:	3b01      	subs	r3, #1
 80110a8:	b2da      	uxtb	r2, r3
 80110aa:	687b      	ldr	r3, [r7, #4]
 80110ac:	f883 20f0 	strb.w	r2, [r3, #240]	; 0xf0
 80110b0:	7afb      	ldrb	r3, [r7, #11]
 80110b2:	75fb      	strb	r3, [r7, #23]
 80110b4:	2301      	movs	r3, #1
 80110b6:	75bb      	strb	r3, [r7, #22]
 80110b8:	e093      	b.n	80111e2 <lorawan_aes_set_key+0x1a2>
 80110ba:	7dfb      	ldrb	r3, [r7, #23]
 80110bc:	3b04      	subs	r3, #4
 80110be:	687a      	ldr	r2, [r7, #4]
 80110c0:	5cd3      	ldrb	r3, [r2, r3]
 80110c2:	757b      	strb	r3, [r7, #21]
 80110c4:	7dfb      	ldrb	r3, [r7, #23]
 80110c6:	3b03      	subs	r3, #3
 80110c8:	687a      	ldr	r2, [r7, #4]
 80110ca:	5cd3      	ldrb	r3, [r2, r3]
 80110cc:	753b      	strb	r3, [r7, #20]
 80110ce:	7dfb      	ldrb	r3, [r7, #23]
 80110d0:	3b02      	subs	r3, #2
 80110d2:	687a      	ldr	r2, [r7, #4]
 80110d4:	5cd3      	ldrb	r3, [r2, r3]
 80110d6:	74fb      	strb	r3, [r7, #19]
 80110d8:	7dfb      	ldrb	r3, [r7, #23]
 80110da:	3b01      	subs	r3, #1
 80110dc:	687a      	ldr	r2, [r7, #4]
 80110de:	5cd3      	ldrb	r3, [r2, r3]
 80110e0:	74bb      	strb	r3, [r7, #18]
 80110e2:	7dfb      	ldrb	r3, [r7, #23]
 80110e4:	7afa      	ldrb	r2, [r7, #11]
 80110e6:	fbb3 f1f2 	udiv	r1, r3, r2
 80110ea:	fb02 f201 	mul.w	r2, r2, r1
 80110ee:	1a9b      	subs	r3, r3, r2
 80110f0:	b2db      	uxtb	r3, r3
 80110f2:	2b00      	cmp	r3, #0
 80110f4:	d127      	bne.n	8011146 <lorawan_aes_set_key+0x106>
 80110f6:	7d7b      	ldrb	r3, [r7, #21]
 80110f8:	743b      	strb	r3, [r7, #16]
 80110fa:	7d3b      	ldrb	r3, [r7, #20]
 80110fc:	4a3e      	ldr	r2, [pc, #248]	; (80111f8 <lorawan_aes_set_key+0x1b8>)
 80110fe:	5cd2      	ldrb	r2, [r2, r3]
 8011100:	7dbb      	ldrb	r3, [r7, #22]
 8011102:	4053      	eors	r3, r2
 8011104:	757b      	strb	r3, [r7, #21]
 8011106:	7cfb      	ldrb	r3, [r7, #19]
 8011108:	4a3b      	ldr	r2, [pc, #236]	; (80111f8 <lorawan_aes_set_key+0x1b8>)
 801110a:	5cd3      	ldrb	r3, [r2, r3]
 801110c:	753b      	strb	r3, [r7, #20]
 801110e:	7cbb      	ldrb	r3, [r7, #18]
 8011110:	4a39      	ldr	r2, [pc, #228]	; (80111f8 <lorawan_aes_set_key+0x1b8>)
 8011112:	5cd3      	ldrb	r3, [r2, r3]
 8011114:	74fb      	strb	r3, [r7, #19]
 8011116:	7c3b      	ldrb	r3, [r7, #16]
 8011118:	4a37      	ldr	r2, [pc, #220]	; (80111f8 <lorawan_aes_set_key+0x1b8>)
 801111a:	5cd3      	ldrb	r3, [r2, r3]
 801111c:	74bb      	strb	r3, [r7, #18]
 801111e:	7dbb      	ldrb	r3, [r7, #22]
 8011120:	005b      	lsls	r3, r3, #1
 8011122:	b25a      	sxtb	r2, r3
 8011124:	7dbb      	ldrb	r3, [r7, #22]
 8011126:	09db      	lsrs	r3, r3, #7
 8011128:	b2db      	uxtb	r3, r3
 801112a:	4619      	mov	r1, r3
 801112c:	0049      	lsls	r1, r1, #1
 801112e:	440b      	add	r3, r1
 8011130:	4619      	mov	r1, r3
 8011132:	00c8      	lsls	r0, r1, #3
 8011134:	4619      	mov	r1, r3
 8011136:	4603      	mov	r3, r0
 8011138:	440b      	add	r3, r1
 801113a:	b2db      	uxtb	r3, r3
 801113c:	b25b      	sxtb	r3, r3
 801113e:	4053      	eors	r3, r2
 8011140:	b25b      	sxtb	r3, r3
 8011142:	75bb      	strb	r3, [r7, #22]
 8011144:	e01c      	b.n	8011180 <lorawan_aes_set_key+0x140>
 8011146:	7afb      	ldrb	r3, [r7, #11]
 8011148:	2b18      	cmp	r3, #24
 801114a:	d919      	bls.n	8011180 <lorawan_aes_set_key+0x140>
 801114c:	7dfb      	ldrb	r3, [r7, #23]
 801114e:	7afa      	ldrb	r2, [r7, #11]
 8011150:	fbb3 f1f2 	udiv	r1, r3, r2
 8011154:	fb02 f201 	mul.w	r2, r2, r1
 8011158:	1a9b      	subs	r3, r3, r2
 801115a:	b2db      	uxtb	r3, r3
 801115c:	2b10      	cmp	r3, #16
 801115e:	d10f      	bne.n	8011180 <lorawan_aes_set_key+0x140>
 8011160:	7d7b      	ldrb	r3, [r7, #21]
 8011162:	4a25      	ldr	r2, [pc, #148]	; (80111f8 <lorawan_aes_set_key+0x1b8>)
 8011164:	5cd3      	ldrb	r3, [r2, r3]
 8011166:	757b      	strb	r3, [r7, #21]
 8011168:	7d3b      	ldrb	r3, [r7, #20]
 801116a:	4a23      	ldr	r2, [pc, #140]	; (80111f8 <lorawan_aes_set_key+0x1b8>)
 801116c:	5cd3      	ldrb	r3, [r2, r3]
 801116e:	753b      	strb	r3, [r7, #20]
 8011170:	7cfb      	ldrb	r3, [r7, #19]
 8011172:	4a21      	ldr	r2, [pc, #132]	; (80111f8 <lorawan_aes_set_key+0x1b8>)
 8011174:	5cd3      	ldrb	r3, [r2, r3]
 8011176:	74fb      	strb	r3, [r7, #19]
 8011178:	7cbb      	ldrb	r3, [r7, #18]
 801117a:	4a1f      	ldr	r2, [pc, #124]	; (80111f8 <lorawan_aes_set_key+0x1b8>)
 801117c:	5cd3      	ldrb	r3, [r2, r3]
 801117e:	74bb      	strb	r3, [r7, #18]
 8011180:	7dfa      	ldrb	r2, [r7, #23]
 8011182:	7afb      	ldrb	r3, [r7, #11]
 8011184:	1ad3      	subs	r3, r2, r3
 8011186:	743b      	strb	r3, [r7, #16]
 8011188:	7c3b      	ldrb	r3, [r7, #16]
 801118a:	687a      	ldr	r2, [r7, #4]
 801118c:	5cd1      	ldrb	r1, [r2, r3]
 801118e:	7dfb      	ldrb	r3, [r7, #23]
 8011190:	7d7a      	ldrb	r2, [r7, #21]
 8011192:	404a      	eors	r2, r1
 8011194:	b2d1      	uxtb	r1, r2
 8011196:	687a      	ldr	r2, [r7, #4]
 8011198:	54d1      	strb	r1, [r2, r3]
 801119a:	7c3b      	ldrb	r3, [r7, #16]
 801119c:	3301      	adds	r3, #1
 801119e:	687a      	ldr	r2, [r7, #4]
 80111a0:	5cd1      	ldrb	r1, [r2, r3]
 80111a2:	7dfb      	ldrb	r3, [r7, #23]
 80111a4:	3301      	adds	r3, #1
 80111a6:	7d3a      	ldrb	r2, [r7, #20]
 80111a8:	404a      	eors	r2, r1
 80111aa:	b2d1      	uxtb	r1, r2
 80111ac:	687a      	ldr	r2, [r7, #4]
 80111ae:	54d1      	strb	r1, [r2, r3]
 80111b0:	7c3b      	ldrb	r3, [r7, #16]
 80111b2:	3302      	adds	r3, #2
 80111b4:	687a      	ldr	r2, [r7, #4]
 80111b6:	5cd1      	ldrb	r1, [r2, r3]
 80111b8:	7dfb      	ldrb	r3, [r7, #23]
 80111ba:	3302      	adds	r3, #2
 80111bc:	7cfa      	ldrb	r2, [r7, #19]
 80111be:	404a      	eors	r2, r1
 80111c0:	b2d1      	uxtb	r1, r2
 80111c2:	687a      	ldr	r2, [r7, #4]
 80111c4:	54d1      	strb	r1, [r2, r3]
 80111c6:	7c3b      	ldrb	r3, [r7, #16]
 80111c8:	3303      	adds	r3, #3
 80111ca:	687a      	ldr	r2, [r7, #4]
 80111cc:	5cd1      	ldrb	r1, [r2, r3]
 80111ce:	7dfb      	ldrb	r3, [r7, #23]
 80111d0:	3303      	adds	r3, #3
 80111d2:	7cba      	ldrb	r2, [r7, #18]
 80111d4:	404a      	eors	r2, r1
 80111d6:	b2d1      	uxtb	r1, r2
 80111d8:	687a      	ldr	r2, [r7, #4]
 80111da:	54d1      	strb	r1, [r2, r3]
 80111dc:	7dfb      	ldrb	r3, [r7, #23]
 80111de:	3304      	adds	r3, #4
 80111e0:	75fb      	strb	r3, [r7, #23]
 80111e2:	7dfa      	ldrb	r2, [r7, #23]
 80111e4:	7c7b      	ldrb	r3, [r7, #17]
 80111e6:	429a      	cmp	r2, r3
 80111e8:	f4ff af67 	bcc.w	80110ba <lorawan_aes_set_key+0x7a>
 80111ec:	2300      	movs	r3, #0
 80111ee:	4618      	mov	r0, r3
 80111f0:	3718      	adds	r7, #24
 80111f2:	46bd      	mov	sp, r7
 80111f4:	bd80      	pop	{r7, pc}
 80111f6:	bf00      	nop
 80111f8:	080263c4 	.word	0x080263c4

080111fc <lorawan_aes_encrypt>:
 80111fc:	b580      	push	{r7, lr}
 80111fe:	b08a      	sub	sp, #40	; 0x28
 8011200:	af00      	add	r7, sp, #0
 8011202:	60f8      	str	r0, [r7, #12]
 8011204:	60b9      	str	r1, [r7, #8]
 8011206:	607a      	str	r2, [r7, #4]
 8011208:	687b      	ldr	r3, [r7, #4]
 801120a:	f893 30f0 	ldrb.w	r3, [r3, #240]	; 0xf0
 801120e:	2b00      	cmp	r3, #0
 8011210:	d038      	beq.n	8011284 <lorawan_aes_encrypt+0x88>
 8011212:	687a      	ldr	r2, [r7, #4]
 8011214:	f107 0314 	add.w	r3, r7, #20
 8011218:	68f9      	ldr	r1, [r7, #12]
 801121a:	4618      	mov	r0, r3
 801121c:	f7ff fc07 	bl	8010a2e <copy_and_key>
 8011220:	2301      	movs	r3, #1
 8011222:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 8011226:	e014      	b.n	8011252 <lorawan_aes_encrypt+0x56>
 8011228:	f107 0314 	add.w	r3, r7, #20
 801122c:	4618      	mov	r0, r3
 801122e:	f7ff fd5d 	bl	8010cec <mix_sub_columns>
 8011232:	687b      	ldr	r3, [r7, #4]
 8011234:	f897 2027 	ldrb.w	r2, [r7, #39]	; 0x27
 8011238:	0112      	lsls	r2, r2, #4
 801123a:	441a      	add	r2, r3
 801123c:	f107 0314 	add.w	r3, r7, #20
 8011240:	4611      	mov	r1, r2
 8011242:	4618      	mov	r0, r3
 8011244:	f7ff fcab 	bl	8010b9e <add_round_key>
 8011248:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 801124c:	3301      	adds	r3, #1
 801124e:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 8011252:	687b      	ldr	r3, [r7, #4]
 8011254:	f893 30f0 	ldrb.w	r3, [r3, #240]	; 0xf0
 8011258:	f897 2027 	ldrb.w	r2, [r7, #39]	; 0x27
 801125c:	429a      	cmp	r2, r3
 801125e:	d3e3      	bcc.n	8011228 <lorawan_aes_encrypt+0x2c>
 8011260:	f107 0314 	add.w	r3, r7, #20
 8011264:	4618      	mov	r0, r3
 8011266:	f7ff fca7 	bl	8010bb8 <shift_sub_rows>
 801126a:	687b      	ldr	r3, [r7, #4]
 801126c:	f897 2027 	ldrb.w	r2, [r7, #39]	; 0x27
 8011270:	0112      	lsls	r2, r2, #4
 8011272:	441a      	add	r2, r3
 8011274:	f107 0314 	add.w	r3, r7, #20
 8011278:	4619      	mov	r1, r3
 801127a:	68b8      	ldr	r0, [r7, #8]
 801127c:	f7ff fbd7 	bl	8010a2e <copy_and_key>
 8011280:	2300      	movs	r3, #0
 8011282:	e000      	b.n	8011286 <lorawan_aes_encrypt+0x8a>
 8011284:	23ff      	movs	r3, #255	; 0xff
 8011286:	4618      	mov	r0, r3
 8011288:	3728      	adds	r7, #40	; 0x28
 801128a:	46bd      	mov	sp, r7
 801128c:	bd80      	pop	{r7, pc}
	...

08011290 <GetKeyByID>:
 8011290:	b480      	push	{r7}
 8011292:	b085      	sub	sp, #20
 8011294:	af00      	add	r7, sp, #0
 8011296:	4603      	mov	r3, r0
 8011298:	6039      	str	r1, [r7, #0]
 801129a:	71fb      	strb	r3, [r7, #7]
 801129c:	2300      	movs	r3, #0
 801129e:	73fb      	strb	r3, [r7, #15]
 80112a0:	e018      	b.n	80112d4 <GetKeyByID+0x44>
 80112a2:	7bfa      	ldrb	r2, [r7, #15]
 80112a4:	4910      	ldr	r1, [pc, #64]	; (80112e8 <GetKeyByID+0x58>)
 80112a6:	4613      	mov	r3, r2
 80112a8:	011b      	lsls	r3, r3, #4
 80112aa:	4413      	add	r3, r2
 80112ac:	440b      	add	r3, r1
 80112ae:	3310      	adds	r3, #16
 80112b0:	781b      	ldrb	r3, [r3, #0]
 80112b2:	79fa      	ldrb	r2, [r7, #7]
 80112b4:	429a      	cmp	r2, r3
 80112b6:	d10a      	bne.n	80112ce <GetKeyByID+0x3e>
 80112b8:	7bfa      	ldrb	r2, [r7, #15]
 80112ba:	4613      	mov	r3, r2
 80112bc:	011b      	lsls	r3, r3, #4
 80112be:	4413      	add	r3, r2
 80112c0:	3310      	adds	r3, #16
 80112c2:	4a09      	ldr	r2, [pc, #36]	; (80112e8 <GetKeyByID+0x58>)
 80112c4:	441a      	add	r2, r3
 80112c6:	683b      	ldr	r3, [r7, #0]
 80112c8:	601a      	str	r2, [r3, #0]
 80112ca:	2300      	movs	r3, #0
 80112cc:	e006      	b.n	80112dc <GetKeyByID+0x4c>
 80112ce:	7bfb      	ldrb	r3, [r7, #15]
 80112d0:	3301      	adds	r3, #1
 80112d2:	73fb      	strb	r3, [r7, #15]
 80112d4:	7bfb      	ldrb	r3, [r7, #15]
 80112d6:	2b09      	cmp	r3, #9
 80112d8:	d9e3      	bls.n	80112a2 <GetKeyByID+0x12>
 80112da:	2303      	movs	r3, #3
 80112dc:	4618      	mov	r0, r3
 80112de:	3714      	adds	r7, #20
 80112e0:	46bd      	mov	sp, r7
 80112e2:	bc80      	pop	{r7}
 80112e4:	4770      	bx	lr
 80112e6:	bf00      	nop
 80112e8:	2000008c 	.word	0x2000008c

080112ec <DummyCB>:
 80112ec:	b480      	push	{r7}
 80112ee:	af00      	add	r7, sp, #0
 80112f0:	bf00      	nop
 80112f2:	46bd      	mov	sp, r7
 80112f4:	bc80      	pop	{r7}
 80112f6:	4770      	bx	lr

080112f8 <ComputeCmac>:
 80112f8:	b590      	push	{r4, r7, lr}
 80112fa:	b0d1      	sub	sp, #324	; 0x144
 80112fc:	af00      	add	r7, sp, #0
 80112fe:	f107 040c 	add.w	r4, r7, #12
 8011302:	6020      	str	r0, [r4, #0]
 8011304:	f107 0008 	add.w	r0, r7, #8
 8011308:	6001      	str	r1, [r0, #0]
 801130a:	4619      	mov	r1, r3
 801130c:	1dbb      	adds	r3, r7, #6
 801130e:	801a      	strh	r2, [r3, #0]
 8011310:	1d7b      	adds	r3, r7, #5
 8011312:	460a      	mov	r2, r1
 8011314:	701a      	strb	r2, [r3, #0]
 8011316:	2306      	movs	r3, #6
 8011318:	f887 313f 	strb.w	r3, [r7, #319]	; 0x13f
 801131c:	f107 0308 	add.w	r3, r7, #8
 8011320:	681b      	ldr	r3, [r3, #0]
 8011322:	2b00      	cmp	r3, #0
 8011324:	d003      	beq.n	801132e <ComputeCmac+0x36>
 8011326:	f8d7 3150 	ldr.w	r3, [r7, #336]	; 0x150
 801132a:	2b00      	cmp	r3, #0
 801132c:	d101      	bne.n	8011332 <ComputeCmac+0x3a>
 801132e:	2302      	movs	r3, #2
 8011330:	e04e      	b.n	80113d0 <ComputeCmac+0xd8>
 8011332:	f107 0314 	add.w	r3, r7, #20
 8011336:	4618      	mov	r0, r3
 8011338:	f7fe fffe 	bl	8010338 <AES_CMAC_Init>
 801133c:	f107 0210 	add.w	r2, r7, #16
 8011340:	1d7b      	adds	r3, r7, #5
 8011342:	781b      	ldrb	r3, [r3, #0]
 8011344:	4611      	mov	r1, r2
 8011346:	4618      	mov	r0, r3
 8011348:	f7ff ffa2 	bl	8011290 <GetKeyByID>
 801134c:	4603      	mov	r3, r0
 801134e:	f887 313f 	strb.w	r3, [r7, #319]	; 0x13f
 8011352:	f897 313f 	ldrb.w	r3, [r7, #319]	; 0x13f
 8011356:	2b00      	cmp	r3, #0
 8011358:	d138      	bne.n	80113cc <ComputeCmac+0xd4>
 801135a:	f107 0310 	add.w	r3, r7, #16
 801135e:	681b      	ldr	r3, [r3, #0]
 8011360:	1c5a      	adds	r2, r3, #1
 8011362:	f107 0314 	add.w	r3, r7, #20
 8011366:	4611      	mov	r1, r2
 8011368:	4618      	mov	r0, r3
 801136a:	f7fe fffe 	bl	801036a <AES_CMAC_SetKey>
 801136e:	f107 030c 	add.w	r3, r7, #12
 8011372:	681b      	ldr	r3, [r3, #0]
 8011374:	2b00      	cmp	r3, #0
 8011376:	d007      	beq.n	8011388 <ComputeCmac+0x90>
 8011378:	f107 030c 	add.w	r3, r7, #12
 801137c:	f107 0014 	add.w	r0, r7, #20
 8011380:	2210      	movs	r2, #16
 8011382:	6819      	ldr	r1, [r3, #0]
 8011384:	f7ff f800 	bl	8010388 <AES_CMAC_Update>
 8011388:	1dbb      	adds	r3, r7, #6
 801138a:	881a      	ldrh	r2, [r3, #0]
 801138c:	f107 0308 	add.w	r3, r7, #8
 8011390:	f107 0014 	add.w	r0, r7, #20
 8011394:	6819      	ldr	r1, [r3, #0]
 8011396:	f7fe fff7 	bl	8010388 <AES_CMAC_Update>
 801139a:	f107 0214 	add.w	r2, r7, #20
 801139e:	f507 7396 	add.w	r3, r7, #300	; 0x12c
 80113a2:	4611      	mov	r1, r2
 80113a4:	4618      	mov	r0, r3
 80113a6:	f7ff f8b1 	bl	801050c <AES_CMAC_Final>
 80113aa:	f897 312f 	ldrb.w	r3, [r7, #303]	; 0x12f
 80113ae:	061a      	lsls	r2, r3, #24
 80113b0:	f897 312e 	ldrb.w	r3, [r7, #302]	; 0x12e
 80113b4:	041b      	lsls	r3, r3, #16
 80113b6:	431a      	orrs	r2, r3
 80113b8:	f897 312d 	ldrb.w	r3, [r7, #301]	; 0x12d
 80113bc:	021b      	lsls	r3, r3, #8
 80113be:	4313      	orrs	r3, r2
 80113c0:	f897 212c 	ldrb.w	r2, [r7, #300]	; 0x12c
 80113c4:	431a      	orrs	r2, r3
 80113c6:	f8d7 3150 	ldr.w	r3, [r7, #336]	; 0x150
 80113ca:	601a      	str	r2, [r3, #0]
 80113cc:	f897 313f 	ldrb.w	r3, [r7, #319]	; 0x13f
 80113d0:	4618      	mov	r0, r3
 80113d2:	f507 77a2 	add.w	r7, r7, #324	; 0x144
 80113d6:	46bd      	mov	sp, r7
 80113d8:	bd90      	pop	{r4, r7, pc}
	...

080113dc <SecureElementInit>:
 80113dc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80113de:	b09d      	sub	sp, #116	; 0x74
 80113e0:	af10      	add	r7, sp, #64	; 0x40
 80113e2:	6278      	str	r0, [r7, #36]	; 0x24
 80113e4:	2306      	movs	r3, #6
 80113e6:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f
 80113ea:	22aa      	movs	r2, #170	; 0xaa
 80113ec:	4990      	ldr	r1, [pc, #576]	; (8011630 <SecureElementInit+0x254>)
 80113ee:	4891      	ldr	r0, [pc, #580]	; (8011634 <SecureElementInit+0x258>)
 80113f0:	f00c f91b 	bl	801d62a <memcpy1>
 80113f4:	f107 0328 	add.w	r3, r7, #40	; 0x28
 80113f8:	4619      	mov	r1, r3
 80113fa:	2000      	movs	r0, #0
 80113fc:	f7ff ff48 	bl	8011290 <GetKeyByID>
 8011400:	4603      	mov	r3, r0
 8011402:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f
 8011406:	4b8c      	ldr	r3, [pc, #560]	; (8011638 <SecureElementInit+0x25c>)
 8011408:	2200      	movs	r2, #0
 801140a:	2100      	movs	r1, #0
 801140c:	2002      	movs	r0, #2
 801140e:	f010 f85d 	bl	80214cc <UTIL_ADV_TRACE_COND_FSend>
 8011412:	f897 302f 	ldrb.w	r3, [r7, #47]	; 0x2f
 8011416:	2b00      	cmp	r3, #0
 8011418:	d14d      	bne.n	80114b6 <SecureElementInit+0xda>
 801141a:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801141c:	785b      	ldrb	r3, [r3, #1]
 801141e:	4618      	mov	r0, r3
 8011420:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8011422:	789b      	ldrb	r3, [r3, #2]
 8011424:	461c      	mov	r4, r3
 8011426:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8011428:	78db      	ldrb	r3, [r3, #3]
 801142a:	461d      	mov	r5, r3
 801142c:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801142e:	791b      	ldrb	r3, [r3, #4]
 8011430:	461e      	mov	r6, r3
 8011432:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8011434:	795b      	ldrb	r3, [r3, #5]
 8011436:	623b      	str	r3, [r7, #32]
 8011438:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801143a:	799b      	ldrb	r3, [r3, #6]
 801143c:	61fb      	str	r3, [r7, #28]
 801143e:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8011440:	79db      	ldrb	r3, [r3, #7]
 8011442:	61bb      	str	r3, [r7, #24]
 8011444:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8011446:	7a1b      	ldrb	r3, [r3, #8]
 8011448:	617b      	str	r3, [r7, #20]
 801144a:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801144c:	7a5b      	ldrb	r3, [r3, #9]
 801144e:	613b      	str	r3, [r7, #16]
 8011450:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8011452:	7a9b      	ldrb	r3, [r3, #10]
 8011454:	60fb      	str	r3, [r7, #12]
 8011456:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8011458:	7adb      	ldrb	r3, [r3, #11]
 801145a:	60bb      	str	r3, [r7, #8]
 801145c:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801145e:	7b1b      	ldrb	r3, [r3, #12]
 8011460:	607b      	str	r3, [r7, #4]
 8011462:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8011464:	7b5b      	ldrb	r3, [r3, #13]
 8011466:	603b      	str	r3, [r7, #0]
 8011468:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801146a:	7b9b      	ldrb	r3, [r3, #14]
 801146c:	4619      	mov	r1, r3
 801146e:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8011470:	7bdb      	ldrb	r3, [r3, #15]
 8011472:	461a      	mov	r2, r3
 8011474:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8011476:	7c1b      	ldrb	r3, [r3, #16]
 8011478:	930f      	str	r3, [sp, #60]	; 0x3c
 801147a:	920e      	str	r2, [sp, #56]	; 0x38
 801147c:	910d      	str	r1, [sp, #52]	; 0x34
 801147e:	683a      	ldr	r2, [r7, #0]
 8011480:	920c      	str	r2, [sp, #48]	; 0x30
 8011482:	687a      	ldr	r2, [r7, #4]
 8011484:	920b      	str	r2, [sp, #44]	; 0x2c
 8011486:	68ba      	ldr	r2, [r7, #8]
 8011488:	920a      	str	r2, [sp, #40]	; 0x28
 801148a:	68fa      	ldr	r2, [r7, #12]
 801148c:	9209      	str	r2, [sp, #36]	; 0x24
 801148e:	693a      	ldr	r2, [r7, #16]
 8011490:	9208      	str	r2, [sp, #32]
 8011492:	697a      	ldr	r2, [r7, #20]
 8011494:	9207      	str	r2, [sp, #28]
 8011496:	69ba      	ldr	r2, [r7, #24]
 8011498:	9206      	str	r2, [sp, #24]
 801149a:	69fa      	ldr	r2, [r7, #28]
 801149c:	9205      	str	r2, [sp, #20]
 801149e:	6a3b      	ldr	r3, [r7, #32]
 80114a0:	9304      	str	r3, [sp, #16]
 80114a2:	9603      	str	r6, [sp, #12]
 80114a4:	9502      	str	r5, [sp, #8]
 80114a6:	9401      	str	r4, [sp, #4]
 80114a8:	9000      	str	r0, [sp, #0]
 80114aa:	4b64      	ldr	r3, [pc, #400]	; (801163c <SecureElementInit+0x260>)
 80114ac:	2200      	movs	r2, #0
 80114ae:	2100      	movs	r1, #0
 80114b0:	2002      	movs	r0, #2
 80114b2:	f010 f80b 	bl	80214cc <UTIL_ADV_TRACE_COND_FSend>
 80114b6:	f107 0328 	add.w	r3, r7, #40	; 0x28
 80114ba:	4619      	mov	r1, r3
 80114bc:	2001      	movs	r0, #1
 80114be:	f7ff fee7 	bl	8011290 <GetKeyByID>
 80114c2:	4603      	mov	r3, r0
 80114c4:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f
 80114c8:	f897 302f 	ldrb.w	r3, [r7, #47]	; 0x2f
 80114cc:	2b00      	cmp	r3, #0
 80114ce:	d14d      	bne.n	801156c <SecureElementInit+0x190>
 80114d0:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80114d2:	785b      	ldrb	r3, [r3, #1]
 80114d4:	4618      	mov	r0, r3
 80114d6:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80114d8:	789b      	ldrb	r3, [r3, #2]
 80114da:	461c      	mov	r4, r3
 80114dc:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80114de:	78db      	ldrb	r3, [r3, #3]
 80114e0:	461d      	mov	r5, r3
 80114e2:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80114e4:	791b      	ldrb	r3, [r3, #4]
 80114e6:	461e      	mov	r6, r3
 80114e8:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80114ea:	795b      	ldrb	r3, [r3, #5]
 80114ec:	623b      	str	r3, [r7, #32]
 80114ee:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80114f0:	799b      	ldrb	r3, [r3, #6]
 80114f2:	61fb      	str	r3, [r7, #28]
 80114f4:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80114f6:	79db      	ldrb	r3, [r3, #7]
 80114f8:	61bb      	str	r3, [r7, #24]
 80114fa:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80114fc:	7a1b      	ldrb	r3, [r3, #8]
 80114fe:	617b      	str	r3, [r7, #20]
 8011500:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8011502:	7a5b      	ldrb	r3, [r3, #9]
 8011504:	613b      	str	r3, [r7, #16]
 8011506:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8011508:	7a9b      	ldrb	r3, [r3, #10]
 801150a:	60fb      	str	r3, [r7, #12]
 801150c:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801150e:	7adb      	ldrb	r3, [r3, #11]
 8011510:	60bb      	str	r3, [r7, #8]
 8011512:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8011514:	7b1b      	ldrb	r3, [r3, #12]
 8011516:	607b      	str	r3, [r7, #4]
 8011518:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801151a:	7b5b      	ldrb	r3, [r3, #13]
 801151c:	603b      	str	r3, [r7, #0]
 801151e:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8011520:	7b9b      	ldrb	r3, [r3, #14]
 8011522:	4619      	mov	r1, r3
 8011524:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8011526:	7bdb      	ldrb	r3, [r3, #15]
 8011528:	461a      	mov	r2, r3
 801152a:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801152c:	7c1b      	ldrb	r3, [r3, #16]
 801152e:	930f      	str	r3, [sp, #60]	; 0x3c
 8011530:	920e      	str	r2, [sp, #56]	; 0x38
 8011532:	910d      	str	r1, [sp, #52]	; 0x34
 8011534:	683a      	ldr	r2, [r7, #0]
 8011536:	920c      	str	r2, [sp, #48]	; 0x30
 8011538:	687a      	ldr	r2, [r7, #4]
 801153a:	920b      	str	r2, [sp, #44]	; 0x2c
 801153c:	68ba      	ldr	r2, [r7, #8]
 801153e:	920a      	str	r2, [sp, #40]	; 0x28
 8011540:	68fa      	ldr	r2, [r7, #12]
 8011542:	9209      	str	r2, [sp, #36]	; 0x24
 8011544:	693a      	ldr	r2, [r7, #16]
 8011546:	9208      	str	r2, [sp, #32]
 8011548:	697a      	ldr	r2, [r7, #20]
 801154a:	9207      	str	r2, [sp, #28]
 801154c:	69ba      	ldr	r2, [r7, #24]
 801154e:	9206      	str	r2, [sp, #24]
 8011550:	69fa      	ldr	r2, [r7, #28]
 8011552:	9205      	str	r2, [sp, #20]
 8011554:	6a3b      	ldr	r3, [r7, #32]
 8011556:	9304      	str	r3, [sp, #16]
 8011558:	9603      	str	r6, [sp, #12]
 801155a:	9502      	str	r5, [sp, #8]
 801155c:	9401      	str	r4, [sp, #4]
 801155e:	9000      	str	r0, [sp, #0]
 8011560:	4b37      	ldr	r3, [pc, #220]	; (8011640 <SecureElementInit+0x264>)
 8011562:	2200      	movs	r2, #0
 8011564:	2100      	movs	r1, #0
 8011566:	2002      	movs	r0, #2
 8011568:	f00f ffb0 	bl	80214cc <UTIL_ADV_TRACE_COND_FSend>
 801156c:	4b35      	ldr	r3, [pc, #212]	; (8011644 <SecureElementInit+0x268>)
 801156e:	2200      	movs	r2, #0
 8011570:	2100      	movs	r1, #0
 8011572:	2002      	movs	r0, #2
 8011574:	f00f ffaa 	bl	80214cc <UTIL_ADV_TRACE_COND_FSend>
 8011578:	f107 0328 	add.w	r3, r7, #40	; 0x28
 801157c:	4619      	mov	r1, r3
 801157e:	2003      	movs	r0, #3
 8011580:	f7ff fe86 	bl	8011290 <GetKeyByID>
 8011584:	4603      	mov	r3, r0
 8011586:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f
 801158a:	f897 302f 	ldrb.w	r3, [r7, #47]	; 0x2f
 801158e:	2b00      	cmp	r3, #0
 8011590:	d15c      	bne.n	801164c <SecureElementInit+0x270>
 8011592:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8011594:	785b      	ldrb	r3, [r3, #1]
 8011596:	4618      	mov	r0, r3
 8011598:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801159a:	789b      	ldrb	r3, [r3, #2]
 801159c:	461c      	mov	r4, r3
 801159e:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80115a0:	78db      	ldrb	r3, [r3, #3]
 80115a2:	461d      	mov	r5, r3
 80115a4:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80115a6:	791b      	ldrb	r3, [r3, #4]
 80115a8:	461e      	mov	r6, r3
 80115aa:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80115ac:	795b      	ldrb	r3, [r3, #5]
 80115ae:	623b      	str	r3, [r7, #32]
 80115b0:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80115b2:	799b      	ldrb	r3, [r3, #6]
 80115b4:	61fb      	str	r3, [r7, #28]
 80115b6:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80115b8:	79db      	ldrb	r3, [r3, #7]
 80115ba:	61bb      	str	r3, [r7, #24]
 80115bc:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80115be:	7a1b      	ldrb	r3, [r3, #8]
 80115c0:	617b      	str	r3, [r7, #20]
 80115c2:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80115c4:	7a5b      	ldrb	r3, [r3, #9]
 80115c6:	613b      	str	r3, [r7, #16]
 80115c8:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80115ca:	7a9b      	ldrb	r3, [r3, #10]
 80115cc:	60fb      	str	r3, [r7, #12]
 80115ce:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80115d0:	7adb      	ldrb	r3, [r3, #11]
 80115d2:	60bb      	str	r3, [r7, #8]
 80115d4:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80115d6:	7b1b      	ldrb	r3, [r3, #12]
 80115d8:	607b      	str	r3, [r7, #4]
 80115da:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80115dc:	7b5b      	ldrb	r3, [r3, #13]
 80115de:	603b      	str	r3, [r7, #0]
 80115e0:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80115e2:	7b9b      	ldrb	r3, [r3, #14]
 80115e4:	4619      	mov	r1, r3
 80115e6:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80115e8:	7bdb      	ldrb	r3, [r3, #15]
 80115ea:	461a      	mov	r2, r3
 80115ec:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80115ee:	7c1b      	ldrb	r3, [r3, #16]
 80115f0:	930f      	str	r3, [sp, #60]	; 0x3c
 80115f2:	920e      	str	r2, [sp, #56]	; 0x38
 80115f4:	910d      	str	r1, [sp, #52]	; 0x34
 80115f6:	683a      	ldr	r2, [r7, #0]
 80115f8:	920c      	str	r2, [sp, #48]	; 0x30
 80115fa:	687a      	ldr	r2, [r7, #4]
 80115fc:	920b      	str	r2, [sp, #44]	; 0x2c
 80115fe:	68ba      	ldr	r2, [r7, #8]
 8011600:	920a      	str	r2, [sp, #40]	; 0x28
 8011602:	68fa      	ldr	r2, [r7, #12]
 8011604:	9209      	str	r2, [sp, #36]	; 0x24
 8011606:	693a      	ldr	r2, [r7, #16]
 8011608:	9208      	str	r2, [sp, #32]
 801160a:	697a      	ldr	r2, [r7, #20]
 801160c:	9207      	str	r2, [sp, #28]
 801160e:	69ba      	ldr	r2, [r7, #24]
 8011610:	9206      	str	r2, [sp, #24]
 8011612:	69fa      	ldr	r2, [r7, #28]
 8011614:	9205      	str	r2, [sp, #20]
 8011616:	6a3b      	ldr	r3, [r7, #32]
 8011618:	9304      	str	r3, [sp, #16]
 801161a:	9603      	str	r6, [sp, #12]
 801161c:	9502      	str	r5, [sp, #8]
 801161e:	9401      	str	r4, [sp, #4]
 8011620:	9000      	str	r0, [sp, #0]
 8011622:	4b09      	ldr	r3, [pc, #36]	; (8011648 <SecureElementInit+0x26c>)
 8011624:	2200      	movs	r2, #0
 8011626:	2100      	movs	r1, #0
 8011628:	2002      	movs	r0, #2
 801162a:	f00f ff4f 	bl	80214cc <UTIL_ADV_TRACE_COND_FSend>
 801162e:	e00d      	b.n	801164c <SecureElementInit+0x270>
 8011630:	080266c4 	.word	0x080266c4
 8011634:	2000009c 	.word	0x2000009c
 8011638:	08025e04 	.word	0x08025e04
 801163c:	08025e1c 	.word	0x08025e1c
 8011640:	08025e80 	.word	0x08025e80
 8011644:	08025ee4 	.word	0x08025ee4
 8011648:	08025efc 	.word	0x08025efc
 801164c:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8011650:	4619      	mov	r1, r3
 8011652:	2002      	movs	r0, #2
 8011654:	f7ff fe1c 	bl	8011290 <GetKeyByID>
 8011658:	4603      	mov	r3, r0
 801165a:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f
 801165e:	f897 302f 	ldrb.w	r3, [r7, #47]	; 0x2f
 8011662:	2b00      	cmp	r3, #0
 8011664:	d14d      	bne.n	8011702 <SecureElementInit+0x326>
 8011666:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8011668:	785b      	ldrb	r3, [r3, #1]
 801166a:	4618      	mov	r0, r3
 801166c:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801166e:	789b      	ldrb	r3, [r3, #2]
 8011670:	461c      	mov	r4, r3
 8011672:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8011674:	78db      	ldrb	r3, [r3, #3]
 8011676:	461d      	mov	r5, r3
 8011678:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801167a:	791b      	ldrb	r3, [r3, #4]
 801167c:	461e      	mov	r6, r3
 801167e:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8011680:	795b      	ldrb	r3, [r3, #5]
 8011682:	623b      	str	r3, [r7, #32]
 8011684:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8011686:	799b      	ldrb	r3, [r3, #6]
 8011688:	61fb      	str	r3, [r7, #28]
 801168a:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801168c:	79db      	ldrb	r3, [r3, #7]
 801168e:	61bb      	str	r3, [r7, #24]
 8011690:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8011692:	7a1b      	ldrb	r3, [r3, #8]
 8011694:	617b      	str	r3, [r7, #20]
 8011696:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8011698:	7a5b      	ldrb	r3, [r3, #9]
 801169a:	613b      	str	r3, [r7, #16]
 801169c:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801169e:	7a9b      	ldrb	r3, [r3, #10]
 80116a0:	60fb      	str	r3, [r7, #12]
 80116a2:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80116a4:	7adb      	ldrb	r3, [r3, #11]
 80116a6:	60bb      	str	r3, [r7, #8]
 80116a8:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80116aa:	7b1b      	ldrb	r3, [r3, #12]
 80116ac:	607b      	str	r3, [r7, #4]
 80116ae:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80116b0:	7b5b      	ldrb	r3, [r3, #13]
 80116b2:	603b      	str	r3, [r7, #0]
 80116b4:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80116b6:	7b9b      	ldrb	r3, [r3, #14]
 80116b8:	4619      	mov	r1, r3
 80116ba:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80116bc:	7bdb      	ldrb	r3, [r3, #15]
 80116be:	461a      	mov	r2, r3
 80116c0:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80116c2:	7c1b      	ldrb	r3, [r3, #16]
 80116c4:	930f      	str	r3, [sp, #60]	; 0x3c
 80116c6:	920e      	str	r2, [sp, #56]	; 0x38
 80116c8:	910d      	str	r1, [sp, #52]	; 0x34
 80116ca:	683a      	ldr	r2, [r7, #0]
 80116cc:	920c      	str	r2, [sp, #48]	; 0x30
 80116ce:	687a      	ldr	r2, [r7, #4]
 80116d0:	920b      	str	r2, [sp, #44]	; 0x2c
 80116d2:	68ba      	ldr	r2, [r7, #8]
 80116d4:	920a      	str	r2, [sp, #40]	; 0x28
 80116d6:	68fa      	ldr	r2, [r7, #12]
 80116d8:	9209      	str	r2, [sp, #36]	; 0x24
 80116da:	693a      	ldr	r2, [r7, #16]
 80116dc:	9208      	str	r2, [sp, #32]
 80116de:	697a      	ldr	r2, [r7, #20]
 80116e0:	9207      	str	r2, [sp, #28]
 80116e2:	69ba      	ldr	r2, [r7, #24]
 80116e4:	9206      	str	r2, [sp, #24]
 80116e6:	69fa      	ldr	r2, [r7, #28]
 80116e8:	9205      	str	r2, [sp, #20]
 80116ea:	6a3b      	ldr	r3, [r7, #32]
 80116ec:	9304      	str	r3, [sp, #16]
 80116ee:	9603      	str	r6, [sp, #12]
 80116f0:	9502      	str	r5, [sp, #8]
 80116f2:	9401      	str	r4, [sp, #4]
 80116f4:	9000      	str	r0, [sp, #0]
 80116f6:	4b0d      	ldr	r3, [pc, #52]	; (801172c <SecureElementInit+0x350>)
 80116f8:	2200      	movs	r2, #0
 80116fa:	2100      	movs	r1, #0
 80116fc:	2002      	movs	r0, #2
 80116fe:	f00f fee5 	bl	80214cc <UTIL_ADV_TRACE_COND_FSend>
 8011702:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8011704:	2b00      	cmp	r3, #0
 8011706:	d003      	beq.n	8011710 <SecureElementInit+0x334>
 8011708:	4a09      	ldr	r2, [pc, #36]	; (8011730 <SecureElementInit+0x354>)
 801170a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801170c:	6013      	str	r3, [r2, #0]
 801170e:	e002      	b.n	8011716 <SecureElementInit+0x33a>
 8011710:	4b07      	ldr	r3, [pc, #28]	; (8011730 <SecureElementInit+0x354>)
 8011712:	4a08      	ldr	r2, [pc, #32]	; (8011734 <SecureElementInit+0x358>)
 8011714:	601a      	str	r2, [r3, #0]
 8011716:	4808      	ldr	r0, [pc, #32]	; (8011738 <SecureElementInit+0x35c>)
 8011718:	f7f4 fd1f 	bl	800615a <GetUniqueId>
 801171c:	4b04      	ldr	r3, [pc, #16]	; (8011730 <SecureElementInit+0x354>)
 801171e:	681b      	ldr	r3, [r3, #0]
 8011720:	4798      	blx	r3
 8011722:	2300      	movs	r3, #0
 8011724:	4618      	mov	r0, r3
 8011726:	3734      	adds	r7, #52	; 0x34
 8011728:	46bd      	mov	sp, r7
 801172a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801172c:	08025f60 	.word	0x08025f60
 8011730:	20000a4c 	.word	0x20000a4c
 8011734:	080112ed 	.word	0x080112ed
 8011738:	2000008c 	.word	0x2000008c

0801173c <SecureElementRestoreNvmCtx>:
 801173c:	b580      	push	{r7, lr}
 801173e:	b082      	sub	sp, #8
 8011740:	af00      	add	r7, sp, #0
 8011742:	6078      	str	r0, [r7, #4]
 8011744:	687b      	ldr	r3, [r7, #4]
 8011746:	2b00      	cmp	r3, #0
 8011748:	d006      	beq.n	8011758 <SecureElementRestoreNvmCtx+0x1c>
 801174a:	22ba      	movs	r2, #186	; 0xba
 801174c:	6879      	ldr	r1, [r7, #4]
 801174e:	4805      	ldr	r0, [pc, #20]	; (8011764 <SecureElementRestoreNvmCtx+0x28>)
 8011750:	f00b ff6b 	bl	801d62a <memcpy1>
 8011754:	2300      	movs	r3, #0
 8011756:	e000      	b.n	801175a <SecureElementRestoreNvmCtx+0x1e>
 8011758:	2302      	movs	r3, #2
 801175a:	4618      	mov	r0, r3
 801175c:	3708      	adds	r7, #8
 801175e:	46bd      	mov	sp, r7
 8011760:	bd80      	pop	{r7, pc}
 8011762:	bf00      	nop
 8011764:	2000008c 	.word	0x2000008c

08011768 <SecureElementGetNvmCtx>:
 8011768:	b480      	push	{r7}
 801176a:	b083      	sub	sp, #12
 801176c:	af00      	add	r7, sp, #0
 801176e:	6078      	str	r0, [r7, #4]
 8011770:	687b      	ldr	r3, [r7, #4]
 8011772:	22ba      	movs	r2, #186	; 0xba
 8011774:	601a      	str	r2, [r3, #0]
 8011776:	4b03      	ldr	r3, [pc, #12]	; (8011784 <SecureElementGetNvmCtx+0x1c>)
 8011778:	4618      	mov	r0, r3
 801177a:	370c      	adds	r7, #12
 801177c:	46bd      	mov	sp, r7
 801177e:	bc80      	pop	{r7}
 8011780:	4770      	bx	lr
 8011782:	bf00      	nop
 8011784:	2000008c 	.word	0x2000008c

08011788 <SecureElementSetKey>:
 8011788:	b580      	push	{r7, lr}
 801178a:	b088      	sub	sp, #32
 801178c:	af00      	add	r7, sp, #0
 801178e:	4603      	mov	r3, r0
 8011790:	6039      	str	r1, [r7, #0]
 8011792:	71fb      	strb	r3, [r7, #7]
 8011794:	683b      	ldr	r3, [r7, #0]
 8011796:	2b00      	cmp	r3, #0
 8011798:	d101      	bne.n	801179e <SecureElementSetKey+0x16>
 801179a:	2302      	movs	r3, #2
 801179c:	e04f      	b.n	801183e <SecureElementSetKey+0xb6>
 801179e:	2300      	movs	r3, #0
 80117a0:	77fb      	strb	r3, [r7, #31]
 80117a2:	e048      	b.n	8011836 <SecureElementSetKey+0xae>
 80117a4:	7ffa      	ldrb	r2, [r7, #31]
 80117a6:	4928      	ldr	r1, [pc, #160]	; (8011848 <SecureElementSetKey+0xc0>)
 80117a8:	4613      	mov	r3, r2
 80117aa:	011b      	lsls	r3, r3, #4
 80117ac:	4413      	add	r3, r2
 80117ae:	440b      	add	r3, r1
 80117b0:	3310      	adds	r3, #16
 80117b2:	781b      	ldrb	r3, [r3, #0]
 80117b4:	79fa      	ldrb	r2, [r7, #7]
 80117b6:	429a      	cmp	r2, r3
 80117b8:	d13a      	bne.n	8011830 <SecureElementSetKey+0xa8>
 80117ba:	79fb      	ldrb	r3, [r7, #7]
 80117bc:	2b80      	cmp	r3, #128	; 0x80
 80117be:	d125      	bne.n	801180c <SecureElementSetKey+0x84>
 80117c0:	2306      	movs	r3, #6
 80117c2:	77bb      	strb	r3, [r7, #30]
 80117c4:	2300      	movs	r3, #0
 80117c6:	60fb      	str	r3, [r7, #12]
 80117c8:	f107 0310 	add.w	r3, r7, #16
 80117cc:	2200      	movs	r2, #0
 80117ce:	601a      	str	r2, [r3, #0]
 80117d0:	605a      	str	r2, [r3, #4]
 80117d2:	609a      	str	r2, [r3, #8]
 80117d4:	f107 030c 	add.w	r3, r7, #12
 80117d8:	227f      	movs	r2, #127	; 0x7f
 80117da:	2110      	movs	r1, #16
 80117dc:	6838      	ldr	r0, [r7, #0]
 80117de:	f000 f884 	bl	80118ea <SecureElementAesEncrypt>
 80117e2:	4603      	mov	r3, r0
 80117e4:	77bb      	strb	r3, [r7, #30]
 80117e6:	7ffa      	ldrb	r2, [r7, #31]
 80117e8:	4613      	mov	r3, r2
 80117ea:	011b      	lsls	r3, r3, #4
 80117ec:	4413      	add	r3, r2
 80117ee:	3310      	adds	r3, #16
 80117f0:	4a15      	ldr	r2, [pc, #84]	; (8011848 <SecureElementSetKey+0xc0>)
 80117f2:	4413      	add	r3, r2
 80117f4:	3301      	adds	r3, #1
 80117f6:	f107 010c 	add.w	r1, r7, #12
 80117fa:	2210      	movs	r2, #16
 80117fc:	4618      	mov	r0, r3
 80117fe:	f00b ff14 	bl	801d62a <memcpy1>
 8011802:	4b12      	ldr	r3, [pc, #72]	; (801184c <SecureElementSetKey+0xc4>)
 8011804:	681b      	ldr	r3, [r3, #0]
 8011806:	4798      	blx	r3
 8011808:	7fbb      	ldrb	r3, [r7, #30]
 801180a:	e018      	b.n	801183e <SecureElementSetKey+0xb6>
 801180c:	7ffa      	ldrb	r2, [r7, #31]
 801180e:	4613      	mov	r3, r2
 8011810:	011b      	lsls	r3, r3, #4
 8011812:	4413      	add	r3, r2
 8011814:	3310      	adds	r3, #16
 8011816:	4a0c      	ldr	r2, [pc, #48]	; (8011848 <SecureElementSetKey+0xc0>)
 8011818:	4413      	add	r3, r2
 801181a:	3301      	adds	r3, #1
 801181c:	2210      	movs	r2, #16
 801181e:	6839      	ldr	r1, [r7, #0]
 8011820:	4618      	mov	r0, r3
 8011822:	f00b ff02 	bl	801d62a <memcpy1>
 8011826:	4b09      	ldr	r3, [pc, #36]	; (801184c <SecureElementSetKey+0xc4>)
 8011828:	681b      	ldr	r3, [r3, #0]
 801182a:	4798      	blx	r3
 801182c:	2300      	movs	r3, #0
 801182e:	e006      	b.n	801183e <SecureElementSetKey+0xb6>
 8011830:	7ffb      	ldrb	r3, [r7, #31]
 8011832:	3301      	adds	r3, #1
 8011834:	77fb      	strb	r3, [r7, #31]
 8011836:	7ffb      	ldrb	r3, [r7, #31]
 8011838:	2b09      	cmp	r3, #9
 801183a:	d9b3      	bls.n	80117a4 <SecureElementSetKey+0x1c>
 801183c:	2303      	movs	r3, #3
 801183e:	4618      	mov	r0, r3
 8011840:	3720      	adds	r7, #32
 8011842:	46bd      	mov	sp, r7
 8011844:	bd80      	pop	{r7, pc}
 8011846:	bf00      	nop
 8011848:	2000008c 	.word	0x2000008c
 801184c:	20000a4c 	.word	0x20000a4c

08011850 <SecureElementComputeAesCmac>:
 8011850:	b580      	push	{r7, lr}
 8011852:	b086      	sub	sp, #24
 8011854:	af02      	add	r7, sp, #8
 8011856:	60f8      	str	r0, [r7, #12]
 8011858:	60b9      	str	r1, [r7, #8]
 801185a:	4611      	mov	r1, r2
 801185c:	461a      	mov	r2, r3
 801185e:	460b      	mov	r3, r1
 8011860:	80fb      	strh	r3, [r7, #6]
 8011862:	4613      	mov	r3, r2
 8011864:	717b      	strb	r3, [r7, #5]
 8011866:	797b      	ldrb	r3, [r7, #5]
 8011868:	2b7e      	cmp	r3, #126	; 0x7e
 801186a:	d901      	bls.n	8011870 <SecureElementComputeAesCmac+0x20>
 801186c:	2303      	movs	r3, #3
 801186e:	e009      	b.n	8011884 <SecureElementComputeAesCmac+0x34>
 8011870:	7979      	ldrb	r1, [r7, #5]
 8011872:	88fa      	ldrh	r2, [r7, #6]
 8011874:	69bb      	ldr	r3, [r7, #24]
 8011876:	9300      	str	r3, [sp, #0]
 8011878:	460b      	mov	r3, r1
 801187a:	68b9      	ldr	r1, [r7, #8]
 801187c:	68f8      	ldr	r0, [r7, #12]
 801187e:	f7ff fd3b 	bl	80112f8 <ComputeCmac>
 8011882:	4603      	mov	r3, r0
 8011884:	4618      	mov	r0, r3
 8011886:	3710      	adds	r7, #16
 8011888:	46bd      	mov	sp, r7
 801188a:	bd80      	pop	{r7, pc}

0801188c <SecureElementVerifyAesCmac>:
 801188c:	b580      	push	{r7, lr}
 801188e:	b088      	sub	sp, #32
 8011890:	af02      	add	r7, sp, #8
 8011892:	60f8      	str	r0, [r7, #12]
 8011894:	607a      	str	r2, [r7, #4]
 8011896:	461a      	mov	r2, r3
 8011898:	460b      	mov	r3, r1
 801189a:	817b      	strh	r3, [r7, #10]
 801189c:	4613      	mov	r3, r2
 801189e:	727b      	strb	r3, [r7, #9]
 80118a0:	2306      	movs	r3, #6
 80118a2:	75fb      	strb	r3, [r7, #23]
 80118a4:	68fb      	ldr	r3, [r7, #12]
 80118a6:	2b00      	cmp	r3, #0
 80118a8:	d101      	bne.n	80118ae <SecureElementVerifyAesCmac+0x22>
 80118aa:	2302      	movs	r3, #2
 80118ac:	e019      	b.n	80118e2 <SecureElementVerifyAesCmac+0x56>
 80118ae:	2300      	movs	r3, #0
 80118b0:	613b      	str	r3, [r7, #16]
 80118b2:	7a79      	ldrb	r1, [r7, #9]
 80118b4:	897a      	ldrh	r2, [r7, #10]
 80118b6:	f107 0310 	add.w	r3, r7, #16
 80118ba:	9300      	str	r3, [sp, #0]
 80118bc:	460b      	mov	r3, r1
 80118be:	68f9      	ldr	r1, [r7, #12]
 80118c0:	2000      	movs	r0, #0
 80118c2:	f7ff fd19 	bl	80112f8 <ComputeCmac>
 80118c6:	4603      	mov	r3, r0
 80118c8:	75fb      	strb	r3, [r7, #23]
 80118ca:	7dfb      	ldrb	r3, [r7, #23]
 80118cc:	2b00      	cmp	r3, #0
 80118ce:	d001      	beq.n	80118d4 <SecureElementVerifyAesCmac+0x48>
 80118d0:	7dfb      	ldrb	r3, [r7, #23]
 80118d2:	e006      	b.n	80118e2 <SecureElementVerifyAesCmac+0x56>
 80118d4:	693b      	ldr	r3, [r7, #16]
 80118d6:	687a      	ldr	r2, [r7, #4]
 80118d8:	429a      	cmp	r2, r3
 80118da:	d001      	beq.n	80118e0 <SecureElementVerifyAesCmac+0x54>
 80118dc:	2301      	movs	r3, #1
 80118de:	75fb      	strb	r3, [r7, #23]
 80118e0:	7dfb      	ldrb	r3, [r7, #23]
 80118e2:	4618      	mov	r0, r3
 80118e4:	3718      	adds	r7, #24
 80118e6:	46bd      	mov	sp, r7
 80118e8:	bd80      	pop	{r7, pc}

080118ea <SecureElementAesEncrypt>:
 80118ea:	b580      	push	{r7, lr}
 80118ec:	b0c2      	sub	sp, #264	; 0x108
 80118ee:	af00      	add	r7, sp, #0
 80118f0:	60f8      	str	r0, [r7, #12]
 80118f2:	4608      	mov	r0, r1
 80118f4:	4611      	mov	r1, r2
 80118f6:	1d3a      	adds	r2, r7, #4
 80118f8:	6013      	str	r3, [r2, #0]
 80118fa:	4603      	mov	r3, r0
 80118fc:	817b      	strh	r3, [r7, #10]
 80118fe:	460b      	mov	r3, r1
 8011900:	727b      	strb	r3, [r7, #9]
 8011902:	2306      	movs	r3, #6
 8011904:	f887 3106 	strb.w	r3, [r7, #262]	; 0x106
 8011908:	68fb      	ldr	r3, [r7, #12]
 801190a:	2b00      	cmp	r3, #0
 801190c:	d003      	beq.n	8011916 <SecureElementAesEncrypt+0x2c>
 801190e:	1d3b      	adds	r3, r7, #4
 8011910:	681b      	ldr	r3, [r3, #0]
 8011912:	2b00      	cmp	r3, #0
 8011914:	d101      	bne.n	801191a <SecureElementAesEncrypt+0x30>
 8011916:	2302      	movs	r3, #2
 8011918:	e043      	b.n	80119a2 <SecureElementAesEncrypt+0xb8>
 801191a:	897b      	ldrh	r3, [r7, #10]
 801191c:	f003 030f 	and.w	r3, r3, #15
 8011920:	b29b      	uxth	r3, r3
 8011922:	2b00      	cmp	r3, #0
 8011924:	d001      	beq.n	801192a <SecureElementAesEncrypt+0x40>
 8011926:	2305      	movs	r3, #5
 8011928:	e03b      	b.n	80119a2 <SecureElementAesEncrypt+0xb8>
 801192a:	f107 0314 	add.w	r3, r7, #20
 801192e:	22f0      	movs	r2, #240	; 0xf0
 8011930:	2100      	movs	r1, #0
 8011932:	4618      	mov	r0, r3
 8011934:	f00b feb4 	bl	801d6a0 <memset1>
 8011938:	f107 0210 	add.w	r2, r7, #16
 801193c:	7a7b      	ldrb	r3, [r7, #9]
 801193e:	4611      	mov	r1, r2
 8011940:	4618      	mov	r0, r3
 8011942:	f7ff fca5 	bl	8011290 <GetKeyByID>
 8011946:	4603      	mov	r3, r0
 8011948:	f887 3106 	strb.w	r3, [r7, #262]	; 0x106
 801194c:	f897 3106 	ldrb.w	r3, [r7, #262]	; 0x106
 8011950:	2b00      	cmp	r3, #0
 8011952:	d124      	bne.n	801199e <SecureElementAesEncrypt+0xb4>
 8011954:	693b      	ldr	r3, [r7, #16]
 8011956:	3301      	adds	r3, #1
 8011958:	f107 0214 	add.w	r2, r7, #20
 801195c:	2110      	movs	r1, #16
 801195e:	4618      	mov	r0, r3
 8011960:	f7ff fb6e 	bl	8011040 <lorawan_aes_set_key>
 8011964:	2300      	movs	r3, #0
 8011966:	f887 3107 	strb.w	r3, [r7, #263]	; 0x107
 801196a:	e015      	b.n	8011998 <SecureElementAesEncrypt+0xae>
 801196c:	f897 3107 	ldrb.w	r3, [r7, #263]	; 0x107
 8011970:	68fa      	ldr	r2, [r7, #12]
 8011972:	18d0      	adds	r0, r2, r3
 8011974:	f897 3107 	ldrb.w	r3, [r7, #263]	; 0x107
 8011978:	1d3a      	adds	r2, r7, #4
 801197a:	6812      	ldr	r2, [r2, #0]
 801197c:	4413      	add	r3, r2
 801197e:	f107 0214 	add.w	r2, r7, #20
 8011982:	4619      	mov	r1, r3
 8011984:	f7ff fc3a 	bl	80111fc <lorawan_aes_encrypt>
 8011988:	f897 3107 	ldrb.w	r3, [r7, #263]	; 0x107
 801198c:	3310      	adds	r3, #16
 801198e:	f887 3107 	strb.w	r3, [r7, #263]	; 0x107
 8011992:	897b      	ldrh	r3, [r7, #10]
 8011994:	3b10      	subs	r3, #16
 8011996:	817b      	strh	r3, [r7, #10]
 8011998:	897b      	ldrh	r3, [r7, #10]
 801199a:	2b00      	cmp	r3, #0
 801199c:	d1e6      	bne.n	801196c <SecureElementAesEncrypt+0x82>
 801199e:	f897 3106 	ldrb.w	r3, [r7, #262]	; 0x106
 80119a2:	4618      	mov	r0, r3
 80119a4:	f507 7784 	add.w	r7, r7, #264	; 0x108
 80119a8:	46bd      	mov	sp, r7
 80119aa:	bd80      	pop	{r7, pc}

080119ac <SecureElementDeriveAndStoreKey>:
 80119ac:	b580      	push	{r7, lr}
 80119ae:	b08a      	sub	sp, #40	; 0x28
 80119b0:	af00      	add	r7, sp, #0
 80119b2:	60f8      	str	r0, [r7, #12]
 80119b4:	60b9      	str	r1, [r7, #8]
 80119b6:	4611      	mov	r1, r2
 80119b8:	461a      	mov	r2, r3
 80119ba:	460b      	mov	r3, r1
 80119bc:	71fb      	strb	r3, [r7, #7]
 80119be:	4613      	mov	r3, r2
 80119c0:	71bb      	strb	r3, [r7, #6]
 80119c2:	2306      	movs	r3, #6
 80119c4:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 80119c8:	68bb      	ldr	r3, [r7, #8]
 80119ca:	2b00      	cmp	r3, #0
 80119cc:	d101      	bne.n	80119d2 <SecureElementDeriveAndStoreKey+0x26>
 80119ce:	2302      	movs	r3, #2
 80119d0:	e033      	b.n	8011a3a <SecureElementDeriveAndStoreKey+0x8e>
 80119d2:	79bb      	ldrb	r3, [r7, #6]
 80119d4:	2b7f      	cmp	r3, #127	; 0x7f
 80119d6:	d104      	bne.n	80119e2 <SecureElementDeriveAndStoreKey+0x36>
 80119d8:	79fb      	ldrb	r3, [r7, #7]
 80119da:	2b04      	cmp	r3, #4
 80119dc:	d001      	beq.n	80119e2 <SecureElementDeriveAndStoreKey+0x36>
 80119de:	2303      	movs	r3, #3
 80119e0:	e02b      	b.n	8011a3a <SecureElementDeriveAndStoreKey+0x8e>
 80119e2:	2300      	movs	r3, #0
 80119e4:	617b      	str	r3, [r7, #20]
 80119e6:	f107 0318 	add.w	r3, r7, #24
 80119ea:	2200      	movs	r2, #0
 80119ec:	601a      	str	r2, [r3, #0]
 80119ee:	605a      	str	r2, [r3, #4]
 80119f0:	609a      	str	r2, [r3, #8]
 80119f2:	f107 0314 	add.w	r3, r7, #20
 80119f6:	79fa      	ldrb	r2, [r7, #7]
 80119f8:	2110      	movs	r1, #16
 80119fa:	68b8      	ldr	r0, [r7, #8]
 80119fc:	f7ff ff75 	bl	80118ea <SecureElementAesEncrypt>
 8011a00:	4603      	mov	r3, r0
 8011a02:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 8011a06:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 8011a0a:	2b00      	cmp	r3, #0
 8011a0c:	d002      	beq.n	8011a14 <SecureElementDeriveAndStoreKey+0x68>
 8011a0e:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 8011a12:	e012      	b.n	8011a3a <SecureElementDeriveAndStoreKey+0x8e>
 8011a14:	f107 0214 	add.w	r2, r7, #20
 8011a18:	79bb      	ldrb	r3, [r7, #6]
 8011a1a:	4611      	mov	r1, r2
 8011a1c:	4618      	mov	r0, r3
 8011a1e:	f7ff feb3 	bl	8011788 <SecureElementSetKey>
 8011a22:	4603      	mov	r3, r0
 8011a24:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 8011a28:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 8011a2c:	2b00      	cmp	r3, #0
 8011a2e:	d002      	beq.n	8011a36 <SecureElementDeriveAndStoreKey+0x8a>
 8011a30:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 8011a34:	e001      	b.n	8011a3a <SecureElementDeriveAndStoreKey+0x8e>
 8011a36:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 8011a3a:	4618      	mov	r0, r3
 8011a3c:	3728      	adds	r7, #40	; 0x28
 8011a3e:	46bd      	mov	sp, r7
 8011a40:	bd80      	pop	{r7, pc}

08011a42 <SecureElementProcessJoinAccept>:
 8011a42:	b580      	push	{r7, lr}
 8011a44:	b086      	sub	sp, #24
 8011a46:	af00      	add	r7, sp, #0
 8011a48:	60b9      	str	r1, [r7, #8]
 8011a4a:	607b      	str	r3, [r7, #4]
 8011a4c:	4603      	mov	r3, r0
 8011a4e:	73fb      	strb	r3, [r7, #15]
 8011a50:	4613      	mov	r3, r2
 8011a52:	81bb      	strh	r3, [r7, #12]
 8011a54:	687b      	ldr	r3, [r7, #4]
 8011a56:	2b00      	cmp	r3, #0
 8011a58:	d005      	beq.n	8011a66 <SecureElementProcessJoinAccept+0x24>
 8011a5a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8011a5c:	2b00      	cmp	r3, #0
 8011a5e:	d002      	beq.n	8011a66 <SecureElementProcessJoinAccept+0x24>
 8011a60:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8011a62:	2b00      	cmp	r3, #0
 8011a64:	d101      	bne.n	8011a6a <SecureElementProcessJoinAccept+0x28>
 8011a66:	2302      	movs	r3, #2
 8011a68:	e064      	b.n	8011b34 <SecureElementProcessJoinAccept+0xf2>
 8011a6a:	f897 3020 	ldrb.w	r3, [r7, #32]
 8011a6e:	2b21      	cmp	r3, #33	; 0x21
 8011a70:	d901      	bls.n	8011a76 <SecureElementProcessJoinAccept+0x34>
 8011a72:	2305      	movs	r3, #5
 8011a74:	e05e      	b.n	8011b34 <SecureElementProcessJoinAccept+0xf2>
 8011a76:	2301      	movs	r3, #1
 8011a78:	75fb      	strb	r3, [r7, #23]
 8011a7a:	f897 3020 	ldrb.w	r3, [r7, #32]
 8011a7e:	b29b      	uxth	r3, r3
 8011a80:	461a      	mov	r2, r3
 8011a82:	6879      	ldr	r1, [r7, #4]
 8011a84:	6a78      	ldr	r0, [r7, #36]	; 0x24
 8011a86:	f00b fdd0 	bl	801d62a <memcpy1>
 8011a8a:	687b      	ldr	r3, [r7, #4]
 8011a8c:	1c58      	adds	r0, r3, #1
 8011a8e:	f897 3020 	ldrb.w	r3, [r7, #32]
 8011a92:	b29b      	uxth	r3, r3
 8011a94:	3b01      	subs	r3, #1
 8011a96:	b299      	uxth	r1, r3
 8011a98:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8011a9a:	3301      	adds	r3, #1
 8011a9c:	7dfa      	ldrb	r2, [r7, #23]
 8011a9e:	f7ff ff24 	bl	80118ea <SecureElementAesEncrypt>
 8011aa2:	4603      	mov	r3, r0
 8011aa4:	2b00      	cmp	r3, #0
 8011aa6:	d001      	beq.n	8011aac <SecureElementProcessJoinAccept+0x6a>
 8011aa8:	2307      	movs	r3, #7
 8011aaa:	e043      	b.n	8011b34 <SecureElementProcessJoinAccept+0xf2>
 8011aac:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8011aae:	330b      	adds	r3, #11
 8011ab0:	781b      	ldrb	r3, [r3, #0]
 8011ab2:	09db      	lsrs	r3, r3, #7
 8011ab4:	b2da      	uxtb	r2, r3
 8011ab6:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8011ab8:	701a      	strb	r2, [r3, #0]
 8011aba:	2300      	movs	r3, #0
 8011abc:	613b      	str	r3, [r7, #16]
 8011abe:	f897 3020 	ldrb.w	r3, [r7, #32]
 8011ac2:	3b04      	subs	r3, #4
 8011ac4:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8011ac6:	4413      	add	r3, r2
 8011ac8:	781b      	ldrb	r3, [r3, #0]
 8011aca:	613b      	str	r3, [r7, #16]
 8011acc:	f897 3020 	ldrb.w	r3, [r7, #32]
 8011ad0:	3b03      	subs	r3, #3
 8011ad2:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8011ad4:	4413      	add	r3, r2
 8011ad6:	781b      	ldrb	r3, [r3, #0]
 8011ad8:	021b      	lsls	r3, r3, #8
 8011ada:	693a      	ldr	r2, [r7, #16]
 8011adc:	4313      	orrs	r3, r2
 8011ade:	613b      	str	r3, [r7, #16]
 8011ae0:	f897 3020 	ldrb.w	r3, [r7, #32]
 8011ae4:	3b02      	subs	r3, #2
 8011ae6:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8011ae8:	4413      	add	r3, r2
 8011aea:	781b      	ldrb	r3, [r3, #0]
 8011aec:	041b      	lsls	r3, r3, #16
 8011aee:	693a      	ldr	r2, [r7, #16]
 8011af0:	4313      	orrs	r3, r2
 8011af2:	613b      	str	r3, [r7, #16]
 8011af4:	f897 3020 	ldrb.w	r3, [r7, #32]
 8011af8:	3b01      	subs	r3, #1
 8011afa:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8011afc:	4413      	add	r3, r2
 8011afe:	781b      	ldrb	r3, [r3, #0]
 8011b00:	061b      	lsls	r3, r3, #24
 8011b02:	693a      	ldr	r2, [r7, #16]
 8011b04:	4313      	orrs	r3, r2
 8011b06:	613b      	str	r3, [r7, #16]
 8011b08:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8011b0a:	781b      	ldrb	r3, [r3, #0]
 8011b0c:	2b00      	cmp	r3, #0
 8011b0e:	d10e      	bne.n	8011b2e <SecureElementProcessJoinAccept+0xec>
 8011b10:	f897 3020 	ldrb.w	r3, [r7, #32]
 8011b14:	b29b      	uxth	r3, r3
 8011b16:	3b04      	subs	r3, #4
 8011b18:	b299      	uxth	r1, r3
 8011b1a:	2301      	movs	r3, #1
 8011b1c:	693a      	ldr	r2, [r7, #16]
 8011b1e:	6a78      	ldr	r0, [r7, #36]	; 0x24
 8011b20:	f7ff feb4 	bl	801188c <SecureElementVerifyAesCmac>
 8011b24:	4603      	mov	r3, r0
 8011b26:	2b00      	cmp	r3, #0
 8011b28:	d003      	beq.n	8011b32 <SecureElementProcessJoinAccept+0xf0>
 8011b2a:	2301      	movs	r3, #1
 8011b2c:	e002      	b.n	8011b34 <SecureElementProcessJoinAccept+0xf2>
 8011b2e:	2304      	movs	r3, #4
 8011b30:	e000      	b.n	8011b34 <SecureElementProcessJoinAccept+0xf2>
 8011b32:	2300      	movs	r3, #0
 8011b34:	4618      	mov	r0, r3
 8011b36:	3718      	adds	r7, #24
 8011b38:	46bd      	mov	sp, r7
 8011b3a:	bd80      	pop	{r7, pc}

08011b3c <SecureElementRandomNumber>:
 8011b3c:	b580      	push	{r7, lr}
 8011b3e:	b082      	sub	sp, #8
 8011b40:	af00      	add	r7, sp, #0
 8011b42:	6078      	str	r0, [r7, #4]
 8011b44:	687b      	ldr	r3, [r7, #4]
 8011b46:	2b00      	cmp	r3, #0
 8011b48:	d101      	bne.n	8011b4e <SecureElementRandomNumber+0x12>
 8011b4a:	2302      	movs	r3, #2
 8011b4c:	e006      	b.n	8011b5c <SecureElementRandomNumber+0x20>
 8011b4e:	4b05      	ldr	r3, [pc, #20]	; (8011b64 <SecureElementRandomNumber+0x28>)
 8011b50:	695b      	ldr	r3, [r3, #20]
 8011b52:	4798      	blx	r3
 8011b54:	4602      	mov	r2, r0
 8011b56:	687b      	ldr	r3, [r7, #4]
 8011b58:	601a      	str	r2, [r3, #0]
 8011b5a:	2300      	movs	r3, #0
 8011b5c:	4618      	mov	r0, r3
 8011b5e:	3708      	adds	r7, #8
 8011b60:	46bd      	mov	sp, r7
 8011b62:	bd80      	pop	{r7, pc}
 8011b64:	0802683c 	.word	0x0802683c

08011b68 <SecureElementSetDevEui>:
 8011b68:	b580      	push	{r7, lr}
 8011b6a:	b082      	sub	sp, #8
 8011b6c:	af00      	add	r7, sp, #0
 8011b6e:	6078      	str	r0, [r7, #4]
 8011b70:	687b      	ldr	r3, [r7, #4]
 8011b72:	2b00      	cmp	r3, #0
 8011b74:	d101      	bne.n	8011b7a <SecureElementSetDevEui+0x12>
 8011b76:	2302      	movs	r3, #2
 8011b78:	e008      	b.n	8011b8c <SecureElementSetDevEui+0x24>
 8011b7a:	2208      	movs	r2, #8
 8011b7c:	6879      	ldr	r1, [r7, #4]
 8011b7e:	4805      	ldr	r0, [pc, #20]	; (8011b94 <SecureElementSetDevEui+0x2c>)
 8011b80:	f00b fd53 	bl	801d62a <memcpy1>
 8011b84:	4b04      	ldr	r3, [pc, #16]	; (8011b98 <SecureElementSetDevEui+0x30>)
 8011b86:	681b      	ldr	r3, [r3, #0]
 8011b88:	4798      	blx	r3
 8011b8a:	2300      	movs	r3, #0
 8011b8c:	4618      	mov	r0, r3
 8011b8e:	3708      	adds	r7, #8
 8011b90:	46bd      	mov	sp, r7
 8011b92:	bd80      	pop	{r7, pc}
 8011b94:	2000008c 	.word	0x2000008c
 8011b98:	20000a4c 	.word	0x20000a4c

08011b9c <SecureElementGetDevEui>:
 8011b9c:	b480      	push	{r7}
 8011b9e:	af00      	add	r7, sp, #0
 8011ba0:	4b02      	ldr	r3, [pc, #8]	; (8011bac <SecureElementGetDevEui+0x10>)
 8011ba2:	4618      	mov	r0, r3
 8011ba4:	46bd      	mov	sp, r7
 8011ba6:	bc80      	pop	{r7}
 8011ba8:	4770      	bx	lr
 8011baa:	bf00      	nop
 8011bac:	2000008c 	.word	0x2000008c

08011bb0 <SecureElementSetJoinEui>:
 8011bb0:	b580      	push	{r7, lr}
 8011bb2:	b082      	sub	sp, #8
 8011bb4:	af00      	add	r7, sp, #0
 8011bb6:	6078      	str	r0, [r7, #4]
 8011bb8:	687b      	ldr	r3, [r7, #4]
 8011bba:	2b00      	cmp	r3, #0
 8011bbc:	d101      	bne.n	8011bc2 <SecureElementSetJoinEui+0x12>
 8011bbe:	2302      	movs	r3, #2
 8011bc0:	e008      	b.n	8011bd4 <SecureElementSetJoinEui+0x24>
 8011bc2:	2208      	movs	r2, #8
 8011bc4:	6879      	ldr	r1, [r7, #4]
 8011bc6:	4805      	ldr	r0, [pc, #20]	; (8011bdc <SecureElementSetJoinEui+0x2c>)
 8011bc8:	f00b fd2f 	bl	801d62a <memcpy1>
 8011bcc:	4b04      	ldr	r3, [pc, #16]	; (8011be0 <SecureElementSetJoinEui+0x30>)
 8011bce:	681b      	ldr	r3, [r3, #0]
 8011bd0:	4798      	blx	r3
 8011bd2:	2300      	movs	r3, #0
 8011bd4:	4618      	mov	r0, r3
 8011bd6:	3708      	adds	r7, #8
 8011bd8:	46bd      	mov	sp, r7
 8011bda:	bd80      	pop	{r7, pc}
 8011bdc:	20000094 	.word	0x20000094
 8011be0:	20000a4c 	.word	0x20000a4c

08011be4 <SecureElementGetJoinEui>:
 8011be4:	b480      	push	{r7}
 8011be6:	af00      	add	r7, sp, #0
 8011be8:	4b02      	ldr	r3, [pc, #8]	; (8011bf4 <SecureElementGetJoinEui+0x10>)
 8011bea:	4618      	mov	r0, r3
 8011bec:	46bd      	mov	sp, r7
 8011bee:	bc80      	pop	{r7}
 8011bf0:	4770      	bx	lr
 8011bf2:	bf00      	nop
 8011bf4:	20000094 	.word	0x20000094

08011bf8 <LmHandlerInit>:

static bool CtxRestoreDone = false;

/* Exported functions ---------------------------------------------------------*/
LmHandlerErrorStatus_t LmHandlerInit(LmHandlerCallbacks_t *handlerCallbacks)
{
 8011bf8:	b580      	push	{r7, lr}
 8011bfa:	b082      	sub	sp, #8
 8011bfc:	af00      	add	r7, sp, #0
 8011bfe:	6078      	str	r0, [r7, #4]
  UTIL_MEM_cpy_8((void *)&LmHandlerCallbacks, (const void *)handlerCallbacks, sizeof(LmHandlerCallbacks_t));
 8011c00:	2218      	movs	r2, #24
 8011c02:	6879      	ldr	r1, [r7, #4]
 8011c04:	4816      	ldr	r0, [pc, #88]	; (8011c60 <LmHandlerInit+0x68>)
 8011c06:	f00e fca1 	bl	802054c <UTIL_MEM_cpy_8>

  LoRaMacPrimitives.MacMcpsConfirm = McpsConfirm;
 8011c0a:	4b16      	ldr	r3, [pc, #88]	; (8011c64 <LmHandlerInit+0x6c>)
 8011c0c:	4a16      	ldr	r2, [pc, #88]	; (8011c68 <LmHandlerInit+0x70>)
 8011c0e:	601a      	str	r2, [r3, #0]
  LoRaMacPrimitives.MacMcpsIndication = McpsIndication;
 8011c10:	4b14      	ldr	r3, [pc, #80]	; (8011c64 <LmHandlerInit+0x6c>)
 8011c12:	4a16      	ldr	r2, [pc, #88]	; (8011c6c <LmHandlerInit+0x74>)
 8011c14:	605a      	str	r2, [r3, #4]
  LoRaMacPrimitives.MacMlmeConfirm = MlmeConfirm;
 8011c16:	4b13      	ldr	r3, [pc, #76]	; (8011c64 <LmHandlerInit+0x6c>)
 8011c18:	4a15      	ldr	r2, [pc, #84]	; (8011c70 <LmHandlerInit+0x78>)
 8011c1a:	609a      	str	r2, [r3, #8]
  LoRaMacPrimitives.MacMlmeIndication = MlmeIndication;
 8011c1c:	4b11      	ldr	r3, [pc, #68]	; (8011c64 <LmHandlerInit+0x6c>)
 8011c1e:	4a15      	ldr	r2, [pc, #84]	; (8011c74 <LmHandlerInit+0x7c>)
 8011c20:	60da      	str	r2, [r3, #12]
  LoRaMacCallbacks.GetBatteryLevel = LmHandlerCallbacks.GetBatteryLevel;
 8011c22:	4b0f      	ldr	r3, [pc, #60]	; (8011c60 <LmHandlerInit+0x68>)
 8011c24:	681b      	ldr	r3, [r3, #0]
 8011c26:	4a14      	ldr	r2, [pc, #80]	; (8011c78 <LmHandlerInit+0x80>)
 8011c28:	6013      	str	r3, [r2, #0]
  LoRaMacCallbacks.GetTemperatureLevel = LmHandlerCallbacks.GetTemperature;
 8011c2a:	4b0d      	ldr	r3, [pc, #52]	; (8011c60 <LmHandlerInit+0x68>)
 8011c2c:	685b      	ldr	r3, [r3, #4]
 8011c2e:	4a12      	ldr	r2, [pc, #72]	; (8011c78 <LmHandlerInit+0x80>)
 8011c30:	6053      	str	r3, [r2, #4]
  LoRaMacCallbacks.NvmContextChange = NvmCtxMgmtEvent;
 8011c32:	4b11      	ldr	r3, [pc, #68]	; (8011c78 <LmHandlerInit+0x80>)
 8011c34:	4a11      	ldr	r2, [pc, #68]	; (8011c7c <LmHandlerInit+0x84>)
 8011c36:	609a      	str	r2, [r3, #8]
  LoRaMacCallbacks.MacProcessNotify = LmHandlerCallbacks.OnMacProcess;
 8011c38:	4b09      	ldr	r3, [pc, #36]	; (8011c60 <LmHandlerInit+0x68>)
 8011c3a:	689b      	ldr	r3, [r3, #8]
 8011c3c:	4a0e      	ldr	r2, [pc, #56]	; (8011c78 <LmHandlerInit+0x80>)
 8011c3e:	60d3      	str	r3, [r2, #12]

  /*The LoRa-Alliance Compliance protocol package should always be initialized and activated.*/
  if (LmHandlerPackageRegister(PACKAGE_ID_COMPLIANCE, &LmhpComplianceParams) != LORAMAC_HANDLER_SUCCESS)
 8011c40:	490f      	ldr	r1, [pc, #60]	; (8011c80 <LmHandlerInit+0x88>)
 8011c42:	2000      	movs	r0, #0
 8011c44:	f000 fb22 	bl	801228c <LmHandlerPackageRegister>
 8011c48:	4603      	mov	r3, r0
 8011c4a:	2b00      	cmp	r3, #0
 8011c4c:	d002      	beq.n	8011c54 <LmHandlerInit+0x5c>
  {
    return LORAMAC_HANDLER_ERROR;
 8011c4e:	f04f 33ff 	mov.w	r3, #4294967295
 8011c52:	e000      	b.n	8011c56 <LmHandlerInit+0x5e>
  if (LmhpDataDistributionInit() != LORAMAC_HANDLER_SUCCESS)
  {
    return LORAMAC_HANDLER_ERROR;
  }
#endif /*LORAWAN_DATA_DISTRIB_MGT*/
  return LORAMAC_HANDLER_SUCCESS;
 8011c54:	2300      	movs	r3, #0
}
 8011c56:	4618      	mov	r0, r3
 8011c58:	3708      	adds	r7, #8
 8011c5a:	46bd      	mov	sp, r7
 8011c5c:	bd80      	pop	{r7, pc}
 8011c5e:	bf00      	nop
 8011c60:	20000a6c 	.word	0x20000a6c
 8011c64:	20000a84 	.word	0x20000a84
 8011c68:	080123d1 	.word	0x080123d1
 8011c6c:	08012439 	.word	0x08012439
 8011c70:	080124fd 	.word	0x080124fd
 8011c74:	0801259d 	.word	0x0801259d
 8011c78:	20000a94 	.word	0x20000a94
 8011c7c:	08012729 	.word	0x08012729
 8011c80:	20000160 	.word	0x20000160

08011c84 <LmHandlerConfigure>:

LmHandlerErrorStatus_t LmHandlerConfigure(LmHandlerParams_t *handlerParams)
{
 8011c84:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011c86:	b099      	sub	sp, #100	; 0x64
 8011c88:	af08      	add	r7, sp, #32
 8011c8a:	6078      	str	r0, [r7, #4]
  MibRequestConfirm_t mibReq;
  LoraInfo_t *loraInfo;

  UTIL_MEM_cpy_8((void *)&LmHandlerParams, (const void *)handlerParams, sizeof(LmHandlerParams_t));
 8011c8c:	2206      	movs	r2, #6
 8011c8e:	6879      	ldr	r1, [r7, #4]
 8011c90:	486c      	ldr	r0, [pc, #432]	; (8011e44 <LmHandlerConfigure+0x1c0>)
 8011c92:	f00e fc5b 	bl	802054c <UTIL_MEM_cpy_8>

#if ( LORAMAC_CLASSB_ENABLED == 1 )
  IsClassBSwitchPending = false;
#endif /* LORAMAC_CLASSB_ENABLED == 1 */

  loraInfo = LoraInfo_GetPtr();
 8011c96:	f7fe fa77 	bl	8010188 <LoraInfo_GetPtr>
 8011c9a:	63f8      	str	r0, [r7, #60]	; 0x3c

  if (0U != ((1 << (LmHandlerParams.ActiveRegion)) & (loraInfo->Region)))
 8011c9c:	4b69      	ldr	r3, [pc, #420]	; (8011e44 <LmHandlerConfigure+0x1c0>)
 8011c9e:	781b      	ldrb	r3, [r3, #0]
 8011ca0:	461a      	mov	r2, r3
 8011ca2:	2301      	movs	r3, #1
 8011ca4:	4093      	lsls	r3, r2
 8011ca6:	461a      	mov	r2, r3
 8011ca8:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8011caa:	685b      	ldr	r3, [r3, #4]
 8011cac:	4013      	ands	r3, r2
 8011cae:	2b00      	cmp	r3, #0
 8011cb0:	d00c      	beq.n	8011ccc <LmHandlerConfigure+0x48>
  {
    if (LoRaMacInitialization(&LoRaMacPrimitives, &LoRaMacCallbacks, LmHandlerParams.ActiveRegion) != LORAMAC_STATUS_OK)
 8011cb2:	4b64      	ldr	r3, [pc, #400]	; (8011e44 <LmHandlerConfigure+0x1c0>)
 8011cb4:	781b      	ldrb	r3, [r3, #0]
 8011cb6:	461a      	mov	r2, r3
 8011cb8:	4963      	ldr	r1, [pc, #396]	; (8011e48 <LmHandlerConfigure+0x1c4>)
 8011cba:	4864      	ldr	r0, [pc, #400]	; (8011e4c <LmHandlerConfigure+0x1c8>)
 8011cbc:	f004 fb26 	bl	801630c <LoRaMacInitialization>
 8011cc0:	4603      	mov	r3, r0
 8011cc2:	2b00      	cmp	r3, #0
 8011cc4:	d009      	beq.n	8011cda <LmHandlerConfigure+0x56>
    {
      return LORAMAC_HANDLER_ERROR;
 8011cc6:	f04f 33ff 	mov.w	r3, #4294967295
 8011cca:	e0b7      	b.n	8011e3c <LmHandlerConfigure+0x1b8>
    }
  }
  else
  {
    MW_LOG(TS_ON, VLEVEL_ALWAYS, "error: Region is not defined in the MW: set lorawan_conf.h accordingly\r\n");
 8011ccc:	4b60      	ldr	r3, [pc, #384]	; (8011e50 <LmHandlerConfigure+0x1cc>)
 8011cce:	2201      	movs	r2, #1
 8011cd0:	2100      	movs	r1, #0
 8011cd2:	2000      	movs	r0, #0
 8011cd4:	f00f fbfa 	bl	80214cc <UTIL_ADV_TRACE_COND_FSend>
    while (1) {}  /* error: Region is not defined in the MW */
 8011cd8:	e7fe      	b.n	8011cd8 <LmHandlerConfigure+0x54>
  }

  /* Try to restore from NVM and query the mac if possible. */
  if (NvmCtxMgmtRestore() == NVMCTXMGMT_STATUS_SUCCESS)
 8011cda:	f000 fd36 	bl	801274a <NvmCtxMgmtRestore>
 8011cde:	4603      	mov	r3, r0
 8011ce0:	2b00      	cmp	r3, #0
 8011ce2:	d103      	bne.n	8011cec <LmHandlerConfigure+0x68>
  {
    CtxRestoreDone = true;
 8011ce4:	4b5b      	ldr	r3, [pc, #364]	; (8011e54 <LmHandlerConfigure+0x1d0>)
 8011ce6:	2201      	movs	r2, #1
 8011ce8:	701a      	strb	r2, [r3, #0]
 8011cea:	e01c      	b.n	8011d26 <LmHandlerConfigure+0xa2>
  }
  else
  {
    CtxRestoreDone = false;
 8011cec:	4b59      	ldr	r3, [pc, #356]	; (8011e54 <LmHandlerConfigure+0x1d0>)
 8011cee:	2200      	movs	r2, #0
 8011cf0:	701a      	strb	r2, [r3, #0]
#if ( LORAMAC_CLASSB_ENABLED == 1 )
    SecureElementSetObjHandler(SLOT_RAND_ZERO_KEY, KMS_ZERO_KEY_OBJECT_HANDLE);
#endif /* LORAMAC_CLASSB_ENABLED */
#endif /* LORAWAN_KMS == 1 */
    /* Read secure-element DEV_EUI and JOIN_EUI values. */
    mibReq.Type = MIB_DEV_EUI;
 8011cf2:	2302      	movs	r3, #2
 8011cf4:	763b      	strb	r3, [r7, #24]
    LoRaMacMibGetRequestConfirm(&mibReq);
 8011cf6:	f107 0318 	add.w	r3, r7, #24
 8011cfa:	4618      	mov	r0, r3
 8011cfc:	f004 fefe 	bl	8016afc <LoRaMacMibGetRequestConfirm>
    memcpy1(CommissioningParams.DevEui, mibReq.Param.DevEui, 8);
 8011d00:	69fb      	ldr	r3, [r7, #28]
 8011d02:	2208      	movs	r2, #8
 8011d04:	4619      	mov	r1, r3
 8011d06:	4854      	ldr	r0, [pc, #336]	; (8011e58 <LmHandlerConfigure+0x1d4>)
 8011d08:	f00b fc8f 	bl	801d62a <memcpy1>

    mibReq.Type = MIB_JOIN_EUI;
 8011d0c:	2303      	movs	r3, #3
 8011d0e:	763b      	strb	r3, [r7, #24]
    LoRaMacMibGetRequestConfirm(&mibReq);
 8011d10:	f107 0318 	add.w	r3, r7, #24
 8011d14:	4618      	mov	r0, r3
 8011d16:	f004 fef1 	bl	8016afc <LoRaMacMibGetRequestConfirm>
    memcpy1(CommissioningParams.JoinEui, mibReq.Param.JoinEui, 8);
 8011d1a:	69fb      	ldr	r3, [r7, #28]
 8011d1c:	2208      	movs	r2, #8
 8011d1e:	4619      	mov	r1, r3
 8011d20:	484e      	ldr	r0, [pc, #312]	; (8011e5c <LmHandlerConfigure+0x1d8>)
 8011d22:	f00b fc82 	bl	801d62a <memcpy1>
  }
  MW_LOG(TS_OFF, VLEVEL_M, "###### DevEui:  %02X-%02X-%02X-%02X-%02X-%02X-%02X-%02X\r\n",
 8011d26:	4b4c      	ldr	r3, [pc, #304]	; (8011e58 <LmHandlerConfigure+0x1d4>)
 8011d28:	781b      	ldrb	r3, [r3, #0]
 8011d2a:	461a      	mov	r2, r3
 8011d2c:	4b4a      	ldr	r3, [pc, #296]	; (8011e58 <LmHandlerConfigure+0x1d4>)
 8011d2e:	785b      	ldrb	r3, [r3, #1]
 8011d30:	4619      	mov	r1, r3
 8011d32:	4b49      	ldr	r3, [pc, #292]	; (8011e58 <LmHandlerConfigure+0x1d4>)
 8011d34:	789b      	ldrb	r3, [r3, #2]
 8011d36:	4618      	mov	r0, r3
 8011d38:	4b47      	ldr	r3, [pc, #284]	; (8011e58 <LmHandlerConfigure+0x1d4>)
 8011d3a:	78db      	ldrb	r3, [r3, #3]
 8011d3c:	461c      	mov	r4, r3
 8011d3e:	4b46      	ldr	r3, [pc, #280]	; (8011e58 <LmHandlerConfigure+0x1d4>)
 8011d40:	791b      	ldrb	r3, [r3, #4]
 8011d42:	461d      	mov	r5, r3
 8011d44:	4b44      	ldr	r3, [pc, #272]	; (8011e58 <LmHandlerConfigure+0x1d4>)
 8011d46:	795b      	ldrb	r3, [r3, #5]
 8011d48:	461e      	mov	r6, r3
 8011d4a:	4b43      	ldr	r3, [pc, #268]	; (8011e58 <LmHandlerConfigure+0x1d4>)
 8011d4c:	799b      	ldrb	r3, [r3, #6]
 8011d4e:	603b      	str	r3, [r7, #0]
 8011d50:	4b41      	ldr	r3, [pc, #260]	; (8011e58 <LmHandlerConfigure+0x1d4>)
 8011d52:	79db      	ldrb	r3, [r3, #7]
 8011d54:	9307      	str	r3, [sp, #28]
 8011d56:	683b      	ldr	r3, [r7, #0]
 8011d58:	9306      	str	r3, [sp, #24]
 8011d5a:	9605      	str	r6, [sp, #20]
 8011d5c:	9504      	str	r5, [sp, #16]
 8011d5e:	9403      	str	r4, [sp, #12]
 8011d60:	9002      	str	r0, [sp, #8]
 8011d62:	9101      	str	r1, [sp, #4]
 8011d64:	9200      	str	r2, [sp, #0]
 8011d66:	4b3e      	ldr	r3, [pc, #248]	; (8011e60 <LmHandlerConfigure+0x1dc>)
 8011d68:	2200      	movs	r2, #0
 8011d6a:	2100      	movs	r1, #0
 8011d6c:	2002      	movs	r0, #2
 8011d6e:	f00f fbad 	bl	80214cc <UTIL_ADV_TRACE_COND_FSend>
         HEX8(CommissioningParams.DevEui));
  MW_LOG(TS_OFF, VLEVEL_M, "###### AppEui:  %02X-%02X-%02X-%02X-%02X-%02X-%02X-%02X\r\n",
 8011d72:	4b39      	ldr	r3, [pc, #228]	; (8011e58 <LmHandlerConfigure+0x1d4>)
 8011d74:	7a1b      	ldrb	r3, [r3, #8]
 8011d76:	461a      	mov	r2, r3
 8011d78:	4b37      	ldr	r3, [pc, #220]	; (8011e58 <LmHandlerConfigure+0x1d4>)
 8011d7a:	7a5b      	ldrb	r3, [r3, #9]
 8011d7c:	4619      	mov	r1, r3
 8011d7e:	4b36      	ldr	r3, [pc, #216]	; (8011e58 <LmHandlerConfigure+0x1d4>)
 8011d80:	7a9b      	ldrb	r3, [r3, #10]
 8011d82:	4618      	mov	r0, r3
 8011d84:	4b34      	ldr	r3, [pc, #208]	; (8011e58 <LmHandlerConfigure+0x1d4>)
 8011d86:	7adb      	ldrb	r3, [r3, #11]
 8011d88:	461c      	mov	r4, r3
 8011d8a:	4b33      	ldr	r3, [pc, #204]	; (8011e58 <LmHandlerConfigure+0x1d4>)
 8011d8c:	7b1b      	ldrb	r3, [r3, #12]
 8011d8e:	461d      	mov	r5, r3
 8011d90:	4b31      	ldr	r3, [pc, #196]	; (8011e58 <LmHandlerConfigure+0x1d4>)
 8011d92:	7b5b      	ldrb	r3, [r3, #13]
 8011d94:	461e      	mov	r6, r3
 8011d96:	4b30      	ldr	r3, [pc, #192]	; (8011e58 <LmHandlerConfigure+0x1d4>)
 8011d98:	7b9b      	ldrb	r3, [r3, #14]
 8011d9a:	603b      	str	r3, [r7, #0]
 8011d9c:	4b2e      	ldr	r3, [pc, #184]	; (8011e58 <LmHandlerConfigure+0x1d4>)
 8011d9e:	7bdb      	ldrb	r3, [r3, #15]
 8011da0:	9307      	str	r3, [sp, #28]
 8011da2:	683b      	ldr	r3, [r7, #0]
 8011da4:	9306      	str	r3, [sp, #24]
 8011da6:	9605      	str	r6, [sp, #20]
 8011da8:	9504      	str	r5, [sp, #16]
 8011daa:	9403      	str	r4, [sp, #12]
 8011dac:	9002      	str	r0, [sp, #8]
 8011dae:	9101      	str	r1, [sp, #4]
 8011db0:	9200      	str	r2, [sp, #0]
 8011db2:	4b2c      	ldr	r3, [pc, #176]	; (8011e64 <LmHandlerConfigure+0x1e0>)
 8011db4:	2200      	movs	r2, #0
 8011db6:	2100      	movs	r1, #0
 8011db8:	2002      	movs	r0, #2
 8011dba:	f00f fb87 	bl	80214cc <UTIL_ADV_TRACE_COND_FSend>
         HEX8(CommissioningParams.JoinEui));
#if (defined (LORAWAN_KMS) && (LORAWAN_KMS == 1))
  MW_LOG(TS_OFF, VLEVEL_L, "###### KMS ENABLED \r\n");
#endif /* LORAWAN_KMS == 1 */

  mibReq.Type = MIB_PUBLIC_NETWORK;
 8011dbe:	230f      	movs	r3, #15
 8011dc0:	763b      	strb	r3, [r7, #24]
  mibReq.Param.EnablePublicNetwork = LORAWAN_PUBLIC_NETWORK;
 8011dc2:	2301      	movs	r3, #1
 8011dc4:	773b      	strb	r3, [r7, #28]
  LoRaMacMibSetRequestConfirm(&mibReq);
 8011dc6:	f107 0318 	add.w	r3, r7, #24
 8011dca:	4618      	mov	r0, r3
 8011dcc:	f005 f82e 	bl	8016e2c <LoRaMacMibSetRequestConfirm>

  mibReq.Type = MIB_REPEATER_SUPPORT;
 8011dd0:	2310      	movs	r3, #16
 8011dd2:	763b      	strb	r3, [r7, #24]
  mibReq.Param.EnableRepeaterSupport = LORAWAN_REPEATER_SUPPORT;
 8011dd4:	2300      	movs	r3, #0
 8011dd6:	773b      	strb	r3, [r7, #28]
  LoRaMacMibSetRequestConfirm(&mibReq);
 8011dd8:	f107 0318 	add.w	r3, r7, #24
 8011ddc:	4618      	mov	r0, r3
 8011dde:	f005 f825 	bl	8016e2c <LoRaMacMibSetRequestConfirm>

  mibReq.Type = MIB_ADR;
 8011de2:	2304      	movs	r3, #4
 8011de4:	763b      	strb	r3, [r7, #24]
  mibReq.Param.AdrEnable = LmHandlerParams.AdrEnable;
 8011de6:	4b17      	ldr	r3, [pc, #92]	; (8011e44 <LmHandlerConfigure+0x1c0>)
 8011de8:	789b      	ldrb	r3, [r3, #2]
 8011dea:	773b      	strb	r3, [r7, #28]
  LoRaMacMibSetRequestConfirm(&mibReq);
 8011dec:	f107 0318 	add.w	r3, r7, #24
 8011df0:	4618      	mov	r0, r3
 8011df2:	f005 f81b 	bl	8016e2c <LoRaMacMibSetRequestConfirm>

  mibReq.Type = MIB_SYSTEM_MAX_RX_ERROR;
 8011df6:	2322      	movs	r3, #34	; 0x22
 8011df8:	763b      	strb	r3, [r7, #24]
  mibReq.Param.SystemMaxRxError = 20;
 8011dfa:	2314      	movs	r3, #20
 8011dfc:	61fb      	str	r3, [r7, #28]
  LoRaMacMibSetRequestConfirm(&mibReq);
 8011dfe:	f107 0318 	add.w	r3, r7, #24
 8011e02:	4618      	mov	r0, r3
 8011e04:	f005 f812 	bl	8016e2c <LoRaMacMibSetRequestConfirm>

  GetPhyParams_t getPhy;
  PhyParam_t phyParam;
  getPhy.Attribute = PHY_DUTY_CYCLE;
 8011e08:	230f      	movs	r3, #15
 8011e0a:	743b      	strb	r3, [r7, #16]
  phyParam = RegionGetPhyParam(LmHandlerParams.ActiveRegion, &getPhy);
 8011e0c:	4b0d      	ldr	r3, [pc, #52]	; (8011e44 <LmHandlerConfigure+0x1c0>)
 8011e0e:	781b      	ldrb	r3, [r3, #0]
 8011e10:	f107 0210 	add.w	r2, r7, #16
 8011e14:	4611      	mov	r1, r2
 8011e16:	4618      	mov	r0, r3
 8011e18:	f007 fed1 	bl	8019bbe <RegionGetPhyParam>
 8011e1c:	4603      	mov	r3, r0
 8011e1e:	60fb      	str	r3, [r7, #12]
  LmHandlerParams.DutyCycleEnabled = (bool) phyParam.Value;
 8011e20:	68fb      	ldr	r3, [r7, #12]
 8011e22:	2b00      	cmp	r3, #0
 8011e24:	bf14      	ite	ne
 8011e26:	2301      	movne	r3, #1
 8011e28:	2300      	moveq	r3, #0
 8011e2a:	b2da      	uxtb	r2, r3
 8011e2c:	4b05      	ldr	r3, [pc, #20]	; (8011e44 <LmHandlerConfigure+0x1c0>)
 8011e2e:	711a      	strb	r2, [r3, #4]

  /* override previous value if reconfigure new region */
  LoRaMacTestSetDutyCycleOn(LmHandlerParams.DutyCycleEnabled);
 8011e30:	4b04      	ldr	r3, [pc, #16]	; (8011e44 <LmHandlerConfigure+0x1c0>)
 8011e32:	791b      	ldrb	r3, [r3, #4]
 8011e34:	4618      	mov	r0, r3
 8011e36:	f005 fdc7 	bl	80179c8 <LoRaMacTestSetDutyCycleOn>

  return LORAMAC_HANDLER_SUCCESS;
 8011e3a:	2300      	movs	r3, #0
}
 8011e3c:	4618      	mov	r0, r3
 8011e3e:	3744      	adds	r7, #68	; 0x44
 8011e40:	46bd      	mov	sp, r7
 8011e42:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8011e44:	20000a64 	.word	0x20000a64
 8011e48:	20000a94 	.word	0x20000a94
 8011e4c:	20000a84 	.word	0x20000a84
 8011e50:	08025fc4 	.word	0x08025fc4
 8011e54:	20000bae 	.word	0x20000bae
 8011e58:	20000148 	.word	0x20000148
 8011e5c:	20000150 	.word	0x20000150
 8011e60:	08026010 	.word	0x08026010
 8011e64:	0802604c 	.word	0x0802604c

08011e68 <LmHandlerProcess>:
  }
  return false;
}

void LmHandlerProcess(void)
{
 8011e68:	b580      	push	{r7, lr}
 8011e6a:	b082      	sub	sp, #8
 8011e6c:	af00      	add	r7, sp, #0
  /* Call at first the LoRaMAC process before to run all package process features */
  /* Processes the LoRaMac events */
  LoRaMacProcess();
 8011e6e:	f004 fa0d 	bl	801628c <LoRaMacProcess>

  /* Call all packages process functions */
  for (int8_t i = 0; i < PKG_MAX_NUMBER; i++)
 8011e72:	2300      	movs	r3, #0
 8011e74:	71fb      	strb	r3, [r7, #7]
 8011e76:	e022      	b.n	8011ebe <LmHandlerProcess+0x56>
  {
    if ((LmHandlerPackages[i] != NULL) &&
 8011e78:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8011e7c:	4a15      	ldr	r2, [pc, #84]	; (8011ed4 <LmHandlerProcess+0x6c>)
 8011e7e:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8011e82:	2b00      	cmp	r3, #0
 8011e84:	d015      	beq.n	8011eb2 <LmHandlerProcess+0x4a>
        (LmHandlerPackages[i]->Process != NULL) &&
 8011e86:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8011e8a:	4a12      	ldr	r2, [pc, #72]	; (8011ed4 <LmHandlerProcess+0x6c>)
 8011e8c:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8011e90:	691b      	ldr	r3, [r3, #16]
    if ((LmHandlerPackages[i] != NULL) &&
 8011e92:	2b00      	cmp	r3, #0
 8011e94:	d00d      	beq.n	8011eb2 <LmHandlerProcess+0x4a>
        (LmHandlerPackageIsInitialized(i) != false))
 8011e96:	79fb      	ldrb	r3, [r7, #7]
 8011e98:	4618      	mov	r0, r3
 8011e9a:	f000 fb93 	bl	80125c4 <LmHandlerPackageIsInitialized>
 8011e9e:	4603      	mov	r3, r0
        (LmHandlerPackages[i]->Process != NULL) &&
 8011ea0:	2b00      	cmp	r3, #0
 8011ea2:	d006      	beq.n	8011eb2 <LmHandlerProcess+0x4a>
    {
      LmHandlerPackages[i]->Process();
 8011ea4:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8011ea8:	4a0a      	ldr	r2, [pc, #40]	; (8011ed4 <LmHandlerProcess+0x6c>)
 8011eaa:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8011eae:	691b      	ldr	r3, [r3, #16]
 8011eb0:	4798      	blx	r3
  for (int8_t i = 0; i < PKG_MAX_NUMBER; i++)
 8011eb2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8011eb6:	b2db      	uxtb	r3, r3
 8011eb8:	3301      	adds	r3, #1
 8011eba:	b2db      	uxtb	r3, r3
 8011ebc:	71fb      	strb	r3, [r7, #7]
 8011ebe:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8011ec2:	2b04      	cmp	r3, #4
 8011ec4:	ddd8      	ble.n	8011e78 <LmHandlerProcess+0x10>
    }
  }

  NvmCtxMgmtStore();
 8011ec6:	f000 fc39 	bl	801273c <NvmCtxMgmtStore>
}
 8011eca:	bf00      	nop
 8011ecc:	3708      	adds	r7, #8
 8011ece:	46bd      	mov	sp, r7
 8011ed0:	bd80      	pop	{r7, pc}
 8011ed2:	bf00      	nop
 8011ed4:	20000a50 	.word	0x20000a50

08011ed8 <LmHandlerJoinStatus>:

LmHandlerFlagStatus_t LmHandlerJoinStatus(void)
{
 8011ed8:	b580      	push	{r7, lr}
 8011eda:	b08a      	sub	sp, #40	; 0x28
 8011edc:	af00      	add	r7, sp, #0
  MibRequestConfirm_t mibReq;
  LoRaMacStatus_t status;

  mibReq.Type = MIB_NETWORK_ACTIVATION;
 8011ede:	2301      	movs	r3, #1
 8011ee0:	703b      	strb	r3, [r7, #0]
  status = LoRaMacMibGetRequestConfirm(&mibReq);
 8011ee2:	463b      	mov	r3, r7
 8011ee4:	4618      	mov	r0, r3
 8011ee6:	f004 fe09 	bl	8016afc <LoRaMacMibGetRequestConfirm>
 8011eea:	4603      	mov	r3, r0
 8011eec:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27

  if (status == LORAMAC_STATUS_OK)
 8011ef0:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 8011ef4:	2b00      	cmp	r3, #0
 8011ef6:	d106      	bne.n	8011f06 <LmHandlerJoinStatus+0x2e>
  {
    if (mibReq.Param.NetworkActivation == ACTIVATION_TYPE_NONE)
 8011ef8:	793b      	ldrb	r3, [r7, #4]
 8011efa:	2b00      	cmp	r3, #0
 8011efc:	d101      	bne.n	8011f02 <LmHandlerJoinStatus+0x2a>
    {
      return LORAMAC_HANDLER_RESET;
 8011efe:	2300      	movs	r3, #0
 8011f00:	e002      	b.n	8011f08 <LmHandlerJoinStatus+0x30>
    }
    else
    {
      return LORAMAC_HANDLER_SET;
 8011f02:	2301      	movs	r3, #1
 8011f04:	e000      	b.n	8011f08 <LmHandlerJoinStatus+0x30>
    }
  }
  else
  {
    return LORAMAC_HANDLER_RESET;
 8011f06:	2300      	movs	r3, #0
  }
}
 8011f08:	4618      	mov	r0, r3
 8011f0a:	3728      	adds	r7, #40	; 0x28
 8011f0c:	46bd      	mov	sp, r7
 8011f0e:	bd80      	pop	{r7, pc}

08011f10 <LmHandlerJoin>:

void LmHandlerJoin(ActivationType_t mode)
{
 8011f10:	b580      	push	{r7, lr}
 8011f12:	b092      	sub	sp, #72	; 0x48
 8011f14:	af02      	add	r7, sp, #8
 8011f16:	4603      	mov	r3, r0
 8011f18:	71fb      	strb	r3, [r7, #7]
  }
#endif /* ACTIVATION_BY_PERSONALISATION */
  SecureElementDeleteDerivedKeys(NULL);
#endif /* LORAWAN_KMS */

  if (mode == ACTIVATION_TYPE_OTAA)
 8011f1a:	79fb      	ldrb	r3, [r7, #7]
 8011f1c:	2b02      	cmp	r3, #2
 8011f1e:	d111      	bne.n	8011f44 <LmHandlerJoin+0x34>
  {
    MlmeReq_t mlmeReq;
    JoinParams.Mode = ACTIVATION_TYPE_OTAA;
 8011f20:	4b31      	ldr	r3, [pc, #196]	; (8011fe8 <LmHandlerJoin+0xd8>)
 8011f22:	2202      	movs	r2, #2
 8011f24:	709a      	strb	r2, [r3, #2]

    LoRaMacStart();
 8011f26:	f004 fd41 	bl	80169ac <LoRaMacStart>

    /* Starts the OTAA join procedure */
    mlmeReq.Type = MLME_JOIN;
 8011f2a:	2301      	movs	r3, #1
 8011f2c:	723b      	strb	r3, [r7, #8]
    mlmeReq.Req.Join.Datarate = LmHandlerParams.TxDatarate;
 8011f2e:	4b2f      	ldr	r3, [pc, #188]	; (8011fec <LmHandlerJoin+0xdc>)
 8011f30:	f993 3003 	ldrsb.w	r3, [r3, #3]
 8011f34:	b2db      	uxtb	r3, r3
 8011f36:	733b      	strb	r3, [r7, #12]
    LoRaMacMlmeRequest(&mlmeReq);
 8011f38:	f107 0308 	add.w	r3, r7, #8
 8011f3c:	4618      	mov	r0, r3
 8011f3e:	f005 fb01 	bl	8017544 <LoRaMacMlmeRequest>
    LoRaMacMibSetRequestConfirm(&mibReq);

    LmHandlerCallbacks.OnJoinRequest(&JoinParams);
    LmHandlerRequestClass(LmHandlerParams.DefaultClass);
  }
}
 8011f42:	e04c      	b.n	8011fde <LmHandlerJoin+0xce>
    JoinParams.Mode = ACTIVATION_TYPE_ABP;
 8011f44:	4b28      	ldr	r3, [pc, #160]	; (8011fe8 <LmHandlerJoin+0xd8>)
 8011f46:	2201      	movs	r2, #1
 8011f48:	709a      	strb	r2, [r3, #2]
    JoinParams.Status = LORAMAC_HANDLER_SUCCESS;
 8011f4a:	4b27      	ldr	r3, [pc, #156]	; (8011fe8 <LmHandlerJoin+0xd8>)
 8011f4c:	2200      	movs	r2, #0
 8011f4e:	705a      	strb	r2, [r3, #1]
    if (CtxRestoreDone == false)
 8011f50:	4b27      	ldr	r3, [pc, #156]	; (8011ff0 <LmHandlerJoin+0xe0>)
 8011f52:	781b      	ldrb	r3, [r3, #0]
 8011f54:	f083 0301 	eor.w	r3, r3, #1
 8011f58:	b2db      	uxtb	r3, r3
 8011f5a:	2b00      	cmp	r3, #0
 8011f5c:	d02a      	beq.n	8011fb4 <LmHandlerJoin+0xa4>
      mibReq.Type = MIB_ABP_LORAWAN_VERSION;
 8011f5e:	2327      	movs	r3, #39	; 0x27
 8011f60:	773b      	strb	r3, [r7, #28]
      mibReq.Param.AbpLrWanVersion.Value = ABP_ACTIVATION_LRWAN_VERSION;
 8011f62:	4b24      	ldr	r3, [pc, #144]	; (8011ff4 <LmHandlerJoin+0xe4>)
 8011f64:	623b      	str	r3, [r7, #32]
      LoRaMacMibSetRequestConfirm(&mibReq);
 8011f66:	f107 031c 	add.w	r3, r7, #28
 8011f6a:	4618      	mov	r0, r3
 8011f6c:	f004 ff5e 	bl	8016e2c <LoRaMacMibSetRequestConfirm>
      mibReq.Type = MIB_NET_ID;
 8011f70:	2305      	movs	r3, #5
 8011f72:	773b      	strb	r3, [r7, #28]
      mibReq.Param.NetID = CommissioningParams.NetworkId;
 8011f74:	4b20      	ldr	r3, [pc, #128]	; (8011ff8 <LmHandlerJoin+0xe8>)
 8011f76:	691b      	ldr	r3, [r3, #16]
 8011f78:	623b      	str	r3, [r7, #32]
      LoRaMacMibSetRequestConfirm(&mibReq);
 8011f7a:	f107 031c 	add.w	r3, r7, #28
 8011f7e:	4618      	mov	r0, r3
 8011f80:	f004 ff54 	bl	8016e2c <LoRaMacMibSetRequestConfirm>
      CommissioningParams.DevAddr = GetDevAddr();
 8011f84:	f7f4 f965 	bl	8006252 <GetDevAddr>
 8011f88:	4603      	mov	r3, r0
 8011f8a:	4a1b      	ldr	r2, [pc, #108]	; (8011ff8 <LmHandlerJoin+0xe8>)
 8011f8c:	6153      	str	r3, [r2, #20]
      mibReq.Type = MIB_DEV_ADDR;
 8011f8e:	2306      	movs	r3, #6
 8011f90:	773b      	strb	r3, [r7, #28]
      mibReq.Param.DevAddr = CommissioningParams.DevAddr;
 8011f92:	4b19      	ldr	r3, [pc, #100]	; (8011ff8 <LmHandlerJoin+0xe8>)
 8011f94:	695b      	ldr	r3, [r3, #20]
 8011f96:	623b      	str	r3, [r7, #32]
      LoRaMacMibSetRequestConfirm(&mibReq);
 8011f98:	f107 031c 	add.w	r3, r7, #28
 8011f9c:	4618      	mov	r0, r3
 8011f9e:	f004 ff45 	bl	8016e2c <LoRaMacMibSetRequestConfirm>
      MW_LOG(TS_OFF, VLEVEL_M, "###### DevAddr:   %08X\r\n", CommissioningParams.DevAddr);
 8011fa2:	4b15      	ldr	r3, [pc, #84]	; (8011ff8 <LmHandlerJoin+0xe8>)
 8011fa4:	695b      	ldr	r3, [r3, #20]
 8011fa6:	9300      	str	r3, [sp, #0]
 8011fa8:	4b14      	ldr	r3, [pc, #80]	; (8011ffc <LmHandlerJoin+0xec>)
 8011faa:	2200      	movs	r2, #0
 8011fac:	2100      	movs	r1, #0
 8011fae:	2002      	movs	r0, #2
 8011fb0:	f00f fa8c 	bl	80214cc <UTIL_ADV_TRACE_COND_FSend>
    LoRaMacStart();
 8011fb4:	f004 fcfa 	bl	80169ac <LoRaMacStart>
    mibReq.Type = MIB_NETWORK_ACTIVATION;
 8011fb8:	2301      	movs	r3, #1
 8011fba:	773b      	strb	r3, [r7, #28]
    mibReq.Param.NetworkActivation = ACTIVATION_TYPE_ABP;
 8011fbc:	2301      	movs	r3, #1
 8011fbe:	f887 3020 	strb.w	r3, [r7, #32]
    LoRaMacMibSetRequestConfirm(&mibReq);
 8011fc2:	f107 031c 	add.w	r3, r7, #28
 8011fc6:	4618      	mov	r0, r3
 8011fc8:	f004 ff30 	bl	8016e2c <LoRaMacMibSetRequestConfirm>
    LmHandlerCallbacks.OnJoinRequest(&JoinParams);
 8011fcc:	4b0c      	ldr	r3, [pc, #48]	; (8012000 <LmHandlerJoin+0xf0>)
 8011fce:	68db      	ldr	r3, [r3, #12]
 8011fd0:	4805      	ldr	r0, [pc, #20]	; (8011fe8 <LmHandlerJoin+0xd8>)
 8011fd2:	4798      	blx	r3
    LmHandlerRequestClass(LmHandlerParams.DefaultClass);
 8011fd4:	4b05      	ldr	r3, [pc, #20]	; (8011fec <LmHandlerJoin+0xdc>)
 8011fd6:	785b      	ldrb	r3, [r3, #1]
 8011fd8:	4618      	mov	r0, r3
 8011fda:	f000 f8e9 	bl	80121b0 <LmHandlerRequestClass>
}
 8011fde:	bf00      	nop
 8011fe0:	3740      	adds	r7, #64	; 0x40
 8011fe2:	46bd      	mov	sp, r7
 8011fe4:	bd80      	pop	{r7, pc}
 8011fe6:	bf00      	nop
 8011fe8:	2000016c 	.word	0x2000016c
 8011fec:	20000a64 	.word	0x20000a64
 8011ff0:	20000bae 	.word	0x20000bae
 8011ff4:	01000300 	.word	0x01000300
 8011ff8:	20000148 	.word	0x20000148
 8011ffc:	08026088 	.word	0x08026088
 8012000:	20000a6c 	.word	0x20000a6c

08012004 <LmHandlerSend>:
  }
}

LmHandlerErrorStatus_t LmHandlerSend(LmHandlerAppData_t *appData, LmHandlerMsgTypes_t isTxConfirmed,
                                     TimerTime_t *nextTxIn, bool allowDelayedTx)
{
 8012004:	b580      	push	{r7, lr}
 8012006:	b08c      	sub	sp, #48	; 0x30
 8012008:	af00      	add	r7, sp, #0
 801200a:	60f8      	str	r0, [r7, #12]
 801200c:	607a      	str	r2, [r7, #4]
 801200e:	461a      	mov	r2, r3
 8012010:	460b      	mov	r3, r1
 8012012:	72fb      	strb	r3, [r7, #11]
 8012014:	4613      	mov	r3, r2
 8012016:	72bb      	strb	r3, [r7, #10]
  LoRaMacStatus_t status;
  LmHandlerErrorStatus_t lmhStatus = LORAMAC_HANDLER_ERROR;
 8012018:	23ff      	movs	r3, #255	; 0xff
 801201a:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f
  McpsReq_t mcpsReq;
  LoRaMacTxInfo_t txInfo;

  if (LoRaMacIsBusy() == true)
 801201e:	f004 f91f 	bl	8016260 <LoRaMacIsBusy>
 8012022:	4603      	mov	r3, r0
 8012024:	2b00      	cmp	r3, #0
 8012026:	d002      	beq.n	801202e <LmHandlerSend+0x2a>
  {
    return LORAMAC_HANDLER_BUSY_ERROR;
 8012028:	f06f 0301 	mvn.w	r3, #1
 801202c:	e0b4      	b.n	8012198 <LmHandlerSend+0x194>
  }

  if (LmHandlerJoinStatus() != LORAMAC_HANDLER_SET)
 801202e:	f7ff ff53 	bl	8011ed8 <LmHandlerJoinStatus>
 8012032:	4603      	mov	r3, r0
 8012034:	2b01      	cmp	r3, #1
 8012036:	d007      	beq.n	8012048 <LmHandlerSend+0x44>
  {
    /* The network isn't yet joined, try again later. */
    LmHandlerJoin(JoinParams.Mode);
 8012038:	4b59      	ldr	r3, [pc, #356]	; (80121a0 <LmHandlerSend+0x19c>)
 801203a:	789b      	ldrb	r3, [r3, #2]
 801203c:	4618      	mov	r0, r3
 801203e:	f7ff ff67 	bl	8011f10 <LmHandlerJoin>
    return LORAMAC_HANDLER_NO_NETWORK_JOINED;
 8012042:	f06f 0302 	mvn.w	r3, #2
 8012046:	e0a7      	b.n	8012198 <LmHandlerSend+0x194>
  }

  if ((LmHandlerPackages[PACKAGE_ID_COMPLIANCE]->IsRunning() == true)
 8012048:	4b56      	ldr	r3, [pc, #344]	; (80121a4 <LmHandlerSend+0x1a0>)
 801204a:	681b      	ldr	r3, [r3, #0]
 801204c:	68db      	ldr	r3, [r3, #12]
 801204e:	4798      	blx	r3
 8012050:	4603      	mov	r3, r0
 8012052:	2b00      	cmp	r3, #0
 8012054:	d00d      	beq.n	8012072 <LmHandlerSend+0x6e>
      && (appData->Port != LmHandlerPackages[PACKAGE_ID_COMPLIANCE]->Port) && (appData->Port != 0))
 8012056:	68fb      	ldr	r3, [r7, #12]
 8012058:	781a      	ldrb	r2, [r3, #0]
 801205a:	4b52      	ldr	r3, [pc, #328]	; (80121a4 <LmHandlerSend+0x1a0>)
 801205c:	681b      	ldr	r3, [r3, #0]
 801205e:	781b      	ldrb	r3, [r3, #0]
 8012060:	429a      	cmp	r2, r3
 8012062:	d006      	beq.n	8012072 <LmHandlerSend+0x6e>
 8012064:	68fb      	ldr	r3, [r7, #12]
 8012066:	781b      	ldrb	r3, [r3, #0]
 8012068:	2b00      	cmp	r3, #0
 801206a:	d002      	beq.n	8012072 <LmHandlerSend+0x6e>
  {
    return LORAMAC_HANDLER_COMPLIANCE_RUNNING;
 801206c:	f06f 0303 	mvn.w	r3, #3
 8012070:	e092      	b.n	8012198 <LmHandlerSend+0x194>
  }

  mcpsReq.Req.Unconfirmed.Datarate = LmHandlerParams.TxDatarate;
 8012072:	4b4d      	ldr	r3, [pc, #308]	; (80121a8 <LmHandlerSend+0x1a4>)
 8012074:	f993 3003 	ldrsb.w	r3, [r3, #3]
 8012078:	f887 3026 	strb.w	r3, [r7, #38]	; 0x26
  if (LoRaMacQueryTxPossible(appData->BufferSize, &txInfo) != LORAMAC_STATUS_OK)
 801207c:	68fb      	ldr	r3, [r7, #12]
 801207e:	785b      	ldrb	r3, [r3, #1]
 8012080:	f107 0214 	add.w	r2, r7, #20
 8012084:	4611      	mov	r1, r2
 8012086:	4618      	mov	r0, r3
 8012088:	f004 fc9e 	bl	80169c8 <LoRaMacQueryTxPossible>
 801208c:	4603      	mov	r3, r0
 801208e:	2b00      	cmp	r3, #0
 8012090:	d009      	beq.n	80120a6 <LmHandlerSend+0xa2>
  {
    /* Send empty frame in order to flush MAC commands */
    TxParams.MsgType = LORAMAC_HANDLER_UNCONFIRMED_MSG;
 8012092:	4b46      	ldr	r3, [pc, #280]	; (80121ac <LmHandlerSend+0x1a8>)
 8012094:	2200      	movs	r2, #0
 8012096:	709a      	strb	r2, [r3, #2]
    mcpsReq.Type = MCPS_UNCONFIRMED;
 8012098:	2300      	movs	r3, #0
 801209a:	763b      	strb	r3, [r7, #24]
    mcpsReq.Req.Unconfirmed.fBuffer = NULL;
 801209c:	2300      	movs	r3, #0
 801209e:	623b      	str	r3, [r7, #32]
    mcpsReq.Req.Unconfirmed.fBufferSize = 0;
 80120a0:	2300      	movs	r3, #0
 80120a2:	84bb      	strh	r3, [r7, #36]	; 0x24
 80120a4:	e017      	b.n	80120d6 <LmHandlerSend+0xd2>
  }
  else
  {
    TxParams.MsgType = isTxConfirmed;
 80120a6:	4a41      	ldr	r2, [pc, #260]	; (80121ac <LmHandlerSend+0x1a8>)
 80120a8:	7afb      	ldrb	r3, [r7, #11]
 80120aa:	7093      	strb	r3, [r2, #2]
    mcpsReq.Req.Unconfirmed.fPort = appData->Port;
 80120ac:	68fb      	ldr	r3, [r7, #12]
 80120ae:	781b      	ldrb	r3, [r3, #0]
 80120b0:	773b      	strb	r3, [r7, #28]
    mcpsReq.Req.Unconfirmed.fBufferSize = appData->BufferSize;
 80120b2:	68fb      	ldr	r3, [r7, #12]
 80120b4:	785b      	ldrb	r3, [r3, #1]
 80120b6:	b29b      	uxth	r3, r3
 80120b8:	84bb      	strh	r3, [r7, #36]	; 0x24
    mcpsReq.Req.Unconfirmed.fBuffer = appData->Buffer;
 80120ba:	68fb      	ldr	r3, [r7, #12]
 80120bc:	685b      	ldr	r3, [r3, #4]
 80120be:	623b      	str	r3, [r7, #32]
    if (isTxConfirmed == LORAMAC_HANDLER_UNCONFIRMED_MSG)
 80120c0:	7afb      	ldrb	r3, [r7, #11]
 80120c2:	2b00      	cmp	r3, #0
 80120c4:	d102      	bne.n	80120cc <LmHandlerSend+0xc8>
    {
      mcpsReq.Type = MCPS_UNCONFIRMED;
 80120c6:	2300      	movs	r3, #0
 80120c8:	763b      	strb	r3, [r7, #24]
 80120ca:	e004      	b.n	80120d6 <LmHandlerSend+0xd2>
    }
    else
    {
      mcpsReq.Type = MCPS_CONFIRMED;
 80120cc:	2301      	movs	r3, #1
 80120ce:	763b      	strb	r3, [r7, #24]
      mcpsReq.Req.Confirmed.NbTrials = 8;
 80120d0:	2308      	movs	r3, #8
 80120d2:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
    }
  }
  TxParams.AppData = *appData;
 80120d6:	4b35      	ldr	r3, [pc, #212]	; (80121ac <LmHandlerSend+0x1a8>)
 80120d8:	68fa      	ldr	r2, [r7, #12]
 80120da:	330c      	adds	r3, #12
 80120dc:	e892 0003 	ldmia.w	r2, {r0, r1}
 80120e0:	e883 0003 	stmia.w	r3, {r0, r1}
  TxParams.Datarate = LmHandlerParams.TxDatarate;
 80120e4:	4b30      	ldr	r3, [pc, #192]	; (80121a8 <LmHandlerSend+0x1a4>)
 80120e6:	f993 2003 	ldrsb.w	r2, [r3, #3]
 80120ea:	4b30      	ldr	r3, [pc, #192]	; (80121ac <LmHandlerSend+0x1a8>)
 80120ec:	711a      	strb	r2, [r3, #4]

  status = LoRaMacMcpsRequest(&mcpsReq, allowDelayedTx);
 80120ee:	7aba      	ldrb	r2, [r7, #10]
 80120f0:	f107 0318 	add.w	r3, r7, #24
 80120f4:	4611      	mov	r1, r2
 80120f6:	4618      	mov	r0, r3
 80120f8:	f005 fb68 	bl	80177cc <LoRaMacMcpsRequest>
 80120fc:	4603      	mov	r3, r0
 80120fe:	f887 302e 	strb.w	r3, [r7, #46]	; 0x2e
  if (nextTxIn != NULL)
 8012102:	687b      	ldr	r3, [r7, #4]
 8012104:	2b00      	cmp	r3, #0
 8012106:	d002      	beq.n	801210e <LmHandlerSend+0x10a>
  {
    *nextTxIn = mcpsReq.ReqReturn.DutyCycleWaitTime;
 8012108:	6aba      	ldr	r2, [r7, #40]	; 0x28
 801210a:	687b      	ldr	r3, [r7, #4]
 801210c:	601a      	str	r2, [r3, #0]
  }

  switch(status)
 801210e:	f897 302e 	ldrb.w	r3, [r7, #46]	; 0x2e
 8012112:	2b11      	cmp	r3, #17
 8012114:	d83a      	bhi.n	801218c <LmHandlerSend+0x188>
 8012116:	a201      	add	r2, pc, #4	; (adr r2, 801211c <LmHandlerSend+0x118>)
 8012118:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 801211c:	08012165 	.word	0x08012165
 8012120:	0801216d 	.word	0x0801216d
 8012124:	0801218d 	.word	0x0801218d
 8012128:	0801218d 	.word	0x0801218d
 801212c:	0801218d 	.word	0x0801218d
 8012130:	0801218d 	.word	0x0801218d
 8012134:	0801218d 	.word	0x0801218d
 8012138:	08012175 	.word	0x08012175
 801213c:	0801218d 	.word	0x0801218d
 8012140:	0801218d 	.word	0x0801218d
 8012144:	0801218d 	.word	0x0801218d
 8012148:	08012185 	.word	0x08012185
 801214c:	0801218d 	.word	0x0801218d
 8012150:	0801218d 	.word	0x0801218d
 8012154:	0801216d 	.word	0x0801216d
 8012158:	0801216d 	.word	0x0801216d
 801215c:	0801216d 	.word	0x0801216d
 8012160:	0801217d 	.word	0x0801217d
  {
  case LORAMAC_STATUS_OK:
    lmhStatus = LORAMAC_HANDLER_SUCCESS;
 8012164:	2300      	movs	r3, #0
 8012166:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f
    break;
 801216a:	e013      	b.n	8012194 <LmHandlerSend+0x190>
  case LORAMAC_STATUS_BUSY:
  case LORAMAC_STATUS_BUSY_UPLINK_COLLISION:
  case LORAMAC_STATUS_BUSY_BEACON_RESERVED_TIME:
  case LORAMAC_STATUS_BUSY_PING_SLOT_WINDOW_TIME:
    lmhStatus = LORAMAC_HANDLER_BUSY_ERROR;
 801216c:	23fe      	movs	r3, #254	; 0xfe
 801216e:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f
    break;
 8012172:	e00f      	b.n	8012194 <LmHandlerSend+0x190>
  case LORAMAC_STATUS_NO_NETWORK_JOINED:
    lmhStatus = LORAMAC_HANDLER_NO_NETWORK_JOINED;
 8012174:	23fd      	movs	r3, #253	; 0xfd
 8012176:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f
    break;
 801217a:	e00b      	b.n	8012194 <LmHandlerSend+0x190>
  case LORAMAC_STATUS_CRYPTO_ERROR:
    lmhStatus = LORAMAC_HANDLER_CRYPTO_ERROR;
 801217c:	23fb      	movs	r3, #251	; 0xfb
 801217e:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f
    break;
 8012182:	e007      	b.n	8012194 <LmHandlerSend+0x190>
  case LORAMAC_STATUS_DUTYCYCLE_RESTRICTED:
    lmhStatus = LORAMAC_HANDLER_DUTYCYCLE_RESTRICTED;
 8012184:	23fa      	movs	r3, #250	; 0xfa
 8012186:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f
    break;
 801218a:	e003      	b.n	8012194 <LmHandlerSend+0x190>
  case LORAMAC_STATUS_REGION_NOT_SUPPORTED:
  case LORAMAC_STATUS_NO_FREE_CHANNEL_FOUND:
  case LORAMAC_STATUS_NO_CHANNEL_FOUND:
  case LORAMAC_STATUS_LENGTH_ERROR:
  default:
    lmhStatus = LORAMAC_HANDLER_ERROR;
 801218c:	23ff      	movs	r3, #255	; 0xff
 801218e:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f
    break;
 8012192:	bf00      	nop
  }
      
  return lmhStatus;
 8012194:	f997 302f 	ldrsb.w	r3, [r7, #47]	; 0x2f
}
 8012198:	4618      	mov	r0, r3
 801219a:	3730      	adds	r7, #48	; 0x30
 801219c:	46bd      	mov	sp, r7
 801219e:	bd80      	pop	{r7, pc}
 80121a0:	2000016c 	.word	0x2000016c
 80121a4:	20000a50 	.word	0x20000a50
 80121a8:	20000a64 	.word	0x20000a64
 80121ac:	20000aa4 	.word	0x20000aa4

080121b0 <LmHandlerRequestClass>:

LmHandlerErrorStatus_t LmHandlerRequestClass(DeviceClass_t newClass)
{
 80121b0:	b580      	push	{r7, lr}
 80121b2:	b08c      	sub	sp, #48	; 0x30
 80121b4:	af00      	add	r7, sp, #0
 80121b6:	4603      	mov	r3, r0
 80121b8:	71fb      	strb	r3, [r7, #7]
  MibRequestConfirm_t mibReq;
  DeviceClass_t currentClass;
  LmHandlerErrorStatus_t errorStatus = LORAMAC_HANDLER_SUCCESS;
 80121ba:	2300      	movs	r3, #0
 80121bc:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f

  if (LmHandlerJoinStatus() != LORAMAC_HANDLER_SET)
 80121c0:	f7ff fe8a 	bl	8011ed8 <LmHandlerJoinStatus>
 80121c4:	4603      	mov	r3, r0
 80121c6:	2b01      	cmp	r3, #1
 80121c8:	d002      	beq.n	80121d0 <LmHandlerRequestClass+0x20>
  {
    return LORAMAC_HANDLER_NO_NETWORK_JOINED;
 80121ca:	f06f 0302 	mvn.w	r3, #2
 80121ce:	e059      	b.n	8012284 <LmHandlerRequestClass+0xd4>
  }

  mibReq.Type = MIB_DEVICE_CLASS;
 80121d0:	2300      	movs	r3, #0
 80121d2:	723b      	strb	r3, [r7, #8]
  if (LoRaMacMibGetRequestConfirm(&mibReq) != LORAMAC_STATUS_OK)
 80121d4:	f107 0308 	add.w	r3, r7, #8
 80121d8:	4618      	mov	r0, r3
 80121da:	f004 fc8f 	bl	8016afc <LoRaMacMibGetRequestConfirm>
 80121de:	4603      	mov	r3, r0
 80121e0:	2b00      	cmp	r3, #0
 80121e2:	d002      	beq.n	80121ea <LmHandlerRequestClass+0x3a>
  {
    return LORAMAC_HANDLER_ERROR;
 80121e4:	f04f 33ff 	mov.w	r3, #4294967295
 80121e8:	e04c      	b.n	8012284 <LmHandlerRequestClass+0xd4>
  }
  currentClass = mibReq.Param.Class;
 80121ea:	7b3b      	ldrb	r3, [r7, #12]
 80121ec:	f887 302e 	strb.w	r3, [r7, #46]	; 0x2e

  /* Attempt to switch only if class update */
  if (currentClass != newClass)
 80121f0:	f897 202e 	ldrb.w	r2, [r7, #46]	; 0x2e
 80121f4:	79fb      	ldrb	r3, [r7, #7]
 80121f6:	429a      	cmp	r2, r3
 80121f8:	d03d      	beq.n	8012276 <LmHandlerRequestClass+0xc6>
  {
    switch (newClass)
 80121fa:	79fb      	ldrb	r3, [r7, #7]
 80121fc:	2b02      	cmp	r3, #2
 80121fe:	d020      	beq.n	8012242 <LmHandlerRequestClass+0x92>
 8012200:	2b02      	cmp	r3, #2
 8012202:	dc3a      	bgt.n	801227a <LmHandlerRequestClass+0xca>
 8012204:	2b00      	cmp	r3, #0
 8012206:	d002      	beq.n	801220e <LmHandlerRequestClass+0x5e>
 8012208:	2b01      	cmp	r3, #1
 801220a:	d016      	beq.n	801223a <LmHandlerRequestClass+0x8a>
          }
        }
      }
      break;
      default:
        break;
 801220c:	e035      	b.n	801227a <LmHandlerRequestClass+0xca>
        if (currentClass != CLASS_A)
 801220e:	f897 302e 	ldrb.w	r3, [r7, #46]	; 0x2e
 8012212:	2b00      	cmp	r3, #0
 8012214:	d033      	beq.n	801227e <LmHandlerRequestClass+0xce>
          mibReq.Param.Class = CLASS_A;
 8012216:	2300      	movs	r3, #0
 8012218:	733b      	strb	r3, [r7, #12]
          if (LoRaMacMibSetRequestConfirm(&mibReq) == LORAMAC_STATUS_OK)
 801221a:	f107 0308 	add.w	r3, r7, #8
 801221e:	4618      	mov	r0, r3
 8012220:	f004 fe04 	bl	8016e2c <LoRaMacMibSetRequestConfirm>
 8012224:	4603      	mov	r3, r0
 8012226:	2b00      	cmp	r3, #0
 8012228:	d103      	bne.n	8012232 <LmHandlerRequestClass+0x82>
            DisplayClassUpdate(CLASS_A);
 801222a:	2000      	movs	r0, #0
 801222c:	f000 fa64 	bl	80126f8 <DisplayClassUpdate>
      break;
 8012230:	e025      	b.n	801227e <LmHandlerRequestClass+0xce>
            errorStatus = LORAMAC_HANDLER_ERROR;
 8012232:	23ff      	movs	r3, #255	; 0xff
 8012234:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f
      break;
 8012238:	e021      	b.n	801227e <LmHandlerRequestClass+0xce>
        errorStatus = LORAMAC_HANDLER_ERROR;
 801223a:	23ff      	movs	r3, #255	; 0xff
 801223c:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f
      break;
 8012240:	e01e      	b.n	8012280 <LmHandlerRequestClass+0xd0>
        if (currentClass != CLASS_A)
 8012242:	f897 302e 	ldrb.w	r3, [r7, #46]	; 0x2e
 8012246:	2b00      	cmp	r3, #0
 8012248:	d003      	beq.n	8012252 <LmHandlerRequestClass+0xa2>
          errorStatus = LORAMAC_HANDLER_ERROR;
 801224a:	23ff      	movs	r3, #255	; 0xff
 801224c:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f
      break;
 8012250:	e016      	b.n	8012280 <LmHandlerRequestClass+0xd0>
          mibReq.Param.Class = CLASS_C;
 8012252:	2302      	movs	r3, #2
 8012254:	733b      	strb	r3, [r7, #12]
          if (LoRaMacMibSetRequestConfirm(&mibReq) == LORAMAC_STATUS_OK)
 8012256:	f107 0308 	add.w	r3, r7, #8
 801225a:	4618      	mov	r0, r3
 801225c:	f004 fde6 	bl	8016e2c <LoRaMacMibSetRequestConfirm>
 8012260:	4603      	mov	r3, r0
 8012262:	2b00      	cmp	r3, #0
 8012264:	d103      	bne.n	801226e <LmHandlerRequestClass+0xbe>
            DisplayClassUpdate(CLASS_C);
 8012266:	2002      	movs	r0, #2
 8012268:	f000 fa46 	bl	80126f8 <DisplayClassUpdate>
      break;
 801226c:	e008      	b.n	8012280 <LmHandlerRequestClass+0xd0>
            errorStatus = LORAMAC_HANDLER_ERROR;
 801226e:	23ff      	movs	r3, #255	; 0xff
 8012270:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f
      break;
 8012274:	e004      	b.n	8012280 <LmHandlerRequestClass+0xd0>
    }
  }
 8012276:	bf00      	nop
 8012278:	e002      	b.n	8012280 <LmHandlerRequestClass+0xd0>
        break;
 801227a:	bf00      	nop
 801227c:	e000      	b.n	8012280 <LmHandlerRequestClass+0xd0>
      break;
 801227e:	bf00      	nop
  return errorStatus;
 8012280:	f997 302f 	ldrsb.w	r3, [r7, #47]	; 0x2f
}
 8012284:	4618      	mov	r0, r3
 8012286:	3730      	adds	r7, #48	; 0x30
 8012288:	46bd      	mov	sp, r7
 801228a:	bd80      	pop	{r7, pc}

0801228c <LmHandlerPackageRegister>:

LmHandlerErrorStatus_t LmHandlerPackageRegister(uint8_t id, void *params)
{
 801228c:	b580      	push	{r7, lr}
 801228e:	b084      	sub	sp, #16
 8012290:	af00      	add	r7, sp, #0
 8012292:	4603      	mov	r3, r0
 8012294:	6039      	str	r1, [r7, #0]
 8012296:	71fb      	strb	r3, [r7, #7]
  LmhPackage_t *package = NULL;
 8012298:	2300      	movs	r3, #0
 801229a:	60fb      	str	r3, [r7, #12]
  switch (id)
 801229c:	79fb      	ldrb	r3, [r7, #7]
 801229e:	2b00      	cmp	r3, #0
 80122a0:	d103      	bne.n	80122aa <LmHandlerPackageRegister+0x1e>
  {
    case PACKAGE_ID_COMPLIANCE:
    {
      package = LmphCompliancePackageFactory();
 80122a2:	f000 fa59 	bl	8012758 <LmphCompliancePackageFactory>
 80122a6:	60f8      	str	r0, [r7, #12]
      break;
 80122a8:	e000      	b.n	80122ac <LmHandlerPackageRegister+0x20>
    default:
#if (!defined (LORAWAN_DATA_DISTRIB_MGT) || (LORAWAN_DATA_DISTRIB_MGT == 0))
#else /*LORAWAN_DATA_DISTRIB_MGT == 1*/
      LmhpDataDistributionPackageRegister(id, &package);
#endif /*LORAWAN_DATA_DISTRIB_MGT*/
      break;
 80122aa:	bf00      	nop
  }

  if (package != NULL)
 80122ac:	68fb      	ldr	r3, [r7, #12]
 80122ae:	2b00      	cmp	r3, #0
 80122b0:	d022      	beq.n	80122f8 <LmHandlerPackageRegister+0x6c>
  {
    LmHandlerPackages[id] = package;
 80122b2:	79fb      	ldrb	r3, [r7, #7]
 80122b4:	4913      	ldr	r1, [pc, #76]	; (8012304 <LmHandlerPackageRegister+0x78>)
 80122b6:	68fa      	ldr	r2, [r7, #12]
 80122b8:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
    LmHandlerPackages[id]->OnJoinRequest = LmHandlerJoin;
 80122bc:	79fb      	ldrb	r3, [r7, #7]
 80122be:	4a11      	ldr	r2, [pc, #68]	; (8012304 <LmHandlerPackageRegister+0x78>)
 80122c0:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80122c4:	4a10      	ldr	r2, [pc, #64]	; (8012308 <LmHandlerPackageRegister+0x7c>)
 80122c6:	621a      	str	r2, [r3, #32]
    LmHandlerPackages[id]->OnSendRequest = LmHandlerSend;
 80122c8:	79fb      	ldrb	r3, [r7, #7]
 80122ca:	4a0e      	ldr	r2, [pc, #56]	; (8012304 <LmHandlerPackageRegister+0x78>)
 80122cc:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80122d0:	4a0e      	ldr	r2, [pc, #56]	; (801230c <LmHandlerPackageRegister+0x80>)
 80122d2:	625a      	str	r2, [r3, #36]	; 0x24
    LmHandlerPackages[id]->OnDeviceTimeRequest = LmHandlerDeviceTimeReq;
 80122d4:	79fb      	ldrb	r3, [r7, #7]
 80122d6:	4a0b      	ldr	r2, [pc, #44]	; (8012304 <LmHandlerPackageRegister+0x78>)
 80122d8:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80122dc:	4a0c      	ldr	r2, [pc, #48]	; (8012310 <LmHandlerPackageRegister+0x84>)
 80122de:	629a      	str	r2, [r3, #40]	; 0x28
    LmHandlerPackages[id]->Init(params, AppData.Buffer, LORAWAN_APP_DATA_BUFFER_MAX_SIZE);
 80122e0:	79fb      	ldrb	r3, [r7, #7]
 80122e2:	4a08      	ldr	r2, [pc, #32]	; (8012304 <LmHandlerPackageRegister+0x78>)
 80122e4:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80122e8:	685b      	ldr	r3, [r3, #4]
 80122ea:	4a0a      	ldr	r2, [pc, #40]	; (8012314 <LmHandlerPackageRegister+0x88>)
 80122ec:	6851      	ldr	r1, [r2, #4]
 80122ee:	22f2      	movs	r2, #242	; 0xf2
 80122f0:	6838      	ldr	r0, [r7, #0]
 80122f2:	4798      	blx	r3

    return LORAMAC_HANDLER_SUCCESS;
 80122f4:	2300      	movs	r3, #0
 80122f6:	e001      	b.n	80122fc <LmHandlerPackageRegister+0x70>
  }
  else
  {
    return LORAMAC_HANDLER_ERROR;
 80122f8:	f04f 33ff 	mov.w	r3, #4294967295
  }
}
 80122fc:	4618      	mov	r0, r3
 80122fe:	3710      	adds	r7, #16
 8012300:	46bd      	mov	sp, r7
 8012302:	bd80      	pop	{r7, pc}
 8012304:	20000a50 	.word	0x20000a50
 8012308:	08011f11 	.word	0x08011f11
 801230c:	08012005 	.word	0x08012005
 8012310:	080123a5 	.word	0x080123a5
 8012314:	20000180 	.word	0x20000180

08012318 <LmHandlerGetCurrentClass>:

int32_t LmHandlerGetCurrentClass(DeviceClass_t *deviceClass)
{
 8012318:	b580      	push	{r7, lr}
 801231a:	b08c      	sub	sp, #48	; 0x30
 801231c:	af00      	add	r7, sp, #0
 801231e:	6078      	str	r0, [r7, #4]
  MibRequestConfirm_t mibReq;
  if (deviceClass == NULL)
 8012320:	687b      	ldr	r3, [r7, #4]
 8012322:	2b00      	cmp	r3, #0
 8012324:	d102      	bne.n	801232c <LmHandlerGetCurrentClass+0x14>
  {
    return LORAMAC_HANDLER_ERROR;
 8012326:	f04f 33ff 	mov.w	r3, #4294967295
 801232a:	e010      	b.n	801234e <LmHandlerGetCurrentClass+0x36>
  }

  mibReq.Type = MIB_DEVICE_CLASS;
 801232c:	2300      	movs	r3, #0
 801232e:	733b      	strb	r3, [r7, #12]
  if (LoRaMacMibGetRequestConfirm(&mibReq) != LORAMAC_STATUS_OK)
 8012330:	f107 030c 	add.w	r3, r7, #12
 8012334:	4618      	mov	r0, r3
 8012336:	f004 fbe1 	bl	8016afc <LoRaMacMibGetRequestConfirm>
 801233a:	4603      	mov	r3, r0
 801233c:	2b00      	cmp	r3, #0
 801233e:	d002      	beq.n	8012346 <LmHandlerGetCurrentClass+0x2e>
  {
    return LORAMAC_HANDLER_ERROR;
 8012340:	f04f 33ff 	mov.w	r3, #4294967295
 8012344:	e003      	b.n	801234e <LmHandlerGetCurrentClass+0x36>
  }

  *deviceClass = mibReq.Param.Class;
 8012346:	7c3a      	ldrb	r2, [r7, #16]
 8012348:	687b      	ldr	r3, [r7, #4]
 801234a:	701a      	strb	r2, [r3, #0]
  return LORAMAC_HANDLER_SUCCESS;
 801234c:	2300      	movs	r3, #0
}
 801234e:	4618      	mov	r0, r3
 8012350:	3730      	adds	r7, #48	; 0x30
 8012352:	46bd      	mov	sp, r7
 8012354:	bd80      	pop	{r7, pc}
	...

08012358 <LmHandlerGetTxDatarate>:

int32_t LmHandlerGetTxDatarate(int8_t *txDatarate)
{
 8012358:	b580      	push	{r7, lr}
 801235a:	b08c      	sub	sp, #48	; 0x30
 801235c:	af00      	add	r7, sp, #0
 801235e:	6078      	str	r0, [r7, #4]
  MibRequestConfirm_t mibGet;
  if (txDatarate == NULL)
 8012360:	687b      	ldr	r3, [r7, #4]
 8012362:	2b00      	cmp	r3, #0
 8012364:	d102      	bne.n	801236c <LmHandlerGetTxDatarate+0x14>
  {
    return LORAMAC_HANDLER_ERROR;
 8012366:	f04f 33ff 	mov.w	r3, #4294967295
 801236a:	e015      	b.n	8012398 <LmHandlerGetTxDatarate+0x40>
  }

  mibGet.Type = MIB_CHANNELS_DATARATE;
 801236c:	231f      	movs	r3, #31
 801236e:	733b      	strb	r3, [r7, #12]
  if (LoRaMacMibGetRequestConfirm(&mibGet) != LORAMAC_STATUS_OK)
 8012370:	f107 030c 	add.w	r3, r7, #12
 8012374:	4618      	mov	r0, r3
 8012376:	f004 fbc1 	bl	8016afc <LoRaMacMibGetRequestConfirm>
 801237a:	4603      	mov	r3, r0
 801237c:	2b00      	cmp	r3, #0
 801237e:	d002      	beq.n	8012386 <LmHandlerGetTxDatarate+0x2e>
  {
    return LORAMAC_HANDLER_ERROR;
 8012380:	f04f 33ff 	mov.w	r3, #4294967295
 8012384:	e008      	b.n	8012398 <LmHandlerGetTxDatarate+0x40>
  }

  *txDatarate = mibGet.Param.ChannelsDatarate;
 8012386:	f997 2010 	ldrsb.w	r2, [r7, #16]
 801238a:	687b      	ldr	r3, [r7, #4]
 801238c:	701a      	strb	r2, [r3, #0]
  LmHandlerParams.TxDatarate = mibGet.Param.ChannelsDatarate;
 801238e:	f997 2010 	ldrsb.w	r2, [r7, #16]
 8012392:	4b03      	ldr	r3, [pc, #12]	; (80123a0 <LmHandlerGetTxDatarate+0x48>)
 8012394:	70da      	strb	r2, [r3, #3]
  return LORAMAC_HANDLER_SUCCESS;
 8012396:	2300      	movs	r3, #0
}
 8012398:	4618      	mov	r0, r3
 801239a:	3730      	adds	r7, #48	; 0x30
 801239c:	46bd      	mov	sp, r7
 801239e:	bd80      	pop	{r7, pc}
 80123a0:	20000a64 	.word	0x20000a64

080123a4 <LmHandlerDeviceTimeReq>:
#endif /* LORAMAC_CLASSB_ENABLED */
}

/* Private  functions ---------------------------------------------------------*/
static LmHandlerErrorStatus_t LmHandlerDeviceTimeReq(void)
{
 80123a4:	b580      	push	{r7, lr}
 80123a6:	b086      	sub	sp, #24
 80123a8:	af00      	add	r7, sp, #0
  LoRaMacStatus_t status;
  MlmeReq_t mlmeReq;

  mlmeReq.Type = MLME_DEVICE_TIME;
 80123aa:	230a      	movs	r3, #10
 80123ac:	703b      	strb	r3, [r7, #0]

  status = LoRaMacMlmeRequest(&mlmeReq);
 80123ae:	463b      	mov	r3, r7
 80123b0:	4618      	mov	r0, r3
 80123b2:	f005 f8c7 	bl	8017544 <LoRaMacMlmeRequest>
 80123b6:	4603      	mov	r3, r0
 80123b8:	75fb      	strb	r3, [r7, #23]

  if (status == LORAMAC_STATUS_OK)
 80123ba:	7dfb      	ldrb	r3, [r7, #23]
 80123bc:	2b00      	cmp	r3, #0
 80123be:	d101      	bne.n	80123c4 <LmHandlerDeviceTimeReq+0x20>
  {
    return LORAMAC_HANDLER_SUCCESS;
 80123c0:	2300      	movs	r3, #0
 80123c2:	e001      	b.n	80123c8 <LmHandlerDeviceTimeReq+0x24>
  }
  else
  {
    return LORAMAC_HANDLER_ERROR;
 80123c4:	f04f 33ff 	mov.w	r3, #4294967295
  }
}
 80123c8:	4618      	mov	r0, r3
 80123ca:	3718      	adds	r7, #24
 80123cc:	46bd      	mov	sp, r7
 80123ce:	bd80      	pop	{r7, pc}

080123d0 <McpsConfirm>:
  }
}
#endif /* LORAMAC_CLASSB_ENABLED == 1 */

static void McpsConfirm(McpsConfirm_t *mcpsConfirm)
{
 80123d0:	b580      	push	{r7, lr}
 80123d2:	b082      	sub	sp, #8
 80123d4:	af00      	add	r7, sp, #0
 80123d6:	6078      	str	r0, [r7, #4]
  TxParams.IsMcpsConfirm = 1;
 80123d8:	4b15      	ldr	r3, [pc, #84]	; (8012430 <McpsConfirm+0x60>)
 80123da:	2201      	movs	r2, #1
 80123dc:	701a      	strb	r2, [r3, #0]
  TxParams.Status = mcpsConfirm->Status;
 80123de:	687b      	ldr	r3, [r7, #4]
 80123e0:	785a      	ldrb	r2, [r3, #1]
 80123e2:	4b13      	ldr	r3, [pc, #76]	; (8012430 <McpsConfirm+0x60>)
 80123e4:	705a      	strb	r2, [r3, #1]
  TxParams.Datarate = mcpsConfirm->Datarate;
 80123e6:	687b      	ldr	r3, [r7, #4]
 80123e8:	789b      	ldrb	r3, [r3, #2]
 80123ea:	b25a      	sxtb	r2, r3
 80123ec:	4b10      	ldr	r3, [pc, #64]	; (8012430 <McpsConfirm+0x60>)
 80123ee:	711a      	strb	r2, [r3, #4]
  TxParams.UplinkCounter = mcpsConfirm->UpLinkCounter;
 80123f0:	687b      	ldr	r3, [r7, #4]
 80123f2:	68db      	ldr	r3, [r3, #12]
 80123f4:	4a0e      	ldr	r2, [pc, #56]	; (8012430 <McpsConfirm+0x60>)
 80123f6:	6093      	str	r3, [r2, #8]
  TxParams.TxPower = mcpsConfirm->TxPower;
 80123f8:	687b      	ldr	r3, [r7, #4]
 80123fa:	f993 2003 	ldrsb.w	r2, [r3, #3]
 80123fe:	4b0c      	ldr	r3, [pc, #48]	; (8012430 <McpsConfirm+0x60>)
 8012400:	751a      	strb	r2, [r3, #20]
  TxParams.Channel = mcpsConfirm->Channel;
 8012402:	687b      	ldr	r3, [r7, #4]
 8012404:	691b      	ldr	r3, [r3, #16]
 8012406:	b2da      	uxtb	r2, r3
 8012408:	4b09      	ldr	r3, [pc, #36]	; (8012430 <McpsConfirm+0x60>)
 801240a:	755a      	strb	r2, [r3, #21]
  TxParams.AckReceived = mcpsConfirm->AckReceived;
 801240c:	687b      	ldr	r3, [r7, #4]
 801240e:	791b      	ldrb	r3, [r3, #4]
 8012410:	461a      	mov	r2, r3
 8012412:	4b07      	ldr	r3, [pc, #28]	; (8012430 <McpsConfirm+0x60>)
 8012414:	70da      	strb	r2, [r3, #3]

  LmHandlerCallbacks.OnTxData(&TxParams);
 8012416:	4b07      	ldr	r3, [pc, #28]	; (8012434 <McpsConfirm+0x64>)
 8012418:	691b      	ldr	r3, [r3, #16]
 801241a:	4805      	ldr	r0, [pc, #20]	; (8012430 <McpsConfirm+0x60>)
 801241c:	4798      	blx	r3

  LmHandlerPackagesNotify(PACKAGE_MCPS_CONFIRM, mcpsConfirm);
 801241e:	6879      	ldr	r1, [r7, #4]
 8012420:	2000      	movs	r0, #0
 8012422:	f000 f8ed 	bl	8012600 <LmHandlerPackagesNotify>
}
 8012426:	bf00      	nop
 8012428:	3708      	adds	r7, #8
 801242a:	46bd      	mov	sp, r7
 801242c:	bd80      	pop	{r7, pc}
 801242e:	bf00      	nop
 8012430:	20000aa4 	.word	0x20000aa4
 8012434:	20000a6c 	.word	0x20000a6c

08012438 <McpsIndication>:

static void McpsIndication(McpsIndication_t *mcpsIndication)
{
 8012438:	b580      	push	{r7, lr}
 801243a:	b088      	sub	sp, #32
 801243c:	af00      	add	r7, sp, #0
 801243e:	6078      	str	r0, [r7, #4]
  LmHandlerAppData_t appData;
  DeviceClass_t deviceClass;
  RxParams.IsMcpsIndication = 1;
 8012440:	4b2c      	ldr	r3, [pc, #176]	; (80124f4 <McpsIndication+0xbc>)
 8012442:	2201      	movs	r2, #1
 8012444:	701a      	strb	r2, [r3, #0]
  RxParams.Status = mcpsIndication->Status;
 8012446:	687b      	ldr	r3, [r7, #4]
 8012448:	785a      	ldrb	r2, [r3, #1]
 801244a:	4b2a      	ldr	r3, [pc, #168]	; (80124f4 <McpsIndication+0xbc>)
 801244c:	705a      	strb	r2, [r3, #1]

  if (RxParams.Status != LORAMAC_EVENT_INFO_STATUS_OK)
 801244e:	4b29      	ldr	r3, [pc, #164]	; (80124f4 <McpsIndication+0xbc>)
 8012450:	785b      	ldrb	r3, [r3, #1]
 8012452:	2b00      	cmp	r3, #0
 8012454:	d14a      	bne.n	80124ec <McpsIndication+0xb4>
  {
    return;
  }

  if (mcpsIndication->BufferSize > 0)
 8012456:	687b      	ldr	r3, [r7, #4]
 8012458:	7b1b      	ldrb	r3, [r3, #12]
 801245a:	2b00      	cmp	r3, #0
 801245c:	d028      	beq.n	80124b0 <McpsIndication+0x78>
  {
    RxParams.Datarate = mcpsIndication->RxDatarate;
 801245e:	687b      	ldr	r3, [r7, #4]
 8012460:	791b      	ldrb	r3, [r3, #4]
 8012462:	b25a      	sxtb	r2, r3
 8012464:	4b23      	ldr	r3, [pc, #140]	; (80124f4 <McpsIndication+0xbc>)
 8012466:	709a      	strb	r2, [r3, #2]
    RxParams.Rssi = mcpsIndication->Rssi;
 8012468:	687b      	ldr	r3, [r7, #4]
 801246a:	f9b3 300e 	ldrsh.w	r3, [r3, #14]
 801246e:	b25a      	sxtb	r2, r3
 8012470:	4b20      	ldr	r3, [pc, #128]	; (80124f4 <McpsIndication+0xbc>)
 8012472:	70da      	strb	r2, [r3, #3]
    RxParams.Snr = mcpsIndication->Snr;
 8012474:	687b      	ldr	r3, [r7, #4]
 8012476:	f993 2010 	ldrsb.w	r2, [r3, #16]
 801247a:	4b1e      	ldr	r3, [pc, #120]	; (80124f4 <McpsIndication+0xbc>)
 801247c:	711a      	strb	r2, [r3, #4]
    RxParams.DownlinkCounter = mcpsIndication->DownLinkCounter;
 801247e:	687b      	ldr	r3, [r7, #4]
 8012480:	695b      	ldr	r3, [r3, #20]
 8012482:	4a1c      	ldr	r2, [pc, #112]	; (80124f4 <McpsIndication+0xbc>)
 8012484:	6093      	str	r3, [r2, #8]
    RxParams.RxSlot = mcpsIndication->RxSlot;
 8012486:	687b      	ldr	r3, [r7, #4]
 8012488:	7c5b      	ldrb	r3, [r3, #17]
 801248a:	b25a      	sxtb	r2, r3
 801248c:	4b19      	ldr	r3, [pc, #100]	; (80124f4 <McpsIndication+0xbc>)
 801248e:	731a      	strb	r2, [r3, #12]

    appData.Port = mcpsIndication->Port;
 8012490:	687b      	ldr	r3, [r7, #4]
 8012492:	78db      	ldrb	r3, [r3, #3]
 8012494:	763b      	strb	r3, [r7, #24]
    appData.BufferSize = mcpsIndication->BufferSize;
 8012496:	687b      	ldr	r3, [r7, #4]
 8012498:	7b1b      	ldrb	r3, [r3, #12]
 801249a:	767b      	strb	r3, [r7, #25]
    appData.Buffer = mcpsIndication->Buffer;
 801249c:	687b      	ldr	r3, [r7, #4]
 801249e:	689b      	ldr	r3, [r3, #8]
 80124a0:	61fb      	str	r3, [r7, #28]

    LmHandlerCallbacks.OnRxData(&appData, &RxParams);
 80124a2:	4b15      	ldr	r3, [pc, #84]	; (80124f8 <McpsIndication+0xc0>)
 80124a4:	695b      	ldr	r3, [r3, #20]
 80124a6:	f107 0218 	add.w	r2, r7, #24
 80124aa:	4912      	ldr	r1, [pc, #72]	; (80124f4 <McpsIndication+0xbc>)
 80124ac:	4610      	mov	r0, r2
 80124ae:	4798      	blx	r3
  }

  /* Call packages RxProcess function */
  LmHandlerPackagesNotify(PACKAGE_MCPS_INDICATION, mcpsIndication);
 80124b0:	6879      	ldr	r1, [r7, #4]
 80124b2:	2001      	movs	r0, #1
 80124b4:	f000 f8a4 	bl	8012600 <LmHandlerPackagesNotify>
  LmHandlerGetCurrentClass(&deviceClass);
 80124b8:	f107 0317 	add.w	r3, r7, #23
 80124bc:	4618      	mov	r0, r3
 80124be:	f7ff ff2b 	bl	8012318 <LmHandlerGetCurrentClass>
  if ((mcpsIndication->FramePending == true) && (deviceClass == CLASS_A))
 80124c2:	687b      	ldr	r3, [r7, #4]
 80124c4:	795b      	ldrb	r3, [r3, #5]
 80124c6:	2b01      	cmp	r3, #1
 80124c8:	d111      	bne.n	80124ee <McpsIndication+0xb6>
 80124ca:	7dfb      	ldrb	r3, [r7, #23]
 80124cc:	2b00      	cmp	r3, #0
 80124ce:	d10e      	bne.n	80124ee <McpsIndication+0xb6>
  {
    /* The server signals that it has pending data to be sent. */
    /* We schedule an uplink as soon as possible to flush the server. */

    /* Send an empty message */
    LmHandlerAppData_t appData =
 80124d0:	2300      	movs	r3, #0
 80124d2:	733b      	strb	r3, [r7, #12]
 80124d4:	2300      	movs	r3, #0
 80124d6:	737b      	strb	r3, [r7, #13]
 80124d8:	2300      	movs	r3, #0
 80124da:	613b      	str	r3, [r7, #16]
    {
      .Buffer = NULL,
      .BufferSize = 0,
      .Port = 0
    };
    LmHandlerSend(&appData, LORAMAC_HANDLER_UNCONFIRMED_MSG, NULL, true);
 80124dc:	f107 000c 	add.w	r0, r7, #12
 80124e0:	2301      	movs	r3, #1
 80124e2:	2200      	movs	r2, #0
 80124e4:	2100      	movs	r1, #0
 80124e6:	f7ff fd8d 	bl	8012004 <LmHandlerSend>
 80124ea:	e000      	b.n	80124ee <McpsIndication+0xb6>
    return;
 80124ec:	bf00      	nop
  }
}
 80124ee:	3720      	adds	r7, #32
 80124f0:	46bd      	mov	sp, r7
 80124f2:	bd80      	pop	{r7, pc}
 80124f4:	20000170 	.word	0x20000170
 80124f8:	20000a6c 	.word	0x20000a6c

080124fc <MlmeConfirm>:

static void MlmeConfirm(MlmeConfirm_t *mlmeConfirm)
{
 80124fc:	b580      	push	{r7, lr}
 80124fe:	b08c      	sub	sp, #48	; 0x30
 8012500:	af00      	add	r7, sp, #0
 8012502:	6078      	str	r0, [r7, #4]
  TxParams.IsMcpsConfirm = 0;
 8012504:	4b20      	ldr	r3, [pc, #128]	; (8012588 <MlmeConfirm+0x8c>)
 8012506:	2200      	movs	r2, #0
 8012508:	701a      	strb	r2, [r3, #0]
  TxParams.Status = mlmeConfirm->Status;
 801250a:	687b      	ldr	r3, [r7, #4]
 801250c:	785a      	ldrb	r2, [r3, #1]
 801250e:	4b1e      	ldr	r3, [pc, #120]	; (8012588 <MlmeConfirm+0x8c>)
 8012510:	705a      	strb	r2, [r3, #1]

  LmHandlerPackagesNotify(PACKAGE_MLME_CONFIRM, mlmeConfirm);
 8012512:	6879      	ldr	r1, [r7, #4]
 8012514:	2002      	movs	r0, #2
 8012516:	f000 f873 	bl	8012600 <LmHandlerPackagesNotify>

  switch (mlmeConfirm->MlmeRequest)
 801251a:	687b      	ldr	r3, [r7, #4]
 801251c:	781b      	ldrb	r3, [r3, #0]
 801251e:	2b0a      	cmp	r3, #10
 8012520:	d028      	beq.n	8012574 <MlmeConfirm+0x78>
 8012522:	2b0a      	cmp	r3, #10
 8012524:	dc28      	bgt.n	8012578 <MlmeConfirm+0x7c>
 8012526:	2b01      	cmp	r3, #1
 8012528:	d002      	beq.n	8012530 <MlmeConfirm+0x34>
 801252a:	2b04      	cmp	r3, #4
 801252c:	d026      	beq.n	801257c <MlmeConfirm+0x80>
      }
    }
    break;
#endif /* LORAMAC_CLASSB_ENABLED == 1 */
    default:
      break;
 801252e:	e023      	b.n	8012578 <MlmeConfirm+0x7c>
      mibReq.Type = MIB_DEV_ADDR;
 8012530:	2306      	movs	r3, #6
 8012532:	733b      	strb	r3, [r7, #12]
      LoRaMacMibGetRequestConfirm(&mibReq);
 8012534:	f107 030c 	add.w	r3, r7, #12
 8012538:	4618      	mov	r0, r3
 801253a:	f004 fadf 	bl	8016afc <LoRaMacMibGetRequestConfirm>
      CommissioningParams.DevAddr = mibReq.Param.DevAddr;
 801253e:	693b      	ldr	r3, [r7, #16]
 8012540:	4a12      	ldr	r2, [pc, #72]	; (801258c <MlmeConfirm+0x90>)
 8012542:	6153      	str	r3, [r2, #20]
      LmHandlerGetTxDatarate(&JoinParams.Datarate);
 8012544:	4812      	ldr	r0, [pc, #72]	; (8012590 <MlmeConfirm+0x94>)
 8012546:	f7ff ff07 	bl	8012358 <LmHandlerGetTxDatarate>
      if (mlmeConfirm->Status == LORAMAC_EVENT_INFO_STATUS_OK)
 801254a:	687b      	ldr	r3, [r7, #4]
 801254c:	785b      	ldrb	r3, [r3, #1]
 801254e:	2b00      	cmp	r3, #0
 8012550:	d108      	bne.n	8012564 <MlmeConfirm+0x68>
        JoinParams.Status = LORAMAC_HANDLER_SUCCESS;
 8012552:	4b0f      	ldr	r3, [pc, #60]	; (8012590 <MlmeConfirm+0x94>)
 8012554:	2200      	movs	r2, #0
 8012556:	705a      	strb	r2, [r3, #1]
        LmHandlerRequestClass(LmHandlerParams.DefaultClass);
 8012558:	4b0e      	ldr	r3, [pc, #56]	; (8012594 <MlmeConfirm+0x98>)
 801255a:	785b      	ldrb	r3, [r3, #1]
 801255c:	4618      	mov	r0, r3
 801255e:	f7ff fe27 	bl	80121b0 <LmHandlerRequestClass>
 8012562:	e002      	b.n	801256a <MlmeConfirm+0x6e>
        JoinParams.Status = LORAMAC_HANDLER_ERROR;
 8012564:	4b0a      	ldr	r3, [pc, #40]	; (8012590 <MlmeConfirm+0x94>)
 8012566:	22ff      	movs	r2, #255	; 0xff
 8012568:	705a      	strb	r2, [r3, #1]
      LmHandlerCallbacks.OnJoinRequest(&JoinParams);
 801256a:	4b0b      	ldr	r3, [pc, #44]	; (8012598 <MlmeConfirm+0x9c>)
 801256c:	68db      	ldr	r3, [r3, #12]
 801256e:	4808      	ldr	r0, [pc, #32]	; (8012590 <MlmeConfirm+0x94>)
 8012570:	4798      	blx	r3
    break;
 8012572:	e004      	b.n	801257e <MlmeConfirm+0x82>
    break;
 8012574:	bf00      	nop
 8012576:	e002      	b.n	801257e <MlmeConfirm+0x82>
      break;
 8012578:	bf00      	nop
 801257a:	e000      	b.n	801257e <MlmeConfirm+0x82>
    break;
 801257c:	bf00      	nop
  }
}
 801257e:	bf00      	nop
 8012580:	3730      	adds	r7, #48	; 0x30
 8012582:	46bd      	mov	sp, r7
 8012584:	bd80      	pop	{r7, pc}
 8012586:	bf00      	nop
 8012588:	20000aa4 	.word	0x20000aa4
 801258c:	20000148 	.word	0x20000148
 8012590:	2000016c 	.word	0x2000016c
 8012594:	20000a64 	.word	0x20000a64
 8012598:	20000a6c 	.word	0x20000a6c

0801259c <MlmeIndication>:

static void MlmeIndication(MlmeIndication_t *mlmeIndication)
{
 801259c:	b480      	push	{r7}
 801259e:	b083      	sub	sp, #12
 80125a0:	af00      	add	r7, sp, #0
 80125a2:	6078      	str	r0, [r7, #4]
  RxParams.IsMcpsIndication = 0;
 80125a4:	4b06      	ldr	r3, [pc, #24]	; (80125c0 <MlmeIndication+0x24>)
 80125a6:	2200      	movs	r2, #0
 80125a8:	701a      	strb	r2, [r3, #0]
  RxParams.Status = mlmeIndication->Status;
 80125aa:	687b      	ldr	r3, [r7, #4]
 80125ac:	785a      	ldrb	r2, [r3, #1]
 80125ae:	4b04      	ldr	r3, [pc, #16]	; (80125c0 <MlmeIndication+0x24>)
 80125b0:	705a      	strb	r2, [r3, #1]
      }
      break;
    }
#endif /* LORAMAC_CLASSB_ENABLED == 1 */
    default:
      break;
 80125b2:	bf00      	nop
  }
}
 80125b4:	bf00      	nop
 80125b6:	370c      	adds	r7, #12
 80125b8:	46bd      	mov	sp, r7
 80125ba:	bc80      	pop	{r7}
 80125bc:	4770      	bx	lr
 80125be:	bf00      	nop
 80125c0:	20000170 	.word	0x20000170

080125c4 <LmHandlerPackageIsInitialized>:

static bool LmHandlerPackageIsInitialized(uint8_t id)
{
 80125c4:	b580      	push	{r7, lr}
 80125c6:	b082      	sub	sp, #8
 80125c8:	af00      	add	r7, sp, #0
 80125ca:	4603      	mov	r3, r0
 80125cc:	71fb      	strb	r3, [r7, #7]
  if ((id < PKG_MAX_NUMBER) && (LmHandlerPackages[id]->IsInitialized != NULL))
 80125ce:	79fb      	ldrb	r3, [r7, #7]
 80125d0:	2b04      	cmp	r3, #4
 80125d2:	d80e      	bhi.n	80125f2 <LmHandlerPackageIsInitialized+0x2e>
 80125d4:	79fb      	ldrb	r3, [r7, #7]
 80125d6:	4a09      	ldr	r2, [pc, #36]	; (80125fc <LmHandlerPackageIsInitialized+0x38>)
 80125d8:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80125dc:	689b      	ldr	r3, [r3, #8]
 80125de:	2b00      	cmp	r3, #0
 80125e0:	d007      	beq.n	80125f2 <LmHandlerPackageIsInitialized+0x2e>
  {
    return LmHandlerPackages[id]->IsInitialized();
 80125e2:	79fb      	ldrb	r3, [r7, #7]
 80125e4:	4a05      	ldr	r2, [pc, #20]	; (80125fc <LmHandlerPackageIsInitialized+0x38>)
 80125e6:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80125ea:	689b      	ldr	r3, [r3, #8]
 80125ec:	4798      	blx	r3
 80125ee:	4603      	mov	r3, r0
 80125f0:	e000      	b.n	80125f4 <LmHandlerPackageIsInitialized+0x30>
  }
  else
  {
    return false;
 80125f2:	2300      	movs	r3, #0
  }
}
 80125f4:	4618      	mov	r0, r3
 80125f6:	3708      	adds	r7, #8
 80125f8:	46bd      	mov	sp, r7
 80125fa:	bd80      	pop	{r7, pc}
 80125fc:	20000a50 	.word	0x20000a50

08012600 <LmHandlerPackagesNotify>:

static void LmHandlerPackagesNotify(PackageNotifyTypes_t notifyType, void *params)
{
 8012600:	b580      	push	{r7, lr}
 8012602:	b084      	sub	sp, #16
 8012604:	af00      	add	r7, sp, #0
 8012606:	4603      	mov	r3, r0
 8012608:	6039      	str	r1, [r7, #0]
 801260a:	71fb      	strb	r3, [r7, #7]
  for (int8_t i = 0; i < PKG_MAX_NUMBER; i++)
 801260c:	2300      	movs	r3, #0
 801260e:	73fb      	strb	r3, [r7, #15]
 8012610:	e067      	b.n	80126e2 <LmHandlerPackagesNotify+0xe2>
  {
    if (LmHandlerPackages[i] != NULL)
 8012612:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8012616:	4a37      	ldr	r2, [pc, #220]	; (80126f4 <LmHandlerPackagesNotify+0xf4>)
 8012618:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 801261c:	2b00      	cmp	r3, #0
 801261e:	d051      	beq.n	80126c4 <LmHandlerPackagesNotify+0xc4>
    {
      switch (notifyType)
 8012620:	79fb      	ldrb	r3, [r7, #7]
 8012622:	2b02      	cmp	r3, #2
 8012624:	d03d      	beq.n	80126a2 <LmHandlerPackagesNotify+0xa2>
 8012626:	2b02      	cmp	r3, #2
 8012628:	dc4e      	bgt.n	80126c8 <LmHandlerPackagesNotify+0xc8>
 801262a:	2b00      	cmp	r3, #0
 801262c:	d002      	beq.n	8012634 <LmHandlerPackagesNotify+0x34>
 801262e:	2b01      	cmp	r3, #1
 8012630:	d011      	beq.n	8012656 <LmHandlerPackagesNotify+0x56>
            LmHandlerPackages[i]->OnMlmeConfirmProcess(params);
          }
          break;
        }
        default:
          break;
 8012632:	e049      	b.n	80126c8 <LmHandlerPackagesNotify+0xc8>
          if (LmHandlerPackages[i]->OnMcpsConfirmProcess != NULL)
 8012634:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8012638:	4a2e      	ldr	r2, [pc, #184]	; (80126f4 <LmHandlerPackagesNotify+0xf4>)
 801263a:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 801263e:	695b      	ldr	r3, [r3, #20]
 8012640:	2b00      	cmp	r3, #0
 8012642:	d043      	beq.n	80126cc <LmHandlerPackagesNotify+0xcc>
            LmHandlerPackages[i]->OnMcpsConfirmProcess(params);
 8012644:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8012648:	4a2a      	ldr	r2, [pc, #168]	; (80126f4 <LmHandlerPackagesNotify+0xf4>)
 801264a:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 801264e:	695b      	ldr	r3, [r3, #20]
 8012650:	6838      	ldr	r0, [r7, #0]
 8012652:	4798      	blx	r3
          break;
 8012654:	e03a      	b.n	80126cc <LmHandlerPackagesNotify+0xcc>
          if ((LmHandlerPackages[i]->OnMcpsIndicationProcess != NULL) &&
 8012656:	f997 300f 	ldrsb.w	r3, [r7, #15]
 801265a:	4a26      	ldr	r2, [pc, #152]	; (80126f4 <LmHandlerPackagesNotify+0xf4>)
 801265c:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8012660:	699b      	ldr	r3, [r3, #24]
 8012662:	2b00      	cmp	r3, #0
 8012664:	d034      	beq.n	80126d0 <LmHandlerPackagesNotify+0xd0>
              ((LmHandlerPackages[i]->Port == ((McpsIndication_t *)params)->Port) ||
 8012666:	f997 300f 	ldrsb.w	r3, [r7, #15]
 801266a:	4a22      	ldr	r2, [pc, #136]	; (80126f4 <LmHandlerPackagesNotify+0xf4>)
 801266c:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8012670:	781a      	ldrb	r2, [r3, #0]
 8012672:	683b      	ldr	r3, [r7, #0]
 8012674:	78db      	ldrb	r3, [r3, #3]
          if ((LmHandlerPackages[i]->OnMcpsIndicationProcess != NULL) &&
 8012676:	429a      	cmp	r2, r3
 8012678:	d00a      	beq.n	8012690 <LmHandlerPackagesNotify+0x90>
              ((LmHandlerPackages[i]->Port == ((McpsIndication_t *)params)->Port) ||
 801267a:	f997 300f 	ldrsb.w	r3, [r7, #15]
 801267e:	2b00      	cmp	r3, #0
 8012680:	d126      	bne.n	80126d0 <LmHandlerPackagesNotify+0xd0>
               ((i == PACKAGE_ID_COMPLIANCE) && (LmHandlerPackages[PACKAGE_ID_COMPLIANCE]->IsRunning()))))
 8012682:	4b1c      	ldr	r3, [pc, #112]	; (80126f4 <LmHandlerPackagesNotify+0xf4>)
 8012684:	681b      	ldr	r3, [r3, #0]
 8012686:	68db      	ldr	r3, [r3, #12]
 8012688:	4798      	blx	r3
 801268a:	4603      	mov	r3, r0
 801268c:	2b00      	cmp	r3, #0
 801268e:	d01f      	beq.n	80126d0 <LmHandlerPackagesNotify+0xd0>
            LmHandlerPackages[i]->OnMcpsIndicationProcess(params);
 8012690:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8012694:	4a17      	ldr	r2, [pc, #92]	; (80126f4 <LmHandlerPackagesNotify+0xf4>)
 8012696:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 801269a:	699b      	ldr	r3, [r3, #24]
 801269c:	6838      	ldr	r0, [r7, #0]
 801269e:	4798      	blx	r3
          break;
 80126a0:	e016      	b.n	80126d0 <LmHandlerPackagesNotify+0xd0>
          if (LmHandlerPackages[i]->OnMlmeConfirmProcess != NULL)
 80126a2:	f997 300f 	ldrsb.w	r3, [r7, #15]
 80126a6:	4a13      	ldr	r2, [pc, #76]	; (80126f4 <LmHandlerPackagesNotify+0xf4>)
 80126a8:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80126ac:	69db      	ldr	r3, [r3, #28]
 80126ae:	2b00      	cmp	r3, #0
 80126b0:	d010      	beq.n	80126d4 <LmHandlerPackagesNotify+0xd4>
            LmHandlerPackages[i]->OnMlmeConfirmProcess(params);
 80126b2:	f997 300f 	ldrsb.w	r3, [r7, #15]
 80126b6:	4a0f      	ldr	r2, [pc, #60]	; (80126f4 <LmHandlerPackagesNotify+0xf4>)
 80126b8:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80126bc:	69db      	ldr	r3, [r3, #28]
 80126be:	6838      	ldr	r0, [r7, #0]
 80126c0:	4798      	blx	r3
          break;
 80126c2:	e007      	b.n	80126d4 <LmHandlerPackagesNotify+0xd4>
      }
    }
 80126c4:	bf00      	nop
 80126c6:	e006      	b.n	80126d6 <LmHandlerPackagesNotify+0xd6>
          break;
 80126c8:	bf00      	nop
 80126ca:	e004      	b.n	80126d6 <LmHandlerPackagesNotify+0xd6>
          break;
 80126cc:	bf00      	nop
 80126ce:	e002      	b.n	80126d6 <LmHandlerPackagesNotify+0xd6>
          break;
 80126d0:	bf00      	nop
 80126d2:	e000      	b.n	80126d6 <LmHandlerPackagesNotify+0xd6>
          break;
 80126d4:	bf00      	nop
  for (int8_t i = 0; i < PKG_MAX_NUMBER; i++)
 80126d6:	f997 300f 	ldrsb.w	r3, [r7, #15]
 80126da:	b2db      	uxtb	r3, r3
 80126dc:	3301      	adds	r3, #1
 80126de:	b2db      	uxtb	r3, r3
 80126e0:	73fb      	strb	r3, [r7, #15]
 80126e2:	f997 300f 	ldrsb.w	r3, [r7, #15]
 80126e6:	2b04      	cmp	r3, #4
 80126e8:	dd93      	ble.n	8012612 <LmHandlerPackagesNotify+0x12>
  }
}
 80126ea:	bf00      	nop
 80126ec:	bf00      	nop
 80126ee:	3710      	adds	r7, #16
 80126f0:	46bd      	mov	sp, r7
 80126f2:	bd80      	pop	{r7, pc}
 80126f4:	20000a50 	.word	0x20000a50

080126f8 <DisplayClassUpdate>:

static void DisplayClassUpdate(DeviceClass_t deviceClass)
{
 80126f8:	b580      	push	{r7, lr}
 80126fa:	b084      	sub	sp, #16
 80126fc:	af02      	add	r7, sp, #8
 80126fe:	4603      	mov	r3, r0
 8012700:	71fb      	strb	r3, [r7, #7]
  MW_LOG(TS_OFF, VLEVEL_M, "Switch to Class %c done\r\n", "ABC"[deviceClass]);
 8012702:	79fb      	ldrb	r3, [r7, #7]
 8012704:	4a06      	ldr	r2, [pc, #24]	; (8012720 <DisplayClassUpdate+0x28>)
 8012706:	5cd3      	ldrb	r3, [r2, r3]
 8012708:	9300      	str	r3, [sp, #0]
 801270a:	4b06      	ldr	r3, [pc, #24]	; (8012724 <DisplayClassUpdate+0x2c>)
 801270c:	2200      	movs	r2, #0
 801270e:	2100      	movs	r1, #0
 8012710:	2002      	movs	r0, #2
 8012712:	f00e fedb 	bl	80214cc <UTIL_ADV_TRACE_COND_FSend>
}
 8012716:	bf00      	nop
 8012718:	3708      	adds	r7, #8
 801271a:	46bd      	mov	sp, r7
 801271c:	bd80      	pop	{r7, pc}
 801271e:	bf00      	nop
 8012720:	080260c0 	.word	0x080260c0
 8012724:	080260a4 	.word	0x080260a4

08012728 <NvmCtxMgmtEvent>:
 8012728:	b480      	push	{r7}
 801272a:	b083      	sub	sp, #12
 801272c:	af00      	add	r7, sp, #0
 801272e:	4603      	mov	r3, r0
 8012730:	71fb      	strb	r3, [r7, #7]
 8012732:	bf00      	nop
 8012734:	370c      	adds	r7, #12
 8012736:	46bd      	mov	sp, r7
 8012738:	bc80      	pop	{r7}
 801273a:	4770      	bx	lr

0801273c <NvmCtxMgmtStore>:
 801273c:	b480      	push	{r7}
 801273e:	af00      	add	r7, sp, #0
 8012740:	2301      	movs	r3, #1
 8012742:	4618      	mov	r0, r3
 8012744:	46bd      	mov	sp, r7
 8012746:	bc80      	pop	{r7}
 8012748:	4770      	bx	lr

0801274a <NvmCtxMgmtRestore>:
 801274a:	b480      	push	{r7}
 801274c:	af00      	add	r7, sp, #0
 801274e:	2301      	movs	r3, #1
 8012750:	4618      	mov	r0, r3
 8012752:	46bd      	mov	sp, r7
 8012754:	bc80      	pop	{r7}
 8012756:	4770      	bx	lr

08012758 <LmphCompliancePackageFactory>:
 8012758:	b480      	push	{r7}
 801275a:	af00      	add	r7, sp, #0
 801275c:	4b02      	ldr	r3, [pc, #8]	; (8012768 <LmphCompliancePackageFactory+0x10>)
 801275e:	4618      	mov	r0, r3
 8012760:	46bd      	mov	sp, r7
 8012762:	bc80      	pop	{r7}
 8012764:	4770      	bx	lr
 8012766:	bf00      	nop
 8012768:	20000188 	.word	0x20000188

0801276c <LmhpComplianceInit>:
 801276c:	b480      	push	{r7}
 801276e:	b085      	sub	sp, #20
 8012770:	af00      	add	r7, sp, #0
 8012772:	60f8      	str	r0, [r7, #12]
 8012774:	60b9      	str	r1, [r7, #8]
 8012776:	4613      	mov	r3, r2
 8012778:	71fb      	strb	r3, [r7, #7]
 801277a:	68fb      	ldr	r3, [r7, #12]
 801277c:	2b00      	cmp	r3, #0
 801277e:	d00f      	beq.n	80127a0 <LmhpComplianceInit+0x34>
 8012780:	68bb      	ldr	r3, [r7, #8]
 8012782:	2b00      	cmp	r3, #0
 8012784:	d00c      	beq.n	80127a0 <LmhpComplianceInit+0x34>
 8012786:	4a0c      	ldr	r2, [pc, #48]	; (80127b8 <LmhpComplianceInit+0x4c>)
 8012788:	68fb      	ldr	r3, [r7, #12]
 801278a:	6013      	str	r3, [r2, #0]
 801278c:	4a0b      	ldr	r2, [pc, #44]	; (80127bc <LmhpComplianceInit+0x50>)
 801278e:	68bb      	ldr	r3, [r7, #8]
 8012790:	6093      	str	r3, [r2, #8]
 8012792:	4a0a      	ldr	r2, [pc, #40]	; (80127bc <LmhpComplianceInit+0x50>)
 8012794:	79fb      	ldrb	r3, [r7, #7]
 8012796:	7193      	strb	r3, [r2, #6]
 8012798:	4b08      	ldr	r3, [pc, #32]	; (80127bc <LmhpComplianceInit+0x50>)
 801279a:	2201      	movs	r2, #1
 801279c:	701a      	strb	r2, [r3, #0]
 801279e:	e006      	b.n	80127ae <LmhpComplianceInit+0x42>
 80127a0:	4b05      	ldr	r3, [pc, #20]	; (80127b8 <LmhpComplianceInit+0x4c>)
 80127a2:	2200      	movs	r2, #0
 80127a4:	601a      	str	r2, [r3, #0]
 80127a6:	4b05      	ldr	r3, [pc, #20]	; (80127bc <LmhpComplianceInit+0x50>)
 80127a8:	2200      	movs	r2, #0
 80127aa:	701a      	strb	r2, [r3, #0]
 80127ac:	bf00      	nop
 80127ae:	bf00      	nop
 80127b0:	3714      	adds	r7, #20
 80127b2:	46bd      	mov	sp, r7
 80127b4:	bc80      	pop	{r7}
 80127b6:	4770      	bx	lr
 80127b8:	20000bdc 	.word	0x20000bdc
 80127bc:	20000bc8 	.word	0x20000bc8

080127c0 <LmhpComplianceIsInitialized>:
 80127c0:	b480      	push	{r7}
 80127c2:	af00      	add	r7, sp, #0
 80127c4:	4b02      	ldr	r3, [pc, #8]	; (80127d0 <LmhpComplianceIsInitialized+0x10>)
 80127c6:	781b      	ldrb	r3, [r3, #0]
 80127c8:	4618      	mov	r0, r3
 80127ca:	46bd      	mov	sp, r7
 80127cc:	bc80      	pop	{r7}
 80127ce:	4770      	bx	lr
 80127d0:	20000bc8 	.word	0x20000bc8

080127d4 <LmhpComplianceIsRunning>:
 80127d4:	b480      	push	{r7}
 80127d6:	af00      	add	r7, sp, #0
 80127d8:	4b07      	ldr	r3, [pc, #28]	; (80127f8 <LmhpComplianceIsRunning+0x24>)
 80127da:	781b      	ldrb	r3, [r3, #0]
 80127dc:	f083 0301 	eor.w	r3, r3, #1
 80127e0:	b2db      	uxtb	r3, r3
 80127e2:	2b00      	cmp	r3, #0
 80127e4:	d001      	beq.n	80127ea <LmhpComplianceIsRunning+0x16>
 80127e6:	2300      	movs	r3, #0
 80127e8:	e001      	b.n	80127ee <LmhpComplianceIsRunning+0x1a>
 80127ea:	4b03      	ldr	r3, [pc, #12]	; (80127f8 <LmhpComplianceIsRunning+0x24>)
 80127ec:	785b      	ldrb	r3, [r3, #1]
 80127ee:	4618      	mov	r0, r3
 80127f0:	46bd      	mov	sp, r7
 80127f2:	bc80      	pop	{r7}
 80127f4:	4770      	bx	lr
 80127f6:	bf00      	nop
 80127f8:	20000bc8 	.word	0x20000bc8

080127fc <LmhpComplianceOnMcpsConfirm>:
 80127fc:	b480      	push	{r7}
 80127fe:	b083      	sub	sp, #12
 8012800:	af00      	add	r7, sp, #0
 8012802:	6078      	str	r0, [r7, #4]
 8012804:	4b0f      	ldr	r3, [pc, #60]	; (8012844 <LmhpComplianceOnMcpsConfirm+0x48>)
 8012806:	781b      	ldrb	r3, [r3, #0]
 8012808:	f083 0301 	eor.w	r3, r3, #1
 801280c:	b2db      	uxtb	r3, r3
 801280e:	2b00      	cmp	r3, #0
 8012810:	d112      	bne.n	8012838 <LmhpComplianceOnMcpsConfirm+0x3c>
 8012812:	4b0c      	ldr	r3, [pc, #48]	; (8012844 <LmhpComplianceOnMcpsConfirm+0x48>)
 8012814:	785b      	ldrb	r3, [r3, #1]
 8012816:	2b00      	cmp	r3, #0
 8012818:	d00f      	beq.n	801283a <LmhpComplianceOnMcpsConfirm+0x3e>
 801281a:	687b      	ldr	r3, [r7, #4]
 801281c:	781b      	ldrb	r3, [r3, #0]
 801281e:	2b01      	cmp	r3, #1
 8012820:	d10b      	bne.n	801283a <LmhpComplianceOnMcpsConfirm+0x3e>
 8012822:	687b      	ldr	r3, [r7, #4]
 8012824:	791b      	ldrb	r3, [r3, #4]
 8012826:	2b00      	cmp	r3, #0
 8012828:	d007      	beq.n	801283a <LmhpComplianceOnMcpsConfirm+0x3e>
 801282a:	4b06      	ldr	r3, [pc, #24]	; (8012844 <LmhpComplianceOnMcpsConfirm+0x48>)
 801282c:	899b      	ldrh	r3, [r3, #12]
 801282e:	3301      	adds	r3, #1
 8012830:	b29a      	uxth	r2, r3
 8012832:	4b04      	ldr	r3, [pc, #16]	; (8012844 <LmhpComplianceOnMcpsConfirm+0x48>)
 8012834:	819a      	strh	r2, [r3, #12]
 8012836:	e000      	b.n	801283a <LmhpComplianceOnMcpsConfirm+0x3e>
 8012838:	bf00      	nop
 801283a:	370c      	adds	r7, #12
 801283c:	46bd      	mov	sp, r7
 801283e:	bc80      	pop	{r7}
 8012840:	4770      	bx	lr
 8012842:	bf00      	nop
 8012844:	20000bc8 	.word	0x20000bc8

08012848 <LmhpComplianceOnMlmeConfirm>:
 8012848:	b480      	push	{r7}
 801284a:	b083      	sub	sp, #12
 801284c:	af00      	add	r7, sp, #0
 801284e:	6078      	str	r0, [r7, #4]
 8012850:	4b0d      	ldr	r3, [pc, #52]	; (8012888 <LmhpComplianceOnMlmeConfirm+0x40>)
 8012852:	781b      	ldrb	r3, [r3, #0]
 8012854:	f083 0301 	eor.w	r3, r3, #1
 8012858:	b2db      	uxtb	r3, r3
 801285a:	2b00      	cmp	r3, #0
 801285c:	d10f      	bne.n	801287e <LmhpComplianceOnMlmeConfirm+0x36>
 801285e:	687b      	ldr	r3, [r7, #4]
 8012860:	781b      	ldrb	r3, [r3, #0]
 8012862:	2b04      	cmp	r3, #4
 8012864:	d10c      	bne.n	8012880 <LmhpComplianceOnMlmeConfirm+0x38>
 8012866:	4b08      	ldr	r3, [pc, #32]	; (8012888 <LmhpComplianceOnMlmeConfirm+0x40>)
 8012868:	2201      	movs	r2, #1
 801286a:	739a      	strb	r2, [r3, #14]
 801286c:	687b      	ldr	r3, [r7, #4]
 801286e:	7a1a      	ldrb	r2, [r3, #8]
 8012870:	4b05      	ldr	r3, [pc, #20]	; (8012888 <LmhpComplianceOnMlmeConfirm+0x40>)
 8012872:	73da      	strb	r2, [r3, #15]
 8012874:	687b      	ldr	r3, [r7, #4]
 8012876:	7a5a      	ldrb	r2, [r3, #9]
 8012878:	4b03      	ldr	r3, [pc, #12]	; (8012888 <LmhpComplianceOnMlmeConfirm+0x40>)
 801287a:	741a      	strb	r2, [r3, #16]
 801287c:	e000      	b.n	8012880 <LmhpComplianceOnMlmeConfirm+0x38>
 801287e:	bf00      	nop
 8012880:	370c      	adds	r7, #12
 8012882:	46bd      	mov	sp, r7
 8012884:	bc80      	pop	{r7}
 8012886:	4770      	bx	lr
 8012888:	20000bc8 	.word	0x20000bc8

0801288c <LmhpComplianceTxProcess>:
 801288c:	b590      	push	{r4, r7, lr}
 801288e:	b085      	sub	sp, #20
 8012890:	af00      	add	r7, sp, #0
 8012892:	4b30      	ldr	r3, [pc, #192]	; (8012954 <LmhpComplianceTxProcess+0xc8>)
 8012894:	781b      	ldrb	r3, [r3, #0]
 8012896:	f083 0301 	eor.w	r3, r3, #1
 801289a:	b2db      	uxtb	r3, r3
 801289c:	2b00      	cmp	r3, #0
 801289e:	d002      	beq.n	80128a6 <LmhpComplianceTxProcess+0x1a>
 80128a0:	f04f 33ff 	mov.w	r3, #4294967295
 80128a4:	e052      	b.n	801294c <LmhpComplianceTxProcess+0xc0>
 80128a6:	4b2b      	ldr	r3, [pc, #172]	; (8012954 <LmhpComplianceTxProcess+0xc8>)
 80128a8:	7b9b      	ldrb	r3, [r3, #14]
 80128aa:	2b00      	cmp	r3, #0
 80128ac:	d019      	beq.n	80128e2 <LmhpComplianceTxProcess+0x56>
 80128ae:	4b29      	ldr	r3, [pc, #164]	; (8012954 <LmhpComplianceTxProcess+0xc8>)
 80128b0:	2200      	movs	r2, #0
 80128b2:	739a      	strb	r2, [r3, #14]
 80128b4:	4b27      	ldr	r3, [pc, #156]	; (8012954 <LmhpComplianceTxProcess+0xc8>)
 80128b6:	2203      	movs	r2, #3
 80128b8:	71da      	strb	r2, [r3, #7]
 80128ba:	4b26      	ldr	r3, [pc, #152]	; (8012954 <LmhpComplianceTxProcess+0xc8>)
 80128bc:	689b      	ldr	r3, [r3, #8]
 80128be:	2205      	movs	r2, #5
 80128c0:	701a      	strb	r2, [r3, #0]
 80128c2:	4b24      	ldr	r3, [pc, #144]	; (8012954 <LmhpComplianceTxProcess+0xc8>)
 80128c4:	689b      	ldr	r3, [r3, #8]
 80128c6:	3301      	adds	r3, #1
 80128c8:	4a22      	ldr	r2, [pc, #136]	; (8012954 <LmhpComplianceTxProcess+0xc8>)
 80128ca:	7bd2      	ldrb	r2, [r2, #15]
 80128cc:	701a      	strb	r2, [r3, #0]
 80128ce:	4b21      	ldr	r3, [pc, #132]	; (8012954 <LmhpComplianceTxProcess+0xc8>)
 80128d0:	689b      	ldr	r3, [r3, #8]
 80128d2:	3302      	adds	r3, #2
 80128d4:	4a1f      	ldr	r2, [pc, #124]	; (8012954 <LmhpComplianceTxProcess+0xc8>)
 80128d6:	7c12      	ldrb	r2, [r2, #16]
 80128d8:	701a      	strb	r2, [r3, #0]
 80128da:	4b1e      	ldr	r3, [pc, #120]	; (8012954 <LmhpComplianceTxProcess+0xc8>)
 80128dc:	2201      	movs	r2, #1
 80128de:	709a      	strb	r2, [r3, #2]
 80128e0:	e01c      	b.n	801291c <LmhpComplianceTxProcess+0x90>
 80128e2:	4b1c      	ldr	r3, [pc, #112]	; (8012954 <LmhpComplianceTxProcess+0xc8>)
 80128e4:	789b      	ldrb	r3, [r3, #2]
 80128e6:	2b01      	cmp	r3, #1
 80128e8:	d005      	beq.n	80128f6 <LmhpComplianceTxProcess+0x6a>
 80128ea:	2b04      	cmp	r3, #4
 80128ec:	d116      	bne.n	801291c <LmhpComplianceTxProcess+0x90>
 80128ee:	4b19      	ldr	r3, [pc, #100]	; (8012954 <LmhpComplianceTxProcess+0xc8>)
 80128f0:	2201      	movs	r2, #1
 80128f2:	709a      	strb	r2, [r3, #2]
 80128f4:	e012      	b.n	801291c <LmhpComplianceTxProcess+0x90>
 80128f6:	4b17      	ldr	r3, [pc, #92]	; (8012954 <LmhpComplianceTxProcess+0xc8>)
 80128f8:	2202      	movs	r2, #2
 80128fa:	71da      	strb	r2, [r3, #7]
 80128fc:	4b15      	ldr	r3, [pc, #84]	; (8012954 <LmhpComplianceTxProcess+0xc8>)
 80128fe:	899b      	ldrh	r3, [r3, #12]
 8012900:	0a1b      	lsrs	r3, r3, #8
 8012902:	b29a      	uxth	r2, r3
 8012904:	4b13      	ldr	r3, [pc, #76]	; (8012954 <LmhpComplianceTxProcess+0xc8>)
 8012906:	689b      	ldr	r3, [r3, #8]
 8012908:	b2d2      	uxtb	r2, r2
 801290a:	701a      	strb	r2, [r3, #0]
 801290c:	4b11      	ldr	r3, [pc, #68]	; (8012954 <LmhpComplianceTxProcess+0xc8>)
 801290e:	899a      	ldrh	r2, [r3, #12]
 8012910:	4b10      	ldr	r3, [pc, #64]	; (8012954 <LmhpComplianceTxProcess+0xc8>)
 8012912:	689b      	ldr	r3, [r3, #8]
 8012914:	3301      	adds	r3, #1
 8012916:	b2d2      	uxtb	r2, r2
 8012918:	701a      	strb	r2, [r3, #0]
 801291a:	bf00      	nop
 801291c:	23e0      	movs	r3, #224	; 0xe0
 801291e:	723b      	strb	r3, [r7, #8]
 8012920:	4b0c      	ldr	r3, [pc, #48]	; (8012954 <LmhpComplianceTxProcess+0xc8>)
 8012922:	79db      	ldrb	r3, [r3, #7]
 8012924:	727b      	strb	r3, [r7, #9]
 8012926:	4b0b      	ldr	r3, [pc, #44]	; (8012954 <LmhpComplianceTxProcess+0xc8>)
 8012928:	689b      	ldr	r3, [r3, #8]
 801292a:	60fb      	str	r3, [r7, #12]
 801292c:	2300      	movs	r3, #0
 801292e:	607b      	str	r3, [r7, #4]
 8012930:	4809      	ldr	r0, [pc, #36]	; (8012958 <LmhpComplianceTxProcess+0xcc>)
 8012932:	f00e fb65 	bl	8021000 <UTIL_TIMER_Start>
 8012936:	4b09      	ldr	r3, [pc, #36]	; (801295c <LmhpComplianceTxProcess+0xd0>)
 8012938:	6a5c      	ldr	r4, [r3, #36]	; 0x24
 801293a:	4b06      	ldr	r3, [pc, #24]	; (8012954 <LmhpComplianceTxProcess+0xc8>)
 801293c:	791b      	ldrb	r3, [r3, #4]
 801293e:	4619      	mov	r1, r3
 8012940:	1d3a      	adds	r2, r7, #4
 8012942:	f107 0008 	add.w	r0, r7, #8
 8012946:	2301      	movs	r3, #1
 8012948:	47a0      	blx	r4
 801294a:	4603      	mov	r3, r0
 801294c:	4618      	mov	r0, r3
 801294e:	3714      	adds	r7, #20
 8012950:	46bd      	mov	sp, r7
 8012952:	bd90      	pop	{r4, r7, pc}
 8012954:	20000bc8 	.word	0x20000bc8
 8012958:	20000bb0 	.word	0x20000bb0
 801295c:	20000188 	.word	0x20000188

08012960 <LmhpComplianceOnMcpsIndication>:
 8012960:	b580      	push	{r7, lr}
 8012962:	b0a2      	sub	sp, #136	; 0x88
 8012964:	af02      	add	r7, sp, #8
 8012966:	6078      	str	r0, [r7, #4]
 8012968:	4bae      	ldr	r3, [pc, #696]	; (8012c24 <LmhpComplianceOnMcpsIndication+0x2c4>)
 801296a:	781b      	ldrb	r3, [r3, #0]
 801296c:	f083 0301 	eor.w	r3, r3, #1
 8012970:	b2db      	uxtb	r3, r3
 8012972:	2b00      	cmp	r3, #0
 8012974:	f040 81be 	bne.w	8012cf4 <LmhpComplianceOnMcpsIndication+0x394>
 8012978:	687b      	ldr	r3, [r7, #4]
 801297a:	7b5b      	ldrb	r3, [r3, #13]
 801297c:	f083 0301 	eor.w	r3, r3, #1
 8012980:	b2db      	uxtb	r3, r3
 8012982:	2b00      	cmp	r3, #0
 8012984:	f040 81b8 	bne.w	8012cf8 <LmhpComplianceOnMcpsIndication+0x398>
 8012988:	4ba6      	ldr	r3, [pc, #664]	; (8012c24 <LmhpComplianceOnMcpsIndication+0x2c4>)
 801298a:	785b      	ldrb	r3, [r3, #1]
 801298c:	2b00      	cmp	r3, #0
 801298e:	d00c      	beq.n	80129aa <LmhpComplianceOnMcpsIndication+0x4a>
 8012990:	687b      	ldr	r3, [r7, #4]
 8012992:	7c9b      	ldrb	r3, [r3, #18]
 8012994:	f083 0301 	eor.w	r3, r3, #1
 8012998:	b2db      	uxtb	r3, r3
 801299a:	2b00      	cmp	r3, #0
 801299c:	d005      	beq.n	80129aa <LmhpComplianceOnMcpsIndication+0x4a>
 801299e:	4ba1      	ldr	r3, [pc, #644]	; (8012c24 <LmhpComplianceOnMcpsIndication+0x2c4>)
 80129a0:	899b      	ldrh	r3, [r3, #12]
 80129a2:	3301      	adds	r3, #1
 80129a4:	b29a      	uxth	r2, r3
 80129a6:	4b9f      	ldr	r3, [pc, #636]	; (8012c24 <LmhpComplianceOnMcpsIndication+0x2c4>)
 80129a8:	819a      	strh	r2, [r3, #12]
 80129aa:	687b      	ldr	r3, [r7, #4]
 80129ac:	78db      	ldrb	r3, [r3, #3]
 80129ae:	2be0      	cmp	r3, #224	; 0xe0
 80129b0:	f040 81a4 	bne.w	8012cfc <LmhpComplianceOnMcpsIndication+0x39c>
 80129b4:	4b9b      	ldr	r3, [pc, #620]	; (8012c24 <LmhpComplianceOnMcpsIndication+0x2c4>)
 80129b6:	785b      	ldrb	r3, [r3, #1]
 80129b8:	f083 0301 	eor.w	r3, r3, #1
 80129bc:	b2db      	uxtb	r3, r3
 80129be:	2b00      	cmp	r3, #0
 80129c0:	d060      	beq.n	8012a84 <LmhpComplianceOnMcpsIndication+0x124>
 80129c2:	687b      	ldr	r3, [r7, #4]
 80129c4:	7b1b      	ldrb	r3, [r3, #12]
 80129c6:	2b04      	cmp	r3, #4
 80129c8:	f040 819d 	bne.w	8012d06 <LmhpComplianceOnMcpsIndication+0x3a6>
 80129cc:	687b      	ldr	r3, [r7, #4]
 80129ce:	689b      	ldr	r3, [r3, #8]
 80129d0:	781b      	ldrb	r3, [r3, #0]
 80129d2:	2b01      	cmp	r3, #1
 80129d4:	f040 8197 	bne.w	8012d06 <LmhpComplianceOnMcpsIndication+0x3a6>
 80129d8:	687b      	ldr	r3, [r7, #4]
 80129da:	689b      	ldr	r3, [r3, #8]
 80129dc:	3301      	adds	r3, #1
 80129de:	781b      	ldrb	r3, [r3, #0]
 80129e0:	2b01      	cmp	r3, #1
 80129e2:	f040 8190 	bne.w	8012d06 <LmhpComplianceOnMcpsIndication+0x3a6>
 80129e6:	687b      	ldr	r3, [r7, #4]
 80129e8:	689b      	ldr	r3, [r3, #8]
 80129ea:	3302      	adds	r3, #2
 80129ec:	781b      	ldrb	r3, [r3, #0]
 80129ee:	2b01      	cmp	r3, #1
 80129f0:	f040 8189 	bne.w	8012d06 <LmhpComplianceOnMcpsIndication+0x3a6>
 80129f4:	687b      	ldr	r3, [r7, #4]
 80129f6:	689b      	ldr	r3, [r3, #8]
 80129f8:	3303      	adds	r3, #3
 80129fa:	781b      	ldrb	r3, [r3, #0]
 80129fc:	2b01      	cmp	r3, #1
 80129fe:	f040 8182 	bne.w	8012d06 <LmhpComplianceOnMcpsIndication+0x3a6>
 8012a02:	4b88      	ldr	r3, [pc, #544]	; (8012c24 <LmhpComplianceOnMcpsIndication+0x2c4>)
 8012a04:	2200      	movs	r2, #0
 8012a06:	711a      	strb	r2, [r3, #4]
 8012a08:	4b86      	ldr	r3, [pc, #536]	; (8012c24 <LmhpComplianceOnMcpsIndication+0x2c4>)
 8012a0a:	22e0      	movs	r2, #224	; 0xe0
 8012a0c:	715a      	strb	r2, [r3, #5]
 8012a0e:	4b85      	ldr	r3, [pc, #532]	; (8012c24 <LmhpComplianceOnMcpsIndication+0x2c4>)
 8012a10:	2202      	movs	r2, #2
 8012a12:	71da      	strb	r2, [r3, #7]
 8012a14:	4b83      	ldr	r3, [pc, #524]	; (8012c24 <LmhpComplianceOnMcpsIndication+0x2c4>)
 8012a16:	2200      	movs	r2, #0
 8012a18:	819a      	strh	r2, [r3, #12]
 8012a1a:	4b82      	ldr	r3, [pc, #520]	; (8012c24 <LmhpComplianceOnMcpsIndication+0x2c4>)
 8012a1c:	2200      	movs	r2, #0
 8012a1e:	739a      	strb	r2, [r3, #14]
 8012a20:	4b80      	ldr	r3, [pc, #512]	; (8012c24 <LmhpComplianceOnMcpsIndication+0x2c4>)
 8012a22:	2200      	movs	r2, #0
 8012a24:	73da      	strb	r2, [r3, #15]
 8012a26:	4b7f      	ldr	r3, [pc, #508]	; (8012c24 <LmhpComplianceOnMcpsIndication+0x2c4>)
 8012a28:	2200      	movs	r2, #0
 8012a2a:	741a      	strb	r2, [r3, #16]
 8012a2c:	4b7d      	ldr	r3, [pc, #500]	; (8012c24 <LmhpComplianceOnMcpsIndication+0x2c4>)
 8012a2e:	2201      	movs	r2, #1
 8012a30:	705a      	strb	r2, [r3, #1]
 8012a32:	4b7c      	ldr	r3, [pc, #496]	; (8012c24 <LmhpComplianceOnMcpsIndication+0x2c4>)
 8012a34:	2201      	movs	r2, #1
 8012a36:	709a      	strb	r2, [r3, #2]
 8012a38:	2304      	movs	r3, #4
 8012a3a:	723b      	strb	r3, [r7, #8]
 8012a3c:	2301      	movs	r3, #1
 8012a3e:	733b      	strb	r3, [r7, #12]
 8012a40:	f107 0308 	add.w	r3, r7, #8
 8012a44:	4618      	mov	r0, r3
 8012a46:	f004 f9f1 	bl	8016e2c <LoRaMacMibSetRequestConfirm>
 8012a4a:	2000      	movs	r0, #0
 8012a4c:	f004 ffbc 	bl	80179c8 <LoRaMacTestSetDutyCycleOn>
 8012a50:	4b75      	ldr	r3, [pc, #468]	; (8012c28 <LmhpComplianceOnMcpsIndication+0x2c8>)
 8012a52:	681b      	ldr	r3, [r3, #0]
 8012a54:	685b      	ldr	r3, [r3, #4]
 8012a56:	2b00      	cmp	r3, #0
 8012a58:	d003      	beq.n	8012a62 <LmhpComplianceOnMcpsIndication+0x102>
 8012a5a:	4b73      	ldr	r3, [pc, #460]	; (8012c28 <LmhpComplianceOnMcpsIndication+0x2c8>)
 8012a5c:	681b      	ldr	r3, [r3, #0]
 8012a5e:	685b      	ldr	r3, [r3, #4]
 8012a60:	4798      	blx	r3
 8012a62:	2300      	movs	r3, #0
 8012a64:	9300      	str	r3, [sp, #0]
 8012a66:	4b71      	ldr	r3, [pc, #452]	; (8012c2c <LmhpComplianceOnMcpsIndication+0x2cc>)
 8012a68:	2200      	movs	r2, #0
 8012a6a:	f04f 31ff 	mov.w	r1, #4294967295
 8012a6e:	4870      	ldr	r0, [pc, #448]	; (8012c30 <LmhpComplianceOnMcpsIndication+0x2d0>)
 8012a70:	f00e fa90 	bl	8020f94 <UTIL_TIMER_Create>
 8012a74:	f241 3188 	movw	r1, #5000	; 0x1388
 8012a78:	486d      	ldr	r0, [pc, #436]	; (8012c30 <LmhpComplianceOnMcpsIndication+0x2d0>)
 8012a7a:	f00e fb9f 	bl	80211bc <UTIL_TIMER_SetPeriod>
 8012a7e:	f7ff ff05 	bl	801288c <LmhpComplianceTxProcess>
 8012a82:	e140      	b.n	8012d06 <LmhpComplianceOnMcpsIndication+0x3a6>
 8012a84:	687b      	ldr	r3, [r7, #4]
 8012a86:	689b      	ldr	r3, [r3, #8]
 8012a88:	781a      	ldrb	r2, [r3, #0]
 8012a8a:	4b66      	ldr	r3, [pc, #408]	; (8012c24 <LmhpComplianceOnMcpsIndication+0x2c4>)
 8012a8c:	709a      	strb	r2, [r3, #2]
 8012a8e:	4b65      	ldr	r3, [pc, #404]	; (8012c24 <LmhpComplianceOnMcpsIndication+0x2c4>)
 8012a90:	789b      	ldrb	r3, [r3, #2]
 8012a92:	2b0a      	cmp	r3, #10
 8012a94:	f200 8134 	bhi.w	8012d00 <LmhpComplianceOnMcpsIndication+0x3a0>
 8012a98:	a201      	add	r2, pc, #4	; (adr r2, 8012aa0 <LmhpComplianceOnMcpsIndication+0x140>)
 8012a9a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8012a9e:	bf00      	nop
 8012aa0:	08012acd 	.word	0x08012acd
 8012aa4:	08012b17 	.word	0x08012b17
 8012aa8:	08012b1f 	.word	0x08012b1f
 8012aac:	08012b2d 	.word	0x08012b2d
 8012ab0:	08012b3b 	.word	0x08012b3b
 8012ab4:	08012b93 	.word	0x08012b93
 8012ab8:	08012ba5 	.word	0x08012ba5
 8012abc:	08012bf5 	.word	0x08012bf5
 8012ac0:	08012cad 	.word	0x08012cad
 8012ac4:	08012cbf 	.word	0x08012cbf
 8012ac8:	08012cd9 	.word	0x08012cd9
 8012acc:	4858      	ldr	r0, [pc, #352]	; (8012c30 <LmhpComplianceOnMcpsIndication+0x2d0>)
 8012ace:	f00e fb05 	bl	80210dc <UTIL_TIMER_Stop>
 8012ad2:	4b54      	ldr	r3, [pc, #336]	; (8012c24 <LmhpComplianceOnMcpsIndication+0x2c4>)
 8012ad4:	2200      	movs	r2, #0
 8012ad6:	819a      	strh	r2, [r3, #12]
 8012ad8:	4b52      	ldr	r3, [pc, #328]	; (8012c24 <LmhpComplianceOnMcpsIndication+0x2c4>)
 8012ada:	2200      	movs	r2, #0
 8012adc:	705a      	strb	r2, [r3, #1]
 8012ade:	2304      	movs	r3, #4
 8012ae0:	723b      	strb	r3, [r7, #8]
 8012ae2:	4b51      	ldr	r3, [pc, #324]	; (8012c28 <LmhpComplianceOnMcpsIndication+0x2c8>)
 8012ae4:	681b      	ldr	r3, [r3, #0]
 8012ae6:	781b      	ldrb	r3, [r3, #0]
 8012ae8:	733b      	strb	r3, [r7, #12]
 8012aea:	f107 0308 	add.w	r3, r7, #8
 8012aee:	4618      	mov	r0, r3
 8012af0:	f004 f99c 	bl	8016e2c <LoRaMacMibSetRequestConfirm>
 8012af4:	4b4c      	ldr	r3, [pc, #304]	; (8012c28 <LmhpComplianceOnMcpsIndication+0x2c8>)
 8012af6:	681b      	ldr	r3, [r3, #0]
 8012af8:	785b      	ldrb	r3, [r3, #1]
 8012afa:	4618      	mov	r0, r3
 8012afc:	f004 ff64 	bl	80179c8 <LoRaMacTestSetDutyCycleOn>
 8012b00:	4b49      	ldr	r3, [pc, #292]	; (8012c28 <LmhpComplianceOnMcpsIndication+0x2c8>)
 8012b02:	681b      	ldr	r3, [r3, #0]
 8012b04:	689b      	ldr	r3, [r3, #8]
 8012b06:	2b00      	cmp	r3, #0
 8012b08:	f000 80fc 	beq.w	8012d04 <LmhpComplianceOnMcpsIndication+0x3a4>
 8012b0c:	4b46      	ldr	r3, [pc, #280]	; (8012c28 <LmhpComplianceOnMcpsIndication+0x2c8>)
 8012b0e:	681b      	ldr	r3, [r3, #0]
 8012b10:	689b      	ldr	r3, [r3, #8]
 8012b12:	4798      	blx	r3
 8012b14:	e0f6      	b.n	8012d04 <LmhpComplianceOnMcpsIndication+0x3a4>
 8012b16:	4b43      	ldr	r3, [pc, #268]	; (8012c24 <LmhpComplianceOnMcpsIndication+0x2c4>)
 8012b18:	2202      	movs	r2, #2
 8012b1a:	71da      	strb	r2, [r3, #7]
 8012b1c:	e0f3      	b.n	8012d06 <LmhpComplianceOnMcpsIndication+0x3a6>
 8012b1e:	4b41      	ldr	r3, [pc, #260]	; (8012c24 <LmhpComplianceOnMcpsIndication+0x2c4>)
 8012b20:	2201      	movs	r2, #1
 8012b22:	711a      	strb	r2, [r3, #4]
 8012b24:	4b3f      	ldr	r3, [pc, #252]	; (8012c24 <LmhpComplianceOnMcpsIndication+0x2c4>)
 8012b26:	2201      	movs	r2, #1
 8012b28:	709a      	strb	r2, [r3, #2]
 8012b2a:	e0ec      	b.n	8012d06 <LmhpComplianceOnMcpsIndication+0x3a6>
 8012b2c:	4b3d      	ldr	r3, [pc, #244]	; (8012c24 <LmhpComplianceOnMcpsIndication+0x2c4>)
 8012b2e:	2200      	movs	r2, #0
 8012b30:	711a      	strb	r2, [r3, #4]
 8012b32:	4b3c      	ldr	r3, [pc, #240]	; (8012c24 <LmhpComplianceOnMcpsIndication+0x2c4>)
 8012b34:	2201      	movs	r2, #1
 8012b36:	709a      	strb	r2, [r3, #2]
 8012b38:	e0e5      	b.n	8012d06 <LmhpComplianceOnMcpsIndication+0x3a6>
 8012b3a:	687b      	ldr	r3, [r7, #4]
 8012b3c:	7b1a      	ldrb	r2, [r3, #12]
 8012b3e:	4b39      	ldr	r3, [pc, #228]	; (8012c24 <LmhpComplianceOnMcpsIndication+0x2c4>)
 8012b40:	71da      	strb	r2, [r3, #7]
 8012b42:	4b38      	ldr	r3, [pc, #224]	; (8012c24 <LmhpComplianceOnMcpsIndication+0x2c4>)
 8012b44:	689b      	ldr	r3, [r3, #8]
 8012b46:	2204      	movs	r2, #4
 8012b48:	701a      	strb	r2, [r3, #0]
 8012b4a:	2301      	movs	r3, #1
 8012b4c:	f887 307f 	strb.w	r3, [r7, #127]	; 0x7f
 8012b50:	e012      	b.n	8012b78 <LmhpComplianceOnMcpsIndication+0x218>
 8012b52:	687b      	ldr	r3, [r7, #4]
 8012b54:	689a      	ldr	r2, [r3, #8]
 8012b56:	f897 307f 	ldrb.w	r3, [r7, #127]	; 0x7f
 8012b5a:	4413      	add	r3, r2
 8012b5c:	781a      	ldrb	r2, [r3, #0]
 8012b5e:	4b31      	ldr	r3, [pc, #196]	; (8012c24 <LmhpComplianceOnMcpsIndication+0x2c4>)
 8012b60:	6899      	ldr	r1, [r3, #8]
 8012b62:	f897 307f 	ldrb.w	r3, [r7, #127]	; 0x7f
 8012b66:	440b      	add	r3, r1
 8012b68:	3201      	adds	r2, #1
 8012b6a:	b2d2      	uxtb	r2, r2
 8012b6c:	701a      	strb	r2, [r3, #0]
 8012b6e:	f897 307f 	ldrb.w	r3, [r7, #127]	; 0x7f
 8012b72:	3301      	adds	r3, #1
 8012b74:	f887 307f 	strb.w	r3, [r7, #127]	; 0x7f
 8012b78:	4b2a      	ldr	r3, [pc, #168]	; (8012c24 <LmhpComplianceOnMcpsIndication+0x2c4>)
 8012b7a:	799a      	ldrb	r2, [r3, #6]
 8012b7c:	4b29      	ldr	r3, [pc, #164]	; (8012c24 <LmhpComplianceOnMcpsIndication+0x2c4>)
 8012b7e:	79db      	ldrb	r3, [r3, #7]
 8012b80:	4293      	cmp	r3, r2
 8012b82:	bf28      	it	cs
 8012b84:	4613      	movcs	r3, r2
 8012b86:	b2db      	uxtb	r3, r3
 8012b88:	f897 207f 	ldrb.w	r2, [r7, #127]	; 0x7f
 8012b8c:	429a      	cmp	r2, r3
 8012b8e:	d3e0      	bcc.n	8012b52 <LmhpComplianceOnMcpsIndication+0x1f2>
 8012b90:	e0b9      	b.n	8012d06 <LmhpComplianceOnMcpsIndication+0x3a6>
 8012b92:	2304      	movs	r3, #4
 8012b94:	f887 3068 	strb.w	r3, [r7, #104]	; 0x68
 8012b98:	f107 0368 	add.w	r3, r7, #104	; 0x68
 8012b9c:	4618      	mov	r0, r3
 8012b9e:	f004 fcd1 	bl	8017544 <LoRaMacMlmeRequest>
 8012ba2:	e0b0      	b.n	8012d06 <LmhpComplianceOnMcpsIndication+0x3a6>
 8012ba4:	4822      	ldr	r0, [pc, #136]	; (8012c30 <LmhpComplianceOnMcpsIndication+0x2d0>)
 8012ba6:	f00e fa99 	bl	80210dc <UTIL_TIMER_Stop>
 8012baa:	4b1e      	ldr	r3, [pc, #120]	; (8012c24 <LmhpComplianceOnMcpsIndication+0x2c4>)
 8012bac:	2200      	movs	r2, #0
 8012bae:	819a      	strh	r2, [r3, #12]
 8012bb0:	4b1c      	ldr	r3, [pc, #112]	; (8012c24 <LmhpComplianceOnMcpsIndication+0x2c4>)
 8012bb2:	2200      	movs	r2, #0
 8012bb4:	705a      	strb	r2, [r3, #1]
 8012bb6:	2304      	movs	r3, #4
 8012bb8:	723b      	strb	r3, [r7, #8]
 8012bba:	4b1b      	ldr	r3, [pc, #108]	; (8012c28 <LmhpComplianceOnMcpsIndication+0x2c8>)
 8012bbc:	681b      	ldr	r3, [r3, #0]
 8012bbe:	781b      	ldrb	r3, [r3, #0]
 8012bc0:	733b      	strb	r3, [r7, #12]
 8012bc2:	f107 0308 	add.w	r3, r7, #8
 8012bc6:	4618      	mov	r0, r3
 8012bc8:	f004 f930 	bl	8016e2c <LoRaMacMibSetRequestConfirm>
 8012bcc:	4b16      	ldr	r3, [pc, #88]	; (8012c28 <LmhpComplianceOnMcpsIndication+0x2c8>)
 8012bce:	681b      	ldr	r3, [r3, #0]
 8012bd0:	785b      	ldrb	r3, [r3, #1]
 8012bd2:	4618      	mov	r0, r3
 8012bd4:	f004 fef8 	bl	80179c8 <LoRaMacTestSetDutyCycleOn>
 8012bd8:	4b13      	ldr	r3, [pc, #76]	; (8012c28 <LmhpComplianceOnMcpsIndication+0x2c8>)
 8012bda:	681b      	ldr	r3, [r3, #0]
 8012bdc:	689b      	ldr	r3, [r3, #8]
 8012bde:	2b00      	cmp	r3, #0
 8012be0:	d003      	beq.n	8012bea <LmhpComplianceOnMcpsIndication+0x28a>
 8012be2:	4b11      	ldr	r3, [pc, #68]	; (8012c28 <LmhpComplianceOnMcpsIndication+0x2c8>)
 8012be4:	681b      	ldr	r3, [r3, #0]
 8012be6:	689b      	ldr	r3, [r3, #8]
 8012be8:	4798      	blx	r3
 8012bea:	4b12      	ldr	r3, [pc, #72]	; (8012c34 <LmhpComplianceOnMcpsIndication+0x2d4>)
 8012bec:	6a1b      	ldr	r3, [r3, #32]
 8012bee:	2002      	movs	r0, #2
 8012bf0:	4798      	blx	r3
 8012bf2:	e088      	b.n	8012d06 <LmhpComplianceOnMcpsIndication+0x3a6>
 8012bf4:	687b      	ldr	r3, [r7, #4]
 8012bf6:	7b1b      	ldrb	r3, [r3, #12]
 8012bf8:	2b03      	cmp	r3, #3
 8012bfa:	d11d      	bne.n	8012c38 <LmhpComplianceOnMcpsIndication+0x2d8>
 8012bfc:	2305      	movs	r3, #5
 8012bfe:	f887 3054 	strb.w	r3, [r7, #84]	; 0x54
 8012c02:	687b      	ldr	r3, [r7, #4]
 8012c04:	689b      	ldr	r3, [r3, #8]
 8012c06:	3301      	adds	r3, #1
 8012c08:	781b      	ldrb	r3, [r3, #0]
 8012c0a:	021b      	lsls	r3, r3, #8
 8012c0c:	b21a      	sxth	r2, r3
 8012c0e:	687b      	ldr	r3, [r7, #4]
 8012c10:	689b      	ldr	r3, [r3, #8]
 8012c12:	3302      	adds	r3, #2
 8012c14:	781b      	ldrb	r3, [r3, #0]
 8012c16:	b21b      	sxth	r3, r3
 8012c18:	4313      	orrs	r3, r2
 8012c1a:	b21b      	sxth	r3, r3
 8012c1c:	b29b      	uxth	r3, r3
 8012c1e:	f8a7 3058 	strh.w	r3, [r7, #88]	; 0x58
 8012c22:	e03a      	b.n	8012c9a <LmhpComplianceOnMcpsIndication+0x33a>
 8012c24:	20000bc8 	.word	0x20000bc8
 8012c28:	20000bdc 	.word	0x20000bdc
 8012c2c:	08012d1d 	.word	0x08012d1d
 8012c30:	20000bb0 	.word	0x20000bb0
 8012c34:	20000188 	.word	0x20000188
 8012c38:	687b      	ldr	r3, [r7, #4]
 8012c3a:	7b1b      	ldrb	r3, [r3, #12]
 8012c3c:	2b07      	cmp	r3, #7
 8012c3e:	d12c      	bne.n	8012c9a <LmhpComplianceOnMcpsIndication+0x33a>
 8012c40:	2306      	movs	r3, #6
 8012c42:	f887 3054 	strb.w	r3, [r7, #84]	; 0x54
 8012c46:	687b      	ldr	r3, [r7, #4]
 8012c48:	689b      	ldr	r3, [r3, #8]
 8012c4a:	3301      	adds	r3, #1
 8012c4c:	781b      	ldrb	r3, [r3, #0]
 8012c4e:	021b      	lsls	r3, r3, #8
 8012c50:	b21a      	sxth	r2, r3
 8012c52:	687b      	ldr	r3, [r7, #4]
 8012c54:	689b      	ldr	r3, [r3, #8]
 8012c56:	3302      	adds	r3, #2
 8012c58:	781b      	ldrb	r3, [r3, #0]
 8012c5a:	b21b      	sxth	r3, r3
 8012c5c:	4313      	orrs	r3, r2
 8012c5e:	b21b      	sxth	r3, r3
 8012c60:	b29b      	uxth	r3, r3
 8012c62:	f8a7 3058 	strh.w	r3, [r7, #88]	; 0x58
 8012c66:	687b      	ldr	r3, [r7, #4]
 8012c68:	689b      	ldr	r3, [r3, #8]
 8012c6a:	3303      	adds	r3, #3
 8012c6c:	781b      	ldrb	r3, [r3, #0]
 8012c6e:	041a      	lsls	r2, r3, #16
 8012c70:	687b      	ldr	r3, [r7, #4]
 8012c72:	689b      	ldr	r3, [r3, #8]
 8012c74:	3304      	adds	r3, #4
 8012c76:	781b      	ldrb	r3, [r3, #0]
 8012c78:	021b      	lsls	r3, r3, #8
 8012c7a:	4313      	orrs	r3, r2
 8012c7c:	687a      	ldr	r2, [r7, #4]
 8012c7e:	6892      	ldr	r2, [r2, #8]
 8012c80:	3205      	adds	r2, #5
 8012c82:	7812      	ldrb	r2, [r2, #0]
 8012c84:	4313      	orrs	r3, r2
 8012c86:	461a      	mov	r2, r3
 8012c88:	2364      	movs	r3, #100	; 0x64
 8012c8a:	fb03 f302 	mul.w	r3, r3, r2
 8012c8e:	65fb      	str	r3, [r7, #92]	; 0x5c
 8012c90:	687b      	ldr	r3, [r7, #4]
 8012c92:	689b      	ldr	r3, [r3, #8]
 8012c94:	799b      	ldrb	r3, [r3, #6]
 8012c96:	f887 3060 	strb.w	r3, [r7, #96]	; 0x60
 8012c9a:	f107 0354 	add.w	r3, r7, #84	; 0x54
 8012c9e:	4618      	mov	r0, r3
 8012ca0:	f004 fc50 	bl	8017544 <LoRaMacMlmeRequest>
 8012ca4:	4b19      	ldr	r3, [pc, #100]	; (8012d0c <LmhpComplianceOnMcpsIndication+0x3ac>)
 8012ca6:	2201      	movs	r2, #1
 8012ca8:	709a      	strb	r2, [r3, #2]
 8012caa:	e02c      	b.n	8012d06 <LmhpComplianceOnMcpsIndication+0x3a6>
 8012cac:	230a      	movs	r3, #10
 8012cae:	f887 3040 	strb.w	r3, [r7, #64]	; 0x40
 8012cb2:	f107 0340 	add.w	r3, r7, #64	; 0x40
 8012cb6:	4618      	mov	r0, r3
 8012cb8:	f004 fc44 	bl	8017544 <LoRaMacMlmeRequest>
 8012cbc:	e023      	b.n	8012d06 <LmhpComplianceOnMcpsIndication+0x3a6>
 8012cbe:	2300      	movs	r3, #0
 8012cc0:	723b      	strb	r3, [r7, #8]
 8012cc2:	687b      	ldr	r3, [r7, #4]
 8012cc4:	689b      	ldr	r3, [r3, #8]
 8012cc6:	3301      	adds	r3, #1
 8012cc8:	781b      	ldrb	r3, [r3, #0]
 8012cca:	733b      	strb	r3, [r7, #12]
 8012ccc:	f107 0308 	add.w	r3, r7, #8
 8012cd0:	4618      	mov	r0, r3
 8012cd2:	f004 f8ab 	bl	8016e2c <LoRaMacMibSetRequestConfirm>
 8012cd6:	e016      	b.n	8012d06 <LmhpComplianceOnMcpsIndication+0x3a6>
 8012cd8:	230d      	movs	r3, #13
 8012cda:	f887 302c 	strb.w	r3, [r7, #44]	; 0x2c
 8012cde:	687b      	ldr	r3, [r7, #4]
 8012ce0:	689b      	ldr	r3, [r3, #8]
 8012ce2:	785b      	ldrb	r3, [r3, #1]
 8012ce4:	f887 3030 	strb.w	r3, [r7, #48]	; 0x30
 8012ce8:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8012cec:	4618      	mov	r0, r3
 8012cee:	f004 fc29 	bl	8017544 <LoRaMacMlmeRequest>
 8012cf2:	e008      	b.n	8012d06 <LmhpComplianceOnMcpsIndication+0x3a6>
 8012cf4:	bf00      	nop
 8012cf6:	e006      	b.n	8012d06 <LmhpComplianceOnMcpsIndication+0x3a6>
 8012cf8:	bf00      	nop
 8012cfa:	e004      	b.n	8012d06 <LmhpComplianceOnMcpsIndication+0x3a6>
 8012cfc:	bf00      	nop
 8012cfe:	e002      	b.n	8012d06 <LmhpComplianceOnMcpsIndication+0x3a6>
 8012d00:	bf00      	nop
 8012d02:	e000      	b.n	8012d06 <LmhpComplianceOnMcpsIndication+0x3a6>
 8012d04:	bf00      	nop
 8012d06:	3780      	adds	r7, #128	; 0x80
 8012d08:	46bd      	mov	sp, r7
 8012d0a:	bd80      	pop	{r7, pc}
 8012d0c:	20000bc8 	.word	0x20000bc8

08012d10 <LmhpComplianceProcess>:
 8012d10:	b480      	push	{r7}
 8012d12:	af00      	add	r7, sp, #0
 8012d14:	bf00      	nop
 8012d16:	46bd      	mov	sp, r7
 8012d18:	bc80      	pop	{r7}
 8012d1a:	4770      	bx	lr

08012d1c <OnComplianceTxNextPacketTimerEvent>:
 8012d1c:	b580      	push	{r7, lr}
 8012d1e:	b082      	sub	sp, #8
 8012d20:	af00      	add	r7, sp, #0
 8012d22:	6078      	str	r0, [r7, #4]
 8012d24:	f7ff fdb2 	bl	801288c <LmhpComplianceTxProcess>
 8012d28:	bf00      	nop
 8012d2a:	3708      	adds	r7, #8
 8012d2c:	46bd      	mov	sp, r7
 8012d2e:	bd80      	pop	{r7, pc}

08012d30 <OnRadioTxDone>:
 */
static void LoRaMacHandleIndicationEvents( void );

/* Private  functions ---------------------------------------------------------*/
static void OnRadioTxDone( void )
{
 8012d30:	b590      	push	{r4, r7, lr}
 8012d32:	b083      	sub	sp, #12
 8012d34:	af00      	add	r7, sp, #0
    TxDoneParams.CurTime = TimerGetCurrentTime( );
 8012d36:	f00e faeb 	bl	8021310 <UTIL_TIMER_GetCurrentTime>
 8012d3a:	4603      	mov	r3, r0
 8012d3c:	4a16      	ldr	r2, [pc, #88]	; (8012d98 <OnRadioTxDone+0x68>)
 8012d3e:	6013      	str	r3, [r2, #0]
    MacCtx.LastTxSysTime = SysTimeGet( );
 8012d40:	4c16      	ldr	r4, [pc, #88]	; (8012d9c <OnRadioTxDone+0x6c>)
 8012d42:	463b      	mov	r3, r7
 8012d44:	4618      	mov	r0, r3
 8012d46:	f00d fcdb 	bl	8020700 <SysTimeGet>
 8012d4a:	f504 734e 	add.w	r3, r4, #824	; 0x338
 8012d4e:	463a      	mov	r2, r7
 8012d50:	e892 0003 	ldmia.w	r2, {r0, r1}
 8012d54:	e883 0003 	stmia.w	r3, {r0, r1}

    LoRaMacRadioEvents.Events.TxDone = 1;
 8012d58:	4a11      	ldr	r2, [pc, #68]	; (8012da0 <OnRadioTxDone+0x70>)
 8012d5a:	7813      	ldrb	r3, [r2, #0]
 8012d5c:	f043 0310 	orr.w	r3, r3, #16
 8012d60:	7013      	strb	r3, [r2, #0]

    if( ( MacCtx.MacCallbacks != NULL ) && ( MacCtx.MacCallbacks->MacProcessNotify != NULL ) )
 8012d62:	4b0e      	ldr	r3, [pc, #56]	; (8012d9c <OnRadioTxDone+0x6c>)
 8012d64:	f8d3 3348 	ldr.w	r3, [r3, #840]	; 0x348
 8012d68:	2b00      	cmp	r3, #0
 8012d6a:	d00a      	beq.n	8012d82 <OnRadioTxDone+0x52>
 8012d6c:	4b0b      	ldr	r3, [pc, #44]	; (8012d9c <OnRadioTxDone+0x6c>)
 8012d6e:	f8d3 3348 	ldr.w	r3, [r3, #840]	; 0x348
 8012d72:	68db      	ldr	r3, [r3, #12]
 8012d74:	2b00      	cmp	r3, #0
 8012d76:	d004      	beq.n	8012d82 <OnRadioTxDone+0x52>
    {
        MacCtx.MacCallbacks->MacProcessNotify( );
 8012d78:	4b08      	ldr	r3, [pc, #32]	; (8012d9c <OnRadioTxDone+0x6c>)
 8012d7a:	f8d3 3348 	ldr.w	r3, [r3, #840]	; 0x348
 8012d7e:	68db      	ldr	r3, [r3, #12]
 8012d80:	4798      	blx	r3
    }
    MW_LOG(TS_ON, VLEVEL_M, "MAC txDone\r\n" );
 8012d82:	4b08      	ldr	r3, [pc, #32]	; (8012da4 <OnRadioTxDone+0x74>)
 8012d84:	2201      	movs	r2, #1
 8012d86:	2100      	movs	r1, #0
 8012d88:	2002      	movs	r0, #2
 8012d8a:	f00e fb9f 	bl	80214cc <UTIL_ADV_TRACE_COND_FSend>
}
 8012d8e:	bf00      	nop
 8012d90:	370c      	adds	r7, #12
 8012d92:	46bd      	mov	sp, r7
 8012d94:	bd90      	pop	{r4, r7, pc}
 8012d96:	bf00      	nop
 8012d98:	20001fe8 	.word	0x20001fe8
 8012d9c:	20000be0 	.word	0x20000be0
 8012da0:	20001210 	.word	0x20001210
 8012da4:	080260c4 	.word	0x080260c4

08012da8 <OnRadioRxDone>:

static void OnRadioRxDone( uint8_t *payload, uint16_t size, int16_t rssi, int8_t snr )
{
 8012da8:	b580      	push	{r7, lr}
 8012daa:	b084      	sub	sp, #16
 8012dac:	af00      	add	r7, sp, #0
 8012dae:	60f8      	str	r0, [r7, #12]
 8012db0:	4608      	mov	r0, r1
 8012db2:	4611      	mov	r1, r2
 8012db4:	461a      	mov	r2, r3
 8012db6:	4603      	mov	r3, r0
 8012db8:	817b      	strh	r3, [r7, #10]
 8012dba:	460b      	mov	r3, r1
 8012dbc:	813b      	strh	r3, [r7, #8]
 8012dbe:	4613      	mov	r3, r2
 8012dc0:	71fb      	strb	r3, [r7, #7]
    RxDoneParams.LastRxDone = TimerGetCurrentTime( );
 8012dc2:	f00e faa5 	bl	8021310 <UTIL_TIMER_GetCurrentTime>
 8012dc6:	4603      	mov	r3, r0
 8012dc8:	4a17      	ldr	r2, [pc, #92]	; (8012e28 <OnRadioRxDone+0x80>)
 8012dca:	6013      	str	r3, [r2, #0]
    RxDoneParams.Payload = payload;
 8012dcc:	4a16      	ldr	r2, [pc, #88]	; (8012e28 <OnRadioRxDone+0x80>)
 8012dce:	68fb      	ldr	r3, [r7, #12]
 8012dd0:	6053      	str	r3, [r2, #4]
    RxDoneParams.Size = size;
 8012dd2:	4a15      	ldr	r2, [pc, #84]	; (8012e28 <OnRadioRxDone+0x80>)
 8012dd4:	897b      	ldrh	r3, [r7, #10]
 8012dd6:	8113      	strh	r3, [r2, #8]
    RxDoneParams.Rssi = rssi;
 8012dd8:	4a13      	ldr	r2, [pc, #76]	; (8012e28 <OnRadioRxDone+0x80>)
 8012dda:	893b      	ldrh	r3, [r7, #8]
 8012ddc:	8153      	strh	r3, [r2, #10]
    RxDoneParams.Snr = snr;
 8012dde:	4a12      	ldr	r2, [pc, #72]	; (8012e28 <OnRadioRxDone+0x80>)
 8012de0:	79fb      	ldrb	r3, [r7, #7]
 8012de2:	7313      	strb	r3, [r2, #12]

    LoRaMacRadioEvents.Events.RxDone = 1;
 8012de4:	4a11      	ldr	r2, [pc, #68]	; (8012e2c <OnRadioRxDone+0x84>)
 8012de6:	7813      	ldrb	r3, [r2, #0]
 8012de8:	f043 0308 	orr.w	r3, r3, #8
 8012dec:	7013      	strb	r3, [r2, #0]

    if( ( MacCtx.MacCallbacks != NULL ) && ( MacCtx.MacCallbacks->MacProcessNotify != NULL ) )
 8012dee:	4b10      	ldr	r3, [pc, #64]	; (8012e30 <OnRadioRxDone+0x88>)
 8012df0:	f8d3 3348 	ldr.w	r3, [r3, #840]	; 0x348
 8012df4:	2b00      	cmp	r3, #0
 8012df6:	d00a      	beq.n	8012e0e <OnRadioRxDone+0x66>
 8012df8:	4b0d      	ldr	r3, [pc, #52]	; (8012e30 <OnRadioRxDone+0x88>)
 8012dfa:	f8d3 3348 	ldr.w	r3, [r3, #840]	; 0x348
 8012dfe:	68db      	ldr	r3, [r3, #12]
 8012e00:	2b00      	cmp	r3, #0
 8012e02:	d004      	beq.n	8012e0e <OnRadioRxDone+0x66>
    {
        MacCtx.MacCallbacks->MacProcessNotify( );
 8012e04:	4b0a      	ldr	r3, [pc, #40]	; (8012e30 <OnRadioRxDone+0x88>)
 8012e06:	f8d3 3348 	ldr.w	r3, [r3, #840]	; 0x348
 8012e0a:	68db      	ldr	r3, [r3, #12]
 8012e0c:	4798      	blx	r3
    }
    MW_LOG(TS_ON, VLEVEL_M, "MAC rxDone\r\n" );
 8012e0e:	4b09      	ldr	r3, [pc, #36]	; (8012e34 <OnRadioRxDone+0x8c>)
 8012e10:	2201      	movs	r2, #1
 8012e12:	2100      	movs	r1, #0
 8012e14:	2002      	movs	r0, #2
 8012e16:	f00e fb59 	bl	80214cc <UTIL_ADV_TRACE_COND_FSend>
    rxReceived = true;
 8012e1a:	4b07      	ldr	r3, [pc, #28]	; (8012e38 <OnRadioRxDone+0x90>)
 8012e1c:	2201      	movs	r2, #1
 8012e1e:	701a      	strb	r2, [r3, #0]
}
 8012e20:	bf00      	nop
 8012e22:	3710      	adds	r7, #16
 8012e24:	46bd      	mov	sp, r7
 8012e26:	bd80      	pop	{r7, pc}
 8012e28:	20001fec 	.word	0x20001fec
 8012e2c:	20001210 	.word	0x20001210
 8012e30:	20000be0 	.word	0x20000be0
 8012e34:	080260d4 	.word	0x080260d4
 8012e38:	200008d2 	.word	0x200008d2

08012e3c <OnRadioTxTimeout>:

static void OnRadioTxTimeout( void )
{
 8012e3c:	b580      	push	{r7, lr}
 8012e3e:	af00      	add	r7, sp, #0
    LoRaMacRadioEvents.Events.TxTimeout = 1;
 8012e40:	4a0e      	ldr	r2, [pc, #56]	; (8012e7c <OnRadioTxTimeout+0x40>)
 8012e42:	7813      	ldrb	r3, [r2, #0]
 8012e44:	f043 0304 	orr.w	r3, r3, #4
 8012e48:	7013      	strb	r3, [r2, #0]

    if( ( MacCtx.MacCallbacks != NULL ) && ( MacCtx.MacCallbacks->MacProcessNotify != NULL ) )
 8012e4a:	4b0d      	ldr	r3, [pc, #52]	; (8012e80 <OnRadioTxTimeout+0x44>)
 8012e4c:	f8d3 3348 	ldr.w	r3, [r3, #840]	; 0x348
 8012e50:	2b00      	cmp	r3, #0
 8012e52:	d00a      	beq.n	8012e6a <OnRadioTxTimeout+0x2e>
 8012e54:	4b0a      	ldr	r3, [pc, #40]	; (8012e80 <OnRadioTxTimeout+0x44>)
 8012e56:	f8d3 3348 	ldr.w	r3, [r3, #840]	; 0x348
 8012e5a:	68db      	ldr	r3, [r3, #12]
 8012e5c:	2b00      	cmp	r3, #0
 8012e5e:	d004      	beq.n	8012e6a <OnRadioTxTimeout+0x2e>
    {
        MacCtx.MacCallbacks->MacProcessNotify( );
 8012e60:	4b07      	ldr	r3, [pc, #28]	; (8012e80 <OnRadioTxTimeout+0x44>)
 8012e62:	f8d3 3348 	ldr.w	r3, [r3, #840]	; 0x348
 8012e66:	68db      	ldr	r3, [r3, #12]
 8012e68:	4798      	blx	r3
    }
    MW_LOG(TS_ON, VLEVEL_M, "MAC txTimeOut\r\n" );
 8012e6a:	4b06      	ldr	r3, [pc, #24]	; (8012e84 <OnRadioTxTimeout+0x48>)
 8012e6c:	2201      	movs	r2, #1
 8012e6e:	2100      	movs	r1, #0
 8012e70:	2002      	movs	r0, #2
 8012e72:	f00e fb2b 	bl	80214cc <UTIL_ADV_TRACE_COND_FSend>
}
 8012e76:	bf00      	nop
 8012e78:	bd80      	pop	{r7, pc}
 8012e7a:	bf00      	nop
 8012e7c:	20001210 	.word	0x20001210
 8012e80:	20000be0 	.word	0x20000be0
 8012e84:	080260e4 	.word	0x080260e4

08012e88 <OnRadioRxError>:

static void OnRadioRxError( void )
{
 8012e88:	b580      	push	{r7, lr}
 8012e8a:	af00      	add	r7, sp, #0
    LoRaMacRadioEvents.Events.RxError = 1;
 8012e8c:	4a0b      	ldr	r2, [pc, #44]	; (8012ebc <OnRadioRxError+0x34>)
 8012e8e:	7813      	ldrb	r3, [r2, #0]
 8012e90:	f043 0302 	orr.w	r3, r3, #2
 8012e94:	7013      	strb	r3, [r2, #0]

    if( ( MacCtx.MacCallbacks != NULL ) && ( MacCtx.MacCallbacks->MacProcessNotify != NULL ) )
 8012e96:	4b0a      	ldr	r3, [pc, #40]	; (8012ec0 <OnRadioRxError+0x38>)
 8012e98:	f8d3 3348 	ldr.w	r3, [r3, #840]	; 0x348
 8012e9c:	2b00      	cmp	r3, #0
 8012e9e:	d00a      	beq.n	8012eb6 <OnRadioRxError+0x2e>
 8012ea0:	4b07      	ldr	r3, [pc, #28]	; (8012ec0 <OnRadioRxError+0x38>)
 8012ea2:	f8d3 3348 	ldr.w	r3, [r3, #840]	; 0x348
 8012ea6:	68db      	ldr	r3, [r3, #12]
 8012ea8:	2b00      	cmp	r3, #0
 8012eaa:	d004      	beq.n	8012eb6 <OnRadioRxError+0x2e>
    {
        MacCtx.MacCallbacks->MacProcessNotify( );
 8012eac:	4b04      	ldr	r3, [pc, #16]	; (8012ec0 <OnRadioRxError+0x38>)
 8012eae:	f8d3 3348 	ldr.w	r3, [r3, #840]	; 0x348
 8012eb2:	68db      	ldr	r3, [r3, #12]
 8012eb4:	4798      	blx	r3
    }
}
 8012eb6:	bf00      	nop
 8012eb8:	bd80      	pop	{r7, pc}
 8012eba:	bf00      	nop
 8012ebc:	20001210 	.word	0x20001210
 8012ec0:	20000be0 	.word	0x20000be0

08012ec4 <OnRadioRxTimeout>:

static void OnRadioRxTimeout( void )
{
 8012ec4:	b580      	push	{r7, lr}
 8012ec6:	af00      	add	r7, sp, #0
    LoRaMacRadioEvents.Events.RxTimeout = 1;
 8012ec8:	4a0e      	ldr	r2, [pc, #56]	; (8012f04 <OnRadioRxTimeout+0x40>)
 8012eca:	7813      	ldrb	r3, [r2, #0]
 8012ecc:	f043 0301 	orr.w	r3, r3, #1
 8012ed0:	7013      	strb	r3, [r2, #0]

    if( ( MacCtx.MacCallbacks != NULL ) && ( MacCtx.MacCallbacks->MacProcessNotify != NULL ) )
 8012ed2:	4b0d      	ldr	r3, [pc, #52]	; (8012f08 <OnRadioRxTimeout+0x44>)
 8012ed4:	f8d3 3348 	ldr.w	r3, [r3, #840]	; 0x348
 8012ed8:	2b00      	cmp	r3, #0
 8012eda:	d00a      	beq.n	8012ef2 <OnRadioRxTimeout+0x2e>
 8012edc:	4b0a      	ldr	r3, [pc, #40]	; (8012f08 <OnRadioRxTimeout+0x44>)
 8012ede:	f8d3 3348 	ldr.w	r3, [r3, #840]	; 0x348
 8012ee2:	68db      	ldr	r3, [r3, #12]
 8012ee4:	2b00      	cmp	r3, #0
 8012ee6:	d004      	beq.n	8012ef2 <OnRadioRxTimeout+0x2e>
    {
        MacCtx.MacCallbacks->MacProcessNotify( );
 8012ee8:	4b07      	ldr	r3, [pc, #28]	; (8012f08 <OnRadioRxTimeout+0x44>)
 8012eea:	f8d3 3348 	ldr.w	r3, [r3, #840]	; 0x348
 8012eee:	68db      	ldr	r3, [r3, #12]
 8012ef0:	4798      	blx	r3
    }
    MW_LOG(TS_ON, VLEVEL_M, "MAC rxTimeOut\r\n" );
 8012ef2:	4b06      	ldr	r3, [pc, #24]	; (8012f0c <OnRadioRxTimeout+0x48>)
 8012ef4:	2201      	movs	r2, #1
 8012ef6:	2100      	movs	r1, #0
 8012ef8:	2002      	movs	r0, #2
 8012efa:	f00e fae7 	bl	80214cc <UTIL_ADV_TRACE_COND_FSend>
}
 8012efe:	bf00      	nop
 8012f00:	bd80      	pop	{r7, pc}
 8012f02:	bf00      	nop
 8012f04:	20001210 	.word	0x20001210
 8012f08:	20000be0 	.word	0x20000be0
 8012f0c:	080260f4 	.word	0x080260f4

08012f10 <UpdateRxSlotIdleState>:

static void UpdateRxSlotIdleState( void )
{
 8012f10:	b480      	push	{r7}
 8012f12:	af00      	add	r7, sp, #0
    if( MacCtx.NvmCtx->DeviceClass != CLASS_C )
 8012f14:	4b09      	ldr	r3, [pc, #36]	; (8012f3c <UpdateRxSlotIdleState+0x2c>)
 8012f16:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8012f1a:	f893 307c 	ldrb.w	r3, [r3, #124]	; 0x7c
 8012f1e:	2b02      	cmp	r3, #2
 8012f20:	d004      	beq.n	8012f2c <UpdateRxSlotIdleState+0x1c>
    {
        MacCtx.RxSlot = RX_SLOT_NONE;
 8012f22:	4b06      	ldr	r3, [pc, #24]	; (8012f3c <UpdateRxSlotIdleState+0x2c>)
 8012f24:	2206      	movs	r2, #6
 8012f26:	f883 2480 	strb.w	r2, [r3, #1152]	; 0x480
    }
    else
    {
        MacCtx.RxSlot = RX_SLOT_WIN_CLASS_C;
    }
}
 8012f2a:	e003      	b.n	8012f34 <UpdateRxSlotIdleState+0x24>
        MacCtx.RxSlot = RX_SLOT_WIN_CLASS_C;
 8012f2c:	4b03      	ldr	r3, [pc, #12]	; (8012f3c <UpdateRxSlotIdleState+0x2c>)
 8012f2e:	2202      	movs	r2, #2
 8012f30:	f883 2480 	strb.w	r2, [r3, #1152]	; 0x480
}
 8012f34:	bf00      	nop
 8012f36:	46bd      	mov	sp, r7
 8012f38:	bc80      	pop	{r7}
 8012f3a:	4770      	bx	lr
 8012f3c:	20000be0 	.word	0x20000be0

08012f40 <ProcessRadioTxDone>:

static void ProcessRadioTxDone( void )
{
 8012f40:	b580      	push	{r7, lr}
 8012f42:	b08e      	sub	sp, #56	; 0x38
 8012f44:	af02      	add	r7, sp, #8
    GetPhyParams_t getPhy;
    PhyParam_t phyParam;
    SetBandTxDoneParams_t txDone;

    if( MacCtx.NvmCtx->DeviceClass != CLASS_C )
 8012f46:	4b4b      	ldr	r3, [pc, #300]	; (8013074 <ProcessRadioTxDone+0x134>)
 8012f48:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8012f4c:	f893 307c 	ldrb.w	r3, [r3, #124]	; 0x7c
 8012f50:	2b02      	cmp	r3, #2
 8012f52:	d002      	beq.n	8012f5a <ProcessRadioTxDone+0x1a>
    {
        Radio.Sleep( );
 8012f54:	4b48      	ldr	r3, [pc, #288]	; (8013078 <ProcessRadioTxDone+0x138>)
 8012f56:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012f58:	4798      	blx	r3
    }
    // Setup timers
    TimerSetValue( &MacCtx.RxWindowTimer1, MacCtx.RxWindow1Delay );
 8012f5a:	4b46      	ldr	r3, [pc, #280]	; (8013074 <ProcessRadioTxDone+0x134>)
 8012f5c:	f8d3 33b0 	ldr.w	r3, [r3, #944]	; 0x3b0
 8012f60:	4619      	mov	r1, r3
 8012f62:	4846      	ldr	r0, [pc, #280]	; (801307c <ProcessRadioTxDone+0x13c>)
 8012f64:	f00e f92a 	bl	80211bc <UTIL_TIMER_SetPeriod>
    TimerStart( &MacCtx.RxWindowTimer1 );
 8012f68:	4844      	ldr	r0, [pc, #272]	; (801307c <ProcessRadioTxDone+0x13c>)
 8012f6a:	f00e f849 	bl	8021000 <UTIL_TIMER_Start>
    TimerSetValue( &MacCtx.RxWindowTimer2, MacCtx.RxWindow2Delay );
 8012f6e:	4b41      	ldr	r3, [pc, #260]	; (8013074 <ProcessRadioTxDone+0x134>)
 8012f70:	f8d3 33b4 	ldr.w	r3, [r3, #948]	; 0x3b4
 8012f74:	4619      	mov	r1, r3
 8012f76:	4842      	ldr	r0, [pc, #264]	; (8013080 <ProcessRadioTxDone+0x140>)
 8012f78:	f00e f920 	bl	80211bc <UTIL_TIMER_SetPeriod>
    TimerStart( &MacCtx.RxWindowTimer2 );
 8012f7c:	4840      	ldr	r0, [pc, #256]	; (8013080 <ProcessRadioTxDone+0x140>)
 8012f7e:	f00e f83f 	bl	8021000 <UTIL_TIMER_Start>

    if( ( MacCtx.NvmCtx->DeviceClass == CLASS_C ) || ( MacCtx.NodeAckRequested == true ) )
 8012f82:	4b3c      	ldr	r3, [pc, #240]	; (8013074 <ProcessRadioTxDone+0x134>)
 8012f84:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8012f88:	f893 307c 	ldrb.w	r3, [r3, #124]	; 0x7c
 8012f8c:	2b02      	cmp	r3, #2
 8012f8e:	d004      	beq.n	8012f9a <ProcessRadioTxDone+0x5a>
 8012f90:	4b38      	ldr	r3, [pc, #224]	; (8013074 <ProcessRadioTxDone+0x134>)
 8012f92:	f893 3414 	ldrb.w	r3, [r3, #1044]	; 0x414
 8012f96:	2b00      	cmp	r3, #0
 8012f98:	d01a      	beq.n	8012fd0 <ProcessRadioTxDone+0x90>
    {
        getPhy.Attribute = PHY_ACK_TIMEOUT;
 8012f9a:	2316      	movs	r3, #22
 8012f9c:	f887 3020 	strb.w	r3, [r7, #32]
        phyParam = RegionGetPhyParam( MacCtx.NvmCtx->Region, &getPhy );
 8012fa0:	4b34      	ldr	r3, [pc, #208]	; (8013074 <ProcessRadioTxDone+0x134>)
 8012fa2:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8012fa6:	781b      	ldrb	r3, [r3, #0]
 8012fa8:	f107 0220 	add.w	r2, r7, #32
 8012fac:	4611      	mov	r1, r2
 8012fae:	4618      	mov	r0, r3
 8012fb0:	f006 fe05 	bl	8019bbe <RegionGetPhyParam>
 8012fb4:	4603      	mov	r3, r0
 8012fb6:	61fb      	str	r3, [r7, #28]
        TimerSetValue( &MacCtx.AckTimeoutTimer, MacCtx.RxWindow2Delay + phyParam.Value );
 8012fb8:	4b2e      	ldr	r3, [pc, #184]	; (8013074 <ProcessRadioTxDone+0x134>)
 8012fba:	f8d3 23b4 	ldr.w	r2, [r3, #948]	; 0x3b4
 8012fbe:	69fb      	ldr	r3, [r7, #28]
 8012fc0:	4413      	add	r3, r2
 8012fc2:	4619      	mov	r1, r3
 8012fc4:	482f      	ldr	r0, [pc, #188]	; (8013084 <ProcessRadioTxDone+0x144>)
 8012fc6:	f00e f8f9 	bl	80211bc <UTIL_TIMER_SetPeriod>
        TimerStart( &MacCtx.AckTimeoutTimer );
 8012fca:	482e      	ldr	r0, [pc, #184]	; (8013084 <ProcessRadioTxDone+0x144>)
 8012fcc:	f00e f818 	bl	8021000 <UTIL_TIMER_Start>
    }

    // Update Aggregated last tx done time
    MacCtx.NvmCtx->LastTxDoneTime = TxDoneParams.CurTime;
 8012fd0:	4b28      	ldr	r3, [pc, #160]	; (8013074 <ProcessRadioTxDone+0x134>)
 8012fd2:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8012fd6:	4a2c      	ldr	r2, [pc, #176]	; (8013088 <ProcessRadioTxDone+0x148>)
 8012fd8:	6812      	ldr	r2, [r2, #0]
 8012fda:	f8c3 2150 	str.w	r2, [r3, #336]	; 0x150

    // Update last tx done time for the current channel
    txDone.Channel = MacCtx.Channel;
 8012fde:	4b25      	ldr	r3, [pc, #148]	; (8013074 <ProcessRadioTxDone+0x134>)
 8012fe0:	f893 3415 	ldrb.w	r3, [r3, #1045]	; 0x415
 8012fe4:	723b      	strb	r3, [r7, #8]
    txDone.LastTxDoneTime = TxDoneParams.CurTime;
 8012fe6:	4b28      	ldr	r3, [pc, #160]	; (8013088 <ProcessRadioTxDone+0x148>)
 8012fe8:	681b      	ldr	r3, [r3, #0]
 8012fea:	60fb      	str	r3, [r7, #12]
    txDone.ElapsedTimeSinceStartUp = SysTimeSub( SysTimeGetMcuTime( ), MacCtx.NvmCtx->InitializationTime );
 8012fec:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8012ff0:	4618      	mov	r0, r3
 8012ff2:	f00d fbbd 	bl	8020770 <SysTimeGetMcuTime>
 8012ff6:	4b1f      	ldr	r3, [pc, #124]	; (8013074 <ProcessRadioTxDone+0x134>)
 8012ff8:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8012ffc:	4638      	mov	r0, r7
 8012ffe:	f8d3 215c 	ldr.w	r2, [r3, #348]	; 0x15c
 8013002:	9200      	str	r2, [sp, #0]
 8013004:	f8d3 3158 	ldr.w	r3, [r3, #344]	; 0x158
 8013008:	f107 0228 	add.w	r2, r7, #40	; 0x28
 801300c:	ca06      	ldmia	r2, {r1, r2}
 801300e:	f00d fb10 	bl	8020632 <SysTimeSub>
 8013012:	f107 0314 	add.w	r3, r7, #20
 8013016:	463a      	mov	r2, r7
 8013018:	e892 0003 	ldmia.w	r2, {r0, r1}
 801301c:	e883 0003 	stmia.w	r3, {r0, r1}
    txDone.LastTxAirTime = MacCtx.TxTimeOnAir;
 8013020:	4b14      	ldr	r3, [pc, #80]	; (8013074 <ProcessRadioTxDone+0x134>)
 8013022:	f8d3 3418 	ldr.w	r3, [r3, #1048]	; 0x418
 8013026:	613b      	str	r3, [r7, #16]
    txDone.Joined  = true;
 8013028:	2301      	movs	r3, #1
 801302a:	727b      	strb	r3, [r7, #9]
    if( MacCtx.NvmCtx->NetworkActivation == ACTIVATION_TYPE_NONE )
 801302c:	4b11      	ldr	r3, [pc, #68]	; (8013074 <ProcessRadioTxDone+0x134>)
 801302e:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8013032:	f893 3164 	ldrb.w	r3, [r3, #356]	; 0x164
 8013036:	2b00      	cmp	r3, #0
 8013038:	d101      	bne.n	801303e <ProcessRadioTxDone+0xfe>
    {
        txDone.Joined  = false;
 801303a:	2300      	movs	r3, #0
 801303c:	727b      	strb	r3, [r7, #9]
    }

    RegionSetBandTxDone( MacCtx.NvmCtx->Region, &txDone );
 801303e:	4b0d      	ldr	r3, [pc, #52]	; (8013074 <ProcessRadioTxDone+0x134>)
 8013040:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8013044:	781b      	ldrb	r3, [r3, #0]
 8013046:	f107 0208 	add.w	r2, r7, #8
 801304a:	4611      	mov	r1, r2
 801304c:	4618      	mov	r0, r3
 801304e:	f006 fdd8 	bl	8019c02 <RegionSetBandTxDone>

    if( MacCtx.NodeAckRequested == false )
 8013052:	4b08      	ldr	r3, [pc, #32]	; (8013074 <ProcessRadioTxDone+0x134>)
 8013054:	f893 3414 	ldrb.w	r3, [r3, #1044]	; 0x414
 8013058:	f083 0301 	eor.w	r3, r3, #1
 801305c:	b2db      	uxtb	r3, r3
 801305e:	2b00      	cmp	r3, #0
 8013060:	d003      	beq.n	801306a <ProcessRadioTxDone+0x12a>
    {
        MacCtx.McpsConfirm.Status = LORAMAC_EVENT_INFO_STATUS_OK;
 8013062:	4b04      	ldr	r3, [pc, #16]	; (8013074 <ProcessRadioTxDone+0x134>)
 8013064:	2200      	movs	r2, #0
 8013066:	f883 243d 	strb.w	r2, [r3, #1085]	; 0x43d
    }
}
 801306a:	bf00      	nop
 801306c:	3730      	adds	r7, #48	; 0x30
 801306e:	46bd      	mov	sp, r7
 8013070:	bd80      	pop	{r7, pc}
 8013072:	bf00      	nop
 8013074:	20000be0 	.word	0x20000be0
 8013078:	0802683c 	.word	0x0802683c
 801307c:	20000f60 	.word	0x20000f60
 8013080:	20000f78 	.word	0x20000f78
 8013084:	20000fd8 	.word	0x20000fd8
 8013088:	20001fe8 	.word	0x20001fe8

0801308c <PrepareRxDoneAbort>:

static void PrepareRxDoneAbort( void )
{
 801308c:	b580      	push	{r7, lr}
 801308e:	af00      	add	r7, sp, #0
    MacCtx.MacState |= LORAMAC_RX_ABORT;
 8013090:	4b10      	ldr	r3, [pc, #64]	; (80130d4 <PrepareRxDoneAbort+0x48>)
 8013092:	f8d3 3340 	ldr.w	r3, [r3, #832]	; 0x340
 8013096:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 801309a:	4a0e      	ldr	r2, [pc, #56]	; (80130d4 <PrepareRxDoneAbort+0x48>)
 801309c:	f8c2 3340 	str.w	r3, [r2, #832]	; 0x340

    if( MacCtx.NodeAckRequested == true )
 80130a0:	4b0c      	ldr	r3, [pc, #48]	; (80130d4 <PrepareRxDoneAbort+0x48>)
 80130a2:	f893 3414 	ldrb.w	r3, [r3, #1044]	; 0x414
 80130a6:	2b00      	cmp	r3, #0
 80130a8:	d002      	beq.n	80130b0 <PrepareRxDoneAbort+0x24>
    {
        OnAckTimeoutTimerEvent( NULL );
 80130aa:	2000      	movs	r0, #0
 80130ac:	f001 f846 	bl	801413c <OnAckTimeoutTimerEvent>
    }

    MacCtx.MacFlags.Bits.McpsInd = 1;
 80130b0:	4a08      	ldr	r2, [pc, #32]	; (80130d4 <PrepareRxDoneAbort+0x48>)
 80130b2:	f892 3481 	ldrb.w	r3, [r2, #1153]	; 0x481
 80130b6:	f043 0302 	orr.w	r3, r3, #2
 80130ba:	f882 3481 	strb.w	r3, [r2, #1153]	; 0x481
    MacCtx.MacFlags.Bits.MacDone = 1;
 80130be:	4a05      	ldr	r2, [pc, #20]	; (80130d4 <PrepareRxDoneAbort+0x48>)
 80130c0:	f892 3481 	ldrb.w	r3, [r2, #1153]	; 0x481
 80130c4:	f043 0320 	orr.w	r3, r3, #32
 80130c8:	f882 3481 	strb.w	r3, [r2, #1153]	; 0x481

    UpdateRxSlotIdleState( );
 80130cc:	f7ff ff20 	bl	8012f10 <UpdateRxSlotIdleState>
}
 80130d0:	bf00      	nop
 80130d2:	bd80      	pop	{r7, pc}
 80130d4:	20000be0 	.word	0x20000be0

080130d8 <ProcessRadioRxDone>:

static void ProcessRadioRxDone( void )
{
 80130d8:	b5b0      	push	{r4, r5, r7, lr}
 80130da:	b0a6      	sub	sp, #152	; 0x98
 80130dc:	af04      	add	r7, sp, #16
    LoRaMacHeader_t macHdr;
    ApplyCFListParams_t applyCFList;
    GetPhyParams_t getPhy;
    PhyParam_t phyParam;
    LoRaMacCryptoStatus_t macCryptoStatus = LORAMAC_CRYPTO_ERROR;
 80130de:	2313      	movs	r3, #19
 80130e0:	f887 3080 	strb.w	r3, [r7, #128]	; 0x80

    LoRaMacMessageData_t macMsgData;
    LoRaMacMessageJoinAccept_t macMsgJoinAccept;
    uint8_t *payload = RxDoneParams.Payload;
 80130e4:	4bcb      	ldr	r3, [pc, #812]	; (8013414 <ProcessRadioRxDone+0x33c>)
 80130e6:	685b      	ldr	r3, [r3, #4]
 80130e8:	67fb      	str	r3, [r7, #124]	; 0x7c
    uint16_t size = RxDoneParams.Size;
 80130ea:	4bca      	ldr	r3, [pc, #808]	; (8013414 <ProcessRadioRxDone+0x33c>)
 80130ec:	891b      	ldrh	r3, [r3, #8]
 80130ee:	f8a7 307a 	strh.w	r3, [r7, #122]	; 0x7a
    int16_t rssi = RxDoneParams.Rssi;
 80130f2:	4bc8      	ldr	r3, [pc, #800]	; (8013414 <ProcessRadioRxDone+0x33c>)
 80130f4:	895b      	ldrh	r3, [r3, #10]
 80130f6:	f8a7 3078 	strh.w	r3, [r7, #120]	; 0x78
    int8_t snr = RxDoneParams.Snr;
 80130fa:	4bc6      	ldr	r3, [pc, #792]	; (8013414 <ProcessRadioRxDone+0x33c>)
 80130fc:	7b1b      	ldrb	r3, [r3, #12]
 80130fe:	f887 3077 	strb.w	r3, [r7, #119]	; 0x77

    uint8_t pktHeaderLen = 0;
 8013102:	2300      	movs	r3, #0
 8013104:	f887 3076 	strb.w	r3, [r7, #118]	; 0x76

    uint32_t downLinkCounter = 0;
 8013108:	2300      	movs	r3, #0
 801310a:	607b      	str	r3, [r7, #4]
    uint32_t address = MacCtx.NvmCtx->DevAddr;
 801310c:	4bc2      	ldr	r3, [pc, #776]	; (8013418 <ProcessRadioRxDone+0x340>)
 801310e:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8013112:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8013114:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
    uint8_t multicast = 0;
 8013118:	2300      	movs	r3, #0
 801311a:	f887 3083 	strb.w	r3, [r7, #131]	; 0x83
    AddressIdentifier_t addrID = UNICAST_DEV_ADDR;
 801311e:	2301      	movs	r3, #1
 8013120:	f887 3082 	strb.w	r3, [r7, #130]	; 0x82
    FCntIdentifier_t fCntID;

    MacCtx.McpsConfirm.AckReceived = false;
 8013124:	4bbc      	ldr	r3, [pc, #752]	; (8013418 <ProcessRadioRxDone+0x340>)
 8013126:	2200      	movs	r2, #0
 8013128:	f883 2440 	strb.w	r2, [r3, #1088]	; 0x440
    MacCtx.McpsIndication.Rssi = rssi;
 801312c:	4aba      	ldr	r2, [pc, #744]	; (8013418 <ProcessRadioRxDone+0x340>)
 801312e:	f8b7 3078 	ldrh.w	r3, [r7, #120]	; 0x78
 8013132:	f8a2 342a 	strh.w	r3, [r2, #1066]	; 0x42a
    MacCtx.McpsIndication.Snr = snr;
 8013136:	4ab8      	ldr	r2, [pc, #736]	; (8013418 <ProcessRadioRxDone+0x340>)
 8013138:	f897 3077 	ldrb.w	r3, [r7, #119]	; 0x77
 801313c:	f882 342c 	strb.w	r3, [r2, #1068]	; 0x42c
    MacCtx.McpsIndication.RxSlot = MacCtx.RxSlot;
 8013140:	4bb5      	ldr	r3, [pc, #724]	; (8013418 <ProcessRadioRxDone+0x340>)
 8013142:	f893 2480 	ldrb.w	r2, [r3, #1152]	; 0x480
 8013146:	4bb4      	ldr	r3, [pc, #720]	; (8013418 <ProcessRadioRxDone+0x340>)
 8013148:	f883 242d 	strb.w	r2, [r3, #1069]	; 0x42d
    MacCtx.McpsIndication.Port = 0;
 801314c:	4bb2      	ldr	r3, [pc, #712]	; (8013418 <ProcessRadioRxDone+0x340>)
 801314e:	2200      	movs	r2, #0
 8013150:	f883 241f 	strb.w	r2, [r3, #1055]	; 0x41f
    MacCtx.McpsIndication.Multicast = 0;
 8013154:	4bb0      	ldr	r3, [pc, #704]	; (8013418 <ProcessRadioRxDone+0x340>)
 8013156:	2200      	movs	r2, #0
 8013158:	f883 241e 	strb.w	r2, [r3, #1054]	; 0x41e
    MacCtx.McpsIndication.FramePending = 0;
 801315c:	4bae      	ldr	r3, [pc, #696]	; (8013418 <ProcessRadioRxDone+0x340>)
 801315e:	2200      	movs	r2, #0
 8013160:	f883 2421 	strb.w	r2, [r3, #1057]	; 0x421
    MacCtx.McpsIndication.Buffer = NULL;
 8013164:	4bac      	ldr	r3, [pc, #688]	; (8013418 <ProcessRadioRxDone+0x340>)
 8013166:	2200      	movs	r2, #0
 8013168:	f8c3 2424 	str.w	r2, [r3, #1060]	; 0x424
    MacCtx.McpsIndication.BufferSize = 0;
 801316c:	4baa      	ldr	r3, [pc, #680]	; (8013418 <ProcessRadioRxDone+0x340>)
 801316e:	2200      	movs	r2, #0
 8013170:	f883 2428 	strb.w	r2, [r3, #1064]	; 0x428
    MacCtx.McpsIndication.RxData = false;
 8013174:	4ba8      	ldr	r3, [pc, #672]	; (8013418 <ProcessRadioRxDone+0x340>)
 8013176:	2200      	movs	r2, #0
 8013178:	f883 2429 	strb.w	r2, [r3, #1065]	; 0x429
    MacCtx.McpsIndication.AckReceived = false;
 801317c:	4ba6      	ldr	r3, [pc, #664]	; (8013418 <ProcessRadioRxDone+0x340>)
 801317e:	2200      	movs	r2, #0
 8013180:	f883 242e 	strb.w	r2, [r3, #1070]	; 0x42e
    MacCtx.McpsIndication.DownLinkCounter = 0;
 8013184:	4ba4      	ldr	r3, [pc, #656]	; (8013418 <ProcessRadioRxDone+0x340>)
 8013186:	2200      	movs	r2, #0
 8013188:	f8c3 2430 	str.w	r2, [r3, #1072]	; 0x430
    MacCtx.McpsIndication.McpsIndication = MCPS_UNCONFIRMED;
 801318c:	4ba2      	ldr	r3, [pc, #648]	; (8013418 <ProcessRadioRxDone+0x340>)
 801318e:	2200      	movs	r2, #0
 8013190:	f883 241c 	strb.w	r2, [r3, #1052]	; 0x41c
    MacCtx.McpsIndication.DevAddress = 0;
 8013194:	4ba0      	ldr	r3, [pc, #640]	; (8013418 <ProcessRadioRxDone+0x340>)
 8013196:	2200      	movs	r2, #0
 8013198:	f8c3 2434 	str.w	r2, [r3, #1076]	; 0x434
    MacCtx.McpsIndication.DeviceTimeAnsReceived = false;
 801319c:	4b9e      	ldr	r3, [pc, #632]	; (8013418 <ProcessRadioRxDone+0x340>)
 801319e:	2200      	movs	r2, #0
 80131a0:	f883 2438 	strb.w	r2, [r3, #1080]	; 0x438

    Radio.Sleep( );
 80131a4:	4b9d      	ldr	r3, [pc, #628]	; (801341c <ProcessRadioRxDone+0x344>)
 80131a6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80131a8:	4798      	blx	r3
    TimerStop( &MacCtx.RxWindowTimer2 );
 80131aa:	489d      	ldr	r0, [pc, #628]	; (8013420 <ProcessRadioRxDone+0x348>)
 80131ac:	f00d ff96 	bl	80210dc <UTIL_TIMER_Stop>

    // This function must be called even if we are not in class b mode yet.
    if( LoRaMacClassBRxBeacon( payload, size ) == true )
 80131b0:	f8b7 307a 	ldrh.w	r3, [r7, #122]	; 0x7a
 80131b4:	4619      	mov	r1, r3
 80131b6:	6ff8      	ldr	r0, [r7, #124]	; 0x7c
 80131b8:	f004 fd4e 	bl	8017c58 <LoRaMacClassBRxBeacon>
 80131bc:	4603      	mov	r3, r0
 80131be:	2b00      	cmp	r3, #0
 80131c0:	d00b      	beq.n	80131da <ProcessRadioRxDone+0x102>
    {
        MacCtx.MlmeIndication.BeaconInfo.Rssi = rssi;
 80131c2:	4a95      	ldr	r2, [pc, #596]	; (8013418 <ProcessRadioRxDone+0x340>)
 80131c4:	f8b7 3078 	ldrh.w	r3, [r7, #120]	; 0x78
 80131c8:	f8a2 3476 	strh.w	r3, [r2, #1142]	; 0x476
        MacCtx.MlmeIndication.BeaconInfo.Snr = snr;
 80131cc:	4a92      	ldr	r2, [pc, #584]	; (8013418 <ProcessRadioRxDone+0x340>)
 80131ce:	f897 3077 	ldrb.w	r3, [r7, #119]	; 0x77
 80131d2:	f882 3478 	strb.w	r3, [r2, #1144]	; 0x478
        return;
 80131d6:	f000 bc09 	b.w	80139ec <ProcessRadioRxDone+0x914>
    }
    // Check if we expect a ping or a multicast slot.
    if( MacCtx.NvmCtx->DeviceClass == CLASS_B )
 80131da:	4b8f      	ldr	r3, [pc, #572]	; (8013418 <ProcessRadioRxDone+0x340>)
 80131dc:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 80131e0:	f893 307c 	ldrb.w	r3, [r3, #124]	; 0x7c
 80131e4:	2b01      	cmp	r3, #1
 80131e6:	d11e      	bne.n	8013226 <ProcessRadioRxDone+0x14e>
    {
        if( LoRaMacClassBIsPingExpected( ) == true )
 80131e8:	f004 fd49 	bl	8017c7e <LoRaMacClassBIsPingExpected>
 80131ec:	4603      	mov	r3, r0
 80131ee:	2b00      	cmp	r3, #0
 80131f0:	d00a      	beq.n	8013208 <ProcessRadioRxDone+0x130>
        {
            LoRaMacClassBSetPingSlotState( PINGSLOT_STATE_CALC_PING_OFFSET );
 80131f2:	2000      	movs	r0, #0
 80131f4:	f004 fcfa 	bl	8017bec <LoRaMacClassBSetPingSlotState>
            LoRaMacClassBPingSlotTimerEvent( NULL );
 80131f8:	2000      	movs	r0, #0
 80131fa:	f004 fd1b 	bl	8017c34 <LoRaMacClassBPingSlotTimerEvent>
            MacCtx.McpsIndication.RxSlot = RX_SLOT_WIN_CLASS_B_PING_SLOT;
 80131fe:	4b86      	ldr	r3, [pc, #536]	; (8013418 <ProcessRadioRxDone+0x340>)
 8013200:	2204      	movs	r2, #4
 8013202:	f883 242d 	strb.w	r2, [r3, #1069]	; 0x42d
 8013206:	e00e      	b.n	8013226 <ProcessRadioRxDone+0x14e>
        }
        else if( LoRaMacClassBIsMulticastExpected( ) == true )
 8013208:	f004 fd40 	bl	8017c8c <LoRaMacClassBIsMulticastExpected>
 801320c:	4603      	mov	r3, r0
 801320e:	2b00      	cmp	r3, #0
 8013210:	d009      	beq.n	8013226 <ProcessRadioRxDone+0x14e>
        {
            LoRaMacClassBSetMulticastSlotState( PINGSLOT_STATE_CALC_PING_OFFSET );
 8013212:	2000      	movs	r0, #0
 8013214:	f004 fcf4 	bl	8017c00 <LoRaMacClassBSetMulticastSlotState>
            LoRaMacClassBMulticastSlotTimerEvent( NULL );
 8013218:	2000      	movs	r0, #0
 801321a:	f004 fd14 	bl	8017c46 <LoRaMacClassBMulticastSlotTimerEvent>
            MacCtx.McpsIndication.RxSlot = RX_SLOT_WIN_CLASS_B_MULTICAST_SLOT;
 801321e:	4b7e      	ldr	r3, [pc, #504]	; (8013418 <ProcessRadioRxDone+0x340>)
 8013220:	2205      	movs	r2, #5
 8013222:	f883 242d 	strb.w	r2, [r3, #1069]	; 0x42d
        }
    }

    macHdr.Value = payload[pktHeaderLen++];
 8013226:	f897 3076 	ldrb.w	r3, [r7, #118]	; 0x76
 801322a:	1c5a      	adds	r2, r3, #1
 801322c:	f887 2076 	strb.w	r2, [r7, #118]	; 0x76
 8013230:	461a      	mov	r2, r3
 8013232:	6ffb      	ldr	r3, [r7, #124]	; 0x7c
 8013234:	4413      	add	r3, r2
 8013236:	781b      	ldrb	r3, [r3, #0]
 8013238:	f887 3074 	strb.w	r3, [r7, #116]	; 0x74

    switch( macHdr.Bits.MType )
 801323c:	f897 3074 	ldrb.w	r3, [r7, #116]	; 0x74
 8013240:	f3c3 1342 	ubfx	r3, r3, #5, #3
 8013244:	b2db      	uxtb	r3, r3
 8013246:	3b01      	subs	r3, #1
 8013248:	2b06      	cmp	r3, #6
 801324a:	f200 83a6 	bhi.w	801399a <ProcessRadioRxDone+0x8c2>
 801324e:	a201      	add	r2, pc, #4	; (adr r2, 8013254 <ProcessRadioRxDone+0x17c>)
 8013250:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8013254:	08013271 	.word	0x08013271
 8013258:	0801399b 	.word	0x0801399b
 801325c:	0801342d 	.word	0x0801342d
 8013260:	0801399b 	.word	0x0801399b
 8013264:	08013425 	.word	0x08013425
 8013268:	0801399b 	.word	0x0801399b
 801326c:	08013941 	.word	0x08013941
    {
        case FRAME_TYPE_JOIN_ACCEPT:
            // Check if the received frame size is valid
            if( size < LORAMAC_JOIN_ACCEPT_FRAME_MIN_SIZE )
 8013270:	f8b7 307a 	ldrh.w	r3, [r7, #122]	; 0x7a
 8013274:	2b10      	cmp	r3, #16
 8013276:	d806      	bhi.n	8013286 <ProcessRadioRxDone+0x1ae>
            {
                MacCtx.McpsIndication.Status = LORAMAC_EVENT_INFO_STATUS_ERROR;
 8013278:	4b67      	ldr	r3, [pc, #412]	; (8013418 <ProcessRadioRxDone+0x340>)
 801327a:	2201      	movs	r2, #1
 801327c:	f883 241d 	strb.w	r2, [r3, #1053]	; 0x41d
                PrepareRxDoneAbort( );
 8013280:	f7ff ff04 	bl	801308c <PrepareRxDoneAbort>
                return;
 8013284:	e3b2      	b.n	80139ec <ProcessRadioRxDone+0x914>
            }
            macMsgJoinAccept.Buffer = payload;
 8013286:	6ffb      	ldr	r3, [r7, #124]	; 0x7c
 8013288:	60bb      	str	r3, [r7, #8]
            macMsgJoinAccept.BufSize = size;
 801328a:	f8b7 307a 	ldrh.w	r3, [r7, #122]	; 0x7a
 801328e:	b2db      	uxtb	r3, r3
 8013290:	733b      	strb	r3, [r7, #12]

            // Abort in case if the device isn't joined yet and no rejoin request is ongoing.
            if( MacCtx.NvmCtx->NetworkActivation != ACTIVATION_TYPE_NONE )
 8013292:	4b61      	ldr	r3, [pc, #388]	; (8013418 <ProcessRadioRxDone+0x340>)
 8013294:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8013298:	f893 3164 	ldrb.w	r3, [r3, #356]	; 0x164
 801329c:	2b00      	cmp	r3, #0
 801329e:	d006      	beq.n	80132ae <ProcessRadioRxDone+0x1d6>
            {
                MacCtx.McpsIndication.Status = LORAMAC_EVENT_INFO_STATUS_ERROR;
 80132a0:	4b5d      	ldr	r3, [pc, #372]	; (8013418 <ProcessRadioRxDone+0x340>)
 80132a2:	2201      	movs	r2, #1
 80132a4:	f883 241d 	strb.w	r2, [r3, #1053]	; 0x41d
                PrepareRxDoneAbort( );
 80132a8:	f7ff fef0 	bl	801308c <PrepareRxDoneAbort>
                return;
 80132ac:	e39e      	b.n	80139ec <ProcessRadioRxDone+0x914>
            }
            macCryptoStatus = LoRaMacCryptoHandleJoinAccept( JOIN_REQ, SecureElementGetJoinEui( ), &macMsgJoinAccept );
 80132ae:	f7fe fc99 	bl	8011be4 <SecureElementGetJoinEui>
 80132b2:	4601      	mov	r1, r0
 80132b4:	f107 0308 	add.w	r3, r7, #8
 80132b8:	461a      	mov	r2, r3
 80132ba:	20ff      	movs	r0, #255	; 0xff
 80132bc:	f005 ff14 	bl	80190e8 <LoRaMacCryptoHandleJoinAccept>
 80132c0:	4603      	mov	r3, r0
 80132c2:	f887 3080 	strb.w	r3, [r7, #128]	; 0x80

            if( LORAMAC_CRYPTO_SUCCESS == macCryptoStatus )
 80132c6:	f897 3080 	ldrb.w	r3, [r7, #128]	; 0x80
 80132ca:	2b00      	cmp	r3, #0
 80132cc:	f040 8095 	bne.w	80133fa <ProcessRadioRxDone+0x322>
            {
                // Network ID
                MacCtx.NvmCtx->NetID = ( uint32_t ) macMsgJoinAccept.NetID[0];
 80132d0:	7c7a      	ldrb	r2, [r7, #17]
 80132d2:	4b51      	ldr	r3, [pc, #324]	; (8013418 <ProcessRadioRxDone+0x340>)
 80132d4:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 80132d8:	649a      	str	r2, [r3, #72]	; 0x48
                MacCtx.NvmCtx->NetID |= ( ( uint32_t ) macMsgJoinAccept.NetID[1] << 8 );
 80132da:	4b4f      	ldr	r3, [pc, #316]	; (8013418 <ProcessRadioRxDone+0x340>)
 80132dc:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 80132e0:	6c99      	ldr	r1, [r3, #72]	; 0x48
 80132e2:	7cbb      	ldrb	r3, [r7, #18]
 80132e4:	021a      	lsls	r2, r3, #8
 80132e6:	4b4c      	ldr	r3, [pc, #304]	; (8013418 <ProcessRadioRxDone+0x340>)
 80132e8:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 80132ec:	430a      	orrs	r2, r1
 80132ee:	649a      	str	r2, [r3, #72]	; 0x48
                MacCtx.NvmCtx->NetID |= ( ( uint32_t ) macMsgJoinAccept.NetID[2] << 16 );
 80132f0:	4b49      	ldr	r3, [pc, #292]	; (8013418 <ProcessRadioRxDone+0x340>)
 80132f2:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 80132f6:	6c99      	ldr	r1, [r3, #72]	; 0x48
 80132f8:	7cfb      	ldrb	r3, [r7, #19]
 80132fa:	041a      	lsls	r2, r3, #16
 80132fc:	4b46      	ldr	r3, [pc, #280]	; (8013418 <ProcessRadioRxDone+0x340>)
 80132fe:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8013302:	430a      	orrs	r2, r1
 8013304:	649a      	str	r2, [r3, #72]	; 0x48

                // Device Address
                MacCtx.NvmCtx->DevAddr = macMsgJoinAccept.DevAddr;
 8013306:	4b44      	ldr	r3, [pc, #272]	; (8013418 <ProcessRadioRxDone+0x340>)
 8013308:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 801330c:	697a      	ldr	r2, [r7, #20]
 801330e:	64da      	str	r2, [r3, #76]	; 0x4c

                // DLSettings
                MacCtx.NvmCtx->MacParams.Rx1DrOffset = macMsgJoinAccept.DLSettings.Bits.RX1DRoffset;
 8013310:	7e3b      	ldrb	r3, [r7, #24]
 8013312:	f3c3 1302 	ubfx	r3, r3, #4, #3
 8013316:	b2da      	uxtb	r2, r3
 8013318:	4b3f      	ldr	r3, [pc, #252]	; (8013418 <ProcessRadioRxDone+0x340>)
 801331a:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 801331e:	f883 20a5 	strb.w	r2, [r3, #165]	; 0xa5
                MacCtx.NvmCtx->MacParams.Rx2Channel.Datarate = macMsgJoinAccept.DLSettings.Bits.RX2DataRate;
 8013322:	7e3b      	ldrb	r3, [r7, #24]
 8013324:	f3c3 0303 	ubfx	r3, r3, #0, #4
 8013328:	b2da      	uxtb	r2, r3
 801332a:	4b3b      	ldr	r3, [pc, #236]	; (8013418 <ProcessRadioRxDone+0x340>)
 801332c:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8013330:	f883 20ac 	strb.w	r2, [r3, #172]	; 0xac
                MacCtx.NvmCtx->MacParams.RxCChannel.Datarate = macMsgJoinAccept.DLSettings.Bits.RX2DataRate;
 8013334:	7e3b      	ldrb	r3, [r7, #24]
 8013336:	f3c3 0303 	ubfx	r3, r3, #0, #4
 801333a:	b2da      	uxtb	r2, r3
 801333c:	4b36      	ldr	r3, [pc, #216]	; (8013418 <ProcessRadioRxDone+0x340>)
 801333e:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8013342:	f883 20b4 	strb.w	r2, [r3, #180]	; 0xb4

                // RxDelay
                MacCtx.NvmCtx->MacParams.ReceiveDelay1 = macMsgJoinAccept.RxDelay;
 8013346:	7e7a      	ldrb	r2, [r7, #25]
 8013348:	4b33      	ldr	r3, [pc, #204]	; (8013418 <ProcessRadioRxDone+0x340>)
 801334a:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 801334e:	f8c3 2094 	str.w	r2, [r3, #148]	; 0x94
                if( MacCtx.NvmCtx->MacParams.ReceiveDelay1 == 0 )
 8013352:	4b31      	ldr	r3, [pc, #196]	; (8013418 <ProcessRadioRxDone+0x340>)
 8013354:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8013358:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 801335c:	2b00      	cmp	r3, #0
 801335e:	d105      	bne.n	801336c <ProcessRadioRxDone+0x294>
                {
                    MacCtx.NvmCtx->MacParams.ReceiveDelay1 = 1;
 8013360:	4b2d      	ldr	r3, [pc, #180]	; (8013418 <ProcessRadioRxDone+0x340>)
 8013362:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8013366:	2201      	movs	r2, #1
 8013368:	f8c3 2094 	str.w	r2, [r3, #148]	; 0x94
                }
                MacCtx.NvmCtx->MacParams.ReceiveDelay1 *= 1000;
 801336c:	4b2a      	ldr	r3, [pc, #168]	; (8013418 <ProcessRadioRxDone+0x340>)
 801336e:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8013372:	f8d3 2094 	ldr.w	r2, [r3, #148]	; 0x94
 8013376:	4b28      	ldr	r3, [pc, #160]	; (8013418 <ProcessRadioRxDone+0x340>)
 8013378:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 801337c:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8013380:	fb01 f202 	mul.w	r2, r1, r2
 8013384:	f8c3 2094 	str.w	r2, [r3, #148]	; 0x94
                MacCtx.NvmCtx->MacParams.ReceiveDelay2 = MacCtx.NvmCtx->MacParams.ReceiveDelay1 + 1000;
 8013388:	4b23      	ldr	r3, [pc, #140]	; (8013418 <ProcessRadioRxDone+0x340>)
 801338a:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 801338e:	f8d3 2094 	ldr.w	r2, [r3, #148]	; 0x94
 8013392:	4b21      	ldr	r3, [pc, #132]	; (8013418 <ProcessRadioRxDone+0x340>)
 8013394:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8013398:	f502 727a 	add.w	r2, r2, #1000	; 0x3e8
 801339c:	f8c3 2098 	str.w	r2, [r3, #152]	; 0x98

                MacCtx.NvmCtx->Version.Fields.Minor = 0;
 80133a0:	4b1d      	ldr	r3, [pc, #116]	; (8013418 <ProcessRadioRxDone+0x340>)
 80133a2:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 80133a6:	2200      	movs	r2, #0
 80133a8:	f883 2162 	strb.w	r2, [r3, #354]	; 0x162

                // Apply CF list
                applyCFList.Payload = macMsgJoinAccept.CFList;
 80133ac:	f107 0308 	add.w	r3, r7, #8
 80133b0:	3312      	adds	r3, #18
 80133b2:	66fb      	str	r3, [r7, #108]	; 0x6c
                // Size of the regular payload is 12. Plus 1 byte MHDR and 4 bytes MIC
                applyCFList.Size = size - 17;
 80133b4:	f8b7 307a 	ldrh.w	r3, [r7, #122]	; 0x7a
 80133b8:	b2db      	uxtb	r3, r3
 80133ba:	3b11      	subs	r3, #17
 80133bc:	b2db      	uxtb	r3, r3
 80133be:	f887 3070 	strb.w	r3, [r7, #112]	; 0x70

                RegionApplyCFList( MacCtx.NvmCtx->Region, &applyCFList );
 80133c2:	4b15      	ldr	r3, [pc, #84]	; (8013418 <ProcessRadioRxDone+0x340>)
 80133c4:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 80133c8:	781b      	ldrb	r3, [r3, #0]
 80133ca:	f107 026c 	add.w	r2, r7, #108	; 0x6c
 80133ce:	4611      	mov	r1, r2
 80133d0:	4618      	mov	r0, r3
 80133d2:	f006 fc81 	bl	8019cd8 <RegionApplyCFList>

                MacCtx.NvmCtx->NetworkActivation = ACTIVATION_TYPE_OTAA;
 80133d6:	4b10      	ldr	r3, [pc, #64]	; (8013418 <ProcessRadioRxDone+0x340>)
 80133d8:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 80133dc:	2202      	movs	r2, #2
 80133de:	f883 2164 	strb.w	r2, [r3, #356]	; 0x164

                // MLME handling
                if( LoRaMacConfirmQueueIsCmdActive( MLME_JOIN ) == true )
 80133e2:	2001      	movs	r0, #1
 80133e4:	f005 f98e 	bl	8018704 <LoRaMacConfirmQueueIsCmdActive>
 80133e8:	4603      	mov	r3, r0
 80133ea:	2b00      	cmp	r3, #0
 80133ec:	f000 82dc 	beq.w	80139a8 <ProcessRadioRxDone+0x8d0>
                {
                    LoRaMacConfirmQueueSetStatus( LORAMAC_EVENT_INFO_STATUS_OK, MLME_JOIN );
 80133f0:	2101      	movs	r1, #1
 80133f2:	2000      	movs	r0, #0
 80133f4:	f005 f8fa 	bl	80185ec <LoRaMacConfirmQueueSetStatus>
                if( LoRaMacConfirmQueueIsCmdActive( MLME_JOIN ) == true )
                {
                    LoRaMacConfirmQueueSetStatus( LORAMAC_EVENT_INFO_STATUS_JOIN_FAIL, MLME_JOIN );
                }
            }
            break;
 80133f8:	e2d6      	b.n	80139a8 <ProcessRadioRxDone+0x8d0>
                if( LoRaMacConfirmQueueIsCmdActive( MLME_JOIN ) == true )
 80133fa:	2001      	movs	r0, #1
 80133fc:	f005 f982 	bl	8018704 <LoRaMacConfirmQueueIsCmdActive>
 8013400:	4603      	mov	r3, r0
 8013402:	2b00      	cmp	r3, #0
 8013404:	f000 82d0 	beq.w	80139a8 <ProcessRadioRxDone+0x8d0>
                    LoRaMacConfirmQueueSetStatus( LORAMAC_EVENT_INFO_STATUS_JOIN_FAIL, MLME_JOIN );
 8013408:	2101      	movs	r1, #1
 801340a:	2007      	movs	r0, #7
 801340c:	f005 f8ee 	bl	80185ec <LoRaMacConfirmQueueSetStatus>
            break;
 8013410:	e2ca      	b.n	80139a8 <ProcessRadioRxDone+0x8d0>
 8013412:	bf00      	nop
 8013414:	20001fec 	.word	0x20001fec
 8013418:	20000be0 	.word	0x20000be0
 801341c:	0802683c 	.word	0x0802683c
 8013420:	20000f78 	.word	0x20000f78
        case FRAME_TYPE_DATA_CONFIRMED_DOWN:
            MacCtx.McpsIndication.McpsIndication = MCPS_CONFIRMED;
 8013424:	4bbc      	ldr	r3, [pc, #752]	; (8013718 <ProcessRadioRxDone+0x640>)
 8013426:	2201      	movs	r2, #1
 8013428:	f883 241c 	strb.w	r2, [r3, #1052]	; 0x41c
            // Intentional fall through
        case FRAME_TYPE_DATA_UNCONFIRMED_DOWN:
            // Check if the received payload size is valid
            getPhy.UplinkDwellTime = MacCtx.NvmCtx->MacParams.DownlinkDwellTime;
 801342c:	4bba      	ldr	r3, [pc, #744]	; (8013718 <ProcessRadioRxDone+0x640>)
 801342e:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8013432:	f893 30b9 	ldrb.w	r3, [r3, #185]	; 0xb9
 8013436:	f887 3066 	strb.w	r3, [r7, #102]	; 0x66
            getPhy.Datarate = MacCtx.McpsIndication.RxDatarate;
 801343a:	4bb7      	ldr	r3, [pc, #732]	; (8013718 <ProcessRadioRxDone+0x640>)
 801343c:	f893 3420 	ldrb.w	r3, [r3, #1056]	; 0x420
 8013440:	b25b      	sxtb	r3, r3
 8013442:	f887 3065 	strb.w	r3, [r7, #101]	; 0x65
            getPhy.Attribute = PHY_MAX_PAYLOAD;
 8013446:	230d      	movs	r3, #13
 8013448:	f887 3064 	strb.w	r3, [r7, #100]	; 0x64

            // Get the maximum payload length
            if( MacCtx.NvmCtx->RepeaterSupport == true )
 801344c:	4bb2      	ldr	r3, [pc, #712]	; (8013718 <ProcessRadioRxDone+0x640>)
 801344e:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8013452:	f893 30ca 	ldrb.w	r3, [r3, #202]	; 0xca
 8013456:	2b00      	cmp	r3, #0
 8013458:	d002      	beq.n	8013460 <ProcessRadioRxDone+0x388>
            {
                getPhy.Attribute = PHY_MAX_PAYLOAD_REPEATER;
 801345a:	230e      	movs	r3, #14
 801345c:	f887 3064 	strb.w	r3, [r7, #100]	; 0x64
            }

            phyParam = RegionGetPhyParam( MacCtx.NvmCtx->Region, &getPhy );
 8013460:	4bad      	ldr	r3, [pc, #692]	; (8013718 <ProcessRadioRxDone+0x640>)
 8013462:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8013466:	781b      	ldrb	r3, [r3, #0]
 8013468:	f107 0264 	add.w	r2, r7, #100	; 0x64
 801346c:	4611      	mov	r1, r2
 801346e:	4618      	mov	r0, r3
 8013470:	f006 fba5 	bl	8019bbe <RegionGetPhyParam>
 8013474:	4603      	mov	r3, r0
 8013476:	663b      	str	r3, [r7, #96]	; 0x60
            if( ( MAX( 0, ( int16_t )( ( int16_t ) size - ( int16_t ) LORAMAC_FRAME_PAYLOAD_OVERHEAD_SIZE ) ) > ( int16_t )phyParam.Value ) ||
 8013478:	f8b7 307a 	ldrh.w	r3, [r7, #122]	; 0x7a
 801347c:	3b0d      	subs	r3, #13
 801347e:	b29b      	uxth	r3, r3
 8013480:	b21b      	sxth	r3, r3
 8013482:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8013486:	b21a      	sxth	r2, r3
 8013488:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 801348a:	b21b      	sxth	r3, r3
 801348c:	429a      	cmp	r2, r3
 801348e:	dc03      	bgt.n	8013498 <ProcessRadioRxDone+0x3c0>
 8013490:	f8b7 307a 	ldrh.w	r3, [r7, #122]	; 0x7a
 8013494:	2b0b      	cmp	r3, #11
 8013496:	d806      	bhi.n	80134a6 <ProcessRadioRxDone+0x3ce>
                ( size < LORAMAC_FRAME_PAYLOAD_MIN_SIZE ) )
            {
                MacCtx.McpsIndication.Status = LORAMAC_EVENT_INFO_STATUS_ERROR;
 8013498:	4b9f      	ldr	r3, [pc, #636]	; (8013718 <ProcessRadioRxDone+0x640>)
 801349a:	2201      	movs	r2, #1
 801349c:	f883 241d 	strb.w	r2, [r3, #1053]	; 0x41d
                PrepareRxDoneAbort( );
 80134a0:	f7ff fdf4 	bl	801308c <PrepareRxDoneAbort>
                return;
 80134a4:	e2a2      	b.n	80139ec <ProcessRadioRxDone+0x914>
            }
            macMsgData.Buffer = payload;
 80134a6:	6ffb      	ldr	r3, [r7, #124]	; 0x7c
 80134a8:	633b      	str	r3, [r7, #48]	; 0x30
            macMsgData.BufSize = size;
 80134aa:	f8b7 307a 	ldrh.w	r3, [r7, #122]	; 0x7a
 80134ae:	b2db      	uxtb	r3, r3
 80134b0:	f887 3034 	strb.w	r3, [r7, #52]	; 0x34
            macMsgData.FRMPayload = MacCtx.RxPayload;
 80134b4:	4b99      	ldr	r3, [pc, #612]	; (801371c <ProcessRadioRxDone+0x644>)
 80134b6:	657b      	str	r3, [r7, #84]	; 0x54
            macMsgData.FRMPayloadSize = LORAMAC_PHY_MAXPAYLOAD;
 80134b8:	23ff      	movs	r3, #255	; 0xff
 80134ba:	f887 3058 	strb.w	r3, [r7, #88]	; 0x58

            if( LORAMAC_PARSER_SUCCESS != LoRaMacParserData( &macMsgData ) )
 80134be:	f107 0330 	add.w	r3, r7, #48	; 0x30
 80134c2:	4618      	mov	r0, r3
 80134c4:	f006 f8f9 	bl	80196ba <LoRaMacParserData>
 80134c8:	4603      	mov	r3, r0
 80134ca:	2b00      	cmp	r3, #0
 80134cc:	d006      	beq.n	80134dc <ProcessRadioRxDone+0x404>
            {
                MacCtx.McpsIndication.Status = LORAMAC_EVENT_INFO_STATUS_ERROR;
 80134ce:	4b92      	ldr	r3, [pc, #584]	; (8013718 <ProcessRadioRxDone+0x640>)
 80134d0:	2201      	movs	r2, #1
 80134d2:	f883 241d 	strb.w	r2, [r3, #1053]	; 0x41d
                PrepareRxDoneAbort( );
 80134d6:	f7ff fdd9 	bl	801308c <PrepareRxDoneAbort>
                return;
 80134da:	e287      	b.n	80139ec <ProcessRadioRxDone+0x914>
            }

            // Store device address
            MacCtx.McpsIndication.DevAddress = macMsgData.FHDR.DevAddr;
 80134dc:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80134de:	4a8e      	ldr	r2, [pc, #568]	; (8013718 <ProcessRadioRxDone+0x640>)
 80134e0:	f8c2 3434 	str.w	r3, [r2, #1076]	; 0x434

            FType_t fType;
            if( LORAMAC_STATUS_OK != DetermineFrameType( &macMsgData, &fType ) )
 80134e4:	1cba      	adds	r2, r7, #2
 80134e6:	f107 0330 	add.w	r3, r7, #48	; 0x30
 80134ea:	4611      	mov	r1, r2
 80134ec:	4618      	mov	r0, r3
 80134ee:	f002 fcfd 	bl	8015eec <DetermineFrameType>
 80134f2:	4603      	mov	r3, r0
 80134f4:	2b00      	cmp	r3, #0
 80134f6:	d006      	beq.n	8013506 <ProcessRadioRxDone+0x42e>
            {
                MacCtx.McpsIndication.Status = LORAMAC_EVENT_INFO_STATUS_ERROR;
 80134f8:	4b87      	ldr	r3, [pc, #540]	; (8013718 <ProcessRadioRxDone+0x640>)
 80134fa:	2201      	movs	r2, #1
 80134fc:	f883 241d 	strb.w	r2, [r3, #1053]	; 0x41d
                PrepareRxDoneAbort( );
 8013500:	f7ff fdc4 	bl	801308c <PrepareRxDoneAbort>
                return;
 8013504:	e272      	b.n	80139ec <ProcessRadioRxDone+0x914>
            }

            //Check if it is a multicast message
            multicast = 0;
 8013506:	2300      	movs	r3, #0
 8013508:	f887 3083 	strb.w	r3, [r7, #131]	; 0x83
            downLinkCounter = 0;
 801350c:	2300      	movs	r3, #0
 801350e:	607b      	str	r3, [r7, #4]
            for( uint8_t i = 0; i < LORAMAC_MAX_MC_CTX; i++ )
 8013510:	2300      	movs	r3, #0
 8013512:	f887 3081 	strb.w	r3, [r7, #129]	; 0x81
 8013516:	e055      	b.n	80135c4 <ProcessRadioRxDone+0x4ec>
            {
                if( ( MacCtx.NvmCtx->MulticastChannelList[i].ChannelParams.Address == macMsgData.FHDR.DevAddr ) &&
 8013518:	4b7f      	ldr	r3, [pc, #508]	; (8013718 <ProcessRadioRxDone+0x640>)
 801351a:	f8d3 2484 	ldr.w	r2, [r3, #1156]	; 0x484
 801351e:	f897 3081 	ldrb.w	r3, [r7, #129]	; 0x81
 8013522:	212c      	movs	r1, #44	; 0x2c
 8013524:	fb01 f303 	mul.w	r3, r1, r3
 8013528:	4413      	add	r3, r2
 801352a:	3354      	adds	r3, #84	; 0x54
 801352c:	681a      	ldr	r2, [r3, #0]
 801352e:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8013530:	429a      	cmp	r2, r3
 8013532:	d142      	bne.n	80135ba <ProcessRadioRxDone+0x4e2>
                    ( MacCtx.NvmCtx->MulticastChannelList[i].ChannelParams.IsEnabled == true ) )
 8013534:	4b78      	ldr	r3, [pc, #480]	; (8013718 <ProcessRadioRxDone+0x640>)
 8013536:	f8d3 2484 	ldr.w	r2, [r3, #1156]	; 0x484
 801353a:	f897 3081 	ldrb.w	r3, [r7, #129]	; 0x81
 801353e:	212c      	movs	r1, #44	; 0x2c
 8013540:	fb01 f303 	mul.w	r3, r1, r3
 8013544:	4413      	add	r3, r2
 8013546:	3352      	adds	r3, #82	; 0x52
 8013548:	781b      	ldrb	r3, [r3, #0]
                if( ( MacCtx.NvmCtx->MulticastChannelList[i].ChannelParams.Address == macMsgData.FHDR.DevAddr ) &&
 801354a:	2b00      	cmp	r3, #0
 801354c:	d035      	beq.n	80135ba <ProcessRadioRxDone+0x4e2>
                {
                    multicast = 1;
 801354e:	2301      	movs	r3, #1
 8013550:	f887 3083 	strb.w	r3, [r7, #131]	; 0x83
                    addrID = MacCtx.NvmCtx->MulticastChannelList[i].ChannelParams.GroupID;
 8013554:	4b70      	ldr	r3, [pc, #448]	; (8013718 <ProcessRadioRxDone+0x640>)
 8013556:	f8d3 2484 	ldr.w	r2, [r3, #1156]	; 0x484
 801355a:	f897 3081 	ldrb.w	r3, [r7, #129]	; 0x81
 801355e:	212c      	movs	r1, #44	; 0x2c
 8013560:	fb01 f303 	mul.w	r3, r1, r3
 8013564:	4413      	add	r3, r2
 8013566:	3353      	adds	r3, #83	; 0x53
 8013568:	781b      	ldrb	r3, [r3, #0]
 801356a:	f887 3082 	strb.w	r3, [r7, #130]	; 0x82
                    downLinkCounter = *( MacCtx.NvmCtx->MulticastChannelList[i].DownLinkCounter );
 801356e:	4b6a      	ldr	r3, [pc, #424]	; (8013718 <ProcessRadioRxDone+0x640>)
 8013570:	f8d3 2484 	ldr.w	r2, [r3, #1156]	; 0x484
 8013574:	f897 3081 	ldrb.w	r3, [r7, #129]	; 0x81
 8013578:	212c      	movs	r1, #44	; 0x2c
 801357a:	fb01 f303 	mul.w	r3, r1, r3
 801357e:	4413      	add	r3, r2
 8013580:	3370      	adds	r3, #112	; 0x70
 8013582:	681b      	ldr	r3, [r3, #0]
 8013584:	681b      	ldr	r3, [r3, #0]
 8013586:	607b      	str	r3, [r7, #4]
                    address = MacCtx.NvmCtx->MulticastChannelList[i].ChannelParams.Address;
 8013588:	4b63      	ldr	r3, [pc, #396]	; (8013718 <ProcessRadioRxDone+0x640>)
 801358a:	f8d3 2484 	ldr.w	r2, [r3, #1156]	; 0x484
 801358e:	f897 3081 	ldrb.w	r3, [r7, #129]	; 0x81
 8013592:	212c      	movs	r1, #44	; 0x2c
 8013594:	fb01 f303 	mul.w	r3, r1, r3
 8013598:	4413      	add	r3, r2
 801359a:	3354      	adds	r3, #84	; 0x54
 801359c:	681b      	ldr	r3, [r3, #0]
 801359e:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
                    if( MacCtx.NvmCtx->DeviceClass == CLASS_C )
 80135a2:	4b5d      	ldr	r3, [pc, #372]	; (8013718 <ProcessRadioRxDone+0x640>)
 80135a4:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 80135a8:	f893 307c 	ldrb.w	r3, [r3, #124]	; 0x7c
 80135ac:	2b02      	cmp	r3, #2
 80135ae:	d10e      	bne.n	80135ce <ProcessRadioRxDone+0x4f6>
                    {
                        MacCtx.McpsIndication.RxSlot = RX_SLOT_WIN_CLASS_C_MULTICAST;
 80135b0:	4b59      	ldr	r3, [pc, #356]	; (8013718 <ProcessRadioRxDone+0x640>)
 80135b2:	2203      	movs	r2, #3
 80135b4:	f883 242d 	strb.w	r2, [r3, #1069]	; 0x42d
                    }
                    break;
 80135b8:	e009      	b.n	80135ce <ProcessRadioRxDone+0x4f6>
            for( uint8_t i = 0; i < LORAMAC_MAX_MC_CTX; i++ )
 80135ba:	f897 3081 	ldrb.w	r3, [r7, #129]	; 0x81
 80135be:	3301      	adds	r3, #1
 80135c0:	f887 3081 	strb.w	r3, [r7, #129]	; 0x81
 80135c4:	f897 3081 	ldrb.w	r3, [r7, #129]	; 0x81
 80135c8:	2b00      	cmp	r3, #0
 80135ca:	d0a5      	beq.n	8013518 <ProcessRadioRxDone+0x440>
 80135cc:	e000      	b.n	80135d0 <ProcessRadioRxDone+0x4f8>
                    break;
 80135ce:	bf00      	nop
                }
            }

            // Filter messages according to multicast downlink exceptions
            if( ( multicast == 1 ) && ( ( fType != FRAME_TYPE_D ) ||
 80135d0:	f897 3083 	ldrb.w	r3, [r7, #131]	; 0x83
 80135d4:	2b01      	cmp	r3, #1
 80135d6:	d117      	bne.n	8013608 <ProcessRadioRxDone+0x530>
 80135d8:	78bb      	ldrb	r3, [r7, #2]
 80135da:	2b03      	cmp	r3, #3
 80135dc:	d10d      	bne.n	80135fa <ProcessRadioRxDone+0x522>
                                        ( macMsgData.FHDR.FCtrl.Bits.Ack != 0 ) ||
 80135de:	f897 303c 	ldrb.w	r3, [r7, #60]	; 0x3c
 80135e2:	f003 0320 	and.w	r3, r3, #32
 80135e6:	b2db      	uxtb	r3, r3
            if( ( multicast == 1 ) && ( ( fType != FRAME_TYPE_D ) ||
 80135e8:	2b00      	cmp	r3, #0
 80135ea:	d106      	bne.n	80135fa <ProcessRadioRxDone+0x522>
                                        ( macMsgData.FHDR.FCtrl.Bits.AdrAckReq != 0 ) ) )
 80135ec:	f897 303c 	ldrb.w	r3, [r7, #60]	; 0x3c
 80135f0:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80135f4:	b2db      	uxtb	r3, r3
                                        ( macMsgData.FHDR.FCtrl.Bits.Ack != 0 ) ||
 80135f6:	2b00      	cmp	r3, #0
 80135f8:	d006      	beq.n	8013608 <ProcessRadioRxDone+0x530>
            {
                MacCtx.McpsIndication.Status = LORAMAC_EVENT_INFO_STATUS_ERROR;
 80135fa:	4b47      	ldr	r3, [pc, #284]	; (8013718 <ProcessRadioRxDone+0x640>)
 80135fc:	2201      	movs	r2, #1
 80135fe:	f883 241d 	strb.w	r2, [r3, #1053]	; 0x41d
                PrepareRxDoneAbort( );
 8013602:	f7ff fd43 	bl	801308c <PrepareRxDoneAbort>
                return;
 8013606:	e1f1      	b.n	80139ec <ProcessRadioRxDone+0x914>
            }

            // Get maximum allowed counter difference
            getPhy.Attribute = PHY_MAX_FCNT_GAP;
 8013608:	2315      	movs	r3, #21
 801360a:	f887 3064 	strb.w	r3, [r7, #100]	; 0x64
            phyParam = RegionGetPhyParam( MacCtx.NvmCtx->Region, &getPhy );
 801360e:	4b42      	ldr	r3, [pc, #264]	; (8013718 <ProcessRadioRxDone+0x640>)
 8013610:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8013614:	781b      	ldrb	r3, [r3, #0]
 8013616:	f107 0264 	add.w	r2, r7, #100	; 0x64
 801361a:	4611      	mov	r1, r2
 801361c:	4618      	mov	r0, r3
 801361e:	f006 face 	bl	8019bbe <RegionGetPhyParam>
 8013622:	4603      	mov	r3, r0
 8013624:	663b      	str	r3, [r7, #96]	; 0x60

            // Get downlink frame counter value
            macCryptoStatus = GetFCntDown( addrID, fType, &macMsgData, MacCtx.NvmCtx->Version, phyParam.Value, &fCntID, &downLinkCounter );
 8013626:	78bc      	ldrb	r4, [r7, #2]
 8013628:	4b3b      	ldr	r3, [pc, #236]	; (8013718 <ProcessRadioRxDone+0x640>)
 801362a:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 801362e:	6e3a      	ldr	r2, [r7, #96]	; 0x60
 8013630:	b292      	uxth	r2, r2
 8013632:	f107 0530 	add.w	r5, r7, #48	; 0x30
 8013636:	f897 0082 	ldrb.w	r0, [r7, #130]	; 0x82
 801363a:	1d39      	adds	r1, r7, #4
 801363c:	9102      	str	r1, [sp, #8]
 801363e:	1cf9      	adds	r1, r7, #3
 8013640:	9101      	str	r1, [sp, #4]
 8013642:	9200      	str	r2, [sp, #0]
 8013644:	f8d3 3160 	ldr.w	r3, [r3, #352]	; 0x160
 8013648:	462a      	mov	r2, r5
 801364a:	4621      	mov	r1, r4
 801364c:	f000 fdac 	bl	80141a8 <GetFCntDown>
 8013650:	4603      	mov	r3, r0
 8013652:	f887 3080 	strb.w	r3, [r7, #128]	; 0x80
            if( macCryptoStatus != LORAMAC_CRYPTO_SUCCESS )
 8013656:	f897 3080 	ldrb.w	r3, [r7, #128]	; 0x80
 801365a:	2b00      	cmp	r3, #0
 801365c:	d038      	beq.n	80136d0 <ProcessRadioRxDone+0x5f8>
            {
                if( macCryptoStatus == LORAMAC_CRYPTO_FAIL_FCNT_DUPLICATED )
 801365e:	f897 3080 	ldrb.w	r3, [r7, #128]	; 0x80
 8013662:	2b07      	cmp	r3, #7
 8013664:	d120      	bne.n	80136a8 <ProcessRadioRxDone+0x5d0>
                {
                    // Catch the case of repeated downlink frame counter
                    MacCtx.McpsIndication.Status = LORAMAC_EVENT_INFO_STATUS_DOWNLINK_REPEATED;
 8013666:	4b2c      	ldr	r3, [pc, #176]	; (8013718 <ProcessRadioRxDone+0x640>)
 8013668:	2208      	movs	r2, #8
 801366a:	f883 241d 	strb.w	r2, [r3, #1053]	; 0x41d
                    if( ( MacCtx.NvmCtx->Version.Fields.Minor == 0 ) && ( macHdr.Bits.MType == FRAME_TYPE_DATA_CONFIRMED_DOWN ) && ( MacCtx.NvmCtx->LastRxMic == macMsgData.MIC ) )
 801366e:	4b2a      	ldr	r3, [pc, #168]	; (8013718 <ProcessRadioRxDone+0x640>)
 8013670:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8013674:	f893 3162 	ldrb.w	r3, [r3, #354]	; 0x162
 8013678:	2b00      	cmp	r3, #0
 801367a:	d122      	bne.n	80136c2 <ProcessRadioRxDone+0x5ea>
 801367c:	f897 3074 	ldrb.w	r3, [r7, #116]	; 0x74
 8013680:	f023 031f 	bic.w	r3, r3, #31
 8013684:	b2db      	uxtb	r3, r3
 8013686:	2ba0      	cmp	r3, #160	; 0xa0
 8013688:	d11b      	bne.n	80136c2 <ProcessRadioRxDone+0x5ea>
 801368a:	4b23      	ldr	r3, [pc, #140]	; (8013718 <ProcessRadioRxDone+0x640>)
 801368c:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8013690:	f8d3 2168 	ldr.w	r2, [r3, #360]	; 0x168
 8013694:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 8013696:	429a      	cmp	r2, r3
 8013698:	d113      	bne.n	80136c2 <ProcessRadioRxDone+0x5ea>
                    {
                        MacCtx.NvmCtx->SrvAckRequested = true;
 801369a:	4b1f      	ldr	r3, [pc, #124]	; (8013718 <ProcessRadioRxDone+0x640>)
 801369c:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 80136a0:	2201      	movs	r2, #1
 80136a2:	f883 214b 	strb.w	r2, [r3, #331]	; 0x14b
 80136a6:	e00c      	b.n	80136c2 <ProcessRadioRxDone+0x5ea>
                    }
                }
                else if( macCryptoStatus == LORAMAC_CRYPTO_FAIL_MAX_GAP_FCNT )
 80136a8:	f897 3080 	ldrb.w	r3, [r7, #128]	; 0x80
 80136ac:	2b08      	cmp	r3, #8
 80136ae:	d104      	bne.n	80136ba <ProcessRadioRxDone+0x5e2>
                {
                    // Lost too many frames
                    MacCtx.McpsIndication.Status = LORAMAC_EVENT_INFO_STATUS_DOWNLINK_TOO_MANY_FRAMES_LOSS;
 80136b0:	4b19      	ldr	r3, [pc, #100]	; (8013718 <ProcessRadioRxDone+0x640>)
 80136b2:	220a      	movs	r2, #10
 80136b4:	f883 241d 	strb.w	r2, [r3, #1053]	; 0x41d
 80136b8:	e003      	b.n	80136c2 <ProcessRadioRxDone+0x5ea>
                }
                else
                {
                    // Other errors
                    MacCtx.McpsIndication.Status = LORAMAC_EVENT_INFO_STATUS_ERROR;
 80136ba:	4b17      	ldr	r3, [pc, #92]	; (8013718 <ProcessRadioRxDone+0x640>)
 80136bc:	2201      	movs	r2, #1
 80136be:	f883 241d 	strb.w	r2, [r3, #1053]	; 0x41d
                }
                MacCtx.McpsIndication.DownLinkCounter = downLinkCounter;
 80136c2:	687b      	ldr	r3, [r7, #4]
 80136c4:	4a14      	ldr	r2, [pc, #80]	; (8013718 <ProcessRadioRxDone+0x640>)
 80136c6:	f8c2 3430 	str.w	r3, [r2, #1072]	; 0x430
                PrepareRxDoneAbort( );
 80136ca:	f7ff fcdf 	bl	801308c <PrepareRxDoneAbort>
                return;
 80136ce:	e18d      	b.n	80139ec <ProcessRadioRxDone+0x914>
            }

            macCryptoStatus = LoRaMacCryptoUnsecureMessage( addrID, address, fCntID, downLinkCounter, &macMsgData );
 80136d0:	78fa      	ldrb	r2, [r7, #3]
 80136d2:	6879      	ldr	r1, [r7, #4]
 80136d4:	f897 0082 	ldrb.w	r0, [r7, #130]	; 0x82
 80136d8:	f107 0330 	add.w	r3, r7, #48	; 0x30
 80136dc:	9300      	str	r3, [sp, #0]
 80136de:	460b      	mov	r3, r1
 80136e0:	f8d7 1084 	ldr.w	r1, [r7, #132]	; 0x84
 80136e4:	f005 fe2e 	bl	8019344 <LoRaMacCryptoUnsecureMessage>
 80136e8:	4603      	mov	r3, r0
 80136ea:	f887 3080 	strb.w	r3, [r7, #128]	; 0x80
            if( macCryptoStatus != LORAMAC_CRYPTO_SUCCESS )
 80136ee:	f897 3080 	ldrb.w	r3, [r7, #128]	; 0x80
 80136f2:	2b00      	cmp	r3, #0
 80136f4:	d014      	beq.n	8013720 <ProcessRadioRxDone+0x648>
            {
                if( macCryptoStatus == LORAMAC_CRYPTO_FAIL_ADDRESS )
 80136f6:	f897 3080 	ldrb.w	r3, [r7, #128]	; 0x80
 80136fa:	2b02      	cmp	r3, #2
 80136fc:	d104      	bne.n	8013708 <ProcessRadioRxDone+0x630>
                {
                    // We are not the destination of this frame.
                    MacCtx.McpsIndication.Status = LORAMAC_EVENT_INFO_STATUS_ADDRESS_FAIL;
 80136fe:	4b06      	ldr	r3, [pc, #24]	; (8013718 <ProcessRadioRxDone+0x640>)
 8013700:	220b      	movs	r2, #11
 8013702:	f883 241d 	strb.w	r2, [r3, #1053]	; 0x41d
 8013706:	e003      	b.n	8013710 <ProcessRadioRxDone+0x638>
                }
                else
                {
                    // MIC calculation fail
                    MacCtx.McpsIndication.Status = LORAMAC_EVENT_INFO_STATUS_MIC_FAIL;
 8013708:	4b03      	ldr	r3, [pc, #12]	; (8013718 <ProcessRadioRxDone+0x640>)
 801370a:	220c      	movs	r2, #12
 801370c:	f883 241d 	strb.w	r2, [r3, #1053]	; 0x41d
                }
                PrepareRxDoneAbort( );
 8013710:	f7ff fcbc 	bl	801308c <PrepareRxDoneAbort>
                return;
 8013714:	e16a      	b.n	80139ec <ProcessRadioRxDone+0x914>
 8013716:	bf00      	nop
 8013718:	20000be0 	.word	0x20000be0
 801371c:	20000e18 	.word	0x20000e18
            }

            // Frame is valid
            MacCtx.McpsIndication.Status = LORAMAC_EVENT_INFO_STATUS_OK;
 8013720:	4bb4      	ldr	r3, [pc, #720]	; (80139f4 <ProcessRadioRxDone+0x91c>)
 8013722:	2200      	movs	r2, #0
 8013724:	f883 241d 	strb.w	r2, [r3, #1053]	; 0x41d
            MacCtx.McpsIndication.Multicast = multicast;
 8013728:	4ab2      	ldr	r2, [pc, #712]	; (80139f4 <ProcessRadioRxDone+0x91c>)
 801372a:	f897 3083 	ldrb.w	r3, [r7, #131]	; 0x83
 801372e:	f882 341e 	strb.w	r3, [r2, #1054]	; 0x41e
            MacCtx.McpsIndication.FramePending = macMsgData.FHDR.FCtrl.Bits.FPending;
 8013732:	f897 303c 	ldrb.w	r3, [r7, #60]	; 0x3c
 8013736:	f3c3 1300 	ubfx	r3, r3, #4, #1
 801373a:	b2db      	uxtb	r3, r3
 801373c:	461a      	mov	r2, r3
 801373e:	4bad      	ldr	r3, [pc, #692]	; (80139f4 <ProcessRadioRxDone+0x91c>)
 8013740:	f883 2421 	strb.w	r2, [r3, #1057]	; 0x421
            MacCtx.McpsIndication.Buffer = NULL;
 8013744:	4bab      	ldr	r3, [pc, #684]	; (80139f4 <ProcessRadioRxDone+0x91c>)
 8013746:	2200      	movs	r2, #0
 8013748:	f8c3 2424 	str.w	r2, [r3, #1060]	; 0x424
            MacCtx.McpsIndication.BufferSize = 0;
 801374c:	4ba9      	ldr	r3, [pc, #676]	; (80139f4 <ProcessRadioRxDone+0x91c>)
 801374e:	2200      	movs	r2, #0
 8013750:	f883 2428 	strb.w	r2, [r3, #1064]	; 0x428
            MacCtx.McpsIndication.DownLinkCounter = downLinkCounter;
 8013754:	687b      	ldr	r3, [r7, #4]
 8013756:	4aa7      	ldr	r2, [pc, #668]	; (80139f4 <ProcessRadioRxDone+0x91c>)
 8013758:	f8c2 3430 	str.w	r3, [r2, #1072]	; 0x430
            MacCtx.McpsIndication.AckReceived = macMsgData.FHDR.FCtrl.Bits.Ack;
 801375c:	f897 303c 	ldrb.w	r3, [r7, #60]	; 0x3c
 8013760:	f3c3 1340 	ubfx	r3, r3, #5, #1
 8013764:	b2db      	uxtb	r3, r3
 8013766:	2b00      	cmp	r3, #0
 8013768:	bf14      	ite	ne
 801376a:	2301      	movne	r3, #1
 801376c:	2300      	moveq	r3, #0
 801376e:	b2da      	uxtb	r2, r3
 8013770:	4ba0      	ldr	r3, [pc, #640]	; (80139f4 <ProcessRadioRxDone+0x91c>)
 8013772:	f883 242e 	strb.w	r2, [r3, #1070]	; 0x42e

            MacCtx.McpsConfirm.Status = LORAMAC_EVENT_INFO_STATUS_OK;
 8013776:	4b9f      	ldr	r3, [pc, #636]	; (80139f4 <ProcessRadioRxDone+0x91c>)
 8013778:	2200      	movs	r2, #0
 801377a:	f883 243d 	strb.w	r2, [r3, #1085]	; 0x43d
            MacCtx.McpsConfirm.AckReceived = macMsgData.FHDR.FCtrl.Bits.Ack;
 801377e:	f897 303c 	ldrb.w	r3, [r7, #60]	; 0x3c
 8013782:	f3c3 1340 	ubfx	r3, r3, #5, #1
 8013786:	b2db      	uxtb	r3, r3
 8013788:	2b00      	cmp	r3, #0
 801378a:	bf14      	ite	ne
 801378c:	2301      	movne	r3, #1
 801378e:	2300      	moveq	r3, #0
 8013790:	b2da      	uxtb	r2, r3
 8013792:	4b98      	ldr	r3, [pc, #608]	; (80139f4 <ProcessRadioRxDone+0x91c>)
 8013794:	f883 2440 	strb.w	r2, [r3, #1088]	; 0x440

            // Reset ADR ACK Counter only, when RX1 or RX2 slot
            if( ( MacCtx.McpsIndication.RxSlot == RX_SLOT_WIN_1 ) ||
 8013798:	4b96      	ldr	r3, [pc, #600]	; (80139f4 <ProcessRadioRxDone+0x91c>)
 801379a:	f893 342d 	ldrb.w	r3, [r3, #1069]	; 0x42d
 801379e:	2b00      	cmp	r3, #0
 80137a0:	d004      	beq.n	80137ac <ProcessRadioRxDone+0x6d4>
                ( MacCtx.McpsIndication.RxSlot == RX_SLOT_WIN_2 ) )
 80137a2:	4b94      	ldr	r3, [pc, #592]	; (80139f4 <ProcessRadioRxDone+0x91c>)
 80137a4:	f893 342d 	ldrb.w	r3, [r3, #1069]	; 0x42d
            if( ( MacCtx.McpsIndication.RxSlot == RX_SLOT_WIN_1 ) ||
 80137a8:	2b01      	cmp	r3, #1
 80137aa:	d105      	bne.n	80137b8 <ProcessRadioRxDone+0x6e0>
            {
                MacCtx.NvmCtx->AdrAckCounter = 0;
 80137ac:	4b91      	ldr	r3, [pc, #580]	; (80139f4 <ProcessRadioRxDone+0x91c>)
 80137ae:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 80137b2:	2200      	movs	r2, #0
 80137b4:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
            }

            // MCPS Indication and ack requested handling
            if( multicast == 1 )
 80137b8:	f897 3083 	ldrb.w	r3, [r7, #131]	; 0x83
 80137bc:	2b01      	cmp	r3, #1
 80137be:	d104      	bne.n	80137ca <ProcessRadioRxDone+0x6f2>
            {
                MacCtx.McpsIndication.McpsIndication = MCPS_MULTICAST;
 80137c0:	4b8c      	ldr	r3, [pc, #560]	; (80139f4 <ProcessRadioRxDone+0x91c>)
 80137c2:	2202      	movs	r2, #2
 80137c4:	f883 241c 	strb.w	r2, [r3, #1052]	; 0x41c
 80137c8:	e028      	b.n	801381c <ProcessRadioRxDone+0x744>
            }
            else
            {
                if( macHdr.Bits.MType == FRAME_TYPE_DATA_CONFIRMED_DOWN )
 80137ca:	f897 3074 	ldrb.w	r3, [r7, #116]	; 0x74
 80137ce:	f023 031f 	bic.w	r3, r3, #31
 80137d2:	b2db      	uxtb	r3, r3
 80137d4:	2ba0      	cmp	r3, #160	; 0xa0
 80137d6:	d117      	bne.n	8013808 <ProcessRadioRxDone+0x730>
                {
                    MacCtx.NvmCtx->SrvAckRequested = true;
 80137d8:	4b86      	ldr	r3, [pc, #536]	; (80139f4 <ProcessRadioRxDone+0x91c>)
 80137da:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 80137de:	2201      	movs	r2, #1
 80137e0:	f883 214b 	strb.w	r2, [r3, #331]	; 0x14b
                    if( MacCtx.NvmCtx->Version.Fields.Minor == 0 )
 80137e4:	4b83      	ldr	r3, [pc, #524]	; (80139f4 <ProcessRadioRxDone+0x91c>)
 80137e6:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 80137ea:	f893 3162 	ldrb.w	r3, [r3, #354]	; 0x162
 80137ee:	2b00      	cmp	r3, #0
 80137f0:	d105      	bne.n	80137fe <ProcessRadioRxDone+0x726>
                    {
                        MacCtx.NvmCtx->LastRxMic = macMsgData.MIC;
 80137f2:	4b80      	ldr	r3, [pc, #512]	; (80139f4 <ProcessRadioRxDone+0x91c>)
 80137f4:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 80137f8:	6dfa      	ldr	r2, [r7, #92]	; 0x5c
 80137fa:	f8c3 2168 	str.w	r2, [r3, #360]	; 0x168
                    }
                    MacCtx.McpsIndication.McpsIndication = MCPS_CONFIRMED;
 80137fe:	4b7d      	ldr	r3, [pc, #500]	; (80139f4 <ProcessRadioRxDone+0x91c>)
 8013800:	2201      	movs	r2, #1
 8013802:	f883 241c 	strb.w	r2, [r3, #1052]	; 0x41c
 8013806:	e009      	b.n	801381c <ProcessRadioRxDone+0x744>
                }
                else
                {
                    MacCtx.NvmCtx->SrvAckRequested = false;
 8013808:	4b7a      	ldr	r3, [pc, #488]	; (80139f4 <ProcessRadioRxDone+0x91c>)
 801380a:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 801380e:	2200      	movs	r2, #0
 8013810:	f883 214b 	strb.w	r2, [r3, #331]	; 0x14b
                    MacCtx.McpsIndication.McpsIndication = MCPS_UNCONFIRMED;
 8013814:	4b77      	ldr	r3, [pc, #476]	; (80139f4 <ProcessRadioRxDone+0x91c>)
 8013816:	2200      	movs	r2, #0
 8013818:	f883 241c 	strb.w	r2, [r3, #1052]	; 0x41c
                }
            }

            RemoveMacCommands( MacCtx.McpsIndication.RxSlot, macMsgData.FHDR.FCtrl, MacCtx.McpsConfirm.McpsRequest );
 801381c:	4b75      	ldr	r3, [pc, #468]	; (80139f4 <ProcessRadioRxDone+0x91c>)
 801381e:	f893 342d 	ldrb.w	r3, [r3, #1069]	; 0x42d
 8013822:	4a74      	ldr	r2, [pc, #464]	; (80139f4 <ProcessRadioRxDone+0x91c>)
 8013824:	f892 243c 	ldrb.w	r2, [r2, #1084]	; 0x43c
 8013828:	f897 103c 	ldrb.w	r1, [r7, #60]	; 0x3c
 801382c:	4618      	mov	r0, r3
 801382e:	f001 fecd 	bl	80155cc <RemoveMacCommands>

            switch( fType )
 8013832:	78bb      	ldrb	r3, [r7, #2]
 8013834:	2b03      	cmp	r3, #3
 8013836:	d874      	bhi.n	8013922 <ProcessRadioRxDone+0x84a>
 8013838:	a201      	add	r2, pc, #4	; (adr r2, 8013840 <ProcessRadioRxDone+0x768>)
 801383a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 801383e:	bf00      	nop
 8013840:	08013851 	.word	0x08013851
 8013844:	080138a1 	.word	0x080138a1
 8013848:	080138d7 	.word	0x080138d7
 801384c:	080138fd 	.word	0x080138fd
                    * |    > 0   |   X  |  > 0  |       X      |
                    * +----------+------+-------+--------------+
                    */

                    // Decode MAC commands in FOpts field
                    ProcessMacCommands( macMsgData.FHDR.FOpts, 0, macMsgData.FHDR.FCtrl.Bits.FOptsLen, snr, MacCtx.McpsIndication.RxSlot );
 8013850:	f897 303c 	ldrb.w	r3, [r7, #60]	; 0x3c
 8013854:	f3c3 0303 	ubfx	r3, r3, #0, #4
 8013858:	b2db      	uxtb	r3, r3
 801385a:	461c      	mov	r4, r3
 801385c:	4b65      	ldr	r3, [pc, #404]	; (80139f4 <ProcessRadioRxDone+0x91c>)
 801385e:	f893 342d 	ldrb.w	r3, [r3, #1069]	; 0x42d
 8013862:	f997 1077 	ldrsb.w	r1, [r7, #119]	; 0x77
 8013866:	f107 0230 	add.w	r2, r7, #48	; 0x30
 801386a:	f102 0010 	add.w	r0, r2, #16
 801386e:	9300      	str	r3, [sp, #0]
 8013870:	460b      	mov	r3, r1
 8013872:	4622      	mov	r2, r4
 8013874:	2100      	movs	r1, #0
 8013876:	f000 fe2b 	bl	80144d0 <ProcessMacCommands>
                    MacCtx.McpsIndication.Port = macMsgData.FPort;
 801387a:	f897 2050 	ldrb.w	r2, [r7, #80]	; 0x50
 801387e:	4b5d      	ldr	r3, [pc, #372]	; (80139f4 <ProcessRadioRxDone+0x91c>)
 8013880:	f883 241f 	strb.w	r2, [r3, #1055]	; 0x41f
                    MacCtx.McpsIndication.Buffer = macMsgData.FRMPayload;
 8013884:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8013886:	4a5b      	ldr	r2, [pc, #364]	; (80139f4 <ProcessRadioRxDone+0x91c>)
 8013888:	f8c2 3424 	str.w	r3, [r2, #1060]	; 0x424
                    MacCtx.McpsIndication.BufferSize = macMsgData.FRMPayloadSize;
 801388c:	f897 2058 	ldrb.w	r2, [r7, #88]	; 0x58
 8013890:	4b58      	ldr	r3, [pc, #352]	; (80139f4 <ProcessRadioRxDone+0x91c>)
 8013892:	f883 2428 	strb.w	r2, [r3, #1064]	; 0x428
                    MacCtx.McpsIndication.RxData = true;
 8013896:	4b57      	ldr	r3, [pc, #348]	; (80139f4 <ProcessRadioRxDone+0x91c>)
 8013898:	2201      	movs	r2, #1
 801389a:	f883 2429 	strb.w	r2, [r3, #1065]	; 0x429
                    break;
 801389e:	e047      	b.n	8013930 <ProcessRadioRxDone+0x858>
                    * |    > 0   |   X  |   -   |       -      |
                    * +----------+------+-------+--------------+
                    */

                    // Decode MAC commands in FOpts field
                    ProcessMacCommands( macMsgData.FHDR.FOpts, 0, macMsgData.FHDR.FCtrl.Bits.FOptsLen, snr, MacCtx.McpsIndication.RxSlot );
 80138a0:	f897 303c 	ldrb.w	r3, [r7, #60]	; 0x3c
 80138a4:	f3c3 0303 	ubfx	r3, r3, #0, #4
 80138a8:	b2db      	uxtb	r3, r3
 80138aa:	461c      	mov	r4, r3
 80138ac:	4b51      	ldr	r3, [pc, #324]	; (80139f4 <ProcessRadioRxDone+0x91c>)
 80138ae:	f893 342d 	ldrb.w	r3, [r3, #1069]	; 0x42d
 80138b2:	f997 1077 	ldrsb.w	r1, [r7, #119]	; 0x77
 80138b6:	f107 0230 	add.w	r2, r7, #48	; 0x30
 80138ba:	f102 0010 	add.w	r0, r2, #16
 80138be:	9300      	str	r3, [sp, #0]
 80138c0:	460b      	mov	r3, r1
 80138c2:	4622      	mov	r2, r4
 80138c4:	2100      	movs	r1, #0
 80138c6:	f000 fe03 	bl	80144d0 <ProcessMacCommands>
                    MacCtx.McpsIndication.Port = macMsgData.FPort;
 80138ca:	f897 2050 	ldrb.w	r2, [r7, #80]	; 0x50
 80138ce:	4b49      	ldr	r3, [pc, #292]	; (80139f4 <ProcessRadioRxDone+0x91c>)
 80138d0:	f883 241f 	strb.w	r2, [r3, #1055]	; 0x41f
                    break;
 80138d4:	e02c      	b.n	8013930 <ProcessRadioRxDone+0x858>
                    * |    = 0   |   -  |  = 0  | MAC commands |
                    * +----------+------+-------+--------------+
                    */

                    // Decode MAC commands in FRMPayload
                    ProcessMacCommands( macMsgData.FRMPayload, 0, macMsgData.FRMPayloadSize, snr, MacCtx.McpsIndication.RxSlot );
 80138d6:	6d78      	ldr	r0, [r7, #84]	; 0x54
 80138d8:	f897 2058 	ldrb.w	r2, [r7, #88]	; 0x58
 80138dc:	4b45      	ldr	r3, [pc, #276]	; (80139f4 <ProcessRadioRxDone+0x91c>)
 80138de:	f893 342d 	ldrb.w	r3, [r3, #1069]	; 0x42d
 80138e2:	f997 1077 	ldrsb.w	r1, [r7, #119]	; 0x77
 80138e6:	9300      	str	r3, [sp, #0]
 80138e8:	460b      	mov	r3, r1
 80138ea:	2100      	movs	r1, #0
 80138ec:	f000 fdf0 	bl	80144d0 <ProcessMacCommands>
                    MacCtx.McpsIndication.Port = macMsgData.FPort;
 80138f0:	f897 2050 	ldrb.w	r2, [r7, #80]	; 0x50
 80138f4:	4b3f      	ldr	r3, [pc, #252]	; (80139f4 <ProcessRadioRxDone+0x91c>)
 80138f6:	f883 241f 	strb.w	r2, [r3, #1055]	; 0x41f
                    break;
 80138fa:	e019      	b.n	8013930 <ProcessRadioRxDone+0x858>
                    * |    = 0   |   -  |  > 0  |       X      |
                    * +----------+------+-------+--------------+
                    */

                    // No MAC commands just application payload
                    MacCtx.McpsIndication.Port = macMsgData.FPort;
 80138fc:	f897 2050 	ldrb.w	r2, [r7, #80]	; 0x50
 8013900:	4b3c      	ldr	r3, [pc, #240]	; (80139f4 <ProcessRadioRxDone+0x91c>)
 8013902:	f883 241f 	strb.w	r2, [r3, #1055]	; 0x41f
                    MacCtx.McpsIndication.Buffer = macMsgData.FRMPayload;
 8013906:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8013908:	4a3a      	ldr	r2, [pc, #232]	; (80139f4 <ProcessRadioRxDone+0x91c>)
 801390a:	f8c2 3424 	str.w	r3, [r2, #1060]	; 0x424
                    MacCtx.McpsIndication.BufferSize = macMsgData.FRMPayloadSize;
 801390e:	f897 2058 	ldrb.w	r2, [r7, #88]	; 0x58
 8013912:	4b38      	ldr	r3, [pc, #224]	; (80139f4 <ProcessRadioRxDone+0x91c>)
 8013914:	f883 2428 	strb.w	r2, [r3, #1064]	; 0x428
                    MacCtx.McpsIndication.RxData = true;
 8013918:	4b36      	ldr	r3, [pc, #216]	; (80139f4 <ProcessRadioRxDone+0x91c>)
 801391a:	2201      	movs	r2, #1
 801391c:	f883 2429 	strb.w	r2, [r3, #1065]	; 0x429
                    break;
 8013920:	e006      	b.n	8013930 <ProcessRadioRxDone+0x858>
                }
                default:
                    MacCtx.McpsIndication.Status = LORAMAC_EVENT_INFO_STATUS_ERROR;
 8013922:	4b34      	ldr	r3, [pc, #208]	; (80139f4 <ProcessRadioRxDone+0x91c>)
 8013924:	2201      	movs	r2, #1
 8013926:	f883 241d 	strb.w	r2, [r3, #1053]	; 0x41d
                    PrepareRxDoneAbort( );
 801392a:	f7ff fbaf 	bl	801308c <PrepareRxDoneAbort>
                    break;
 801392e:	bf00      	nop
            }

            // Provide always an indication, skip the callback to the user application,
            // in case of a confirmed downlink retransmission.
            MacCtx.MacFlags.Bits.McpsInd = 1;
 8013930:	4a30      	ldr	r2, [pc, #192]	; (80139f4 <ProcessRadioRxDone+0x91c>)
 8013932:	f892 3481 	ldrb.w	r3, [r2, #1153]	; 0x481
 8013936:	f043 0302 	orr.w	r3, r3, #2
 801393a:	f882 3481 	strb.w	r3, [r2, #1153]	; 0x481

            break;
 801393e:	e034      	b.n	80139aa <ProcessRadioRxDone+0x8d2>
        case FRAME_TYPE_PROPRIETARY:
            memcpy1( MacCtx.RxPayload, &payload[pktHeaderLen], size - pktHeaderLen );
 8013940:	f897 3076 	ldrb.w	r3, [r7, #118]	; 0x76
 8013944:	6ffa      	ldr	r2, [r7, #124]	; 0x7c
 8013946:	18d1      	adds	r1, r2, r3
 8013948:	f897 3076 	ldrb.w	r3, [r7, #118]	; 0x76
 801394c:	b29b      	uxth	r3, r3
 801394e:	f8b7 207a 	ldrh.w	r2, [r7, #122]	; 0x7a
 8013952:	1ad3      	subs	r3, r2, r3
 8013954:	b29b      	uxth	r3, r3
 8013956:	461a      	mov	r2, r3
 8013958:	4827      	ldr	r0, [pc, #156]	; (80139f8 <ProcessRadioRxDone+0x920>)
 801395a:	f009 fe66 	bl	801d62a <memcpy1>

            MacCtx.McpsIndication.McpsIndication = MCPS_PROPRIETARY;
 801395e:	4b25      	ldr	r3, [pc, #148]	; (80139f4 <ProcessRadioRxDone+0x91c>)
 8013960:	2203      	movs	r2, #3
 8013962:	f883 241c 	strb.w	r2, [r3, #1052]	; 0x41c
            MacCtx.McpsIndication.Status = LORAMAC_EVENT_INFO_STATUS_OK;
 8013966:	4b23      	ldr	r3, [pc, #140]	; (80139f4 <ProcessRadioRxDone+0x91c>)
 8013968:	2200      	movs	r2, #0
 801396a:	f883 241d 	strb.w	r2, [r3, #1053]	; 0x41d
            MacCtx.McpsIndication.Buffer = MacCtx.RxPayload;
 801396e:	4b21      	ldr	r3, [pc, #132]	; (80139f4 <ProcessRadioRxDone+0x91c>)
 8013970:	4a21      	ldr	r2, [pc, #132]	; (80139f8 <ProcessRadioRxDone+0x920>)
 8013972:	f8c3 2424 	str.w	r2, [r3, #1060]	; 0x424
            MacCtx.McpsIndication.BufferSize = size - pktHeaderLen;
 8013976:	f8b7 307a 	ldrh.w	r3, [r7, #122]	; 0x7a
 801397a:	b2da      	uxtb	r2, r3
 801397c:	f897 3076 	ldrb.w	r3, [r7, #118]	; 0x76
 8013980:	1ad3      	subs	r3, r2, r3
 8013982:	b2da      	uxtb	r2, r3
 8013984:	4b1b      	ldr	r3, [pc, #108]	; (80139f4 <ProcessRadioRxDone+0x91c>)
 8013986:	f883 2428 	strb.w	r2, [r3, #1064]	; 0x428

            MacCtx.MacFlags.Bits.McpsInd = 1;
 801398a:	4a1a      	ldr	r2, [pc, #104]	; (80139f4 <ProcessRadioRxDone+0x91c>)
 801398c:	f892 3481 	ldrb.w	r3, [r2, #1153]	; 0x481
 8013990:	f043 0302 	orr.w	r3, r3, #2
 8013994:	f882 3481 	strb.w	r3, [r2, #1153]	; 0x481
            break;
 8013998:	e007      	b.n	80139aa <ProcessRadioRxDone+0x8d2>
        default:
            MacCtx.McpsIndication.Status = LORAMAC_EVENT_INFO_STATUS_ERROR;
 801399a:	4b16      	ldr	r3, [pc, #88]	; (80139f4 <ProcessRadioRxDone+0x91c>)
 801399c:	2201      	movs	r2, #1
 801399e:	f883 241d 	strb.w	r2, [r3, #1053]	; 0x41d
            PrepareRxDoneAbort( );
 80139a2:	f7ff fb73 	bl	801308c <PrepareRxDoneAbort>
            break;
 80139a6:	e000      	b.n	80139aa <ProcessRadioRxDone+0x8d2>
            break;
 80139a8:	bf00      	nop
    }

    // Verify if we need to disable the AckTimeoutTimer
    if( MacCtx.NodeAckRequested == true )
 80139aa:	4b12      	ldr	r3, [pc, #72]	; (80139f4 <ProcessRadioRxDone+0x91c>)
 80139ac:	f893 3414 	ldrb.w	r3, [r3, #1044]	; 0x414
 80139b0:	2b00      	cmp	r3, #0
 80139b2:	d008      	beq.n	80139c6 <ProcessRadioRxDone+0x8ee>
    {
        if( MacCtx.McpsConfirm.AckReceived == true )
 80139b4:	4b0f      	ldr	r3, [pc, #60]	; (80139f4 <ProcessRadioRxDone+0x91c>)
 80139b6:	f893 3440 	ldrb.w	r3, [r3, #1088]	; 0x440
 80139ba:	2b00      	cmp	r3, #0
 80139bc:	d00d      	beq.n	80139da <ProcessRadioRxDone+0x902>
        {
            OnAckTimeoutTimerEvent( NULL );
 80139be:	2000      	movs	r0, #0
 80139c0:	f000 fbbc 	bl	801413c <OnAckTimeoutTimerEvent>
 80139c4:	e009      	b.n	80139da <ProcessRadioRxDone+0x902>
        }
    }
    else
    {
        if( MacCtx.NvmCtx->DeviceClass == CLASS_C )
 80139c6:	4b0b      	ldr	r3, [pc, #44]	; (80139f4 <ProcessRadioRxDone+0x91c>)
 80139c8:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 80139cc:	f893 307c 	ldrb.w	r3, [r3, #124]	; 0x7c
 80139d0:	2b02      	cmp	r3, #2
 80139d2:	d102      	bne.n	80139da <ProcessRadioRxDone+0x902>
        {
            OnAckTimeoutTimerEvent( NULL );
 80139d4:	2000      	movs	r0, #0
 80139d6:	f000 fbb1 	bl	801413c <OnAckTimeoutTimerEvent>
        }
    }
    MacCtx.MacFlags.Bits.MacDone = 1;
 80139da:	4a06      	ldr	r2, [pc, #24]	; (80139f4 <ProcessRadioRxDone+0x91c>)
 80139dc:	f892 3481 	ldrb.w	r3, [r2, #1153]	; 0x481
 80139e0:	f043 0320 	orr.w	r3, r3, #32
 80139e4:	f882 3481 	strb.w	r3, [r2, #1153]	; 0x481

    UpdateRxSlotIdleState( );
 80139e8:	f7ff fa92 	bl	8012f10 <UpdateRxSlotIdleState>
}
 80139ec:	3788      	adds	r7, #136	; 0x88
 80139ee:	46bd      	mov	sp, r7
 80139f0:	bdb0      	pop	{r4, r5, r7, pc}
 80139f2:	bf00      	nop
 80139f4:	20000be0 	.word	0x20000be0
 80139f8:	20000e18 	.word	0x20000e18

080139fc <ProcessRadioTxTimeout>:

static void ProcessRadioTxTimeout( void )
{
 80139fc:	b580      	push	{r7, lr}
 80139fe:	af00      	add	r7, sp, #0
    if( MacCtx.NvmCtx->DeviceClass != CLASS_C )
 8013a00:	4b12      	ldr	r3, [pc, #72]	; (8013a4c <ProcessRadioTxTimeout+0x50>)
 8013a02:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8013a06:	f893 307c 	ldrb.w	r3, [r3, #124]	; 0x7c
 8013a0a:	2b02      	cmp	r3, #2
 8013a0c:	d002      	beq.n	8013a14 <ProcessRadioTxTimeout+0x18>
    {
        Radio.Sleep( );
 8013a0e:	4b10      	ldr	r3, [pc, #64]	; (8013a50 <ProcessRadioTxTimeout+0x54>)
 8013a10:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013a12:	4798      	blx	r3
    }
    UpdateRxSlotIdleState( );
 8013a14:	f7ff fa7c 	bl	8012f10 <UpdateRxSlotIdleState>

    MacCtx.McpsConfirm.Status = LORAMAC_EVENT_INFO_STATUS_TX_TIMEOUT;
 8013a18:	4b0c      	ldr	r3, [pc, #48]	; (8013a4c <ProcessRadioTxTimeout+0x50>)
 8013a1a:	2202      	movs	r2, #2
 8013a1c:	f883 243d 	strb.w	r2, [r3, #1085]	; 0x43d
    LoRaMacConfirmQueueSetStatusCmn( LORAMAC_EVENT_INFO_STATUS_TX_TIMEOUT );
 8013a20:	2002      	movs	r0, #2
 8013a22:	f004 fe3b 	bl	801869c <LoRaMacConfirmQueueSetStatusCmn>
    if( MacCtx.NodeAckRequested == true )
 8013a26:	4b09      	ldr	r3, [pc, #36]	; (8013a4c <ProcessRadioTxTimeout+0x50>)
 8013a28:	f893 3414 	ldrb.w	r3, [r3, #1044]	; 0x414
 8013a2c:	2b00      	cmp	r3, #0
 8013a2e:	d003      	beq.n	8013a38 <ProcessRadioTxTimeout+0x3c>
    {
        MacCtx.AckTimeoutRetry = true;
 8013a30:	4b06      	ldr	r3, [pc, #24]	; (8013a4c <ProcessRadioTxTimeout+0x50>)
 8013a32:	2201      	movs	r2, #1
 8013a34:	f883 2413 	strb.w	r2, [r3, #1043]	; 0x413
    }
    MacCtx.MacFlags.Bits.MacDone = 1;
 8013a38:	4a04      	ldr	r2, [pc, #16]	; (8013a4c <ProcessRadioTxTimeout+0x50>)
 8013a3a:	f892 3481 	ldrb.w	r3, [r2, #1153]	; 0x481
 8013a3e:	f043 0320 	orr.w	r3, r3, #32
 8013a42:	f882 3481 	strb.w	r3, [r2, #1153]	; 0x481
}
 8013a46:	bf00      	nop
 8013a48:	bd80      	pop	{r7, pc}
 8013a4a:	bf00      	nop
 8013a4c:	20000be0 	.word	0x20000be0
 8013a50:	0802683c 	.word	0x0802683c

08013a54 <HandleRadioRxErrorTimeout>:

static void HandleRadioRxErrorTimeout( LoRaMacEventInfoStatus_t rx1EventInfoStatus, LoRaMacEventInfoStatus_t rx2EventInfoStatus )
{
 8013a54:	b580      	push	{r7, lr}
 8013a56:	b084      	sub	sp, #16
 8013a58:	af00      	add	r7, sp, #0
 8013a5a:	4603      	mov	r3, r0
 8013a5c:	460a      	mov	r2, r1
 8013a5e:	71fb      	strb	r3, [r7, #7]
 8013a60:	4613      	mov	r3, r2
 8013a62:	71bb      	strb	r3, [r7, #6]
    bool classBRx = false;
 8013a64:	2300      	movs	r3, #0
 8013a66:	73fb      	strb	r3, [r7, #15]

    if( MacCtx.NvmCtx->DeviceClass != CLASS_C )
 8013a68:	4b44      	ldr	r3, [pc, #272]	; (8013b7c <HandleRadioRxErrorTimeout+0x128>)
 8013a6a:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8013a6e:	f893 307c 	ldrb.w	r3, [r3, #124]	; 0x7c
 8013a72:	2b02      	cmp	r3, #2
 8013a74:	d002      	beq.n	8013a7c <HandleRadioRxErrorTimeout+0x28>
    {
        Radio.Sleep( );
 8013a76:	4b42      	ldr	r3, [pc, #264]	; (8013b80 <HandleRadioRxErrorTimeout+0x12c>)
 8013a78:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013a7a:	4798      	blx	r3
    }

    if( LoRaMacClassBIsBeaconExpected( ) == true )
 8013a7c:	f004 f8f8 	bl	8017c70 <LoRaMacClassBIsBeaconExpected>
 8013a80:	4603      	mov	r3, r0
 8013a82:	2b00      	cmp	r3, #0
 8013a84:	d007      	beq.n	8013a96 <HandleRadioRxErrorTimeout+0x42>
    {
        LoRaMacClassBSetBeaconState( BEACON_STATE_TIMEOUT );
 8013a86:	2002      	movs	r0, #2
 8013a88:	f004 f8a6 	bl	8017bd8 <LoRaMacClassBSetBeaconState>
        LoRaMacClassBBeaconTimerEvent( NULL );
 8013a8c:	2000      	movs	r0, #0
 8013a8e:	f004 f8c8 	bl	8017c22 <LoRaMacClassBBeaconTimerEvent>
        classBRx = true;
 8013a92:	2301      	movs	r3, #1
 8013a94:	73fb      	strb	r3, [r7, #15]
    }
    if( MacCtx.NvmCtx->DeviceClass == CLASS_B )
 8013a96:	4b39      	ldr	r3, [pc, #228]	; (8013b7c <HandleRadioRxErrorTimeout+0x128>)
 8013a98:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8013a9c:	f893 307c 	ldrb.w	r3, [r3, #124]	; 0x7c
 8013aa0:	2b01      	cmp	r3, #1
 8013aa2:	d119      	bne.n	8013ad8 <HandleRadioRxErrorTimeout+0x84>
    {
        if( LoRaMacClassBIsPingExpected( ) == true )
 8013aa4:	f004 f8eb 	bl	8017c7e <LoRaMacClassBIsPingExpected>
 8013aa8:	4603      	mov	r3, r0
 8013aaa:	2b00      	cmp	r3, #0
 8013aac:	d007      	beq.n	8013abe <HandleRadioRxErrorTimeout+0x6a>
        {
            LoRaMacClassBSetPingSlotState( PINGSLOT_STATE_CALC_PING_OFFSET );
 8013aae:	2000      	movs	r0, #0
 8013ab0:	f004 f89c 	bl	8017bec <LoRaMacClassBSetPingSlotState>
            LoRaMacClassBPingSlotTimerEvent( NULL );
 8013ab4:	2000      	movs	r0, #0
 8013ab6:	f004 f8bd 	bl	8017c34 <LoRaMacClassBPingSlotTimerEvent>
            classBRx = true;
 8013aba:	2301      	movs	r3, #1
 8013abc:	73fb      	strb	r3, [r7, #15]
        }
        if( LoRaMacClassBIsMulticastExpected( ) == true )
 8013abe:	f004 f8e5 	bl	8017c8c <LoRaMacClassBIsMulticastExpected>
 8013ac2:	4603      	mov	r3, r0
 8013ac4:	2b00      	cmp	r3, #0
 8013ac6:	d007      	beq.n	8013ad8 <HandleRadioRxErrorTimeout+0x84>
        {
            LoRaMacClassBSetMulticastSlotState( PINGSLOT_STATE_CALC_PING_OFFSET );
 8013ac8:	2000      	movs	r0, #0
 8013aca:	f004 f899 	bl	8017c00 <LoRaMacClassBSetMulticastSlotState>
            LoRaMacClassBMulticastSlotTimerEvent( NULL );
 8013ace:	2000      	movs	r0, #0
 8013ad0:	f004 f8b9 	bl	8017c46 <LoRaMacClassBMulticastSlotTimerEvent>
            classBRx = true;
 8013ad4:	2301      	movs	r3, #1
 8013ad6:	73fb      	strb	r3, [r7, #15]
        }
    }

    if( classBRx == false )
 8013ad8:	7bfb      	ldrb	r3, [r7, #15]
 8013ada:	f083 0301 	eor.w	r3, r3, #1
 8013ade:	b2db      	uxtb	r3, r3
 8013ae0:	2b00      	cmp	r3, #0
 8013ae2:	d045      	beq.n	8013b70 <HandleRadioRxErrorTimeout+0x11c>
    {
        if( MacCtx.RxSlot == RX_SLOT_WIN_1 )
 8013ae4:	4b25      	ldr	r3, [pc, #148]	; (8013b7c <HandleRadioRxErrorTimeout+0x128>)
 8013ae6:	f893 3480 	ldrb.w	r3, [r3, #1152]	; 0x480
 8013aea:	2b00      	cmp	r3, #0
 8013aec:	d125      	bne.n	8013b3a <HandleRadioRxErrorTimeout+0xe6>
        {
            if( MacCtx.NodeAckRequested == true )
 8013aee:	4b23      	ldr	r3, [pc, #140]	; (8013b7c <HandleRadioRxErrorTimeout+0x128>)
 8013af0:	f893 3414 	ldrb.w	r3, [r3, #1044]	; 0x414
 8013af4:	2b00      	cmp	r3, #0
 8013af6:	d003      	beq.n	8013b00 <HandleRadioRxErrorTimeout+0xac>
            {
                MacCtx.McpsConfirm.Status = rx1EventInfoStatus;
 8013af8:	4a20      	ldr	r2, [pc, #128]	; (8013b7c <HandleRadioRxErrorTimeout+0x128>)
 8013afa:	79fb      	ldrb	r3, [r7, #7]
 8013afc:	f882 343d 	strb.w	r3, [r2, #1085]	; 0x43d
            }
            LoRaMacConfirmQueueSetStatusCmn( rx1EventInfoStatus );
 8013b00:	79fb      	ldrb	r3, [r7, #7]
 8013b02:	4618      	mov	r0, r3
 8013b04:	f004 fdca 	bl	801869c <LoRaMacConfirmQueueSetStatusCmn>

            if( TimerGetElapsedTime( MacCtx.NvmCtx->LastTxDoneTime ) >= MacCtx.RxWindow2Delay )
 8013b08:	4b1c      	ldr	r3, [pc, #112]	; (8013b7c <HandleRadioRxErrorTimeout+0x128>)
 8013b0a:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8013b0e:	f8d3 3150 	ldr.w	r3, [r3, #336]	; 0x150
 8013b12:	4618      	mov	r0, r3
 8013b14:	f00d fc0e 	bl	8021334 <UTIL_TIMER_GetElapsedTime>
 8013b18:	4602      	mov	r2, r0
 8013b1a:	4b18      	ldr	r3, [pc, #96]	; (8013b7c <HandleRadioRxErrorTimeout+0x128>)
 8013b1c:	f8d3 33b4 	ldr.w	r3, [r3, #948]	; 0x3b4
 8013b20:	429a      	cmp	r2, r3
 8013b22:	d325      	bcc.n	8013b70 <HandleRadioRxErrorTimeout+0x11c>
            {
                TimerStop( &MacCtx.RxWindowTimer2 );
 8013b24:	4817      	ldr	r0, [pc, #92]	; (8013b84 <HandleRadioRxErrorTimeout+0x130>)
 8013b26:	f00d fad9 	bl	80210dc <UTIL_TIMER_Stop>
                MacCtx.MacFlags.Bits.MacDone = 1;
 8013b2a:	4a14      	ldr	r2, [pc, #80]	; (8013b7c <HandleRadioRxErrorTimeout+0x128>)
 8013b2c:	f892 3481 	ldrb.w	r3, [r2, #1153]	; 0x481
 8013b30:	f043 0320 	orr.w	r3, r3, #32
 8013b34:	f882 3481 	strb.w	r3, [r2, #1153]	; 0x481
 8013b38:	e01a      	b.n	8013b70 <HandleRadioRxErrorTimeout+0x11c>
            }
        }
        else
        {
            if( MacCtx.NodeAckRequested == true )
 8013b3a:	4b10      	ldr	r3, [pc, #64]	; (8013b7c <HandleRadioRxErrorTimeout+0x128>)
 8013b3c:	f893 3414 	ldrb.w	r3, [r3, #1044]	; 0x414
 8013b40:	2b00      	cmp	r3, #0
 8013b42:	d003      	beq.n	8013b4c <HandleRadioRxErrorTimeout+0xf8>
            {
                MacCtx.McpsConfirm.Status = rx2EventInfoStatus;
 8013b44:	4a0d      	ldr	r2, [pc, #52]	; (8013b7c <HandleRadioRxErrorTimeout+0x128>)
 8013b46:	79bb      	ldrb	r3, [r7, #6]
 8013b48:	f882 343d 	strb.w	r3, [r2, #1085]	; 0x43d
            }
            LoRaMacConfirmQueueSetStatusCmn( rx2EventInfoStatus );
 8013b4c:	79bb      	ldrb	r3, [r7, #6]
 8013b4e:	4618      	mov	r0, r3
 8013b50:	f004 fda4 	bl	801869c <LoRaMacConfirmQueueSetStatusCmn>

            if( MacCtx.NvmCtx->DeviceClass != CLASS_C )
 8013b54:	4b09      	ldr	r3, [pc, #36]	; (8013b7c <HandleRadioRxErrorTimeout+0x128>)
 8013b56:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8013b5a:	f893 307c 	ldrb.w	r3, [r3, #124]	; 0x7c
 8013b5e:	2b02      	cmp	r3, #2
 8013b60:	d006      	beq.n	8013b70 <HandleRadioRxErrorTimeout+0x11c>
            {
                MacCtx.MacFlags.Bits.MacDone = 1;
 8013b62:	4a06      	ldr	r2, [pc, #24]	; (8013b7c <HandleRadioRxErrorTimeout+0x128>)
 8013b64:	f892 3481 	ldrb.w	r3, [r2, #1153]	; 0x481
 8013b68:	f043 0320 	orr.w	r3, r3, #32
 8013b6c:	f882 3481 	strb.w	r3, [r2, #1153]	; 0x481
            }
        }
    }

    UpdateRxSlotIdleState( );
 8013b70:	f7ff f9ce 	bl	8012f10 <UpdateRxSlotIdleState>
}
 8013b74:	bf00      	nop
 8013b76:	3710      	adds	r7, #16
 8013b78:	46bd      	mov	sp, r7
 8013b7a:	bd80      	pop	{r7, pc}
 8013b7c:	20000be0 	.word	0x20000be0
 8013b80:	0802683c 	.word	0x0802683c
 8013b84:	20000f78 	.word	0x20000f78

08013b88 <ProcessRadioRxError>:

static void ProcessRadioRxError( void )
{
 8013b88:	b580      	push	{r7, lr}
 8013b8a:	af00      	add	r7, sp, #0
    HandleRadioRxErrorTimeout( LORAMAC_EVENT_INFO_STATUS_RX1_ERROR, LORAMAC_EVENT_INFO_STATUS_RX2_ERROR );
 8013b8c:	2106      	movs	r1, #6
 8013b8e:	2005      	movs	r0, #5
 8013b90:	f7ff ff60 	bl	8013a54 <HandleRadioRxErrorTimeout>
}
 8013b94:	bf00      	nop
 8013b96:	bd80      	pop	{r7, pc}

08013b98 <ProcessRadioRxTimeout>:

static void ProcessRadioRxTimeout( void )
{
 8013b98:	b580      	push	{r7, lr}
 8013b9a:	af00      	add	r7, sp, #0
    HandleRadioRxErrorTimeout( LORAMAC_EVENT_INFO_STATUS_RX1_TIMEOUT, LORAMAC_EVENT_INFO_STATUS_RX2_TIMEOUT );
 8013b9c:	2104      	movs	r1, #4
 8013b9e:	2003      	movs	r0, #3
 8013ba0:	f7ff ff58 	bl	8013a54 <HandleRadioRxErrorTimeout>
}
 8013ba4:	bf00      	nop
 8013ba6:	bd80      	pop	{r7, pc}

08013ba8 <LoRaMacHandleIrqEvents>:

static void LoRaMacHandleIrqEvents( void )
{
 8013ba8:	b580      	push	{r7, lr}
 8013baa:	b084      	sub	sp, #16
 8013bac:	af00      	add	r7, sp, #0
 */
__STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8013bae:	f3ef 8310 	mrs	r3, PRIMASK
 8013bb2:	607b      	str	r3, [r7, #4]
  return(result);
 8013bb4:	687b      	ldr	r3, [r7, #4]
    LoRaMacRadioEvents_t events;

    CRITICAL_SECTION_BEGIN( );
 8013bb6:	60fb      	str	r3, [r7, #12]
  __ASM volatile ("cpsid i" : : : "memory");
 8013bb8:	b672      	cpsid	i
}
 8013bba:	bf00      	nop
    events = LoRaMacRadioEvents;
 8013bbc:	4b1d      	ldr	r3, [pc, #116]	; (8013c34 <LoRaMacHandleIrqEvents+0x8c>)
 8013bbe:	681b      	ldr	r3, [r3, #0]
 8013bc0:	603b      	str	r3, [r7, #0]
    LoRaMacRadioEvents.Value = 0;
 8013bc2:	4b1c      	ldr	r3, [pc, #112]	; (8013c34 <LoRaMacHandleIrqEvents+0x8c>)
 8013bc4:	2200      	movs	r2, #0
 8013bc6:	601a      	str	r2, [r3, #0]
 8013bc8:	68fb      	ldr	r3, [r7, #12]
 8013bca:	60bb      	str	r3, [r7, #8]
  \details Assigns the given value to the Priority Mask Register.
  \param [in]    priMask  Priority Mask
 */
__STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
{
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 8013bcc:	68bb      	ldr	r3, [r7, #8]
 8013bce:	f383 8810 	msr	PRIMASK, r3
}
 8013bd2:	bf00      	nop
    CRITICAL_SECTION_END( );

    if( events.Value != 0 )
 8013bd4:	683b      	ldr	r3, [r7, #0]
 8013bd6:	2b00      	cmp	r3, #0
 8013bd8:	d027      	beq.n	8013c2a <LoRaMacHandleIrqEvents+0x82>
    {
        if( events.Events.TxDone == 1 )
 8013bda:	783b      	ldrb	r3, [r7, #0]
 8013bdc:	f003 0310 	and.w	r3, r3, #16
 8013be0:	b2db      	uxtb	r3, r3
 8013be2:	2b00      	cmp	r3, #0
 8013be4:	d001      	beq.n	8013bea <LoRaMacHandleIrqEvents+0x42>
        {
            ProcessRadioTxDone( );
 8013be6:	f7ff f9ab 	bl	8012f40 <ProcessRadioTxDone>
        }
        if( events.Events.RxDone == 1 )
 8013bea:	783b      	ldrb	r3, [r7, #0]
 8013bec:	f003 0308 	and.w	r3, r3, #8
 8013bf0:	b2db      	uxtb	r3, r3
 8013bf2:	2b00      	cmp	r3, #0
 8013bf4:	d001      	beq.n	8013bfa <LoRaMacHandleIrqEvents+0x52>
        {
            ProcessRadioRxDone( );
 8013bf6:	f7ff fa6f 	bl	80130d8 <ProcessRadioRxDone>
        }
        if( events.Events.TxTimeout == 1 )
 8013bfa:	783b      	ldrb	r3, [r7, #0]
 8013bfc:	f003 0304 	and.w	r3, r3, #4
 8013c00:	b2db      	uxtb	r3, r3
 8013c02:	2b00      	cmp	r3, #0
 8013c04:	d001      	beq.n	8013c0a <LoRaMacHandleIrqEvents+0x62>
        {
            ProcessRadioTxTimeout( );
 8013c06:	f7ff fef9 	bl	80139fc <ProcessRadioTxTimeout>
        }
        if( events.Events.RxError == 1 )
 8013c0a:	783b      	ldrb	r3, [r7, #0]
 8013c0c:	f003 0302 	and.w	r3, r3, #2
 8013c10:	b2db      	uxtb	r3, r3
 8013c12:	2b00      	cmp	r3, #0
 8013c14:	d001      	beq.n	8013c1a <LoRaMacHandleIrqEvents+0x72>
        {
            ProcessRadioRxError( );
 8013c16:	f7ff ffb7 	bl	8013b88 <ProcessRadioRxError>
        }
        if( events.Events.RxTimeout == 1 )
 8013c1a:	783b      	ldrb	r3, [r7, #0]
 8013c1c:	f003 0301 	and.w	r3, r3, #1
 8013c20:	b2db      	uxtb	r3, r3
 8013c22:	2b00      	cmp	r3, #0
 8013c24:	d001      	beq.n	8013c2a <LoRaMacHandleIrqEvents+0x82>
        {
            ProcessRadioRxTimeout( );
 8013c26:	f7ff ffb7 	bl	8013b98 <ProcessRadioRxTimeout>
        }
    }
}
 8013c2a:	bf00      	nop
 8013c2c:	3710      	adds	r7, #16
 8013c2e:	46bd      	mov	sp, r7
 8013c30:	bd80      	pop	{r7, pc}
 8013c32:	bf00      	nop
 8013c34:	20001210 	.word	0x20001210

08013c38 <LoRaMacEnableRequests>:

static void LoRaMacEnableRequests( LoRaMacRequestHandling_t requestState )
{
 8013c38:	b480      	push	{r7}
 8013c3a:	b083      	sub	sp, #12
 8013c3c:	af00      	add	r7, sp, #0
 8013c3e:	4603      	mov	r3, r0
 8013c40:	71fb      	strb	r3, [r7, #7]
    MacCtx.AllowRequests = requestState;
 8013c42:	4a04      	ldr	r2, [pc, #16]	; (8013c54 <LoRaMacEnableRequests+0x1c>)
 8013c44:	79fb      	ldrb	r3, [r7, #7]
 8013c46:	f882 3482 	strb.w	r3, [r2, #1154]	; 0x482
}
 8013c4a:	bf00      	nop
 8013c4c:	370c      	adds	r7, #12
 8013c4e:	46bd      	mov	sp, r7
 8013c50:	bc80      	pop	{r7}
 8013c52:	4770      	bx	lr
 8013c54:	20000be0 	.word	0x20000be0

08013c58 <LoRaMacHandleRequestEvents>:

static void LoRaMacHandleRequestEvents( void )
{
 8013c58:	b580      	push	{r7, lr}
 8013c5a:	b082      	sub	sp, #8
 8013c5c:	af00      	add	r7, sp, #0
    // Handle events
    LoRaMacFlags_t reqEvents = MacCtx.MacFlags;
 8013c5e:	4b2c      	ldr	r3, [pc, #176]	; (8013d10 <LoRaMacHandleRequestEvents+0xb8>)
 8013c60:	f893 3481 	ldrb.w	r3, [r3, #1153]	; 0x481
 8013c64:	713b      	strb	r3, [r7, #4]

    if( MacCtx.MacState == LORAMAC_IDLE )
 8013c66:	4b2a      	ldr	r3, [pc, #168]	; (8013d10 <LoRaMacHandleRequestEvents+0xb8>)
 8013c68:	f8d3 3340 	ldr.w	r3, [r3, #832]	; 0x340
 8013c6c:	2b00      	cmp	r3, #0
 8013c6e:	d14a      	bne.n	8013d06 <LoRaMacHandleRequestEvents+0xae>
    {
        // Update event bits
        if( MacCtx.MacFlags.Bits.McpsReq == 1 )
 8013c70:	4b27      	ldr	r3, [pc, #156]	; (8013d10 <LoRaMacHandleRequestEvents+0xb8>)
 8013c72:	f893 3481 	ldrb.w	r3, [r3, #1153]	; 0x481
 8013c76:	f003 0301 	and.w	r3, r3, #1
 8013c7a:	b2db      	uxtb	r3, r3
 8013c7c:	2b00      	cmp	r3, #0
 8013c7e:	d006      	beq.n	8013c8e <LoRaMacHandleRequestEvents+0x36>
        {
            MacCtx.MacFlags.Bits.McpsReq = 0;
 8013c80:	4a23      	ldr	r2, [pc, #140]	; (8013d10 <LoRaMacHandleRequestEvents+0xb8>)
 8013c82:	f892 3481 	ldrb.w	r3, [r2, #1153]	; 0x481
 8013c86:	f36f 0300 	bfc	r3, #0, #1
 8013c8a:	f882 3481 	strb.w	r3, [r2, #1153]	; 0x481
        }

        if( MacCtx.MacFlags.Bits.MlmeReq == 1 )
 8013c8e:	4b20      	ldr	r3, [pc, #128]	; (8013d10 <LoRaMacHandleRequestEvents+0xb8>)
 8013c90:	f893 3481 	ldrb.w	r3, [r3, #1153]	; 0x481
 8013c94:	f003 0304 	and.w	r3, r3, #4
 8013c98:	b2db      	uxtb	r3, r3
 8013c9a:	2b00      	cmp	r3, #0
 8013c9c:	d006      	beq.n	8013cac <LoRaMacHandleRequestEvents+0x54>
        {
            MacCtx.MacFlags.Bits.MlmeReq = 0;
 8013c9e:	4a1c      	ldr	r2, [pc, #112]	; (8013d10 <LoRaMacHandleRequestEvents+0xb8>)
 8013ca0:	f892 3481 	ldrb.w	r3, [r2, #1153]	; 0x481
 8013ca4:	f36f 0382 	bfc	r3, #2, #1
 8013ca8:	f882 3481 	strb.w	r3, [r2, #1153]	; 0x481
        }

        // Allow requests again
        LoRaMacEnableRequests( LORAMAC_REQUEST_HANDLING_ON );
 8013cac:	2001      	movs	r0, #1
 8013cae:	f7ff ffc3 	bl	8013c38 <LoRaMacEnableRequests>

        // Handle callbacks
        if( reqEvents.Bits.McpsReq == 1 )
 8013cb2:	793b      	ldrb	r3, [r7, #4]
 8013cb4:	f003 0301 	and.w	r3, r3, #1
 8013cb8:	b2db      	uxtb	r3, r3
 8013cba:	2b00      	cmp	r3, #0
 8013cbc:	d005      	beq.n	8013cca <LoRaMacHandleRequestEvents+0x72>
        {
            MacCtx.MacPrimitives->MacMcpsConfirm( &MacCtx.McpsConfirm );
 8013cbe:	4b14      	ldr	r3, [pc, #80]	; (8013d10 <LoRaMacHandleRequestEvents+0xb8>)
 8013cc0:	f8d3 3344 	ldr.w	r3, [r3, #836]	; 0x344
 8013cc4:	681b      	ldr	r3, [r3, #0]
 8013cc6:	4813      	ldr	r0, [pc, #76]	; (8013d14 <LoRaMacHandleRequestEvents+0xbc>)
 8013cc8:	4798      	blx	r3
        }

        if( reqEvents.Bits.MlmeReq == 1 )
 8013cca:	793b      	ldrb	r3, [r7, #4]
 8013ccc:	f003 0304 	and.w	r3, r3, #4
 8013cd0:	b2db      	uxtb	r3, r3
 8013cd2:	2b00      	cmp	r3, #0
 8013cd4:	d00e      	beq.n	8013cf4 <LoRaMacHandleRequestEvents+0x9c>
        {
            LoRaMacConfirmQueueHandleCb( &MacCtx.MlmeConfirm );
 8013cd6:	4810      	ldr	r0, [pc, #64]	; (8013d18 <LoRaMacHandleRequestEvents+0xc0>)
 8013cd8:	f004 fd2e 	bl	8018738 <LoRaMacConfirmQueueHandleCb>
            if( LoRaMacConfirmQueueGetCnt( ) > 0 )
 8013cdc:	f004 fd78 	bl	80187d0 <LoRaMacConfirmQueueGetCnt>
 8013ce0:	4603      	mov	r3, r0
 8013ce2:	2b00      	cmp	r3, #0
 8013ce4:	d006      	beq.n	8013cf4 <LoRaMacHandleRequestEvents+0x9c>
            {
                MacCtx.MacFlags.Bits.MlmeReq = 1;
 8013ce6:	4a0a      	ldr	r2, [pc, #40]	; (8013d10 <LoRaMacHandleRequestEvents+0xb8>)
 8013ce8:	f892 3481 	ldrb.w	r3, [r2, #1153]	; 0x481
 8013cec:	f043 0304 	orr.w	r3, r3, #4
 8013cf0:	f882 3481 	strb.w	r3, [r2, #1153]	; 0x481
            }
        }

        // Start beaconing again
        LoRaMacClassBResumeBeaconing( );
 8013cf4:	f003 ffe8 	bl	8017cc8 <LoRaMacClassBResumeBeaconing>

        // Procedure done. Reset variables.
        MacCtx.MacFlags.Bits.MacDone = 0;
 8013cf8:	4a05      	ldr	r2, [pc, #20]	; (8013d10 <LoRaMacHandleRequestEvents+0xb8>)
 8013cfa:	f892 3481 	ldrb.w	r3, [r2, #1153]	; 0x481
 8013cfe:	f36f 1345 	bfc	r3, #5, #1
 8013d02:	f882 3481 	strb.w	r3, [r2, #1153]	; 0x481
    }
}
 8013d06:	bf00      	nop
 8013d08:	3708      	adds	r7, #8
 8013d0a:	46bd      	mov	sp, r7
 8013d0c:	bd80      	pop	{r7, pc}
 8013d0e:	bf00      	nop
 8013d10:	20000be0 	.word	0x20000be0
 8013d14:	2000101c 	.word	0x2000101c
 8013d18:	20001030 	.word	0x20001030

08013d1c <LoRaMacHandleScheduleUplinkEvent>:

static void LoRaMacHandleScheduleUplinkEvent( void )
{
 8013d1c:	b580      	push	{r7, lr}
 8013d1e:	b082      	sub	sp, #8
 8013d20:	af00      	add	r7, sp, #0
    // Handle events
    if( MacCtx.MacState == LORAMAC_IDLE )
 8013d22:	4b0a      	ldr	r3, [pc, #40]	; (8013d4c <LoRaMacHandleScheduleUplinkEvent+0x30>)
 8013d24:	f8d3 3340 	ldr.w	r3, [r3, #832]	; 0x340
 8013d28:	2b00      	cmp	r3, #0
 8013d2a:	d10a      	bne.n	8013d42 <LoRaMacHandleScheduleUplinkEvent+0x26>
    {
        // Verify if sticky MAC commands are pending or not
        bool isStickyMacCommandPending = false;
 8013d2c:	2300      	movs	r3, #0
 8013d2e:	71fb      	strb	r3, [r7, #7]
        LoRaMacCommandsStickyCmdsPending( &isStickyMacCommandPending );
 8013d30:	1dfb      	adds	r3, r7, #7
 8013d32:	4618      	mov	r0, r3
 8013d34:	f004 fab4 	bl	80182a0 <LoRaMacCommandsStickyCmdsPending>
        if( isStickyMacCommandPending == true )
 8013d38:	79fb      	ldrb	r3, [r7, #7]
 8013d3a:	2b00      	cmp	r3, #0
 8013d3c:	d001      	beq.n	8013d42 <LoRaMacHandleScheduleUplinkEvent+0x26>
        {// Setup MLME indication
            SetMlmeScheduleUplinkIndication( );
 8013d3e:	f000 fbb7 	bl	80144b0 <SetMlmeScheduleUplinkIndication>
        }
    }
}
 8013d42:	bf00      	nop
 8013d44:	3708      	adds	r7, #8
 8013d46:	46bd      	mov	sp, r7
 8013d48:	bd80      	pop	{r7, pc}
 8013d4a:	bf00      	nop
 8013d4c:	20000be0 	.word	0x20000be0

08013d50 <LoRaMacHandleIndicationEvents>:

static void LoRaMacHandleIndicationEvents( void )
{
 8013d50:	b580      	push	{r7, lr}
 8013d52:	b088      	sub	sp, #32
 8013d54:	af00      	add	r7, sp, #0
    // Handle MLME indication
    if( MacCtx.MacFlags.Bits.MlmeInd == 1 )
 8013d56:	4b24      	ldr	r3, [pc, #144]	; (8013de8 <LoRaMacHandleIndicationEvents+0x98>)
 8013d58:	f893 3481 	ldrb.w	r3, [r3, #1153]	; 0x481
 8013d5c:	f003 0308 	and.w	r3, r3, #8
 8013d60:	b2db      	uxtb	r3, r3
 8013d62:	2b00      	cmp	r3, #0
 8013d64:	d00c      	beq.n	8013d80 <LoRaMacHandleIndicationEvents+0x30>
    {
        MacCtx.MacFlags.Bits.MlmeInd = 0;
 8013d66:	4a20      	ldr	r2, [pc, #128]	; (8013de8 <LoRaMacHandleIndicationEvents+0x98>)
 8013d68:	f892 3481 	ldrb.w	r3, [r2, #1153]	; 0x481
 8013d6c:	f36f 03c3 	bfc	r3, #3, #1
 8013d70:	f882 3481 	strb.w	r3, [r2, #1153]	; 0x481
        MacCtx.MacPrimitives->MacMlmeIndication( &MacCtx.MlmeIndication );
 8013d74:	4b1c      	ldr	r3, [pc, #112]	; (8013de8 <LoRaMacHandleIndicationEvents+0x98>)
 8013d76:	f8d3 3344 	ldr.w	r3, [r3, #836]	; 0x344
 8013d7a:	68db      	ldr	r3, [r3, #12]
 8013d7c:	481b      	ldr	r0, [pc, #108]	; (8013dec <LoRaMacHandleIndicationEvents+0x9c>)
 8013d7e:	4798      	blx	r3
    }

    if( MacCtx.MacFlags.Bits.MlmeSchedUplinkInd == 1 )
 8013d80:	4b19      	ldr	r3, [pc, #100]	; (8013de8 <LoRaMacHandleIndicationEvents+0x98>)
 8013d82:	f893 3481 	ldrb.w	r3, [r3, #1153]	; 0x481
 8013d86:	f003 0310 	and.w	r3, r3, #16
 8013d8a:	b2db      	uxtb	r3, r3
 8013d8c:	2b00      	cmp	r3, #0
 8013d8e:	d011      	beq.n	8013db4 <LoRaMacHandleIndicationEvents+0x64>
    {
        MlmeIndication_t schduleUplinkIndication;
        schduleUplinkIndication.MlmeIndication = MLME_SCHEDULE_UPLINK;
 8013d90:	2307      	movs	r3, #7
 8013d92:	713b      	strb	r3, [r7, #4]
        schduleUplinkIndication.Status = LORAMAC_EVENT_INFO_STATUS_OK;
 8013d94:	2300      	movs	r3, #0
 8013d96:	717b      	strb	r3, [r7, #5]

        MacCtx.MacPrimitives->MacMlmeIndication( &schduleUplinkIndication );
 8013d98:	4b13      	ldr	r3, [pc, #76]	; (8013de8 <LoRaMacHandleIndicationEvents+0x98>)
 8013d9a:	f8d3 3344 	ldr.w	r3, [r3, #836]	; 0x344
 8013d9e:	68db      	ldr	r3, [r3, #12]
 8013da0:	1d3a      	adds	r2, r7, #4
 8013da2:	4610      	mov	r0, r2
 8013da4:	4798      	blx	r3
        MacCtx.MacFlags.Bits.MlmeSchedUplinkInd = 0;
 8013da6:	4a10      	ldr	r2, [pc, #64]	; (8013de8 <LoRaMacHandleIndicationEvents+0x98>)
 8013da8:	f892 3481 	ldrb.w	r3, [r2, #1153]	; 0x481
 8013dac:	f36f 1304 	bfc	r3, #4, #1
 8013db0:	f882 3481 	strb.w	r3, [r2, #1153]	; 0x481
    }

    // Handle MCPS indication
    if( MacCtx.MacFlags.Bits.McpsInd == 1 )
 8013db4:	4b0c      	ldr	r3, [pc, #48]	; (8013de8 <LoRaMacHandleIndicationEvents+0x98>)
 8013db6:	f893 3481 	ldrb.w	r3, [r3, #1153]	; 0x481
 8013dba:	f003 0302 	and.w	r3, r3, #2
 8013dbe:	b2db      	uxtb	r3, r3
 8013dc0:	2b00      	cmp	r3, #0
 8013dc2:	d00c      	beq.n	8013dde <LoRaMacHandleIndicationEvents+0x8e>
    {
        MacCtx.MacFlags.Bits.McpsInd = 0;
 8013dc4:	4a08      	ldr	r2, [pc, #32]	; (8013de8 <LoRaMacHandleIndicationEvents+0x98>)
 8013dc6:	f892 3481 	ldrb.w	r3, [r2, #1153]	; 0x481
 8013dca:	f36f 0341 	bfc	r3, #1, #1
 8013dce:	f882 3481 	strb.w	r3, [r2, #1153]	; 0x481
        MacCtx.MacPrimitives->MacMcpsIndication( &MacCtx.McpsIndication );
 8013dd2:	4b05      	ldr	r3, [pc, #20]	; (8013de8 <LoRaMacHandleIndicationEvents+0x98>)
 8013dd4:	f8d3 3344 	ldr.w	r3, [r3, #836]	; 0x344
 8013dd8:	685b      	ldr	r3, [r3, #4]
 8013dda:	4805      	ldr	r0, [pc, #20]	; (8013df0 <LoRaMacHandleIndicationEvents+0xa0>)
 8013ddc:	4798      	blx	r3
    }
}
 8013dde:	bf00      	nop
 8013de0:	3720      	adds	r7, #32
 8013de2:	46bd      	mov	sp, r7
 8013de4:	bd80      	pop	{r7, pc}
 8013de6:	bf00      	nop
 8013de8:	20000be0 	.word	0x20000be0
 8013dec:	20001044 	.word	0x20001044
 8013df0:	20000ffc 	.word	0x20000ffc

08013df4 <LoRaMacHandleMcpsRequest>:

static void LoRaMacHandleMcpsRequest( void )
{
 8013df4:	b580      	push	{r7, lr}
 8013df6:	b082      	sub	sp, #8
 8013df8:	af00      	add	r7, sp, #0
    // Handle MCPS uplinks
    if( MacCtx.MacFlags.Bits.McpsReq == 1 )
 8013dfa:	4b33      	ldr	r3, [pc, #204]	; (8013ec8 <LoRaMacHandleMcpsRequest+0xd4>)
 8013dfc:	f893 3481 	ldrb.w	r3, [r3, #1153]	; 0x481
 8013e00:	f003 0301 	and.w	r3, r3, #1
 8013e04:	b2db      	uxtb	r3, r3
 8013e06:	2b00      	cmp	r3, #0
 8013e08:	d05a      	beq.n	8013ec0 <LoRaMacHandleMcpsRequest+0xcc>
    {
        bool stopRetransmission = false;
 8013e0a:	2300      	movs	r3, #0
 8013e0c:	71fb      	strb	r3, [r7, #7]
        bool waitForRetransmission = false;
 8013e0e:	2300      	movs	r3, #0
 8013e10:	71bb      	strb	r3, [r7, #6]

        if( ( MacCtx.McpsConfirm.McpsRequest == MCPS_UNCONFIRMED ) ||
 8013e12:	4b2d      	ldr	r3, [pc, #180]	; (8013ec8 <LoRaMacHandleMcpsRequest+0xd4>)
 8013e14:	f893 343c 	ldrb.w	r3, [r3, #1084]	; 0x43c
 8013e18:	2b00      	cmp	r3, #0
 8013e1a:	d004      	beq.n	8013e26 <LoRaMacHandleMcpsRequest+0x32>
            ( MacCtx.McpsConfirm.McpsRequest == MCPS_PROPRIETARY ) )
 8013e1c:	4b2a      	ldr	r3, [pc, #168]	; (8013ec8 <LoRaMacHandleMcpsRequest+0xd4>)
 8013e1e:	f893 343c 	ldrb.w	r3, [r3, #1084]	; 0x43c
        if( ( MacCtx.McpsConfirm.McpsRequest == MCPS_UNCONFIRMED ) ||
 8013e22:	2b03      	cmp	r3, #3
 8013e24:	d104      	bne.n	8013e30 <LoRaMacHandleMcpsRequest+0x3c>
        {
            stopRetransmission = CheckRetransUnconfirmedUplink( );
 8013e26:	f002 f8af 	bl	8015f88 <CheckRetransUnconfirmedUplink>
 8013e2a:	4603      	mov	r3, r0
 8013e2c:	71fb      	strb	r3, [r7, #7]
 8013e2e:	e022      	b.n	8013e76 <LoRaMacHandleMcpsRequest+0x82>
        }
        else if( MacCtx.McpsConfirm.McpsRequest == MCPS_CONFIRMED )
 8013e30:	4b25      	ldr	r3, [pc, #148]	; (8013ec8 <LoRaMacHandleMcpsRequest+0xd4>)
 8013e32:	f893 343c 	ldrb.w	r3, [r3, #1084]	; 0x43c
 8013e36:	2b01      	cmp	r3, #1
 8013e38:	d11d      	bne.n	8013e76 <LoRaMacHandleMcpsRequest+0x82>
        {
            if( MacCtx.AckTimeoutRetry == true )
 8013e3a:	4b23      	ldr	r3, [pc, #140]	; (8013ec8 <LoRaMacHandleMcpsRequest+0xd4>)
 8013e3c:	f893 3413 	ldrb.w	r3, [r3, #1043]	; 0x413
 8013e40:	2b00      	cmp	r3, #0
 8013e42:	d016      	beq.n	8013e72 <LoRaMacHandleMcpsRequest+0x7e>
            {
                stopRetransmission = CheckRetransConfirmedUplink( );
 8013e44:	f002 f8ce 	bl	8015fe4 <CheckRetransConfirmedUplink>
 8013e48:	4603      	mov	r3, r0
 8013e4a:	71fb      	strb	r3, [r7, #7]

                if( MacCtx.NvmCtx->Version.Fields.Minor == 0 )
 8013e4c:	4b1e      	ldr	r3, [pc, #120]	; (8013ec8 <LoRaMacHandleMcpsRequest+0xd4>)
 8013e4e:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8013e52:	f893 3162 	ldrb.w	r3, [r3, #354]	; 0x162
 8013e56:	2b00      	cmp	r3, #0
 8013e58:	d10d      	bne.n	8013e76 <LoRaMacHandleMcpsRequest+0x82>
                {
                    if( stopRetransmission == false )
 8013e5a:	79fb      	ldrb	r3, [r7, #7]
 8013e5c:	f083 0301 	eor.w	r3, r3, #1
 8013e60:	b2db      	uxtb	r3, r3
 8013e62:	2b00      	cmp	r3, #0
 8013e64:	d002      	beq.n	8013e6c <LoRaMacHandleMcpsRequest+0x78>
                    {
                        AckTimeoutRetriesProcess( );
 8013e66:	f002 f91d 	bl	80160a4 <AckTimeoutRetriesProcess>
 8013e6a:	e004      	b.n	8013e76 <LoRaMacHandleMcpsRequest+0x82>
                    }
                    else
                    {
                        AckTimeoutRetriesFinalize( );
 8013e6c:	f002 f95c 	bl	8016128 <AckTimeoutRetriesFinalize>
 8013e70:	e001      	b.n	8013e76 <LoRaMacHandleMcpsRequest+0x82>
                    }
                }
            }
            else
            {
                waitForRetransmission = true;
 8013e72:	2301      	movs	r3, #1
 8013e74:	71bb      	strb	r3, [r7, #6]
            }
        }

        if( stopRetransmission == true )
 8013e76:	79fb      	ldrb	r3, [r7, #7]
 8013e78:	2b00      	cmp	r3, #0
 8013e7a:	d00d      	beq.n	8013e98 <LoRaMacHandleMcpsRequest+0xa4>
        {// Stop retransmission
            TimerStop( &MacCtx.TxDelayedTimer );
 8013e7c:	4813      	ldr	r0, [pc, #76]	; (8013ecc <LoRaMacHandleMcpsRequest+0xd8>)
 8013e7e:	f00d f92d 	bl	80210dc <UTIL_TIMER_Stop>
            MacCtx.MacState &= ~LORAMAC_TX_DELAYED;
 8013e82:	4b11      	ldr	r3, [pc, #68]	; (8013ec8 <LoRaMacHandleMcpsRequest+0xd4>)
 8013e84:	f8d3 3340 	ldr.w	r3, [r3, #832]	; 0x340
 8013e88:	f023 0320 	bic.w	r3, r3, #32
 8013e8c:	4a0e      	ldr	r2, [pc, #56]	; (8013ec8 <LoRaMacHandleMcpsRequest+0xd4>)
 8013e8e:	f8c2 3340 	str.w	r3, [r2, #832]	; 0x340
            StopRetransmission( );
 8013e92:	f002 f8c9 	bl	8016028 <StopRetransmission>
            MacCtx.AckTimeoutRetry = false;
            // Sends the same frame again
            OnTxDelayedTimerEvent( NULL );
        }
    }
}
 8013e96:	e013      	b.n	8013ec0 <LoRaMacHandleMcpsRequest+0xcc>
        else if( waitForRetransmission == false )
 8013e98:	79bb      	ldrb	r3, [r7, #6]
 8013e9a:	f083 0301 	eor.w	r3, r3, #1
 8013e9e:	b2db      	uxtb	r3, r3
 8013ea0:	2b00      	cmp	r3, #0
 8013ea2:	d00d      	beq.n	8013ec0 <LoRaMacHandleMcpsRequest+0xcc>
            MacCtx.MacFlags.Bits.MacDone = 0;
 8013ea4:	4a08      	ldr	r2, [pc, #32]	; (8013ec8 <LoRaMacHandleMcpsRequest+0xd4>)
 8013ea6:	f892 3481 	ldrb.w	r3, [r2, #1153]	; 0x481
 8013eaa:	f36f 1345 	bfc	r3, #5, #1
 8013eae:	f882 3481 	strb.w	r3, [r2, #1153]	; 0x481
            MacCtx.AckTimeoutRetry = false;
 8013eb2:	4b05      	ldr	r3, [pc, #20]	; (8013ec8 <LoRaMacHandleMcpsRequest+0xd4>)
 8013eb4:	2200      	movs	r2, #0
 8013eb6:	f883 2413 	strb.w	r2, [r3, #1043]	; 0x413
            OnTxDelayedTimerEvent( NULL );
 8013eba:	2000      	movs	r0, #0
 8013ebc:	f000 f88c 	bl	8013fd8 <OnTxDelayedTimerEvent>
}
 8013ec0:	bf00      	nop
 8013ec2:	3708      	adds	r7, #8
 8013ec4:	46bd      	mov	sp, r7
 8013ec6:	bd80      	pop	{r7, pc}
 8013ec8:	20000be0 	.word	0x20000be0
 8013ecc:	20000f48 	.word	0x20000f48

08013ed0 <LoRaMacHandleMlmeRequest>:

static void LoRaMacHandleMlmeRequest( void )
{
 8013ed0:	b580      	push	{r7, lr}
 8013ed2:	af00      	add	r7, sp, #0
    // Handle join request
    if( MacCtx.MacFlags.Bits.MlmeReq == 1 )
 8013ed4:	4b1b      	ldr	r3, [pc, #108]	; (8013f44 <LoRaMacHandleMlmeRequest+0x74>)
 8013ed6:	f893 3481 	ldrb.w	r3, [r3, #1153]	; 0x481
 8013eda:	f003 0304 	and.w	r3, r3, #4
 8013ede:	b2db      	uxtb	r3, r3
 8013ee0:	2b00      	cmp	r3, #0
 8013ee2:	d02c      	beq.n	8013f3e <LoRaMacHandleMlmeRequest+0x6e>
    {
        if( LoRaMacConfirmQueueIsCmdActive( MLME_JOIN ) == true )
 8013ee4:	2001      	movs	r0, #1
 8013ee6:	f004 fc0d 	bl	8018704 <LoRaMacConfirmQueueIsCmdActive>
 8013eea:	4603      	mov	r3, r0
 8013eec:	2b00      	cmp	r3, #0
 8013eee:	d012      	beq.n	8013f16 <LoRaMacHandleMlmeRequest+0x46>
        {
            if( LoRaMacConfirmQueueGetStatus( MLME_JOIN ) == LORAMAC_EVENT_INFO_STATUS_OK )
 8013ef0:	2001      	movs	r0, #1
 8013ef2:	f004 fba9 	bl	8018648 <LoRaMacConfirmQueueGetStatus>
 8013ef6:	4603      	mov	r3, r0
 8013ef8:	2b00      	cmp	r3, #0
 8013efa:	d103      	bne.n	8013f04 <LoRaMacHandleMlmeRequest+0x34>
            {// Node joined successfully
                MacCtx.ChannelsNbTransCounter = 0;
 8013efc:	4b11      	ldr	r3, [pc, #68]	; (8013f44 <LoRaMacHandleMlmeRequest+0x74>)
 8013efe:	2200      	movs	r2, #0
 8013f00:	f883 2410 	strb.w	r2, [r3, #1040]	; 0x410
            }
            MacCtx.MacState &= ~LORAMAC_TX_RUNNING;
 8013f04:	4b0f      	ldr	r3, [pc, #60]	; (8013f44 <LoRaMacHandleMlmeRequest+0x74>)
 8013f06:	f8d3 3340 	ldr.w	r3, [r3, #832]	; 0x340
 8013f0a:	f023 0302 	bic.w	r3, r3, #2
 8013f0e:	4a0d      	ldr	r2, [pc, #52]	; (8013f44 <LoRaMacHandleMlmeRequest+0x74>)
 8013f10:	f8c2 3340 	str.w	r3, [r2, #832]	; 0x340
                 ( LoRaMacConfirmQueueIsCmdActive( MLME_TXCW_1 ) == true ) )
        {
            MacCtx.MacState &= ~LORAMAC_TX_RUNNING;
        }
    }
}
 8013f14:	e013      	b.n	8013f3e <LoRaMacHandleMlmeRequest+0x6e>
        else if( ( LoRaMacConfirmQueueIsCmdActive( MLME_TXCW ) == true ) ||
 8013f16:	2005      	movs	r0, #5
 8013f18:	f004 fbf4 	bl	8018704 <LoRaMacConfirmQueueIsCmdActive>
 8013f1c:	4603      	mov	r3, r0
 8013f1e:	2b00      	cmp	r3, #0
 8013f20:	d105      	bne.n	8013f2e <LoRaMacHandleMlmeRequest+0x5e>
                 ( LoRaMacConfirmQueueIsCmdActive( MLME_TXCW_1 ) == true ) )
 8013f22:	2006      	movs	r0, #6
 8013f24:	f004 fbee 	bl	8018704 <LoRaMacConfirmQueueIsCmdActive>
 8013f28:	4603      	mov	r3, r0
        else if( ( LoRaMacConfirmQueueIsCmdActive( MLME_TXCW ) == true ) ||
 8013f2a:	2b00      	cmp	r3, #0
 8013f2c:	d007      	beq.n	8013f3e <LoRaMacHandleMlmeRequest+0x6e>
            MacCtx.MacState &= ~LORAMAC_TX_RUNNING;
 8013f2e:	4b05      	ldr	r3, [pc, #20]	; (8013f44 <LoRaMacHandleMlmeRequest+0x74>)
 8013f30:	f8d3 3340 	ldr.w	r3, [r3, #832]	; 0x340
 8013f34:	f023 0302 	bic.w	r3, r3, #2
 8013f38:	4a02      	ldr	r2, [pc, #8]	; (8013f44 <LoRaMacHandleMlmeRequest+0x74>)
 8013f3a:	f8c2 3340 	str.w	r3, [r2, #832]	; 0x340
}
 8013f3e:	bf00      	nop
 8013f40:	bd80      	pop	{r7, pc}
 8013f42:	bf00      	nop
 8013f44:	20000be0 	.word	0x20000be0

08013f48 <LoRaMacCheckForBeaconAcquisition>:

static uint8_t LoRaMacCheckForBeaconAcquisition( void )
{
 8013f48:	b580      	push	{r7, lr}
 8013f4a:	af00      	add	r7, sp, #0
    if( ( LoRaMacConfirmQueueIsCmdActive( MLME_BEACON_ACQUISITION ) == true ) &&
 8013f4c:	200c      	movs	r0, #12
 8013f4e:	f004 fbd9 	bl	8018704 <LoRaMacConfirmQueueIsCmdActive>
 8013f52:	4603      	mov	r3, r0
 8013f54:	2b00      	cmp	r3, #0
 8013f56:	d019      	beq.n	8013f8c <LoRaMacCheckForBeaconAcquisition+0x44>
        ( MacCtx.MacFlags.Bits.McpsReq == 0 ) )
 8013f58:	4b0e      	ldr	r3, [pc, #56]	; (8013f94 <LoRaMacCheckForBeaconAcquisition+0x4c>)
 8013f5a:	f893 3481 	ldrb.w	r3, [r3, #1153]	; 0x481
 8013f5e:	f003 0301 	and.w	r3, r3, #1
 8013f62:	b2db      	uxtb	r3, r3
    if( ( LoRaMacConfirmQueueIsCmdActive( MLME_BEACON_ACQUISITION ) == true ) &&
 8013f64:	2b00      	cmp	r3, #0
 8013f66:	d111      	bne.n	8013f8c <LoRaMacCheckForBeaconAcquisition+0x44>
    {
        if( MacCtx.MacFlags.Bits.MlmeReq == 1 )
 8013f68:	4b0a      	ldr	r3, [pc, #40]	; (8013f94 <LoRaMacCheckForBeaconAcquisition+0x4c>)
 8013f6a:	f893 3481 	ldrb.w	r3, [r3, #1153]	; 0x481
 8013f6e:	f003 0304 	and.w	r3, r3, #4
 8013f72:	b2db      	uxtb	r3, r3
 8013f74:	2b00      	cmp	r3, #0
 8013f76:	d009      	beq.n	8013f8c <LoRaMacCheckForBeaconAcquisition+0x44>
        {
            MacCtx.MacState &= ~LORAMAC_TX_RUNNING;
 8013f78:	4b06      	ldr	r3, [pc, #24]	; (8013f94 <LoRaMacCheckForBeaconAcquisition+0x4c>)
 8013f7a:	f8d3 3340 	ldr.w	r3, [r3, #832]	; 0x340
 8013f7e:	f023 0302 	bic.w	r3, r3, #2
 8013f82:	4a04      	ldr	r2, [pc, #16]	; (8013f94 <LoRaMacCheckForBeaconAcquisition+0x4c>)
 8013f84:	f8c2 3340 	str.w	r3, [r2, #832]	; 0x340
            return 0x01;
 8013f88:	2301      	movs	r3, #1
 8013f8a:	e000      	b.n	8013f8e <LoRaMacCheckForBeaconAcquisition+0x46>
        }
    }
    return 0x00;
 8013f8c:	2300      	movs	r3, #0
}
 8013f8e:	4618      	mov	r0, r3
 8013f90:	bd80      	pop	{r7, pc}
 8013f92:	bf00      	nop
 8013f94:	20000be0 	.word	0x20000be0

08013f98 <LoRaMacCheckForRxAbort>:

static void LoRaMacCheckForRxAbort( void )
{
 8013f98:	b480      	push	{r7}
 8013f9a:	af00      	add	r7, sp, #0
    // A error occurs during receiving
    if( ( MacCtx.MacState & LORAMAC_RX_ABORT ) == LORAMAC_RX_ABORT )
 8013f9c:	4b0d      	ldr	r3, [pc, #52]	; (8013fd4 <LoRaMacCheckForRxAbort+0x3c>)
 8013f9e:	f8d3 3340 	ldr.w	r3, [r3, #832]	; 0x340
 8013fa2:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8013fa6:	2b00      	cmp	r3, #0
 8013fa8:	d00f      	beq.n	8013fca <LoRaMacCheckForRxAbort+0x32>
    {
        MacCtx.MacState &= ~LORAMAC_RX_ABORT;
 8013faa:	4b0a      	ldr	r3, [pc, #40]	; (8013fd4 <LoRaMacCheckForRxAbort+0x3c>)
 8013fac:	f8d3 3340 	ldr.w	r3, [r3, #832]	; 0x340
 8013fb0:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8013fb4:	4a07      	ldr	r2, [pc, #28]	; (8013fd4 <LoRaMacCheckForRxAbort+0x3c>)
 8013fb6:	f8c2 3340 	str.w	r3, [r2, #832]	; 0x340
        MacCtx.MacState &= ~LORAMAC_TX_RUNNING;
 8013fba:	4b06      	ldr	r3, [pc, #24]	; (8013fd4 <LoRaMacCheckForRxAbort+0x3c>)
 8013fbc:	f8d3 3340 	ldr.w	r3, [r3, #832]	; 0x340
 8013fc0:	f023 0302 	bic.w	r3, r3, #2
 8013fc4:	4a03      	ldr	r2, [pc, #12]	; (8013fd4 <LoRaMacCheckForRxAbort+0x3c>)
 8013fc6:	f8c2 3340 	str.w	r3, [r2, #832]	; 0x340
    }
}
 8013fca:	bf00      	nop
 8013fcc:	46bd      	mov	sp, r7
 8013fce:	bc80      	pop	{r7}
 8013fd0:	4770      	bx	lr
 8013fd2:	bf00      	nop
 8013fd4:	20000be0 	.word	0x20000be0

08013fd8 <OnTxDelayedTimerEvent>:

static void OnTxDelayedTimerEvent( void* context )
{
 8013fd8:	b580      	push	{r7, lr}
 8013fda:	b082      	sub	sp, #8
 8013fdc:	af00      	add	r7, sp, #0
 8013fde:	6078      	str	r0, [r7, #4]
    TimerStop( &MacCtx.TxDelayedTimer );
 8013fe0:	4818      	ldr	r0, [pc, #96]	; (8014044 <OnTxDelayedTimerEvent+0x6c>)
 8013fe2:	f00d f87b 	bl	80210dc <UTIL_TIMER_Stop>
    MacCtx.MacState &= ~LORAMAC_TX_DELAYED;
 8013fe6:	4b18      	ldr	r3, [pc, #96]	; (8014048 <OnTxDelayedTimerEvent+0x70>)
 8013fe8:	f8d3 3340 	ldr.w	r3, [r3, #832]	; 0x340
 8013fec:	f023 0320 	bic.w	r3, r3, #32
 8013ff0:	4a15      	ldr	r2, [pc, #84]	; (8014048 <OnTxDelayedTimerEvent+0x70>)
 8013ff2:	f8c2 3340 	str.w	r3, [r2, #832]	; 0x340

    // Schedule frame, allow delayed frame transmissions
    switch( ScheduleTx( true ) )
 8013ff6:	2001      	movs	r0, #1
 8013ff8:	f001 f9a8 	bl	801534c <ScheduleTx>
 8013ffc:	4603      	mov	r3, r0
 8013ffe:	2b00      	cmp	r3, #0
 8014000:	d01a      	beq.n	8014038 <OnTxDelayedTimerEvent+0x60>
 8014002:	2b0b      	cmp	r3, #11
 8014004:	d018      	beq.n	8014038 <OnTxDelayedTimerEvent+0x60>
            break;
        }
        default:
        {
            // Stop retransmission attempt
            MacCtx.McpsConfirm.Datarate = MacCtx.NvmCtx->MacParams.ChannelsDatarate;
 8014006:	4b10      	ldr	r3, [pc, #64]	; (8014048 <OnTxDelayedTimerEvent+0x70>)
 8014008:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 801400c:	f993 3085 	ldrsb.w	r3, [r3, #133]	; 0x85
 8014010:	b2da      	uxtb	r2, r3
 8014012:	4b0d      	ldr	r3, [pc, #52]	; (8014048 <OnTxDelayedTimerEvent+0x70>)
 8014014:	f883 243e 	strb.w	r2, [r3, #1086]	; 0x43e
            MacCtx.McpsConfirm.NbRetries = MacCtx.AckTimeoutRetriesCounter;
 8014018:	4b0b      	ldr	r3, [pc, #44]	; (8014048 <OnTxDelayedTimerEvent+0x70>)
 801401a:	f893 2412 	ldrb.w	r2, [r3, #1042]	; 0x412
 801401e:	4b0a      	ldr	r3, [pc, #40]	; (8014048 <OnTxDelayedTimerEvent+0x70>)
 8014020:	f883 2441 	strb.w	r2, [r3, #1089]	; 0x441
            MacCtx.McpsConfirm.Status = LORAMAC_EVENT_INFO_STATUS_TX_DR_PAYLOAD_SIZE_ERROR;
 8014024:	4b08      	ldr	r3, [pc, #32]	; (8014048 <OnTxDelayedTimerEvent+0x70>)
 8014026:	2209      	movs	r2, #9
 8014028:	f883 243d 	strb.w	r2, [r3, #1085]	; 0x43d
            LoRaMacConfirmQueueSetStatusCmn( LORAMAC_EVENT_INFO_STATUS_TX_DR_PAYLOAD_SIZE_ERROR );
 801402c:	2009      	movs	r0, #9
 801402e:	f004 fb35 	bl	801869c <LoRaMacConfirmQueueSetStatusCmn>
            StopRetransmission( );
 8014032:	f001 fff9 	bl	8016028 <StopRetransmission>
            break;
 8014036:	e000      	b.n	801403a <OnTxDelayedTimerEvent+0x62>
            break;
 8014038:	bf00      	nop
        }
    }
}
 801403a:	bf00      	nop
 801403c:	3708      	adds	r7, #8
 801403e:	46bd      	mov	sp, r7
 8014040:	bd80      	pop	{r7, pc}
 8014042:	bf00      	nop
 8014044:	20000f48 	.word	0x20000f48
 8014048:	20000be0 	.word	0x20000be0

0801404c <OnRxWindow1TimerEvent>:

static void OnRxWindow1TimerEvent( void* context )
{
 801404c:	b580      	push	{r7, lr}
 801404e:	b082      	sub	sp, #8
 8014050:	af00      	add	r7, sp, #0
 8014052:	6078      	str	r0, [r7, #4]
    MacCtx.RxWindow1Config.Channel = MacCtx.Channel;
 8014054:	4b17      	ldr	r3, [pc, #92]	; (80140b4 <OnRxWindow1TimerEvent+0x68>)
 8014056:	f893 2415 	ldrb.w	r2, [r3, #1045]	; 0x415
 801405a:	4b16      	ldr	r3, [pc, #88]	; (80140b4 <OnRxWindow1TimerEvent+0x68>)
 801405c:	f883 23b8 	strb.w	r2, [r3, #952]	; 0x3b8
    MacCtx.RxWindow1Config.DrOffset = MacCtx.NvmCtx->MacParams.Rx1DrOffset;
 8014060:	4b14      	ldr	r3, [pc, #80]	; (80140b4 <OnRxWindow1TimerEvent+0x68>)
 8014062:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8014066:	f893 30a5 	ldrb.w	r3, [r3, #165]	; 0xa5
 801406a:	b25a      	sxtb	r2, r3
 801406c:	4b11      	ldr	r3, [pc, #68]	; (80140b4 <OnRxWindow1TimerEvent+0x68>)
 801406e:	f883 23bb 	strb.w	r2, [r3, #955]	; 0x3bb
    MacCtx.RxWindow1Config.DownlinkDwellTime = MacCtx.NvmCtx->MacParams.DownlinkDwellTime;
 8014072:	4b10      	ldr	r3, [pc, #64]	; (80140b4 <OnRxWindow1TimerEvent+0x68>)
 8014074:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8014078:	f893 20b9 	ldrb.w	r2, [r3, #185]	; 0xb9
 801407c:	4b0d      	ldr	r3, [pc, #52]	; (80140b4 <OnRxWindow1TimerEvent+0x68>)
 801407e:	f883 23c8 	strb.w	r2, [r3, #968]	; 0x3c8
    MacCtx.RxWindow1Config.RepeaterSupport = MacCtx.NvmCtx->RepeaterSupport;
 8014082:	4b0c      	ldr	r3, [pc, #48]	; (80140b4 <OnRxWindow1TimerEvent+0x68>)
 8014084:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8014088:	f893 20ca 	ldrb.w	r2, [r3, #202]	; 0xca
 801408c:	4b09      	ldr	r3, [pc, #36]	; (80140b4 <OnRxWindow1TimerEvent+0x68>)
 801408e:	f883 23c9 	strb.w	r2, [r3, #969]	; 0x3c9
    MacCtx.RxWindow1Config.RxContinuous = false;
 8014092:	4b08      	ldr	r3, [pc, #32]	; (80140b4 <OnRxWindow1TimerEvent+0x68>)
 8014094:	2200      	movs	r2, #0
 8014096:	f883 23ca 	strb.w	r2, [r3, #970]	; 0x3ca
    MacCtx.RxWindow1Config.RxSlot = RX_SLOT_WIN_1;
 801409a:	4b06      	ldr	r3, [pc, #24]	; (80140b4 <OnRxWindow1TimerEvent+0x68>)
 801409c:	2200      	movs	r2, #0
 801409e:	f883 23cb 	strb.w	r2, [r3, #971]	; 0x3cb

    RxWindowSetup( &MacCtx.RxWindowTimer1, &MacCtx.RxWindow1Config );
 80140a2:	4905      	ldr	r1, [pc, #20]	; (80140b8 <OnRxWindow1TimerEvent+0x6c>)
 80140a4:	4805      	ldr	r0, [pc, #20]	; (80140bc <OnRxWindow1TimerEvent+0x70>)
 80140a6:	f001 fb91 	bl	80157cc <RxWindowSetup>
}
 80140aa:	bf00      	nop
 80140ac:	3708      	adds	r7, #8
 80140ae:	46bd      	mov	sp, r7
 80140b0:	bd80      	pop	{r7, pc}
 80140b2:	bf00      	nop
 80140b4:	20000be0 	.word	0x20000be0
 80140b8:	20000f98 	.word	0x20000f98
 80140bc:	20000f60 	.word	0x20000f60

080140c0 <OnRxWindow2TimerEvent>:

static void OnRxWindow2TimerEvent( void* context )
{
 80140c0:	b580      	push	{r7, lr}
 80140c2:	b082      	sub	sp, #8
 80140c4:	af00      	add	r7, sp, #0
 80140c6:	6078      	str	r0, [r7, #4]
    // Check if we are processing Rx1 window.
    // If yes, we don't setup the Rx2 window.
    if( MacCtx.RxSlot == RX_SLOT_WIN_1 )
 80140c8:	4b19      	ldr	r3, [pc, #100]	; (8014130 <OnRxWindow2TimerEvent+0x70>)
 80140ca:	f893 3480 	ldrb.w	r3, [r3, #1152]	; 0x480
 80140ce:	2b00      	cmp	r3, #0
 80140d0:	d02a      	beq.n	8014128 <OnRxWindow2TimerEvent+0x68>
    {
        return;
    }
    MacCtx.RxWindow2Config.Channel = MacCtx.Channel;
 80140d2:	4b17      	ldr	r3, [pc, #92]	; (8014130 <OnRxWindow2TimerEvent+0x70>)
 80140d4:	f893 2415 	ldrb.w	r2, [r3, #1045]	; 0x415
 80140d8:	4b15      	ldr	r3, [pc, #84]	; (8014130 <OnRxWindow2TimerEvent+0x70>)
 80140da:	f883 23cc 	strb.w	r2, [r3, #972]	; 0x3cc
    MacCtx.RxWindow2Config.Frequency = MacCtx.NvmCtx->MacParams.Rx2Channel.Frequency;
 80140de:	4b14      	ldr	r3, [pc, #80]	; (8014130 <OnRxWindow2TimerEvent+0x70>)
 80140e0:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 80140e4:	f8d3 30a8 	ldr.w	r3, [r3, #168]	; 0xa8
 80140e8:	4a11      	ldr	r2, [pc, #68]	; (8014130 <OnRxWindow2TimerEvent+0x70>)
 80140ea:	f8c2 33d0 	str.w	r3, [r2, #976]	; 0x3d0
    MacCtx.RxWindow2Config.DownlinkDwellTime = MacCtx.NvmCtx->MacParams.DownlinkDwellTime;
 80140ee:	4b10      	ldr	r3, [pc, #64]	; (8014130 <OnRxWindow2TimerEvent+0x70>)
 80140f0:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 80140f4:	f893 20b9 	ldrb.w	r2, [r3, #185]	; 0xb9
 80140f8:	4b0d      	ldr	r3, [pc, #52]	; (8014130 <OnRxWindow2TimerEvent+0x70>)
 80140fa:	f883 23dc 	strb.w	r2, [r3, #988]	; 0x3dc
    MacCtx.RxWindow2Config.RepeaterSupport = MacCtx.NvmCtx->RepeaterSupport;
 80140fe:	4b0c      	ldr	r3, [pc, #48]	; (8014130 <OnRxWindow2TimerEvent+0x70>)
 8014100:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8014104:	f893 20ca 	ldrb.w	r2, [r3, #202]	; 0xca
 8014108:	4b09      	ldr	r3, [pc, #36]	; (8014130 <OnRxWindow2TimerEvent+0x70>)
 801410a:	f883 23dd 	strb.w	r2, [r3, #989]	; 0x3dd
    MacCtx.RxWindow2Config.RxContinuous = false;
 801410e:	4b08      	ldr	r3, [pc, #32]	; (8014130 <OnRxWindow2TimerEvent+0x70>)
 8014110:	2200      	movs	r2, #0
 8014112:	f883 23de 	strb.w	r2, [r3, #990]	; 0x3de
    MacCtx.RxWindow2Config.RxSlot = RX_SLOT_WIN_2;
 8014116:	4b06      	ldr	r3, [pc, #24]	; (8014130 <OnRxWindow2TimerEvent+0x70>)
 8014118:	2201      	movs	r2, #1
 801411a:	f883 23df 	strb.w	r2, [r3, #991]	; 0x3df

    RxWindowSetup( &MacCtx.RxWindowTimer2, &MacCtx.RxWindow2Config );
 801411e:	4905      	ldr	r1, [pc, #20]	; (8014134 <OnRxWindow2TimerEvent+0x74>)
 8014120:	4805      	ldr	r0, [pc, #20]	; (8014138 <OnRxWindow2TimerEvent+0x78>)
 8014122:	f001 fb53 	bl	80157cc <RxWindowSetup>
 8014126:	e000      	b.n	801412a <OnRxWindow2TimerEvent+0x6a>
        return;
 8014128:	bf00      	nop
}
 801412a:	3708      	adds	r7, #8
 801412c:	46bd      	mov	sp, r7
 801412e:	bd80      	pop	{r7, pc}
 8014130:	20000be0 	.word	0x20000be0
 8014134:	20000fac 	.word	0x20000fac
 8014138:	20000f78 	.word	0x20000f78

0801413c <OnAckTimeoutTimerEvent>:

static void OnAckTimeoutTimerEvent( void* context )
{
 801413c:	b580      	push	{r7, lr}
 801413e:	b082      	sub	sp, #8
 8014140:	af00      	add	r7, sp, #0
 8014142:	6078      	str	r0, [r7, #4]
    TimerStop( &MacCtx.AckTimeoutTimer );
 8014144:	4816      	ldr	r0, [pc, #88]	; (80141a0 <OnAckTimeoutTimerEvent+0x64>)
 8014146:	f00c ffc9 	bl	80210dc <UTIL_TIMER_Stop>

    if( MacCtx.NodeAckRequested == true )
 801414a:	4b16      	ldr	r3, [pc, #88]	; (80141a4 <OnAckTimeoutTimerEvent+0x68>)
 801414c:	f893 3414 	ldrb.w	r3, [r3, #1044]	; 0x414
 8014150:	2b00      	cmp	r3, #0
 8014152:	d003      	beq.n	801415c <OnAckTimeoutTimerEvent+0x20>
    {
        MacCtx.AckTimeoutRetry = true;
 8014154:	4b13      	ldr	r3, [pc, #76]	; (80141a4 <OnAckTimeoutTimerEvent+0x68>)
 8014156:	2201      	movs	r2, #1
 8014158:	f883 2413 	strb.w	r2, [r3, #1043]	; 0x413
    }
    if( MacCtx.NvmCtx->DeviceClass == CLASS_C )
 801415c:	4b11      	ldr	r3, [pc, #68]	; (80141a4 <OnAckTimeoutTimerEvent+0x68>)
 801415e:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8014162:	f893 307c 	ldrb.w	r3, [r3, #124]	; 0x7c
 8014166:	2b02      	cmp	r3, #2
 8014168:	d106      	bne.n	8014178 <OnAckTimeoutTimerEvent+0x3c>
    {
        MacCtx.MacFlags.Bits.MacDone = 1;
 801416a:	4a0e      	ldr	r2, [pc, #56]	; (80141a4 <OnAckTimeoutTimerEvent+0x68>)
 801416c:	f892 3481 	ldrb.w	r3, [r2, #1153]	; 0x481
 8014170:	f043 0320 	orr.w	r3, r3, #32
 8014174:	f882 3481 	strb.w	r3, [r2, #1153]	; 0x481
    }
    if( ( MacCtx.MacCallbacks != NULL ) && ( MacCtx.MacCallbacks->MacProcessNotify != NULL ) )
 8014178:	4b0a      	ldr	r3, [pc, #40]	; (80141a4 <OnAckTimeoutTimerEvent+0x68>)
 801417a:	f8d3 3348 	ldr.w	r3, [r3, #840]	; 0x348
 801417e:	2b00      	cmp	r3, #0
 8014180:	d00a      	beq.n	8014198 <OnAckTimeoutTimerEvent+0x5c>
 8014182:	4b08      	ldr	r3, [pc, #32]	; (80141a4 <OnAckTimeoutTimerEvent+0x68>)
 8014184:	f8d3 3348 	ldr.w	r3, [r3, #840]	; 0x348
 8014188:	68db      	ldr	r3, [r3, #12]
 801418a:	2b00      	cmp	r3, #0
 801418c:	d004      	beq.n	8014198 <OnAckTimeoutTimerEvent+0x5c>
    {
        MacCtx.MacCallbacks->MacProcessNotify( );
 801418e:	4b05      	ldr	r3, [pc, #20]	; (80141a4 <OnAckTimeoutTimerEvent+0x68>)
 8014190:	f8d3 3348 	ldr.w	r3, [r3, #840]	; 0x348
 8014194:	68db      	ldr	r3, [r3, #12]
 8014196:	4798      	blx	r3
    }
}
 8014198:	bf00      	nop
 801419a:	3708      	adds	r7, #8
 801419c:	46bd      	mov	sp, r7
 801419e:	bd80      	pop	{r7, pc}
 80141a0:	20000fd8 	.word	0x20000fd8
 80141a4:	20000be0 	.word	0x20000be0

080141a8 <GetFCntDown>:

static LoRaMacCryptoStatus_t GetFCntDown( AddressIdentifier_t addrID, FType_t fType, LoRaMacMessageData_t* macMsg, Version_t lrWanVersion,
                                          uint16_t maxFCntGap, FCntIdentifier_t* fCntID, uint32_t* currentDown )
{
 80141a8:	b580      	push	{r7, lr}
 80141aa:	b084      	sub	sp, #16
 80141ac:	af00      	add	r7, sp, #0
 80141ae:	60ba      	str	r2, [r7, #8]
 80141b0:	607b      	str	r3, [r7, #4]
 80141b2:	4603      	mov	r3, r0
 80141b4:	73fb      	strb	r3, [r7, #15]
 80141b6:	460b      	mov	r3, r1
 80141b8:	73bb      	strb	r3, [r7, #14]
    if( ( macMsg == NULL ) || ( fCntID == NULL ) ||
 80141ba:	68bb      	ldr	r3, [r7, #8]
 80141bc:	2b00      	cmp	r3, #0
 80141be:	d005      	beq.n	80141cc <GetFCntDown+0x24>
 80141c0:	69fb      	ldr	r3, [r7, #28]
 80141c2:	2b00      	cmp	r3, #0
 80141c4:	d002      	beq.n	80141cc <GetFCntDown+0x24>
 80141c6:	6a3b      	ldr	r3, [r7, #32]
 80141c8:	2b00      	cmp	r3, #0
 80141ca:	d101      	bne.n	80141d0 <GetFCntDown+0x28>
        ( currentDown == NULL ) )
    {
        return LORAMAC_CRYPTO_ERROR_NPE;
 80141cc:	230a      	movs	r3, #10
 80141ce:	e029      	b.n	8014224 <GetFCntDown+0x7c>
    }

    // Determine the frame counter identifier and choose counter from FCntList
    switch( addrID )
 80141d0:	7bfb      	ldrb	r3, [r7, #15]
 80141d2:	2b00      	cmp	r3, #0
 80141d4:	d016      	beq.n	8014204 <GetFCntDown+0x5c>
 80141d6:	2b01      	cmp	r3, #1
 80141d8:	d118      	bne.n	801420c <GetFCntDown+0x64>
    {
        case UNICAST_DEV_ADDR:
            if( lrWanVersion.Fields.Minor == 1 )
 80141da:	79bb      	ldrb	r3, [r7, #6]
 80141dc:	2b01      	cmp	r3, #1
 80141de:	d10d      	bne.n	80141fc <GetFCntDown+0x54>
            {
                if( ( fType == FRAME_TYPE_A ) || ( fType == FRAME_TYPE_D ) )
 80141e0:	7bbb      	ldrb	r3, [r7, #14]
 80141e2:	2b00      	cmp	r3, #0
 80141e4:	d002      	beq.n	80141ec <GetFCntDown+0x44>
 80141e6:	7bbb      	ldrb	r3, [r7, #14]
 80141e8:	2b03      	cmp	r3, #3
 80141ea:	d103      	bne.n	80141f4 <GetFCntDown+0x4c>
                {
                    *fCntID = A_FCNT_DOWN;
 80141ec:	69fb      	ldr	r3, [r7, #28]
 80141ee:	2202      	movs	r2, #2
 80141f0:	701a      	strb	r2, [r3, #0]
            }
            else
            { // For LoRaWAN 1.0.X
                *fCntID = FCNT_DOWN;
            }
            break;
 80141f2:	e00d      	b.n	8014210 <GetFCntDown+0x68>
                    *fCntID = N_FCNT_DOWN;
 80141f4:	69fb      	ldr	r3, [r7, #28]
 80141f6:	2201      	movs	r2, #1
 80141f8:	701a      	strb	r2, [r3, #0]
            break;
 80141fa:	e009      	b.n	8014210 <GetFCntDown+0x68>
                *fCntID = FCNT_DOWN;
 80141fc:	69fb      	ldr	r3, [r7, #28]
 80141fe:	2203      	movs	r2, #3
 8014200:	701a      	strb	r2, [r3, #0]
            break;
 8014202:	e005      	b.n	8014210 <GetFCntDown+0x68>
        case MULTICAST_0_ADDR:
            *fCntID = MC_FCNT_DOWN_0;
 8014204:	69fb      	ldr	r3, [r7, #28]
 8014206:	2204      	movs	r2, #4
 8014208:	701a      	strb	r2, [r3, #0]
            break;
 801420a:	e001      	b.n	8014210 <GetFCntDown+0x68>
        case MULTICAST_3_ADDR:
            *fCntID = MC_FCNT_DOWN_3;
            break;
#endif /* LORAMAC_MAX_MC_CTX > 1 */
        default:
            return LORAMAC_CRYPTO_FAIL_FCNT_ID;
 801420c:	2305      	movs	r3, #5
 801420e:	e009      	b.n	8014224 <GetFCntDown+0x7c>
    }

    return LoRaMacCryptoGetFCntDown( *fCntID, maxFCntGap, macMsg->FHDR.FCnt, currentDown );
 8014210:	69fb      	ldr	r3, [r7, #28]
 8014212:	7818      	ldrb	r0, [r3, #0]
 8014214:	68bb      	ldr	r3, [r7, #8]
 8014216:	89db      	ldrh	r3, [r3, #14]
 8014218:	461a      	mov	r2, r3
 801421a:	8b39      	ldrh	r1, [r7, #24]
 801421c:	6a3b      	ldr	r3, [r7, #32]
 801421e:	f004 fe71 	bl	8018f04 <LoRaMacCryptoGetFCntDown>
 8014222:	4603      	mov	r3, r0
}
 8014224:	4618      	mov	r0, r3
 8014226:	3710      	adds	r7, #16
 8014228:	46bd      	mov	sp, r7
 801422a:	bd80      	pop	{r7, pc}

0801422c <SwitchClass>:

static LoRaMacStatus_t SwitchClass( DeviceClass_t deviceClass )
{
 801422c:	b5b0      	push	{r4, r5, r7, lr}
 801422e:	b084      	sub	sp, #16
 8014230:	af00      	add	r7, sp, #0
 8014232:	4603      	mov	r3, r0
 8014234:	71fb      	strb	r3, [r7, #7]
    LoRaMacStatus_t status = LORAMAC_STATUS_PARAMETER_INVALID;
 8014236:	2303      	movs	r3, #3
 8014238:	73fb      	strb	r3, [r7, #15]

    switch( MacCtx.NvmCtx->DeviceClass )
 801423a:	4b71      	ldr	r3, [pc, #452]	; (8014400 <SwitchClass+0x1d4>)
 801423c:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8014240:	f893 307c 	ldrb.w	r3, [r3, #124]	; 0x7c
 8014244:	2b02      	cmp	r3, #2
 8014246:	f000 80c1 	beq.w	80143cc <SwitchClass+0x1a0>
 801424a:	2b02      	cmp	r3, #2
 801424c:	f300 80d2 	bgt.w	80143f4 <SwitchClass+0x1c8>
 8014250:	2b00      	cmp	r3, #0
 8014252:	d003      	beq.n	801425c <SwitchClass+0x30>
 8014254:	2b01      	cmp	r3, #1
 8014256:	f000 80a9 	beq.w	80143ac <SwitchClass+0x180>
 801425a:	e0cb      	b.n	80143f4 <SwitchClass+0x1c8>
    {
        case CLASS_A:
        {
            if( deviceClass == CLASS_A )
 801425c:	79fb      	ldrb	r3, [r7, #7]
 801425e:	2b00      	cmp	r3, #0
 8014260:	d10b      	bne.n	801427a <SwitchClass+0x4e>
            {
                // Revert back RxC parameters
                MacCtx.NvmCtx->MacParams.RxCChannel = MacCtx.NvmCtx->MacParams.Rx2Channel;
 8014262:	4b67      	ldr	r3, [pc, #412]	; (8014400 <SwitchClass+0x1d4>)
 8014264:	f8d3 2484 	ldr.w	r2, [r3, #1156]	; 0x484
 8014268:	4b65      	ldr	r3, [pc, #404]	; (8014400 <SwitchClass+0x1d4>)
 801426a:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 801426e:	33b0      	adds	r3, #176	; 0xb0
 8014270:	32a8      	adds	r2, #168	; 0xa8
 8014272:	e892 0003 	ldmia.w	r2, {r0, r1}
 8014276:	e883 0003 	stmia.w	r3, {r0, r1}
            }
            if( deviceClass == CLASS_B )
 801427a:	79fb      	ldrb	r3, [r7, #7]
 801427c:	2b01      	cmp	r3, #1
 801427e:	d10e      	bne.n	801429e <SwitchClass+0x72>
            {
                status = LoRaMacClassBSwitchClass( deviceClass );
 8014280:	79fb      	ldrb	r3, [r7, #7]
 8014282:	4618      	mov	r0, r3
 8014284:	f003 fd26 	bl	8017cd4 <LoRaMacClassBSwitchClass>
 8014288:	4603      	mov	r3, r0
 801428a:	73fb      	strb	r3, [r7, #15]
                if( status == LORAMAC_STATUS_OK )
 801428c:	7bfb      	ldrb	r3, [r7, #15]
 801428e:	2b00      	cmp	r3, #0
 8014290:	d105      	bne.n	801429e <SwitchClass+0x72>
                {
                    MacCtx.NvmCtx->DeviceClass = deviceClass;
 8014292:	4b5b      	ldr	r3, [pc, #364]	; (8014400 <SwitchClass+0x1d4>)
 8014294:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8014298:	79fa      	ldrb	r2, [r7, #7]
 801429a:	f883 207c 	strb.w	r2, [r3, #124]	; 0x7c
                }
            }

            if( deviceClass == CLASS_C )
 801429e:	79fb      	ldrb	r3, [r7, #7]
 80142a0:	2b02      	cmp	r3, #2
 80142a2:	f040 80a2 	bne.w	80143ea <SwitchClass+0x1be>
            {
                MacCtx.NvmCtx->DeviceClass = deviceClass;
 80142a6:	4b56      	ldr	r3, [pc, #344]	; (8014400 <SwitchClass+0x1d4>)
 80142a8:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 80142ac:	79fa      	ldrb	r2, [r7, #7]
 80142ae:	f883 207c 	strb.w	r2, [r3, #124]	; 0x7c

                MacCtx.RxWindowCConfig = MacCtx.RxWindow2Config;
 80142b2:	4a53      	ldr	r2, [pc, #332]	; (8014400 <SwitchClass+0x1d4>)
 80142b4:	4b52      	ldr	r3, [pc, #328]	; (8014400 <SwitchClass+0x1d4>)
 80142b6:	f502 7478 	add.w	r4, r2, #992	; 0x3e0
 80142ba:	f503 7573 	add.w	r5, r3, #972	; 0x3cc
 80142be:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80142c0:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80142c2:	682b      	ldr	r3, [r5, #0]
 80142c4:	6023      	str	r3, [r4, #0]
                MacCtx.RxWindowCConfig.RxSlot = RX_SLOT_WIN_CLASS_C;
 80142c6:	4b4e      	ldr	r3, [pc, #312]	; (8014400 <SwitchClass+0x1d4>)
 80142c8:	2202      	movs	r2, #2
 80142ca:	f883 23f3 	strb.w	r2, [r3, #1011]	; 0x3f3

                for( int8_t i = 0; i < LORAMAC_MAX_MC_CTX; i++ )
 80142ce:	2300      	movs	r3, #0
 80142d0:	73bb      	strb	r3, [r7, #14]
 80142d2:	e05b      	b.n	801438c <SwitchClass+0x160>
                {
                    if( MacCtx.NvmCtx->MulticastChannelList[i].ChannelParams.IsEnabled == true )
 80142d4:	4b4a      	ldr	r3, [pc, #296]	; (8014400 <SwitchClass+0x1d4>)
 80142d6:	f8d3 2484 	ldr.w	r2, [r3, #1156]	; 0x484
 80142da:	f997 300e 	ldrsb.w	r3, [r7, #14]
 80142de:	212c      	movs	r1, #44	; 0x2c
 80142e0:	fb01 f303 	mul.w	r3, r1, r3
 80142e4:	4413      	add	r3, r2
 80142e6:	3352      	adds	r3, #82	; 0x52
 80142e8:	781b      	ldrb	r3, [r3, #0]
 80142ea:	2b00      	cmp	r3, #0
 80142ec:	d048      	beq.n	8014380 <SwitchClass+0x154>
                    {
                        MacCtx.NvmCtx->MacParams.RxCChannel.Frequency = MacCtx.NvmCtx->MulticastChannelList[i].ChannelParams.RxParams.ClassC.Frequency;
 80142ee:	4b44      	ldr	r3, [pc, #272]	; (8014400 <SwitchClass+0x1d4>)
 80142f0:	f8d3 1484 	ldr.w	r1, [r3, #1156]	; 0x484
 80142f4:	f997 200e 	ldrsb.w	r2, [r7, #14]
 80142f8:	4b41      	ldr	r3, [pc, #260]	; (8014400 <SwitchClass+0x1d4>)
 80142fa:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 80142fe:	202c      	movs	r0, #44	; 0x2c
 8014300:	fb00 f202 	mul.w	r2, r0, r2
 8014304:	440a      	add	r2, r1
 8014306:	3268      	adds	r2, #104	; 0x68
 8014308:	6812      	ldr	r2, [r2, #0]
 801430a:	f8c3 20b0 	str.w	r2, [r3, #176]	; 0xb0
                        MacCtx.NvmCtx->MacParams.RxCChannel.Datarate = MacCtx.NvmCtx->MulticastChannelList[i].ChannelParams.RxParams.ClassC.Datarate;
 801430e:	4b3c      	ldr	r3, [pc, #240]	; (8014400 <SwitchClass+0x1d4>)
 8014310:	f8d3 2484 	ldr.w	r2, [r3, #1156]	; 0x484
 8014314:	f997 300e 	ldrsb.w	r3, [r7, #14]
 8014318:	212c      	movs	r1, #44	; 0x2c
 801431a:	fb01 f303 	mul.w	r3, r1, r3
 801431e:	4413      	add	r3, r2
 8014320:	336c      	adds	r3, #108	; 0x6c
 8014322:	f993 2000 	ldrsb.w	r2, [r3]
 8014326:	4b36      	ldr	r3, [pc, #216]	; (8014400 <SwitchClass+0x1d4>)
 8014328:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 801432c:	b2d2      	uxtb	r2, r2
 801432e:	f883 20b4 	strb.w	r2, [r3, #180]	; 0xb4

                        MacCtx.RxWindowCConfig.Channel = MacCtx.Channel;
 8014332:	4b33      	ldr	r3, [pc, #204]	; (8014400 <SwitchClass+0x1d4>)
 8014334:	f893 2415 	ldrb.w	r2, [r3, #1045]	; 0x415
 8014338:	4b31      	ldr	r3, [pc, #196]	; (8014400 <SwitchClass+0x1d4>)
 801433a:	f883 23e0 	strb.w	r2, [r3, #992]	; 0x3e0
                        MacCtx.RxWindowCConfig.Frequency = MacCtx.NvmCtx->MacParams.RxCChannel.Frequency;
 801433e:	4b30      	ldr	r3, [pc, #192]	; (8014400 <SwitchClass+0x1d4>)
 8014340:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8014344:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 8014348:	4a2d      	ldr	r2, [pc, #180]	; (8014400 <SwitchClass+0x1d4>)
 801434a:	f8c2 33e4 	str.w	r3, [r2, #996]	; 0x3e4
                        MacCtx.RxWindowCConfig.DownlinkDwellTime = MacCtx.NvmCtx->MacParams.DownlinkDwellTime;
 801434e:	4b2c      	ldr	r3, [pc, #176]	; (8014400 <SwitchClass+0x1d4>)
 8014350:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8014354:	f893 20b9 	ldrb.w	r2, [r3, #185]	; 0xb9
 8014358:	4b29      	ldr	r3, [pc, #164]	; (8014400 <SwitchClass+0x1d4>)
 801435a:	f883 23f0 	strb.w	r2, [r3, #1008]	; 0x3f0
                        MacCtx.RxWindowCConfig.RepeaterSupport = MacCtx.NvmCtx->RepeaterSupport;
 801435e:	4b28      	ldr	r3, [pc, #160]	; (8014400 <SwitchClass+0x1d4>)
 8014360:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8014364:	f893 20ca 	ldrb.w	r2, [r3, #202]	; 0xca
 8014368:	4b25      	ldr	r3, [pc, #148]	; (8014400 <SwitchClass+0x1d4>)
 801436a:	f883 23f1 	strb.w	r2, [r3, #1009]	; 0x3f1
                        MacCtx.RxWindowCConfig.RxSlot = RX_SLOT_WIN_CLASS_C_MULTICAST;
 801436e:	4b24      	ldr	r3, [pc, #144]	; (8014400 <SwitchClass+0x1d4>)
 8014370:	2203      	movs	r2, #3
 8014372:	f883 23f3 	strb.w	r2, [r3, #1011]	; 0x3f3
                        MacCtx.RxWindowCConfig.RxContinuous = true;
 8014376:	4b22      	ldr	r3, [pc, #136]	; (8014400 <SwitchClass+0x1d4>)
 8014378:	2201      	movs	r2, #1
 801437a:	f883 23f2 	strb.w	r2, [r3, #1010]	; 0x3f2
                        break;
 801437e:	e009      	b.n	8014394 <SwitchClass+0x168>
                for( int8_t i = 0; i < LORAMAC_MAX_MC_CTX; i++ )
 8014380:	f997 300e 	ldrsb.w	r3, [r7, #14]
 8014384:	b2db      	uxtb	r3, r3
 8014386:	3301      	adds	r3, #1
 8014388:	b2db      	uxtb	r3, r3
 801438a:	73bb      	strb	r3, [r7, #14]
 801438c:	f997 300e 	ldrsb.w	r3, [r7, #14]
 8014390:	2b00      	cmp	r3, #0
 8014392:	dd9f      	ble.n	80142d4 <SwitchClass+0xa8>
                    }
                }

                // Set the NodeAckRequested indicator to default
                MacCtx.NodeAckRequested = false;
 8014394:	4b1a      	ldr	r3, [pc, #104]	; (8014400 <SwitchClass+0x1d4>)
 8014396:	2200      	movs	r2, #0
 8014398:	f883 2414 	strb.w	r2, [r3, #1044]	; 0x414
                // Set the radio into sleep mode in case we are still in RX mode
                Radio.Sleep( );
 801439c:	4b19      	ldr	r3, [pc, #100]	; (8014404 <SwitchClass+0x1d8>)
 801439e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80143a0:	4798      	blx	r3

                OpenContinuousRxCWindow( );
 80143a2:	f001 fa43 	bl	801582c <OpenContinuousRxCWindow>

                status = LORAMAC_STATUS_OK;
 80143a6:	2300      	movs	r3, #0
 80143a8:	73fb      	strb	r3, [r7, #15]
            }
            break;
 80143aa:	e01e      	b.n	80143ea <SwitchClass+0x1be>
        }
        case CLASS_B:
        {
            status = LoRaMacClassBSwitchClass( deviceClass );
 80143ac:	79fb      	ldrb	r3, [r7, #7]
 80143ae:	4618      	mov	r0, r3
 80143b0:	f003 fc90 	bl	8017cd4 <LoRaMacClassBSwitchClass>
 80143b4:	4603      	mov	r3, r0
 80143b6:	73fb      	strb	r3, [r7, #15]
            if( status == LORAMAC_STATUS_OK )
 80143b8:	7bfb      	ldrb	r3, [r7, #15]
 80143ba:	2b00      	cmp	r3, #0
 80143bc:	d117      	bne.n	80143ee <SwitchClass+0x1c2>
            {
                MacCtx.NvmCtx->DeviceClass = deviceClass;
 80143be:	4b10      	ldr	r3, [pc, #64]	; (8014400 <SwitchClass+0x1d4>)
 80143c0:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 80143c4:	79fa      	ldrb	r2, [r7, #7]
 80143c6:	f883 207c 	strb.w	r2, [r3, #124]	; 0x7c
            }
            break;
 80143ca:	e010      	b.n	80143ee <SwitchClass+0x1c2>
        }
        case CLASS_C:
        {
            if( deviceClass == CLASS_A )
 80143cc:	79fb      	ldrb	r3, [r7, #7]
 80143ce:	2b00      	cmp	r3, #0
 80143d0:	d10f      	bne.n	80143f2 <SwitchClass+0x1c6>
            {
                MacCtx.NvmCtx->DeviceClass = deviceClass;
 80143d2:	4b0b      	ldr	r3, [pc, #44]	; (8014400 <SwitchClass+0x1d4>)
 80143d4:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 80143d8:	79fa      	ldrb	r2, [r7, #7]
 80143da:	f883 207c 	strb.w	r2, [r3, #124]	; 0x7c

                // Set the radio into sleep to setup a defined state
                Radio.Sleep( );
 80143de:	4b09      	ldr	r3, [pc, #36]	; (8014404 <SwitchClass+0x1d8>)
 80143e0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80143e2:	4798      	blx	r3

                status = LORAMAC_STATUS_OK;
 80143e4:	2300      	movs	r3, #0
 80143e6:	73fb      	strb	r3, [r7, #15]
            }
            break;
 80143e8:	e003      	b.n	80143f2 <SwitchClass+0x1c6>
            break;
 80143ea:	bf00      	nop
 80143ec:	e002      	b.n	80143f4 <SwitchClass+0x1c8>
            break;
 80143ee:	bf00      	nop
 80143f0:	e000      	b.n	80143f4 <SwitchClass+0x1c8>
            break;
 80143f2:	bf00      	nop
        }
    }

    return status;
 80143f4:	7bfb      	ldrb	r3, [r7, #15]
}
 80143f6:	4618      	mov	r0, r3
 80143f8:	3710      	adds	r7, #16
 80143fa:	46bd      	mov	sp, r7
 80143fc:	bdb0      	pop	{r4, r5, r7, pc}
 80143fe:	bf00      	nop
 8014400:	20000be0 	.word	0x20000be0
 8014404:	0802683c 	.word	0x0802683c

08014408 <GetMaxAppPayloadWithoutFOptsLength>:

static uint8_t GetMaxAppPayloadWithoutFOptsLength( int8_t datarate )
{
 8014408:	b580      	push	{r7, lr}
 801440a:	b086      	sub	sp, #24
 801440c:	af00      	add	r7, sp, #0
 801440e:	4603      	mov	r3, r0
 8014410:	71fb      	strb	r3, [r7, #7]
    GetPhyParams_t getPhy;
    PhyParam_t phyParam;

    // Setup PHY request
    getPhy.UplinkDwellTime = MacCtx.NvmCtx->MacParams.UplinkDwellTime;
 8014412:	4b12      	ldr	r3, [pc, #72]	; (801445c <GetMaxAppPayloadWithoutFOptsLength+0x54>)
 8014414:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8014418:	f893 30b8 	ldrb.w	r3, [r3, #184]	; 0xb8
 801441c:	74bb      	strb	r3, [r7, #18]
    getPhy.Datarate = datarate;
 801441e:	79fb      	ldrb	r3, [r7, #7]
 8014420:	747b      	strb	r3, [r7, #17]
    getPhy.Attribute = PHY_MAX_PAYLOAD;
 8014422:	230d      	movs	r3, #13
 8014424:	743b      	strb	r3, [r7, #16]

    // Get the maximum payload length
    if( MacCtx.NvmCtx->RepeaterSupport == true )
 8014426:	4b0d      	ldr	r3, [pc, #52]	; (801445c <GetMaxAppPayloadWithoutFOptsLength+0x54>)
 8014428:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 801442c:	f893 30ca 	ldrb.w	r3, [r3, #202]	; 0xca
 8014430:	2b00      	cmp	r3, #0
 8014432:	d001      	beq.n	8014438 <GetMaxAppPayloadWithoutFOptsLength+0x30>
    {
        getPhy.Attribute = PHY_MAX_PAYLOAD_REPEATER;
 8014434:	230e      	movs	r3, #14
 8014436:	743b      	strb	r3, [r7, #16]
    }

    phyParam = RegionGetPhyParam( MacCtx.NvmCtx->Region, &getPhy );
 8014438:	4b08      	ldr	r3, [pc, #32]	; (801445c <GetMaxAppPayloadWithoutFOptsLength+0x54>)
 801443a:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 801443e:	781b      	ldrb	r3, [r3, #0]
 8014440:	f107 0210 	add.w	r2, r7, #16
 8014444:	4611      	mov	r1, r2
 8014446:	4618      	mov	r0, r3
 8014448:	f005 fbb9 	bl	8019bbe <RegionGetPhyParam>
 801444c:	4603      	mov	r3, r0
 801444e:	60fb      	str	r3, [r7, #12]

    return phyParam.Value;
 8014450:	68fb      	ldr	r3, [r7, #12]
 8014452:	b2db      	uxtb	r3, r3
}
 8014454:	4618      	mov	r0, r3
 8014456:	3718      	adds	r7, #24
 8014458:	46bd      	mov	sp, r7
 801445a:	bd80      	pop	{r7, pc}
 801445c:	20000be0 	.word	0x20000be0

08014460 <ValidatePayloadLength>:

static bool ValidatePayloadLength( uint8_t lenN, int8_t datarate, uint8_t fOptsLen )
{
 8014460:	b580      	push	{r7, lr}
 8014462:	b084      	sub	sp, #16
 8014464:	af00      	add	r7, sp, #0
 8014466:	4603      	mov	r3, r0
 8014468:	71fb      	strb	r3, [r7, #7]
 801446a:	460b      	mov	r3, r1
 801446c:	71bb      	strb	r3, [r7, #6]
 801446e:	4613      	mov	r3, r2
 8014470:	717b      	strb	r3, [r7, #5]
    uint16_t maxN = 0;
 8014472:	2300      	movs	r3, #0
 8014474:	81fb      	strh	r3, [r7, #14]
    uint16_t payloadSize = 0;
 8014476:	2300      	movs	r3, #0
 8014478:	81bb      	strh	r3, [r7, #12]

    maxN = GetMaxAppPayloadWithoutFOptsLength( datarate );
 801447a:	f997 3006 	ldrsb.w	r3, [r7, #6]
 801447e:	4618      	mov	r0, r3
 8014480:	f7ff ffc2 	bl	8014408 <GetMaxAppPayloadWithoutFOptsLength>
 8014484:	4603      	mov	r3, r0
 8014486:	81fb      	strh	r3, [r7, #14]

    // Calculate the resulting payload size
    payloadSize = ( lenN + fOptsLen );
 8014488:	79fb      	ldrb	r3, [r7, #7]
 801448a:	b29a      	uxth	r2, r3
 801448c:	797b      	ldrb	r3, [r7, #5]
 801448e:	b29b      	uxth	r3, r3
 8014490:	4413      	add	r3, r2
 8014492:	81bb      	strh	r3, [r7, #12]

    // Validation of the application payload size
    if( ( payloadSize <= maxN ) && ( payloadSize <= LORAMAC_PHY_MAXPAYLOAD ) )
 8014494:	89ba      	ldrh	r2, [r7, #12]
 8014496:	89fb      	ldrh	r3, [r7, #14]
 8014498:	429a      	cmp	r2, r3
 801449a:	d804      	bhi.n	80144a6 <ValidatePayloadLength+0x46>
 801449c:	89bb      	ldrh	r3, [r7, #12]
 801449e:	2bff      	cmp	r3, #255	; 0xff
 80144a0:	d801      	bhi.n	80144a6 <ValidatePayloadLength+0x46>
    {
        return true;
 80144a2:	2301      	movs	r3, #1
 80144a4:	e000      	b.n	80144a8 <ValidatePayloadLength+0x48>
    }
    return false;
 80144a6:	2300      	movs	r3, #0
}
 80144a8:	4618      	mov	r0, r3
 80144aa:	3710      	adds	r7, #16
 80144ac:	46bd      	mov	sp, r7
 80144ae:	bd80      	pop	{r7, pc}

080144b0 <SetMlmeScheduleUplinkIndication>:

static void SetMlmeScheduleUplinkIndication( void )
{
 80144b0:	b480      	push	{r7}
 80144b2:	af00      	add	r7, sp, #0
    MacCtx.MacFlags.Bits.MlmeSchedUplinkInd = 1;
 80144b4:	4a05      	ldr	r2, [pc, #20]	; (80144cc <SetMlmeScheduleUplinkIndication+0x1c>)
 80144b6:	f892 3481 	ldrb.w	r3, [r2, #1153]	; 0x481
 80144ba:	f043 0310 	orr.w	r3, r3, #16
 80144be:	f882 3481 	strb.w	r3, [r2, #1153]	; 0x481
}
 80144c2:	bf00      	nop
 80144c4:	46bd      	mov	sp, r7
 80144c6:	bc80      	pop	{r7}
 80144c8:	4770      	bx	lr
 80144ca:	bf00      	nop
 80144cc:	20000be0 	.word	0x20000be0

080144d0 <ProcessMacCommands>:

static void ProcessMacCommands( uint8_t *payload, uint8_t macIndex, uint8_t commandsSize, int8_t snr, LoRaMacRxSlot_t rxSlot )
{
 80144d0:	b590      	push	{r4, r7, lr}
 80144d2:	b0a5      	sub	sp, #148	; 0x94
 80144d4:	af02      	add	r7, sp, #8
 80144d6:	6078      	str	r0, [r7, #4]
 80144d8:	4608      	mov	r0, r1
 80144da:	4611      	mov	r1, r2
 80144dc:	461a      	mov	r2, r3
 80144de:	4603      	mov	r3, r0
 80144e0:	70fb      	strb	r3, [r7, #3]
 80144e2:	460b      	mov	r3, r1
 80144e4:	70bb      	strb	r3, [r7, #2]
 80144e6:	4613      	mov	r3, r2
 80144e8:	707b      	strb	r3, [r7, #1]
    uint8_t status = 0;
 80144ea:	2300      	movs	r3, #0
 80144ec:	f887 306b 	strb.w	r3, [r7, #107]	; 0x6b
    bool adrBlockFound = false;
 80144f0:	2300      	movs	r3, #0
 80144f2:	f887 3087 	strb.w	r3, [r7, #135]	; 0x87
    uint8_t macCmdPayload[2] = { 0x00, 0x00 };
 80144f6:	2300      	movs	r3, #0
 80144f8:	f8a7 3068 	strh.w	r3, [r7, #104]	; 0x68

    while( macIndex < commandsSize )
 80144fc:	f000 bca5 	b.w	8014e4a <ProcessMacCommands+0x97a>
    {
        // Make sure to parse only complete MAC commands
        if( ( LoRaMacCommandsGetCmdSize( payload[macIndex] ) + macIndex ) > commandsSize )
 8014500:	78fb      	ldrb	r3, [r7, #3]
 8014502:	687a      	ldr	r2, [r7, #4]
 8014504:	4413      	add	r3, r2
 8014506:	781b      	ldrb	r3, [r3, #0]
 8014508:	4618      	mov	r0, r3
 801450a:	f003 fef1 	bl	80182f0 <LoRaMacCommandsGetCmdSize>
 801450e:	4603      	mov	r3, r0
 8014510:	461a      	mov	r2, r3
 8014512:	78fb      	ldrb	r3, [r7, #3]
 8014514:	441a      	add	r2, r3
 8014516:	78bb      	ldrb	r3, [r7, #2]
 8014518:	429a      	cmp	r2, r3
 801451a:	f300 849c 	bgt.w	8014e56 <ProcessMacCommands+0x986>
        {
            return;
        }

        // Decode Frame MAC commands
        switch( payload[macIndex++] )
 801451e:	78fb      	ldrb	r3, [r7, #3]
 8014520:	1c5a      	adds	r2, r3, #1
 8014522:	70fa      	strb	r2, [r7, #3]
 8014524:	461a      	mov	r2, r3
 8014526:	687b      	ldr	r3, [r7, #4]
 8014528:	4413      	add	r3, r2
 801452a:	781b      	ldrb	r3, [r3, #0]
 801452c:	3b02      	subs	r3, #2
 801452e:	2b11      	cmp	r3, #17
 8014530:	f200 8493 	bhi.w	8014e5a <ProcessMacCommands+0x98a>
 8014534:	a201      	add	r2, pc, #4	; (adr r2, 801453c <ProcessMacCommands+0x6c>)
 8014536:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 801453a:	bf00      	nop
 801453c:	08014585 	.word	0x08014585
 8014540:	080145c7 	.word	0x080145c7
 8014544:	0801470b 	.word	0x0801470b
 8014548:	08014757 	.word	0x08014757
 801454c:	08014861 	.word	0x08014861
 8014550:	080148b9 	.word	0x080148b9
 8014554:	0801496b 	.word	0x0801496b
 8014558:	080149d5 	.word	0x080149d5
 801455c:	08014ad7 	.word	0x08014ad7
 8014560:	08014e5b 	.word	0x08014e5b
 8014564:	08014e5b 	.word	0x08014e5b
 8014568:	08014b75 	.word	0x08014b75
 801456c:	08014e5b 	.word	0x08014e5b
 8014570:	08014e5b 	.word	0x08014e5b
 8014574:	08014c8b 	.word	0x08014c8b
 8014578:	08014cbf 	.word	0x08014cbf
 801457c:	08014d4f 	.word	0x08014d4f
 8014580:	08014dc5 	.word	0x08014dc5
        {
            case SRV_MAC_LINK_CHECK_ANS:
            {
                if( LoRaMacConfirmQueueIsCmdActive( MLME_LINK_CHECK ) == true )
 8014584:	2004      	movs	r0, #4
 8014586:	f004 f8bd 	bl	8018704 <LoRaMacConfirmQueueIsCmdActive>
 801458a:	4603      	mov	r3, r0
 801458c:	2b00      	cmp	r3, #0
 801458e:	f000 845c 	beq.w	8014e4a <ProcessMacCommands+0x97a>
                {
                    LoRaMacConfirmQueueSetStatus( LORAMAC_EVENT_INFO_STATUS_OK, MLME_LINK_CHECK );
 8014592:	2104      	movs	r1, #4
 8014594:	2000      	movs	r0, #0
 8014596:	f004 f829 	bl	80185ec <LoRaMacConfirmQueueSetStatus>
                    MacCtx.MlmeConfirm.DemodMargin = payload[macIndex++];
 801459a:	78fb      	ldrb	r3, [r7, #3]
 801459c:	1c5a      	adds	r2, r3, #1
 801459e:	70fa      	strb	r2, [r7, #3]
 80145a0:	461a      	mov	r2, r3
 80145a2:	687b      	ldr	r3, [r7, #4]
 80145a4:	4413      	add	r3, r2
 80145a6:	781a      	ldrb	r2, [r3, #0]
 80145a8:	4bc1      	ldr	r3, [pc, #772]	; (80148b0 <ProcessMacCommands+0x3e0>)
 80145aa:	f883 2458 	strb.w	r2, [r3, #1112]	; 0x458
                    MacCtx.MlmeConfirm.NbGateways = payload[macIndex++];
 80145ae:	78fb      	ldrb	r3, [r7, #3]
 80145b0:	1c5a      	adds	r2, r3, #1
 80145b2:	70fa      	strb	r2, [r7, #3]
 80145b4:	461a      	mov	r2, r3
 80145b6:	687b      	ldr	r3, [r7, #4]
 80145b8:	4413      	add	r3, r2
 80145ba:	781a      	ldrb	r2, [r3, #0]
 80145bc:	4bbc      	ldr	r3, [pc, #752]	; (80148b0 <ProcessMacCommands+0x3e0>)
 80145be:	f883 2459 	strb.w	r2, [r3, #1113]	; 0x459
                }
                break;
 80145c2:	f000 bc42 	b.w	8014e4a <ProcessMacCommands+0x97a>
            }
            case SRV_MAC_LINK_ADR_REQ:
            {
                LinkAdrReqParams_t linkAdrReq;
                int8_t linkAdrDatarate = DR_0;
 80145c6:	2300      	movs	r3, #0
 80145c8:	f887 3057 	strb.w	r3, [r7, #87]	; 0x57
                int8_t linkAdrTxPower = TX_POWER_0;
 80145cc:	2300      	movs	r3, #0
 80145ce:	f887 3056 	strb.w	r3, [r7, #86]	; 0x56
                uint8_t linkAdrNbRep = 0;
 80145d2:	2300      	movs	r3, #0
 80145d4:	f887 3055 	strb.w	r3, [r7, #85]	; 0x55
                uint8_t linkAdrNbBytesParsed = 0;
 80145d8:	2300      	movs	r3, #0
 80145da:	f887 3054 	strb.w	r3, [r7, #84]	; 0x54

                if( adrBlockFound == false )
 80145de:	f897 3087 	ldrb.w	r3, [r7, #135]	; 0x87
 80145e2:	f083 0301 	eor.w	r3, r3, #1
 80145e6:	b2db      	uxtb	r3, r3
 80145e8:	2b00      	cmp	r3, #0
 80145ea:	f000 808c 	beq.w	8014706 <ProcessMacCommands+0x236>
                {
                    adrBlockFound = true;
 80145ee:	2301      	movs	r3, #1
 80145f0:	f887 3087 	strb.w	r3, [r7, #135]	; 0x87

                    // Fill parameter structure
                    linkAdrReq.Payload = &payload[macIndex - 1];
 80145f4:	78fb      	ldrb	r3, [r7, #3]
 80145f6:	3b01      	subs	r3, #1
 80145f8:	687a      	ldr	r2, [r7, #4]
 80145fa:	4413      	add	r3, r2
 80145fc:	65fb      	str	r3, [r7, #92]	; 0x5c
                    linkAdrReq.PayloadSize = commandsSize - ( macIndex - 1 );
 80145fe:	78ba      	ldrb	r2, [r7, #2]
 8014600:	78fb      	ldrb	r3, [r7, #3]
 8014602:	1ad3      	subs	r3, r2, r3
 8014604:	b2db      	uxtb	r3, r3
 8014606:	3301      	adds	r3, #1
 8014608:	b2db      	uxtb	r3, r3
 801460a:	f887 3060 	strb.w	r3, [r7, #96]	; 0x60
                    linkAdrReq.AdrEnabled = MacCtx.NvmCtx->AdrCtrlOn;
 801460e:	4ba8      	ldr	r3, [pc, #672]	; (80148b0 <ProcessMacCommands+0x3e0>)
 8014610:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8014614:	f893 307e 	ldrb.w	r3, [r3, #126]	; 0x7e
 8014618:	f887 3062 	strb.w	r3, [r7, #98]	; 0x62
                    linkAdrReq.UplinkDwellTime = MacCtx.NvmCtx->MacParams.UplinkDwellTime;
 801461c:	4ba4      	ldr	r3, [pc, #656]	; (80148b0 <ProcessMacCommands+0x3e0>)
 801461e:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8014622:	f893 30b8 	ldrb.w	r3, [r3, #184]	; 0xb8
 8014626:	f887 3061 	strb.w	r3, [r7, #97]	; 0x61
                    linkAdrReq.CurrentDatarate = MacCtx.NvmCtx->MacParams.ChannelsDatarate;
 801462a:	4ba1      	ldr	r3, [pc, #644]	; (80148b0 <ProcessMacCommands+0x3e0>)
 801462c:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8014630:	f993 3085 	ldrsb.w	r3, [r3, #133]	; 0x85
 8014634:	f887 3063 	strb.w	r3, [r7, #99]	; 0x63
                    linkAdrReq.CurrentTxPower = MacCtx.NvmCtx->MacParams.ChannelsTxPower;
 8014638:	4b9d      	ldr	r3, [pc, #628]	; (80148b0 <ProcessMacCommands+0x3e0>)
 801463a:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 801463e:	f993 3084 	ldrsb.w	r3, [r3, #132]	; 0x84
 8014642:	f887 3064 	strb.w	r3, [r7, #100]	; 0x64
                    linkAdrReq.CurrentNbRep = MacCtx.NvmCtx->MacParams.ChannelsNbTrans;
 8014646:	4b9a      	ldr	r3, [pc, #616]	; (80148b0 <ProcessMacCommands+0x3e0>)
 8014648:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 801464c:	f893 30a4 	ldrb.w	r3, [r3, #164]	; 0xa4
 8014650:	f887 3065 	strb.w	r3, [r7, #101]	; 0x65
                    linkAdrReq.Version = MacCtx.NvmCtx->Version;
 8014654:	4b96      	ldr	r3, [pc, #600]	; (80148b0 <ProcessMacCommands+0x3e0>)
 8014656:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 801465a:	f8d3 3160 	ldr.w	r3, [r3, #352]	; 0x160
 801465e:	65bb      	str	r3, [r7, #88]	; 0x58

                    // Process the ADR requests
                    status = RegionLinkAdrReq( MacCtx.NvmCtx->Region, &linkAdrReq, &linkAdrDatarate,
 8014660:	4b93      	ldr	r3, [pc, #588]	; (80148b0 <ProcessMacCommands+0x3e0>)
 8014662:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8014666:	7818      	ldrb	r0, [r3, #0]
 8014668:	f107 0456 	add.w	r4, r7, #86	; 0x56
 801466c:	f107 0257 	add.w	r2, r7, #87	; 0x57
 8014670:	f107 0158 	add.w	r1, r7, #88	; 0x58
 8014674:	f107 0354 	add.w	r3, r7, #84	; 0x54
 8014678:	9301      	str	r3, [sp, #4]
 801467a:	f107 0355 	add.w	r3, r7, #85	; 0x55
 801467e:	9300      	str	r3, [sp, #0]
 8014680:	4623      	mov	r3, r4
 8014682:	f005 fbbf 	bl	8019e04 <RegionLinkAdrReq>
 8014686:	4603      	mov	r3, r0
 8014688:	f887 306b 	strb.w	r3, [r7, #107]	; 0x6b
                                               &linkAdrTxPower, &linkAdrNbRep, &linkAdrNbBytesParsed );

                    if( ( status & 0x07 ) == 0x07 )
 801468c:	f897 306b 	ldrb.w	r3, [r7, #107]	; 0x6b
 8014690:	f003 0307 	and.w	r3, r3, #7
 8014694:	2b07      	cmp	r3, #7
 8014696:	d114      	bne.n	80146c2 <ProcessMacCommands+0x1f2>
                    {
                        MacCtx.NvmCtx->MacParams.ChannelsDatarate = linkAdrDatarate;
 8014698:	4b85      	ldr	r3, [pc, #532]	; (80148b0 <ProcessMacCommands+0x3e0>)
 801469a:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 801469e:	f997 2057 	ldrsb.w	r2, [r7, #87]	; 0x57
 80146a2:	f883 2085 	strb.w	r2, [r3, #133]	; 0x85
                        MacCtx.NvmCtx->MacParams.ChannelsTxPower = linkAdrTxPower;
 80146a6:	4b82      	ldr	r3, [pc, #520]	; (80148b0 <ProcessMacCommands+0x3e0>)
 80146a8:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 80146ac:	f997 2056 	ldrsb.w	r2, [r7, #86]	; 0x56
 80146b0:	f883 2084 	strb.w	r2, [r3, #132]	; 0x84
                        MacCtx.NvmCtx->MacParams.ChannelsNbTrans = linkAdrNbRep;
 80146b4:	4b7e      	ldr	r3, [pc, #504]	; (80148b0 <ProcessMacCommands+0x3e0>)
 80146b6:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 80146ba:	f897 2055 	ldrb.w	r2, [r7, #85]	; 0x55
 80146be:	f883 20a4 	strb.w	r2, [r3, #164]	; 0xa4
                    }

                    // Add the answers to the buffer
                    for( uint8_t i = 0; i < ( linkAdrNbBytesParsed / 5 ); i++ )
 80146c2:	2300      	movs	r3, #0
 80146c4:	f887 3086 	strb.w	r3, [r7, #134]	; 0x86
 80146c8:	e00b      	b.n	80146e2 <ProcessMacCommands+0x212>
                    {
                        LoRaMacCommandsAddCmd( MOTE_MAC_LINK_ADR_ANS, &status, 1 );
 80146ca:	f107 036b 	add.w	r3, r7, #107	; 0x6b
 80146ce:	2201      	movs	r2, #1
 80146d0:	4619      	mov	r1, r3
 80146d2:	2003      	movs	r0, #3
 80146d4:	f003 fcb4 	bl	8018040 <LoRaMacCommandsAddCmd>
                    for( uint8_t i = 0; i < ( linkAdrNbBytesParsed / 5 ); i++ )
 80146d8:	f897 3086 	ldrb.w	r3, [r7, #134]	; 0x86
 80146dc:	3301      	adds	r3, #1
 80146de:	f887 3086 	strb.w	r3, [r7, #134]	; 0x86
 80146e2:	f897 3054 	ldrb.w	r3, [r7, #84]	; 0x54
 80146e6:	4a73      	ldr	r2, [pc, #460]	; (80148b4 <ProcessMacCommands+0x3e4>)
 80146e8:	fba2 2303 	umull	r2, r3, r2, r3
 80146ec:	089b      	lsrs	r3, r3, #2
 80146ee:	b2db      	uxtb	r3, r3
 80146f0:	f897 2086 	ldrb.w	r2, [r7, #134]	; 0x86
 80146f4:	429a      	cmp	r2, r3
 80146f6:	d3e8      	bcc.n	80146ca <ProcessMacCommands+0x1fa>
                    }
                    // Update MAC index
                    macIndex += linkAdrNbBytesParsed - 1;
 80146f8:	f897 2054 	ldrb.w	r2, [r7, #84]	; 0x54
 80146fc:	78fb      	ldrb	r3, [r7, #3]
 80146fe:	4413      	add	r3, r2
 8014700:	b2db      	uxtb	r3, r3
 8014702:	3b01      	subs	r3, #1
 8014704:	70fb      	strb	r3, [r7, #3]
                }
                break;
 8014706:	bf00      	nop
 8014708:	e39f      	b.n	8014e4a <ProcessMacCommands+0x97a>
            }
            case SRV_MAC_DUTY_CYCLE_REQ:
            {
                MacCtx.NvmCtx->MaxDCycle = payload[macIndex++] & 0x0F;
 801470a:	78fb      	ldrb	r3, [r7, #3]
 801470c:	1c5a      	adds	r2, r3, #1
 801470e:	70fa      	strb	r2, [r7, #3]
 8014710:	461a      	mov	r2, r3
 8014712:	687b      	ldr	r3, [r7, #4]
 8014714:	4413      	add	r3, r2
 8014716:	781a      	ldrb	r2, [r3, #0]
 8014718:	4b65      	ldr	r3, [pc, #404]	; (80148b0 <ProcessMacCommands+0x3e0>)
 801471a:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 801471e:	f002 020f 	and.w	r2, r2, #15
 8014722:	b2d2      	uxtb	r2, r2
 8014724:	f883 20c8 	strb.w	r2, [r3, #200]	; 0xc8
                MacCtx.NvmCtx->AggregatedDCycle = 1 << MacCtx.NvmCtx->MaxDCycle;
 8014728:	4b61      	ldr	r3, [pc, #388]	; (80148b0 <ProcessMacCommands+0x3e0>)
 801472a:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 801472e:	f893 30c8 	ldrb.w	r3, [r3, #200]	; 0xc8
 8014732:	461a      	mov	r2, r3
 8014734:	2301      	movs	r3, #1
 8014736:	fa03 f202 	lsl.w	r2, r3, r2
 801473a:	4b5d      	ldr	r3, [pc, #372]	; (80148b0 <ProcessMacCommands+0x3e0>)
 801473c:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8014740:	b292      	uxth	r2, r2
 8014742:	f8a3 214c 	strh.w	r2, [r3, #332]	; 0x14c
                LoRaMacCommandsAddCmd( MOTE_MAC_DUTY_CYCLE_ANS, macCmdPayload, 0 );
 8014746:	f107 0368 	add.w	r3, r7, #104	; 0x68
 801474a:	2200      	movs	r2, #0
 801474c:	4619      	mov	r1, r3
 801474e:	2004      	movs	r0, #4
 8014750:	f003 fc76 	bl	8018040 <LoRaMacCommandsAddCmd>
                break;
 8014754:	e379      	b.n	8014e4a <ProcessMacCommands+0x97a>
            }
            case SRV_MAC_RX_PARAM_SETUP_REQ:
            {
                RxParamSetupReqParams_t rxParamSetupReq;
                status = 0x07;
 8014756:	2307      	movs	r3, #7
 8014758:	f887 306b 	strb.w	r3, [r7, #107]	; 0x6b

                rxParamSetupReq.DrOffset = ( payload[macIndex] >> 4 ) & 0x07;
 801475c:	78fb      	ldrb	r3, [r7, #3]
 801475e:	687a      	ldr	r2, [r7, #4]
 8014760:	4413      	add	r3, r2
 8014762:	781b      	ldrb	r3, [r3, #0]
 8014764:	091b      	lsrs	r3, r3, #4
 8014766:	b2db      	uxtb	r3, r3
 8014768:	b25b      	sxtb	r3, r3
 801476a:	f003 0307 	and.w	r3, r3, #7
 801476e:	b25b      	sxtb	r3, r3
 8014770:	f887 304d 	strb.w	r3, [r7, #77]	; 0x4d
                rxParamSetupReq.Datarate = payload[macIndex] & 0x0F;
 8014774:	78fb      	ldrb	r3, [r7, #3]
 8014776:	687a      	ldr	r2, [r7, #4]
 8014778:	4413      	add	r3, r2
 801477a:	781b      	ldrb	r3, [r3, #0]
 801477c:	b25b      	sxtb	r3, r3
 801477e:	f003 030f 	and.w	r3, r3, #15
 8014782:	b25b      	sxtb	r3, r3
 8014784:	f887 304c 	strb.w	r3, [r7, #76]	; 0x4c
                macIndex++;
 8014788:	78fb      	ldrb	r3, [r7, #3]
 801478a:	3301      	adds	r3, #1
 801478c:	70fb      	strb	r3, [r7, #3]

                rxParamSetupReq.Frequency = ( uint32_t ) payload[macIndex++];
 801478e:	78fb      	ldrb	r3, [r7, #3]
 8014790:	1c5a      	adds	r2, r3, #1
 8014792:	70fa      	strb	r2, [r7, #3]
 8014794:	461a      	mov	r2, r3
 8014796:	687b      	ldr	r3, [r7, #4]
 8014798:	4413      	add	r3, r2
 801479a:	781b      	ldrb	r3, [r3, #0]
 801479c:	653b      	str	r3, [r7, #80]	; 0x50
                rxParamSetupReq.Frequency |= ( uint32_t ) payload[macIndex++] << 8;
 801479e:	78fb      	ldrb	r3, [r7, #3]
 80147a0:	1c5a      	adds	r2, r3, #1
 80147a2:	70fa      	strb	r2, [r7, #3]
 80147a4:	461a      	mov	r2, r3
 80147a6:	687b      	ldr	r3, [r7, #4]
 80147a8:	4413      	add	r3, r2
 80147aa:	781b      	ldrb	r3, [r3, #0]
 80147ac:	021a      	lsls	r2, r3, #8
 80147ae:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 80147b0:	4313      	orrs	r3, r2
 80147b2:	653b      	str	r3, [r7, #80]	; 0x50
                rxParamSetupReq.Frequency |= ( uint32_t ) payload[macIndex++] << 16;
 80147b4:	78fb      	ldrb	r3, [r7, #3]
 80147b6:	1c5a      	adds	r2, r3, #1
 80147b8:	70fa      	strb	r2, [r7, #3]
 80147ba:	461a      	mov	r2, r3
 80147bc:	687b      	ldr	r3, [r7, #4]
 80147be:	4413      	add	r3, r2
 80147c0:	781b      	ldrb	r3, [r3, #0]
 80147c2:	041a      	lsls	r2, r3, #16
 80147c4:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 80147c6:	4313      	orrs	r3, r2
 80147c8:	653b      	str	r3, [r7, #80]	; 0x50
                rxParamSetupReq.Frequency *= 100;
 80147ca:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 80147cc:	2264      	movs	r2, #100	; 0x64
 80147ce:	fb02 f303 	mul.w	r3, r2, r3
 80147d2:	653b      	str	r3, [r7, #80]	; 0x50

                // Perform request on region
                status = RegionRxParamSetupReq( MacCtx.NvmCtx->Region, &rxParamSetupReq );
 80147d4:	4b36      	ldr	r3, [pc, #216]	; (80148b0 <ProcessMacCommands+0x3e0>)
 80147d6:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 80147da:	781b      	ldrb	r3, [r3, #0]
 80147dc:	f107 024c 	add.w	r2, r7, #76	; 0x4c
 80147e0:	4611      	mov	r1, r2
 80147e2:	4618      	mov	r0, r3
 80147e4:	f005 fb35 	bl	8019e52 <RegionRxParamSetupReq>
 80147e8:	4603      	mov	r3, r0
 80147ea:	f887 306b 	strb.w	r3, [r7, #107]	; 0x6b

                if( ( status & 0x07 ) == 0x07 )
 80147ee:	f897 306b 	ldrb.w	r3, [r7, #107]	; 0x6b
 80147f2:	f003 0307 	and.w	r3, r3, #7
 80147f6:	2b07      	cmp	r3, #7
 80147f8:	d123      	bne.n	8014842 <ProcessMacCommands+0x372>
                {
                    MacCtx.NvmCtx->MacParams.Rx2Channel.Datarate = rxParamSetupReq.Datarate;
 80147fa:	f997 204c 	ldrsb.w	r2, [r7, #76]	; 0x4c
 80147fe:	4b2c      	ldr	r3, [pc, #176]	; (80148b0 <ProcessMacCommands+0x3e0>)
 8014800:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8014804:	b2d2      	uxtb	r2, r2
 8014806:	f883 20ac 	strb.w	r2, [r3, #172]	; 0xac
                    MacCtx.NvmCtx->MacParams.RxCChannel.Datarate = rxParamSetupReq.Datarate;
 801480a:	f997 204c 	ldrsb.w	r2, [r7, #76]	; 0x4c
 801480e:	4b28      	ldr	r3, [pc, #160]	; (80148b0 <ProcessMacCommands+0x3e0>)
 8014810:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8014814:	b2d2      	uxtb	r2, r2
 8014816:	f883 20b4 	strb.w	r2, [r3, #180]	; 0xb4
                    MacCtx.NvmCtx->MacParams.Rx2Channel.Frequency = rxParamSetupReq.Frequency;
 801481a:	4b25      	ldr	r3, [pc, #148]	; (80148b0 <ProcessMacCommands+0x3e0>)
 801481c:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8014820:	6d3a      	ldr	r2, [r7, #80]	; 0x50
 8014822:	f8c3 20a8 	str.w	r2, [r3, #168]	; 0xa8
                    MacCtx.NvmCtx->MacParams.RxCChannel.Frequency = rxParamSetupReq.Frequency;
 8014826:	4b22      	ldr	r3, [pc, #136]	; (80148b0 <ProcessMacCommands+0x3e0>)
 8014828:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 801482c:	6d3a      	ldr	r2, [r7, #80]	; 0x50
 801482e:	f8c3 20b0 	str.w	r2, [r3, #176]	; 0xb0
                    MacCtx.NvmCtx->MacParams.Rx1DrOffset = rxParamSetupReq.DrOffset;
 8014832:	f997 204d 	ldrsb.w	r2, [r7, #77]	; 0x4d
 8014836:	4b1e      	ldr	r3, [pc, #120]	; (80148b0 <ProcessMacCommands+0x3e0>)
 8014838:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 801483c:	b2d2      	uxtb	r2, r2
 801483e:	f883 20a5 	strb.w	r2, [r3, #165]	; 0xa5
                }
                macCmdPayload[0] = status;
 8014842:	f897 306b 	ldrb.w	r3, [r7, #107]	; 0x6b
 8014846:	f887 3068 	strb.w	r3, [r7, #104]	; 0x68
                LoRaMacCommandsAddCmd( MOTE_MAC_RX_PARAM_SETUP_ANS, macCmdPayload, 1 );
 801484a:	f107 0368 	add.w	r3, r7, #104	; 0x68
 801484e:	2201      	movs	r2, #1
 8014850:	4619      	mov	r1, r3
 8014852:	2005      	movs	r0, #5
 8014854:	f003 fbf4 	bl	8018040 <LoRaMacCommandsAddCmd>
                // Setup indication to inform the application
                SetMlmeScheduleUplinkIndication( );
 8014858:	f7ff fe2a 	bl	80144b0 <SetMlmeScheduleUplinkIndication>
                break;
 801485c:	bf00      	nop
 801485e:	e2f4      	b.n	8014e4a <ProcessMacCommands+0x97a>
            }
            case SRV_MAC_DEV_STATUS_REQ:
            {
                uint8_t batteryLevel = BAT_LEVEL_NO_MEASURE;
 8014860:	23ff      	movs	r3, #255	; 0xff
 8014862:	f887 3085 	strb.w	r3, [r7, #133]	; 0x85
                if( ( MacCtx.MacCallbacks != NULL ) && ( MacCtx.MacCallbacks->GetBatteryLevel != NULL ) )
 8014866:	4b12      	ldr	r3, [pc, #72]	; (80148b0 <ProcessMacCommands+0x3e0>)
 8014868:	f8d3 3348 	ldr.w	r3, [r3, #840]	; 0x348
 801486c:	2b00      	cmp	r3, #0
 801486e:	d00d      	beq.n	801488c <ProcessMacCommands+0x3bc>
 8014870:	4b0f      	ldr	r3, [pc, #60]	; (80148b0 <ProcessMacCommands+0x3e0>)
 8014872:	f8d3 3348 	ldr.w	r3, [r3, #840]	; 0x348
 8014876:	681b      	ldr	r3, [r3, #0]
 8014878:	2b00      	cmp	r3, #0
 801487a:	d007      	beq.n	801488c <ProcessMacCommands+0x3bc>
                {
                    batteryLevel = MacCtx.MacCallbacks->GetBatteryLevel( );
 801487c:	4b0c      	ldr	r3, [pc, #48]	; (80148b0 <ProcessMacCommands+0x3e0>)
 801487e:	f8d3 3348 	ldr.w	r3, [r3, #840]	; 0x348
 8014882:	681b      	ldr	r3, [r3, #0]
 8014884:	4798      	blx	r3
 8014886:	4603      	mov	r3, r0
 8014888:	f887 3085 	strb.w	r3, [r7, #133]	; 0x85
                }
                macCmdPayload[0] = batteryLevel;
 801488c:	f897 3085 	ldrb.w	r3, [r7, #133]	; 0x85
 8014890:	f887 3068 	strb.w	r3, [r7, #104]	; 0x68
                macCmdPayload[1] = ( uint8_t )( snr & 0x3F );
 8014894:	787b      	ldrb	r3, [r7, #1]
 8014896:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 801489a:	b2db      	uxtb	r3, r3
 801489c:	f887 3069 	strb.w	r3, [r7, #105]	; 0x69
                LoRaMacCommandsAddCmd( MOTE_MAC_DEV_STATUS_ANS, macCmdPayload, 2 );
 80148a0:	f107 0368 	add.w	r3, r7, #104	; 0x68
 80148a4:	2202      	movs	r2, #2
 80148a6:	4619      	mov	r1, r3
 80148a8:	2006      	movs	r0, #6
 80148aa:	f003 fbc9 	bl	8018040 <LoRaMacCommandsAddCmd>
                break;
 80148ae:	e2cc      	b.n	8014e4a <ProcessMacCommands+0x97a>
 80148b0:	20000be0 	.word	0x20000be0
 80148b4:	cccccccd 	.word	0xcccccccd
            }
            case SRV_MAC_NEW_CHANNEL_REQ:
            {
                NewChannelReqParams_t newChannelReq;
                ChannelParams_t chParam;
                status = 0x03;
 80148b8:	2303      	movs	r3, #3
 80148ba:	f887 306b 	strb.w	r3, [r7, #107]	; 0x6b

                newChannelReq.ChannelId = payload[macIndex++];
 80148be:	78fb      	ldrb	r3, [r7, #3]
 80148c0:	1c5a      	adds	r2, r3, #1
 80148c2:	70fa      	strb	r2, [r7, #3]
 80148c4:	461a      	mov	r2, r3
 80148c6:	687b      	ldr	r3, [r7, #4]
 80148c8:	4413      	add	r3, r2
 80148ca:	781b      	ldrb	r3, [r3, #0]
 80148cc:	b25b      	sxtb	r3, r3
 80148ce:	f887 3048 	strb.w	r3, [r7, #72]	; 0x48
                newChannelReq.NewChannel = &chParam;
 80148d2:	f107 0338 	add.w	r3, r7, #56	; 0x38
 80148d6:	647b      	str	r3, [r7, #68]	; 0x44

                chParam.Frequency = ( uint32_t ) payload[macIndex++];
 80148d8:	78fb      	ldrb	r3, [r7, #3]
 80148da:	1c5a      	adds	r2, r3, #1
 80148dc:	70fa      	strb	r2, [r7, #3]
 80148de:	461a      	mov	r2, r3
 80148e0:	687b      	ldr	r3, [r7, #4]
 80148e2:	4413      	add	r3, r2
 80148e4:	781b      	ldrb	r3, [r3, #0]
 80148e6:	63bb      	str	r3, [r7, #56]	; 0x38
                chParam.Frequency |= ( uint32_t ) payload[macIndex++] << 8;
 80148e8:	78fb      	ldrb	r3, [r7, #3]
 80148ea:	1c5a      	adds	r2, r3, #1
 80148ec:	70fa      	strb	r2, [r7, #3]
 80148ee:	461a      	mov	r2, r3
 80148f0:	687b      	ldr	r3, [r7, #4]
 80148f2:	4413      	add	r3, r2
 80148f4:	781b      	ldrb	r3, [r3, #0]
 80148f6:	021a      	lsls	r2, r3, #8
 80148f8:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80148fa:	4313      	orrs	r3, r2
 80148fc:	63bb      	str	r3, [r7, #56]	; 0x38
                chParam.Frequency |= ( uint32_t ) payload[macIndex++] << 16;
 80148fe:	78fb      	ldrb	r3, [r7, #3]
 8014900:	1c5a      	adds	r2, r3, #1
 8014902:	70fa      	strb	r2, [r7, #3]
 8014904:	461a      	mov	r2, r3
 8014906:	687b      	ldr	r3, [r7, #4]
 8014908:	4413      	add	r3, r2
 801490a:	781b      	ldrb	r3, [r3, #0]
 801490c:	041a      	lsls	r2, r3, #16
 801490e:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8014910:	4313      	orrs	r3, r2
 8014912:	63bb      	str	r3, [r7, #56]	; 0x38
                chParam.Frequency *= 100;
 8014914:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8014916:	2264      	movs	r2, #100	; 0x64
 8014918:	fb02 f303 	mul.w	r3, r2, r3
 801491c:	63bb      	str	r3, [r7, #56]	; 0x38
                chParam.Rx1Frequency = 0;
 801491e:	2300      	movs	r3, #0
 8014920:	63fb      	str	r3, [r7, #60]	; 0x3c
                chParam.DrRange.Value = payload[macIndex++];
 8014922:	78fb      	ldrb	r3, [r7, #3]
 8014924:	1c5a      	adds	r2, r3, #1
 8014926:	70fa      	strb	r2, [r7, #3]
 8014928:	461a      	mov	r2, r3
 801492a:	687b      	ldr	r3, [r7, #4]
 801492c:	4413      	add	r3, r2
 801492e:	781b      	ldrb	r3, [r3, #0]
 8014930:	b25b      	sxtb	r3, r3
 8014932:	f887 3040 	strb.w	r3, [r7, #64]	; 0x40

                status = RegionNewChannelReq( MacCtx.NvmCtx->Region, &newChannelReq );
 8014936:	4b8d      	ldr	r3, [pc, #564]	; (8014b6c <ProcessMacCommands+0x69c>)
 8014938:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 801493c:	781b      	ldrb	r3, [r3, #0]
 801493e:	f107 0244 	add.w	r2, r7, #68	; 0x44
 8014942:	4611      	mov	r1, r2
 8014944:	4618      	mov	r0, r3
 8014946:	f005 fa9f 	bl	8019e88 <RegionNewChannelReq>
 801494a:	4603      	mov	r3, r0
 801494c:	f887 306b 	strb.w	r3, [r7, #107]	; 0x6b

                macCmdPayload[0] = status;
 8014950:	f897 306b 	ldrb.w	r3, [r7, #107]	; 0x6b
 8014954:	f887 3068 	strb.w	r3, [r7, #104]	; 0x68
                LoRaMacCommandsAddCmd( MOTE_MAC_NEW_CHANNEL_ANS, macCmdPayload, 1 );
 8014958:	f107 0368 	add.w	r3, r7, #104	; 0x68
 801495c:	2201      	movs	r2, #1
 801495e:	4619      	mov	r1, r3
 8014960:	2007      	movs	r0, #7
 8014962:	f003 fb6d 	bl	8018040 <LoRaMacCommandsAddCmd>
                break;
 8014966:	bf00      	nop
 8014968:	e26f      	b.n	8014e4a <ProcessMacCommands+0x97a>
            }
            case SRV_MAC_RX_TIMING_SETUP_REQ:
            {
                uint8_t delay = payload[macIndex++] & 0x0F;
 801496a:	78fb      	ldrb	r3, [r7, #3]
 801496c:	1c5a      	adds	r2, r3, #1
 801496e:	70fa      	strb	r2, [r7, #3]
 8014970:	461a      	mov	r2, r3
 8014972:	687b      	ldr	r3, [r7, #4]
 8014974:	4413      	add	r3, r2
 8014976:	781b      	ldrb	r3, [r3, #0]
 8014978:	f003 030f 	and.w	r3, r3, #15
 801497c:	f887 3084 	strb.w	r3, [r7, #132]	; 0x84

                if( delay == 0 )
 8014980:	f897 3084 	ldrb.w	r3, [r7, #132]	; 0x84
 8014984:	2b00      	cmp	r3, #0
 8014986:	d104      	bne.n	8014992 <ProcessMacCommands+0x4c2>
                {
                    delay++;
 8014988:	f897 3084 	ldrb.w	r3, [r7, #132]	; 0x84
 801498c:	3301      	adds	r3, #1
 801498e:	f887 3084 	strb.w	r3, [r7, #132]	; 0x84
                }
                MacCtx.NvmCtx->MacParams.ReceiveDelay1 = delay * 1000;
 8014992:	f897 3084 	ldrb.w	r3, [r7, #132]	; 0x84
 8014996:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 801499a:	fb02 f203 	mul.w	r2, r2, r3
 801499e:	4b73      	ldr	r3, [pc, #460]	; (8014b6c <ProcessMacCommands+0x69c>)
 80149a0:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 80149a4:	f8c3 2094 	str.w	r2, [r3, #148]	; 0x94
                MacCtx.NvmCtx->MacParams.ReceiveDelay2 = MacCtx.NvmCtx->MacParams.ReceiveDelay1 + 1000;
 80149a8:	4b70      	ldr	r3, [pc, #448]	; (8014b6c <ProcessMacCommands+0x69c>)
 80149aa:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 80149ae:	f8d3 2094 	ldr.w	r2, [r3, #148]	; 0x94
 80149b2:	4b6e      	ldr	r3, [pc, #440]	; (8014b6c <ProcessMacCommands+0x69c>)
 80149b4:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 80149b8:	f502 727a 	add.w	r2, r2, #1000	; 0x3e8
 80149bc:	f8c3 2098 	str.w	r2, [r3, #152]	; 0x98
                LoRaMacCommandsAddCmd( MOTE_MAC_RX_TIMING_SETUP_ANS, macCmdPayload, 0 );
 80149c0:	f107 0368 	add.w	r3, r7, #104	; 0x68
 80149c4:	2200      	movs	r2, #0
 80149c6:	4619      	mov	r1, r3
 80149c8:	2008      	movs	r0, #8
 80149ca:	f003 fb39 	bl	8018040 <LoRaMacCommandsAddCmd>
                // Setup indication to inform the application
                SetMlmeScheduleUplinkIndication( );
 80149ce:	f7ff fd6f 	bl	80144b0 <SetMlmeScheduleUplinkIndication>
                break;
 80149d2:	e23a      	b.n	8014e4a <ProcessMacCommands+0x97a>
            case SRV_MAC_TX_PARAM_SETUP_REQ:
            {
                TxParamSetupReqParams_t txParamSetupReq;
                GetPhyParams_t getPhy;
                PhyParam_t phyParam;
                uint8_t eirpDwellTime = payload[macIndex++];
 80149d4:	78fb      	ldrb	r3, [r7, #3]
 80149d6:	1c5a      	adds	r2, r3, #1
 80149d8:	70fa      	strb	r2, [r7, #3]
 80149da:	461a      	mov	r2, r3
 80149dc:	687b      	ldr	r3, [r7, #4]
 80149de:	4413      	add	r3, r2
 80149e0:	781b      	ldrb	r3, [r3, #0]
 80149e2:	f887 3076 	strb.w	r3, [r7, #118]	; 0x76

                txParamSetupReq.UplinkDwellTime = 0;
 80149e6:	2300      	movs	r3, #0
 80149e8:	f887 3034 	strb.w	r3, [r7, #52]	; 0x34
                txParamSetupReq.DownlinkDwellTime = 0;
 80149ec:	2300      	movs	r3, #0
 80149ee:	f887 3035 	strb.w	r3, [r7, #53]	; 0x35

                if( ( eirpDwellTime & 0x20 ) == 0x20 )
 80149f2:	f897 3076 	ldrb.w	r3, [r7, #118]	; 0x76
 80149f6:	f003 0320 	and.w	r3, r3, #32
 80149fa:	2b00      	cmp	r3, #0
 80149fc:	d002      	beq.n	8014a04 <ProcessMacCommands+0x534>
                {
                    txParamSetupReq.DownlinkDwellTime = 1;
 80149fe:	2301      	movs	r3, #1
 8014a00:	f887 3035 	strb.w	r3, [r7, #53]	; 0x35
                }
                if( ( eirpDwellTime & 0x10 ) == 0x10 )
 8014a04:	f897 3076 	ldrb.w	r3, [r7, #118]	; 0x76
 8014a08:	f003 0310 	and.w	r3, r3, #16
 8014a0c:	2b00      	cmp	r3, #0
 8014a0e:	d002      	beq.n	8014a16 <ProcessMacCommands+0x546>
                {
                    txParamSetupReq.UplinkDwellTime = 1;
 8014a10:	2301      	movs	r3, #1
 8014a12:	f887 3034 	strb.w	r3, [r7, #52]	; 0x34
                }
                txParamSetupReq.MaxEirp = eirpDwellTime & 0x0F;
 8014a16:	f897 3076 	ldrb.w	r3, [r7, #118]	; 0x76
 8014a1a:	f003 030f 	and.w	r3, r3, #15
 8014a1e:	b2db      	uxtb	r3, r3
 8014a20:	f887 3036 	strb.w	r3, [r7, #54]	; 0x36

                // Check the status for correctness
                if( RegionTxParamSetupReq( MacCtx.NvmCtx->Region, &txParamSetupReq ) != -1 )
 8014a24:	4b51      	ldr	r3, [pc, #324]	; (8014b6c <ProcessMacCommands+0x69c>)
 8014a26:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8014a2a:	781b      	ldrb	r3, [r3, #0]
 8014a2c:	f107 0234 	add.w	r2, r7, #52	; 0x34
 8014a30:	4611      	mov	r1, r2
 8014a32:	4618      	mov	r0, r3
 8014a34:	f005 fa43 	bl	8019ebe <RegionTxParamSetupReq>
 8014a38:	4603      	mov	r3, r0
 8014a3a:	f1b3 3fff 	cmp.w	r3, #4294967295
 8014a3e:	d048      	beq.n	8014ad2 <ProcessMacCommands+0x602>
                {
                    // Accept command
                    MacCtx.NvmCtx->MacParams.UplinkDwellTime = txParamSetupReq.UplinkDwellTime;
 8014a40:	4b4a      	ldr	r3, [pc, #296]	; (8014b6c <ProcessMacCommands+0x69c>)
 8014a42:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8014a46:	f897 2034 	ldrb.w	r2, [r7, #52]	; 0x34
 8014a4a:	f883 20b8 	strb.w	r2, [r3, #184]	; 0xb8
                    MacCtx.NvmCtx->MacParams.DownlinkDwellTime = txParamSetupReq.DownlinkDwellTime;
 8014a4e:	4b47      	ldr	r3, [pc, #284]	; (8014b6c <ProcessMacCommands+0x69c>)
 8014a50:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8014a54:	f897 2035 	ldrb.w	r2, [r7, #53]	; 0x35
 8014a58:	f883 20b9 	strb.w	r2, [r3, #185]	; 0xb9
                    MacCtx.NvmCtx->MacParams.MaxEirp = LoRaMacMaxEirpTable[txParamSetupReq.MaxEirp];
 8014a5c:	f897 3036 	ldrb.w	r3, [r7, #54]	; 0x36
 8014a60:	461a      	mov	r2, r3
 8014a62:	4b43      	ldr	r3, [pc, #268]	; (8014b70 <ProcessMacCommands+0x6a0>)
 8014a64:	5c9b      	ldrb	r3, [r3, r2]
 8014a66:	4a41      	ldr	r2, [pc, #260]	; (8014b6c <ProcessMacCommands+0x69c>)
 8014a68:	f8d2 4484 	ldr.w	r4, [r2, #1156]	; 0x484
 8014a6c:	4618      	mov	r0, r3
 8014a6e:	f7ec f979 	bl	8000d64 <__aeabi_ui2f>
 8014a72:	4603      	mov	r3, r0
 8014a74:	f8c4 30bc 	str.w	r3, [r4, #188]	; 0xbc
                    // Update the datarate in case of the new configuration limits it
                    getPhy.Attribute = PHY_MIN_TX_DR;
 8014a78:	2302      	movs	r3, #2
 8014a7a:	f887 302c 	strb.w	r3, [r7, #44]	; 0x2c
                    getPhy.UplinkDwellTime = MacCtx.NvmCtx->MacParams.UplinkDwellTime;
 8014a7e:	4b3b      	ldr	r3, [pc, #236]	; (8014b6c <ProcessMacCommands+0x69c>)
 8014a80:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8014a84:	f893 30b8 	ldrb.w	r3, [r3, #184]	; 0xb8
 8014a88:	f887 302e 	strb.w	r3, [r7, #46]	; 0x2e
                    phyParam = RegionGetPhyParam( MacCtx.NvmCtx->Region, &getPhy );
 8014a8c:	4b37      	ldr	r3, [pc, #220]	; (8014b6c <ProcessMacCommands+0x69c>)
 8014a8e:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8014a92:	781b      	ldrb	r3, [r3, #0]
 8014a94:	f107 022c 	add.w	r2, r7, #44	; 0x2c
 8014a98:	4611      	mov	r1, r2
 8014a9a:	4618      	mov	r0, r3
 8014a9c:	f005 f88f 	bl	8019bbe <RegionGetPhyParam>
 8014aa0:	4603      	mov	r3, r0
 8014aa2:	62bb      	str	r3, [r7, #40]	; 0x28
                    MacCtx.NvmCtx->MacParams.ChannelsDatarate = MAX( MacCtx.NvmCtx->MacParams.ChannelsDatarate, ( int8_t )phyParam.Value );
 8014aa4:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8014aa6:	b259      	sxtb	r1, r3
 8014aa8:	4b30      	ldr	r3, [pc, #192]	; (8014b6c <ProcessMacCommands+0x69c>)
 8014aaa:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8014aae:	f993 2085 	ldrsb.w	r2, [r3, #133]	; 0x85
 8014ab2:	4b2e      	ldr	r3, [pc, #184]	; (8014b6c <ProcessMacCommands+0x69c>)
 8014ab4:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8014ab8:	428a      	cmp	r2, r1
 8014aba:	bfb8      	it	lt
 8014abc:	460a      	movlt	r2, r1
 8014abe:	b252      	sxtb	r2, r2
 8014ac0:	f883 2085 	strb.w	r2, [r3, #133]	; 0x85

                    // Add command response
                    LoRaMacCommandsAddCmd( MOTE_MAC_TX_PARAM_SETUP_ANS, macCmdPayload, 0 );
 8014ac4:	f107 0368 	add.w	r3, r7, #104	; 0x68
 8014ac8:	2200      	movs	r2, #0
 8014aca:	4619      	mov	r1, r3
 8014acc:	2009      	movs	r0, #9
 8014ace:	f003 fab7 	bl	8018040 <LoRaMacCommandsAddCmd>
                }
                break;
 8014ad2:	bf00      	nop
 8014ad4:	e1b9      	b.n	8014e4a <ProcessMacCommands+0x97a>
            }
            case SRV_MAC_DL_CHANNEL_REQ:
            {
                DlChannelReqParams_t dlChannelReq;
                status = 0x03;
 8014ad6:	2303      	movs	r3, #3
 8014ad8:	f887 306b 	strb.w	r3, [r7, #107]	; 0x6b

                dlChannelReq.ChannelId = payload[macIndex++];
 8014adc:	78fb      	ldrb	r3, [r7, #3]
 8014ade:	1c5a      	adds	r2, r3, #1
 8014ae0:	70fa      	strb	r2, [r7, #3]
 8014ae2:	461a      	mov	r2, r3
 8014ae4:	687b      	ldr	r3, [r7, #4]
 8014ae6:	4413      	add	r3, r2
 8014ae8:	781b      	ldrb	r3, [r3, #0]
 8014aea:	f887 3020 	strb.w	r3, [r7, #32]
                dlChannelReq.Rx1Frequency = ( uint32_t ) payload[macIndex++];
 8014aee:	78fb      	ldrb	r3, [r7, #3]
 8014af0:	1c5a      	adds	r2, r3, #1
 8014af2:	70fa      	strb	r2, [r7, #3]
 8014af4:	461a      	mov	r2, r3
 8014af6:	687b      	ldr	r3, [r7, #4]
 8014af8:	4413      	add	r3, r2
 8014afa:	781b      	ldrb	r3, [r3, #0]
 8014afc:	627b      	str	r3, [r7, #36]	; 0x24
                dlChannelReq.Rx1Frequency |= ( uint32_t ) payload[macIndex++] << 8;
 8014afe:	78fb      	ldrb	r3, [r7, #3]
 8014b00:	1c5a      	adds	r2, r3, #1
 8014b02:	70fa      	strb	r2, [r7, #3]
 8014b04:	461a      	mov	r2, r3
 8014b06:	687b      	ldr	r3, [r7, #4]
 8014b08:	4413      	add	r3, r2
 8014b0a:	781b      	ldrb	r3, [r3, #0]
 8014b0c:	021a      	lsls	r2, r3, #8
 8014b0e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8014b10:	4313      	orrs	r3, r2
 8014b12:	627b      	str	r3, [r7, #36]	; 0x24
                dlChannelReq.Rx1Frequency |= ( uint32_t ) payload[macIndex++] << 16;
 8014b14:	78fb      	ldrb	r3, [r7, #3]
 8014b16:	1c5a      	adds	r2, r3, #1
 8014b18:	70fa      	strb	r2, [r7, #3]
 8014b1a:	461a      	mov	r2, r3
 8014b1c:	687b      	ldr	r3, [r7, #4]
 8014b1e:	4413      	add	r3, r2
 8014b20:	781b      	ldrb	r3, [r3, #0]
 8014b22:	041a      	lsls	r2, r3, #16
 8014b24:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8014b26:	4313      	orrs	r3, r2
 8014b28:	627b      	str	r3, [r7, #36]	; 0x24
                dlChannelReq.Rx1Frequency *= 100;
 8014b2a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8014b2c:	2264      	movs	r2, #100	; 0x64
 8014b2e:	fb02 f303 	mul.w	r3, r2, r3
 8014b32:	627b      	str	r3, [r7, #36]	; 0x24

                status = RegionDlChannelReq( MacCtx.NvmCtx->Region, &dlChannelReq );
 8014b34:	4b0d      	ldr	r3, [pc, #52]	; (8014b6c <ProcessMacCommands+0x69c>)
 8014b36:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8014b3a:	781b      	ldrb	r3, [r3, #0]
 8014b3c:	f107 0220 	add.w	r2, r7, #32
 8014b40:	4611      	mov	r1, r2
 8014b42:	4618      	mov	r0, r3
 8014b44:	f005 f9d6 	bl	8019ef4 <RegionDlChannelReq>
 8014b48:	4603      	mov	r3, r0
 8014b4a:	f887 306b 	strb.w	r3, [r7, #107]	; 0x6b
                macCmdPayload[0] = status;
 8014b4e:	f897 306b 	ldrb.w	r3, [r7, #107]	; 0x6b
 8014b52:	f887 3068 	strb.w	r3, [r7, #104]	; 0x68
                LoRaMacCommandsAddCmd( MOTE_MAC_DL_CHANNEL_ANS, macCmdPayload, 1 );
 8014b56:	f107 0368 	add.w	r3, r7, #104	; 0x68
 8014b5a:	2201      	movs	r2, #1
 8014b5c:	4619      	mov	r1, r3
 8014b5e:	200a      	movs	r0, #10
 8014b60:	f003 fa6e 	bl	8018040 <LoRaMacCommandsAddCmd>
                // Setup indication to inform the application
                SetMlmeScheduleUplinkIndication( );
 8014b64:	f7ff fca4 	bl	80144b0 <SetMlmeScheduleUplinkIndication>
                break;
 8014b68:	bf00      	nop
 8014b6a:	e16e      	b.n	8014e4a <ProcessMacCommands+0x97a>
 8014b6c:	20000be0 	.word	0x20000be0
 8014b70:	08026770 	.word	0x08026770
            }
            case SRV_MAC_DEVICE_TIME_ANS:
            {
                if( LoRaMacConfirmQueueIsCmdActive( MLME_DEVICE_TIME ) == true )
 8014b74:	200a      	movs	r0, #10
 8014b76:	f003 fdc5 	bl	8018704 <LoRaMacConfirmQueueIsCmdActive>
 8014b7a:	4603      	mov	r3, r0
 8014b7c:	2b00      	cmp	r3, #0
 8014b7e:	f000 8164 	beq.w	8014e4a <ProcessMacCommands+0x97a>
                {
                    LoRaMacConfirmQueueSetStatus( LORAMAC_EVENT_INFO_STATUS_OK, MLME_DEVICE_TIME );
 8014b82:	210a      	movs	r1, #10
 8014b84:	2000      	movs	r0, #0
 8014b86:	f003 fd31 	bl	80185ec <LoRaMacConfirmQueueSetStatus>
                    SysTime_t gpsEpochTime = { 0 };
 8014b8a:	f107 0318 	add.w	r3, r7, #24
 8014b8e:	2200      	movs	r2, #0
 8014b90:	601a      	str	r2, [r3, #0]
 8014b92:	605a      	str	r2, [r3, #4]
                    SysTime_t sysTime = { 0 };
 8014b94:	f107 0310 	add.w	r3, r7, #16
 8014b98:	2200      	movs	r2, #0
 8014b9a:	601a      	str	r2, [r3, #0]
 8014b9c:	605a      	str	r2, [r3, #4]
                    SysTime_t sysTimeCurrent = { 0 };
 8014b9e:	f107 0308 	add.w	r3, r7, #8
 8014ba2:	2200      	movs	r2, #0
 8014ba4:	601a      	str	r2, [r3, #0]
 8014ba6:	605a      	str	r2, [r3, #4]

                    gpsEpochTime.Seconds = ( uint32_t )payload[macIndex++];
 8014ba8:	78fb      	ldrb	r3, [r7, #3]
 8014baa:	1c5a      	adds	r2, r3, #1
 8014bac:	70fa      	strb	r2, [r7, #3]
 8014bae:	461a      	mov	r2, r3
 8014bb0:	687b      	ldr	r3, [r7, #4]
 8014bb2:	4413      	add	r3, r2
 8014bb4:	781b      	ldrb	r3, [r3, #0]
 8014bb6:	61bb      	str	r3, [r7, #24]
                    gpsEpochTime.Seconds |= ( uint32_t )payload[macIndex++] << 8;
 8014bb8:	78fb      	ldrb	r3, [r7, #3]
 8014bba:	1c5a      	adds	r2, r3, #1
 8014bbc:	70fa      	strb	r2, [r7, #3]
 8014bbe:	461a      	mov	r2, r3
 8014bc0:	687b      	ldr	r3, [r7, #4]
 8014bc2:	4413      	add	r3, r2
 8014bc4:	781b      	ldrb	r3, [r3, #0]
 8014bc6:	021a      	lsls	r2, r3, #8
 8014bc8:	69bb      	ldr	r3, [r7, #24]
 8014bca:	4313      	orrs	r3, r2
 8014bcc:	61bb      	str	r3, [r7, #24]
                    gpsEpochTime.Seconds |= ( uint32_t )payload[macIndex++] << 16;
 8014bce:	78fb      	ldrb	r3, [r7, #3]
 8014bd0:	1c5a      	adds	r2, r3, #1
 8014bd2:	70fa      	strb	r2, [r7, #3]
 8014bd4:	461a      	mov	r2, r3
 8014bd6:	687b      	ldr	r3, [r7, #4]
 8014bd8:	4413      	add	r3, r2
 8014bda:	781b      	ldrb	r3, [r3, #0]
 8014bdc:	041a      	lsls	r2, r3, #16
 8014bde:	69bb      	ldr	r3, [r7, #24]
 8014be0:	4313      	orrs	r3, r2
 8014be2:	61bb      	str	r3, [r7, #24]
                    gpsEpochTime.Seconds |= ( uint32_t )payload[macIndex++] << 24;
 8014be4:	78fb      	ldrb	r3, [r7, #3]
 8014be6:	1c5a      	adds	r2, r3, #1
 8014be8:	70fa      	strb	r2, [r7, #3]
 8014bea:	461a      	mov	r2, r3
 8014bec:	687b      	ldr	r3, [r7, #4]
 8014bee:	4413      	add	r3, r2
 8014bf0:	781b      	ldrb	r3, [r3, #0]
 8014bf2:	061a      	lsls	r2, r3, #24
 8014bf4:	69bb      	ldr	r3, [r7, #24]
 8014bf6:	4313      	orrs	r3, r2
 8014bf8:	61bb      	str	r3, [r7, #24]
                    gpsEpochTime.SubSeconds = payload[macIndex++];
 8014bfa:	78fb      	ldrb	r3, [r7, #3]
 8014bfc:	1c5a      	adds	r2, r3, #1
 8014bfe:	70fa      	strb	r2, [r7, #3]
 8014c00:	461a      	mov	r2, r3
 8014c02:	687b      	ldr	r3, [r7, #4]
 8014c04:	4413      	add	r3, r2
 8014c06:	781b      	ldrb	r3, [r3, #0]
 8014c08:	b21b      	sxth	r3, r3
 8014c0a:	83bb      	strh	r3, [r7, #28]

                    // Convert the fractional second received in ms
                    // round( pow( 0.5, 8.0 ) * 1000 ) = 3.90625
                    gpsEpochTime.SubSeconds = ( int16_t )( ( ( int32_t )gpsEpochTime.SubSeconds * 1000 ) >> 8 );
 8014c0c:	f9b7 301c 	ldrsh.w	r3, [r7, #28]
 8014c10:	461a      	mov	r2, r3
 8014c12:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8014c16:	fb03 f302 	mul.w	r3, r3, r2
 8014c1a:	121b      	asrs	r3, r3, #8
 8014c1c:	b21b      	sxth	r3, r3
 8014c1e:	83bb      	strh	r3, [r7, #28]

                    // Copy received GPS Epoch time into system time
                    sysTime = gpsEpochTime;
 8014c20:	f107 0310 	add.w	r3, r7, #16
 8014c24:	f107 0218 	add.w	r2, r7, #24
 8014c28:	e892 0003 	ldmia.w	r2, {r0, r1}
 8014c2c:	e883 0003 	stmia.w	r3, {r0, r1}
                    // Add Unix to Gps epcoh offset. The system time is based on Unix time.
                    sysTime.Seconds += UNIX_GPS_EPOCH_OFFSET;
 8014c30:	693a      	ldr	r2, [r7, #16]
 8014c32:	4b8c      	ldr	r3, [pc, #560]	; (8014e64 <ProcessMacCommands+0x994>)
 8014c34:	4413      	add	r3, r2
 8014c36:	613b      	str	r3, [r7, #16]

                    // Compensate time difference between Tx Done time and now
                    sysTimeCurrent = SysTimeGet( );
 8014c38:	f107 0308 	add.w	r3, r7, #8
 8014c3c:	4618      	mov	r0, r3
 8014c3e:	f00b fd5f 	bl	8020700 <SysTimeGet>
                    sysTime = SysTimeAdd( sysTimeCurrent, SysTimeSub( sysTime, MacCtx.LastTxSysTime ) );
 8014c42:	f107 006c 	add.w	r0, r7, #108	; 0x6c
 8014c46:	4b88      	ldr	r3, [pc, #544]	; (8014e68 <ProcessMacCommands+0x998>)
 8014c48:	f8d3 233c 	ldr.w	r2, [r3, #828]	; 0x33c
 8014c4c:	9200      	str	r2, [sp, #0]
 8014c4e:	f8d3 3338 	ldr.w	r3, [r3, #824]	; 0x338
 8014c52:	f107 0210 	add.w	r2, r7, #16
 8014c56:	ca06      	ldmia	r2, {r1, r2}
 8014c58:	f00b fceb 	bl	8020632 <SysTimeSub>
 8014c5c:	f107 0010 	add.w	r0, r7, #16
 8014c60:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 8014c62:	9300      	str	r3, [sp, #0]
 8014c64:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8014c66:	f107 0208 	add.w	r2, r7, #8
 8014c6a:	ca06      	ldmia	r2, {r1, r2}
 8014c6c:	f00b fca8 	bl	80205c0 <SysTimeAdd>

                    // Apply the new system time.
                    SysTimeSet( sysTime );
 8014c70:	f107 0310 	add.w	r3, r7, #16
 8014c74:	e893 0003 	ldmia.w	r3, {r0, r1}
 8014c78:	f00b fd14 	bl	80206a4 <SysTimeSet>
                    LoRaMacClassBDeviceTimeAns( );
 8014c7c:	f003 f868 	bl	8017d50 <LoRaMacClassBDeviceTimeAns>
                    MacCtx.McpsIndication.DeviceTimeAnsReceived = true;
 8014c80:	4b79      	ldr	r3, [pc, #484]	; (8014e68 <ProcessMacCommands+0x998>)
 8014c82:	2201      	movs	r2, #1
 8014c84:	f883 2438 	strb.w	r2, [r3, #1080]	; 0x438
                }
                break;
 8014c88:	e0df      	b.n	8014e4a <ProcessMacCommands+0x97a>
            }
            case SRV_MAC_PING_SLOT_INFO_ANS:
            {
                if( LoRaMacConfirmQueueIsCmdActive( MLME_PING_SLOT_INFO ) == true )
 8014c8a:	200d      	movs	r0, #13
 8014c8c:	f003 fd3a 	bl	8018704 <LoRaMacConfirmQueueIsCmdActive>
 8014c90:	4603      	mov	r3, r0
 8014c92:	2b00      	cmp	r3, #0
 8014c94:	f000 80d9 	beq.w	8014e4a <ProcessMacCommands+0x97a>
                {
                    LoRaMacConfirmQueueSetStatus( LORAMAC_EVENT_INFO_STATUS_OK, MLME_PING_SLOT_INFO );
 8014c98:	210d      	movs	r1, #13
 8014c9a:	2000      	movs	r0, #0
 8014c9c:	f003 fca6 	bl	80185ec <LoRaMacConfirmQueueSetStatus>
                    // According to the specification, it is not allowed to process this answer in
                    // a ping or multicast slot
                    if( ( MacCtx.RxSlot != RX_SLOT_WIN_CLASS_B_PING_SLOT ) && ( MacCtx.RxSlot != RX_SLOT_WIN_CLASS_B_MULTICAST_SLOT ) )
 8014ca0:	4b71      	ldr	r3, [pc, #452]	; (8014e68 <ProcessMacCommands+0x998>)
 8014ca2:	f893 3480 	ldrb.w	r3, [r3, #1152]	; 0x480
 8014ca6:	2b04      	cmp	r3, #4
 8014ca8:	f000 80cf 	beq.w	8014e4a <ProcessMacCommands+0x97a>
 8014cac:	4b6e      	ldr	r3, [pc, #440]	; (8014e68 <ProcessMacCommands+0x998>)
 8014cae:	f893 3480 	ldrb.w	r3, [r3, #1152]	; 0x480
 8014cb2:	2b05      	cmp	r3, #5
 8014cb4:	f000 80c9 	beq.w	8014e4a <ProcessMacCommands+0x97a>
                    {
                        LoRaMacClassBPingSlotInfoAns( );
 8014cb8:	f003 f82b 	bl	8017d12 <LoRaMacClassBPingSlotInfoAns>
                    }
                }
                break;
 8014cbc:	e0c5      	b.n	8014e4a <ProcessMacCommands+0x97a>
            }
            case SRV_MAC_PING_SLOT_CHANNEL_REQ:
            {
                uint8_t status = 0x03;
 8014cbe:	2303      	movs	r3, #3
 8014cc0:	f887 307c 	strb.w	r3, [r7, #124]	; 0x7c
                uint32_t frequency = 0;
 8014cc4:	2300      	movs	r3, #0
 8014cc6:	67bb      	str	r3, [r7, #120]	; 0x78
                uint8_t datarate;

                frequency = ( uint32_t )payload[macIndex++];
 8014cc8:	78fb      	ldrb	r3, [r7, #3]
 8014cca:	1c5a      	adds	r2, r3, #1
 8014ccc:	70fa      	strb	r2, [r7, #3]
 8014cce:	461a      	mov	r2, r3
 8014cd0:	687b      	ldr	r3, [r7, #4]
 8014cd2:	4413      	add	r3, r2
 8014cd4:	781b      	ldrb	r3, [r3, #0]
 8014cd6:	67bb      	str	r3, [r7, #120]	; 0x78
                frequency |= ( uint32_t )payload[macIndex++] << 8;
 8014cd8:	78fb      	ldrb	r3, [r7, #3]
 8014cda:	1c5a      	adds	r2, r3, #1
 8014cdc:	70fa      	strb	r2, [r7, #3]
 8014cde:	461a      	mov	r2, r3
 8014ce0:	687b      	ldr	r3, [r7, #4]
 8014ce2:	4413      	add	r3, r2
 8014ce4:	781b      	ldrb	r3, [r3, #0]
 8014ce6:	021b      	lsls	r3, r3, #8
 8014ce8:	6fba      	ldr	r2, [r7, #120]	; 0x78
 8014cea:	4313      	orrs	r3, r2
 8014cec:	67bb      	str	r3, [r7, #120]	; 0x78
                frequency |= ( uint32_t )payload[macIndex++] << 16;
 8014cee:	78fb      	ldrb	r3, [r7, #3]
 8014cf0:	1c5a      	adds	r2, r3, #1
 8014cf2:	70fa      	strb	r2, [r7, #3]
 8014cf4:	461a      	mov	r2, r3
 8014cf6:	687b      	ldr	r3, [r7, #4]
 8014cf8:	4413      	add	r3, r2
 8014cfa:	781b      	ldrb	r3, [r3, #0]
 8014cfc:	041b      	lsls	r3, r3, #16
 8014cfe:	6fba      	ldr	r2, [r7, #120]	; 0x78
 8014d00:	4313      	orrs	r3, r2
 8014d02:	67bb      	str	r3, [r7, #120]	; 0x78
                frequency *= 100;
 8014d04:	6fbb      	ldr	r3, [r7, #120]	; 0x78
 8014d06:	2264      	movs	r2, #100	; 0x64
 8014d08:	fb02 f303 	mul.w	r3, r2, r3
 8014d0c:	67bb      	str	r3, [r7, #120]	; 0x78
                datarate = payload[macIndex++] & 0x0F;
 8014d0e:	78fb      	ldrb	r3, [r7, #3]
 8014d10:	1c5a      	adds	r2, r3, #1
 8014d12:	70fa      	strb	r2, [r7, #3]
 8014d14:	461a      	mov	r2, r3
 8014d16:	687b      	ldr	r3, [r7, #4]
 8014d18:	4413      	add	r3, r2
 8014d1a:	781b      	ldrb	r3, [r3, #0]
 8014d1c:	f003 030f 	and.w	r3, r3, #15
 8014d20:	f887 3077 	strb.w	r3, [r7, #119]	; 0x77

                status = LoRaMacClassBPingSlotChannelReq( datarate, frequency );
 8014d24:	f897 3077 	ldrb.w	r3, [r7, #119]	; 0x77
 8014d28:	6fb9      	ldr	r1, [r7, #120]	; 0x78
 8014d2a:	4618      	mov	r0, r3
 8014d2c:	f002 fff7 	bl	8017d1e <LoRaMacClassBPingSlotChannelReq>
 8014d30:	4603      	mov	r3, r0
 8014d32:	f887 307c 	strb.w	r3, [r7, #124]	; 0x7c
                macCmdPayload[0] = status;
 8014d36:	f897 307c 	ldrb.w	r3, [r7, #124]	; 0x7c
 8014d3a:	f887 3068 	strb.w	r3, [r7, #104]	; 0x68
                LoRaMacCommandsAddCmd( MOTE_MAC_PING_SLOT_FREQ_ANS, macCmdPayload, 1 );
 8014d3e:	f107 0368 	add.w	r3, r7, #104	; 0x68
 8014d42:	2201      	movs	r2, #1
 8014d44:	4619      	mov	r1, r3
 8014d46:	2011      	movs	r0, #17
 8014d48:	f003 f97a 	bl	8018040 <LoRaMacCommandsAddCmd>
                break;
 8014d4c:	e07d      	b.n	8014e4a <ProcessMacCommands+0x97a>
            }
            case SRV_MAC_BEACON_TIMING_ANS:
            {
                if( LoRaMacConfirmQueueIsCmdActive( MLME_BEACON_TIMING ) == true )
 8014d4e:	200e      	movs	r0, #14
 8014d50:	f003 fcd8 	bl	8018704 <LoRaMacConfirmQueueIsCmdActive>
 8014d54:	4603      	mov	r3, r0
 8014d56:	2b00      	cmp	r3, #0
 8014d58:	d077      	beq.n	8014e4a <ProcessMacCommands+0x97a>
                {
                    LoRaMacConfirmQueueSetStatus( LORAMAC_EVENT_INFO_STATUS_OK, MLME_BEACON_TIMING );
 8014d5a:	210e      	movs	r1, #14
 8014d5c:	2000      	movs	r0, #0
 8014d5e:	f003 fc45 	bl	80185ec <LoRaMacConfirmQueueSetStatus>
                    uint16_t beaconTimingDelay = 0;
 8014d62:	2300      	movs	r3, #0
 8014d64:	f8a7 307e 	strh.w	r3, [r7, #126]	; 0x7e
                    uint8_t beaconTimingChannel = 0;
 8014d68:	2300      	movs	r3, #0
 8014d6a:	f887 307d 	strb.w	r3, [r7, #125]	; 0x7d

                    beaconTimingDelay = ( uint16_t )payload[macIndex++];
 8014d6e:	78fb      	ldrb	r3, [r7, #3]
 8014d70:	1c5a      	adds	r2, r3, #1
 8014d72:	70fa      	strb	r2, [r7, #3]
 8014d74:	461a      	mov	r2, r3
 8014d76:	687b      	ldr	r3, [r7, #4]
 8014d78:	4413      	add	r3, r2
 8014d7a:	781b      	ldrb	r3, [r3, #0]
 8014d7c:	f8a7 307e 	strh.w	r3, [r7, #126]	; 0x7e
                    beaconTimingDelay |= ( uint16_t )payload[macIndex++] << 8;
 8014d80:	78fb      	ldrb	r3, [r7, #3]
 8014d82:	1c5a      	adds	r2, r3, #1
 8014d84:	70fa      	strb	r2, [r7, #3]
 8014d86:	461a      	mov	r2, r3
 8014d88:	687b      	ldr	r3, [r7, #4]
 8014d8a:	4413      	add	r3, r2
 8014d8c:	781b      	ldrb	r3, [r3, #0]
 8014d8e:	021b      	lsls	r3, r3, #8
 8014d90:	b21a      	sxth	r2, r3
 8014d92:	f9b7 307e 	ldrsh.w	r3, [r7, #126]	; 0x7e
 8014d96:	4313      	orrs	r3, r2
 8014d98:	b21b      	sxth	r3, r3
 8014d9a:	f8a7 307e 	strh.w	r3, [r7, #126]	; 0x7e
                    beaconTimingChannel = payload[macIndex++];
 8014d9e:	78fb      	ldrb	r3, [r7, #3]
 8014da0:	1c5a      	adds	r2, r3, #1
 8014da2:	70fa      	strb	r2, [r7, #3]
 8014da4:	461a      	mov	r2, r3
 8014da6:	687b      	ldr	r3, [r7, #4]
 8014da8:	4413      	add	r3, r2
 8014daa:	781b      	ldrb	r3, [r3, #0]
 8014dac:	f887 307d 	strb.w	r3, [r7, #125]	; 0x7d

                    LoRaMacClassBBeaconTimingAns( beaconTimingDelay, beaconTimingChannel, RxDoneParams.LastRxDone );
 8014db0:	4b2e      	ldr	r3, [pc, #184]	; (8014e6c <ProcessMacCommands+0x99c>)
 8014db2:	681a      	ldr	r2, [r3, #0]
 8014db4:	f897 107d 	ldrb.w	r1, [r7, #125]	; 0x7d
 8014db8:	f8b7 307e 	ldrh.w	r3, [r7, #126]	; 0x7e
 8014dbc:	4618      	mov	r0, r3
 8014dbe:	f002 ffba 	bl	8017d36 <LoRaMacClassBBeaconTimingAns>
                }
                break;
 8014dc2:	e042      	b.n	8014e4a <ProcessMacCommands+0x97a>
            }
            case SRV_MAC_BEACON_FREQ_REQ:
                {
                    uint32_t frequency = 0;
 8014dc4:	2300      	movs	r3, #0
 8014dc6:	f8c7 3080 	str.w	r3, [r7, #128]	; 0x80

                    frequency = ( uint32_t )payload[macIndex++];
 8014dca:	78fb      	ldrb	r3, [r7, #3]
 8014dcc:	1c5a      	adds	r2, r3, #1
 8014dce:	70fa      	strb	r2, [r7, #3]
 8014dd0:	461a      	mov	r2, r3
 8014dd2:	687b      	ldr	r3, [r7, #4]
 8014dd4:	4413      	add	r3, r2
 8014dd6:	781b      	ldrb	r3, [r3, #0]
 8014dd8:	f8c7 3080 	str.w	r3, [r7, #128]	; 0x80
                    frequency |= ( uint32_t )payload[macIndex++] << 8;
 8014ddc:	78fb      	ldrb	r3, [r7, #3]
 8014dde:	1c5a      	adds	r2, r3, #1
 8014de0:	70fa      	strb	r2, [r7, #3]
 8014de2:	461a      	mov	r2, r3
 8014de4:	687b      	ldr	r3, [r7, #4]
 8014de6:	4413      	add	r3, r2
 8014de8:	781b      	ldrb	r3, [r3, #0]
 8014dea:	021b      	lsls	r3, r3, #8
 8014dec:	f8d7 2080 	ldr.w	r2, [r7, #128]	; 0x80
 8014df0:	4313      	orrs	r3, r2
 8014df2:	f8c7 3080 	str.w	r3, [r7, #128]	; 0x80
                    frequency |= ( uint32_t )payload[macIndex++] << 16;
 8014df6:	78fb      	ldrb	r3, [r7, #3]
 8014df8:	1c5a      	adds	r2, r3, #1
 8014dfa:	70fa      	strb	r2, [r7, #3]
 8014dfc:	461a      	mov	r2, r3
 8014dfe:	687b      	ldr	r3, [r7, #4]
 8014e00:	4413      	add	r3, r2
 8014e02:	781b      	ldrb	r3, [r3, #0]
 8014e04:	041b      	lsls	r3, r3, #16
 8014e06:	f8d7 2080 	ldr.w	r2, [r7, #128]	; 0x80
 8014e0a:	4313      	orrs	r3, r2
 8014e0c:	f8c7 3080 	str.w	r3, [r7, #128]	; 0x80
                    frequency *= 100;
 8014e10:	f8d7 3080 	ldr.w	r3, [r7, #128]	; 0x80
 8014e14:	2264      	movs	r2, #100	; 0x64
 8014e16:	fb02 f303 	mul.w	r3, r2, r3
 8014e1a:	f8c7 3080 	str.w	r3, [r7, #128]	; 0x80

                    if( LoRaMacClassBBeaconFreqReq( frequency ) == true )
 8014e1e:	f8d7 0080 	ldr.w	r0, [r7, #128]	; 0x80
 8014e22:	f002 ff9b 	bl	8017d5c <LoRaMacClassBBeaconFreqReq>
 8014e26:	4603      	mov	r3, r0
 8014e28:	2b00      	cmp	r3, #0
 8014e2a:	d003      	beq.n	8014e34 <ProcessMacCommands+0x964>
                    {
                        macCmdPayload[0] = 1;
 8014e2c:	2301      	movs	r3, #1
 8014e2e:	f887 3068 	strb.w	r3, [r7, #104]	; 0x68
 8014e32:	e002      	b.n	8014e3a <ProcessMacCommands+0x96a>
                    }
                    else
                    {
                        macCmdPayload[0] = 0;
 8014e34:	2300      	movs	r3, #0
 8014e36:	f887 3068 	strb.w	r3, [r7, #104]	; 0x68
                    }
                    LoRaMacCommandsAddCmd( MOTE_MAC_BEACON_FREQ_ANS, macCmdPayload, 1 );
 8014e3a:	f107 0368 	add.w	r3, r7, #104	; 0x68
 8014e3e:	2201      	movs	r2, #1
 8014e40:	4619      	mov	r1, r3
 8014e42:	2013      	movs	r0, #19
 8014e44:	f003 f8fc 	bl	8018040 <LoRaMacCommandsAddCmd>
                }
                break;
 8014e48:	bf00      	nop
    while( macIndex < commandsSize )
 8014e4a:	78fa      	ldrb	r2, [r7, #3]
 8014e4c:	78bb      	ldrb	r3, [r7, #2]
 8014e4e:	429a      	cmp	r2, r3
 8014e50:	f4ff ab56 	bcc.w	8014500 <ProcessMacCommands+0x30>
 8014e54:	e002      	b.n	8014e5c <ProcessMacCommands+0x98c>
            return;
 8014e56:	bf00      	nop
 8014e58:	e000      	b.n	8014e5c <ProcessMacCommands+0x98c>
            default:
                // Unknown command. ABORT MAC commands processing
                return;
 8014e5a:	bf00      	nop
        }
    }
}
 8014e5c:	378c      	adds	r7, #140	; 0x8c
 8014e5e:	46bd      	mov	sp, r7
 8014e60:	bd90      	pop	{r4, r7, pc}
 8014e62:	bf00      	nop
 8014e64:	12d53d80 	.word	0x12d53d80
 8014e68:	20000be0 	.word	0x20000be0
 8014e6c:	20001fec 	.word	0x20001fec

08014e70 <Send>:

static LoRaMacStatus_t Send( LoRaMacHeader_t* macHdr, uint8_t fPort, void* fBuffer, uint16_t fBufferSize, bool allowDelayedTx )
{
 8014e70:	b580      	push	{r7, lr}
 8014e72:	b08e      	sub	sp, #56	; 0x38
 8014e74:	af02      	add	r7, sp, #8
 8014e76:	60f8      	str	r0, [r7, #12]
 8014e78:	607a      	str	r2, [r7, #4]
 8014e7a:	461a      	mov	r2, r3
 8014e7c:	460b      	mov	r3, r1
 8014e7e:	72fb      	strb	r3, [r7, #11]
 8014e80:	4613      	mov	r3, r2
 8014e82:	813b      	strh	r3, [r7, #8]
    LoRaMacFrameCtrl_t fCtrl;
    LoRaMacStatus_t status = LORAMAC_STATUS_PARAMETER_INVALID;
 8014e84:	2303      	movs	r3, #3
 8014e86:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f
    int8_t datarate = MacCtx.NvmCtx->MacParams.ChannelsDatarate;
 8014e8a:	4b7d      	ldr	r3, [pc, #500]	; (8015080 <Send+0x210>)
 8014e8c:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8014e90:	f893 3085 	ldrb.w	r3, [r3, #133]	; 0x85
 8014e94:	f887 302e 	strb.w	r3, [r7, #46]	; 0x2e
    int8_t txPower = MacCtx.NvmCtx->MacParams.ChannelsTxPower;
 8014e98:	4b79      	ldr	r3, [pc, #484]	; (8015080 <Send+0x210>)
 8014e9a:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8014e9e:	f893 3084 	ldrb.w	r3, [r3, #132]	; 0x84
 8014ea2:	f887 302d 	strb.w	r3, [r7, #45]	; 0x2d
    uint32_t adrAckCounter = MacCtx.NvmCtx->AdrAckCounter;
 8014ea6:	4b76      	ldr	r3, [pc, #472]	; (8015080 <Send+0x210>)
 8014ea8:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8014eac:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8014eb0:	62bb      	str	r3, [r7, #40]	; 0x28
    CalcNextAdrParams_t adrNext;

    // Check if we are joined
    if( MacCtx.NvmCtx->NetworkActivation == ACTIVATION_TYPE_NONE )
 8014eb2:	4b73      	ldr	r3, [pc, #460]	; (8015080 <Send+0x210>)
 8014eb4:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8014eb8:	f893 3164 	ldrb.w	r3, [r3, #356]	; 0x164
 8014ebc:	2b00      	cmp	r3, #0
 8014ebe:	d101      	bne.n	8014ec4 <Send+0x54>
    {
        return LORAMAC_STATUS_NO_NETWORK_JOINED;
 8014ec0:	2307      	movs	r3, #7
 8014ec2:	e0d9      	b.n	8015078 <Send+0x208>
    }
    if( MacCtx.NvmCtx->MaxDCycle == 0 )
 8014ec4:	4b6e      	ldr	r3, [pc, #440]	; (8015080 <Send+0x210>)
 8014ec6:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8014eca:	f893 30c8 	ldrb.w	r3, [r3, #200]	; 0xc8
 8014ece:	2b00      	cmp	r3, #0
 8014ed0:	d105      	bne.n	8014ede <Send+0x6e>
    {
        MacCtx.NvmCtx->AggregatedTimeOff = 0;
 8014ed2:	4b6b      	ldr	r3, [pc, #428]	; (8015080 <Send+0x210>)
 8014ed4:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8014ed8:	2200      	movs	r2, #0
 8014eda:	f8c3 2154 	str.w	r2, [r3, #340]	; 0x154
    }

    fCtrl.Value = 0;
 8014ede:	2300      	movs	r3, #0
 8014ee0:	f887 302c 	strb.w	r3, [r7, #44]	; 0x2c
    fCtrl.Bits.FOptsLen      = 0;
 8014ee4:	f897 302c 	ldrb.w	r3, [r7, #44]	; 0x2c
 8014ee8:	f36f 0303 	bfc	r3, #0, #4
 8014eec:	f887 302c 	strb.w	r3, [r7, #44]	; 0x2c
    fCtrl.Bits.Adr           = MacCtx.NvmCtx->AdrCtrlOn;
 8014ef0:	4b63      	ldr	r3, [pc, #396]	; (8015080 <Send+0x210>)
 8014ef2:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8014ef6:	f893 207e 	ldrb.w	r2, [r3, #126]	; 0x7e
 8014efa:	f897 302c 	ldrb.w	r3, [r7, #44]	; 0x2c
 8014efe:	f362 13c7 	bfi	r3, r2, #7, #1
 8014f02:	f887 302c 	strb.w	r3, [r7, #44]	; 0x2c

    // Check class b
    if( MacCtx.NvmCtx->DeviceClass == CLASS_B )
 8014f06:	4b5e      	ldr	r3, [pc, #376]	; (8015080 <Send+0x210>)
 8014f08:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8014f0c:	f893 307c 	ldrb.w	r3, [r3, #124]	; 0x7c
 8014f10:	2b01      	cmp	r3, #1
 8014f12:	d106      	bne.n	8014f22 <Send+0xb2>
    {
        fCtrl.Bits.FPending      = 1;
 8014f14:	f897 302c 	ldrb.w	r3, [r7, #44]	; 0x2c
 8014f18:	f043 0310 	orr.w	r3, r3, #16
 8014f1c:	f887 302c 	strb.w	r3, [r7, #44]	; 0x2c
 8014f20:	e005      	b.n	8014f2e <Send+0xbe>
    }
    else
    {
        fCtrl.Bits.FPending      = 0;
 8014f22:	f897 302c 	ldrb.w	r3, [r7, #44]	; 0x2c
 8014f26:	f36f 1304 	bfc	r3, #4, #1
 8014f2a:	f887 302c 	strb.w	r3, [r7, #44]	; 0x2c
    }

    // Check server ack
    if( MacCtx.NvmCtx->SrvAckRequested == true )
 8014f2e:	4b54      	ldr	r3, [pc, #336]	; (8015080 <Send+0x210>)
 8014f30:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8014f34:	f893 314b 	ldrb.w	r3, [r3, #331]	; 0x14b
 8014f38:	2b00      	cmp	r3, #0
 8014f3a:	d005      	beq.n	8014f48 <Send+0xd8>
    {
        fCtrl.Bits.Ack = 1;
 8014f3c:	f897 302c 	ldrb.w	r3, [r7, #44]	; 0x2c
 8014f40:	f043 0320 	orr.w	r3, r3, #32
 8014f44:	f887 302c 	strb.w	r3, [r7, #44]	; 0x2c
    }

    // ADR next request
    adrNext.Version = MacCtx.NvmCtx->Version;
 8014f48:	4b4d      	ldr	r3, [pc, #308]	; (8015080 <Send+0x210>)
 8014f4a:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8014f4e:	f8d3 3160 	ldr.w	r3, [r3, #352]	; 0x160
 8014f52:	617b      	str	r3, [r7, #20]
    adrNext.UpdateChanMask = true;
 8014f54:	2301      	movs	r3, #1
 8014f56:	763b      	strb	r3, [r7, #24]
    adrNext.AdrEnabled = fCtrl.Bits.Adr;
 8014f58:	f897 302c 	ldrb.w	r3, [r7, #44]	; 0x2c
 8014f5c:	f3c3 13c0 	ubfx	r3, r3, #7, #1
 8014f60:	b2db      	uxtb	r3, r3
 8014f62:	2b00      	cmp	r3, #0
 8014f64:	bf14      	ite	ne
 8014f66:	2301      	movne	r3, #1
 8014f68:	2300      	moveq	r3, #0
 8014f6a:	b2db      	uxtb	r3, r3
 8014f6c:	767b      	strb	r3, [r7, #25]
    adrNext.AdrAckCounter = MacCtx.NvmCtx->AdrAckCounter;
 8014f6e:	4b44      	ldr	r3, [pc, #272]	; (8015080 <Send+0x210>)
 8014f70:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8014f74:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8014f78:	61fb      	str	r3, [r7, #28]
    adrNext.AdrAckLimit = MacCtx.AdrAckLimit;
 8014f7a:	4b41      	ldr	r3, [pc, #260]	; (8015080 <Send+0x210>)
 8014f7c:	f8b3 33f4 	ldrh.w	r3, [r3, #1012]	; 0x3f4
 8014f80:	843b      	strh	r3, [r7, #32]
    adrNext.AdrAckDelay = MacCtx.AdrAckDelay;
 8014f82:	4b3f      	ldr	r3, [pc, #252]	; (8015080 <Send+0x210>)
 8014f84:	f8b3 33f6 	ldrh.w	r3, [r3, #1014]	; 0x3f6
 8014f88:	847b      	strh	r3, [r7, #34]	; 0x22
    adrNext.Datarate = MacCtx.NvmCtx->MacParams.ChannelsDatarate;
 8014f8a:	4b3d      	ldr	r3, [pc, #244]	; (8015080 <Send+0x210>)
 8014f8c:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8014f90:	f993 3085 	ldrsb.w	r3, [r3, #133]	; 0x85
 8014f94:	f887 3024 	strb.w	r3, [r7, #36]	; 0x24
    adrNext.TxPower = MacCtx.NvmCtx->MacParams.ChannelsTxPower;
 8014f98:	4b39      	ldr	r3, [pc, #228]	; (8015080 <Send+0x210>)
 8014f9a:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8014f9e:	f993 3084 	ldrsb.w	r3, [r3, #132]	; 0x84
 8014fa2:	f887 3025 	strb.w	r3, [r7, #37]	; 0x25
    adrNext.UplinkDwellTime = MacCtx.NvmCtx->MacParams.UplinkDwellTime;
 8014fa6:	4b36      	ldr	r3, [pc, #216]	; (8015080 <Send+0x210>)
 8014fa8:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8014fac:	f893 30b8 	ldrb.w	r3, [r3, #184]	; 0xb8
 8014fb0:	f887 3026 	strb.w	r3, [r7, #38]	; 0x26
    adrNext.Region = MacCtx.NvmCtx->Region;
 8014fb4:	4b32      	ldr	r3, [pc, #200]	; (8015080 <Send+0x210>)
 8014fb6:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8014fba:	781b      	ldrb	r3, [r3, #0]
 8014fbc:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27

    fCtrl.Bits.AdrAckReq = LoRaMacAdrCalcNext( &adrNext, &MacCtx.NvmCtx->MacParams.ChannelsDatarate,
 8014fc0:	4b2f      	ldr	r3, [pc, #188]	; (8015080 <Send+0x210>)
 8014fc2:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8014fc6:	f103 0185 	add.w	r1, r3, #133	; 0x85
                                               &MacCtx.NvmCtx->MacParams.ChannelsTxPower, &adrAckCounter );
 8014fca:	4b2d      	ldr	r3, [pc, #180]	; (8015080 <Send+0x210>)
 8014fcc:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
    fCtrl.Bits.AdrAckReq = LoRaMacAdrCalcNext( &adrNext, &MacCtx.NvmCtx->MacParams.ChannelsDatarate,
 8014fd0:	f103 0284 	add.w	r2, r3, #132	; 0x84
 8014fd4:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8014fd8:	f107 0014 	add.w	r0, r7, #20
 8014fdc:	f002 fdc2 	bl	8017b64 <LoRaMacAdrCalcNext>
 8014fe0:	4603      	mov	r3, r0
 8014fe2:	461a      	mov	r2, r3
 8014fe4:	f897 302c 	ldrb.w	r3, [r7, #44]	; 0x2c
 8014fe8:	f362 1386 	bfi	r3, r2, #6, #1
 8014fec:	f887 302c 	strb.w	r3, [r7, #44]	; 0x2c

    // Prepare the frame
    status = PrepareFrame( macHdr, &fCtrl, fPort, fBuffer, fBufferSize );
 8014ff0:	7afa      	ldrb	r2, [r7, #11]
 8014ff2:	f107 012c 	add.w	r1, r7, #44	; 0x2c
 8014ff6:	893b      	ldrh	r3, [r7, #8]
 8014ff8:	9300      	str	r3, [sp, #0]
 8014ffa:	687b      	ldr	r3, [r7, #4]
 8014ffc:	68f8      	ldr	r0, [r7, #12]
 8014ffe:	f000 fc5b 	bl	80158b8 <PrepareFrame>
 8015002:	4603      	mov	r3, r0
 8015004:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f

    // Validate status
    if( ( status == LORAMAC_STATUS_OK ) || ( status == LORAMAC_STATUS_SKIPPED_APP_DATA ) )
 8015008:	f897 302f 	ldrb.w	r3, [r7, #47]	; 0x2f
 801500c:	2b00      	cmp	r3, #0
 801500e:	d003      	beq.n	8015018 <Send+0x1a8>
 8015010:	f897 302f 	ldrb.w	r3, [r7, #47]	; 0x2f
 8015014:	2b0a      	cmp	r3, #10
 8015016:	d107      	bne.n	8015028 <Send+0x1b8>
    {
        // Schedule frame, do not allow delayed transmissions
        status = ScheduleTx( allowDelayedTx );
 8015018:	f897 3038 	ldrb.w	r3, [r7, #56]	; 0x38
 801501c:	4618      	mov	r0, r3
 801501e:	f000 f995 	bl	801534c <ScheduleTx>
 8015022:	4603      	mov	r3, r0
 8015024:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f
    }

    // Post processing
    if( status != LORAMAC_STATUS_OK )
 8015028:	f897 302f 	ldrb.w	r3, [r7, #47]	; 0x2f
 801502c:	2b00      	cmp	r3, #0
 801502e:	d00e      	beq.n	801504e <Send+0x1de>
    {
        // Bad case - restore
        // Store local variables
        MacCtx.NvmCtx->MacParams.ChannelsDatarate = datarate;
 8015030:	4b13      	ldr	r3, [pc, #76]	; (8015080 <Send+0x210>)
 8015032:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8015036:	f897 202e 	ldrb.w	r2, [r7, #46]	; 0x2e
 801503a:	f883 2085 	strb.w	r2, [r3, #133]	; 0x85
        MacCtx.NvmCtx->MacParams.ChannelsTxPower = txPower;
 801503e:	4b10      	ldr	r3, [pc, #64]	; (8015080 <Send+0x210>)
 8015040:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8015044:	f897 202d 	ldrb.w	r2, [r7, #45]	; 0x2d
 8015048:	f883 2084 	strb.w	r2, [r3, #132]	; 0x84
 801504c:	e012      	b.n	8015074 <Send+0x204>
    }
    else
    {
        // Good case
        MacCtx.NvmCtx->SrvAckRequested = false;
 801504e:	4b0c      	ldr	r3, [pc, #48]	; (8015080 <Send+0x210>)
 8015050:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8015054:	2200      	movs	r2, #0
 8015056:	f883 214b 	strb.w	r2, [r3, #331]	; 0x14b
        MacCtx.NvmCtx->AdrAckCounter = adrAckCounter;
 801505a:	4b09      	ldr	r3, [pc, #36]	; (8015080 <Send+0x210>)
 801505c:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8015060:	6aba      	ldr	r2, [r7, #40]	; 0x28
 8015062:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
        // Remove all none sticky MAC commands
        if( LoRaMacCommandsRemoveNoneStickyCmds( ) != LORAMAC_COMMANDS_SUCCESS )
 8015066:	f003 f867 	bl	8018138 <LoRaMacCommandsRemoveNoneStickyCmds>
 801506a:	4603      	mov	r3, r0
 801506c:	2b00      	cmp	r3, #0
 801506e:	d001      	beq.n	8015074 <Send+0x204>
        {
            return LORAMAC_STATUS_MAC_COMMAD_ERROR;
 8015070:	2313      	movs	r3, #19
 8015072:	e001      	b.n	8015078 <Send+0x208>
        }
    }
    return status;
 8015074:	f897 302f 	ldrb.w	r3, [r7, #47]	; 0x2f
}
 8015078:	4618      	mov	r0, r3
 801507a:	3730      	adds	r7, #48	; 0x30
 801507c:	46bd      	mov	sp, r7
 801507e:	bd80      	pop	{r7, pc}
 8015080:	20000be0 	.word	0x20000be0

08015084 <SendReJoinReq>:

static LoRaMacStatus_t SendReJoinReq( JoinReqIdentifier_t joinReqType )
{
 8015084:	b580      	push	{r7, lr}
 8015086:	b084      	sub	sp, #16
 8015088:	af00      	add	r7, sp, #0
 801508a:	4603      	mov	r3, r0
 801508c:	71fb      	strb	r3, [r7, #7]
    LoRaMacStatus_t status = LORAMAC_STATUS_OK;
 801508e:	2300      	movs	r3, #0
 8015090:	73bb      	strb	r3, [r7, #14]
    LoRaMacHeader_t macHdr;
    macHdr.Value = 0;
 8015092:	2300      	movs	r3, #0
 8015094:	733b      	strb	r3, [r7, #12]
    bool allowDelayedTx = true;
 8015096:	2301      	movs	r3, #1
 8015098:	73fb      	strb	r3, [r7, #15]

    // Setup join/rejoin message
    switch( joinReqType )
 801509a:	79fb      	ldrb	r3, [r7, #7]
 801509c:	2bff      	cmp	r3, #255	; 0xff
 801509e:	d129      	bne.n	80150f4 <SendReJoinReq+0x70>
    {
        case JOIN_REQ:
        {
            SwitchClass( CLASS_A );
 80150a0:	2000      	movs	r0, #0
 80150a2:	f7ff f8c3 	bl	801422c <SwitchClass>

            MacCtx.TxMsg.Type = LORAMAC_MSG_TYPE_JOIN_REQUEST;
 80150a6:	4b1a      	ldr	r3, [pc, #104]	; (8015110 <SendReJoinReq+0x8c>)
 80150a8:	2200      	movs	r2, #0
 80150aa:	f883 2104 	strb.w	r2, [r3, #260]	; 0x104
            MacCtx.TxMsg.Message.JoinReq.Buffer = MacCtx.PktBuffer;
 80150ae:	4b18      	ldr	r3, [pc, #96]	; (8015110 <SendReJoinReq+0x8c>)
 80150b0:	4a18      	ldr	r2, [pc, #96]	; (8015114 <SendReJoinReq+0x90>)
 80150b2:	f8c3 2108 	str.w	r2, [r3, #264]	; 0x108
            MacCtx.TxMsg.Message.JoinReq.BufSize = LORAMAC_PHY_MAXPAYLOAD;
 80150b6:	4b16      	ldr	r3, [pc, #88]	; (8015110 <SendReJoinReq+0x8c>)
 80150b8:	22ff      	movs	r2, #255	; 0xff
 80150ba:	f883 210c 	strb.w	r2, [r3, #268]	; 0x10c

            macHdr.Bits.MType = FRAME_TYPE_JOIN_REQ;
 80150be:	7b3b      	ldrb	r3, [r7, #12]
 80150c0:	f36f 1347 	bfc	r3, #5, #3
 80150c4:	733b      	strb	r3, [r7, #12]
            MacCtx.TxMsg.Message.JoinReq.MHDR.Value = macHdr.Value;
 80150c6:	7b3a      	ldrb	r2, [r7, #12]
 80150c8:	4b11      	ldr	r3, [pc, #68]	; (8015110 <SendReJoinReq+0x8c>)
 80150ca:	f883 210d 	strb.w	r2, [r3, #269]	; 0x10d

            memcpy1( MacCtx.TxMsg.Message.JoinReq.JoinEUI, SecureElementGetJoinEui( ), LORAMAC_JOIN_EUI_FIELD_SIZE );
 80150ce:	f7fc fd89 	bl	8011be4 <SecureElementGetJoinEui>
 80150d2:	4603      	mov	r3, r0
 80150d4:	2208      	movs	r2, #8
 80150d6:	4619      	mov	r1, r3
 80150d8:	480f      	ldr	r0, [pc, #60]	; (8015118 <SendReJoinReq+0x94>)
 80150da:	f008 faa6 	bl	801d62a <memcpy1>
            memcpy1( MacCtx.TxMsg.Message.JoinReq.DevEUI, SecureElementGetDevEui( ), LORAMAC_DEV_EUI_FIELD_SIZE );
 80150de:	f7fc fd5d 	bl	8011b9c <SecureElementGetDevEui>
 80150e2:	4603      	mov	r3, r0
 80150e4:	2208      	movs	r2, #8
 80150e6:	4619      	mov	r1, r3
 80150e8:	480c      	ldr	r0, [pc, #48]	; (801511c <SendReJoinReq+0x98>)
 80150ea:	f008 fa9e 	bl	801d62a <memcpy1>

            allowDelayedTx = false;
 80150ee:	2300      	movs	r3, #0
 80150f0:	73fb      	strb	r3, [r7, #15]

            break;
 80150f2:	e002      	b.n	80150fa <SendReJoinReq+0x76>
        }
        default:
            status = LORAMAC_STATUS_SERVICE_UNKNOWN;
 80150f4:	2302      	movs	r3, #2
 80150f6:	73bb      	strb	r3, [r7, #14]
            break;
 80150f8:	bf00      	nop
    }

    // Schedule frame
    status = ScheduleTx( allowDelayedTx );
 80150fa:	7bfb      	ldrb	r3, [r7, #15]
 80150fc:	4618      	mov	r0, r3
 80150fe:	f000 f925 	bl	801534c <ScheduleTx>
 8015102:	4603      	mov	r3, r0
 8015104:	73bb      	strb	r3, [r7, #14]
    return status;
 8015106:	7bbb      	ldrb	r3, [r7, #14]
}
 8015108:	4618      	mov	r0, r3
 801510a:	3710      	adds	r7, #16
 801510c:	46bd      	mov	sp, r7
 801510e:	bd80      	pop	{r7, pc}
 8015110:	20000be0 	.word	0x20000be0
 8015114:	20000be2 	.word	0x20000be2
 8015118:	20000cee 	.word	0x20000cee
 801511c:	20000cf6 	.word	0x20000cf6

08015120 <CheckForClassBCollision>:

static LoRaMacStatus_t CheckForClassBCollision( void )
{
 8015120:	b580      	push	{r7, lr}
 8015122:	af00      	add	r7, sp, #0
    if( LoRaMacClassBIsBeaconExpected( ) == true )
 8015124:	f002 fda4 	bl	8017c70 <LoRaMacClassBIsBeaconExpected>
 8015128:	4603      	mov	r3, r0
 801512a:	2b00      	cmp	r3, #0
 801512c:	d001      	beq.n	8015132 <CheckForClassBCollision+0x12>
    {
        return LORAMAC_STATUS_BUSY_BEACON_RESERVED_TIME;
 801512e:	230e      	movs	r3, #14
 8015130:	e015      	b.n	801515e <CheckForClassBCollision+0x3e>
    }

    if( MacCtx.NvmCtx->DeviceClass == CLASS_B )
 8015132:	4b0c      	ldr	r3, [pc, #48]	; (8015164 <CheckForClassBCollision+0x44>)
 8015134:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8015138:	f893 307c 	ldrb.w	r3, [r3, #124]	; 0x7c
 801513c:	2b01      	cmp	r3, #1
 801513e:	d10d      	bne.n	801515c <CheckForClassBCollision+0x3c>
    {
        if( LoRaMacClassBIsPingExpected( ) == true )
 8015140:	f002 fd9d 	bl	8017c7e <LoRaMacClassBIsPingExpected>
 8015144:	4603      	mov	r3, r0
 8015146:	2b00      	cmp	r3, #0
 8015148:	d001      	beq.n	801514e <CheckForClassBCollision+0x2e>
        {
            return LORAMAC_STATUS_BUSY_PING_SLOT_WINDOW_TIME;
 801514a:	230f      	movs	r3, #15
 801514c:	e007      	b.n	801515e <CheckForClassBCollision+0x3e>
        }
        else if( LoRaMacClassBIsMulticastExpected( ) == true )
 801514e:	f002 fd9d 	bl	8017c8c <LoRaMacClassBIsMulticastExpected>
 8015152:	4603      	mov	r3, r0
 8015154:	2b00      	cmp	r3, #0
 8015156:	d001      	beq.n	801515c <CheckForClassBCollision+0x3c>
        {
            return LORAMAC_STATUS_BUSY_PING_SLOT_WINDOW_TIME;
 8015158:	230f      	movs	r3, #15
 801515a:	e000      	b.n	801515e <CheckForClassBCollision+0x3e>
        }
    }
    return LORAMAC_STATUS_OK;
 801515c:	2300      	movs	r3, #0
}
 801515e:	4618      	mov	r0, r3
 8015160:	bd80      	pop	{r7, pc}
 8015162:	bf00      	nop
 8015164:	20000be0 	.word	0x20000be0

08015168 <ComputeRxWindowParameters>:

static void ComputeRxWindowParameters( void )
{
 8015168:	b590      	push	{r4, r7, lr}
 801516a:	b083      	sub	sp, #12
 801516c:	af02      	add	r7, sp, #8
    // Compute Rx1 windows parameters
    RegionComputeRxWindowParameters( MacCtx.NvmCtx->Region,
 801516e:	4b3f      	ldr	r3, [pc, #252]	; (801526c <ComputeRxWindowParameters+0x104>)
 8015170:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8015174:	781c      	ldrb	r4, [r3, #0]
                                     RegionApplyDrOffset( MacCtx.NvmCtx->Region,
 8015176:	4b3d      	ldr	r3, [pc, #244]	; (801526c <ComputeRxWindowParameters+0x104>)
 8015178:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 801517c:	7818      	ldrb	r0, [r3, #0]
                                                          MacCtx.NvmCtx->MacParams.DownlinkDwellTime,
 801517e:	4b3b      	ldr	r3, [pc, #236]	; (801526c <ComputeRxWindowParameters+0x104>)
 8015180:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
                                     RegionApplyDrOffset( MacCtx.NvmCtx->Region,
 8015184:	f893 10b9 	ldrb.w	r1, [r3, #185]	; 0xb9
                                                          MacCtx.NvmCtx->MacParams.ChannelsDatarate,
 8015188:	4b38      	ldr	r3, [pc, #224]	; (801526c <ComputeRxWindowParameters+0x104>)
 801518a:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
                                     RegionApplyDrOffset( MacCtx.NvmCtx->Region,
 801518e:	f993 2085 	ldrsb.w	r2, [r3, #133]	; 0x85
                                                          MacCtx.NvmCtx->MacParams.Rx1DrOffset ),
 8015192:	4b36      	ldr	r3, [pc, #216]	; (801526c <ComputeRxWindowParameters+0x104>)
 8015194:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8015198:	f893 30a5 	ldrb.w	r3, [r3, #165]	; 0xa5
                                     RegionApplyDrOffset( MacCtx.NvmCtx->Region,
 801519c:	b25b      	sxtb	r3, r3
 801519e:	f004 ff25 	bl	8019fec <RegionApplyDrOffset>
 80151a2:	4603      	mov	r3, r0
    RegionComputeRxWindowParameters( MacCtx.NvmCtx->Region,
 80151a4:	b259      	sxtb	r1, r3
                                     MacCtx.NvmCtx->MacParams.MinRxSymbols,
 80151a6:	4b31      	ldr	r3, [pc, #196]	; (801526c <ComputeRxWindowParameters+0x104>)
 80151a8:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
    RegionComputeRxWindowParameters( MacCtx.NvmCtx->Region,
 80151ac:	f893 208c 	ldrb.w	r2, [r3, #140]	; 0x8c
                                     MacCtx.NvmCtx->MacParams.SystemMaxRxError,
 80151b0:	4b2e      	ldr	r3, [pc, #184]	; (801526c <ComputeRxWindowParameters+0x104>)
 80151b2:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
    RegionComputeRxWindowParameters( MacCtx.NvmCtx->Region,
 80151b6:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80151ba:	482d      	ldr	r0, [pc, #180]	; (8015270 <ComputeRxWindowParameters+0x108>)
 80151bc:	9000      	str	r0, [sp, #0]
 80151be:	4620      	mov	r0, r4
 80151c0:	f004 fdbd 	bl	8019d3e <RegionComputeRxWindowParameters>
                                     &MacCtx.RxWindow1Config );
    // Compute Rx2 windows parameters
    RegionComputeRxWindowParameters( MacCtx.NvmCtx->Region,
 80151c4:	4b29      	ldr	r3, [pc, #164]	; (801526c <ComputeRxWindowParameters+0x104>)
 80151c6:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 80151ca:	7818      	ldrb	r0, [r3, #0]
                                     MacCtx.NvmCtx->MacParams.Rx2Channel.Datarate,
 80151cc:	4b27      	ldr	r3, [pc, #156]	; (801526c <ComputeRxWindowParameters+0x104>)
 80151ce:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 80151d2:	f893 30ac 	ldrb.w	r3, [r3, #172]	; 0xac
    RegionComputeRxWindowParameters( MacCtx.NvmCtx->Region,
 80151d6:	b259      	sxtb	r1, r3
                                     MacCtx.NvmCtx->MacParams.MinRxSymbols,
 80151d8:	4b24      	ldr	r3, [pc, #144]	; (801526c <ComputeRxWindowParameters+0x104>)
 80151da:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
    RegionComputeRxWindowParameters( MacCtx.NvmCtx->Region,
 80151de:	f893 208c 	ldrb.w	r2, [r3, #140]	; 0x8c
                                     MacCtx.NvmCtx->MacParams.SystemMaxRxError,
 80151e2:	4b22      	ldr	r3, [pc, #136]	; (801526c <ComputeRxWindowParameters+0x104>)
 80151e4:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
    RegionComputeRxWindowParameters( MacCtx.NvmCtx->Region,
 80151e8:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80151ec:	4c21      	ldr	r4, [pc, #132]	; (8015274 <ComputeRxWindowParameters+0x10c>)
 80151ee:	9400      	str	r4, [sp, #0]
 80151f0:	f004 fda5 	bl	8019d3e <RegionComputeRxWindowParameters>
                                     &MacCtx.RxWindow2Config );

    // Default setup, in case the device joined
    MacCtx.RxWindow1Delay = MacCtx.NvmCtx->MacParams.ReceiveDelay1 + MacCtx.RxWindow1Config.WindowOffset;
 80151f4:	4b1d      	ldr	r3, [pc, #116]	; (801526c <ComputeRxWindowParameters+0x104>)
 80151f6:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 80151fa:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 80151fe:	4a1b      	ldr	r2, [pc, #108]	; (801526c <ComputeRxWindowParameters+0x104>)
 8015200:	f8d2 23c4 	ldr.w	r2, [r2, #964]	; 0x3c4
 8015204:	4413      	add	r3, r2
 8015206:	4a19      	ldr	r2, [pc, #100]	; (801526c <ComputeRxWindowParameters+0x104>)
 8015208:	f8c2 33b0 	str.w	r3, [r2, #944]	; 0x3b0
    MacCtx.RxWindow2Delay = MacCtx.NvmCtx->MacParams.ReceiveDelay2 + MacCtx.RxWindow2Config.WindowOffset;
 801520c:	4b17      	ldr	r3, [pc, #92]	; (801526c <ComputeRxWindowParameters+0x104>)
 801520e:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8015212:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 8015216:	4a15      	ldr	r2, [pc, #84]	; (801526c <ComputeRxWindowParameters+0x104>)
 8015218:	f8d2 23d8 	ldr.w	r2, [r2, #984]	; 0x3d8
 801521c:	4413      	add	r3, r2
 801521e:	4a13      	ldr	r2, [pc, #76]	; (801526c <ComputeRxWindowParameters+0x104>)
 8015220:	f8c2 33b4 	str.w	r3, [r2, #948]	; 0x3b4

    if( MacCtx.NvmCtx->NetworkActivation == ACTIVATION_TYPE_NONE )
 8015224:	4b11      	ldr	r3, [pc, #68]	; (801526c <ComputeRxWindowParameters+0x104>)
 8015226:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 801522a:	f893 3164 	ldrb.w	r3, [r3, #356]	; 0x164
 801522e:	2b00      	cmp	r3, #0
 8015230:	d117      	bne.n	8015262 <ComputeRxWindowParameters+0xfa>
    {
        MacCtx.RxWindow1Delay = MacCtx.NvmCtx->MacParams.JoinAcceptDelay1 + MacCtx.RxWindow1Config.WindowOffset;
 8015232:	4b0e      	ldr	r3, [pc, #56]	; (801526c <ComputeRxWindowParameters+0x104>)
 8015234:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8015238:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 801523c:	4a0b      	ldr	r2, [pc, #44]	; (801526c <ComputeRxWindowParameters+0x104>)
 801523e:	f8d2 23c4 	ldr.w	r2, [r2, #964]	; 0x3c4
 8015242:	4413      	add	r3, r2
 8015244:	4a09      	ldr	r2, [pc, #36]	; (801526c <ComputeRxWindowParameters+0x104>)
 8015246:	f8c2 33b0 	str.w	r3, [r2, #944]	; 0x3b0
        MacCtx.RxWindow2Delay = MacCtx.NvmCtx->MacParams.JoinAcceptDelay2 + MacCtx.RxWindow2Config.WindowOffset;
 801524a:	4b08      	ldr	r3, [pc, #32]	; (801526c <ComputeRxWindowParameters+0x104>)
 801524c:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8015250:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 8015254:	4a05      	ldr	r2, [pc, #20]	; (801526c <ComputeRxWindowParameters+0x104>)
 8015256:	f8d2 23d8 	ldr.w	r2, [r2, #984]	; 0x3d8
 801525a:	4413      	add	r3, r2
 801525c:	4a03      	ldr	r2, [pc, #12]	; (801526c <ComputeRxWindowParameters+0x104>)
 801525e:	f8c2 33b4 	str.w	r3, [r2, #948]	; 0x3b4
    }
}
 8015262:	bf00      	nop
 8015264:	3704      	adds	r7, #4
 8015266:	46bd      	mov	sp, r7
 8015268:	bd90      	pop	{r4, r7, pc}
 801526a:	bf00      	nop
 801526c:	20000be0 	.word	0x20000be0
 8015270:	20000f98 	.word	0x20000f98
 8015274:	20000fac 	.word	0x20000fac

08015278 <VerifyTxFrame>:

static LoRaMacStatus_t VerifyTxFrame( void )
{
 8015278:	b580      	push	{r7, lr}
 801527a:	b082      	sub	sp, #8
 801527c:	af00      	add	r7, sp, #0
    size_t macCmdsSize = 0;
 801527e:	2300      	movs	r3, #0
 8015280:	607b      	str	r3, [r7, #4]

    if( MacCtx.NvmCtx->NetworkActivation != ACTIVATION_TYPE_NONE )
 8015282:	4b15      	ldr	r3, [pc, #84]	; (80152d8 <VerifyTxFrame+0x60>)
 8015284:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8015288:	f893 3164 	ldrb.w	r3, [r3, #356]	; 0x164
 801528c:	2b00      	cmp	r3, #0
 801528e:	d01d      	beq.n	80152cc <VerifyTxFrame+0x54>
    {
        if( LoRaMacCommandsGetSizeSerializedCmds( &macCmdsSize ) != LORAMAC_COMMANDS_SUCCESS )
 8015290:	1d3b      	adds	r3, r7, #4
 8015292:	4618      	mov	r0, r3
 8015294:	f002 ff9a 	bl	80181cc <LoRaMacCommandsGetSizeSerializedCmds>
 8015298:	4603      	mov	r3, r0
 801529a:	2b00      	cmp	r3, #0
 801529c:	d001      	beq.n	80152a2 <VerifyTxFrame+0x2a>
        {
            return LORAMAC_STATUS_MAC_COMMAD_ERROR;
 801529e:	2313      	movs	r3, #19
 80152a0:	e015      	b.n	80152ce <VerifyTxFrame+0x56>
        }

        if( ValidatePayloadLength( MacCtx.AppDataSize, MacCtx.NvmCtx->MacParams.ChannelsDatarate, macCmdsSize ) == false )
 80152a2:	4b0d      	ldr	r3, [pc, #52]	; (80152d8 <VerifyTxFrame+0x60>)
 80152a4:	f893 0237 	ldrb.w	r0, [r3, #567]	; 0x237
 80152a8:	4b0b      	ldr	r3, [pc, #44]	; (80152d8 <VerifyTxFrame+0x60>)
 80152aa:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 80152ae:	f993 3085 	ldrsb.w	r3, [r3, #133]	; 0x85
 80152b2:	687a      	ldr	r2, [r7, #4]
 80152b4:	b2d2      	uxtb	r2, r2
 80152b6:	4619      	mov	r1, r3
 80152b8:	f7ff f8d2 	bl	8014460 <ValidatePayloadLength>
 80152bc:	4603      	mov	r3, r0
 80152be:	f083 0301 	eor.w	r3, r3, #1
 80152c2:	b2db      	uxtb	r3, r3
 80152c4:	2b00      	cmp	r3, #0
 80152c6:	d001      	beq.n	80152cc <VerifyTxFrame+0x54>
        {
            return LORAMAC_STATUS_LENGTH_ERROR;
 80152c8:	2308      	movs	r3, #8
 80152ca:	e000      	b.n	80152ce <VerifyTxFrame+0x56>
        }
    }
    return LORAMAC_STATUS_OK;
 80152cc:	2300      	movs	r3, #0
}
 80152ce:	4618      	mov	r0, r3
 80152d0:	3708      	adds	r7, #8
 80152d2:	46bd      	mov	sp, r7
 80152d4:	bd80      	pop	{r7, pc}
 80152d6:	bf00      	nop
 80152d8:	20000be0 	.word	0x20000be0

080152dc <SerializeTxFrame>:

static LoRaMacStatus_t SerializeTxFrame( void )
{
 80152dc:	b580      	push	{r7, lr}
 80152de:	b082      	sub	sp, #8
 80152e0:	af00      	add	r7, sp, #0
    LoRaMacSerializerStatus_t serializeStatus;

    switch( MacCtx.TxMsg.Type )
 80152e2:	4b18      	ldr	r3, [pc, #96]	; (8015344 <SerializeTxFrame+0x68>)
 80152e4:	f893 3104 	ldrb.w	r3, [r3, #260]	; 0x104
 80152e8:	2b00      	cmp	r3, #0
 80152ea:	d002      	beq.n	80152f2 <SerializeTxFrame+0x16>
 80152ec:	2b04      	cmp	r3, #4
 80152ee:	d011      	beq.n	8015314 <SerializeTxFrame+0x38>
 80152f0:	e021      	b.n	8015336 <SerializeTxFrame+0x5a>
    {
        case LORAMAC_MSG_TYPE_JOIN_REQUEST:
            serializeStatus = LoRaMacSerializerJoinRequest( &MacCtx.TxMsg.Message.JoinReq );
 80152f2:	4815      	ldr	r0, [pc, #84]	; (8015348 <SerializeTxFrame+0x6c>)
 80152f4:	f004 fad5 	bl	80198a2 <LoRaMacSerializerJoinRequest>
 80152f8:	4603      	mov	r3, r0
 80152fa:	71fb      	strb	r3, [r7, #7]
            if( LORAMAC_SERIALIZER_SUCCESS != serializeStatus )
 80152fc:	79fb      	ldrb	r3, [r7, #7]
 80152fe:	2b00      	cmp	r3, #0
 8015300:	d001      	beq.n	8015306 <SerializeTxFrame+0x2a>
            {
                return LORAMAC_STATUS_CRYPTO_ERROR;
 8015302:	2311      	movs	r3, #17
 8015304:	e01a      	b.n	801533c <SerializeTxFrame+0x60>
            }
            MacCtx.PktBufferLen = MacCtx.TxMsg.Message.JoinReq.BufSize;
 8015306:	4b0f      	ldr	r3, [pc, #60]	; (8015344 <SerializeTxFrame+0x68>)
 8015308:	f893 310c 	ldrb.w	r3, [r3, #268]	; 0x10c
 801530c:	b29a      	uxth	r2, r3
 801530e:	4b0d      	ldr	r3, [pc, #52]	; (8015344 <SerializeTxFrame+0x68>)
 8015310:	801a      	strh	r2, [r3, #0]
            break;
 8015312:	e012      	b.n	801533a <SerializeTxFrame+0x5e>
        case LORAMAC_MSG_TYPE_DATA:
            serializeStatus = LoRaMacSerializerData( &MacCtx.TxMsg.Message.Data );
 8015314:	480c      	ldr	r0, [pc, #48]	; (8015348 <SerializeTxFrame+0x6c>)
 8015316:	f004 fb46 	bl	80199a6 <LoRaMacSerializerData>
 801531a:	4603      	mov	r3, r0
 801531c:	71fb      	strb	r3, [r7, #7]
            if( LORAMAC_SERIALIZER_SUCCESS != serializeStatus )
 801531e:	79fb      	ldrb	r3, [r7, #7]
 8015320:	2b00      	cmp	r3, #0
 8015322:	d001      	beq.n	8015328 <SerializeTxFrame+0x4c>
            {
                return LORAMAC_STATUS_CRYPTO_ERROR;
 8015324:	2311      	movs	r3, #17
 8015326:	e009      	b.n	801533c <SerializeTxFrame+0x60>
            }
            MacCtx.PktBufferLen = MacCtx.TxMsg.Message.Data.BufSize;
 8015328:	4b06      	ldr	r3, [pc, #24]	; (8015344 <SerializeTxFrame+0x68>)
 801532a:	f893 310c 	ldrb.w	r3, [r3, #268]	; 0x10c
 801532e:	b29a      	uxth	r2, r3
 8015330:	4b04      	ldr	r3, [pc, #16]	; (8015344 <SerializeTxFrame+0x68>)
 8015332:	801a      	strh	r2, [r3, #0]
            break;
 8015334:	e001      	b.n	801533a <SerializeTxFrame+0x5e>
        case LORAMAC_MSG_TYPE_JOIN_ACCEPT:
        case LORAMAC_MSG_TYPE_UNDEF:
        default:
            return LORAMAC_STATUS_PARAMETER_INVALID;
 8015336:	2303      	movs	r3, #3
 8015338:	e000      	b.n	801533c <SerializeTxFrame+0x60>
    }
    return LORAMAC_STATUS_OK;
 801533a:	2300      	movs	r3, #0
}
 801533c:	4618      	mov	r0, r3
 801533e:	3708      	adds	r7, #8
 8015340:	46bd      	mov	sp, r7
 8015342:	bd80      	pop	{r7, pc}
 8015344:	20000be0 	.word	0x20000be0
 8015348:	20000ce8 	.word	0x20000ce8

0801534c <ScheduleTx>:

static LoRaMacStatus_t ScheduleTx( bool allowDelayedTx )
{
 801534c:	b580      	push	{r7, lr}
 801534e:	b090      	sub	sp, #64	; 0x40
 8015350:	af02      	add	r7, sp, #8
 8015352:	4603      	mov	r3, r0
 8015354:	73fb      	strb	r3, [r7, #15]
    LoRaMacStatus_t status = LORAMAC_STATUS_PARAMETER_INVALID;
 8015356:	2303      	movs	r3, #3
 8015358:	f887 3037 	strb.w	r3, [r7, #55]	; 0x37
    NextChanParams_t nextChan;

    // Check class b collisions
    status = CheckForClassBCollision( );
 801535c:	f7ff fee0 	bl	8015120 <CheckForClassBCollision>
 8015360:	4603      	mov	r3, r0
 8015362:	f887 3037 	strb.w	r3, [r7, #55]	; 0x37
    if( status != LORAMAC_STATUS_OK )
 8015366:	f897 3037 	ldrb.w	r3, [r7, #55]	; 0x37
 801536a:	2b00      	cmp	r3, #0
 801536c:	d002      	beq.n	8015374 <ScheduleTx+0x28>
    {
        return status;
 801536e:	f897 3037 	ldrb.w	r3, [r7, #55]	; 0x37
 8015372:	e0a2      	b.n	80154ba <ScheduleTx+0x16e>
    }

    // Update back-off
    CalculateBackOff( );
 8015374:	f000 f90a 	bl	801558c <CalculateBackOff>

    // Serialize frame
    status = SerializeTxFrame( );
 8015378:	f7ff ffb0 	bl	80152dc <SerializeTxFrame>
 801537c:	4603      	mov	r3, r0
 801537e:	f887 3037 	strb.w	r3, [r7, #55]	; 0x37
    if( status != LORAMAC_STATUS_OK )
 8015382:	f897 3037 	ldrb.w	r3, [r7, #55]	; 0x37
 8015386:	2b00      	cmp	r3, #0
 8015388:	d002      	beq.n	8015390 <ScheduleTx+0x44>
    {
        return status;
 801538a:	f897 3037 	ldrb.w	r3, [r7, #55]	; 0x37
 801538e:	e094      	b.n	80154ba <ScheduleTx+0x16e>
    }

    nextChan.AggrTimeOff = MacCtx.NvmCtx->AggregatedTimeOff;
 8015390:	4b4c      	ldr	r3, [pc, #304]	; (80154c4 <ScheduleTx+0x178>)
 8015392:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8015396:	f8d3 3154 	ldr.w	r3, [r3, #340]	; 0x154
 801539a:	617b      	str	r3, [r7, #20]
    nextChan.Datarate = MacCtx.NvmCtx->MacParams.ChannelsDatarate;
 801539c:	4b49      	ldr	r3, [pc, #292]	; (80154c4 <ScheduleTx+0x178>)
 801539e:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 80153a2:	f993 3085 	ldrsb.w	r3, [r3, #133]	; 0x85
 80153a6:	773b      	strb	r3, [r7, #28]
    nextChan.DutyCycleEnabled = MacCtx.NvmCtx->DutyCycleOn;
 80153a8:	4b46      	ldr	r3, [pc, #280]	; (80154c4 <ScheduleTx+0x178>)
 80153aa:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 80153ae:	f893 30c9 	ldrb.w	r3, [r3, #201]	; 0xc9
 80153b2:	77bb      	strb	r3, [r7, #30]
    nextChan.ElapsedTimeSinceStartUp = SysTimeSub( SysTimeGetMcuTime( ), MacCtx.NvmCtx->InitializationTime );
 80153b4:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 80153b8:	4618      	mov	r0, r3
 80153ba:	f00b f9d9 	bl	8020770 <SysTimeGetMcuTime>
 80153be:	4b41      	ldr	r3, [pc, #260]	; (80154c4 <ScheduleTx+0x178>)
 80153c0:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 80153c4:	4638      	mov	r0, r7
 80153c6:	f8d3 215c 	ldr.w	r2, [r3, #348]	; 0x15c
 80153ca:	9200      	str	r2, [sp, #0]
 80153cc:	f8d3 3158 	ldr.w	r3, [r3, #344]	; 0x158
 80153d0:	f107 022c 	add.w	r2, r7, #44	; 0x2c
 80153d4:	ca06      	ldmia	r2, {r1, r2}
 80153d6:	f00b f92c 	bl	8020632 <SysTimeSub>
 80153da:	f107 0320 	add.w	r3, r7, #32
 80153de:	463a      	mov	r2, r7
 80153e0:	e892 0003 	ldmia.w	r2, {r0, r1}
 80153e4:	e883 0003 	stmia.w	r3, {r0, r1}
    nextChan.LastAggrTx = MacCtx.NvmCtx->LastTxDoneTime;
 80153e8:	4b36      	ldr	r3, [pc, #216]	; (80154c4 <ScheduleTx+0x178>)
 80153ea:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 80153ee:	f8d3 3150 	ldr.w	r3, [r3, #336]	; 0x150
 80153f2:	61bb      	str	r3, [r7, #24]
    nextChan.LastTxIsJoinRequest = false;
 80153f4:	2300      	movs	r3, #0
 80153f6:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
    nextChan.Joined = true;
 80153fa:	2301      	movs	r3, #1
 80153fc:	777b      	strb	r3, [r7, #29]
    nextChan.PktLen = MacCtx.PktBufferLen;
 80153fe:	4b31      	ldr	r3, [pc, #196]	; (80154c4 <ScheduleTx+0x178>)
 8015400:	881b      	ldrh	r3, [r3, #0]
 8015402:	857b      	strh	r3, [r7, #42]	; 0x2a

    // Setup the parameters based on the join status
    if( MacCtx.NvmCtx->NetworkActivation == ACTIVATION_TYPE_NONE )
 8015404:	4b2f      	ldr	r3, [pc, #188]	; (80154c4 <ScheduleTx+0x178>)
 8015406:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 801540a:	f893 3164 	ldrb.w	r3, [r3, #356]	; 0x164
 801540e:	2b00      	cmp	r3, #0
 8015410:	d104      	bne.n	801541c <ScheduleTx+0xd0>
    {
        nextChan.LastTxIsJoinRequest = true;
 8015412:	2301      	movs	r3, #1
 8015414:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
        nextChan.Joined = false;
 8015418:	2300      	movs	r3, #0
 801541a:	777b      	strb	r3, [r7, #29]
    }

    // Select channel
    status = RegionNextChannel( MacCtx.NvmCtx->Region, &nextChan, &MacCtx.Channel, &MacCtx.DutyCycleWaitTime, &MacCtx.NvmCtx->AggregatedTimeOff );
 801541c:	4b29      	ldr	r3, [pc, #164]	; (80154c4 <ScheduleTx+0x178>)
 801541e:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8015422:	7818      	ldrb	r0, [r3, #0]
 8015424:	4b27      	ldr	r3, [pc, #156]	; (80154c4 <ScheduleTx+0x178>)
 8015426:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 801542a:	f503 73aa 	add.w	r3, r3, #340	; 0x154
 801542e:	f107 0114 	add.w	r1, r7, #20
 8015432:	9300      	str	r3, [sp, #0]
 8015434:	4b24      	ldr	r3, [pc, #144]	; (80154c8 <ScheduleTx+0x17c>)
 8015436:	4a25      	ldr	r2, [pc, #148]	; (80154cc <ScheduleTx+0x180>)
 8015438:	f004 fd9d 	bl	8019f76 <RegionNextChannel>
 801543c:	4603      	mov	r3, r0
 801543e:	f887 3037 	strb.w	r3, [r7, #55]	; 0x37

    if( status != LORAMAC_STATUS_OK )
 8015442:	f897 3037 	ldrb.w	r3, [r7, #55]	; 0x37
 8015446:	2b00      	cmp	r3, #0
 8015448:	d022      	beq.n	8015490 <ScheduleTx+0x144>
    {
        if( ( status == LORAMAC_STATUS_DUTYCYCLE_RESTRICTED ) &&
 801544a:	f897 3037 	ldrb.w	r3, [r7, #55]	; 0x37
 801544e:	2b0b      	cmp	r3, #11
 8015450:	d11b      	bne.n	801548a <ScheduleTx+0x13e>
 8015452:	7bfb      	ldrb	r3, [r7, #15]
 8015454:	2b00      	cmp	r3, #0
 8015456:	d018      	beq.n	801548a <ScheduleTx+0x13e>
            ( allowDelayedTx == true ) )
        {
            // Allow delayed transmissions. We have to allow it in case
            // the MAC must retransmit a frame with the frame repetitions
            if( MacCtx.DutyCycleWaitTime != 0 )
 8015458:	4b1a      	ldr	r3, [pc, #104]	; (80154c4 <ScheduleTx+0x178>)
 801545a:	f8d3 3488 	ldr.w	r3, [r3, #1160]	; 0x488
 801545e:	2b00      	cmp	r3, #0
 8015460:	d011      	beq.n	8015486 <ScheduleTx+0x13a>
            {// Send later - prepare timer
                MacCtx.MacState |= LORAMAC_TX_DELAYED;
 8015462:	4b18      	ldr	r3, [pc, #96]	; (80154c4 <ScheduleTx+0x178>)
 8015464:	f8d3 3340 	ldr.w	r3, [r3, #832]	; 0x340
 8015468:	f043 0320 	orr.w	r3, r3, #32
 801546c:	4a15      	ldr	r2, [pc, #84]	; (80154c4 <ScheduleTx+0x178>)
 801546e:	f8c2 3340 	str.w	r3, [r2, #832]	; 0x340
                TimerSetValue( &MacCtx.TxDelayedTimer, MacCtx.DutyCycleWaitTime );
 8015472:	4b14      	ldr	r3, [pc, #80]	; (80154c4 <ScheduleTx+0x178>)
 8015474:	f8d3 3488 	ldr.w	r3, [r3, #1160]	; 0x488
 8015478:	4619      	mov	r1, r3
 801547a:	4815      	ldr	r0, [pc, #84]	; (80154d0 <ScheduleTx+0x184>)
 801547c:	f00b fe9e 	bl	80211bc <UTIL_TIMER_SetPeriod>
                TimerStart( &MacCtx.TxDelayedTimer );
 8015480:	4813      	ldr	r0, [pc, #76]	; (80154d0 <ScheduleTx+0x184>)
 8015482:	f00b fdbd 	bl	8021000 <UTIL_TIMER_Start>
            }
            return LORAMAC_STATUS_OK;
 8015486:	2300      	movs	r3, #0
 8015488:	e017      	b.n	80154ba <ScheduleTx+0x16e>
        }
        else
        {// State where the MAC cannot send a frame
            return status;
 801548a:	f897 3037 	ldrb.w	r3, [r7, #55]	; 0x37
 801548e:	e014      	b.n	80154ba <ScheduleTx+0x16e>
        }
    }

    // Compute window parameters, offsets, rx symbols, system errors etc.
    ComputeRxWindowParameters( );
 8015490:	f7ff fe6a 	bl	8015168 <ComputeRxWindowParameters>

    // Verify TX frame
    status = VerifyTxFrame( );
 8015494:	f7ff fef0 	bl	8015278 <VerifyTxFrame>
 8015498:	4603      	mov	r3, r0
 801549a:	f887 3037 	strb.w	r3, [r7, #55]	; 0x37
    if( status != LORAMAC_STATUS_OK )
 801549e:	f897 3037 	ldrb.w	r3, [r7, #55]	; 0x37
 80154a2:	2b00      	cmp	r3, #0
 80154a4:	d002      	beq.n	80154ac <ScheduleTx+0x160>
    {
        return status;
 80154a6:	f897 3037 	ldrb.w	r3, [r7, #55]	; 0x37
 80154aa:	e006      	b.n	80154ba <ScheduleTx+0x16e>
    }

    // Try to send now
    return SendFrameOnChannel( MacCtx.Channel );
 80154ac:	4b05      	ldr	r3, [pc, #20]	; (80154c4 <ScheduleTx+0x178>)
 80154ae:	f893 3415 	ldrb.w	r3, [r3, #1045]	; 0x415
 80154b2:	4618      	mov	r0, r3
 80154b4:	f000 fb28 	bl	8015b08 <SendFrameOnChannel>
 80154b8:	4603      	mov	r3, r0
}
 80154ba:	4618      	mov	r0, r3
 80154bc:	3738      	adds	r7, #56	; 0x38
 80154be:	46bd      	mov	sp, r7
 80154c0:	bd80      	pop	{r7, pc}
 80154c2:	bf00      	nop
 80154c4:	20000be0 	.word	0x20000be0
 80154c8:	20001068 	.word	0x20001068
 80154cc:	20000ff5 	.word	0x20000ff5
 80154d0:	20000f48 	.word	0x20000f48

080154d4 <SecureFrame>:

static LoRaMacStatus_t SecureFrame( uint8_t txDr, uint8_t txCh )
{
 80154d4:	b580      	push	{r7, lr}
 80154d6:	b084      	sub	sp, #16
 80154d8:	af00      	add	r7, sp, #0
 80154da:	4603      	mov	r3, r0
 80154dc:	460a      	mov	r2, r1
 80154de:	71fb      	strb	r3, [r7, #7]
 80154e0:	4613      	mov	r3, r2
 80154e2:	71bb      	strb	r3, [r7, #6]
    LoRaMacCryptoStatus_t macCryptoStatus = LORAMAC_CRYPTO_ERROR;
 80154e4:	2313      	movs	r3, #19
 80154e6:	73fb      	strb	r3, [r7, #15]
    uint32_t fCntUp = 0;
 80154e8:	2300      	movs	r3, #0
 80154ea:	60bb      	str	r3, [r7, #8]

    switch( MacCtx.TxMsg.Type )
 80154ec:	4b25      	ldr	r3, [pc, #148]	; (8015584 <SecureFrame+0xb0>)
 80154ee:	f893 3104 	ldrb.w	r3, [r3, #260]	; 0x104
 80154f2:	2b00      	cmp	r3, #0
 80154f4:	d002      	beq.n	80154fc <SecureFrame+0x28>
 80154f6:	2b04      	cmp	r3, #4
 80154f8:	d011      	beq.n	801551e <SecureFrame+0x4a>
 80154fa:	e03b      	b.n	8015574 <SecureFrame+0xa0>
    {
        case LORAMAC_MSG_TYPE_JOIN_REQUEST:
            macCryptoStatus = LoRaMacCryptoPrepareJoinRequest( &MacCtx.TxMsg.Message.JoinReq );
 80154fc:	4822      	ldr	r0, [pc, #136]	; (8015588 <SecureFrame+0xb4>)
 80154fe:	f003 fdad 	bl	801905c <LoRaMacCryptoPrepareJoinRequest>
 8015502:	4603      	mov	r3, r0
 8015504:	73fb      	strb	r3, [r7, #15]
            if( LORAMAC_CRYPTO_SUCCESS != macCryptoStatus )
 8015506:	7bfb      	ldrb	r3, [r7, #15]
 8015508:	2b00      	cmp	r3, #0
 801550a:	d001      	beq.n	8015510 <SecureFrame+0x3c>
            {
                return LORAMAC_STATUS_CRYPTO_ERROR;
 801550c:	2311      	movs	r3, #17
 801550e:	e034      	b.n	801557a <SecureFrame+0xa6>
            }
            MacCtx.PktBufferLen = MacCtx.TxMsg.Message.JoinReq.BufSize;
 8015510:	4b1c      	ldr	r3, [pc, #112]	; (8015584 <SecureFrame+0xb0>)
 8015512:	f893 310c 	ldrb.w	r3, [r3, #268]	; 0x10c
 8015516:	b29a      	uxth	r2, r3
 8015518:	4b1a      	ldr	r3, [pc, #104]	; (8015584 <SecureFrame+0xb0>)
 801551a:	801a      	strh	r2, [r3, #0]
            break;
 801551c:	e02c      	b.n	8015578 <SecureFrame+0xa4>
        case LORAMAC_MSG_TYPE_DATA:

            if( LORAMAC_CRYPTO_SUCCESS != LoRaMacCryptoGetFCntUp( &fCntUp ) )
 801551e:	f107 0308 	add.w	r3, r7, #8
 8015522:	4618      	mov	r0, r3
 8015524:	f003 fcd6 	bl	8018ed4 <LoRaMacCryptoGetFCntUp>
 8015528:	4603      	mov	r3, r0
 801552a:	2b00      	cmp	r3, #0
 801552c:	d001      	beq.n	8015532 <SecureFrame+0x5e>
            {
                return LORAMAC_STATUS_FCNT_HANDLER_ERROR;
 801552e:	2312      	movs	r3, #18
 8015530:	e023      	b.n	801557a <SecureFrame+0xa6>
            }

            if( ( MacCtx.ChannelsNbTransCounter >= 1 ) || ( MacCtx.AckTimeoutRetriesCounter > 1 ) )
 8015532:	4b14      	ldr	r3, [pc, #80]	; (8015584 <SecureFrame+0xb0>)
 8015534:	f893 3410 	ldrb.w	r3, [r3, #1040]	; 0x410
 8015538:	2b00      	cmp	r3, #0
 801553a:	d104      	bne.n	8015546 <SecureFrame+0x72>
 801553c:	4b11      	ldr	r3, [pc, #68]	; (8015584 <SecureFrame+0xb0>)
 801553e:	f893 3412 	ldrb.w	r3, [r3, #1042]	; 0x412
 8015542:	2b01      	cmp	r3, #1
 8015544:	d902      	bls.n	801554c <SecureFrame+0x78>
            {
                fCntUp -= 1;
 8015546:	68bb      	ldr	r3, [r7, #8]
 8015548:	3b01      	subs	r3, #1
 801554a:	60bb      	str	r3, [r7, #8]
            }

            macCryptoStatus = LoRaMacCryptoSecureMessage( fCntUp, txDr, txCh, &MacCtx.TxMsg.Message.Data );
 801554c:	68b8      	ldr	r0, [r7, #8]
 801554e:	79ba      	ldrb	r2, [r7, #6]
 8015550:	79f9      	ldrb	r1, [r7, #7]
 8015552:	4b0d      	ldr	r3, [pc, #52]	; (8015588 <SecureFrame+0xb4>)
 8015554:	f003 fe7a 	bl	801924c <LoRaMacCryptoSecureMessage>
 8015558:	4603      	mov	r3, r0
 801555a:	73fb      	strb	r3, [r7, #15]
            if( LORAMAC_CRYPTO_SUCCESS != macCryptoStatus )
 801555c:	7bfb      	ldrb	r3, [r7, #15]
 801555e:	2b00      	cmp	r3, #0
 8015560:	d001      	beq.n	8015566 <SecureFrame+0x92>
            {
                return LORAMAC_STATUS_CRYPTO_ERROR;
 8015562:	2311      	movs	r3, #17
 8015564:	e009      	b.n	801557a <SecureFrame+0xa6>
            }
            MacCtx.PktBufferLen = MacCtx.TxMsg.Message.Data.BufSize;
 8015566:	4b07      	ldr	r3, [pc, #28]	; (8015584 <SecureFrame+0xb0>)
 8015568:	f893 310c 	ldrb.w	r3, [r3, #268]	; 0x10c
 801556c:	b29a      	uxth	r2, r3
 801556e:	4b05      	ldr	r3, [pc, #20]	; (8015584 <SecureFrame+0xb0>)
 8015570:	801a      	strh	r2, [r3, #0]
            break;
 8015572:	e001      	b.n	8015578 <SecureFrame+0xa4>
        case LORAMAC_MSG_TYPE_JOIN_ACCEPT:
        case LORAMAC_MSG_TYPE_UNDEF:
        default:
            return LORAMAC_STATUS_PARAMETER_INVALID;
 8015574:	2303      	movs	r3, #3
 8015576:	e000      	b.n	801557a <SecureFrame+0xa6>
    }
    return LORAMAC_STATUS_OK;
 8015578:	2300      	movs	r3, #0
}
 801557a:	4618      	mov	r0, r3
 801557c:	3710      	adds	r7, #16
 801557e:	46bd      	mov	sp, r7
 8015580:	bd80      	pop	{r7, pc}
 8015582:	bf00      	nop
 8015584:	20000be0 	.word	0x20000be0
 8015588:	20000ce8 	.word	0x20000ce8

0801558c <CalculateBackOff>:

static void CalculateBackOff( void )
{
 801558c:	b480      	push	{r7}
 801558e:	af00      	add	r7, sp, #0
    // Make sure that the calculation of the backoff time for the aggregated time off will only be done in
    // case the value is zero. It will be set to zero in the function RegionNextChannel.
    if( MacCtx.NvmCtx->AggregatedTimeOff == 0 )
 8015590:	4b0d      	ldr	r3, [pc, #52]	; (80155c8 <CalculateBackOff+0x3c>)
 8015592:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8015596:	f8d3 3154 	ldr.w	r3, [r3, #340]	; 0x154
 801559a:	2b00      	cmp	r3, #0
 801559c:	d10f      	bne.n	80155be <CalculateBackOff+0x32>
    {
        // Update aggregated time-off. This must be an assignment and no incremental
        // update as we do only calculate the time-off based on the last transmission
        MacCtx.NvmCtx->AggregatedTimeOff = ( MacCtx.TxTimeOnAir * MacCtx.NvmCtx->AggregatedDCycle - MacCtx.TxTimeOnAir );
 801559e:	4b0a      	ldr	r3, [pc, #40]	; (80155c8 <CalculateBackOff+0x3c>)
 80155a0:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 80155a4:	f8b3 314c 	ldrh.w	r3, [r3, #332]	; 0x14c
 80155a8:	1e5a      	subs	r2, r3, #1
 80155aa:	4b07      	ldr	r3, [pc, #28]	; (80155c8 <CalculateBackOff+0x3c>)
 80155ac:	f8d3 1418 	ldr.w	r1, [r3, #1048]	; 0x418
 80155b0:	4b05      	ldr	r3, [pc, #20]	; (80155c8 <CalculateBackOff+0x3c>)
 80155b2:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 80155b6:	fb01 f202 	mul.w	r2, r1, r2
 80155ba:	f8c3 2154 	str.w	r2, [r3, #340]	; 0x154
    }
}
 80155be:	bf00      	nop
 80155c0:	46bd      	mov	sp, r7
 80155c2:	bc80      	pop	{r7}
 80155c4:	4770      	bx	lr
 80155c6:	bf00      	nop
 80155c8:	20000be0 	.word	0x20000be0

080155cc <RemoveMacCommands>:

static void RemoveMacCommands( LoRaMacRxSlot_t rxSlot, LoRaMacFrameCtrl_t fCtrl, Mcps_t request )
{
 80155cc:	b580      	push	{r7, lr}
 80155ce:	b082      	sub	sp, #8
 80155d0:	af00      	add	r7, sp, #0
 80155d2:	4603      	mov	r3, r0
 80155d4:	7139      	strb	r1, [r7, #4]
 80155d6:	71fb      	strb	r3, [r7, #7]
 80155d8:	4613      	mov	r3, r2
 80155da:	71bb      	strb	r3, [r7, #6]
    if( rxSlot == RX_SLOT_WIN_1 || rxSlot == RX_SLOT_WIN_2  )
 80155dc:	79fb      	ldrb	r3, [r7, #7]
 80155de:	2b00      	cmp	r3, #0
 80155e0:	d002      	beq.n	80155e8 <RemoveMacCommands+0x1c>
 80155e2:	79fb      	ldrb	r3, [r7, #7]
 80155e4:	2b01      	cmp	r3, #1
 80155e6:	d10d      	bne.n	8015604 <RemoveMacCommands+0x38>
    {
        // Remove all sticky MAC commands answers since we can assume
        // that they have been received by the server.
        if( request == MCPS_CONFIRMED )
 80155e8:	79bb      	ldrb	r3, [r7, #6]
 80155ea:	2b01      	cmp	r3, #1
 80155ec:	d108      	bne.n	8015600 <RemoveMacCommands+0x34>
        {
            if( fCtrl.Bits.Ack == 1 )
 80155ee:	793b      	ldrb	r3, [r7, #4]
 80155f0:	f003 0320 	and.w	r3, r3, #32
 80155f4:	b2db      	uxtb	r3, r3
 80155f6:	2b00      	cmp	r3, #0
 80155f8:	d004      	beq.n	8015604 <RemoveMacCommands+0x38>
            {  // For confirmed uplinks only if we have received an ACK.
                LoRaMacCommandsRemoveStickyAnsCmds( );
 80155fa:	f002 fdc3 	bl	8018184 <LoRaMacCommandsRemoveStickyAnsCmds>
        else
        {
            LoRaMacCommandsRemoveStickyAnsCmds( );
        }
    }
}
 80155fe:	e001      	b.n	8015604 <RemoveMacCommands+0x38>
            LoRaMacCommandsRemoveStickyAnsCmds( );
 8015600:	f002 fdc0 	bl	8018184 <LoRaMacCommandsRemoveStickyAnsCmds>
}
 8015604:	bf00      	nop
 8015606:	3708      	adds	r7, #8
 8015608:	46bd      	mov	sp, r7
 801560a:	bd80      	pop	{r7, pc}

0801560c <ResetMacParameters>:

static void ResetMacParameters( void )
{
 801560c:	b5b0      	push	{r4, r5, r7, lr}
 801560e:	b082      	sub	sp, #8
 8015610:	af00      	add	r7, sp, #0
    MacCtx.NvmCtx->NetworkActivation = ACTIVATION_TYPE_NONE;
 8015612:	4b6d      	ldr	r3, [pc, #436]	; (80157c8 <ResetMacParameters+0x1bc>)
 8015614:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8015618:	2200      	movs	r2, #0
 801561a:	f883 2164 	strb.w	r2, [r3, #356]	; 0x164

    // ADR counter
    MacCtx.NvmCtx->AdrAckCounter = 0;
 801561e:	4b6a      	ldr	r3, [pc, #424]	; (80157c8 <ResetMacParameters+0x1bc>)
 8015620:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8015624:	2200      	movs	r2, #0
 8015626:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80

    MacCtx.ChannelsNbTransCounter = 0;
 801562a:	4b67      	ldr	r3, [pc, #412]	; (80157c8 <ResetMacParameters+0x1bc>)
 801562c:	2200      	movs	r2, #0
 801562e:	f883 2410 	strb.w	r2, [r3, #1040]	; 0x410
    MacCtx.AckTimeoutRetries = 1;
 8015632:	4b65      	ldr	r3, [pc, #404]	; (80157c8 <ResetMacParameters+0x1bc>)
 8015634:	2201      	movs	r2, #1
 8015636:	f883 2411 	strb.w	r2, [r3, #1041]	; 0x411
    MacCtx.AckTimeoutRetriesCounter = 1;
 801563a:	4b63      	ldr	r3, [pc, #396]	; (80157c8 <ResetMacParameters+0x1bc>)
 801563c:	2201      	movs	r2, #1
 801563e:	f883 2412 	strb.w	r2, [r3, #1042]	; 0x412
    MacCtx.AckTimeoutRetry = false;
 8015642:	4b61      	ldr	r3, [pc, #388]	; (80157c8 <ResetMacParameters+0x1bc>)
 8015644:	2200      	movs	r2, #0
 8015646:	f883 2413 	strb.w	r2, [r3, #1043]	; 0x413

    MacCtx.NvmCtx->MaxDCycle = 0;
 801564a:	4b5f      	ldr	r3, [pc, #380]	; (80157c8 <ResetMacParameters+0x1bc>)
 801564c:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8015650:	2200      	movs	r2, #0
 8015652:	f883 20c8 	strb.w	r2, [r3, #200]	; 0xc8
    MacCtx.NvmCtx->AggregatedDCycle = 1;
 8015656:	4b5c      	ldr	r3, [pc, #368]	; (80157c8 <ResetMacParameters+0x1bc>)
 8015658:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 801565c:	2201      	movs	r2, #1
 801565e:	f8a3 214c 	strh.w	r2, [r3, #332]	; 0x14c

    MacCtx.NvmCtx->MacParams.ChannelsTxPower = MacCtx.NvmCtx->MacParamsDefaults.ChannelsTxPower;
 8015662:	4b59      	ldr	r3, [pc, #356]	; (80157c8 <ResetMacParameters+0x1bc>)
 8015664:	f8d3 2484 	ldr.w	r2, [r3, #1156]	; 0x484
 8015668:	4b57      	ldr	r3, [pc, #348]	; (80157c8 <ResetMacParameters+0x1bc>)
 801566a:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 801566e:	f992 2004 	ldrsb.w	r2, [r2, #4]
 8015672:	f883 2084 	strb.w	r2, [r3, #132]	; 0x84
    MacCtx.NvmCtx->MacParams.ChannelsDatarate = MacCtx.NvmCtx->MacParamsDefaults.ChannelsDatarate;
 8015676:	4b54      	ldr	r3, [pc, #336]	; (80157c8 <ResetMacParameters+0x1bc>)
 8015678:	f8d3 2484 	ldr.w	r2, [r3, #1156]	; 0x484
 801567c:	4b52      	ldr	r3, [pc, #328]	; (80157c8 <ResetMacParameters+0x1bc>)
 801567e:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8015682:	f992 2005 	ldrsb.w	r2, [r2, #5]
 8015686:	f883 2085 	strb.w	r2, [r3, #133]	; 0x85
    MacCtx.NvmCtx->MacParams.Rx1DrOffset = MacCtx.NvmCtx->MacParamsDefaults.Rx1DrOffset;
 801568a:	4b4f      	ldr	r3, [pc, #316]	; (80157c8 <ResetMacParameters+0x1bc>)
 801568c:	f8d3 2484 	ldr.w	r2, [r3, #1156]	; 0x484
 8015690:	4b4d      	ldr	r3, [pc, #308]	; (80157c8 <ResetMacParameters+0x1bc>)
 8015692:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8015696:	f892 2025 	ldrb.w	r2, [r2, #37]	; 0x25
 801569a:	f883 20a5 	strb.w	r2, [r3, #165]	; 0xa5
    MacCtx.NvmCtx->MacParams.Rx2Channel = MacCtx.NvmCtx->MacParamsDefaults.Rx2Channel;
 801569e:	4b4a      	ldr	r3, [pc, #296]	; (80157c8 <ResetMacParameters+0x1bc>)
 80156a0:	f8d3 2484 	ldr.w	r2, [r3, #1156]	; 0x484
 80156a4:	4b48      	ldr	r3, [pc, #288]	; (80157c8 <ResetMacParameters+0x1bc>)
 80156a6:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 80156aa:	33a8      	adds	r3, #168	; 0xa8
 80156ac:	3228      	adds	r2, #40	; 0x28
 80156ae:	e892 0003 	ldmia.w	r2, {r0, r1}
 80156b2:	e883 0003 	stmia.w	r3, {r0, r1}
    MacCtx.NvmCtx->MacParams.RxCChannel = MacCtx.NvmCtx->MacParamsDefaults.RxCChannel;
 80156b6:	4b44      	ldr	r3, [pc, #272]	; (80157c8 <ResetMacParameters+0x1bc>)
 80156b8:	f8d3 2484 	ldr.w	r2, [r3, #1156]	; 0x484
 80156bc:	4b42      	ldr	r3, [pc, #264]	; (80157c8 <ResetMacParameters+0x1bc>)
 80156be:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 80156c2:	33b0      	adds	r3, #176	; 0xb0
 80156c4:	3230      	adds	r2, #48	; 0x30
 80156c6:	e892 0003 	ldmia.w	r2, {r0, r1}
 80156ca:	e883 0003 	stmia.w	r3, {r0, r1}
    MacCtx.NvmCtx->MacParams.UplinkDwellTime = MacCtx.NvmCtx->MacParamsDefaults.UplinkDwellTime;
 80156ce:	4b3e      	ldr	r3, [pc, #248]	; (80157c8 <ResetMacParameters+0x1bc>)
 80156d0:	f8d3 2484 	ldr.w	r2, [r3, #1156]	; 0x484
 80156d4:	4b3c      	ldr	r3, [pc, #240]	; (80157c8 <ResetMacParameters+0x1bc>)
 80156d6:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 80156da:	f892 2038 	ldrb.w	r2, [r2, #56]	; 0x38
 80156de:	f883 20b8 	strb.w	r2, [r3, #184]	; 0xb8
    MacCtx.NvmCtx->MacParams.DownlinkDwellTime = MacCtx.NvmCtx->MacParamsDefaults.DownlinkDwellTime;
 80156e2:	4b39      	ldr	r3, [pc, #228]	; (80157c8 <ResetMacParameters+0x1bc>)
 80156e4:	f8d3 2484 	ldr.w	r2, [r3, #1156]	; 0x484
 80156e8:	4b37      	ldr	r3, [pc, #220]	; (80157c8 <ResetMacParameters+0x1bc>)
 80156ea:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 80156ee:	f892 2039 	ldrb.w	r2, [r2, #57]	; 0x39
 80156f2:	f883 20b9 	strb.w	r2, [r3, #185]	; 0xb9
    MacCtx.NvmCtx->MacParams.MaxEirp = MacCtx.NvmCtx->MacParamsDefaults.MaxEirp;
 80156f6:	4b34      	ldr	r3, [pc, #208]	; (80157c8 <ResetMacParameters+0x1bc>)
 80156f8:	f8d3 2484 	ldr.w	r2, [r3, #1156]	; 0x484
 80156fc:	4b32      	ldr	r3, [pc, #200]	; (80157c8 <ResetMacParameters+0x1bc>)
 80156fe:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8015702:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 8015704:	f8c3 20bc 	str.w	r2, [r3, #188]	; 0xbc
    MacCtx.NvmCtx->MacParams.AntennaGain = MacCtx.NvmCtx->MacParamsDefaults.AntennaGain;
 8015708:	4b2f      	ldr	r3, [pc, #188]	; (80157c8 <ResetMacParameters+0x1bc>)
 801570a:	f8d3 2484 	ldr.w	r2, [r3, #1156]	; 0x484
 801570e:	4b2e      	ldr	r3, [pc, #184]	; (80157c8 <ResetMacParameters+0x1bc>)
 8015710:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8015714:	6c12      	ldr	r2, [r2, #64]	; 0x40
 8015716:	f8c3 20c0 	str.w	r2, [r3, #192]	; 0xc0

    MacCtx.NodeAckRequested = false;
 801571a:	4b2b      	ldr	r3, [pc, #172]	; (80157c8 <ResetMacParameters+0x1bc>)
 801571c:	2200      	movs	r2, #0
 801571e:	f883 2414 	strb.w	r2, [r3, #1044]	; 0x414
    MacCtx.NvmCtx->SrvAckRequested = false;
 8015722:	4b29      	ldr	r3, [pc, #164]	; (80157c8 <ResetMacParameters+0x1bc>)
 8015724:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8015728:	2200      	movs	r2, #0
 801572a:	f883 214b 	strb.w	r2, [r3, #331]	; 0x14b

    // Reset to application defaults
    InitDefaultsParams_t params;
    params.Type = INIT_TYPE_RESET_TO_DEFAULT_CHANNELS;
 801572e:	2301      	movs	r3, #1
 8015730:	713b      	strb	r3, [r7, #4]
    params.NvmCtx = NULL;
 8015732:	2300      	movs	r3, #0
 8015734:	603b      	str	r3, [r7, #0]
    RegionInitDefaults( MacCtx.NvmCtx->Region, &params );
 8015736:	4b24      	ldr	r3, [pc, #144]	; (80157c8 <ResetMacParameters+0x1bc>)
 8015738:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 801573c:	781b      	ldrb	r3, [r3, #0]
 801573e:	463a      	mov	r2, r7
 8015740:	4611      	mov	r1, r2
 8015742:	4618      	mov	r0, r3
 8015744:	f004 fa74 	bl	8019c30 <RegionInitDefaults>

    // Initialize channel index.
    MacCtx.Channel = 0;
 8015748:	4b1f      	ldr	r3, [pc, #124]	; (80157c8 <ResetMacParameters+0x1bc>)
 801574a:	2200      	movs	r2, #0
 801574c:	f883 2415 	strb.w	r2, [r3, #1045]	; 0x415

    // Initialize Rx2 config parameters.
    MacCtx.RxWindow2Config.Channel = MacCtx.Channel;
 8015750:	4b1d      	ldr	r3, [pc, #116]	; (80157c8 <ResetMacParameters+0x1bc>)
 8015752:	f893 2415 	ldrb.w	r2, [r3, #1045]	; 0x415
 8015756:	4b1c      	ldr	r3, [pc, #112]	; (80157c8 <ResetMacParameters+0x1bc>)
 8015758:	f883 23cc 	strb.w	r2, [r3, #972]	; 0x3cc
    MacCtx.RxWindow2Config.Frequency = MacCtx.NvmCtx->MacParams.Rx2Channel.Frequency;
 801575c:	4b1a      	ldr	r3, [pc, #104]	; (80157c8 <ResetMacParameters+0x1bc>)
 801575e:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8015762:	f8d3 30a8 	ldr.w	r3, [r3, #168]	; 0xa8
 8015766:	4a18      	ldr	r2, [pc, #96]	; (80157c8 <ResetMacParameters+0x1bc>)
 8015768:	f8c2 33d0 	str.w	r3, [r2, #976]	; 0x3d0
    MacCtx.RxWindow2Config.DownlinkDwellTime = MacCtx.NvmCtx->MacParams.DownlinkDwellTime;
 801576c:	4b16      	ldr	r3, [pc, #88]	; (80157c8 <ResetMacParameters+0x1bc>)
 801576e:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8015772:	f893 20b9 	ldrb.w	r2, [r3, #185]	; 0xb9
 8015776:	4b14      	ldr	r3, [pc, #80]	; (80157c8 <ResetMacParameters+0x1bc>)
 8015778:	f883 23dc 	strb.w	r2, [r3, #988]	; 0x3dc
    MacCtx.RxWindow2Config.RepeaterSupport = MacCtx.NvmCtx->RepeaterSupport;
 801577c:	4b12      	ldr	r3, [pc, #72]	; (80157c8 <ResetMacParameters+0x1bc>)
 801577e:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8015782:	f893 20ca 	ldrb.w	r2, [r3, #202]	; 0xca
 8015786:	4b10      	ldr	r3, [pc, #64]	; (80157c8 <ResetMacParameters+0x1bc>)
 8015788:	f883 23dd 	strb.w	r2, [r3, #989]	; 0x3dd
    MacCtx.RxWindow2Config.RxContinuous = false;
 801578c:	4b0e      	ldr	r3, [pc, #56]	; (80157c8 <ResetMacParameters+0x1bc>)
 801578e:	2200      	movs	r2, #0
 8015790:	f883 23de 	strb.w	r2, [r3, #990]	; 0x3de
    MacCtx.RxWindow2Config.RxSlot = RX_SLOT_WIN_2;
 8015794:	4b0c      	ldr	r3, [pc, #48]	; (80157c8 <ResetMacParameters+0x1bc>)
 8015796:	2201      	movs	r2, #1
 8015798:	f883 23df 	strb.w	r2, [r3, #991]	; 0x3df

    // Initialize RxC config parameters.
    MacCtx.RxWindowCConfig = MacCtx.RxWindow2Config;
 801579c:	4a0a      	ldr	r2, [pc, #40]	; (80157c8 <ResetMacParameters+0x1bc>)
 801579e:	4b0a      	ldr	r3, [pc, #40]	; (80157c8 <ResetMacParameters+0x1bc>)
 80157a0:	f502 7478 	add.w	r4, r2, #992	; 0x3e0
 80157a4:	f503 7573 	add.w	r5, r3, #972	; 0x3cc
 80157a8:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80157aa:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80157ac:	682b      	ldr	r3, [r5, #0]
 80157ae:	6023      	str	r3, [r4, #0]
    MacCtx.RxWindowCConfig.RxContinuous = true;
 80157b0:	4b05      	ldr	r3, [pc, #20]	; (80157c8 <ResetMacParameters+0x1bc>)
 80157b2:	2201      	movs	r2, #1
 80157b4:	f883 23f2 	strb.w	r2, [r3, #1010]	; 0x3f2
    MacCtx.RxWindowCConfig.RxSlot = RX_SLOT_WIN_CLASS_C;
 80157b8:	4b03      	ldr	r3, [pc, #12]	; (80157c8 <ResetMacParameters+0x1bc>)
 80157ba:	2202      	movs	r2, #2
 80157bc:	f883 23f3 	strb.w	r2, [r3, #1011]	; 0x3f3

}
 80157c0:	bf00      	nop
 80157c2:	3708      	adds	r7, #8
 80157c4:	46bd      	mov	sp, r7
 80157c6:	bdb0      	pop	{r4, r5, r7, pc}
 80157c8:	20000be0 	.word	0x20000be0

080157cc <RxWindowSetup>:
 *
 * \param [IN] rxTimer  Window timer to be topped.
 * \param [IN] rxConfig Window parameters to be setup
 */
static void RxWindowSetup( TimerEvent_t* rxTimer, RxConfigParams_t* rxConfig )
{
 80157cc:	b580      	push	{r7, lr}
 80157ce:	b082      	sub	sp, #8
 80157d0:	af00      	add	r7, sp, #0
 80157d2:	6078      	str	r0, [r7, #4]
 80157d4:	6039      	str	r1, [r7, #0]
    TimerStop( rxTimer );
 80157d6:	6878      	ldr	r0, [r7, #4]
 80157d8:	f00b fc80 	bl	80210dc <UTIL_TIMER_Stop>

    // Ensure the radio is Idle
    Radio.Standby( );
 80157dc:	4b10      	ldr	r3, [pc, #64]	; (8015820 <RxWindowSetup+0x54>)
 80157de:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80157e0:	4798      	blx	r3

    if( RegionRxConfig( MacCtx.NvmCtx->Region, rxConfig, ( int8_t* )&MacCtx.McpsIndication.RxDatarate ) == true )
 80157e2:	4b10      	ldr	r3, [pc, #64]	; (8015824 <RxWindowSetup+0x58>)
 80157e4:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 80157e8:	781b      	ldrb	r3, [r3, #0]
 80157ea:	4a0f      	ldr	r2, [pc, #60]	; (8015828 <RxWindowSetup+0x5c>)
 80157ec:	6839      	ldr	r1, [r7, #0]
 80157ee:	4618      	mov	r0, r3
 80157f0:	f004 fac9 	bl	8019d86 <RegionRxConfig>
 80157f4:	4603      	mov	r3, r0
 80157f6:	2b00      	cmp	r3, #0
 80157f8:	d00d      	beq.n	8015816 <RxWindowSetup+0x4a>
    {
        Radio.Rx( MacCtx.NvmCtx->MacParams.MaxRxWindow );
 80157fa:	4b09      	ldr	r3, [pc, #36]	; (8015820 <RxWindowSetup+0x54>)
 80157fc:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80157fe:	4a09      	ldr	r2, [pc, #36]	; (8015824 <RxWindowSetup+0x58>)
 8015800:	f8d2 2484 	ldr.w	r2, [r2, #1156]	; 0x484
 8015804:	f8d2 2090 	ldr.w	r2, [r2, #144]	; 0x90
 8015808:	4610      	mov	r0, r2
 801580a:	4798      	blx	r3
        MacCtx.RxSlot = rxConfig->RxSlot;
 801580c:	683b      	ldr	r3, [r7, #0]
 801580e:	7cda      	ldrb	r2, [r3, #19]
 8015810:	4b04      	ldr	r3, [pc, #16]	; (8015824 <RxWindowSetup+0x58>)
 8015812:	f883 2480 	strb.w	r2, [r3, #1152]	; 0x480
    }
}
 8015816:	bf00      	nop
 8015818:	3708      	adds	r7, #8
 801581a:	46bd      	mov	sp, r7
 801581c:	bd80      	pop	{r7, pc}
 801581e:	bf00      	nop
 8015820:	0802683c 	.word	0x0802683c
 8015824:	20000be0 	.word	0x20000be0
 8015828:	20001000 	.word	0x20001000

0801582c <OpenContinuousRxCWindow>:

static void OpenContinuousRxCWindow( void )
{
 801582c:	b590      	push	{r4, r7, lr}
 801582e:	b083      	sub	sp, #12
 8015830:	af02      	add	r7, sp, #8
    // Compute RxC windows parameters
    RegionComputeRxWindowParameters( MacCtx.NvmCtx->Region,
 8015832:	4b1d      	ldr	r3, [pc, #116]	; (80158a8 <OpenContinuousRxCWindow+0x7c>)
 8015834:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8015838:	7818      	ldrb	r0, [r3, #0]
                                     MacCtx.NvmCtx->MacParams.RxCChannel.Datarate,
 801583a:	4b1b      	ldr	r3, [pc, #108]	; (80158a8 <OpenContinuousRxCWindow+0x7c>)
 801583c:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8015840:	f893 30b4 	ldrb.w	r3, [r3, #180]	; 0xb4
    RegionComputeRxWindowParameters( MacCtx.NvmCtx->Region,
 8015844:	b259      	sxtb	r1, r3
                                     MacCtx.NvmCtx->MacParams.MinRxSymbols,
 8015846:	4b18      	ldr	r3, [pc, #96]	; (80158a8 <OpenContinuousRxCWindow+0x7c>)
 8015848:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
    RegionComputeRxWindowParameters( MacCtx.NvmCtx->Region,
 801584c:	f893 208c 	ldrb.w	r2, [r3, #140]	; 0x8c
                                     MacCtx.NvmCtx->MacParams.SystemMaxRxError,
 8015850:	4b15      	ldr	r3, [pc, #84]	; (80158a8 <OpenContinuousRxCWindow+0x7c>)
 8015852:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
    RegionComputeRxWindowParameters( MacCtx.NvmCtx->Region,
 8015856:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 801585a:	4c14      	ldr	r4, [pc, #80]	; (80158ac <OpenContinuousRxCWindow+0x80>)
 801585c:	9400      	str	r4, [sp, #0]
 801585e:	f004 fa6e 	bl	8019d3e <RegionComputeRxWindowParameters>
                                     &MacCtx.RxWindowCConfig );

    MacCtx.RxWindowCConfig.RxSlot = RX_SLOT_WIN_CLASS_C;
 8015862:	4b11      	ldr	r3, [pc, #68]	; (80158a8 <OpenContinuousRxCWindow+0x7c>)
 8015864:	2202      	movs	r2, #2
 8015866:	f883 23f3 	strb.w	r2, [r3, #1011]	; 0x3f3
    // Setup continuous listening
    MacCtx.RxWindowCConfig.RxContinuous = true;
 801586a:	4b0f      	ldr	r3, [pc, #60]	; (80158a8 <OpenContinuousRxCWindow+0x7c>)
 801586c:	2201      	movs	r2, #1
 801586e:	f883 23f2 	strb.w	r2, [r3, #1010]	; 0x3f2

    // At this point the Radio should be idle.
    // Thus, there is no need to set the radio in standby mode.
    if( RegionRxConfig( MacCtx.NvmCtx->Region, &MacCtx.RxWindowCConfig, ( int8_t* )&MacCtx.McpsIndication.RxDatarate ) == true )
 8015872:	4b0d      	ldr	r3, [pc, #52]	; (80158a8 <OpenContinuousRxCWindow+0x7c>)
 8015874:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8015878:	781b      	ldrb	r3, [r3, #0]
 801587a:	4a0d      	ldr	r2, [pc, #52]	; (80158b0 <OpenContinuousRxCWindow+0x84>)
 801587c:	490b      	ldr	r1, [pc, #44]	; (80158ac <OpenContinuousRxCWindow+0x80>)
 801587e:	4618      	mov	r0, r3
 8015880:	f004 fa81 	bl	8019d86 <RegionRxConfig>
 8015884:	4603      	mov	r3, r0
 8015886:	2b00      	cmp	r3, #0
 8015888:	d009      	beq.n	801589e <OpenContinuousRxCWindow+0x72>
    {
        Radio.Rx( 0 ); // Continuous mode
 801588a:	4b0a      	ldr	r3, [pc, #40]	; (80158b4 <OpenContinuousRxCWindow+0x88>)
 801588c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 801588e:	2000      	movs	r0, #0
 8015890:	4798      	blx	r3
        MacCtx.RxSlot = MacCtx.RxWindowCConfig.RxSlot;
 8015892:	4b05      	ldr	r3, [pc, #20]	; (80158a8 <OpenContinuousRxCWindow+0x7c>)
 8015894:	f893 23f3 	ldrb.w	r2, [r3, #1011]	; 0x3f3
 8015898:	4b03      	ldr	r3, [pc, #12]	; (80158a8 <OpenContinuousRxCWindow+0x7c>)
 801589a:	f883 2480 	strb.w	r2, [r3, #1152]	; 0x480
    }
}
 801589e:	bf00      	nop
 80158a0:	3704      	adds	r7, #4
 80158a2:	46bd      	mov	sp, r7
 80158a4:	bd90      	pop	{r4, r7, pc}
 80158a6:	bf00      	nop
 80158a8:	20000be0 	.word	0x20000be0
 80158ac:	20000fc0 	.word	0x20000fc0
 80158b0:	20001000 	.word	0x20001000
 80158b4:	0802683c 	.word	0x0802683c

080158b8 <PrepareFrame>:

static LoRaMacStatus_t PrepareFrame( LoRaMacHeader_t* macHdr, LoRaMacFrameCtrl_t* fCtrl, uint8_t fPort, void* fBuffer, uint16_t fBufferSize )
{
 80158b8:	b580      	push	{r7, lr}
 80158ba:	b088      	sub	sp, #32
 80158bc:	af00      	add	r7, sp, #0
 80158be:	60f8      	str	r0, [r7, #12]
 80158c0:	60b9      	str	r1, [r7, #8]
 80158c2:	603b      	str	r3, [r7, #0]
 80158c4:	4613      	mov	r3, r2
 80158c6:	71fb      	strb	r3, [r7, #7]
    MacCtx.PktBufferLen = 0;
 80158c8:	4b8a      	ldr	r3, [pc, #552]	; (8015af4 <PrepareFrame+0x23c>)
 80158ca:	2200      	movs	r2, #0
 80158cc:	801a      	strh	r2, [r3, #0]
    MacCtx.NodeAckRequested = false;
 80158ce:	4b89      	ldr	r3, [pc, #548]	; (8015af4 <PrepareFrame+0x23c>)
 80158d0:	2200      	movs	r2, #0
 80158d2:	f883 2414 	strb.w	r2, [r3, #1044]	; 0x414
    uint32_t fCntUp = 0;
 80158d6:	2300      	movs	r3, #0
 80158d8:	61bb      	str	r3, [r7, #24]
    size_t macCmdsSize = 0;
 80158da:	2300      	movs	r3, #0
 80158dc:	617b      	str	r3, [r7, #20]
    uint8_t availableSize = 0;
 80158de:	2300      	movs	r3, #0
 80158e0:	77fb      	strb	r3, [r7, #31]

    if( fBuffer == NULL )
 80158e2:	683b      	ldr	r3, [r7, #0]
 80158e4:	2b00      	cmp	r3, #0
 80158e6:	d101      	bne.n	80158ec <PrepareFrame+0x34>
    {
        fBufferSize = 0;
 80158e8:	2300      	movs	r3, #0
 80158ea:	853b      	strh	r3, [r7, #40]	; 0x28
    }

    memcpy1( MacCtx.AppData, ( uint8_t* ) fBuffer, fBufferSize );
 80158ec:	8d3b      	ldrh	r3, [r7, #40]	; 0x28
 80158ee:	461a      	mov	r2, r3
 80158f0:	6839      	ldr	r1, [r7, #0]
 80158f2:	4881      	ldr	r0, [pc, #516]	; (8015af8 <PrepareFrame+0x240>)
 80158f4:	f007 fe99 	bl	801d62a <memcpy1>
    MacCtx.AppDataSize = fBufferSize;
 80158f8:	8d3b      	ldrh	r3, [r7, #40]	; 0x28
 80158fa:	b2da      	uxtb	r2, r3
 80158fc:	4b7d      	ldr	r3, [pc, #500]	; (8015af4 <PrepareFrame+0x23c>)
 80158fe:	f883 2237 	strb.w	r2, [r3, #567]	; 0x237
    MacCtx.PktBuffer[0] = macHdr->Value;
 8015902:	68fb      	ldr	r3, [r7, #12]
 8015904:	781a      	ldrb	r2, [r3, #0]
 8015906:	4b7b      	ldr	r3, [pc, #492]	; (8015af4 <PrepareFrame+0x23c>)
 8015908:	709a      	strb	r2, [r3, #2]

    switch( macHdr->Bits.MType )
 801590a:	68fb      	ldr	r3, [r7, #12]
 801590c:	781b      	ldrb	r3, [r3, #0]
 801590e:	f3c3 1342 	ubfx	r3, r3, #5, #3
 8015912:	b2db      	uxtb	r3, r3
 8015914:	2b07      	cmp	r3, #7
 8015916:	f000 80c8 	beq.w	8015aaa <PrepareFrame+0x1f2>
 801591a:	2b07      	cmp	r3, #7
 801591c:	f300 80df 	bgt.w	8015ade <PrepareFrame+0x226>
 8015920:	2b02      	cmp	r3, #2
 8015922:	d006      	beq.n	8015932 <PrepareFrame+0x7a>
 8015924:	2b04      	cmp	r3, #4
 8015926:	f040 80da 	bne.w	8015ade <PrepareFrame+0x226>
    {
        case FRAME_TYPE_DATA_CONFIRMED_UP:
            MacCtx.NodeAckRequested = true;
 801592a:	4b72      	ldr	r3, [pc, #456]	; (8015af4 <PrepareFrame+0x23c>)
 801592c:	2201      	movs	r2, #1
 801592e:	f883 2414 	strb.w	r2, [r3, #1044]	; 0x414
            // Intentional fall through
        case FRAME_TYPE_DATA_UNCONFIRMED_UP:
            MacCtx.TxMsg.Type = LORAMAC_MSG_TYPE_DATA;
 8015932:	4b70      	ldr	r3, [pc, #448]	; (8015af4 <PrepareFrame+0x23c>)
 8015934:	2204      	movs	r2, #4
 8015936:	f883 2104 	strb.w	r2, [r3, #260]	; 0x104
            MacCtx.TxMsg.Message.Data.Buffer = MacCtx.PktBuffer;
 801593a:	4b6e      	ldr	r3, [pc, #440]	; (8015af4 <PrepareFrame+0x23c>)
 801593c:	4a6f      	ldr	r2, [pc, #444]	; (8015afc <PrepareFrame+0x244>)
 801593e:	f8c3 2108 	str.w	r2, [r3, #264]	; 0x108
            MacCtx.TxMsg.Message.Data.BufSize = LORAMAC_PHY_MAXPAYLOAD;
 8015942:	4b6c      	ldr	r3, [pc, #432]	; (8015af4 <PrepareFrame+0x23c>)
 8015944:	22ff      	movs	r2, #255	; 0xff
 8015946:	f883 210c 	strb.w	r2, [r3, #268]	; 0x10c
            MacCtx.TxMsg.Message.Data.MHDR.Value = macHdr->Value;
 801594a:	68fb      	ldr	r3, [r7, #12]
 801594c:	781a      	ldrb	r2, [r3, #0]
 801594e:	4b69      	ldr	r3, [pc, #420]	; (8015af4 <PrepareFrame+0x23c>)
 8015950:	f883 210d 	strb.w	r2, [r3, #269]	; 0x10d
            MacCtx.TxMsg.Message.Data.FPort = fPort;
 8015954:	4a67      	ldr	r2, [pc, #412]	; (8015af4 <PrepareFrame+0x23c>)
 8015956:	79fb      	ldrb	r3, [r7, #7]
 8015958:	f882 3128 	strb.w	r3, [r2, #296]	; 0x128
            MacCtx.TxMsg.Message.Data.FHDR.DevAddr = MacCtx.NvmCtx->DevAddr;
 801595c:	4b65      	ldr	r3, [pc, #404]	; (8015af4 <PrepareFrame+0x23c>)
 801595e:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8015962:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8015964:	4a63      	ldr	r2, [pc, #396]	; (8015af4 <PrepareFrame+0x23c>)
 8015966:	f8c2 3110 	str.w	r3, [r2, #272]	; 0x110
            MacCtx.TxMsg.Message.Data.FHDR.FCtrl.Value = fCtrl->Value;
 801596a:	68bb      	ldr	r3, [r7, #8]
 801596c:	781a      	ldrb	r2, [r3, #0]
 801596e:	4b61      	ldr	r3, [pc, #388]	; (8015af4 <PrepareFrame+0x23c>)
 8015970:	f883 2114 	strb.w	r2, [r3, #276]	; 0x114
            MacCtx.TxMsg.Message.Data.FRMPayloadSize = MacCtx.AppDataSize;
 8015974:	4b5f      	ldr	r3, [pc, #380]	; (8015af4 <PrepareFrame+0x23c>)
 8015976:	f893 2237 	ldrb.w	r2, [r3, #567]	; 0x237
 801597a:	4b5e      	ldr	r3, [pc, #376]	; (8015af4 <PrepareFrame+0x23c>)
 801597c:	f883 2130 	strb.w	r2, [r3, #304]	; 0x130
            MacCtx.TxMsg.Message.Data.FRMPayload = MacCtx.AppData;
 8015980:	4b5c      	ldr	r3, [pc, #368]	; (8015af4 <PrepareFrame+0x23c>)
 8015982:	4a5d      	ldr	r2, [pc, #372]	; (8015af8 <PrepareFrame+0x240>)
 8015984:	f8c3 212c 	str.w	r2, [r3, #300]	; 0x12c

            if( LORAMAC_CRYPTO_SUCCESS != LoRaMacCryptoGetFCntUp( &fCntUp ) )
 8015988:	f107 0318 	add.w	r3, r7, #24
 801598c:	4618      	mov	r0, r3
 801598e:	f003 faa1 	bl	8018ed4 <LoRaMacCryptoGetFCntUp>
 8015992:	4603      	mov	r3, r0
 8015994:	2b00      	cmp	r3, #0
 8015996:	d001      	beq.n	801599c <PrepareFrame+0xe4>
            {
                return LORAMAC_STATUS_FCNT_HANDLER_ERROR;
 8015998:	2312      	movs	r3, #18
 801599a:	e0a6      	b.n	8015aea <PrepareFrame+0x232>
            }
            MacCtx.TxMsg.Message.Data.FHDR.FCnt = ( uint16_t )fCntUp;
 801599c:	69bb      	ldr	r3, [r7, #24]
 801599e:	b29a      	uxth	r2, r3
 80159a0:	4b54      	ldr	r3, [pc, #336]	; (8015af4 <PrepareFrame+0x23c>)
 80159a2:	f8a3 2116 	strh.w	r2, [r3, #278]	; 0x116

            // Reset confirm parameters
            MacCtx.McpsConfirm.NbRetries = 0;
 80159a6:	4b53      	ldr	r3, [pc, #332]	; (8015af4 <PrepareFrame+0x23c>)
 80159a8:	2200      	movs	r2, #0
 80159aa:	f883 2441 	strb.w	r2, [r3, #1089]	; 0x441
            MacCtx.McpsConfirm.AckReceived = false;
 80159ae:	4b51      	ldr	r3, [pc, #324]	; (8015af4 <PrepareFrame+0x23c>)
 80159b0:	2200      	movs	r2, #0
 80159b2:	f883 2440 	strb.w	r2, [r3, #1088]	; 0x440
            MacCtx.McpsConfirm.UpLinkCounter = fCntUp;
 80159b6:	69bb      	ldr	r3, [r7, #24]
 80159b8:	4a4e      	ldr	r2, [pc, #312]	; (8015af4 <PrepareFrame+0x23c>)
 80159ba:	f8c2 3448 	str.w	r3, [r2, #1096]	; 0x448

            // Handle the MAC commands if there are any available
            if( LoRaMacCommandsGetSizeSerializedCmds( &macCmdsSize ) != LORAMAC_COMMANDS_SUCCESS )
 80159be:	f107 0314 	add.w	r3, r7, #20
 80159c2:	4618      	mov	r0, r3
 80159c4:	f002 fc02 	bl	80181cc <LoRaMacCommandsGetSizeSerializedCmds>
 80159c8:	4603      	mov	r3, r0
 80159ca:	2b00      	cmp	r3, #0
 80159cc:	d001      	beq.n	80159d2 <PrepareFrame+0x11a>
            {
                return LORAMAC_STATUS_MAC_COMMAD_ERROR;
 80159ce:	2313      	movs	r3, #19
 80159d0:	e08b      	b.n	8015aea <PrepareFrame+0x232>
            }

            if( macCmdsSize > 0 )
 80159d2:	697b      	ldr	r3, [r7, #20]
 80159d4:	2b00      	cmp	r3, #0
 80159d6:	f000 8084 	beq.w	8015ae2 <PrepareFrame+0x22a>
            {
                availableSize = GetMaxAppPayloadWithoutFOptsLength( MacCtx.NvmCtx->MacParams.ChannelsDatarate );
 80159da:	4b46      	ldr	r3, [pc, #280]	; (8015af4 <PrepareFrame+0x23c>)
 80159dc:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 80159e0:	f993 3085 	ldrsb.w	r3, [r3, #133]	; 0x85
 80159e4:	4618      	mov	r0, r3
 80159e6:	f7fe fd0f 	bl	8014408 <GetMaxAppPayloadWithoutFOptsLength>
 80159ea:	4603      	mov	r3, r0
 80159ec:	77fb      	strb	r3, [r7, #31]

                // There is application payload available and the MAC commands fit into FOpts field.
                if( ( MacCtx.AppDataSize > 0 ) && ( macCmdsSize <= LORA_MAC_COMMAND_MAX_FOPTS_LENGTH ) )
 80159ee:	4b41      	ldr	r3, [pc, #260]	; (8015af4 <PrepareFrame+0x23c>)
 80159f0:	f893 3237 	ldrb.w	r3, [r3, #567]	; 0x237
 80159f4:	2b00      	cmp	r3, #0
 80159f6:	d01d      	beq.n	8015a34 <PrepareFrame+0x17c>
 80159f8:	697b      	ldr	r3, [r7, #20]
 80159fa:	2b0f      	cmp	r3, #15
 80159fc:	d81a      	bhi.n	8015a34 <PrepareFrame+0x17c>
                {
                    if( LoRaMacCommandsSerializeCmds( LORA_MAC_COMMAND_MAX_FOPTS_LENGTH, &macCmdsSize, MacCtx.TxMsg.Message.Data.FHDR.FOpts ) != LORAMAC_COMMANDS_SUCCESS )
 80159fe:	f107 0314 	add.w	r3, r7, #20
 8015a02:	4a3f      	ldr	r2, [pc, #252]	; (8015b00 <PrepareFrame+0x248>)
 8015a04:	4619      	mov	r1, r3
 8015a06:	200f      	movs	r0, #15
 8015a08:	f002 fbf6 	bl	80181f8 <LoRaMacCommandsSerializeCmds>
 8015a0c:	4603      	mov	r3, r0
 8015a0e:	2b00      	cmp	r3, #0
 8015a10:	d001      	beq.n	8015a16 <PrepareFrame+0x15e>
                    {
                        return LORAMAC_STATUS_MAC_COMMAD_ERROR;
 8015a12:	2313      	movs	r3, #19
 8015a14:	e069      	b.n	8015aea <PrepareFrame+0x232>
                    }
                    fCtrl->Bits.FOptsLen = macCmdsSize;
 8015a16:	697b      	ldr	r3, [r7, #20]
 8015a18:	f003 030f 	and.w	r3, r3, #15
 8015a1c:	b2d9      	uxtb	r1, r3
 8015a1e:	68ba      	ldr	r2, [r7, #8]
 8015a20:	7813      	ldrb	r3, [r2, #0]
 8015a22:	f361 0303 	bfi	r3, r1, #0, #4
 8015a26:	7013      	strb	r3, [r2, #0]
                    // Update FCtrl field with new value of FOptionsLength
                    MacCtx.TxMsg.Message.Data.FHDR.FCtrl.Value = fCtrl->Value;
 8015a28:	68bb      	ldr	r3, [r7, #8]
 8015a2a:	781a      	ldrb	r2, [r3, #0]
 8015a2c:	4b31      	ldr	r3, [pc, #196]	; (8015af4 <PrepareFrame+0x23c>)
 8015a2e:	f883 2114 	strb.w	r2, [r3, #276]	; 0x114
                    MacCtx.TxMsg.Message.Data.FRMPayload = MacCtx.NvmCtx->MacCommandsBuffer;
                    MacCtx.TxMsg.Message.Data.FRMPayloadSize = macCmdsSize;
                }
            }

            break;
 8015a32:	e056      	b.n	8015ae2 <PrepareFrame+0x22a>
                else if( ( MacCtx.AppDataSize > 0 ) && ( macCmdsSize > LORA_MAC_COMMAND_MAX_FOPTS_LENGTH ) )
 8015a34:	4b2f      	ldr	r3, [pc, #188]	; (8015af4 <PrepareFrame+0x23c>)
 8015a36:	f893 3237 	ldrb.w	r3, [r3, #567]	; 0x237
 8015a3a:	2b00      	cmp	r3, #0
 8015a3c:	d014      	beq.n	8015a68 <PrepareFrame+0x1b0>
 8015a3e:	697b      	ldr	r3, [r7, #20]
 8015a40:	2b0f      	cmp	r3, #15
 8015a42:	d911      	bls.n	8015a68 <PrepareFrame+0x1b0>
                    if( LoRaMacCommandsSerializeCmds( availableSize, &macCmdsSize, MacCtx.NvmCtx->MacCommandsBuffer ) != LORAMAC_COMMANDS_SUCCESS )
 8015a44:	7ff8      	ldrb	r0, [r7, #31]
 8015a46:	4b2b      	ldr	r3, [pc, #172]	; (8015af4 <PrepareFrame+0x23c>)
 8015a48:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8015a4c:	f103 02cb 	add.w	r2, r3, #203	; 0xcb
 8015a50:	f107 0314 	add.w	r3, r7, #20
 8015a54:	4619      	mov	r1, r3
 8015a56:	f002 fbcf 	bl	80181f8 <LoRaMacCommandsSerializeCmds>
 8015a5a:	4603      	mov	r3, r0
 8015a5c:	2b00      	cmp	r3, #0
 8015a5e:	d001      	beq.n	8015a64 <PrepareFrame+0x1ac>
                        return LORAMAC_STATUS_MAC_COMMAD_ERROR;
 8015a60:	2313      	movs	r3, #19
 8015a62:	e042      	b.n	8015aea <PrepareFrame+0x232>
                    return LORAMAC_STATUS_SKIPPED_APP_DATA;
 8015a64:	230a      	movs	r3, #10
 8015a66:	e040      	b.n	8015aea <PrepareFrame+0x232>
                    if( LoRaMacCommandsSerializeCmds( availableSize, &macCmdsSize, MacCtx.NvmCtx->MacCommandsBuffer ) != LORAMAC_COMMANDS_SUCCESS )
 8015a68:	7ff8      	ldrb	r0, [r7, #31]
 8015a6a:	4b22      	ldr	r3, [pc, #136]	; (8015af4 <PrepareFrame+0x23c>)
 8015a6c:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8015a70:	f103 02cb 	add.w	r2, r3, #203	; 0xcb
 8015a74:	f107 0314 	add.w	r3, r7, #20
 8015a78:	4619      	mov	r1, r3
 8015a7a:	f002 fbbd 	bl	80181f8 <LoRaMacCommandsSerializeCmds>
 8015a7e:	4603      	mov	r3, r0
 8015a80:	2b00      	cmp	r3, #0
 8015a82:	d001      	beq.n	8015a88 <PrepareFrame+0x1d0>
                        return LORAMAC_STATUS_MAC_COMMAD_ERROR;
 8015a84:	2313      	movs	r3, #19
 8015a86:	e030      	b.n	8015aea <PrepareFrame+0x232>
                    MacCtx.TxMsg.Message.Data.FPort = 0;
 8015a88:	4b1a      	ldr	r3, [pc, #104]	; (8015af4 <PrepareFrame+0x23c>)
 8015a8a:	2200      	movs	r2, #0
 8015a8c:	f883 2128 	strb.w	r2, [r3, #296]	; 0x128
                    MacCtx.TxMsg.Message.Data.FRMPayload = MacCtx.NvmCtx->MacCommandsBuffer;
 8015a90:	4b18      	ldr	r3, [pc, #96]	; (8015af4 <PrepareFrame+0x23c>)
 8015a92:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8015a96:	33cb      	adds	r3, #203	; 0xcb
 8015a98:	4a16      	ldr	r2, [pc, #88]	; (8015af4 <PrepareFrame+0x23c>)
 8015a9a:	f8c2 312c 	str.w	r3, [r2, #300]	; 0x12c
                    MacCtx.TxMsg.Message.Data.FRMPayloadSize = macCmdsSize;
 8015a9e:	697b      	ldr	r3, [r7, #20]
 8015aa0:	b2da      	uxtb	r2, r3
 8015aa2:	4b14      	ldr	r3, [pc, #80]	; (8015af4 <PrepareFrame+0x23c>)
 8015aa4:	f883 2130 	strb.w	r2, [r3, #304]	; 0x130
            break;
 8015aa8:	e01b      	b.n	8015ae2 <PrepareFrame+0x22a>
        case FRAME_TYPE_PROPRIETARY:
            if( ( fBuffer != NULL ) && ( MacCtx.AppDataSize > 0 ) )
 8015aaa:	683b      	ldr	r3, [r7, #0]
 8015aac:	2b00      	cmp	r3, #0
 8015aae:	d01a      	beq.n	8015ae6 <PrepareFrame+0x22e>
 8015ab0:	4b10      	ldr	r3, [pc, #64]	; (8015af4 <PrepareFrame+0x23c>)
 8015ab2:	f893 3237 	ldrb.w	r3, [r3, #567]	; 0x237
 8015ab6:	2b00      	cmp	r3, #0
 8015ab8:	d015      	beq.n	8015ae6 <PrepareFrame+0x22e>
            {
                memcpy1( MacCtx.PktBuffer + LORAMAC_MHDR_FIELD_SIZE, ( uint8_t* ) fBuffer, MacCtx.AppDataSize );
 8015aba:	4812      	ldr	r0, [pc, #72]	; (8015b04 <PrepareFrame+0x24c>)
 8015abc:	4b0d      	ldr	r3, [pc, #52]	; (8015af4 <PrepareFrame+0x23c>)
 8015abe:	f893 3237 	ldrb.w	r3, [r3, #567]	; 0x237
 8015ac2:	b29b      	uxth	r3, r3
 8015ac4:	461a      	mov	r2, r3
 8015ac6:	6839      	ldr	r1, [r7, #0]
 8015ac8:	f007 fdaf 	bl	801d62a <memcpy1>
                MacCtx.PktBufferLen = LORAMAC_MHDR_FIELD_SIZE + MacCtx.AppDataSize;
 8015acc:	4b09      	ldr	r3, [pc, #36]	; (8015af4 <PrepareFrame+0x23c>)
 8015ace:	f893 3237 	ldrb.w	r3, [r3, #567]	; 0x237
 8015ad2:	b29b      	uxth	r3, r3
 8015ad4:	3301      	adds	r3, #1
 8015ad6:	b29a      	uxth	r2, r3
 8015ad8:	4b06      	ldr	r3, [pc, #24]	; (8015af4 <PrepareFrame+0x23c>)
 8015ada:	801a      	strh	r2, [r3, #0]
            }
            break;
 8015adc:	e003      	b.n	8015ae6 <PrepareFrame+0x22e>
        default:
            return LORAMAC_STATUS_SERVICE_UNKNOWN;
 8015ade:	2302      	movs	r3, #2
 8015ae0:	e003      	b.n	8015aea <PrepareFrame+0x232>
            break;
 8015ae2:	bf00      	nop
 8015ae4:	e000      	b.n	8015ae8 <PrepareFrame+0x230>
            break;
 8015ae6:	bf00      	nop
    }

    return LORAMAC_STATUS_OK;
 8015ae8:	2300      	movs	r3, #0
}
 8015aea:	4618      	mov	r0, r3
 8015aec:	3720      	adds	r7, #32
 8015aee:	46bd      	mov	sp, r7
 8015af0:	bd80      	pop	{r7, pc}
 8015af2:	bf00      	nop
 8015af4:	20000be0 	.word	0x20000be0
 8015af8:	20000d18 	.word	0x20000d18
 8015afc:	20000be2 	.word	0x20000be2
 8015b00:	20000cf8 	.word	0x20000cf8
 8015b04:	20000be3 	.word	0x20000be3

08015b08 <SendFrameOnChannel>:

static LoRaMacStatus_t SendFrameOnChannel( uint8_t channel )
{
 8015b08:	b580      	push	{r7, lr}
 8015b0a:	b08a      	sub	sp, #40	; 0x28
 8015b0c:	af00      	add	r7, sp, #0
 8015b0e:	4603      	mov	r3, r0
 8015b10:	71fb      	strb	r3, [r7, #7]
    LoRaMacStatus_t status = LORAMAC_STATUS_PARAMETER_INVALID;
 8015b12:	2303      	movs	r3, #3
 8015b14:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
    TxConfigParams_t txConfig;
    int8_t txPower = 0;
 8015b18:	2300      	movs	r3, #0
 8015b1a:	73fb      	strb	r3, [r7, #15]

    txConfig.Channel = channel;
 8015b1c:	79fb      	ldrb	r3, [r7, #7]
 8015b1e:	743b      	strb	r3, [r7, #16]
    txConfig.Datarate = MacCtx.NvmCtx->MacParams.ChannelsDatarate;
 8015b20:	4b4f      	ldr	r3, [pc, #316]	; (8015c60 <SendFrameOnChannel+0x158>)
 8015b22:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8015b26:	f993 3085 	ldrsb.w	r3, [r3, #133]	; 0x85
 8015b2a:	747b      	strb	r3, [r7, #17]
    txConfig.TxPower = MacCtx.NvmCtx->MacParams.ChannelsTxPower;
 8015b2c:	4b4c      	ldr	r3, [pc, #304]	; (8015c60 <SendFrameOnChannel+0x158>)
 8015b2e:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8015b32:	f993 3084 	ldrsb.w	r3, [r3, #132]	; 0x84
 8015b36:	74bb      	strb	r3, [r7, #18]
    txConfig.MaxEirp = MacCtx.NvmCtx->MacParams.MaxEirp;
 8015b38:	4b49      	ldr	r3, [pc, #292]	; (8015c60 <SendFrameOnChannel+0x158>)
 8015b3a:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8015b3e:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 8015b42:	617b      	str	r3, [r7, #20]
    txConfig.AntennaGain = MacCtx.NvmCtx->MacParams.AntennaGain;
 8015b44:	4b46      	ldr	r3, [pc, #280]	; (8015c60 <SendFrameOnChannel+0x158>)
 8015b46:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8015b4a:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
 8015b4e:	61bb      	str	r3, [r7, #24]
    txConfig.PktLen = MacCtx.PktBufferLen;
 8015b50:	4b43      	ldr	r3, [pc, #268]	; (8015c60 <SendFrameOnChannel+0x158>)
 8015b52:	881b      	ldrh	r3, [r3, #0]
 8015b54:	83bb      	strh	r3, [r7, #28]

    RegionTxConfig( MacCtx.NvmCtx->Region, &txConfig, &txPower, &MacCtx.TxTimeOnAir );
 8015b56:	4b42      	ldr	r3, [pc, #264]	; (8015c60 <SendFrameOnChannel+0x158>)
 8015b58:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8015b5c:	7818      	ldrb	r0, [r3, #0]
 8015b5e:	f107 020f 	add.w	r2, r7, #15
 8015b62:	f107 0110 	add.w	r1, r7, #16
 8015b66:	4b3f      	ldr	r3, [pc, #252]	; (8015c64 <SendFrameOnChannel+0x15c>)
 8015b68:	f004 f92b 	bl	8019dc2 <RegionTxConfig>

    MacCtx.McpsConfirm.Status = LORAMAC_EVENT_INFO_STATUS_ERROR;
 8015b6c:	4b3c      	ldr	r3, [pc, #240]	; (8015c60 <SendFrameOnChannel+0x158>)
 8015b6e:	2201      	movs	r2, #1
 8015b70:	f883 243d 	strb.w	r2, [r3, #1085]	; 0x43d
    MacCtx.McpsConfirm.Datarate = MacCtx.NvmCtx->MacParams.ChannelsDatarate;
 8015b74:	4b3a      	ldr	r3, [pc, #232]	; (8015c60 <SendFrameOnChannel+0x158>)
 8015b76:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8015b7a:	f993 3085 	ldrsb.w	r3, [r3, #133]	; 0x85
 8015b7e:	b2da      	uxtb	r2, r3
 8015b80:	4b37      	ldr	r3, [pc, #220]	; (8015c60 <SendFrameOnChannel+0x158>)
 8015b82:	f883 243e 	strb.w	r2, [r3, #1086]	; 0x43e
    MacCtx.McpsConfirm.TxPower = txPower;
 8015b86:	f997 200f 	ldrsb.w	r2, [r7, #15]
 8015b8a:	4b35      	ldr	r3, [pc, #212]	; (8015c60 <SendFrameOnChannel+0x158>)
 8015b8c:	f883 243f 	strb.w	r2, [r3, #1087]	; 0x43f
    MacCtx.McpsConfirm.Channel = channel;
 8015b90:	79fb      	ldrb	r3, [r7, #7]
 8015b92:	4a33      	ldr	r2, [pc, #204]	; (8015c60 <SendFrameOnChannel+0x158>)
 8015b94:	f8c2 344c 	str.w	r3, [r2, #1100]	; 0x44c

    // Store the time on air
    MacCtx.McpsConfirm.TxTimeOnAir = MacCtx.TxTimeOnAir;
 8015b98:	4b31      	ldr	r3, [pc, #196]	; (8015c60 <SendFrameOnChannel+0x158>)
 8015b9a:	f8d3 3418 	ldr.w	r3, [r3, #1048]	; 0x418
 8015b9e:	4a30      	ldr	r2, [pc, #192]	; (8015c60 <SendFrameOnChannel+0x158>)
 8015ba0:	f8c2 3444 	str.w	r3, [r2, #1092]	; 0x444
    MacCtx.MlmeConfirm.TxTimeOnAir = MacCtx.TxTimeOnAir;
 8015ba4:	4b2e      	ldr	r3, [pc, #184]	; (8015c60 <SendFrameOnChannel+0x158>)
 8015ba6:	f8d3 3418 	ldr.w	r3, [r3, #1048]	; 0x418
 8015baa:	4a2d      	ldr	r2, [pc, #180]	; (8015c60 <SendFrameOnChannel+0x158>)
 8015bac:	f8c2 3454 	str.w	r3, [r2, #1108]	; 0x454

    if( LoRaMacClassBIsBeaconModeActive( ) == true )
 8015bb0:	f002 f873 	bl	8017c9a <LoRaMacClassBIsBeaconModeActive>
 8015bb4:	4603      	mov	r3, r0
 8015bb6:	2b00      	cmp	r3, #0
 8015bb8:	d00b      	beq.n	8015bd2 <SendFrameOnChannel+0xca>
    {
        // Currently, the Time-On-Air can only be computed when the radio is configured with
        // the TX configuration
        TimerTime_t collisionTime = LoRaMacClassBIsUplinkCollision( MacCtx.TxTimeOnAir );
 8015bba:	4b29      	ldr	r3, [pc, #164]	; (8015c60 <SendFrameOnChannel+0x158>)
 8015bbc:	f8d3 3418 	ldr.w	r3, [r3, #1048]	; 0x418
 8015bc0:	4618      	mov	r0, r3
 8015bc2:	f002 f8d5 	bl	8017d70 <LoRaMacClassBIsUplinkCollision>
 8015bc6:	6238      	str	r0, [r7, #32]

        if( collisionTime > 0 )
 8015bc8:	6a3b      	ldr	r3, [r7, #32]
 8015bca:	2b00      	cmp	r3, #0
 8015bcc:	d001      	beq.n	8015bd2 <SendFrameOnChannel+0xca>
        {
            return LORAMAC_STATUS_BUSY_UPLINK_COLLISION;
 8015bce:	2310      	movs	r3, #16
 8015bd0:	e042      	b.n	8015c58 <SendFrameOnChannel+0x150>
        }
    }

    if( MacCtx.NvmCtx->DeviceClass == CLASS_B )
 8015bd2:	4b23      	ldr	r3, [pc, #140]	; (8015c60 <SendFrameOnChannel+0x158>)
 8015bd4:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8015bd8:	f893 307c 	ldrb.w	r3, [r3, #124]	; 0x7c
 8015bdc:	2b01      	cmp	r3, #1
 8015bde:	d101      	bne.n	8015be4 <SendFrameOnChannel+0xdc>
    {
        // Stop slots for class b
        LoRaMacClassBStopRxSlots( );
 8015be0:	f002 f8d0 	bl	8017d84 <LoRaMacClassBStopRxSlots>
    }

    LoRaMacClassBHaltBeaconing( );
 8015be4:	f002 f86a 	bl	8017cbc <LoRaMacClassBHaltBeaconing>

    // Secure frame
    status = SecureFrame( MacCtx.NvmCtx->MacParams.ChannelsDatarate, MacCtx.Channel );
 8015be8:	4b1d      	ldr	r3, [pc, #116]	; (8015c60 <SendFrameOnChannel+0x158>)
 8015bea:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8015bee:	f993 3085 	ldrsb.w	r3, [r3, #133]	; 0x85
 8015bf2:	b2db      	uxtb	r3, r3
 8015bf4:	4a1a      	ldr	r2, [pc, #104]	; (8015c60 <SendFrameOnChannel+0x158>)
 8015bf6:	f892 2415 	ldrb.w	r2, [r2, #1045]	; 0x415
 8015bfa:	4611      	mov	r1, r2
 8015bfc:	4618      	mov	r0, r3
 8015bfe:	f7ff fc69 	bl	80154d4 <SecureFrame>
 8015c02:	4603      	mov	r3, r0
 8015c04:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
    if( status != LORAMAC_STATUS_OK )
 8015c08:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 8015c0c:	2b00      	cmp	r3, #0
 8015c0e:	d002      	beq.n	8015c16 <SendFrameOnChannel+0x10e>
    {
        return status;
 8015c10:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 8015c14:	e020      	b.n	8015c58 <SendFrameOnChannel+0x150>
    }

    MacCtx.MacState |= LORAMAC_TX_RUNNING;
 8015c16:	4b12      	ldr	r3, [pc, #72]	; (8015c60 <SendFrameOnChannel+0x158>)
 8015c18:	f8d3 3340 	ldr.w	r3, [r3, #832]	; 0x340
 8015c1c:	f043 0302 	orr.w	r3, r3, #2
 8015c20:	4a0f      	ldr	r2, [pc, #60]	; (8015c60 <SendFrameOnChannel+0x158>)
 8015c22:	f8c2 3340 	str.w	r3, [r2, #832]	; 0x340
    if( MacCtx.NodeAckRequested == false )
 8015c26:	4b0e      	ldr	r3, [pc, #56]	; (8015c60 <SendFrameOnChannel+0x158>)
 8015c28:	f893 3414 	ldrb.w	r3, [r3, #1044]	; 0x414
 8015c2c:	f083 0301 	eor.w	r3, r3, #1
 8015c30:	b2db      	uxtb	r3, r3
 8015c32:	2b00      	cmp	r3, #0
 8015c34:	d007      	beq.n	8015c46 <SendFrameOnChannel+0x13e>
    {
        MacCtx.ChannelsNbTransCounter++;
 8015c36:	4b0a      	ldr	r3, [pc, #40]	; (8015c60 <SendFrameOnChannel+0x158>)
 8015c38:	f893 3410 	ldrb.w	r3, [r3, #1040]	; 0x410
 8015c3c:	3301      	adds	r3, #1
 8015c3e:	b2da      	uxtb	r2, r3
 8015c40:	4b07      	ldr	r3, [pc, #28]	; (8015c60 <SendFrameOnChannel+0x158>)
 8015c42:	f883 2410 	strb.w	r2, [r3, #1040]	; 0x410
    }

    // Send now
    Radio.Send( MacCtx.PktBuffer, MacCtx.PktBufferLen );
 8015c46:	4b08      	ldr	r3, [pc, #32]	; (8015c68 <SendFrameOnChannel+0x160>)
 8015c48:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8015c4a:	4a05      	ldr	r2, [pc, #20]	; (8015c60 <SendFrameOnChannel+0x158>)
 8015c4c:	8812      	ldrh	r2, [r2, #0]
 8015c4e:	b2d2      	uxtb	r2, r2
 8015c50:	4611      	mov	r1, r2
 8015c52:	4806      	ldr	r0, [pc, #24]	; (8015c6c <SendFrameOnChannel+0x164>)
 8015c54:	4798      	blx	r3

    return LORAMAC_STATUS_OK;
 8015c56:	2300      	movs	r3, #0
}
 8015c58:	4618      	mov	r0, r3
 8015c5a:	3728      	adds	r7, #40	; 0x28
 8015c5c:	46bd      	mov	sp, r7
 8015c5e:	bd80      	pop	{r7, pc}
 8015c60:	20000be0 	.word	0x20000be0
 8015c64:	20000ff8 	.word	0x20000ff8
 8015c68:	0802683c 	.word	0x0802683c
 8015c6c:	20000be2 	.word	0x20000be2

08015c70 <SetTxContinuousWave>:

static LoRaMacStatus_t SetTxContinuousWave( uint16_t timeout )
{
 8015c70:	b580      	push	{r7, lr}
 8015c72:	b086      	sub	sp, #24
 8015c74:	af00      	add	r7, sp, #0
 8015c76:	4603      	mov	r3, r0
 8015c78:	80fb      	strh	r3, [r7, #6]
    ContinuousWaveParams_t continuousWave;

    continuousWave.Channel = MacCtx.Channel;
 8015c7a:	4b1a      	ldr	r3, [pc, #104]	; (8015ce4 <SetTxContinuousWave+0x74>)
 8015c7c:	f893 3415 	ldrb.w	r3, [r3, #1045]	; 0x415
 8015c80:	723b      	strb	r3, [r7, #8]
    continuousWave.Datarate = MacCtx.NvmCtx->MacParams.ChannelsDatarate;
 8015c82:	4b18      	ldr	r3, [pc, #96]	; (8015ce4 <SetTxContinuousWave+0x74>)
 8015c84:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8015c88:	f993 3085 	ldrsb.w	r3, [r3, #133]	; 0x85
 8015c8c:	727b      	strb	r3, [r7, #9]
    continuousWave.TxPower = MacCtx.NvmCtx->MacParams.ChannelsTxPower;
 8015c8e:	4b15      	ldr	r3, [pc, #84]	; (8015ce4 <SetTxContinuousWave+0x74>)
 8015c90:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8015c94:	f993 3084 	ldrsb.w	r3, [r3, #132]	; 0x84
 8015c98:	72bb      	strb	r3, [r7, #10]
    continuousWave.MaxEirp = MacCtx.NvmCtx->MacParams.MaxEirp;
 8015c9a:	4b12      	ldr	r3, [pc, #72]	; (8015ce4 <SetTxContinuousWave+0x74>)
 8015c9c:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8015ca0:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 8015ca4:	60fb      	str	r3, [r7, #12]
    continuousWave.AntennaGain = MacCtx.NvmCtx->MacParams.AntennaGain;
 8015ca6:	4b0f      	ldr	r3, [pc, #60]	; (8015ce4 <SetTxContinuousWave+0x74>)
 8015ca8:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8015cac:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
 8015cb0:	613b      	str	r3, [r7, #16]
    continuousWave.Timeout = timeout;
 8015cb2:	88fb      	ldrh	r3, [r7, #6]
 8015cb4:	82bb      	strh	r3, [r7, #20]

    RegionSetContinuousWave( MacCtx.NvmCtx->Region, &continuousWave );
 8015cb6:	4b0b      	ldr	r3, [pc, #44]	; (8015ce4 <SetTxContinuousWave+0x74>)
 8015cb8:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8015cbc:	781b      	ldrb	r3, [r3, #0]
 8015cbe:	f107 0208 	add.w	r2, r7, #8
 8015cc2:	4611      	mov	r1, r2
 8015cc4:	4618      	mov	r0, r3
 8015cc6:	f004 f979 	bl	8019fbc <RegionSetContinuousWave>

    MacCtx.MacState |= LORAMAC_TX_RUNNING;
 8015cca:	4b06      	ldr	r3, [pc, #24]	; (8015ce4 <SetTxContinuousWave+0x74>)
 8015ccc:	f8d3 3340 	ldr.w	r3, [r3, #832]	; 0x340
 8015cd0:	f043 0302 	orr.w	r3, r3, #2
 8015cd4:	4a03      	ldr	r2, [pc, #12]	; (8015ce4 <SetTxContinuousWave+0x74>)
 8015cd6:	f8c2 3340 	str.w	r3, [r2, #832]	; 0x340

    return LORAMAC_STATUS_OK;
 8015cda:	2300      	movs	r3, #0
}
 8015cdc:	4618      	mov	r0, r3
 8015cde:	3718      	adds	r7, #24
 8015ce0:	46bd      	mov	sp, r7
 8015ce2:	bd80      	pop	{r7, pc}
 8015ce4:	20000be0 	.word	0x20000be0

08015ce8 <SetTxContinuousWave1>:

static LoRaMacStatus_t SetTxContinuousWave1( uint16_t timeout, uint32_t frequency, uint8_t power )
{
 8015ce8:	b580      	push	{r7, lr}
 8015cea:	b082      	sub	sp, #8
 8015cec:	af00      	add	r7, sp, #0
 8015cee:	4603      	mov	r3, r0
 8015cf0:	6039      	str	r1, [r7, #0]
 8015cf2:	80fb      	strh	r3, [r7, #6]
 8015cf4:	4613      	mov	r3, r2
 8015cf6:	717b      	strb	r3, [r7, #5]
    Radio.SetTxContinuousWave( frequency, power, timeout );
 8015cf8:	4b09      	ldr	r3, [pc, #36]	; (8015d20 <SetTxContinuousWave1+0x38>)
 8015cfa:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8015cfc:	f997 1005 	ldrsb.w	r1, [r7, #5]
 8015d00:	88fa      	ldrh	r2, [r7, #6]
 8015d02:	6838      	ldr	r0, [r7, #0]
 8015d04:	4798      	blx	r3

    MacCtx.MacState |= LORAMAC_TX_RUNNING;
 8015d06:	4b07      	ldr	r3, [pc, #28]	; (8015d24 <SetTxContinuousWave1+0x3c>)
 8015d08:	f8d3 3340 	ldr.w	r3, [r3, #832]	; 0x340
 8015d0c:	f043 0302 	orr.w	r3, r3, #2
 8015d10:	4a04      	ldr	r2, [pc, #16]	; (8015d24 <SetTxContinuousWave1+0x3c>)
 8015d12:	f8c2 3340 	str.w	r3, [r2, #832]	; 0x340

    return LORAMAC_STATUS_OK;
 8015d16:	2300      	movs	r3, #0
}
 8015d18:	4618      	mov	r0, r3
 8015d1a:	3708      	adds	r7, #8
 8015d1c:	46bd      	mov	sp, r7
 8015d1e:	bd80      	pop	{r7, pc}
 8015d20:	0802683c 	.word	0x0802683c
 8015d24:	20000be0 	.word	0x20000be0

08015d28 <GetCtxs>:

static LoRaMacCtxs_t* GetCtxs( void )
{
 8015d28:	b580      	push	{r7, lr}
 8015d2a:	b082      	sub	sp, #8
 8015d2c:	af00      	add	r7, sp, #0
    Contexts.MacNvmCtx = &NvmMacCtx;
 8015d2e:	4b1d      	ldr	r3, [pc, #116]	; (8015da4 <GetCtxs+0x7c>)
 8015d30:	4a1d      	ldr	r2, [pc, #116]	; (8015da8 <GetCtxs+0x80>)
 8015d32:	601a      	str	r2, [r3, #0]
    Contexts.MacNvmCtxSize = sizeof( NvmMacCtx );
 8015d34:	4b1b      	ldr	r3, [pc, #108]	; (8015da4 <GetCtxs+0x7c>)
 8015d36:	f44f 72b6 	mov.w	r2, #364	; 0x16c
 8015d3a:	605a      	str	r2, [r3, #4]
    Contexts.CryptoNvmCtx = LoRaMacCryptoGetNvmCtx( &Contexts.CryptoNvmCtxSize );
 8015d3c:	481b      	ldr	r0, [pc, #108]	; (8015dac <GetCtxs+0x84>)
 8015d3e:	f003 f8b9 	bl	8018eb4 <LoRaMacCryptoGetNvmCtx>
 8015d42:	4603      	mov	r3, r0
 8015d44:	4a17      	ldr	r2, [pc, #92]	; (8015da4 <GetCtxs+0x7c>)
 8015d46:	6113      	str	r3, [r2, #16]
    GetNvmCtxParams_t params ={ 0 };
 8015d48:	2300      	movs	r3, #0
 8015d4a:	607b      	str	r3, [r7, #4]
    Contexts.RegionNvmCtx = RegionGetNvmCtx( MacCtx.NvmCtx->Region, &params );
 8015d4c:	4b18      	ldr	r3, [pc, #96]	; (8015db0 <GetCtxs+0x88>)
 8015d4e:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8015d52:	781b      	ldrb	r3, [r3, #0]
 8015d54:	1d3a      	adds	r2, r7, #4
 8015d56:	4611      	mov	r1, r2
 8015d58:	4618      	mov	r0, r3
 8015d5a:	f003 ff81 	bl	8019c60 <RegionGetNvmCtx>
 8015d5e:	4603      	mov	r3, r0
 8015d60:	4a10      	ldr	r2, [pc, #64]	; (8015da4 <GetCtxs+0x7c>)
 8015d62:	6093      	str	r3, [r2, #8]
    Contexts.RegionNvmCtxSize = params.nvmCtxSize;
 8015d64:	687b      	ldr	r3, [r7, #4]
 8015d66:	4a0f      	ldr	r2, [pc, #60]	; (8015da4 <GetCtxs+0x7c>)
 8015d68:	60d3      	str	r3, [r2, #12]
    Contexts.SecureElementNvmCtx = SecureElementGetNvmCtx( &Contexts.SecureElementNvmCtxSize );
 8015d6a:	4812      	ldr	r0, [pc, #72]	; (8015db4 <GetCtxs+0x8c>)
 8015d6c:	f7fb fcfc 	bl	8011768 <SecureElementGetNvmCtx>
 8015d70:	4603      	mov	r3, r0
 8015d72:	4a0c      	ldr	r2, [pc, #48]	; (8015da4 <GetCtxs+0x7c>)
 8015d74:	6193      	str	r3, [r2, #24]
    Contexts.CommandsNvmCtx = LoRaMacCommandsGetNvmCtx( &Contexts.CommandsNvmCtxSize );
 8015d76:	4810      	ldr	r0, [pc, #64]	; (8015db8 <GetCtxs+0x90>)
 8015d78:	f002 f952 	bl	8018020 <LoRaMacCommandsGetNvmCtx>
 8015d7c:	4603      	mov	r3, r0
 8015d7e:	4a09      	ldr	r2, [pc, #36]	; (8015da4 <GetCtxs+0x7c>)
 8015d80:	6213      	str	r3, [r2, #32]
    Contexts.ClassBNvmCtx = LoRaMacClassBGetNvmCtx( &Contexts.ClassBNvmCtxSize );
 8015d82:	480e      	ldr	r0, [pc, #56]	; (8015dbc <GetCtxs+0x94>)
 8015d84:	f001 ff1b 	bl	8017bbe <LoRaMacClassBGetNvmCtx>
 8015d88:	4603      	mov	r3, r0
 8015d8a:	4a06      	ldr	r2, [pc, #24]	; (8015da4 <GetCtxs+0x7c>)
 8015d8c:	6293      	str	r3, [r2, #40]	; 0x28
    Contexts.ConfirmQueueNvmCtx = LoRaMacConfirmQueueGetNvmCtx( &Contexts.ConfirmQueueNvmCtxSize );
 8015d8e:	480c      	ldr	r0, [pc, #48]	; (8015dc0 <GetCtxs+0x98>)
 8015d90:	f002 fbc4 	bl	801851c <LoRaMacConfirmQueueGetNvmCtx>
 8015d94:	4603      	mov	r3, r0
 8015d96:	4a03      	ldr	r2, [pc, #12]	; (8015da4 <GetCtxs+0x7c>)
 8015d98:	6313      	str	r3, [r2, #48]	; 0x30
    return &Contexts;
 8015d9a:	4b02      	ldr	r3, [pc, #8]	; (8015da4 <GetCtxs+0x7c>)
}
 8015d9c:	4618      	mov	r0, r3
 8015d9e:	3708      	adds	r7, #8
 8015da0:	46bd      	mov	sp, r7
 8015da2:	bd80      	pop	{r7, pc}
 8015da4:	200011d8 	.word	0x200011d8
 8015da8:	2000106c 	.word	0x2000106c
 8015dac:	200011ec 	.word	0x200011ec
 8015db0:	20000be0 	.word	0x20000be0
 8015db4:	200011f4 	.word	0x200011f4
 8015db8:	200011fc 	.word	0x200011fc
 8015dbc:	20001204 	.word	0x20001204
 8015dc0:	2000120c 	.word	0x2000120c

08015dc4 <RestoreCtxs>:

static LoRaMacStatus_t RestoreCtxs( LoRaMacCtxs_t* contexts )
{
 8015dc4:	b580      	push	{r7, lr}
 8015dc6:	b084      	sub	sp, #16
 8015dc8:	af00      	add	r7, sp, #0
 8015dca:	6078      	str	r0, [r7, #4]
    if( contexts == NULL )
 8015dcc:	687b      	ldr	r3, [r7, #4]
 8015dce:	2b00      	cmp	r3, #0
 8015dd0:	d101      	bne.n	8015dd6 <RestoreCtxs+0x12>
    {
        return LORAMAC_STATUS_PARAMETER_INVALID;
 8015dd2:	2303      	movs	r3, #3
 8015dd4:	e081      	b.n	8015eda <RestoreCtxs+0x116>
    }
    if( MacCtx.MacState != LORAMAC_STOPPED )
 8015dd6:	4b43      	ldr	r3, [pc, #268]	; (8015ee4 <RestoreCtxs+0x120>)
 8015dd8:	f8d3 3340 	ldr.w	r3, [r3, #832]	; 0x340
 8015ddc:	2b01      	cmp	r3, #1
 8015dde:	d001      	beq.n	8015de4 <RestoreCtxs+0x20>
    {
        return LORAMAC_STATUS_BUSY;
 8015de0:	2301      	movs	r3, #1
 8015de2:	e07a      	b.n	8015eda <RestoreCtxs+0x116>
    }

    if( contexts->MacNvmCtx != NULL )
 8015de4:	687b      	ldr	r3, [r7, #4]
 8015de6:	681b      	ldr	r3, [r3, #0]
 8015de8:	2b00      	cmp	r3, #0
 8015dea:	d008      	beq.n	8015dfe <RestoreCtxs+0x3a>
    {
        memcpy1( ( uint8_t* ) &NvmMacCtx, ( uint8_t* ) contexts->MacNvmCtx, contexts->MacNvmCtxSize );
 8015dec:	687b      	ldr	r3, [r7, #4]
 8015dee:	6819      	ldr	r1, [r3, #0]
 8015df0:	687b      	ldr	r3, [r7, #4]
 8015df2:	685b      	ldr	r3, [r3, #4]
 8015df4:	b29b      	uxth	r3, r3
 8015df6:	461a      	mov	r2, r3
 8015df8:	483b      	ldr	r0, [pc, #236]	; (8015ee8 <RestoreCtxs+0x124>)
 8015dfa:	f007 fc16 	bl	801d62a <memcpy1>
    }

    InitDefaultsParams_t params;
    params.Type = INIT_TYPE_RESTORE_CTX;
 8015dfe:	2303      	movs	r3, #3
 8015e00:	733b      	strb	r3, [r7, #12]
    params.NvmCtx = contexts->RegionNvmCtx;
 8015e02:	687b      	ldr	r3, [r7, #4]
 8015e04:	689b      	ldr	r3, [r3, #8]
 8015e06:	60bb      	str	r3, [r7, #8]
    RegionInitDefaults( MacCtx.NvmCtx->Region, &params );
 8015e08:	4b36      	ldr	r3, [pc, #216]	; (8015ee4 <RestoreCtxs+0x120>)
 8015e0a:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8015e0e:	781b      	ldrb	r3, [r3, #0]
 8015e10:	f107 0208 	add.w	r2, r7, #8
 8015e14:	4611      	mov	r1, r2
 8015e16:	4618      	mov	r0, r3
 8015e18:	f003 ff0a 	bl	8019c30 <RegionInitDefaults>

    // Initialize RxC config parameters.
    MacCtx.RxWindowCConfig.Channel = MacCtx.Channel;
 8015e1c:	4b31      	ldr	r3, [pc, #196]	; (8015ee4 <RestoreCtxs+0x120>)
 8015e1e:	f893 2415 	ldrb.w	r2, [r3, #1045]	; 0x415
 8015e22:	4b30      	ldr	r3, [pc, #192]	; (8015ee4 <RestoreCtxs+0x120>)
 8015e24:	f883 23e0 	strb.w	r2, [r3, #992]	; 0x3e0
    MacCtx.RxWindowCConfig.Frequency = MacCtx.NvmCtx->MacParams.RxCChannel.Frequency;
 8015e28:	4b2e      	ldr	r3, [pc, #184]	; (8015ee4 <RestoreCtxs+0x120>)
 8015e2a:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8015e2e:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 8015e32:	4a2c      	ldr	r2, [pc, #176]	; (8015ee4 <RestoreCtxs+0x120>)
 8015e34:	f8c2 33e4 	str.w	r3, [r2, #996]	; 0x3e4
    MacCtx.RxWindowCConfig.DownlinkDwellTime = MacCtx.NvmCtx->MacParams.DownlinkDwellTime;
 8015e38:	4b2a      	ldr	r3, [pc, #168]	; (8015ee4 <RestoreCtxs+0x120>)
 8015e3a:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8015e3e:	f893 20b9 	ldrb.w	r2, [r3, #185]	; 0xb9
 8015e42:	4b28      	ldr	r3, [pc, #160]	; (8015ee4 <RestoreCtxs+0x120>)
 8015e44:	f883 23f0 	strb.w	r2, [r3, #1008]	; 0x3f0
    MacCtx.RxWindowCConfig.RepeaterSupport = MacCtx.NvmCtx->RepeaterSupport;
 8015e48:	4b26      	ldr	r3, [pc, #152]	; (8015ee4 <RestoreCtxs+0x120>)
 8015e4a:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8015e4e:	f893 20ca 	ldrb.w	r2, [r3, #202]	; 0xca
 8015e52:	4b24      	ldr	r3, [pc, #144]	; (8015ee4 <RestoreCtxs+0x120>)
 8015e54:	f883 23f1 	strb.w	r2, [r3, #1009]	; 0x3f1
    MacCtx.RxWindowCConfig.RxContinuous = true;
 8015e58:	4b22      	ldr	r3, [pc, #136]	; (8015ee4 <RestoreCtxs+0x120>)
 8015e5a:	2201      	movs	r2, #1
 8015e5c:	f883 23f2 	strb.w	r2, [r3, #1010]	; 0x3f2
    MacCtx.RxWindowCConfig.RxSlot = RX_SLOT_WIN_CLASS_C;
 8015e60:	4b20      	ldr	r3, [pc, #128]	; (8015ee4 <RestoreCtxs+0x120>)
 8015e62:	2202      	movs	r2, #2
 8015e64:	f883 23f3 	strb.w	r2, [r3, #1011]	; 0x3f3

    if( SecureElementRestoreNvmCtx( contexts->SecureElementNvmCtx ) != SECURE_ELEMENT_SUCCESS )
 8015e68:	687b      	ldr	r3, [r7, #4]
 8015e6a:	699b      	ldr	r3, [r3, #24]
 8015e6c:	4618      	mov	r0, r3
 8015e6e:	f7fb fc65 	bl	801173c <SecureElementRestoreNvmCtx>
 8015e72:	4603      	mov	r3, r0
 8015e74:	2b00      	cmp	r3, #0
 8015e76:	d001      	beq.n	8015e7c <RestoreCtxs+0xb8>
    {
        return LORAMAC_STATUS_CRYPTO_ERROR;
 8015e78:	2311      	movs	r3, #17
 8015e7a:	e02e      	b.n	8015eda <RestoreCtxs+0x116>
    }

    if( LoRaMacCryptoRestoreNvmCtx( contexts->CryptoNvmCtx ) != LORAMAC_CRYPTO_SUCCESS )
 8015e7c:	687b      	ldr	r3, [r7, #4]
 8015e7e:	691b      	ldr	r3, [r3, #16]
 8015e80:	4618      	mov	r0, r3
 8015e82:	f003 f801 	bl	8018e88 <LoRaMacCryptoRestoreNvmCtx>
 8015e86:	4603      	mov	r3, r0
 8015e88:	2b00      	cmp	r3, #0
 8015e8a:	d001      	beq.n	8015e90 <RestoreCtxs+0xcc>
    {
        return LORAMAC_STATUS_CRYPTO_ERROR;
 8015e8c:	2311      	movs	r3, #17
 8015e8e:	e024      	b.n	8015eda <RestoreCtxs+0x116>
    }

    if( LoRaMacCommandsRestoreNvmCtx( contexts->CommandsNvmCtx ) != LORAMAC_COMMANDS_SUCCESS )
 8015e90:	687b      	ldr	r3, [r7, #4]
 8015e92:	6a1b      	ldr	r3, [r3, #32]
 8015e94:	4618      	mov	r0, r3
 8015e96:	f002 f8ad 	bl	8017ff4 <LoRaMacCommandsRestoreNvmCtx>
 8015e9a:	4603      	mov	r3, r0
 8015e9c:	2b00      	cmp	r3, #0
 8015e9e:	d001      	beq.n	8015ea4 <RestoreCtxs+0xe0>
    {
        return LORAMAC_STATUS_MAC_COMMAD_ERROR;
 8015ea0:	2313      	movs	r3, #19
 8015ea2:	e01a      	b.n	8015eda <RestoreCtxs+0x116>
    }

    if( LoRaMacClassBRestoreNvmCtx( contexts->ClassBNvmCtx ) != true )
 8015ea4:	687b      	ldr	r3, [r7, #4]
 8015ea6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8015ea8:	4618      	mov	r0, r3
 8015eaa:	f001 fe7e 	bl	8017baa <LoRaMacClassBRestoreNvmCtx>
 8015eae:	4603      	mov	r3, r0
 8015eb0:	f083 0301 	eor.w	r3, r3, #1
 8015eb4:	b2db      	uxtb	r3, r3
 8015eb6:	2b00      	cmp	r3, #0
 8015eb8:	d001      	beq.n	8015ebe <RestoreCtxs+0xfa>
    {
        return LORAMAC_STATUS_CLASS_B_ERROR;
 8015eba:	2314      	movs	r3, #20
 8015ebc:	e00d      	b.n	8015eda <RestoreCtxs+0x116>
    }

    if( LoRaMacConfirmQueueRestoreNvmCtx( contexts->ConfirmQueueNvmCtx ) != true )
 8015ebe:	687b      	ldr	r3, [r7, #4]
 8015ec0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8015ec2:	4618      	mov	r0, r3
 8015ec4:	f002 fb14 	bl	80184f0 <LoRaMacConfirmQueueRestoreNvmCtx>
 8015ec8:	4603      	mov	r3, r0
 8015eca:	f083 0301 	eor.w	r3, r3, #1
 8015ece:	b2db      	uxtb	r3, r3
 8015ed0:	2b00      	cmp	r3, #0
 8015ed2:	d001      	beq.n	8015ed8 <RestoreCtxs+0x114>
    {
        return LORAMAC_STATUS_CONFIRM_QUEUE_ERROR;
 8015ed4:	2315      	movs	r3, #21
 8015ed6:	e000      	b.n	8015eda <RestoreCtxs+0x116>
    }

    return LORAMAC_STATUS_OK;
 8015ed8:	2300      	movs	r3, #0
}
 8015eda:	4618      	mov	r0, r3
 8015edc:	3710      	adds	r7, #16
 8015ede:	46bd      	mov	sp, r7
 8015ee0:	bd80      	pop	{r7, pc}
 8015ee2:	bf00      	nop
 8015ee4:	20000be0 	.word	0x20000be0
 8015ee8:	2000106c 	.word	0x2000106c

08015eec <DetermineFrameType>:

static LoRaMacStatus_t DetermineFrameType( LoRaMacMessageData_t* macMsg, FType_t* fType )
{
 8015eec:	b480      	push	{r7}
 8015eee:	b083      	sub	sp, #12
 8015ef0:	af00      	add	r7, sp, #0
 8015ef2:	6078      	str	r0, [r7, #4]
 8015ef4:	6039      	str	r1, [r7, #0]
    if( ( macMsg == NULL ) || ( fType == NULL ) )
 8015ef6:	687b      	ldr	r3, [r7, #4]
 8015ef8:	2b00      	cmp	r3, #0
 8015efa:	d002      	beq.n	8015f02 <DetermineFrameType+0x16>
 8015efc:	683b      	ldr	r3, [r7, #0]
 8015efe:	2b00      	cmp	r3, #0
 8015f00:	d101      	bne.n	8015f06 <DetermineFrameType+0x1a>
    {
        return LORAMAC_STATUS_PARAMETER_INVALID;
 8015f02:	2303      	movs	r3, #3
 8015f04:	e03b      	b.n	8015f7e <DetermineFrameType+0x92>
     * +-------+  +----------+------+-------+--------------+
     * |   D   |  |    = 0   |   -  |  > 0  |       X      |
     * +-------+  +----------+------+-------+--------------+
     */

    if( ( macMsg->FHDR.FCtrl.Bits.FOptsLen > 0 ) && ( macMsg->FPort > 0 ) )
 8015f06:	687b      	ldr	r3, [r7, #4]
 8015f08:	7b1b      	ldrb	r3, [r3, #12]
 8015f0a:	f003 030f 	and.w	r3, r3, #15
 8015f0e:	b2db      	uxtb	r3, r3
 8015f10:	2b00      	cmp	r3, #0
 8015f12:	d008      	beq.n	8015f26 <DetermineFrameType+0x3a>
 8015f14:	687b      	ldr	r3, [r7, #4]
 8015f16:	f893 3020 	ldrb.w	r3, [r3, #32]
 8015f1a:	2b00      	cmp	r3, #0
 8015f1c:	d003      	beq.n	8015f26 <DetermineFrameType+0x3a>
    {
        *fType = FRAME_TYPE_A;
 8015f1e:	683b      	ldr	r3, [r7, #0]
 8015f20:	2200      	movs	r2, #0
 8015f22:	701a      	strb	r2, [r3, #0]
 8015f24:	e02a      	b.n	8015f7c <DetermineFrameType+0x90>
    }
    else if( macMsg->FRMPayloadSize == 0 )
 8015f26:	687b      	ldr	r3, [r7, #4]
 8015f28:	f893 3028 	ldrb.w	r3, [r3, #40]	; 0x28
 8015f2c:	2b00      	cmp	r3, #0
 8015f2e:	d103      	bne.n	8015f38 <DetermineFrameType+0x4c>
    {
        *fType = FRAME_TYPE_B;
 8015f30:	683b      	ldr	r3, [r7, #0]
 8015f32:	2201      	movs	r2, #1
 8015f34:	701a      	strb	r2, [r3, #0]
 8015f36:	e021      	b.n	8015f7c <DetermineFrameType+0x90>
    }
    else if( ( macMsg->FHDR.FCtrl.Bits.FOptsLen == 0 ) && ( macMsg->FPort == 0 ) )
 8015f38:	687b      	ldr	r3, [r7, #4]
 8015f3a:	7b1b      	ldrb	r3, [r3, #12]
 8015f3c:	f003 030f 	and.w	r3, r3, #15
 8015f40:	b2db      	uxtb	r3, r3
 8015f42:	2b00      	cmp	r3, #0
 8015f44:	d108      	bne.n	8015f58 <DetermineFrameType+0x6c>
 8015f46:	687b      	ldr	r3, [r7, #4]
 8015f48:	f893 3020 	ldrb.w	r3, [r3, #32]
 8015f4c:	2b00      	cmp	r3, #0
 8015f4e:	d103      	bne.n	8015f58 <DetermineFrameType+0x6c>
    {
        *fType = FRAME_TYPE_C;
 8015f50:	683b      	ldr	r3, [r7, #0]
 8015f52:	2202      	movs	r2, #2
 8015f54:	701a      	strb	r2, [r3, #0]
 8015f56:	e011      	b.n	8015f7c <DetermineFrameType+0x90>
    }
    else if( ( macMsg->FHDR.FCtrl.Bits.FOptsLen == 0 ) && ( macMsg->FPort > 0 ) )
 8015f58:	687b      	ldr	r3, [r7, #4]
 8015f5a:	7b1b      	ldrb	r3, [r3, #12]
 8015f5c:	f003 030f 	and.w	r3, r3, #15
 8015f60:	b2db      	uxtb	r3, r3
 8015f62:	2b00      	cmp	r3, #0
 8015f64:	d108      	bne.n	8015f78 <DetermineFrameType+0x8c>
 8015f66:	687b      	ldr	r3, [r7, #4]
 8015f68:	f893 3020 	ldrb.w	r3, [r3, #32]
 8015f6c:	2b00      	cmp	r3, #0
 8015f6e:	d003      	beq.n	8015f78 <DetermineFrameType+0x8c>
    {
        *fType = FRAME_TYPE_D;
 8015f70:	683b      	ldr	r3, [r7, #0]
 8015f72:	2203      	movs	r2, #3
 8015f74:	701a      	strb	r2, [r3, #0]
 8015f76:	e001      	b.n	8015f7c <DetermineFrameType+0x90>
    }
    else
    {
        // Should never happen.
        return LORAMAC_STATUS_ERROR;
 8015f78:	2317      	movs	r3, #23
 8015f7a:	e000      	b.n	8015f7e <DetermineFrameType+0x92>
    }

    return LORAMAC_STATUS_OK;
 8015f7c:	2300      	movs	r3, #0
}
 8015f7e:	4618      	mov	r0, r3
 8015f80:	370c      	adds	r7, #12
 8015f82:	46bd      	mov	sp, r7
 8015f84:	bc80      	pop	{r7}
 8015f86:	4770      	bx	lr

08015f88 <CheckRetransUnconfirmedUplink>:

static bool CheckRetransUnconfirmedUplink( void )
{
 8015f88:	b480      	push	{r7}
 8015f8a:	af00      	add	r7, sp, #0
    // Unconfirmed uplink, when all retransmissions are done.
    if( MacCtx.ChannelsNbTransCounter >=
 8015f8c:	4b14      	ldr	r3, [pc, #80]	; (8015fe0 <CheckRetransUnconfirmedUplink+0x58>)
 8015f8e:	f893 2410 	ldrb.w	r2, [r3, #1040]	; 0x410
        MacCtx.NvmCtx->MacParams.ChannelsNbTrans )
 8015f92:	4b13      	ldr	r3, [pc, #76]	; (8015fe0 <CheckRetransUnconfirmedUplink+0x58>)
 8015f94:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8015f98:	f893 30a4 	ldrb.w	r3, [r3, #164]	; 0xa4
    if( MacCtx.ChannelsNbTransCounter >=
 8015f9c:	429a      	cmp	r2, r3
 8015f9e:	d301      	bcc.n	8015fa4 <CheckRetransUnconfirmedUplink+0x1c>
    {
        return true;
 8015fa0:	2301      	movs	r3, #1
 8015fa2:	e018      	b.n	8015fd6 <CheckRetransUnconfirmedUplink+0x4e>
    }
    else if( MacCtx.MacFlags.Bits.McpsInd == 1 )
 8015fa4:	4b0e      	ldr	r3, [pc, #56]	; (8015fe0 <CheckRetransUnconfirmedUplink+0x58>)
 8015fa6:	f893 3481 	ldrb.w	r3, [r3, #1153]	; 0x481
 8015faa:	f003 0302 	and.w	r3, r3, #2
 8015fae:	b2db      	uxtb	r3, r3
 8015fb0:	2b00      	cmp	r3, #0
 8015fb2:	d00f      	beq.n	8015fd4 <CheckRetransUnconfirmedUplink+0x4c>
    {
        // For Class A stop in each case
        if( MacCtx.NvmCtx->DeviceClass == CLASS_A )
 8015fb4:	4b0a      	ldr	r3, [pc, #40]	; (8015fe0 <CheckRetransUnconfirmedUplink+0x58>)
 8015fb6:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8015fba:	f893 307c 	ldrb.w	r3, [r3, #124]	; 0x7c
 8015fbe:	2b00      	cmp	r3, #0
 8015fc0:	d101      	bne.n	8015fc6 <CheckRetransUnconfirmedUplink+0x3e>
        {
            return true;
 8015fc2:	2301      	movs	r3, #1
 8015fc4:	e007      	b.n	8015fd6 <CheckRetransUnconfirmedUplink+0x4e>
        }
        else
        {// For Class B & C stop only if the frame was received in RX1 window
            if( MacCtx.McpsIndication.RxSlot == RX_SLOT_WIN_1 )
 8015fc6:	4b06      	ldr	r3, [pc, #24]	; (8015fe0 <CheckRetransUnconfirmedUplink+0x58>)
 8015fc8:	f893 342d 	ldrb.w	r3, [r3, #1069]	; 0x42d
 8015fcc:	2b00      	cmp	r3, #0
 8015fce:	d101      	bne.n	8015fd4 <CheckRetransUnconfirmedUplink+0x4c>
            {
                return true;
 8015fd0:	2301      	movs	r3, #1
 8015fd2:	e000      	b.n	8015fd6 <CheckRetransUnconfirmedUplink+0x4e>
            }
        }
    }
    return false;
 8015fd4:	2300      	movs	r3, #0
}
 8015fd6:	4618      	mov	r0, r3
 8015fd8:	46bd      	mov	sp, r7
 8015fda:	bc80      	pop	{r7}
 8015fdc:	4770      	bx	lr
 8015fde:	bf00      	nop
 8015fe0:	20000be0 	.word	0x20000be0

08015fe4 <CheckRetransConfirmedUplink>:

static bool CheckRetransConfirmedUplink( void )
{
 8015fe4:	b480      	push	{r7}
 8015fe6:	af00      	add	r7, sp, #0
    // Confirmed uplink, when all retransmissions ( tries to get a ack ) are done.
    if( MacCtx.AckTimeoutRetriesCounter >=
 8015fe8:	4b0e      	ldr	r3, [pc, #56]	; (8016024 <CheckRetransConfirmedUplink+0x40>)
 8015fea:	f893 2412 	ldrb.w	r2, [r3, #1042]	; 0x412
        MacCtx.AckTimeoutRetries )
 8015fee:	4b0d      	ldr	r3, [pc, #52]	; (8016024 <CheckRetransConfirmedUplink+0x40>)
 8015ff0:	f893 3411 	ldrb.w	r3, [r3, #1041]	; 0x411
    if( MacCtx.AckTimeoutRetriesCounter >=
 8015ff4:	429a      	cmp	r2, r3
 8015ff6:	d301      	bcc.n	8015ffc <CheckRetransConfirmedUplink+0x18>
    {
        return true;
 8015ff8:	2301      	movs	r3, #1
 8015ffa:	e00f      	b.n	801601c <CheckRetransConfirmedUplink+0x38>
    }
    else if( MacCtx.MacFlags.Bits.McpsInd == 1 )
 8015ffc:	4b09      	ldr	r3, [pc, #36]	; (8016024 <CheckRetransConfirmedUplink+0x40>)
 8015ffe:	f893 3481 	ldrb.w	r3, [r3, #1153]	; 0x481
 8016002:	f003 0302 	and.w	r3, r3, #2
 8016006:	b2db      	uxtb	r3, r3
 8016008:	2b00      	cmp	r3, #0
 801600a:	d006      	beq.n	801601a <CheckRetransConfirmedUplink+0x36>
    {
        if( MacCtx.McpsConfirm.AckReceived == true )
 801600c:	4b05      	ldr	r3, [pc, #20]	; (8016024 <CheckRetransConfirmedUplink+0x40>)
 801600e:	f893 3440 	ldrb.w	r3, [r3, #1088]	; 0x440
 8016012:	2b00      	cmp	r3, #0
 8016014:	d001      	beq.n	801601a <CheckRetransConfirmedUplink+0x36>
        {
            return true;
 8016016:	2301      	movs	r3, #1
 8016018:	e000      	b.n	801601c <CheckRetransConfirmedUplink+0x38>
        }
    }
    return false;
 801601a:	2300      	movs	r3, #0
}
 801601c:	4618      	mov	r0, r3
 801601e:	46bd      	mov	sp, r7
 8016020:	bc80      	pop	{r7}
 8016022:	4770      	bx	lr
 8016024:	20000be0 	.word	0x20000be0

08016028 <StopRetransmission>:

static bool StopRetransmission( void )
{
 8016028:	b480      	push	{r7}
 801602a:	af00      	add	r7, sp, #0
    if( ( MacCtx.MacFlags.Bits.McpsInd == 0 ) ||
 801602c:	4b1c      	ldr	r3, [pc, #112]	; (80160a0 <StopRetransmission+0x78>)
 801602e:	f893 3481 	ldrb.w	r3, [r3, #1153]	; 0x481
 8016032:	f003 0302 	and.w	r3, r3, #2
 8016036:	b2db      	uxtb	r3, r3
 8016038:	2b00      	cmp	r3, #0
 801603a:	d009      	beq.n	8016050 <StopRetransmission+0x28>
        ( ( MacCtx.McpsIndication.RxSlot != RX_SLOT_WIN_1 ) &&
 801603c:	4b18      	ldr	r3, [pc, #96]	; (80160a0 <StopRetransmission+0x78>)
 801603e:	f893 342d 	ldrb.w	r3, [r3, #1069]	; 0x42d
    if( ( MacCtx.MacFlags.Bits.McpsInd == 0 ) ||
 8016042:	2b00      	cmp	r3, #0
 8016044:	d013      	beq.n	801606e <StopRetransmission+0x46>
          ( MacCtx.McpsIndication.RxSlot != RX_SLOT_WIN_2 ) ) )
 8016046:	4b16      	ldr	r3, [pc, #88]	; (80160a0 <StopRetransmission+0x78>)
 8016048:	f893 342d 	ldrb.w	r3, [r3, #1069]	; 0x42d
        ( ( MacCtx.McpsIndication.RxSlot != RX_SLOT_WIN_1 ) &&
 801604c:	2b01      	cmp	r3, #1
 801604e:	d00e      	beq.n	801606e <StopRetransmission+0x46>
    {   // Maximum repetitions without downlink. Increase ADR Ack counter.
        // Only process the case when the MAC did not receive a downlink.
        if( MacCtx.NvmCtx->AdrCtrlOn == true )
 8016050:	4b13      	ldr	r3, [pc, #76]	; (80160a0 <StopRetransmission+0x78>)
 8016052:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8016056:	f893 307e 	ldrb.w	r3, [r3, #126]	; 0x7e
 801605a:	2b00      	cmp	r3, #0
 801605c:	d007      	beq.n	801606e <StopRetransmission+0x46>
        {
            MacCtx.NvmCtx->AdrAckCounter++;
 801605e:	4b10      	ldr	r3, [pc, #64]	; (80160a0 <StopRetransmission+0x78>)
 8016060:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8016064:	f8d3 2080 	ldr.w	r2, [r3, #128]	; 0x80
 8016068:	3201      	adds	r2, #1
 801606a:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
        }
    }

    MacCtx.ChannelsNbTransCounter = 0;
 801606e:	4b0c      	ldr	r3, [pc, #48]	; (80160a0 <StopRetransmission+0x78>)
 8016070:	2200      	movs	r2, #0
 8016072:	f883 2410 	strb.w	r2, [r3, #1040]	; 0x410
    MacCtx.NodeAckRequested = false;
 8016076:	4b0a      	ldr	r3, [pc, #40]	; (80160a0 <StopRetransmission+0x78>)
 8016078:	2200      	movs	r2, #0
 801607a:	f883 2414 	strb.w	r2, [r3, #1044]	; 0x414
    MacCtx.AckTimeoutRetry = false;
 801607e:	4b08      	ldr	r3, [pc, #32]	; (80160a0 <StopRetransmission+0x78>)
 8016080:	2200      	movs	r2, #0
 8016082:	f883 2413 	strb.w	r2, [r3, #1043]	; 0x413
    MacCtx.MacState &= ~LORAMAC_TX_RUNNING;
 8016086:	4b06      	ldr	r3, [pc, #24]	; (80160a0 <StopRetransmission+0x78>)
 8016088:	f8d3 3340 	ldr.w	r3, [r3, #832]	; 0x340
 801608c:	f023 0302 	bic.w	r3, r3, #2
 8016090:	4a03      	ldr	r2, [pc, #12]	; (80160a0 <StopRetransmission+0x78>)
 8016092:	f8c2 3340 	str.w	r3, [r2, #832]	; 0x340

    return true;
 8016096:	2301      	movs	r3, #1
}
 8016098:	4618      	mov	r0, r3
 801609a:	46bd      	mov	sp, r7
 801609c:	bc80      	pop	{r7}
 801609e:	4770      	bx	lr
 80160a0:	20000be0 	.word	0x20000be0

080160a4 <AckTimeoutRetriesProcess>:

static void AckTimeoutRetriesProcess( void )
{
 80160a4:	b580      	push	{r7, lr}
 80160a6:	b084      	sub	sp, #16
 80160a8:	af00      	add	r7, sp, #0
    if( MacCtx.AckTimeoutRetriesCounter < MacCtx.AckTimeoutRetries )
 80160aa:	4b1e      	ldr	r3, [pc, #120]	; (8016124 <AckTimeoutRetriesProcess+0x80>)
 80160ac:	f893 2412 	ldrb.w	r2, [r3, #1042]	; 0x412
 80160b0:	4b1c      	ldr	r3, [pc, #112]	; (8016124 <AckTimeoutRetriesProcess+0x80>)
 80160b2:	f893 3411 	ldrb.w	r3, [r3, #1041]	; 0x411
 80160b6:	429a      	cmp	r2, r3
 80160b8:	d230      	bcs.n	801611c <AckTimeoutRetriesProcess+0x78>
    {
        MacCtx.AckTimeoutRetriesCounter++;
 80160ba:	4b1a      	ldr	r3, [pc, #104]	; (8016124 <AckTimeoutRetriesProcess+0x80>)
 80160bc:	f893 3412 	ldrb.w	r3, [r3, #1042]	; 0x412
 80160c0:	3301      	adds	r3, #1
 80160c2:	b2da      	uxtb	r2, r3
 80160c4:	4b17      	ldr	r3, [pc, #92]	; (8016124 <AckTimeoutRetriesProcess+0x80>)
 80160c6:	f883 2412 	strb.w	r2, [r3, #1042]	; 0x412
        if( ( MacCtx.AckTimeoutRetriesCounter % 2 ) == 1 )
 80160ca:	4b16      	ldr	r3, [pc, #88]	; (8016124 <AckTimeoutRetriesProcess+0x80>)
 80160cc:	f893 3412 	ldrb.w	r3, [r3, #1042]	; 0x412
 80160d0:	f003 0301 	and.w	r3, r3, #1
 80160d4:	b2db      	uxtb	r3, r3
 80160d6:	2b00      	cmp	r3, #0
 80160d8:	d020      	beq.n	801611c <AckTimeoutRetriesProcess+0x78>
        {
            GetPhyParams_t getPhy;
            PhyParam_t phyParam;

            getPhy.Attribute = PHY_NEXT_LOWER_TX_DR;
 80160da:	2322      	movs	r3, #34	; 0x22
 80160dc:	723b      	strb	r3, [r7, #8]
            getPhy.UplinkDwellTime = MacCtx.NvmCtx->MacParams.UplinkDwellTime;
 80160de:	4b11      	ldr	r3, [pc, #68]	; (8016124 <AckTimeoutRetriesProcess+0x80>)
 80160e0:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 80160e4:	f893 30b8 	ldrb.w	r3, [r3, #184]	; 0xb8
 80160e8:	72bb      	strb	r3, [r7, #10]
            getPhy.Datarate = MacCtx.NvmCtx->MacParams.ChannelsDatarate;
 80160ea:	4b0e      	ldr	r3, [pc, #56]	; (8016124 <AckTimeoutRetriesProcess+0x80>)
 80160ec:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 80160f0:	f993 3085 	ldrsb.w	r3, [r3, #133]	; 0x85
 80160f4:	727b      	strb	r3, [r7, #9]
            phyParam = RegionGetPhyParam( MacCtx.NvmCtx->Region, &getPhy );
 80160f6:	4b0b      	ldr	r3, [pc, #44]	; (8016124 <AckTimeoutRetriesProcess+0x80>)
 80160f8:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 80160fc:	781b      	ldrb	r3, [r3, #0]
 80160fe:	f107 0208 	add.w	r2, r7, #8
 8016102:	4611      	mov	r1, r2
 8016104:	4618      	mov	r0, r3
 8016106:	f003 fd5a 	bl	8019bbe <RegionGetPhyParam>
 801610a:	4603      	mov	r3, r0
 801610c:	607b      	str	r3, [r7, #4]
            MacCtx.NvmCtx->MacParams.ChannelsDatarate = phyParam.Value;
 801610e:	687a      	ldr	r2, [r7, #4]
 8016110:	4b04      	ldr	r3, [pc, #16]	; (8016124 <AckTimeoutRetriesProcess+0x80>)
 8016112:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8016116:	b252      	sxtb	r2, r2
 8016118:	f883 2085 	strb.w	r2, [r3, #133]	; 0x85
        }
    }
}
 801611c:	bf00      	nop
 801611e:	3710      	adds	r7, #16
 8016120:	46bd      	mov	sp, r7
 8016122:	bd80      	pop	{r7, pc}
 8016124:	20000be0 	.word	0x20000be0

08016128 <AckTimeoutRetriesFinalize>:

static void AckTimeoutRetriesFinalize( void )
{
 8016128:	b580      	push	{r7, lr}
 801612a:	b082      	sub	sp, #8
 801612c:	af00      	add	r7, sp, #0
    if( MacCtx.McpsConfirm.AckReceived == false )
 801612e:	4b14      	ldr	r3, [pc, #80]	; (8016180 <AckTimeoutRetriesFinalize+0x58>)
 8016130:	f893 3440 	ldrb.w	r3, [r3, #1088]	; 0x440
 8016134:	f083 0301 	eor.w	r3, r3, #1
 8016138:	b2db      	uxtb	r3, r3
 801613a:	2b00      	cmp	r3, #0
 801613c:	d015      	beq.n	801616a <AckTimeoutRetriesFinalize+0x42>
    {
        InitDefaultsParams_t params;
        params.Type = INIT_TYPE_ACTIVATE_DEFAULT_CHANNELS;
 801613e:	2302      	movs	r3, #2
 8016140:	713b      	strb	r3, [r7, #4]
        params.NvmCtx = Contexts.RegionNvmCtx;
 8016142:	4b10      	ldr	r3, [pc, #64]	; (8016184 <AckTimeoutRetriesFinalize+0x5c>)
 8016144:	689b      	ldr	r3, [r3, #8]
 8016146:	603b      	str	r3, [r7, #0]
        RegionInitDefaults( MacCtx.NvmCtx->Region, &params );
 8016148:	4b0d      	ldr	r3, [pc, #52]	; (8016180 <AckTimeoutRetriesFinalize+0x58>)
 801614a:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 801614e:	781b      	ldrb	r3, [r3, #0]
 8016150:	463a      	mov	r2, r7
 8016152:	4611      	mov	r1, r2
 8016154:	4618      	mov	r0, r3
 8016156:	f003 fd6b 	bl	8019c30 <RegionInitDefaults>

        MacCtx.NodeAckRequested = false;
 801615a:	4b09      	ldr	r3, [pc, #36]	; (8016180 <AckTimeoutRetriesFinalize+0x58>)
 801615c:	2200      	movs	r2, #0
 801615e:	f883 2414 	strb.w	r2, [r3, #1044]	; 0x414
        MacCtx.McpsConfirm.AckReceived = false;
 8016162:	4b07      	ldr	r3, [pc, #28]	; (8016180 <AckTimeoutRetriesFinalize+0x58>)
 8016164:	2200      	movs	r2, #0
 8016166:	f883 2440 	strb.w	r2, [r3, #1088]	; 0x440
    }
    MacCtx.McpsConfirm.NbRetries = MacCtx.AckTimeoutRetriesCounter;
 801616a:	4b05      	ldr	r3, [pc, #20]	; (8016180 <AckTimeoutRetriesFinalize+0x58>)
 801616c:	f893 2412 	ldrb.w	r2, [r3, #1042]	; 0x412
 8016170:	4b03      	ldr	r3, [pc, #12]	; (8016180 <AckTimeoutRetriesFinalize+0x58>)
 8016172:	f883 2441 	strb.w	r2, [r3, #1089]	; 0x441
}
 8016176:	bf00      	nop
 8016178:	3708      	adds	r7, #8
 801617a:	46bd      	mov	sp, r7
 801617c:	bd80      	pop	{r7, pc}
 801617e:	bf00      	nop
 8016180:	20000be0 	.word	0x20000be0
 8016184:	200011d8 	.word	0x200011d8

08016188 <CallNvmCtxCallback>:

static void CallNvmCtxCallback( LoRaMacNvmCtxModule_t module )
{
 8016188:	b580      	push	{r7, lr}
 801618a:	b082      	sub	sp, #8
 801618c:	af00      	add	r7, sp, #0
 801618e:	4603      	mov	r3, r0
 8016190:	71fb      	strb	r3, [r7, #7]
    if( ( MacCtx.MacCallbacks != NULL ) && ( MacCtx.MacCallbacks->NvmContextChange != NULL ) )
 8016192:	4b0b      	ldr	r3, [pc, #44]	; (80161c0 <CallNvmCtxCallback+0x38>)
 8016194:	f8d3 3348 	ldr.w	r3, [r3, #840]	; 0x348
 8016198:	2b00      	cmp	r3, #0
 801619a:	d00c      	beq.n	80161b6 <CallNvmCtxCallback+0x2e>
 801619c:	4b08      	ldr	r3, [pc, #32]	; (80161c0 <CallNvmCtxCallback+0x38>)
 801619e:	f8d3 3348 	ldr.w	r3, [r3, #840]	; 0x348
 80161a2:	689b      	ldr	r3, [r3, #8]
 80161a4:	2b00      	cmp	r3, #0
 80161a6:	d006      	beq.n	80161b6 <CallNvmCtxCallback+0x2e>
    {
        MacCtx.MacCallbacks->NvmContextChange( module );
 80161a8:	4b05      	ldr	r3, [pc, #20]	; (80161c0 <CallNvmCtxCallback+0x38>)
 80161aa:	f8d3 3348 	ldr.w	r3, [r3, #840]	; 0x348
 80161ae:	689b      	ldr	r3, [r3, #8]
 80161b0:	79fa      	ldrb	r2, [r7, #7]
 80161b2:	4610      	mov	r0, r2
 80161b4:	4798      	blx	r3
    }
}
 80161b6:	bf00      	nop
 80161b8:	3708      	adds	r7, #8
 80161ba:	46bd      	mov	sp, r7
 80161bc:	bd80      	pop	{r7, pc}
 80161be:	bf00      	nop
 80161c0:	20000be0 	.word	0x20000be0

080161c4 <EventMacNvmCtxChanged>:

static void EventMacNvmCtxChanged( void )
{
 80161c4:	b580      	push	{r7, lr}
 80161c6:	af00      	add	r7, sp, #0
    CallNvmCtxCallback( LORAMAC_NVMCTXMODULE_MAC );
 80161c8:	2000      	movs	r0, #0
 80161ca:	f7ff ffdd 	bl	8016188 <CallNvmCtxCallback>
}
 80161ce:	bf00      	nop
 80161d0:	bd80      	pop	{r7, pc}

080161d2 <EventRegionNvmCtxChanged>:

static void EventRegionNvmCtxChanged( void )
{
 80161d2:	b580      	push	{r7, lr}
 80161d4:	af00      	add	r7, sp, #0
    CallNvmCtxCallback( LORAMAC_NVMCTXMODULE_REGION );
 80161d6:	2001      	movs	r0, #1
 80161d8:	f7ff ffd6 	bl	8016188 <CallNvmCtxCallback>
}
 80161dc:	bf00      	nop
 80161de:	bd80      	pop	{r7, pc}

080161e0 <EventCryptoNvmCtxChanged>:

static void EventCryptoNvmCtxChanged( void )
{
 80161e0:	b580      	push	{r7, lr}
 80161e2:	af00      	add	r7, sp, #0
    CallNvmCtxCallback( LORAMAC_NVMCTXMODULE_CRYPTO );
 80161e4:	2002      	movs	r0, #2
 80161e6:	f7ff ffcf 	bl	8016188 <CallNvmCtxCallback>
}
 80161ea:	bf00      	nop
 80161ec:	bd80      	pop	{r7, pc}

080161ee <EventSecureElementNvmCtxChanged>:

static void EventSecureElementNvmCtxChanged( void )
{
 80161ee:	b580      	push	{r7, lr}
 80161f0:	af00      	add	r7, sp, #0
    CallNvmCtxCallback( LORAMAC_NVMCTXMODULE_SECURE_ELEMENT );
 80161f2:	2003      	movs	r0, #3
 80161f4:	f7ff ffc8 	bl	8016188 <CallNvmCtxCallback>
}
 80161f8:	bf00      	nop
 80161fa:	bd80      	pop	{r7, pc}

080161fc <EventCommandsNvmCtxChanged>:

static void EventCommandsNvmCtxChanged( void )
{
 80161fc:	b580      	push	{r7, lr}
 80161fe:	af00      	add	r7, sp, #0
    CallNvmCtxCallback( LORAMAC_NVMCTXMODULE_COMMANDS );
 8016200:	2004      	movs	r0, #4
 8016202:	f7ff ffc1 	bl	8016188 <CallNvmCtxCallback>
}
 8016206:	bf00      	nop
 8016208:	bd80      	pop	{r7, pc}

0801620a <EventClassBNvmCtxChanged>:

static void EventClassBNvmCtxChanged( void )
{
 801620a:	b580      	push	{r7, lr}
 801620c:	af00      	add	r7, sp, #0
    CallNvmCtxCallback( LORAMAC_NVMCTXMODULE_CLASS_B );
 801620e:	2005      	movs	r0, #5
 8016210:	f7ff ffba 	bl	8016188 <CallNvmCtxCallback>
}
 8016214:	bf00      	nop
 8016216:	bd80      	pop	{r7, pc}

08016218 <EventConfirmQueueNvmCtxChanged>:

static void EventConfirmQueueNvmCtxChanged( void )
{
 8016218:	b580      	push	{r7, lr}
 801621a:	af00      	add	r7, sp, #0
    CallNvmCtxCallback( LORAMAC_NVMCTXMODULE_CONFIRM_QUEUE );
 801621c:	2006      	movs	r0, #6
 801621e:	f7ff ffb3 	bl	8016188 <CallNvmCtxCallback>
}
 8016222:	bf00      	nop
 8016224:	bd80      	pop	{r7, pc}
	...

08016228 <IsRequestPending>:

static uint8_t IsRequestPending( void )
{
 8016228:	b480      	push	{r7}
 801622a:	af00      	add	r7, sp, #0
    if( ( MacCtx.MacFlags.Bits.MlmeReq == 1 ) ||
 801622c:	4b0b      	ldr	r3, [pc, #44]	; (801625c <IsRequestPending+0x34>)
 801622e:	f893 3481 	ldrb.w	r3, [r3, #1153]	; 0x481
 8016232:	f003 0304 	and.w	r3, r3, #4
 8016236:	b2db      	uxtb	r3, r3
 8016238:	2b00      	cmp	r3, #0
 801623a:	d107      	bne.n	801624c <IsRequestPending+0x24>
        ( MacCtx.MacFlags.Bits.McpsReq == 1 ) )
 801623c:	4b07      	ldr	r3, [pc, #28]	; (801625c <IsRequestPending+0x34>)
 801623e:	f893 3481 	ldrb.w	r3, [r3, #1153]	; 0x481
 8016242:	f003 0301 	and.w	r3, r3, #1
 8016246:	b2db      	uxtb	r3, r3
    if( ( MacCtx.MacFlags.Bits.MlmeReq == 1 ) ||
 8016248:	2b00      	cmp	r3, #0
 801624a:	d001      	beq.n	8016250 <IsRequestPending+0x28>
    {
        return 1;
 801624c:	2301      	movs	r3, #1
 801624e:	e000      	b.n	8016252 <IsRequestPending+0x2a>
    }
    return 0;
 8016250:	2300      	movs	r3, #0
}
 8016252:	4618      	mov	r0, r3
 8016254:	46bd      	mov	sp, r7
 8016256:	bc80      	pop	{r7}
 8016258:	4770      	bx	lr
 801625a:	bf00      	nop
 801625c:	20000be0 	.word	0x20000be0

08016260 <LoRaMacIsBusy>:

/* Exported functions ---------------------------------------------------------*/
bool LoRaMacIsBusy( void )
{
 8016260:	b480      	push	{r7}
 8016262:	af00      	add	r7, sp, #0
    if( ( MacCtx.MacState == LORAMAC_IDLE ) &&
 8016264:	4b08      	ldr	r3, [pc, #32]	; (8016288 <LoRaMacIsBusy+0x28>)
 8016266:	f8d3 3340 	ldr.w	r3, [r3, #832]	; 0x340
 801626a:	2b00      	cmp	r3, #0
 801626c:	d106      	bne.n	801627c <LoRaMacIsBusy+0x1c>
        ( MacCtx.AllowRequests == LORAMAC_REQUEST_HANDLING_ON ) )
 801626e:	4b06      	ldr	r3, [pc, #24]	; (8016288 <LoRaMacIsBusy+0x28>)
 8016270:	f893 3482 	ldrb.w	r3, [r3, #1154]	; 0x482
    if( ( MacCtx.MacState == LORAMAC_IDLE ) &&
 8016274:	2b01      	cmp	r3, #1
 8016276:	d101      	bne.n	801627c <LoRaMacIsBusy+0x1c>
    {
        return false;
 8016278:	2300      	movs	r3, #0
 801627a:	e000      	b.n	801627e <LoRaMacIsBusy+0x1e>
    }
    return true;
 801627c:	2301      	movs	r3, #1
}
 801627e:	4618      	mov	r0, r3
 8016280:	46bd      	mov	sp, r7
 8016282:	bc80      	pop	{r7}
 8016284:	4770      	bx	lr
 8016286:	bf00      	nop
 8016288:	20000be0 	.word	0x20000be0

0801628c <LoRaMacProcess>:

void LoRaMacProcess( void )
{
 801628c:	b580      	push	{r7, lr}
 801628e:	b082      	sub	sp, #8
 8016290:	af00      	add	r7, sp, #0
    uint8_t noTx = 0x00;
 8016292:	2300      	movs	r3, #0
 8016294:	71fb      	strb	r3, [r7, #7]

    LoRaMacHandleIrqEvents( );
 8016296:	f7fd fc87 	bl	8013ba8 <LoRaMacHandleIrqEvents>
    LoRaMacClassBProcess( );
 801629a:	f001 fd79 	bl	8017d90 <LoRaMacClassBProcess>

    // MAC proceeded a state and is ready to check
    if( MacCtx.MacFlags.Bits.MacDone == 1 )
 801629e:	4b1a      	ldr	r3, [pc, #104]	; (8016308 <LoRaMacProcess+0x7c>)
 80162a0:	f893 3481 	ldrb.w	r3, [r3, #1153]	; 0x481
 80162a4:	f003 0320 	and.w	r3, r3, #32
 80162a8:	b2db      	uxtb	r3, r3
 80162aa:	2b00      	cmp	r3, #0
 80162ac:	d01e      	beq.n	80162ec <LoRaMacProcess+0x60>
    {
        LoRaMacEnableRequests( LORAMAC_REQUEST_HANDLING_OFF );
 80162ae:	2000      	movs	r0, #0
 80162b0:	f7fd fcc2 	bl	8013c38 <LoRaMacEnableRequests>
        LoRaMacCheckForRxAbort( );
 80162b4:	f7fd fe70 	bl	8013f98 <LoRaMacCheckForRxAbort>

        // An error occurs during transmitting
        if( IsRequestPending( ) > 0 )
 80162b8:	f7ff ffb6 	bl	8016228 <IsRequestPending>
 80162bc:	4603      	mov	r3, r0
 80162be:	2b00      	cmp	r3, #0
 80162c0:	d006      	beq.n	80162d0 <LoRaMacProcess+0x44>
        {
            noTx |= LoRaMacCheckForBeaconAcquisition( );
 80162c2:	f7fd fe41 	bl	8013f48 <LoRaMacCheckForBeaconAcquisition>
 80162c6:	4603      	mov	r3, r0
 80162c8:	461a      	mov	r2, r3
 80162ca:	79fb      	ldrb	r3, [r7, #7]
 80162cc:	4313      	orrs	r3, r2
 80162ce:	71fb      	strb	r3, [r7, #7]
        }

        if( noTx == 0x00 )
 80162d0:	79fb      	ldrb	r3, [r7, #7]
 80162d2:	2b00      	cmp	r3, #0
 80162d4:	d103      	bne.n	80162de <LoRaMacProcess+0x52>
        {
            LoRaMacHandleMlmeRequest( );
 80162d6:	f7fd fdfb 	bl	8013ed0 <LoRaMacHandleMlmeRequest>
            LoRaMacHandleMcpsRequest( );
 80162da:	f7fd fd8b 	bl	8013df4 <LoRaMacHandleMcpsRequest>
        }
        LoRaMacHandleRequestEvents( );
 80162de:	f7fd fcbb 	bl	8013c58 <LoRaMacHandleRequestEvents>
        LoRaMacHandleScheduleUplinkEvent( );
 80162e2:	f7fd fd1b 	bl	8013d1c <LoRaMacHandleScheduleUplinkEvent>
        LoRaMacEnableRequests( LORAMAC_REQUEST_HANDLING_ON );
 80162e6:	2001      	movs	r0, #1
 80162e8:	f7fd fca6 	bl	8013c38 <LoRaMacEnableRequests>
    }
    LoRaMacHandleIndicationEvents( );
 80162ec:	f7fd fd30 	bl	8013d50 <LoRaMacHandleIndicationEvents>
    if( MacCtx.RxSlot == RX_SLOT_WIN_CLASS_C )
 80162f0:	4b05      	ldr	r3, [pc, #20]	; (8016308 <LoRaMacProcess+0x7c>)
 80162f2:	f893 3480 	ldrb.w	r3, [r3, #1152]	; 0x480
 80162f6:	2b02      	cmp	r3, #2
 80162f8:	d101      	bne.n	80162fe <LoRaMacProcess+0x72>
    {
        OpenContinuousRxCWindow( );
 80162fa:	f7ff fa97 	bl	801582c <OpenContinuousRxCWindow>
    }
}
 80162fe:	bf00      	nop
 8016300:	3708      	adds	r7, #8
 8016302:	46bd      	mov	sp, r7
 8016304:	bd80      	pop	{r7, pc}
 8016306:	bf00      	nop
 8016308:	20000be0 	.word	0x20000be0

0801630c <LoRaMacInitialization>:

LoRaMacStatus_t LoRaMacInitialization( LoRaMacPrimitives_t* primitives, LoRaMacCallback_t* callbacks, LoRaMacRegion_t region )
{
 801630c:	b590      	push	{r4, r7, lr}
 801630e:	b099      	sub	sp, #100	; 0x64
 8016310:	af02      	add	r7, sp, #8
 8016312:	6178      	str	r0, [r7, #20]
 8016314:	6139      	str	r1, [r7, #16]
 8016316:	4613      	mov	r3, r2
 8016318:	73fb      	strb	r3, [r7, #15]
    GetPhyParams_t getPhy;
    PhyParam_t phyParam;
    LoRaMacClassBCallback_t classBCallbacks;
    LoRaMacClassBParams_t classBParams;

    if( ( primitives == NULL ) ||
 801631a:	697b      	ldr	r3, [r7, #20]
 801631c:	2b00      	cmp	r3, #0
 801631e:	d002      	beq.n	8016326 <LoRaMacInitialization+0x1a>
 8016320:	693b      	ldr	r3, [r7, #16]
 8016322:	2b00      	cmp	r3, #0
 8016324:	d101      	bne.n	801632a <LoRaMacInitialization+0x1e>
        ( callbacks == NULL ) )
    {
        return LORAMAC_STATUS_PARAMETER_INVALID;
 8016326:	2303      	movs	r3, #3
 8016328:	e30b      	b.n	8016942 <LoRaMacInitialization+0x636>
    }

    if( ( primitives->MacMcpsConfirm == NULL ) ||
 801632a:	697b      	ldr	r3, [r7, #20]
 801632c:	681b      	ldr	r3, [r3, #0]
 801632e:	2b00      	cmp	r3, #0
 8016330:	d00b      	beq.n	801634a <LoRaMacInitialization+0x3e>
        ( primitives->MacMcpsIndication == NULL ) ||
 8016332:	697b      	ldr	r3, [r7, #20]
 8016334:	685b      	ldr	r3, [r3, #4]
    if( ( primitives->MacMcpsConfirm == NULL ) ||
 8016336:	2b00      	cmp	r3, #0
 8016338:	d007      	beq.n	801634a <LoRaMacInitialization+0x3e>
        ( primitives->MacMlmeConfirm == NULL ) ||
 801633a:	697b      	ldr	r3, [r7, #20]
 801633c:	689b      	ldr	r3, [r3, #8]
        ( primitives->MacMcpsIndication == NULL ) ||
 801633e:	2b00      	cmp	r3, #0
 8016340:	d003      	beq.n	801634a <LoRaMacInitialization+0x3e>
        ( primitives->MacMlmeIndication == NULL ) )
 8016342:	697b      	ldr	r3, [r7, #20]
 8016344:	68db      	ldr	r3, [r3, #12]
        ( primitives->MacMlmeConfirm == NULL ) ||
 8016346:	2b00      	cmp	r3, #0
 8016348:	d101      	bne.n	801634e <LoRaMacInitialization+0x42>
    {
        return LORAMAC_STATUS_PARAMETER_INVALID;
 801634a:	2303      	movs	r3, #3
 801634c:	e2f9      	b.n	8016942 <LoRaMacInitialization+0x636>
    }
    // Verify if the region is supported
    if( RegionIsActive( region ) == false )
 801634e:	7bfb      	ldrb	r3, [r7, #15]
 8016350:	4618      	mov	r0, r3
 8016352:	f003 fc1f 	bl	8019b94 <RegionIsActive>
 8016356:	4603      	mov	r3, r0
 8016358:	f083 0301 	eor.w	r3, r3, #1
 801635c:	b2db      	uxtb	r3, r3
 801635e:	2b00      	cmp	r3, #0
 8016360:	d001      	beq.n	8016366 <LoRaMacInitialization+0x5a>
    {
        return LORAMAC_STATUS_REGION_NOT_SUPPORTED;
 8016362:	2309      	movs	r3, #9
 8016364:	e2ed      	b.n	8016942 <LoRaMacInitialization+0x636>
    }

    // Confirm queue reset
    LoRaMacConfirmQueueInit( primitives, EventConfirmQueueNvmCtxChanged );
 8016366:	49c5      	ldr	r1, [pc, #788]	; (801667c <LoRaMacInitialization+0x370>)
 8016368:	6978      	ldr	r0, [r7, #20]
 801636a:	f002 f891 	bl	8018490 <LoRaMacConfirmQueueInit>

    // Initialize the module context with zeros
    memset1( ( uint8_t* ) &NvmMacCtx, 0x00, sizeof( LoRaMacNvmCtx_t ) );
 801636e:	f44f 72b6 	mov.w	r2, #364	; 0x16c
 8016372:	2100      	movs	r1, #0
 8016374:	48c2      	ldr	r0, [pc, #776]	; (8016680 <LoRaMacInitialization+0x374>)
 8016376:	f007 f993 	bl	801d6a0 <memset1>
    memset1( ( uint8_t* ) &MacCtx, 0x00, sizeof( LoRaMacCtx_t ) );
 801637a:	f240 428c 	movw	r2, #1164	; 0x48c
 801637e:	2100      	movs	r1, #0
 8016380:	48c0      	ldr	r0, [pc, #768]	; (8016684 <LoRaMacInitialization+0x378>)
 8016382:	f007 f98d 	bl	801d6a0 <memset1>
    MacCtx.NvmCtx = &NvmMacCtx;
 8016386:	4bbf      	ldr	r3, [pc, #764]	; (8016684 <LoRaMacInitialization+0x378>)
 8016388:	4abd      	ldr	r2, [pc, #756]	; (8016680 <LoRaMacInitialization+0x374>)
 801638a:	f8c3 2484 	str.w	r2, [r3, #1156]	; 0x484

    // Set non zero variables to its default value
    MacCtx.AckTimeoutRetriesCounter = 1;
 801638e:	4bbd      	ldr	r3, [pc, #756]	; (8016684 <LoRaMacInitialization+0x378>)
 8016390:	2201      	movs	r2, #1
 8016392:	f883 2412 	strb.w	r2, [r3, #1042]	; 0x412
    MacCtx.AckTimeoutRetries = 1;
 8016396:	4bbb      	ldr	r3, [pc, #748]	; (8016684 <LoRaMacInitialization+0x378>)
 8016398:	2201      	movs	r2, #1
 801639a:	f883 2411 	strb.w	r2, [r3, #1041]	; 0x411
    MacCtx.NvmCtx->Region = region;
 801639e:	4bb9      	ldr	r3, [pc, #740]	; (8016684 <LoRaMacInitialization+0x378>)
 80163a0:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 80163a4:	7bfa      	ldrb	r2, [r7, #15]
 80163a6:	701a      	strb	r2, [r3, #0]
    MacCtx.NvmCtx->DeviceClass = CLASS_A;
 80163a8:	4bb6      	ldr	r3, [pc, #728]	; (8016684 <LoRaMacInitialization+0x378>)
 80163aa:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 80163ae:	2200      	movs	r2, #0
 80163b0:	f883 207c 	strb.w	r2, [r3, #124]	; 0x7c
    MacCtx.NvmCtx->RepeaterSupport = false;
 80163b4:	4bb3      	ldr	r3, [pc, #716]	; (8016684 <LoRaMacInitialization+0x378>)
 80163b6:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 80163ba:	2200      	movs	r2, #0
 80163bc:	f883 20ca 	strb.w	r2, [r3, #202]	; 0xca

    // Setup version
    MacCtx.NvmCtx->Version.Value = LORAMAC_VERSION;
 80163c0:	4bb0      	ldr	r3, [pc, #704]	; (8016684 <LoRaMacInitialization+0x378>)
 80163c2:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 80163c6:	4ab0      	ldr	r2, [pc, #704]	; (8016688 <LoRaMacInitialization+0x37c>)
 80163c8:	f8c3 2160 	str.w	r2, [r3, #352]	; 0x160

    // Reset to defaults
    getPhy.Attribute = PHY_DUTY_CYCLE;
 80163cc:	230f      	movs	r3, #15
 80163ce:	f887 3050 	strb.w	r3, [r7, #80]	; 0x50
    phyParam = RegionGetPhyParam( MacCtx.NvmCtx->Region, &getPhy );
 80163d2:	4bac      	ldr	r3, [pc, #688]	; (8016684 <LoRaMacInitialization+0x378>)
 80163d4:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 80163d8:	781b      	ldrb	r3, [r3, #0]
 80163da:	f107 0250 	add.w	r2, r7, #80	; 0x50
 80163de:	4611      	mov	r1, r2
 80163e0:	4618      	mov	r0, r3
 80163e2:	f003 fbec 	bl	8019bbe <RegionGetPhyParam>
 80163e6:	4603      	mov	r3, r0
 80163e8:	64fb      	str	r3, [r7, #76]	; 0x4c
    MacCtx.NvmCtx->DutyCycleOn = ( bool ) phyParam.Value;
 80163ea:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 80163ec:	4ba5      	ldr	r3, [pc, #660]	; (8016684 <LoRaMacInitialization+0x378>)
 80163ee:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 80163f2:	2a00      	cmp	r2, #0
 80163f4:	bf14      	ite	ne
 80163f6:	2201      	movne	r2, #1
 80163f8:	2200      	moveq	r2, #0
 80163fa:	b2d2      	uxtb	r2, r2
 80163fc:	f883 20c9 	strb.w	r2, [r3, #201]	; 0xc9

    getPhy.Attribute = PHY_DEF_TX_POWER;
 8016400:	230a      	movs	r3, #10
 8016402:	f887 3050 	strb.w	r3, [r7, #80]	; 0x50
    phyParam = RegionGetPhyParam( MacCtx.NvmCtx->Region, &getPhy );
 8016406:	4b9f      	ldr	r3, [pc, #636]	; (8016684 <LoRaMacInitialization+0x378>)
 8016408:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 801640c:	781b      	ldrb	r3, [r3, #0]
 801640e:	f107 0250 	add.w	r2, r7, #80	; 0x50
 8016412:	4611      	mov	r1, r2
 8016414:	4618      	mov	r0, r3
 8016416:	f003 fbd2 	bl	8019bbe <RegionGetPhyParam>
 801641a:	4603      	mov	r3, r0
 801641c:	64fb      	str	r3, [r7, #76]	; 0x4c
    MacCtx.NvmCtx->MacParamsDefaults.ChannelsTxPower = phyParam.Value;
 801641e:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 8016420:	4b98      	ldr	r3, [pc, #608]	; (8016684 <LoRaMacInitialization+0x378>)
 8016422:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8016426:	b252      	sxtb	r2, r2
 8016428:	711a      	strb	r2, [r3, #4]

    getPhy.Attribute = PHY_DEF_TX_DR;
 801642a:	2306      	movs	r3, #6
 801642c:	f887 3050 	strb.w	r3, [r7, #80]	; 0x50
    phyParam = RegionGetPhyParam( MacCtx.NvmCtx->Region, &getPhy );
 8016430:	4b94      	ldr	r3, [pc, #592]	; (8016684 <LoRaMacInitialization+0x378>)
 8016432:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8016436:	781b      	ldrb	r3, [r3, #0]
 8016438:	f107 0250 	add.w	r2, r7, #80	; 0x50
 801643c:	4611      	mov	r1, r2
 801643e:	4618      	mov	r0, r3
 8016440:	f003 fbbd 	bl	8019bbe <RegionGetPhyParam>
 8016444:	4603      	mov	r3, r0
 8016446:	64fb      	str	r3, [r7, #76]	; 0x4c
    MacCtx.NvmCtx->MacParamsDefaults.ChannelsDatarate = phyParam.Value;
 8016448:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 801644a:	4b8e      	ldr	r3, [pc, #568]	; (8016684 <LoRaMacInitialization+0x378>)
 801644c:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8016450:	b252      	sxtb	r2, r2
 8016452:	715a      	strb	r2, [r3, #5]

    getPhy.Attribute = PHY_MAX_RX_WINDOW;
 8016454:	2310      	movs	r3, #16
 8016456:	f887 3050 	strb.w	r3, [r7, #80]	; 0x50
    phyParam = RegionGetPhyParam( MacCtx.NvmCtx->Region, &getPhy );
 801645a:	4b8a      	ldr	r3, [pc, #552]	; (8016684 <LoRaMacInitialization+0x378>)
 801645c:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8016460:	781b      	ldrb	r3, [r3, #0]
 8016462:	f107 0250 	add.w	r2, r7, #80	; 0x50
 8016466:	4611      	mov	r1, r2
 8016468:	4618      	mov	r0, r3
 801646a:	f003 fba8 	bl	8019bbe <RegionGetPhyParam>
 801646e:	4603      	mov	r3, r0
 8016470:	64fb      	str	r3, [r7, #76]	; 0x4c
    MacCtx.NvmCtx->MacParamsDefaults.MaxRxWindow = phyParam.Value;
 8016472:	4b84      	ldr	r3, [pc, #528]	; (8016684 <LoRaMacInitialization+0x378>)
 8016474:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8016478:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 801647a:	611a      	str	r2, [r3, #16]

    getPhy.Attribute = PHY_RECEIVE_DELAY1;
 801647c:	2311      	movs	r3, #17
 801647e:	f887 3050 	strb.w	r3, [r7, #80]	; 0x50
    phyParam = RegionGetPhyParam( MacCtx.NvmCtx->Region, &getPhy );
 8016482:	4b80      	ldr	r3, [pc, #512]	; (8016684 <LoRaMacInitialization+0x378>)
 8016484:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8016488:	781b      	ldrb	r3, [r3, #0]
 801648a:	f107 0250 	add.w	r2, r7, #80	; 0x50
 801648e:	4611      	mov	r1, r2
 8016490:	4618      	mov	r0, r3
 8016492:	f003 fb94 	bl	8019bbe <RegionGetPhyParam>
 8016496:	4603      	mov	r3, r0
 8016498:	64fb      	str	r3, [r7, #76]	; 0x4c
    MacCtx.NvmCtx->MacParamsDefaults.ReceiveDelay1 = phyParam.Value;
 801649a:	4b7a      	ldr	r3, [pc, #488]	; (8016684 <LoRaMacInitialization+0x378>)
 801649c:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 80164a0:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 80164a2:	615a      	str	r2, [r3, #20]

    getPhy.Attribute = PHY_RECEIVE_DELAY2;
 80164a4:	2312      	movs	r3, #18
 80164a6:	f887 3050 	strb.w	r3, [r7, #80]	; 0x50
    phyParam = RegionGetPhyParam( MacCtx.NvmCtx->Region, &getPhy );
 80164aa:	4b76      	ldr	r3, [pc, #472]	; (8016684 <LoRaMacInitialization+0x378>)
 80164ac:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 80164b0:	781b      	ldrb	r3, [r3, #0]
 80164b2:	f107 0250 	add.w	r2, r7, #80	; 0x50
 80164b6:	4611      	mov	r1, r2
 80164b8:	4618      	mov	r0, r3
 80164ba:	f003 fb80 	bl	8019bbe <RegionGetPhyParam>
 80164be:	4603      	mov	r3, r0
 80164c0:	64fb      	str	r3, [r7, #76]	; 0x4c
    MacCtx.NvmCtx->MacParamsDefaults.ReceiveDelay2 = phyParam.Value;
 80164c2:	4b70      	ldr	r3, [pc, #448]	; (8016684 <LoRaMacInitialization+0x378>)
 80164c4:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 80164c8:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 80164ca:	619a      	str	r2, [r3, #24]

    getPhy.Attribute = PHY_JOIN_ACCEPT_DELAY1;
 80164cc:	2313      	movs	r3, #19
 80164ce:	f887 3050 	strb.w	r3, [r7, #80]	; 0x50
    phyParam = RegionGetPhyParam( MacCtx.NvmCtx->Region, &getPhy );
 80164d2:	4b6c      	ldr	r3, [pc, #432]	; (8016684 <LoRaMacInitialization+0x378>)
 80164d4:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 80164d8:	781b      	ldrb	r3, [r3, #0]
 80164da:	f107 0250 	add.w	r2, r7, #80	; 0x50
 80164de:	4611      	mov	r1, r2
 80164e0:	4618      	mov	r0, r3
 80164e2:	f003 fb6c 	bl	8019bbe <RegionGetPhyParam>
 80164e6:	4603      	mov	r3, r0
 80164e8:	64fb      	str	r3, [r7, #76]	; 0x4c
    MacCtx.NvmCtx->MacParamsDefaults.JoinAcceptDelay1 = phyParam.Value;
 80164ea:	4b66      	ldr	r3, [pc, #408]	; (8016684 <LoRaMacInitialization+0x378>)
 80164ec:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 80164f0:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 80164f2:	61da      	str	r2, [r3, #28]

    getPhy.Attribute = PHY_JOIN_ACCEPT_DELAY2;
 80164f4:	2314      	movs	r3, #20
 80164f6:	f887 3050 	strb.w	r3, [r7, #80]	; 0x50
    phyParam = RegionGetPhyParam( MacCtx.NvmCtx->Region, &getPhy );
 80164fa:	4b62      	ldr	r3, [pc, #392]	; (8016684 <LoRaMacInitialization+0x378>)
 80164fc:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8016500:	781b      	ldrb	r3, [r3, #0]
 8016502:	f107 0250 	add.w	r2, r7, #80	; 0x50
 8016506:	4611      	mov	r1, r2
 8016508:	4618      	mov	r0, r3
 801650a:	f003 fb58 	bl	8019bbe <RegionGetPhyParam>
 801650e:	4603      	mov	r3, r0
 8016510:	64fb      	str	r3, [r7, #76]	; 0x4c
    MacCtx.NvmCtx->MacParamsDefaults.JoinAcceptDelay2 = phyParam.Value;
 8016512:	4b5c      	ldr	r3, [pc, #368]	; (8016684 <LoRaMacInitialization+0x378>)
 8016514:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8016518:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 801651a:	621a      	str	r2, [r3, #32]

    getPhy.Attribute = PHY_DEF_DR1_OFFSET;
 801651c:	2317      	movs	r3, #23
 801651e:	f887 3050 	strb.w	r3, [r7, #80]	; 0x50
    phyParam = RegionGetPhyParam( MacCtx.NvmCtx->Region, &getPhy );
 8016522:	4b58      	ldr	r3, [pc, #352]	; (8016684 <LoRaMacInitialization+0x378>)
 8016524:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8016528:	781b      	ldrb	r3, [r3, #0]
 801652a:	f107 0250 	add.w	r2, r7, #80	; 0x50
 801652e:	4611      	mov	r1, r2
 8016530:	4618      	mov	r0, r3
 8016532:	f003 fb44 	bl	8019bbe <RegionGetPhyParam>
 8016536:	4603      	mov	r3, r0
 8016538:	64fb      	str	r3, [r7, #76]	; 0x4c
    MacCtx.NvmCtx->MacParamsDefaults.Rx1DrOffset = phyParam.Value;
 801653a:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 801653c:	4b51      	ldr	r3, [pc, #324]	; (8016684 <LoRaMacInitialization+0x378>)
 801653e:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8016542:	b2d2      	uxtb	r2, r2
 8016544:	f883 2025 	strb.w	r2, [r3, #37]	; 0x25

    getPhy.Attribute = PHY_DEF_RX2_FREQUENCY;
 8016548:	2318      	movs	r3, #24
 801654a:	f887 3050 	strb.w	r3, [r7, #80]	; 0x50
    phyParam = RegionGetPhyParam( MacCtx.NvmCtx->Region, &getPhy );
 801654e:	4b4d      	ldr	r3, [pc, #308]	; (8016684 <LoRaMacInitialization+0x378>)
 8016550:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8016554:	781b      	ldrb	r3, [r3, #0]
 8016556:	f107 0250 	add.w	r2, r7, #80	; 0x50
 801655a:	4611      	mov	r1, r2
 801655c:	4618      	mov	r0, r3
 801655e:	f003 fb2e 	bl	8019bbe <RegionGetPhyParam>
 8016562:	4603      	mov	r3, r0
 8016564:	64fb      	str	r3, [r7, #76]	; 0x4c
    MacCtx.NvmCtx->MacParamsDefaults.Rx2Channel.Frequency = phyParam.Value;
 8016566:	4b47      	ldr	r3, [pc, #284]	; (8016684 <LoRaMacInitialization+0x378>)
 8016568:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 801656c:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 801656e:	629a      	str	r2, [r3, #40]	; 0x28
    MacCtx.NvmCtx->MacParamsDefaults.RxCChannel.Frequency = phyParam.Value;
 8016570:	4b44      	ldr	r3, [pc, #272]	; (8016684 <LoRaMacInitialization+0x378>)
 8016572:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8016576:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 8016578:	631a      	str	r2, [r3, #48]	; 0x30

    getPhy.Attribute = PHY_DEF_RX2_DR;
 801657a:	2319      	movs	r3, #25
 801657c:	f887 3050 	strb.w	r3, [r7, #80]	; 0x50
    phyParam = RegionGetPhyParam( MacCtx.NvmCtx->Region, &getPhy );
 8016580:	4b40      	ldr	r3, [pc, #256]	; (8016684 <LoRaMacInitialization+0x378>)
 8016582:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8016586:	781b      	ldrb	r3, [r3, #0]
 8016588:	f107 0250 	add.w	r2, r7, #80	; 0x50
 801658c:	4611      	mov	r1, r2
 801658e:	4618      	mov	r0, r3
 8016590:	f003 fb15 	bl	8019bbe <RegionGetPhyParam>
 8016594:	4603      	mov	r3, r0
 8016596:	64fb      	str	r3, [r7, #76]	; 0x4c
    MacCtx.NvmCtx->MacParamsDefaults.Rx2Channel.Datarate = phyParam.Value;
 8016598:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 801659a:	4b3a      	ldr	r3, [pc, #232]	; (8016684 <LoRaMacInitialization+0x378>)
 801659c:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 80165a0:	b2d2      	uxtb	r2, r2
 80165a2:	f883 202c 	strb.w	r2, [r3, #44]	; 0x2c
    MacCtx.NvmCtx->MacParamsDefaults.RxCChannel.Datarate = phyParam.Value;
 80165a6:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 80165a8:	4b36      	ldr	r3, [pc, #216]	; (8016684 <LoRaMacInitialization+0x378>)
 80165aa:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 80165ae:	b2d2      	uxtb	r2, r2
 80165b0:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34

    getPhy.Attribute = PHY_DEF_UPLINK_DWELL_TIME;
 80165b4:	231e      	movs	r3, #30
 80165b6:	f887 3050 	strb.w	r3, [r7, #80]	; 0x50
    phyParam = RegionGetPhyParam( MacCtx.NvmCtx->Region, &getPhy );
 80165ba:	4b32      	ldr	r3, [pc, #200]	; (8016684 <LoRaMacInitialization+0x378>)
 80165bc:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 80165c0:	781b      	ldrb	r3, [r3, #0]
 80165c2:	f107 0250 	add.w	r2, r7, #80	; 0x50
 80165c6:	4611      	mov	r1, r2
 80165c8:	4618      	mov	r0, r3
 80165ca:	f003 faf8 	bl	8019bbe <RegionGetPhyParam>
 80165ce:	4603      	mov	r3, r0
 80165d0:	64fb      	str	r3, [r7, #76]	; 0x4c
    MacCtx.NvmCtx->MacParamsDefaults.UplinkDwellTime = phyParam.Value;
 80165d2:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 80165d4:	4b2b      	ldr	r3, [pc, #172]	; (8016684 <LoRaMacInitialization+0x378>)
 80165d6:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 80165da:	b2d2      	uxtb	r2, r2
 80165dc:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38

    getPhy.Attribute = PHY_DEF_DOWNLINK_DWELL_TIME;
 80165e0:	231f      	movs	r3, #31
 80165e2:	f887 3050 	strb.w	r3, [r7, #80]	; 0x50
    phyParam = RegionGetPhyParam( MacCtx.NvmCtx->Region, &getPhy );
 80165e6:	4b27      	ldr	r3, [pc, #156]	; (8016684 <LoRaMacInitialization+0x378>)
 80165e8:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 80165ec:	781b      	ldrb	r3, [r3, #0]
 80165ee:	f107 0250 	add.w	r2, r7, #80	; 0x50
 80165f2:	4611      	mov	r1, r2
 80165f4:	4618      	mov	r0, r3
 80165f6:	f003 fae2 	bl	8019bbe <RegionGetPhyParam>
 80165fa:	4603      	mov	r3, r0
 80165fc:	64fb      	str	r3, [r7, #76]	; 0x4c
    MacCtx.NvmCtx->MacParamsDefaults.DownlinkDwellTime = phyParam.Value;
 80165fe:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 8016600:	4b20      	ldr	r3, [pc, #128]	; (8016684 <LoRaMacInitialization+0x378>)
 8016602:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8016606:	b2d2      	uxtb	r2, r2
 8016608:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39

    getPhy.Attribute = PHY_DEF_MAX_EIRP;
 801660c:	2320      	movs	r3, #32
 801660e:	f887 3050 	strb.w	r3, [r7, #80]	; 0x50
    phyParam = RegionGetPhyParam( MacCtx.NvmCtx->Region, &getPhy );
 8016612:	4b1c      	ldr	r3, [pc, #112]	; (8016684 <LoRaMacInitialization+0x378>)
 8016614:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8016618:	781b      	ldrb	r3, [r3, #0]
 801661a:	f107 0250 	add.w	r2, r7, #80	; 0x50
 801661e:	4611      	mov	r1, r2
 8016620:	4618      	mov	r0, r3
 8016622:	f003 facc 	bl	8019bbe <RegionGetPhyParam>
 8016626:	4603      	mov	r3, r0
 8016628:	64fb      	str	r3, [r7, #76]	; 0x4c
    MacCtx.NvmCtx->MacParamsDefaults.MaxEirp = phyParam.fValue;
 801662a:	4b16      	ldr	r3, [pc, #88]	; (8016684 <LoRaMacInitialization+0x378>)
 801662c:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8016630:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 8016632:	63da      	str	r2, [r3, #60]	; 0x3c

    getPhy.Attribute = PHY_DEF_ANTENNA_GAIN;
 8016634:	2321      	movs	r3, #33	; 0x21
 8016636:	f887 3050 	strb.w	r3, [r7, #80]	; 0x50
    phyParam = RegionGetPhyParam( MacCtx.NvmCtx->Region, &getPhy );
 801663a:	4b12      	ldr	r3, [pc, #72]	; (8016684 <LoRaMacInitialization+0x378>)
 801663c:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8016640:	781b      	ldrb	r3, [r3, #0]
 8016642:	f107 0250 	add.w	r2, r7, #80	; 0x50
 8016646:	4611      	mov	r1, r2
 8016648:	4618      	mov	r0, r3
 801664a:	f003 fab8 	bl	8019bbe <RegionGetPhyParam>
 801664e:	4603      	mov	r3, r0
 8016650:	64fb      	str	r3, [r7, #76]	; 0x4c
    MacCtx.NvmCtx->MacParamsDefaults.AntennaGain = phyParam.fValue;
 8016652:	4b0c      	ldr	r3, [pc, #48]	; (8016684 <LoRaMacInitialization+0x378>)
 8016654:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8016658:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 801665a:	641a      	str	r2, [r3, #64]	; 0x40

    getPhy.Attribute = PHY_DEF_ADR_ACK_LIMIT;
 801665c:	230b      	movs	r3, #11
 801665e:	f887 3050 	strb.w	r3, [r7, #80]	; 0x50
    phyParam = RegionGetPhyParam( MacCtx.NvmCtx->Region, &getPhy );
 8016662:	4b08      	ldr	r3, [pc, #32]	; (8016684 <LoRaMacInitialization+0x378>)
 8016664:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8016668:	781b      	ldrb	r3, [r3, #0]
 801666a:	f107 0250 	add.w	r2, r7, #80	; 0x50
 801666e:	4611      	mov	r1, r2
 8016670:	4618      	mov	r0, r3
 8016672:	f003 faa4 	bl	8019bbe <RegionGetPhyParam>
 8016676:	4603      	mov	r3, r0
 8016678:	e008      	b.n	801668c <LoRaMacInitialization+0x380>
 801667a:	bf00      	nop
 801667c:	08016219 	.word	0x08016219
 8016680:	2000106c 	.word	0x2000106c
 8016684:	20000be0 	.word	0x20000be0
 8016688:	01000300 	.word	0x01000300
 801668c:	64fb      	str	r3, [r7, #76]	; 0x4c
    MacCtx.AdrAckLimit = phyParam.Value;
 801668e:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8016690:	b29a      	uxth	r2, r3
 8016692:	4bae      	ldr	r3, [pc, #696]	; (801694c <LoRaMacInitialization+0x640>)
 8016694:	f8a3 23f4 	strh.w	r2, [r3, #1012]	; 0x3f4

    getPhy.Attribute = PHY_DEF_ADR_ACK_DELAY;
 8016698:	230c      	movs	r3, #12
 801669a:	f887 3050 	strb.w	r3, [r7, #80]	; 0x50
    phyParam = RegionGetPhyParam( MacCtx.NvmCtx->Region, &getPhy );
 801669e:	4bab      	ldr	r3, [pc, #684]	; (801694c <LoRaMacInitialization+0x640>)
 80166a0:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 80166a4:	781b      	ldrb	r3, [r3, #0]
 80166a6:	f107 0250 	add.w	r2, r7, #80	; 0x50
 80166aa:	4611      	mov	r1, r2
 80166ac:	4618      	mov	r0, r3
 80166ae:	f003 fa86 	bl	8019bbe <RegionGetPhyParam>
 80166b2:	4603      	mov	r3, r0
 80166b4:	64fb      	str	r3, [r7, #76]	; 0x4c
    MacCtx.AdrAckDelay = phyParam.Value;
 80166b6:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 80166b8:	b29a      	uxth	r2, r3
 80166ba:	4ba4      	ldr	r3, [pc, #656]	; (801694c <LoRaMacInitialization+0x640>)
 80166bc:	f8a3 23f6 	strh.w	r2, [r3, #1014]	; 0x3f6

    // Init parameters which are not set in function ResetMacParameters
    MacCtx.NvmCtx->MacParamsDefaults.ChannelsNbTrans = 1;
 80166c0:	4ba2      	ldr	r3, [pc, #648]	; (801694c <LoRaMacInitialization+0x640>)
 80166c2:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 80166c6:	2201      	movs	r2, #1
 80166c8:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
    MacCtx.NvmCtx->MacParamsDefaults.SystemMaxRxError = 10;
 80166cc:	4b9f      	ldr	r3, [pc, #636]	; (801694c <LoRaMacInitialization+0x640>)
 80166ce:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 80166d2:	220a      	movs	r2, #10
 80166d4:	609a      	str	r2, [r3, #8]
    MacCtx.NvmCtx->MacParamsDefaults.MinRxSymbols = 6;
 80166d6:	4b9d      	ldr	r3, [pc, #628]	; (801694c <LoRaMacInitialization+0x640>)
 80166d8:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 80166dc:	2206      	movs	r2, #6
 80166de:	731a      	strb	r2, [r3, #12]

    MacCtx.NvmCtx->MacParams.SystemMaxRxError = MacCtx.NvmCtx->MacParamsDefaults.SystemMaxRxError;
 80166e0:	4b9a      	ldr	r3, [pc, #616]	; (801694c <LoRaMacInitialization+0x640>)
 80166e2:	f8d3 2484 	ldr.w	r2, [r3, #1156]	; 0x484
 80166e6:	4b99      	ldr	r3, [pc, #612]	; (801694c <LoRaMacInitialization+0x640>)
 80166e8:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 80166ec:	6892      	ldr	r2, [r2, #8]
 80166ee:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
    MacCtx.NvmCtx->MacParams.MinRxSymbols = MacCtx.NvmCtx->MacParamsDefaults.MinRxSymbols;
 80166f2:	4b96      	ldr	r3, [pc, #600]	; (801694c <LoRaMacInitialization+0x640>)
 80166f4:	f8d3 2484 	ldr.w	r2, [r3, #1156]	; 0x484
 80166f8:	4b94      	ldr	r3, [pc, #592]	; (801694c <LoRaMacInitialization+0x640>)
 80166fa:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 80166fe:	7b12      	ldrb	r2, [r2, #12]
 8016700:	f883 208c 	strb.w	r2, [r3, #140]	; 0x8c
    MacCtx.NvmCtx->MacParams.MaxRxWindow = MacCtx.NvmCtx->MacParamsDefaults.MaxRxWindow;
 8016704:	4b91      	ldr	r3, [pc, #580]	; (801694c <LoRaMacInitialization+0x640>)
 8016706:	f8d3 2484 	ldr.w	r2, [r3, #1156]	; 0x484
 801670a:	4b90      	ldr	r3, [pc, #576]	; (801694c <LoRaMacInitialization+0x640>)
 801670c:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8016710:	6912      	ldr	r2, [r2, #16]
 8016712:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
    MacCtx.NvmCtx->MacParams.ReceiveDelay1 = MacCtx.NvmCtx->MacParamsDefaults.ReceiveDelay1;
 8016716:	4b8d      	ldr	r3, [pc, #564]	; (801694c <LoRaMacInitialization+0x640>)
 8016718:	f8d3 2484 	ldr.w	r2, [r3, #1156]	; 0x484
 801671c:	4b8b      	ldr	r3, [pc, #556]	; (801694c <LoRaMacInitialization+0x640>)
 801671e:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8016722:	6952      	ldr	r2, [r2, #20]
 8016724:	f8c3 2094 	str.w	r2, [r3, #148]	; 0x94
    MacCtx.NvmCtx->MacParams.ReceiveDelay2 = MacCtx.NvmCtx->MacParamsDefaults.ReceiveDelay2;
 8016728:	4b88      	ldr	r3, [pc, #544]	; (801694c <LoRaMacInitialization+0x640>)
 801672a:	f8d3 2484 	ldr.w	r2, [r3, #1156]	; 0x484
 801672e:	4b87      	ldr	r3, [pc, #540]	; (801694c <LoRaMacInitialization+0x640>)
 8016730:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8016734:	6992      	ldr	r2, [r2, #24]
 8016736:	f8c3 2098 	str.w	r2, [r3, #152]	; 0x98
    MacCtx.NvmCtx->MacParams.JoinAcceptDelay1 = MacCtx.NvmCtx->MacParamsDefaults.JoinAcceptDelay1;
 801673a:	4b84      	ldr	r3, [pc, #528]	; (801694c <LoRaMacInitialization+0x640>)
 801673c:	f8d3 2484 	ldr.w	r2, [r3, #1156]	; 0x484
 8016740:	4b82      	ldr	r3, [pc, #520]	; (801694c <LoRaMacInitialization+0x640>)
 8016742:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8016746:	69d2      	ldr	r2, [r2, #28]
 8016748:	f8c3 209c 	str.w	r2, [r3, #156]	; 0x9c
    MacCtx.NvmCtx->MacParams.JoinAcceptDelay2 = MacCtx.NvmCtx->MacParamsDefaults.JoinAcceptDelay2;
 801674c:	4b7f      	ldr	r3, [pc, #508]	; (801694c <LoRaMacInitialization+0x640>)
 801674e:	f8d3 2484 	ldr.w	r2, [r3, #1156]	; 0x484
 8016752:	4b7e      	ldr	r3, [pc, #504]	; (801694c <LoRaMacInitialization+0x640>)
 8016754:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8016758:	6a12      	ldr	r2, [r2, #32]
 801675a:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
    MacCtx.NvmCtx->MacParams.ChannelsNbTrans = MacCtx.NvmCtx->MacParamsDefaults.ChannelsNbTrans;
 801675e:	4b7b      	ldr	r3, [pc, #492]	; (801694c <LoRaMacInitialization+0x640>)
 8016760:	f8d3 2484 	ldr.w	r2, [r3, #1156]	; 0x484
 8016764:	4b79      	ldr	r3, [pc, #484]	; (801694c <LoRaMacInitialization+0x640>)
 8016766:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 801676a:	f892 2024 	ldrb.w	r2, [r2, #36]	; 0x24
 801676e:	f883 20a4 	strb.w	r2, [r3, #164]	; 0xa4

    InitDefaultsParams_t params;
    params.Type = INIT_TYPE_DEFAULTS;
 8016772:	2300      	movs	r3, #0
 8016774:	f887 3020 	strb.w	r3, [r7, #32]
    params.NvmCtx = NULL;
 8016778:	2300      	movs	r3, #0
 801677a:	61fb      	str	r3, [r7, #28]
    RegionInitDefaults( MacCtx.NvmCtx->Region, &params );
 801677c:	4b73      	ldr	r3, [pc, #460]	; (801694c <LoRaMacInitialization+0x640>)
 801677e:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8016782:	781b      	ldrb	r3, [r3, #0]
 8016784:	f107 021c 	add.w	r2, r7, #28
 8016788:	4611      	mov	r1, r2
 801678a:	4618      	mov	r0, r3
 801678c:	f003 fa50 	bl	8019c30 <RegionInitDefaults>

    ResetMacParameters( );
 8016790:	f7fe ff3c 	bl	801560c <ResetMacParameters>

    MacCtx.NvmCtx->PublicNetwork = true;
 8016794:	4b6d      	ldr	r3, [pc, #436]	; (801694c <LoRaMacInitialization+0x640>)
 8016796:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 801679a:	2201      	movs	r2, #1
 801679c:	f883 207d 	strb.w	r2, [r3, #125]	; 0x7d

    MacCtx.MacPrimitives = primitives;
 80167a0:	4a6a      	ldr	r2, [pc, #424]	; (801694c <LoRaMacInitialization+0x640>)
 80167a2:	697b      	ldr	r3, [r7, #20]
 80167a4:	f8c2 3344 	str.w	r3, [r2, #836]	; 0x344
    MacCtx.MacCallbacks = callbacks;
 80167a8:	4a68      	ldr	r2, [pc, #416]	; (801694c <LoRaMacInitialization+0x640>)
 80167aa:	693b      	ldr	r3, [r7, #16]
 80167ac:	f8c2 3348 	str.w	r3, [r2, #840]	; 0x348
    MacCtx.MacFlags.Value = 0;
 80167b0:	4b66      	ldr	r3, [pc, #408]	; (801694c <LoRaMacInitialization+0x640>)
 80167b2:	2200      	movs	r2, #0
 80167b4:	f883 2481 	strb.w	r2, [r3, #1153]	; 0x481
    MacCtx.MacState = LORAMAC_STOPPED;
 80167b8:	4b64      	ldr	r3, [pc, #400]	; (801694c <LoRaMacInitialization+0x640>)
 80167ba:	2201      	movs	r2, #1
 80167bc:	f8c3 2340 	str.w	r2, [r3, #832]	; 0x340

    // Reset duty cycle times
    MacCtx.NvmCtx->LastTxDoneTime = 0;
 80167c0:	4b62      	ldr	r3, [pc, #392]	; (801694c <LoRaMacInitialization+0x640>)
 80167c2:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 80167c6:	2200      	movs	r2, #0
 80167c8:	f8c3 2150 	str.w	r2, [r3, #336]	; 0x150
    MacCtx.NvmCtx->AggregatedTimeOff = 0;
 80167cc:	4b5f      	ldr	r3, [pc, #380]	; (801694c <LoRaMacInitialization+0x640>)
 80167ce:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 80167d2:	2200      	movs	r2, #0
 80167d4:	f8c3 2154 	str.w	r2, [r3, #340]	; 0x154

    // Initialize timers
    TimerInit( &MacCtx.TxDelayedTimer, OnTxDelayedTimerEvent );
 80167d8:	2300      	movs	r3, #0
 80167da:	9300      	str	r3, [sp, #0]
 80167dc:	4b5c      	ldr	r3, [pc, #368]	; (8016950 <LoRaMacInitialization+0x644>)
 80167de:	2200      	movs	r2, #0
 80167e0:	f04f 31ff 	mov.w	r1, #4294967295
 80167e4:	485b      	ldr	r0, [pc, #364]	; (8016954 <LoRaMacInitialization+0x648>)
 80167e6:	f00a fbd5 	bl	8020f94 <UTIL_TIMER_Create>
    TimerInit( &MacCtx.RxWindowTimer1, OnRxWindow1TimerEvent );
 80167ea:	2300      	movs	r3, #0
 80167ec:	9300      	str	r3, [sp, #0]
 80167ee:	4b5a      	ldr	r3, [pc, #360]	; (8016958 <LoRaMacInitialization+0x64c>)
 80167f0:	2200      	movs	r2, #0
 80167f2:	f04f 31ff 	mov.w	r1, #4294967295
 80167f6:	4859      	ldr	r0, [pc, #356]	; (801695c <LoRaMacInitialization+0x650>)
 80167f8:	f00a fbcc 	bl	8020f94 <UTIL_TIMER_Create>
    TimerInit( &MacCtx.RxWindowTimer2, OnRxWindow2TimerEvent );
 80167fc:	2300      	movs	r3, #0
 80167fe:	9300      	str	r3, [sp, #0]
 8016800:	4b57      	ldr	r3, [pc, #348]	; (8016960 <LoRaMacInitialization+0x654>)
 8016802:	2200      	movs	r2, #0
 8016804:	f04f 31ff 	mov.w	r1, #4294967295
 8016808:	4856      	ldr	r0, [pc, #344]	; (8016964 <LoRaMacInitialization+0x658>)
 801680a:	f00a fbc3 	bl	8020f94 <UTIL_TIMER_Create>
    TimerInit( &MacCtx.AckTimeoutTimer, OnAckTimeoutTimerEvent );
 801680e:	2300      	movs	r3, #0
 8016810:	9300      	str	r3, [sp, #0]
 8016812:	4b55      	ldr	r3, [pc, #340]	; (8016968 <LoRaMacInitialization+0x65c>)
 8016814:	2200      	movs	r2, #0
 8016816:	f04f 31ff 	mov.w	r1, #4294967295
 801681a:	4854      	ldr	r0, [pc, #336]	; (801696c <LoRaMacInitialization+0x660>)
 801681c:	f00a fbba 	bl	8020f94 <UTIL_TIMER_Create>

    // Store the current initialization time
    MacCtx.NvmCtx->InitializationTime = SysTimeGetMcuTime( );
 8016820:	4b4a      	ldr	r3, [pc, #296]	; (801694c <LoRaMacInitialization+0x640>)
 8016822:	f8d3 4484 	ldr.w	r4, [r3, #1156]	; 0x484
 8016826:	463b      	mov	r3, r7
 8016828:	4618      	mov	r0, r3
 801682a:	f009 ffa1 	bl	8020770 <SysTimeGetMcuTime>
 801682e:	f504 73ac 	add.w	r3, r4, #344	; 0x158
 8016832:	463a      	mov	r2, r7
 8016834:	e892 0003 	ldmia.w	r2, {r0, r1}
 8016838:	e883 0003 	stmia.w	r3, {r0, r1}

    // Initialize Radio driver
    MacCtx.RadioEvents.TxDone = OnRadioTxDone;
 801683c:	4b43      	ldr	r3, [pc, #268]	; (801694c <LoRaMacInitialization+0x640>)
 801683e:	4a4c      	ldr	r2, [pc, #304]	; (8016970 <LoRaMacInitialization+0x664>)
 8016840:	f8c3 234c 	str.w	r2, [r3, #844]	; 0x34c
    MacCtx.RadioEvents.RxDone = OnRadioRxDone;
 8016844:	4b41      	ldr	r3, [pc, #260]	; (801694c <LoRaMacInitialization+0x640>)
 8016846:	4a4b      	ldr	r2, [pc, #300]	; (8016974 <LoRaMacInitialization+0x668>)
 8016848:	f8c3 2354 	str.w	r2, [r3, #852]	; 0x354
    MacCtx.RadioEvents.RxError = OnRadioRxError;
 801684c:	4b3f      	ldr	r3, [pc, #252]	; (801694c <LoRaMacInitialization+0x640>)
 801684e:	4a4a      	ldr	r2, [pc, #296]	; (8016978 <LoRaMacInitialization+0x66c>)
 8016850:	f8c3 235c 	str.w	r2, [r3, #860]	; 0x35c
    MacCtx.RadioEvents.TxTimeout = OnRadioTxTimeout;
 8016854:	4b3d      	ldr	r3, [pc, #244]	; (801694c <LoRaMacInitialization+0x640>)
 8016856:	4a49      	ldr	r2, [pc, #292]	; (801697c <LoRaMacInitialization+0x670>)
 8016858:	f8c3 2350 	str.w	r2, [r3, #848]	; 0x350
    MacCtx.RadioEvents.RxTimeout = OnRadioRxTimeout;
 801685c:	4b3b      	ldr	r3, [pc, #236]	; (801694c <LoRaMacInitialization+0x640>)
 801685e:	4a48      	ldr	r2, [pc, #288]	; (8016980 <LoRaMacInitialization+0x674>)
 8016860:	f8c3 2358 	str.w	r2, [r3, #856]	; 0x358
    Radio.Init( &MacCtx.RadioEvents );
 8016864:	4b47      	ldr	r3, [pc, #284]	; (8016984 <LoRaMacInitialization+0x678>)
 8016866:	681b      	ldr	r3, [r3, #0]
 8016868:	4847      	ldr	r0, [pc, #284]	; (8016988 <LoRaMacInitialization+0x67c>)
 801686a:	4798      	blx	r3

    // Initialize the Secure Element driver
    if( SecureElementInit( EventSecureElementNvmCtxChanged ) != SECURE_ELEMENT_SUCCESS )
 801686c:	4847      	ldr	r0, [pc, #284]	; (801698c <LoRaMacInitialization+0x680>)
 801686e:	f7fa fdb5 	bl	80113dc <SecureElementInit>
 8016872:	4603      	mov	r3, r0
 8016874:	2b00      	cmp	r3, #0
 8016876:	d001      	beq.n	801687c <LoRaMacInitialization+0x570>
    {
        return LORAMAC_STATUS_CRYPTO_ERROR;
 8016878:	2311      	movs	r3, #17
 801687a:	e062      	b.n	8016942 <LoRaMacInitialization+0x636>
    }

    // Initialize Crypto module
    if( LoRaMacCryptoInit( EventCryptoNvmCtxChanged ) != LORAMAC_CRYPTO_SUCCESS )
 801687c:	4844      	ldr	r0, [pc, #272]	; (8016990 <LoRaMacInitialization+0x684>)
 801687e:	f002 fabd 	bl	8018dfc <LoRaMacCryptoInit>
 8016882:	4603      	mov	r3, r0
 8016884:	2b00      	cmp	r3, #0
 8016886:	d001      	beq.n	801688c <LoRaMacInitialization+0x580>
    {
        return LORAMAC_STATUS_CRYPTO_ERROR;
 8016888:	2311      	movs	r3, #17
 801688a:	e05a      	b.n	8016942 <LoRaMacInitialization+0x636>
    }

    // Initialize MAC commands module
    if( LoRaMacCommandsInit( EventCommandsNvmCtxChanged ) != LORAMAC_COMMANDS_SUCCESS )
 801688c:	4841      	ldr	r0, [pc, #260]	; (8016994 <LoRaMacInitialization+0x688>)
 801688e:	f001 fb99 	bl	8017fc4 <LoRaMacCommandsInit>
 8016892:	4603      	mov	r3, r0
 8016894:	2b00      	cmp	r3, #0
 8016896:	d001      	beq.n	801689c <LoRaMacInitialization+0x590>
    {
        return LORAMAC_STATUS_MAC_COMMAD_ERROR;
 8016898:	2313      	movs	r3, #19
 801689a:	e052      	b.n	8016942 <LoRaMacInitialization+0x636>
    }

    // Set multicast downlink counter reference
    if( LoRaMacCryptoSetMulticastReference( MacCtx.NvmCtx->MulticastChannelList ) != LORAMAC_CRYPTO_SUCCESS )
 801689c:	4b2b      	ldr	r3, [pc, #172]	; (801694c <LoRaMacInitialization+0x640>)
 801689e:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 80168a2:	3350      	adds	r3, #80	; 0x50
 80168a4:	4618      	mov	r0, r3
 80168a6:	f002 fb97 	bl	8018fd8 <LoRaMacCryptoSetMulticastReference>
 80168aa:	4603      	mov	r3, r0
 80168ac:	2b00      	cmp	r3, #0
 80168ae:	d001      	beq.n	80168b4 <LoRaMacInitialization+0x5a8>
    {
        return LORAMAC_STATUS_CRYPTO_ERROR;
 80168b0:	2311      	movs	r3, #17
 80168b2:	e046      	b.n	8016942 <LoRaMacInitialization+0x636>
    }

    // Random seed initialization
    srand1( Radio.Random( ) );
 80168b4:	4b33      	ldr	r3, [pc, #204]	; (8016984 <LoRaMacInitialization+0x678>)
 80168b6:	695b      	ldr	r3, [r3, #20]
 80168b8:	4798      	blx	r3
 80168ba:	4603      	mov	r3, r0
 80168bc:	4618      	mov	r0, r3
 80168be:	f006 fe8f 	bl	801d5e0 <srand1>

    Radio.SetPublicNetwork( MacCtx.NvmCtx->PublicNetwork );
 80168c2:	4b30      	ldr	r3, [pc, #192]	; (8016984 <LoRaMacInitialization+0x678>)
 80168c4:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80168c6:	4a21      	ldr	r2, [pc, #132]	; (801694c <LoRaMacInitialization+0x640>)
 80168c8:	f8d2 2484 	ldr.w	r2, [r2, #1156]	; 0x484
 80168cc:	f892 207d 	ldrb.w	r2, [r2, #125]	; 0x7d
 80168d0:	4610      	mov	r0, r2
 80168d2:	4798      	blx	r3
    Radio.Sleep( );
 80168d4:	4b2b      	ldr	r3, [pc, #172]	; (8016984 <LoRaMacInitialization+0x678>)
 80168d6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80168d8:	4798      	blx	r3

    // Initialize class b
    // Apply callback
    classBCallbacks.GetTemperatureLevel = NULL;
 80168da:	2300      	movs	r3, #0
 80168dc:	647b      	str	r3, [r7, #68]	; 0x44
    classBCallbacks.MacProcessNotify = NULL;
 80168de:	2300      	movs	r3, #0
 80168e0:	64bb      	str	r3, [r7, #72]	; 0x48
    if( callbacks != NULL )
 80168e2:	693b      	ldr	r3, [r7, #16]
 80168e4:	2b00      	cmp	r3, #0
 80168e6:	d005      	beq.n	80168f4 <LoRaMacInitialization+0x5e8>
    {
        classBCallbacks.GetTemperatureLevel = callbacks->GetTemperatureLevel;
 80168e8:	693b      	ldr	r3, [r7, #16]
 80168ea:	685b      	ldr	r3, [r3, #4]
 80168ec:	647b      	str	r3, [r7, #68]	; 0x44
        classBCallbacks.MacProcessNotify = callbacks->MacProcessNotify;
 80168ee:	693b      	ldr	r3, [r7, #16]
 80168f0:	68db      	ldr	r3, [r3, #12]
 80168f2:	64bb      	str	r3, [r7, #72]	; 0x48
    }

    // Must all be static. Don't use local references.
    classBParams.MlmeIndication = &MacCtx.MlmeIndication;
 80168f4:	4b28      	ldr	r3, [pc, #160]	; (8016998 <LoRaMacInitialization+0x68c>)
 80168f6:	627b      	str	r3, [r7, #36]	; 0x24
    classBParams.McpsIndication = &MacCtx.McpsIndication;
 80168f8:	4b28      	ldr	r3, [pc, #160]	; (801699c <LoRaMacInitialization+0x690>)
 80168fa:	62bb      	str	r3, [r7, #40]	; 0x28
    classBParams.MlmeConfirm = &MacCtx.MlmeConfirm;
 80168fc:	4b28      	ldr	r3, [pc, #160]	; (80169a0 <LoRaMacInitialization+0x694>)
 80168fe:	62fb      	str	r3, [r7, #44]	; 0x2c
    classBParams.LoRaMacFlags = &MacCtx.MacFlags;
 8016900:	4b28      	ldr	r3, [pc, #160]	; (80169a4 <LoRaMacInitialization+0x698>)
 8016902:	633b      	str	r3, [r7, #48]	; 0x30
    classBParams.LoRaMacDevAddr = &MacCtx.NvmCtx->DevAddr;
 8016904:	4b11      	ldr	r3, [pc, #68]	; (801694c <LoRaMacInitialization+0x640>)
 8016906:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 801690a:	334c      	adds	r3, #76	; 0x4c
 801690c:	637b      	str	r3, [r7, #52]	; 0x34
    classBParams.LoRaMacRegion = &MacCtx.NvmCtx->Region;
 801690e:	4b0f      	ldr	r3, [pc, #60]	; (801694c <LoRaMacInitialization+0x640>)
 8016910:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8016914:	63bb      	str	r3, [r7, #56]	; 0x38
    classBParams.LoRaMacParams = &MacCtx.NvmCtx->MacParams;
 8016916:	4b0d      	ldr	r3, [pc, #52]	; (801694c <LoRaMacInitialization+0x640>)
 8016918:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 801691c:	3384      	adds	r3, #132	; 0x84
 801691e:	63fb      	str	r3, [r7, #60]	; 0x3c
    classBParams.MulticastChannels = &MacCtx.NvmCtx->MulticastChannelList[0];
 8016920:	4b0a      	ldr	r3, [pc, #40]	; (801694c <LoRaMacInitialization+0x640>)
 8016922:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8016926:	3350      	adds	r3, #80	; 0x50
 8016928:	643b      	str	r3, [r7, #64]	; 0x40

    LoRaMacClassBInit( &classBParams, &classBCallbacks, &EventClassBNvmCtxChanged );
 801692a:	f107 0144 	add.w	r1, r7, #68	; 0x44
 801692e:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8016932:	4a1d      	ldr	r2, [pc, #116]	; (80169a8 <LoRaMacInitialization+0x69c>)
 8016934:	4618      	mov	r0, r3
 8016936:	f001 f92d 	bl	8017b94 <LoRaMacClassBInit>

    LoRaMacEnableRequests( LORAMAC_REQUEST_HANDLING_ON );
 801693a:	2001      	movs	r0, #1
 801693c:	f7fd f97c 	bl	8013c38 <LoRaMacEnableRequests>

    return LORAMAC_STATUS_OK;
 8016940:	2300      	movs	r3, #0
}
 8016942:	4618      	mov	r0, r3
 8016944:	375c      	adds	r7, #92	; 0x5c
 8016946:	46bd      	mov	sp, r7
 8016948:	bd90      	pop	{r4, r7, pc}
 801694a:	bf00      	nop
 801694c:	20000be0 	.word	0x20000be0
 8016950:	08013fd9 	.word	0x08013fd9
 8016954:	20000f48 	.word	0x20000f48
 8016958:	0801404d 	.word	0x0801404d
 801695c:	20000f60 	.word	0x20000f60
 8016960:	080140c1 	.word	0x080140c1
 8016964:	20000f78 	.word	0x20000f78
 8016968:	0801413d 	.word	0x0801413d
 801696c:	20000fd8 	.word	0x20000fd8
 8016970:	08012d31 	.word	0x08012d31
 8016974:	08012da9 	.word	0x08012da9
 8016978:	08012e89 	.word	0x08012e89
 801697c:	08012e3d 	.word	0x08012e3d
 8016980:	08012ec5 	.word	0x08012ec5
 8016984:	0802683c 	.word	0x0802683c
 8016988:	20000f2c 	.word	0x20000f2c
 801698c:	080161ef 	.word	0x080161ef
 8016990:	080161e1 	.word	0x080161e1
 8016994:	080161fd 	.word	0x080161fd
 8016998:	20001044 	.word	0x20001044
 801699c:	20000ffc 	.word	0x20000ffc
 80169a0:	20001030 	.word	0x20001030
 80169a4:	20001061 	.word	0x20001061
 80169a8:	0801620b 	.word	0x0801620b

080169ac <LoRaMacStart>:

LoRaMacStatus_t LoRaMacStart( void )
{
 80169ac:	b480      	push	{r7}
 80169ae:	af00      	add	r7, sp, #0
    MacCtx.MacState = LORAMAC_IDLE;
 80169b0:	4b04      	ldr	r3, [pc, #16]	; (80169c4 <LoRaMacStart+0x18>)
 80169b2:	2200      	movs	r2, #0
 80169b4:	f8c3 2340 	str.w	r2, [r3, #832]	; 0x340
    return LORAMAC_STATUS_OK;
 80169b8:	2300      	movs	r3, #0
}
 80169ba:	4618      	mov	r0, r3
 80169bc:	46bd      	mov	sp, r7
 80169be:	bc80      	pop	{r7}
 80169c0:	4770      	bx	lr
 80169c2:	bf00      	nop
 80169c4:	20000be0 	.word	0x20000be0

080169c8 <LoRaMacQueryTxPossible>:
    }
    return LORAMAC_STATUS_BUSY;
}

LoRaMacStatus_t LoRaMacQueryTxPossible( uint8_t size, LoRaMacTxInfo_t* txInfo )
{
 80169c8:	b580      	push	{r7, lr}
 80169ca:	b08a      	sub	sp, #40	; 0x28
 80169cc:	af00      	add	r7, sp, #0
 80169ce:	4603      	mov	r3, r0
 80169d0:	6039      	str	r1, [r7, #0]
 80169d2:	71fb      	strb	r3, [r7, #7]
    CalcNextAdrParams_t adrNext;
    uint32_t adrAckCounter = MacCtx.NvmCtx->AdrAckCounter;
 80169d4:	4b48      	ldr	r3, [pc, #288]	; (8016af8 <LoRaMacQueryTxPossible+0x130>)
 80169d6:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 80169da:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 80169de:	613b      	str	r3, [r7, #16]
    int8_t datarate = MacCtx.NvmCtx->MacParamsDefaults.ChannelsDatarate;
 80169e0:	4b45      	ldr	r3, [pc, #276]	; (8016af8 <LoRaMacQueryTxPossible+0x130>)
 80169e2:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 80169e6:	f993 3005 	ldrsb.w	r3, [r3, #5]
 80169ea:	73fb      	strb	r3, [r7, #15]
    int8_t txPower = MacCtx.NvmCtx->MacParamsDefaults.ChannelsTxPower;
 80169ec:	4b42      	ldr	r3, [pc, #264]	; (8016af8 <LoRaMacQueryTxPossible+0x130>)
 80169ee:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 80169f2:	f993 3004 	ldrsb.w	r3, [r3, #4]
 80169f6:	73bb      	strb	r3, [r7, #14]
    size_t macCmdsSize = 0;
 80169f8:	2300      	movs	r3, #0
 80169fa:	60bb      	str	r3, [r7, #8]

    if( txInfo == NULL )
 80169fc:	683b      	ldr	r3, [r7, #0]
 80169fe:	2b00      	cmp	r3, #0
 8016a00:	d101      	bne.n	8016a06 <LoRaMacQueryTxPossible+0x3e>
    {
        return LORAMAC_STATUS_PARAMETER_INVALID;
 8016a02:	2303      	movs	r3, #3
 8016a04:	e074      	b.n	8016af0 <LoRaMacQueryTxPossible+0x128>
    }

    // Setup ADR request
    adrNext.Version = MacCtx.NvmCtx->Version;
 8016a06:	4b3c      	ldr	r3, [pc, #240]	; (8016af8 <LoRaMacQueryTxPossible+0x130>)
 8016a08:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8016a0c:	f8d3 3160 	ldr.w	r3, [r3, #352]	; 0x160
 8016a10:	617b      	str	r3, [r7, #20]
    adrNext.UpdateChanMask = false;
 8016a12:	2300      	movs	r3, #0
 8016a14:	763b      	strb	r3, [r7, #24]
    adrNext.AdrEnabled = MacCtx.NvmCtx->AdrCtrlOn;
 8016a16:	4b38      	ldr	r3, [pc, #224]	; (8016af8 <LoRaMacQueryTxPossible+0x130>)
 8016a18:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8016a1c:	f893 307e 	ldrb.w	r3, [r3, #126]	; 0x7e
 8016a20:	767b      	strb	r3, [r7, #25]
    adrNext.AdrAckCounter = MacCtx.NvmCtx->AdrAckCounter;
 8016a22:	4b35      	ldr	r3, [pc, #212]	; (8016af8 <LoRaMacQueryTxPossible+0x130>)
 8016a24:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8016a28:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8016a2c:	61fb      	str	r3, [r7, #28]
    adrNext.AdrAckLimit = MacCtx.AdrAckLimit;
 8016a2e:	4b32      	ldr	r3, [pc, #200]	; (8016af8 <LoRaMacQueryTxPossible+0x130>)
 8016a30:	f8b3 33f4 	ldrh.w	r3, [r3, #1012]	; 0x3f4
 8016a34:	843b      	strh	r3, [r7, #32]
    adrNext.AdrAckDelay = MacCtx.AdrAckDelay;
 8016a36:	4b30      	ldr	r3, [pc, #192]	; (8016af8 <LoRaMacQueryTxPossible+0x130>)
 8016a38:	f8b3 33f6 	ldrh.w	r3, [r3, #1014]	; 0x3f6
 8016a3c:	847b      	strh	r3, [r7, #34]	; 0x22
    adrNext.Datarate = MacCtx.NvmCtx->MacParams.ChannelsDatarate;
 8016a3e:	4b2e      	ldr	r3, [pc, #184]	; (8016af8 <LoRaMacQueryTxPossible+0x130>)
 8016a40:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8016a44:	f993 3085 	ldrsb.w	r3, [r3, #133]	; 0x85
 8016a48:	f887 3024 	strb.w	r3, [r7, #36]	; 0x24
    adrNext.TxPower = MacCtx.NvmCtx->MacParams.ChannelsTxPower;
 8016a4c:	4b2a      	ldr	r3, [pc, #168]	; (8016af8 <LoRaMacQueryTxPossible+0x130>)
 8016a4e:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8016a52:	f993 3084 	ldrsb.w	r3, [r3, #132]	; 0x84
 8016a56:	f887 3025 	strb.w	r3, [r7, #37]	; 0x25
    adrNext.UplinkDwellTime = MacCtx.NvmCtx->MacParams.UplinkDwellTime;
 8016a5a:	4b27      	ldr	r3, [pc, #156]	; (8016af8 <LoRaMacQueryTxPossible+0x130>)
 8016a5c:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8016a60:	f893 30b8 	ldrb.w	r3, [r3, #184]	; 0xb8
 8016a64:	f887 3026 	strb.w	r3, [r7, #38]	; 0x26
    adrNext.Region = MacCtx.NvmCtx->Region;
 8016a68:	4b23      	ldr	r3, [pc, #140]	; (8016af8 <LoRaMacQueryTxPossible+0x130>)
 8016a6a:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8016a6e:	781b      	ldrb	r3, [r3, #0]
 8016a70:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27

    // We call the function for information purposes only. We don't want to
    // apply the datarate, the tx power and the ADR ack counter.
    LoRaMacAdrCalcNext( &adrNext, &datarate, &txPower, &adrAckCounter );
 8016a74:	f107 0310 	add.w	r3, r7, #16
 8016a78:	f107 020e 	add.w	r2, r7, #14
 8016a7c:	f107 010f 	add.w	r1, r7, #15
 8016a80:	f107 0014 	add.w	r0, r7, #20
 8016a84:	f001 f86e 	bl	8017b64 <LoRaMacAdrCalcNext>

    txInfo->CurrentPossiblePayloadSize = GetMaxAppPayloadWithoutFOptsLength( datarate );
 8016a88:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8016a8c:	4618      	mov	r0, r3
 8016a8e:	f7fd fcbb 	bl	8014408 <GetMaxAppPayloadWithoutFOptsLength>
 8016a92:	4603      	mov	r3, r0
 8016a94:	461a      	mov	r2, r3
 8016a96:	683b      	ldr	r3, [r7, #0]
 8016a98:	705a      	strb	r2, [r3, #1]

    if( LoRaMacCommandsGetSizeSerializedCmds( &macCmdsSize ) != LORAMAC_COMMANDS_SUCCESS )
 8016a9a:	f107 0308 	add.w	r3, r7, #8
 8016a9e:	4618      	mov	r0, r3
 8016aa0:	f001 fb94 	bl	80181cc <LoRaMacCommandsGetSizeSerializedCmds>
 8016aa4:	4603      	mov	r3, r0
 8016aa6:	2b00      	cmp	r3, #0
 8016aa8:	d001      	beq.n	8016aae <LoRaMacQueryTxPossible+0xe6>
    {
        return LORAMAC_STATUS_MAC_COMMAD_ERROR;
 8016aaa:	2313      	movs	r3, #19
 8016aac:	e020      	b.n	8016af0 <LoRaMacQueryTxPossible+0x128>
    }

    // Verify if the MAC commands fit into the FOpts and into the maximum payload.
    if( ( LORA_MAC_COMMAND_MAX_FOPTS_LENGTH >= macCmdsSize ) && ( txInfo->CurrentPossiblePayloadSize >= macCmdsSize ) )
 8016aae:	68bb      	ldr	r3, [r7, #8]
 8016ab0:	2b0f      	cmp	r3, #15
 8016ab2:	d819      	bhi.n	8016ae8 <LoRaMacQueryTxPossible+0x120>
 8016ab4:	683b      	ldr	r3, [r7, #0]
 8016ab6:	785b      	ldrb	r3, [r3, #1]
 8016ab8:	461a      	mov	r2, r3
 8016aba:	68bb      	ldr	r3, [r7, #8]
 8016abc:	429a      	cmp	r2, r3
 8016abe:	d313      	bcc.n	8016ae8 <LoRaMacQueryTxPossible+0x120>
    {
        txInfo->MaxPossibleApplicationDataSize = txInfo->CurrentPossiblePayloadSize - macCmdsSize;
 8016ac0:	683b      	ldr	r3, [r7, #0]
 8016ac2:	785a      	ldrb	r2, [r3, #1]
 8016ac4:	68bb      	ldr	r3, [r7, #8]
 8016ac6:	b2db      	uxtb	r3, r3
 8016ac8:	1ad3      	subs	r3, r2, r3
 8016aca:	b2da      	uxtb	r2, r3
 8016acc:	683b      	ldr	r3, [r7, #0]
 8016ace:	701a      	strb	r2, [r3, #0]

        // Verify if the application data together with MAC command fit into the maximum payload.
        if( txInfo->CurrentPossiblePayloadSize >= ( macCmdsSize + size ) )
 8016ad0:	683b      	ldr	r3, [r7, #0]
 8016ad2:	785b      	ldrb	r3, [r3, #1]
 8016ad4:	4619      	mov	r1, r3
 8016ad6:	79fa      	ldrb	r2, [r7, #7]
 8016ad8:	68bb      	ldr	r3, [r7, #8]
 8016ada:	4413      	add	r3, r2
 8016adc:	4299      	cmp	r1, r3
 8016ade:	d301      	bcc.n	8016ae4 <LoRaMacQueryTxPossible+0x11c>
        {
            return LORAMAC_STATUS_OK;
 8016ae0:	2300      	movs	r3, #0
 8016ae2:	e005      	b.n	8016af0 <LoRaMacQueryTxPossible+0x128>
        }
        else
        {
           return LORAMAC_STATUS_LENGTH_ERROR;
 8016ae4:	2308      	movs	r3, #8
 8016ae6:	e003      	b.n	8016af0 <LoRaMacQueryTxPossible+0x128>
        }
    }
    else
    {
        txInfo->MaxPossibleApplicationDataSize = 0;
 8016ae8:	683b      	ldr	r3, [r7, #0]
 8016aea:	2200      	movs	r2, #0
 8016aec:	701a      	strb	r2, [r3, #0]
        return LORAMAC_STATUS_LENGTH_ERROR;
 8016aee:	2308      	movs	r3, #8
    }
}
 8016af0:	4618      	mov	r0, r3
 8016af2:	3728      	adds	r7, #40	; 0x28
 8016af4:	46bd      	mov	sp, r7
 8016af6:	bd80      	pop	{r7, pc}
 8016af8:	20000be0 	.word	0x20000be0

08016afc <LoRaMacMibGetRequestConfirm>:

LoRaMacStatus_t LoRaMacMibGetRequestConfirm( MibRequestConfirm_t* mibGet )
{
 8016afc:	b590      	push	{r4, r7, lr}
 8016afe:	b087      	sub	sp, #28
 8016b00:	af00      	add	r7, sp, #0
 8016b02:	6078      	str	r0, [r7, #4]
    LoRaMacStatus_t status = LORAMAC_STATUS_OK;
 8016b04:	2300      	movs	r3, #0
 8016b06:	75fb      	strb	r3, [r7, #23]
    GetPhyParams_t getPhy;
    PhyParam_t phyParam;

    if( mibGet == NULL )
 8016b08:	687b      	ldr	r3, [r7, #4]
 8016b0a:	2b00      	cmp	r3, #0
 8016b0c:	d101      	bne.n	8016b12 <LoRaMacMibGetRequestConfirm+0x16>
    {
        return LORAMAC_STATUS_PARAMETER_INVALID;
 8016b0e:	2303      	movs	r3, #3
 8016b10:	e186      	b.n	8016e20 <LoRaMacMibGetRequestConfirm+0x324>
    }

    switch( mibGet->Type )
 8016b12:	687b      	ldr	r3, [r7, #4]
 8016b14:	781b      	ldrb	r3, [r3, #0]
 8016b16:	2b28      	cmp	r3, #40	; 0x28
 8016b18:	f200 817b 	bhi.w	8016e12 <LoRaMacMibGetRequestConfirm+0x316>
 8016b1c:	a201      	add	r2, pc, #4	; (adr r2, 8016b24 <LoRaMacMibGetRequestConfirm+0x28>)
 8016b1e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8016b22:	bf00      	nop
 8016b24:	08016bc9 	.word	0x08016bc9
 8016b28:	08016bd9 	.word	0x08016bd9
 8016b2c:	08016be9 	.word	0x08016be9
 8016b30:	08016bf5 	.word	0x08016bf5
 8016b34:	08016c01 	.word	0x08016c01
 8016b38:	08016c11 	.word	0x08016c11
 8016b3c:	08016c1f 	.word	0x08016c1f
 8016b40:	08016e13 	.word	0x08016e13
 8016b44:	08016e13 	.word	0x08016e13
 8016b48:	08016e13 	.word	0x08016e13
 8016b4c:	08016e13 	.word	0x08016e13
 8016b50:	08016e13 	.word	0x08016e13
 8016b54:	08016e13 	.word	0x08016e13
 8016b58:	08016e13 	.word	0x08016e13
 8016b5c:	08016e13 	.word	0x08016e13
 8016b60:	08016c2d 	.word	0x08016c2d
 8016b64:	08016c3d 	.word	0x08016c3d
 8016b68:	08016c4d 	.word	0x08016c4d
 8016b6c:	08016c71 	.word	0x08016c71
 8016b70:	08016c87 	.word	0x08016c87
 8016b74:	08016c9d 	.word	0x08016c9d
 8016b78:	08016cb3 	.word	0x08016cb3
 8016b7c:	08016ced 	.word	0x08016ced
 8016b80:	08016cc9 	.word	0x08016cc9
 8016b84:	08016d11 	.word	0x08016d11
 8016b88:	08016d21 	.word	0x08016d21
 8016b8c:	08016d31 	.word	0x08016d31
 8016b90:	08016d41 	.word	0x08016d41
 8016b94:	08016d51 	.word	0x08016d51
 8016b98:	08016d61 	.word	0x08016d61
 8016b9c:	08016d71 	.word	0x08016d71
 8016ba0:	08016d81 	.word	0x08016d81
 8016ba4:	08016da1 	.word	0x08016da1
 8016ba8:	08016d91 	.word	0x08016d91
 8016bac:	08016db1 	.word	0x08016db1
 8016bb0:	08016dc1 	.word	0x08016dc1
 8016bb4:	08016dd1 	.word	0x08016dd1
 8016bb8:	08016ded 	.word	0x08016ded
 8016bbc:	08016de1 	.word	0x08016de1
 8016bc0:	08016e13 	.word	0x08016e13
 8016bc4:	08016dfb 	.word	0x08016dfb
    {
        case MIB_DEVICE_CLASS:
        {
            mibGet->Param.Class = MacCtx.NvmCtx->DeviceClass;
 8016bc8:	4b97      	ldr	r3, [pc, #604]	; (8016e28 <LoRaMacMibGetRequestConfirm+0x32c>)
 8016bca:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8016bce:	f893 207c 	ldrb.w	r2, [r3, #124]	; 0x7c
 8016bd2:	687b      	ldr	r3, [r7, #4]
 8016bd4:	711a      	strb	r2, [r3, #4]
            break;
 8016bd6:	e122      	b.n	8016e1e <LoRaMacMibGetRequestConfirm+0x322>
        }
        case MIB_NETWORK_ACTIVATION:
        {
            mibGet->Param.NetworkActivation = MacCtx.NvmCtx->NetworkActivation;
 8016bd8:	4b93      	ldr	r3, [pc, #588]	; (8016e28 <LoRaMacMibGetRequestConfirm+0x32c>)
 8016bda:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8016bde:	f893 2164 	ldrb.w	r2, [r3, #356]	; 0x164
 8016be2:	687b      	ldr	r3, [r7, #4]
 8016be4:	711a      	strb	r2, [r3, #4]
            break;
 8016be6:	e11a      	b.n	8016e1e <LoRaMacMibGetRequestConfirm+0x322>
        }
        case MIB_DEV_EUI:
        {
            mibGet->Param.DevEui = SecureElementGetDevEui( );
 8016be8:	f7fa ffd8 	bl	8011b9c <SecureElementGetDevEui>
 8016bec:	4602      	mov	r2, r0
 8016bee:	687b      	ldr	r3, [r7, #4]
 8016bf0:	605a      	str	r2, [r3, #4]
            break;
 8016bf2:	e114      	b.n	8016e1e <LoRaMacMibGetRequestConfirm+0x322>
        }
        case MIB_JOIN_EUI:
        {
            mibGet->Param.JoinEui = SecureElementGetJoinEui( );
 8016bf4:	f7fa fff6 	bl	8011be4 <SecureElementGetJoinEui>
 8016bf8:	4602      	mov	r2, r0
 8016bfa:	687b      	ldr	r3, [r7, #4]
 8016bfc:	605a      	str	r2, [r3, #4]
            break;
 8016bfe:	e10e      	b.n	8016e1e <LoRaMacMibGetRequestConfirm+0x322>
        }
        case MIB_ADR:
        {
            mibGet->Param.AdrEnable = MacCtx.NvmCtx->AdrCtrlOn;
 8016c00:	4b89      	ldr	r3, [pc, #548]	; (8016e28 <LoRaMacMibGetRequestConfirm+0x32c>)
 8016c02:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8016c06:	f893 207e 	ldrb.w	r2, [r3, #126]	; 0x7e
 8016c0a:	687b      	ldr	r3, [r7, #4]
 8016c0c:	711a      	strb	r2, [r3, #4]
            break;
 8016c0e:	e106      	b.n	8016e1e <LoRaMacMibGetRequestConfirm+0x322>
        }
        case MIB_NET_ID:
        {
            mibGet->Param.NetID = MacCtx.NvmCtx->NetID;
 8016c10:	4b85      	ldr	r3, [pc, #532]	; (8016e28 <LoRaMacMibGetRequestConfirm+0x32c>)
 8016c12:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8016c16:	6c9a      	ldr	r2, [r3, #72]	; 0x48
 8016c18:	687b      	ldr	r3, [r7, #4]
 8016c1a:	605a      	str	r2, [r3, #4]
            break;
 8016c1c:	e0ff      	b.n	8016e1e <LoRaMacMibGetRequestConfirm+0x322>
        }
        case MIB_DEV_ADDR:
        {
            mibGet->Param.DevAddr = MacCtx.NvmCtx->DevAddr;
 8016c1e:	4b82      	ldr	r3, [pc, #520]	; (8016e28 <LoRaMacMibGetRequestConfirm+0x32c>)
 8016c20:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8016c24:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 8016c26:	687b      	ldr	r3, [r7, #4]
 8016c28:	605a      	str	r2, [r3, #4]
            break;
 8016c2a:	e0f8      	b.n	8016e1e <LoRaMacMibGetRequestConfirm+0x322>
        }
        case MIB_PUBLIC_NETWORK:
        {
            mibGet->Param.EnablePublicNetwork = MacCtx.NvmCtx->PublicNetwork;
 8016c2c:	4b7e      	ldr	r3, [pc, #504]	; (8016e28 <LoRaMacMibGetRequestConfirm+0x32c>)
 8016c2e:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8016c32:	f893 207d 	ldrb.w	r2, [r3, #125]	; 0x7d
 8016c36:	687b      	ldr	r3, [r7, #4]
 8016c38:	711a      	strb	r2, [r3, #4]
            break;
 8016c3a:	e0f0      	b.n	8016e1e <LoRaMacMibGetRequestConfirm+0x322>
        }
        case MIB_REPEATER_SUPPORT:
        {
            mibGet->Param.EnableRepeaterSupport = MacCtx.NvmCtx->RepeaterSupport;
 8016c3c:	4b7a      	ldr	r3, [pc, #488]	; (8016e28 <LoRaMacMibGetRequestConfirm+0x32c>)
 8016c3e:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8016c42:	f893 20ca 	ldrb.w	r2, [r3, #202]	; 0xca
 8016c46:	687b      	ldr	r3, [r7, #4]
 8016c48:	711a      	strb	r2, [r3, #4]
            break;
 8016c4a:	e0e8      	b.n	8016e1e <LoRaMacMibGetRequestConfirm+0x322>
        }
        case MIB_CHANNELS:
        {
            getPhy.Attribute = PHY_CHANNELS;
 8016c4c:	231d      	movs	r3, #29
 8016c4e:	743b      	strb	r3, [r7, #16]
            phyParam = RegionGetPhyParam( MacCtx.NvmCtx->Region, &getPhy );
 8016c50:	4b75      	ldr	r3, [pc, #468]	; (8016e28 <LoRaMacMibGetRequestConfirm+0x32c>)
 8016c52:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8016c56:	781b      	ldrb	r3, [r3, #0]
 8016c58:	f107 0210 	add.w	r2, r7, #16
 8016c5c:	4611      	mov	r1, r2
 8016c5e:	4618      	mov	r0, r3
 8016c60:	f002 ffad 	bl	8019bbe <RegionGetPhyParam>
 8016c64:	4603      	mov	r3, r0
 8016c66:	60fb      	str	r3, [r7, #12]

            mibGet->Param.ChannelList = phyParam.Channels;
 8016c68:	68fa      	ldr	r2, [r7, #12]
 8016c6a:	687b      	ldr	r3, [r7, #4]
 8016c6c:	605a      	str	r2, [r3, #4]
            break;
 8016c6e:	e0d6      	b.n	8016e1e <LoRaMacMibGetRequestConfirm+0x322>
        }
        case MIB_RX2_CHANNEL:
        {
            mibGet->Param.Rx2Channel = MacCtx.NvmCtx->MacParams.Rx2Channel;
 8016c70:	4b6d      	ldr	r3, [pc, #436]	; (8016e28 <LoRaMacMibGetRequestConfirm+0x32c>)
 8016c72:	f8d3 2484 	ldr.w	r2, [r3, #1156]	; 0x484
 8016c76:	687b      	ldr	r3, [r7, #4]
 8016c78:	3304      	adds	r3, #4
 8016c7a:	32a8      	adds	r2, #168	; 0xa8
 8016c7c:	e892 0003 	ldmia.w	r2, {r0, r1}
 8016c80:	e883 0003 	stmia.w	r3, {r0, r1}
            break;
 8016c84:	e0cb      	b.n	8016e1e <LoRaMacMibGetRequestConfirm+0x322>
        }
        case MIB_RX2_DEFAULT_CHANNEL:
        {
            mibGet->Param.Rx2Channel = MacCtx.NvmCtx->MacParamsDefaults.Rx2Channel;
 8016c86:	4b68      	ldr	r3, [pc, #416]	; (8016e28 <LoRaMacMibGetRequestConfirm+0x32c>)
 8016c88:	f8d3 2484 	ldr.w	r2, [r3, #1156]	; 0x484
 8016c8c:	687b      	ldr	r3, [r7, #4]
 8016c8e:	3304      	adds	r3, #4
 8016c90:	3228      	adds	r2, #40	; 0x28
 8016c92:	e892 0003 	ldmia.w	r2, {r0, r1}
 8016c96:	e883 0003 	stmia.w	r3, {r0, r1}
            break;
 8016c9a:	e0c0      	b.n	8016e1e <LoRaMacMibGetRequestConfirm+0x322>
        }
        case MIB_RXC_CHANNEL:
        {
            mibGet->Param.RxCChannel = MacCtx.NvmCtx->MacParams.RxCChannel;
 8016c9c:	4b62      	ldr	r3, [pc, #392]	; (8016e28 <LoRaMacMibGetRequestConfirm+0x32c>)
 8016c9e:	f8d3 2484 	ldr.w	r2, [r3, #1156]	; 0x484
 8016ca2:	687b      	ldr	r3, [r7, #4]
 8016ca4:	3304      	adds	r3, #4
 8016ca6:	32b0      	adds	r2, #176	; 0xb0
 8016ca8:	e892 0003 	ldmia.w	r2, {r0, r1}
 8016cac:	e883 0003 	stmia.w	r3, {r0, r1}
            break;
 8016cb0:	e0b5      	b.n	8016e1e <LoRaMacMibGetRequestConfirm+0x322>
        }
        case MIB_RXC_DEFAULT_CHANNEL:
        {
            mibGet->Param.RxCChannel = MacCtx.NvmCtx->MacParamsDefaults.RxCChannel;
 8016cb2:	4b5d      	ldr	r3, [pc, #372]	; (8016e28 <LoRaMacMibGetRequestConfirm+0x32c>)
 8016cb4:	f8d3 2484 	ldr.w	r2, [r3, #1156]	; 0x484
 8016cb8:	687b      	ldr	r3, [r7, #4]
 8016cba:	3304      	adds	r3, #4
 8016cbc:	3230      	adds	r2, #48	; 0x30
 8016cbe:	e892 0003 	ldmia.w	r2, {r0, r1}
 8016cc2:	e883 0003 	stmia.w	r3, {r0, r1}
            break;
 8016cc6:	e0aa      	b.n	8016e1e <LoRaMacMibGetRequestConfirm+0x322>
        }
        case MIB_CHANNELS_DEFAULT_MASK:
        {
            getPhy.Attribute = PHY_CHANNELS_DEFAULT_MASK;
 8016cc8:	231b      	movs	r3, #27
 8016cca:	743b      	strb	r3, [r7, #16]
            phyParam = RegionGetPhyParam( MacCtx.NvmCtx->Region, &getPhy );
 8016ccc:	4b56      	ldr	r3, [pc, #344]	; (8016e28 <LoRaMacMibGetRequestConfirm+0x32c>)
 8016cce:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8016cd2:	781b      	ldrb	r3, [r3, #0]
 8016cd4:	f107 0210 	add.w	r2, r7, #16
 8016cd8:	4611      	mov	r1, r2
 8016cda:	4618      	mov	r0, r3
 8016cdc:	f002 ff6f 	bl	8019bbe <RegionGetPhyParam>
 8016ce0:	4603      	mov	r3, r0
 8016ce2:	60fb      	str	r3, [r7, #12]

            mibGet->Param.ChannelsDefaultMask = phyParam.ChannelsMask;
 8016ce4:	68fa      	ldr	r2, [r7, #12]
 8016ce6:	687b      	ldr	r3, [r7, #4]
 8016ce8:	605a      	str	r2, [r3, #4]
            break;
 8016cea:	e098      	b.n	8016e1e <LoRaMacMibGetRequestConfirm+0x322>
        }
        case MIB_CHANNELS_MASK:
        {
            getPhy.Attribute = PHY_CHANNELS_MASK;
 8016cec:	231a      	movs	r3, #26
 8016cee:	743b      	strb	r3, [r7, #16]
            phyParam = RegionGetPhyParam( MacCtx.NvmCtx->Region, &getPhy );
 8016cf0:	4b4d      	ldr	r3, [pc, #308]	; (8016e28 <LoRaMacMibGetRequestConfirm+0x32c>)
 8016cf2:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8016cf6:	781b      	ldrb	r3, [r3, #0]
 8016cf8:	f107 0210 	add.w	r2, r7, #16
 8016cfc:	4611      	mov	r1, r2
 8016cfe:	4618      	mov	r0, r3
 8016d00:	f002 ff5d 	bl	8019bbe <RegionGetPhyParam>
 8016d04:	4603      	mov	r3, r0
 8016d06:	60fb      	str	r3, [r7, #12]

            mibGet->Param.ChannelsMask = phyParam.ChannelsMask;
 8016d08:	68fa      	ldr	r2, [r7, #12]
 8016d0a:	687b      	ldr	r3, [r7, #4]
 8016d0c:	605a      	str	r2, [r3, #4]
            break;
 8016d0e:	e086      	b.n	8016e1e <LoRaMacMibGetRequestConfirm+0x322>
        }
        case MIB_CHANNELS_NB_TRANS:
        {
            mibGet->Param.ChannelsNbTrans = MacCtx.NvmCtx->MacParams.ChannelsNbTrans;
 8016d10:	4b45      	ldr	r3, [pc, #276]	; (8016e28 <LoRaMacMibGetRequestConfirm+0x32c>)
 8016d12:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8016d16:	f893 20a4 	ldrb.w	r2, [r3, #164]	; 0xa4
 8016d1a:	687b      	ldr	r3, [r7, #4]
 8016d1c:	711a      	strb	r2, [r3, #4]
            break;
 8016d1e:	e07e      	b.n	8016e1e <LoRaMacMibGetRequestConfirm+0x322>
        }
        case MIB_MAX_RX_WINDOW_DURATION:
        {
            mibGet->Param.MaxRxWindow = MacCtx.NvmCtx->MacParams.MaxRxWindow;
 8016d20:	4b41      	ldr	r3, [pc, #260]	; (8016e28 <LoRaMacMibGetRequestConfirm+0x32c>)
 8016d22:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8016d26:	f8d3 2090 	ldr.w	r2, [r3, #144]	; 0x90
 8016d2a:	687b      	ldr	r3, [r7, #4]
 8016d2c:	605a      	str	r2, [r3, #4]
            break;
 8016d2e:	e076      	b.n	8016e1e <LoRaMacMibGetRequestConfirm+0x322>
        }
        case MIB_RECEIVE_DELAY_1:
        {
            mibGet->Param.ReceiveDelay1 = MacCtx.NvmCtx->MacParams.ReceiveDelay1;
 8016d30:	4b3d      	ldr	r3, [pc, #244]	; (8016e28 <LoRaMacMibGetRequestConfirm+0x32c>)
 8016d32:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8016d36:	f8d3 2094 	ldr.w	r2, [r3, #148]	; 0x94
 8016d3a:	687b      	ldr	r3, [r7, #4]
 8016d3c:	605a      	str	r2, [r3, #4]
            break;
 8016d3e:	e06e      	b.n	8016e1e <LoRaMacMibGetRequestConfirm+0x322>
        }
        case MIB_RECEIVE_DELAY_2:
        {
            mibGet->Param.ReceiveDelay2 = MacCtx.NvmCtx->MacParams.ReceiveDelay2;
 8016d40:	4b39      	ldr	r3, [pc, #228]	; (8016e28 <LoRaMacMibGetRequestConfirm+0x32c>)
 8016d42:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8016d46:	f8d3 2098 	ldr.w	r2, [r3, #152]	; 0x98
 8016d4a:	687b      	ldr	r3, [r7, #4]
 8016d4c:	605a      	str	r2, [r3, #4]
            break;
 8016d4e:	e066      	b.n	8016e1e <LoRaMacMibGetRequestConfirm+0x322>
        }
        case MIB_JOIN_ACCEPT_DELAY_1:
        {
            mibGet->Param.JoinAcceptDelay1 = MacCtx.NvmCtx->MacParams.JoinAcceptDelay1;
 8016d50:	4b35      	ldr	r3, [pc, #212]	; (8016e28 <LoRaMacMibGetRequestConfirm+0x32c>)
 8016d52:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8016d56:	f8d3 209c 	ldr.w	r2, [r3, #156]	; 0x9c
 8016d5a:	687b      	ldr	r3, [r7, #4]
 8016d5c:	605a      	str	r2, [r3, #4]
            break;
 8016d5e:	e05e      	b.n	8016e1e <LoRaMacMibGetRequestConfirm+0x322>
        }
        case MIB_JOIN_ACCEPT_DELAY_2:
        {
            mibGet->Param.JoinAcceptDelay2 = MacCtx.NvmCtx->MacParams.JoinAcceptDelay2;
 8016d60:	4b31      	ldr	r3, [pc, #196]	; (8016e28 <LoRaMacMibGetRequestConfirm+0x32c>)
 8016d62:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8016d66:	f8d3 20a0 	ldr.w	r2, [r3, #160]	; 0xa0
 8016d6a:	687b      	ldr	r3, [r7, #4]
 8016d6c:	605a      	str	r2, [r3, #4]
            break;
 8016d6e:	e056      	b.n	8016e1e <LoRaMacMibGetRequestConfirm+0x322>
        }
        case MIB_CHANNELS_DEFAULT_DATARATE:
        {
            mibGet->Param.ChannelsDefaultDatarate = MacCtx.NvmCtx->MacParamsDefaults.ChannelsDatarate;
 8016d70:	4b2d      	ldr	r3, [pc, #180]	; (8016e28 <LoRaMacMibGetRequestConfirm+0x32c>)
 8016d72:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8016d76:	f993 2005 	ldrsb.w	r2, [r3, #5]
 8016d7a:	687b      	ldr	r3, [r7, #4]
 8016d7c:	711a      	strb	r2, [r3, #4]
            break;
 8016d7e:	e04e      	b.n	8016e1e <LoRaMacMibGetRequestConfirm+0x322>
        }
        case MIB_CHANNELS_DATARATE:
        {
            mibGet->Param.ChannelsDatarate = MacCtx.NvmCtx->MacParams.ChannelsDatarate;
 8016d80:	4b29      	ldr	r3, [pc, #164]	; (8016e28 <LoRaMacMibGetRequestConfirm+0x32c>)
 8016d82:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8016d86:	f993 2085 	ldrsb.w	r2, [r3, #133]	; 0x85
 8016d8a:	687b      	ldr	r3, [r7, #4]
 8016d8c:	711a      	strb	r2, [r3, #4]
            break;
 8016d8e:	e046      	b.n	8016e1e <LoRaMacMibGetRequestConfirm+0x322>
        }
        case MIB_CHANNELS_DEFAULT_TX_POWER:
        {
            mibGet->Param.ChannelsDefaultTxPower = MacCtx.NvmCtx->MacParamsDefaults.ChannelsTxPower;
 8016d90:	4b25      	ldr	r3, [pc, #148]	; (8016e28 <LoRaMacMibGetRequestConfirm+0x32c>)
 8016d92:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8016d96:	f993 2004 	ldrsb.w	r2, [r3, #4]
 8016d9a:	687b      	ldr	r3, [r7, #4]
 8016d9c:	711a      	strb	r2, [r3, #4]
            break;
 8016d9e:	e03e      	b.n	8016e1e <LoRaMacMibGetRequestConfirm+0x322>
        }
        case MIB_CHANNELS_TX_POWER:
        {
            mibGet->Param.ChannelsTxPower = MacCtx.NvmCtx->MacParams.ChannelsTxPower;
 8016da0:	4b21      	ldr	r3, [pc, #132]	; (8016e28 <LoRaMacMibGetRequestConfirm+0x32c>)
 8016da2:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8016da6:	f993 2084 	ldrsb.w	r2, [r3, #132]	; 0x84
 8016daa:	687b      	ldr	r3, [r7, #4]
 8016dac:	711a      	strb	r2, [r3, #4]
            break;
 8016dae:	e036      	b.n	8016e1e <LoRaMacMibGetRequestConfirm+0x322>
        }
        case MIB_SYSTEM_MAX_RX_ERROR:
        {
            mibGet->Param.SystemMaxRxError = MacCtx.NvmCtx->MacParams.SystemMaxRxError;
 8016db0:	4b1d      	ldr	r3, [pc, #116]	; (8016e28 <LoRaMacMibGetRequestConfirm+0x32c>)
 8016db2:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8016db6:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88
 8016dba:	687b      	ldr	r3, [r7, #4]
 8016dbc:	605a      	str	r2, [r3, #4]
            break;
 8016dbe:	e02e      	b.n	8016e1e <LoRaMacMibGetRequestConfirm+0x322>
        }
        case MIB_MIN_RX_SYMBOLS:
        {
            mibGet->Param.MinRxSymbols = MacCtx.NvmCtx->MacParams.MinRxSymbols;
 8016dc0:	4b19      	ldr	r3, [pc, #100]	; (8016e28 <LoRaMacMibGetRequestConfirm+0x32c>)
 8016dc2:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8016dc6:	f893 208c 	ldrb.w	r2, [r3, #140]	; 0x8c
 8016dca:	687b      	ldr	r3, [r7, #4]
 8016dcc:	711a      	strb	r2, [r3, #4]
            break;
 8016dce:	e026      	b.n	8016e1e <LoRaMacMibGetRequestConfirm+0x322>
        }
        case MIB_ANTENNA_GAIN:
        {
            mibGet->Param.AntennaGain = MacCtx.NvmCtx->MacParams.AntennaGain;
 8016dd0:	4b15      	ldr	r3, [pc, #84]	; (8016e28 <LoRaMacMibGetRequestConfirm+0x32c>)
 8016dd2:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8016dd6:	f8d3 20c0 	ldr.w	r2, [r3, #192]	; 0xc0
 8016dda:	687b      	ldr	r3, [r7, #4]
 8016ddc:	605a      	str	r2, [r3, #4]
            break;
 8016dde:	e01e      	b.n	8016e1e <LoRaMacMibGetRequestConfirm+0x322>
        }
        case MIB_NVM_CTXS:
        {
            mibGet->Param.Contexts = GetCtxs( );
 8016de0:	f7fe ffa2 	bl	8015d28 <GetCtxs>
 8016de4:	4602      	mov	r2, r0
 8016de6:	687b      	ldr	r3, [r7, #4]
 8016de8:	605a      	str	r2, [r3, #4]
            break;
 8016dea:	e018      	b.n	8016e1e <LoRaMacMibGetRequestConfirm+0x322>
        }
        case MIB_DEFAULT_ANTENNA_GAIN:
        {
            mibGet->Param.DefaultAntennaGain = MacCtx.NvmCtx->MacParamsDefaults.AntennaGain;
 8016dec:	4b0e      	ldr	r3, [pc, #56]	; (8016e28 <LoRaMacMibGetRequestConfirm+0x32c>)
 8016dee:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8016df2:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8016df4:	687b      	ldr	r3, [r7, #4]
 8016df6:	605a      	str	r2, [r3, #4]
            break;
 8016df8:	e011      	b.n	8016e1e <LoRaMacMibGetRequestConfirm+0x322>
        }
        case MIB_LORAWAN_VERSION:
        {
            mibGet->Param.LrWanVersion.LoRaWan = MacCtx.NvmCtx->Version;
 8016dfa:	4b0b      	ldr	r3, [pc, #44]	; (8016e28 <LoRaMacMibGetRequestConfirm+0x32c>)
 8016dfc:	f8d3 2484 	ldr.w	r2, [r3, #1156]	; 0x484
 8016e00:	687b      	ldr	r3, [r7, #4]
 8016e02:	f8d2 2160 	ldr.w	r2, [r2, #352]	; 0x160
 8016e06:	605a      	str	r2, [r3, #4]
            mibGet->Param.LrWanVersion.LoRaWanRegion = RegionGetVersion( );
 8016e08:	687c      	ldr	r4, [r7, #4]
 8016e0a:	f003 f91d 	bl	801a048 <RegionGetVersion>
 8016e0e:	60a0      	str	r0, [r4, #8]
            break;
 8016e10:	e005      	b.n	8016e1e <LoRaMacMibGetRequestConfirm+0x322>
        }
        default:
        {
            status = LoRaMacClassBMibGetRequestConfirm( mibGet );
 8016e12:	6878      	ldr	r0, [r7, #4]
 8016e14:	f000 ff69 	bl	8017cea <LoRaMacClassBMibGetRequestConfirm>
 8016e18:	4603      	mov	r3, r0
 8016e1a:	75fb      	strb	r3, [r7, #23]
            break;
 8016e1c:	bf00      	nop
        }
    }
    return status;
 8016e1e:	7dfb      	ldrb	r3, [r7, #23]
}
 8016e20:	4618      	mov	r0, r3
 8016e22:	371c      	adds	r7, #28
 8016e24:	46bd      	mov	sp, r7
 8016e26:	bd90      	pop	{r4, r7, pc}
 8016e28:	20000be0 	.word	0x20000be0

08016e2c <LoRaMacMibSetRequestConfirm>:

LoRaMacStatus_t LoRaMacMibSetRequestConfirm( MibRequestConfirm_t* mibSet )
{
 8016e2c:	b580      	push	{r7, lr}
 8016e2e:	b086      	sub	sp, #24
 8016e30:	af00      	add	r7, sp, #0
 8016e32:	6078      	str	r0, [r7, #4]
    LoRaMacStatus_t status = LORAMAC_STATUS_OK;
 8016e34:	2300      	movs	r3, #0
 8016e36:	75fb      	strb	r3, [r7, #23]
    ChanMaskSetParams_t chanMaskSet;
    VerifyParams_t verify;

    if( mibSet == NULL )
 8016e38:	687b      	ldr	r3, [r7, #4]
 8016e3a:	2b00      	cmp	r3, #0
 8016e3c:	d101      	bne.n	8016e42 <LoRaMacMibSetRequestConfirm+0x16>
    {
        return LORAMAC_STATUS_PARAMETER_INVALID;
 8016e3e:	2303      	movs	r3, #3
 8016e40:	e379      	b.n	8017536 <LoRaMacMibSetRequestConfirm+0x70a>
    }
    if( ( MacCtx.MacState & LORAMAC_TX_RUNNING ) == LORAMAC_TX_RUNNING )
 8016e42:	4bbb      	ldr	r3, [pc, #748]	; (8017130 <LoRaMacMibSetRequestConfirm+0x304>)
 8016e44:	f8d3 3340 	ldr.w	r3, [r3, #832]	; 0x340
 8016e48:	f003 0302 	and.w	r3, r3, #2
 8016e4c:	2b00      	cmp	r3, #0
 8016e4e:	d001      	beq.n	8016e54 <LoRaMacMibSetRequestConfirm+0x28>
    {
        return LORAMAC_STATUS_BUSY;
 8016e50:	2301      	movs	r3, #1
 8016e52:	e370      	b.n	8017536 <LoRaMacMibSetRequestConfirm+0x70a>
    }

    switch( mibSet->Type )
 8016e54:	687b      	ldr	r3, [r7, #4]
 8016e56:	781b      	ldrb	r3, [r3, #0]
 8016e58:	2b27      	cmp	r3, #39	; 0x27
 8016e5a:	f200 8346 	bhi.w	80174ea <LoRaMacMibSetRequestConfirm+0x6be>
 8016e5e:	a201      	add	r2, pc, #4	; (adr r2, 8016e64 <LoRaMacMibSetRequestConfirm+0x38>)
 8016e60:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8016e64:	08016f05 	.word	0x08016f05
 8016e68:	08016f15 	.word	0x08016f15
 8016e6c:	08016f33 	.word	0x08016f33
 8016e70:	08016f4b 	.word	0x08016f4b
 8016e74:	08016f63 	.word	0x08016f63
 8016e78:	08016f73 	.word	0x08016f73
 8016e7c:	08016f81 	.word	0x08016f81
 8016e80:	08016f8f 	.word	0x08016f8f
 8016e84:	08016fb5 	.word	0x08016fb5
 8016e88:	08016fdb 	.word	0x08016fdb
 8016e8c:	08017001 	.word	0x08017001
 8016e90:	08017027 	.word	0x08017027
 8016e94:	0801704d 	.word	0x0801704d
 8016e98:	08017073 	.word	0x08017073
 8016e9c:	08017099 	.word	0x08017099
 8016ea0:	080170bf 	.word	0x080170bf
 8016ea4:	080170e7 	.word	0x080170e7
 8016ea8:	080174eb 	.word	0x080174eb
 8016eac:	080170f7 	.word	0x080170f7
 8016eb0:	0801717b 	.word	0x0801717b
 8016eb4:	080171c5 	.word	0x080171c5
 8016eb8:	08017239 	.word	0x08017239
 8016ebc:	080172b5 	.word	0x080172b5
 8016ec0:	08017283 	.word	0x08017283
 8016ec4:	080172e7 	.word	0x080172e7
 8016ec8:	0801730d 	.word	0x0801730d
 8016ecc:	0801731d 	.word	0x0801731d
 8016ed0:	0801732d 	.word	0x0801732d
 8016ed4:	0801733d 	.word	0x0801733d
 8016ed8:	0801734d 	.word	0x0801734d
 8016edc:	0801735d 	.word	0x0801735d
 8016ee0:	08017393 	.word	0x08017393
 8016ee4:	0801740d 	.word	0x0801740d
 8016ee8:	080173d7 	.word	0x080173d7
 8016eec:	0801744d 	.word	0x0801744d
 8016ef0:	08017467 	.word	0x08017467
 8016ef4:	08017481 	.word	0x08017481
 8016ef8:	08017491 	.word	0x08017491
 8016efc:	0801749f 	.word	0x0801749f
 8016f00:	080174bd 	.word	0x080174bd
    {
        case MIB_DEVICE_CLASS:
        {
            status = SwitchClass( mibSet->Param.Class );
 8016f04:	687b      	ldr	r3, [r7, #4]
 8016f06:	791b      	ldrb	r3, [r3, #4]
 8016f08:	4618      	mov	r0, r3
 8016f0a:	f7fd f98f 	bl	801422c <SwitchClass>
 8016f0e:	4603      	mov	r3, r0
 8016f10:	75fb      	strb	r3, [r7, #23]
            break;
 8016f12:	e30b      	b.n	801752c <LoRaMacMibSetRequestConfirm+0x700>
        }
        case MIB_NETWORK_ACTIVATION:
        {
            if( mibSet->Param.NetworkActivation != ACTIVATION_TYPE_OTAA  )
 8016f14:	687b      	ldr	r3, [r7, #4]
 8016f16:	791b      	ldrb	r3, [r3, #4]
 8016f18:	2b02      	cmp	r3, #2
 8016f1a:	d007      	beq.n	8016f2c <LoRaMacMibSetRequestConfirm+0x100>
            {
                MacCtx.NvmCtx->NetworkActivation = mibSet->Param.NetworkActivation;
 8016f1c:	4b84      	ldr	r3, [pc, #528]	; (8017130 <LoRaMacMibSetRequestConfirm+0x304>)
 8016f1e:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8016f22:	687a      	ldr	r2, [r7, #4]
 8016f24:	7912      	ldrb	r2, [r2, #4]
 8016f26:	f883 2164 	strb.w	r2, [r3, #356]	; 0x164
            }
            else
            {   // Do not allow to set ACTIVATION_TYPE_OTAA since the MAC will set it automatically after a successful join process.
                status = LORAMAC_STATUS_PARAMETER_INVALID;
            }
            break;
 8016f2a:	e2ff      	b.n	801752c <LoRaMacMibSetRequestConfirm+0x700>
                status = LORAMAC_STATUS_PARAMETER_INVALID;
 8016f2c:	2303      	movs	r3, #3
 8016f2e:	75fb      	strb	r3, [r7, #23]
            break;
 8016f30:	e2fc      	b.n	801752c <LoRaMacMibSetRequestConfirm+0x700>
        }
        case MIB_DEV_EUI:
        {
            if( SecureElementSetDevEui( mibSet->Param.DevEui ) != SECURE_ELEMENT_SUCCESS )
 8016f32:	687b      	ldr	r3, [r7, #4]
 8016f34:	685b      	ldr	r3, [r3, #4]
 8016f36:	4618      	mov	r0, r3
 8016f38:	f7fa fe16 	bl	8011b68 <SecureElementSetDevEui>
 8016f3c:	4603      	mov	r3, r0
 8016f3e:	2b00      	cmp	r3, #0
 8016f40:	f000 82d9 	beq.w	80174f6 <LoRaMacMibSetRequestConfirm+0x6ca>
            {
                status = LORAMAC_STATUS_PARAMETER_INVALID;
 8016f44:	2303      	movs	r3, #3
 8016f46:	75fb      	strb	r3, [r7, #23]
            }
            break;
 8016f48:	e2d5      	b.n	80174f6 <LoRaMacMibSetRequestConfirm+0x6ca>
        }
        case MIB_JOIN_EUI:
        {
            if( SecureElementSetJoinEui( mibSet->Param.JoinEui ) != SECURE_ELEMENT_SUCCESS )
 8016f4a:	687b      	ldr	r3, [r7, #4]
 8016f4c:	685b      	ldr	r3, [r3, #4]
 8016f4e:	4618      	mov	r0, r3
 8016f50:	f7fa fe2e 	bl	8011bb0 <SecureElementSetJoinEui>
 8016f54:	4603      	mov	r3, r0
 8016f56:	2b00      	cmp	r3, #0
 8016f58:	f000 82cf 	beq.w	80174fa <LoRaMacMibSetRequestConfirm+0x6ce>
            {
                status = LORAMAC_STATUS_PARAMETER_INVALID;
 8016f5c:	2303      	movs	r3, #3
 8016f5e:	75fb      	strb	r3, [r7, #23]
            }
            break;
 8016f60:	e2cb      	b.n	80174fa <LoRaMacMibSetRequestConfirm+0x6ce>
        }
        case MIB_ADR:
        {
            MacCtx.NvmCtx->AdrCtrlOn = mibSet->Param.AdrEnable;
 8016f62:	4b73      	ldr	r3, [pc, #460]	; (8017130 <LoRaMacMibSetRequestConfirm+0x304>)
 8016f64:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8016f68:	687a      	ldr	r2, [r7, #4]
 8016f6a:	7912      	ldrb	r2, [r2, #4]
 8016f6c:	f883 207e 	strb.w	r2, [r3, #126]	; 0x7e
            break;
 8016f70:	e2dc      	b.n	801752c <LoRaMacMibSetRequestConfirm+0x700>
        }
        case MIB_NET_ID:
        {
            MacCtx.NvmCtx->NetID = mibSet->Param.NetID;
 8016f72:	4b6f      	ldr	r3, [pc, #444]	; (8017130 <LoRaMacMibSetRequestConfirm+0x304>)
 8016f74:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8016f78:	687a      	ldr	r2, [r7, #4]
 8016f7a:	6852      	ldr	r2, [r2, #4]
 8016f7c:	649a      	str	r2, [r3, #72]	; 0x48
            break;
 8016f7e:	e2d5      	b.n	801752c <LoRaMacMibSetRequestConfirm+0x700>
        }
        case MIB_DEV_ADDR:
        {
            MacCtx.NvmCtx->DevAddr = mibSet->Param.DevAddr;
 8016f80:	4b6b      	ldr	r3, [pc, #428]	; (8017130 <LoRaMacMibSetRequestConfirm+0x304>)
 8016f82:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8016f86:	687a      	ldr	r2, [r7, #4]
 8016f88:	6852      	ldr	r2, [r2, #4]
 8016f8a:	64da      	str	r2, [r3, #76]	; 0x4c
            break;
 8016f8c:	e2ce      	b.n	801752c <LoRaMacMibSetRequestConfirm+0x700>
        }
        case MIB_APP_KEY:
        {
            if( mibSet->Param.AppKey != NULL )
 8016f8e:	687b      	ldr	r3, [r7, #4]
 8016f90:	685b      	ldr	r3, [r3, #4]
 8016f92:	2b00      	cmp	r3, #0
 8016f94:	d00b      	beq.n	8016fae <LoRaMacMibSetRequestConfirm+0x182>
            {
                if( LORAMAC_CRYPTO_SUCCESS != LoRaMacCryptoSetKey( APP_KEY, mibSet->Param.AppKey ) )
 8016f96:	687b      	ldr	r3, [r7, #4]
 8016f98:	685b      	ldr	r3, [r3, #4]
 8016f9a:	4619      	mov	r1, r3
 8016f9c:	2000      	movs	r0, #0
 8016f9e:	f002 f833 	bl	8019008 <LoRaMacCryptoSetKey>
 8016fa2:	4603      	mov	r3, r0
 8016fa4:	2b00      	cmp	r3, #0
 8016fa6:	f000 82aa 	beq.w	80174fe <LoRaMacMibSetRequestConfirm+0x6d2>
                {
                    return LORAMAC_STATUS_CRYPTO_ERROR;
 8016faa:	2311      	movs	r3, #17
 8016fac:	e2c3      	b.n	8017536 <LoRaMacMibSetRequestConfirm+0x70a>
                }
            }
            else
            {
                status = LORAMAC_STATUS_PARAMETER_INVALID;
 8016fae:	2303      	movs	r3, #3
 8016fb0:	75fb      	strb	r3, [r7, #23]
            }
            break;
 8016fb2:	e2a4      	b.n	80174fe <LoRaMacMibSetRequestConfirm+0x6d2>
        }
        case MIB_NWK_KEY:
        {
            if( mibSet->Param.NwkKey != NULL )
 8016fb4:	687b      	ldr	r3, [r7, #4]
 8016fb6:	685b      	ldr	r3, [r3, #4]
 8016fb8:	2b00      	cmp	r3, #0
 8016fba:	d00b      	beq.n	8016fd4 <LoRaMacMibSetRequestConfirm+0x1a8>
            {
                if( LORAMAC_CRYPTO_SUCCESS != LoRaMacCryptoSetKey( NWK_KEY, mibSet->Param.NwkKey ) )
 8016fbc:	687b      	ldr	r3, [r7, #4]
 8016fbe:	685b      	ldr	r3, [r3, #4]
 8016fc0:	4619      	mov	r1, r3
 8016fc2:	2001      	movs	r0, #1
 8016fc4:	f002 f820 	bl	8019008 <LoRaMacCryptoSetKey>
 8016fc8:	4603      	mov	r3, r0
 8016fca:	2b00      	cmp	r3, #0
 8016fcc:	f000 8299 	beq.w	8017502 <LoRaMacMibSetRequestConfirm+0x6d6>
                {
                    return LORAMAC_STATUS_CRYPTO_ERROR;
 8016fd0:	2311      	movs	r3, #17
 8016fd2:	e2b0      	b.n	8017536 <LoRaMacMibSetRequestConfirm+0x70a>
                }
            }
            else
            {
                status = LORAMAC_STATUS_PARAMETER_INVALID;
 8016fd4:	2303      	movs	r3, #3
 8016fd6:	75fb      	strb	r3, [r7, #23]
            }
            break;
 8016fd8:	e293      	b.n	8017502 <LoRaMacMibSetRequestConfirm+0x6d6>
            break;
        }
#else /* USE_LRWAN_1_1_X_CRYPTO == 0 */
        case MIB_NWK_S_KEY:
        {
            if( mibSet->Param.NwkSKey != NULL )
 8016fda:	687b      	ldr	r3, [r7, #4]
 8016fdc:	685b      	ldr	r3, [r3, #4]
 8016fde:	2b00      	cmp	r3, #0
 8016fe0:	d00b      	beq.n	8016ffa <LoRaMacMibSetRequestConfirm+0x1ce>
            {
                if( LORAMAC_CRYPTO_SUCCESS != LoRaMacCryptoSetKey( NWK_S_KEY, mibSet->Param.NwkSKey ) )
 8016fe2:	687b      	ldr	r3, [r7, #4]
 8016fe4:	685b      	ldr	r3, [r3, #4]
 8016fe6:	4619      	mov	r1, r3
 8016fe8:	2002      	movs	r0, #2
 8016fea:	f002 f80d 	bl	8019008 <LoRaMacCryptoSetKey>
 8016fee:	4603      	mov	r3, r0
 8016ff0:	2b00      	cmp	r3, #0
 8016ff2:	f000 8288 	beq.w	8017506 <LoRaMacMibSetRequestConfirm+0x6da>
                {
                    return LORAMAC_STATUS_CRYPTO_ERROR;
 8016ff6:	2311      	movs	r3, #17
 8016ff8:	e29d      	b.n	8017536 <LoRaMacMibSetRequestConfirm+0x70a>
                }
            }
            else
            {
                status = LORAMAC_STATUS_PARAMETER_INVALID;
 8016ffa:	2303      	movs	r3, #3
 8016ffc:	75fb      	strb	r3, [r7, #23]
            }
            break;
 8016ffe:	e282      	b.n	8017506 <LoRaMacMibSetRequestConfirm+0x6da>
        }
#endif /* USE_LRWAN_1_1_X_CRYPTO */
        case MIB_APP_S_KEY:
        {
            if( mibSet->Param.AppSKey != NULL )
 8017000:	687b      	ldr	r3, [r7, #4]
 8017002:	685b      	ldr	r3, [r3, #4]
 8017004:	2b00      	cmp	r3, #0
 8017006:	d00b      	beq.n	8017020 <LoRaMacMibSetRequestConfirm+0x1f4>
            {
                if( LORAMAC_CRYPTO_SUCCESS != LoRaMacCryptoSetKey( APP_S_KEY, mibSet->Param.AppSKey ) )
 8017008:	687b      	ldr	r3, [r7, #4]
 801700a:	685b      	ldr	r3, [r3, #4]
 801700c:	4619      	mov	r1, r3
 801700e:	2003      	movs	r0, #3
 8017010:	f001 fffa 	bl	8019008 <LoRaMacCryptoSetKey>
 8017014:	4603      	mov	r3, r0
 8017016:	2b00      	cmp	r3, #0
 8017018:	f000 8277 	beq.w	801750a <LoRaMacMibSetRequestConfirm+0x6de>
                {
                    return LORAMAC_STATUS_CRYPTO_ERROR;
 801701c:	2311      	movs	r3, #17
 801701e:	e28a      	b.n	8017536 <LoRaMacMibSetRequestConfirm+0x70a>
                }
            }
            else
            {
                status = LORAMAC_STATUS_PARAMETER_INVALID;
 8017020:	2303      	movs	r3, #3
 8017022:	75fb      	strb	r3, [r7, #23]
            }
            break;
 8017024:	e271      	b.n	801750a <LoRaMacMibSetRequestConfirm+0x6de>
        }
        case MIB_MC_KE_KEY:
        {
            if( mibSet->Param.McKEKey != NULL )
 8017026:	687b      	ldr	r3, [r7, #4]
 8017028:	685b      	ldr	r3, [r3, #4]
 801702a:	2b00      	cmp	r3, #0
 801702c:	d00b      	beq.n	8017046 <LoRaMacMibSetRequestConfirm+0x21a>
            {
                if( LORAMAC_CRYPTO_SUCCESS != LoRaMacCryptoSetKey( MC_KE_KEY, mibSet->Param.McKEKey ) )
 801702e:	687b      	ldr	r3, [r7, #4]
 8017030:	685b      	ldr	r3, [r3, #4]
 8017032:	4619      	mov	r1, r3
 8017034:	207f      	movs	r0, #127	; 0x7f
 8017036:	f001 ffe7 	bl	8019008 <LoRaMacCryptoSetKey>
 801703a:	4603      	mov	r3, r0
 801703c:	2b00      	cmp	r3, #0
 801703e:	f000 8266 	beq.w	801750e <LoRaMacMibSetRequestConfirm+0x6e2>
                {
                    return LORAMAC_STATUS_CRYPTO_ERROR;
 8017042:	2311      	movs	r3, #17
 8017044:	e277      	b.n	8017536 <LoRaMacMibSetRequestConfirm+0x70a>
                }
            }
            else
            {
                status = LORAMAC_STATUS_PARAMETER_INVALID;
 8017046:	2303      	movs	r3, #3
 8017048:	75fb      	strb	r3, [r7, #23]
            }
            break;
 801704a:	e260      	b.n	801750e <LoRaMacMibSetRequestConfirm+0x6e2>
        }
        case MIB_MC_KEY_0:
        {
            if( mibSet->Param.McKey0 != NULL )
 801704c:	687b      	ldr	r3, [r7, #4]
 801704e:	685b      	ldr	r3, [r3, #4]
 8017050:	2b00      	cmp	r3, #0
 8017052:	d00b      	beq.n	801706c <LoRaMacMibSetRequestConfirm+0x240>
            {
                if( LORAMAC_CRYPTO_SUCCESS != LoRaMacCryptoSetKey( MC_KEY_0, mibSet->Param.McKey0 ) )
 8017054:	687b      	ldr	r3, [r7, #4]
 8017056:	685b      	ldr	r3, [r3, #4]
 8017058:	4619      	mov	r1, r3
 801705a:	2080      	movs	r0, #128	; 0x80
 801705c:	f001 ffd4 	bl	8019008 <LoRaMacCryptoSetKey>
 8017060:	4603      	mov	r3, r0
 8017062:	2b00      	cmp	r3, #0
 8017064:	f000 8255 	beq.w	8017512 <LoRaMacMibSetRequestConfirm+0x6e6>
                {
                    return LORAMAC_STATUS_CRYPTO_ERROR;
 8017068:	2311      	movs	r3, #17
 801706a:	e264      	b.n	8017536 <LoRaMacMibSetRequestConfirm+0x70a>
                }
            }
            else
            {
                status = LORAMAC_STATUS_PARAMETER_INVALID;
 801706c:	2303      	movs	r3, #3
 801706e:	75fb      	strb	r3, [r7, #23]
            }
            break;
 8017070:	e24f      	b.n	8017512 <LoRaMacMibSetRequestConfirm+0x6e6>
        }
        case MIB_MC_APP_S_KEY_0:
        {
            if( mibSet->Param.McAppSKey0 != NULL )
 8017072:	687b      	ldr	r3, [r7, #4]
 8017074:	685b      	ldr	r3, [r3, #4]
 8017076:	2b00      	cmp	r3, #0
 8017078:	d00b      	beq.n	8017092 <LoRaMacMibSetRequestConfirm+0x266>
            {
                if( LORAMAC_CRYPTO_SUCCESS != LoRaMacCryptoSetKey( MC_APP_S_KEY_0, mibSet->Param.McAppSKey0 ) )
 801707a:	687b      	ldr	r3, [r7, #4]
 801707c:	685b      	ldr	r3, [r3, #4]
 801707e:	4619      	mov	r1, r3
 8017080:	2081      	movs	r0, #129	; 0x81
 8017082:	f001 ffc1 	bl	8019008 <LoRaMacCryptoSetKey>
 8017086:	4603      	mov	r3, r0
 8017088:	2b00      	cmp	r3, #0
 801708a:	f000 8244 	beq.w	8017516 <LoRaMacMibSetRequestConfirm+0x6ea>
                {
                    return LORAMAC_STATUS_CRYPTO_ERROR;
 801708e:	2311      	movs	r3, #17
 8017090:	e251      	b.n	8017536 <LoRaMacMibSetRequestConfirm+0x70a>
                }
            }
            else
            {
                status = LORAMAC_STATUS_PARAMETER_INVALID;
 8017092:	2303      	movs	r3, #3
 8017094:	75fb      	strb	r3, [r7, #23]
            }
            break;
 8017096:	e23e      	b.n	8017516 <LoRaMacMibSetRequestConfirm+0x6ea>
        }
        case MIB_MC_NWK_S_KEY_0:
        {
            if( mibSet->Param.McNwkSKey0 != NULL )
 8017098:	687b      	ldr	r3, [r7, #4]
 801709a:	685b      	ldr	r3, [r3, #4]
 801709c:	2b00      	cmp	r3, #0
 801709e:	d00b      	beq.n	80170b8 <LoRaMacMibSetRequestConfirm+0x28c>
            {
                if( LORAMAC_CRYPTO_SUCCESS != LoRaMacCryptoSetKey( MC_NWK_S_KEY_0, mibSet->Param.McNwkSKey0 ) )
 80170a0:	687b      	ldr	r3, [r7, #4]
 80170a2:	685b      	ldr	r3, [r3, #4]
 80170a4:	4619      	mov	r1, r3
 80170a6:	2082      	movs	r0, #130	; 0x82
 80170a8:	f001 ffae 	bl	8019008 <LoRaMacCryptoSetKey>
 80170ac:	4603      	mov	r3, r0
 80170ae:	2b00      	cmp	r3, #0
 80170b0:	f000 8233 	beq.w	801751a <LoRaMacMibSetRequestConfirm+0x6ee>
                {
                    return LORAMAC_STATUS_CRYPTO_ERROR;
 80170b4:	2311      	movs	r3, #17
 80170b6:	e23e      	b.n	8017536 <LoRaMacMibSetRequestConfirm+0x70a>
                }
            }
            else
            {
                status = LORAMAC_STATUS_PARAMETER_INVALID;
 80170b8:	2303      	movs	r3, #3
 80170ba:	75fb      	strb	r3, [r7, #23]
            }
            break;
 80170bc:	e22d      	b.n	801751a <LoRaMacMibSetRequestConfirm+0x6ee>
            break;
        }
#endif /* LORAMAC_MAX_MC_CTX > 1 */
        case MIB_PUBLIC_NETWORK:
        {
            MacCtx.NvmCtx->PublicNetwork = mibSet->Param.EnablePublicNetwork;
 80170be:	4b1c      	ldr	r3, [pc, #112]	; (8017130 <LoRaMacMibSetRequestConfirm+0x304>)
 80170c0:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 80170c4:	687a      	ldr	r2, [r7, #4]
 80170c6:	7912      	ldrb	r2, [r2, #4]
 80170c8:	f883 207d 	strb.w	r2, [r3, #125]	; 0x7d
            Radio.SetPublicNetwork( MacCtx.NvmCtx->PublicNetwork );
 80170cc:	4b19      	ldr	r3, [pc, #100]	; (8017134 <LoRaMacMibSetRequestConfirm+0x308>)
 80170ce:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80170d0:	4a17      	ldr	r2, [pc, #92]	; (8017130 <LoRaMacMibSetRequestConfirm+0x304>)
 80170d2:	f8d2 2484 	ldr.w	r2, [r2, #1156]	; 0x484
 80170d6:	f892 207d 	ldrb.w	r2, [r2, #125]	; 0x7d
 80170da:	4610      	mov	r0, r2
 80170dc:	4798      	blx	r3
            /* ST_WORAROUND_BEGIN: Required to avoid keeping the radio active after init */
            Radio.Sleep( );
 80170de:	4b15      	ldr	r3, [pc, #84]	; (8017134 <LoRaMacMibSetRequestConfirm+0x308>)
 80170e0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80170e2:	4798      	blx	r3
            /* ST_WORKAROUND_END */
            break;
 80170e4:	e222      	b.n	801752c <LoRaMacMibSetRequestConfirm+0x700>
        }
        case MIB_REPEATER_SUPPORT:
        {
            MacCtx.NvmCtx->RepeaterSupport = mibSet->Param.EnableRepeaterSupport;
 80170e6:	4b12      	ldr	r3, [pc, #72]	; (8017130 <LoRaMacMibSetRequestConfirm+0x304>)
 80170e8:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 80170ec:	687a      	ldr	r2, [r7, #4]
 80170ee:	7912      	ldrb	r2, [r2, #4]
 80170f0:	f883 20ca 	strb.w	r2, [r3, #202]	; 0xca
            break;
 80170f4:	e21a      	b.n	801752c <LoRaMacMibSetRequestConfirm+0x700>
        }
        case MIB_RX2_CHANNEL:
        {
            verify.DatarateParams.Datarate = mibSet->Param.Rx2Channel.Datarate;
 80170f6:	687b      	ldr	r3, [r7, #4]
 80170f8:	7a1b      	ldrb	r3, [r3, #8]
 80170fa:	b25b      	sxtb	r3, r3
 80170fc:	723b      	strb	r3, [r7, #8]
            verify.DatarateParams.DownlinkDwellTime = MacCtx.NvmCtx->MacParams.DownlinkDwellTime;
 80170fe:	4b0c      	ldr	r3, [pc, #48]	; (8017130 <LoRaMacMibSetRequestConfirm+0x304>)
 8017100:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8017104:	f893 30b9 	ldrb.w	r3, [r3, #185]	; 0xb9
 8017108:	727b      	strb	r3, [r7, #9]
            /* ST_WORAROUND_BEGIN: Check also the Rx Frequency parameter */
            if( RegionVerify( MacCtx.NvmCtx->Region, &verify, PHY_RX_DR ) != true )
 801710a:	4b09      	ldr	r3, [pc, #36]	; (8017130 <LoRaMacMibSetRequestConfirm+0x304>)
 801710c:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8017110:	781b      	ldrb	r3, [r3, #0]
 8017112:	f107 0108 	add.w	r1, r7, #8
 8017116:	2207      	movs	r2, #7
 8017118:	4618      	mov	r0, r3
 801711a:	f002 fdbc 	bl	8019c96 <RegionVerify>
 801711e:	4603      	mov	r3, r0
 8017120:	f083 0301 	eor.w	r3, r3, #1
 8017124:	b2db      	uxtb	r3, r3
 8017126:	2b00      	cmp	r3, #0
 8017128:	d006      	beq.n	8017138 <LoRaMacMibSetRequestConfirm+0x30c>
            {
                status = LORAMAC_STATUS_PARAMETER_INVALID;
 801712a:	2303      	movs	r3, #3
 801712c:	75fb      	strb	r3, [r7, #23]
                {
                    MacCtx.NvmCtx->MacParams.Rx2Channel = mibSet->Param.Rx2Channel;
                }
            }
            /* ST_WORKAROUND_END */
            break;
 801712e:	e1fd      	b.n	801752c <LoRaMacMibSetRequestConfirm+0x700>
 8017130:	20000be0 	.word	0x20000be0
 8017134:	0802683c 	.word	0x0802683c
                verify.Frequency = mibSet->Param.Rx2Channel.Frequency;
 8017138:	687b      	ldr	r3, [r7, #4]
 801713a:	685b      	ldr	r3, [r3, #4]
 801713c:	60bb      	str	r3, [r7, #8]
                if( RegionVerify( MacCtx.NvmCtx->Region, &verify, PHY_FREQUENCY ) != true )
 801713e:	4bc1      	ldr	r3, [pc, #772]	; (8017444 <LoRaMacMibSetRequestConfirm+0x618>)
 8017140:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8017144:	781b      	ldrb	r3, [r3, #0]
 8017146:	f107 0108 	add.w	r1, r7, #8
 801714a:	2200      	movs	r2, #0
 801714c:	4618      	mov	r0, r3
 801714e:	f002 fda2 	bl	8019c96 <RegionVerify>
 8017152:	4603      	mov	r3, r0
 8017154:	f083 0301 	eor.w	r3, r3, #1
 8017158:	b2db      	uxtb	r3, r3
 801715a:	2b00      	cmp	r3, #0
 801715c:	d002      	beq.n	8017164 <LoRaMacMibSetRequestConfirm+0x338>
                    status = LORAMAC_STATUS_PARAMETER_INVALID;
 801715e:	2303      	movs	r3, #3
 8017160:	75fb      	strb	r3, [r7, #23]
            break;
 8017162:	e1e3      	b.n	801752c <LoRaMacMibSetRequestConfirm+0x700>
                    MacCtx.NvmCtx->MacParams.Rx2Channel = mibSet->Param.Rx2Channel;
 8017164:	4bb7      	ldr	r3, [pc, #732]	; (8017444 <LoRaMacMibSetRequestConfirm+0x618>)
 8017166:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 801716a:	687a      	ldr	r2, [r7, #4]
 801716c:	33a8      	adds	r3, #168	; 0xa8
 801716e:	3204      	adds	r2, #4
 8017170:	e892 0003 	ldmia.w	r2, {r0, r1}
 8017174:	e883 0003 	stmia.w	r3, {r0, r1}
            break;
 8017178:	e1d8      	b.n	801752c <LoRaMacMibSetRequestConfirm+0x700>
        }
        case MIB_RX2_DEFAULT_CHANNEL:
        {
            verify.DatarateParams.Datarate = mibSet->Param.Rx2Channel.Datarate;
 801717a:	687b      	ldr	r3, [r7, #4]
 801717c:	7a1b      	ldrb	r3, [r3, #8]
 801717e:	b25b      	sxtb	r3, r3
 8017180:	723b      	strb	r3, [r7, #8]
            verify.DatarateParams.DownlinkDwellTime = MacCtx.NvmCtx->MacParams.DownlinkDwellTime;
 8017182:	4bb0      	ldr	r3, [pc, #704]	; (8017444 <LoRaMacMibSetRequestConfirm+0x618>)
 8017184:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8017188:	f893 30b9 	ldrb.w	r3, [r3, #185]	; 0xb9
 801718c:	727b      	strb	r3, [r7, #9]

            if( RegionVerify( MacCtx.NvmCtx->Region, &verify, PHY_RX_DR ) == true )
 801718e:	4bad      	ldr	r3, [pc, #692]	; (8017444 <LoRaMacMibSetRequestConfirm+0x618>)
 8017190:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8017194:	781b      	ldrb	r3, [r3, #0]
 8017196:	f107 0108 	add.w	r1, r7, #8
 801719a:	2207      	movs	r2, #7
 801719c:	4618      	mov	r0, r3
 801719e:	f002 fd7a 	bl	8019c96 <RegionVerify>
 80171a2:	4603      	mov	r3, r0
 80171a4:	2b00      	cmp	r3, #0
 80171a6:	d00a      	beq.n	80171be <LoRaMacMibSetRequestConfirm+0x392>
            {
                MacCtx.NvmCtx->MacParamsDefaults.Rx2Channel = mibSet->Param.Rx2DefaultChannel;
 80171a8:	4ba6      	ldr	r3, [pc, #664]	; (8017444 <LoRaMacMibSetRequestConfirm+0x618>)
 80171aa:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 80171ae:	687a      	ldr	r2, [r7, #4]
 80171b0:	3328      	adds	r3, #40	; 0x28
 80171b2:	3204      	adds	r2, #4
 80171b4:	e892 0003 	ldmia.w	r2, {r0, r1}
 80171b8:	e883 0003 	stmia.w	r3, {r0, r1}
            }
            else
            {
                status = LORAMAC_STATUS_PARAMETER_INVALID;
            }
            break;
 80171bc:	e1b6      	b.n	801752c <LoRaMacMibSetRequestConfirm+0x700>
                status = LORAMAC_STATUS_PARAMETER_INVALID;
 80171be:	2303      	movs	r3, #3
 80171c0:	75fb      	strb	r3, [r7, #23]
            break;
 80171c2:	e1b3      	b.n	801752c <LoRaMacMibSetRequestConfirm+0x700>
        }
        case MIB_RXC_CHANNEL:
        {
            verify.DatarateParams.Datarate = mibSet->Param.RxCChannel.Datarate;
 80171c4:	687b      	ldr	r3, [r7, #4]
 80171c6:	7a1b      	ldrb	r3, [r3, #8]
 80171c8:	b25b      	sxtb	r3, r3
 80171ca:	723b      	strb	r3, [r7, #8]
            verify.DatarateParams.DownlinkDwellTime = MacCtx.NvmCtx->MacParams.DownlinkDwellTime;
 80171cc:	4b9d      	ldr	r3, [pc, #628]	; (8017444 <LoRaMacMibSetRequestConfirm+0x618>)
 80171ce:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 80171d2:	f893 30b9 	ldrb.w	r3, [r3, #185]	; 0xb9
 80171d6:	727b      	strb	r3, [r7, #9]

            if( RegionVerify( MacCtx.NvmCtx->Region, &verify, PHY_RX_DR ) == true )
 80171d8:	4b9a      	ldr	r3, [pc, #616]	; (8017444 <LoRaMacMibSetRequestConfirm+0x618>)
 80171da:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 80171de:	781b      	ldrb	r3, [r3, #0]
 80171e0:	f107 0108 	add.w	r1, r7, #8
 80171e4:	2207      	movs	r2, #7
 80171e6:	4618      	mov	r0, r3
 80171e8:	f002 fd55 	bl	8019c96 <RegionVerify>
 80171ec:	4603      	mov	r3, r0
 80171ee:	2b00      	cmp	r3, #0
 80171f0:	d01f      	beq.n	8017232 <LoRaMacMibSetRequestConfirm+0x406>
            {
                MacCtx.NvmCtx->MacParams.RxCChannel = mibSet->Param.RxCChannel;
 80171f2:	4b94      	ldr	r3, [pc, #592]	; (8017444 <LoRaMacMibSetRequestConfirm+0x618>)
 80171f4:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 80171f8:	687a      	ldr	r2, [r7, #4]
 80171fa:	33b0      	adds	r3, #176	; 0xb0
 80171fc:	3204      	adds	r2, #4
 80171fe:	e892 0003 	ldmia.w	r2, {r0, r1}
 8017202:	e883 0003 	stmia.w	r3, {r0, r1}

                if( ( MacCtx.NvmCtx->DeviceClass == CLASS_C ) && ( MacCtx.NvmCtx->NetworkActivation != ACTIVATION_TYPE_NONE ) )
 8017206:	4b8f      	ldr	r3, [pc, #572]	; (8017444 <LoRaMacMibSetRequestConfirm+0x618>)
 8017208:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 801720c:	f893 307c 	ldrb.w	r3, [r3, #124]	; 0x7c
 8017210:	2b02      	cmp	r3, #2
 8017212:	f040 8184 	bne.w	801751e <LoRaMacMibSetRequestConfirm+0x6f2>
 8017216:	4b8b      	ldr	r3, [pc, #556]	; (8017444 <LoRaMacMibSetRequestConfirm+0x618>)
 8017218:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 801721c:	f893 3164 	ldrb.w	r3, [r3, #356]	; 0x164
 8017220:	2b00      	cmp	r3, #0
 8017222:	f000 817c 	beq.w	801751e <LoRaMacMibSetRequestConfirm+0x6f2>
                {
                    // We can only compute the RX window parameters directly, if we are already
                    // in class c mode and joined. We cannot setup an RX window in case of any other
                    // class type.
                    // Set the radio into sleep mode in case we are still in RX mode
                    Radio.Sleep( );
 8017226:	4b88      	ldr	r3, [pc, #544]	; (8017448 <LoRaMacMibSetRequestConfirm+0x61c>)
 8017228:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801722a:	4798      	blx	r3

                    OpenContinuousRxCWindow( );
 801722c:	f7fe fafe 	bl	801582c <OpenContinuousRxCWindow>
            }
            else
            {
                status = LORAMAC_STATUS_PARAMETER_INVALID;
            }
            break;
 8017230:	e175      	b.n	801751e <LoRaMacMibSetRequestConfirm+0x6f2>
                status = LORAMAC_STATUS_PARAMETER_INVALID;
 8017232:	2303      	movs	r3, #3
 8017234:	75fb      	strb	r3, [r7, #23]
            break;
 8017236:	e172      	b.n	801751e <LoRaMacMibSetRequestConfirm+0x6f2>
        }
        case MIB_RXC_DEFAULT_CHANNEL:
        {
            verify.DatarateParams.Datarate = mibSet->Param.RxCChannel.Datarate;
 8017238:	687b      	ldr	r3, [r7, #4]
 801723a:	7a1b      	ldrb	r3, [r3, #8]
 801723c:	b25b      	sxtb	r3, r3
 801723e:	723b      	strb	r3, [r7, #8]
            verify.DatarateParams.DownlinkDwellTime = MacCtx.NvmCtx->MacParams.DownlinkDwellTime;
 8017240:	4b80      	ldr	r3, [pc, #512]	; (8017444 <LoRaMacMibSetRequestConfirm+0x618>)
 8017242:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8017246:	f893 30b9 	ldrb.w	r3, [r3, #185]	; 0xb9
 801724a:	727b      	strb	r3, [r7, #9]

            if( RegionVerify( MacCtx.NvmCtx->Region, &verify, PHY_RX_DR ) == true )
 801724c:	4b7d      	ldr	r3, [pc, #500]	; (8017444 <LoRaMacMibSetRequestConfirm+0x618>)
 801724e:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8017252:	781b      	ldrb	r3, [r3, #0]
 8017254:	f107 0108 	add.w	r1, r7, #8
 8017258:	2207      	movs	r2, #7
 801725a:	4618      	mov	r0, r3
 801725c:	f002 fd1b 	bl	8019c96 <RegionVerify>
 8017260:	4603      	mov	r3, r0
 8017262:	2b00      	cmp	r3, #0
 8017264:	d00a      	beq.n	801727c <LoRaMacMibSetRequestConfirm+0x450>
            {
                MacCtx.NvmCtx->MacParamsDefaults.RxCChannel = mibSet->Param.RxCDefaultChannel;
 8017266:	4b77      	ldr	r3, [pc, #476]	; (8017444 <LoRaMacMibSetRequestConfirm+0x618>)
 8017268:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 801726c:	687a      	ldr	r2, [r7, #4]
 801726e:	3330      	adds	r3, #48	; 0x30
 8017270:	3204      	adds	r2, #4
 8017272:	e892 0003 	ldmia.w	r2, {r0, r1}
 8017276:	e883 0003 	stmia.w	r3, {r0, r1}
            }
            else
            {
                status = LORAMAC_STATUS_PARAMETER_INVALID;
            }
            break;
 801727a:	e157      	b.n	801752c <LoRaMacMibSetRequestConfirm+0x700>
                status = LORAMAC_STATUS_PARAMETER_INVALID;
 801727c:	2303      	movs	r3, #3
 801727e:	75fb      	strb	r3, [r7, #23]
            break;
 8017280:	e154      	b.n	801752c <LoRaMacMibSetRequestConfirm+0x700>
        }
        case MIB_CHANNELS_DEFAULT_MASK:
        {
            chanMaskSet.ChannelsMaskIn = mibSet->Param.ChannelsDefaultMask;
 8017282:	687b      	ldr	r3, [r7, #4]
 8017284:	685b      	ldr	r3, [r3, #4]
 8017286:	60fb      	str	r3, [r7, #12]
            chanMaskSet.ChannelsMaskType = CHANNELS_DEFAULT_MASK;
 8017288:	2301      	movs	r3, #1
 801728a:	743b      	strb	r3, [r7, #16]

            if( RegionChanMaskSet( MacCtx.NvmCtx->Region, &chanMaskSet ) == false )
 801728c:	4b6d      	ldr	r3, [pc, #436]	; (8017444 <LoRaMacMibSetRequestConfirm+0x618>)
 801728e:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8017292:	781b      	ldrb	r3, [r3, #0]
 8017294:	f107 020c 	add.w	r2, r7, #12
 8017298:	4611      	mov	r1, r2
 801729a:	4618      	mov	r0, r3
 801729c:	f002 fd34 	bl	8019d08 <RegionChanMaskSet>
 80172a0:	4603      	mov	r3, r0
 80172a2:	f083 0301 	eor.w	r3, r3, #1
 80172a6:	b2db      	uxtb	r3, r3
 80172a8:	2b00      	cmp	r3, #0
 80172aa:	f000 813a 	beq.w	8017522 <LoRaMacMibSetRequestConfirm+0x6f6>
            {
                status = LORAMAC_STATUS_PARAMETER_INVALID;
 80172ae:	2303      	movs	r3, #3
 80172b0:	75fb      	strb	r3, [r7, #23]
            }
            break;
 80172b2:	e136      	b.n	8017522 <LoRaMacMibSetRequestConfirm+0x6f6>
        }
        case MIB_CHANNELS_MASK:
        {
            chanMaskSet.ChannelsMaskIn = mibSet->Param.ChannelsMask;
 80172b4:	687b      	ldr	r3, [r7, #4]
 80172b6:	685b      	ldr	r3, [r3, #4]
 80172b8:	60fb      	str	r3, [r7, #12]
            chanMaskSet.ChannelsMaskType = CHANNELS_MASK;
 80172ba:	2300      	movs	r3, #0
 80172bc:	743b      	strb	r3, [r7, #16]

            if( RegionChanMaskSet( MacCtx.NvmCtx->Region, &chanMaskSet ) == false )
 80172be:	4b61      	ldr	r3, [pc, #388]	; (8017444 <LoRaMacMibSetRequestConfirm+0x618>)
 80172c0:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 80172c4:	781b      	ldrb	r3, [r3, #0]
 80172c6:	f107 020c 	add.w	r2, r7, #12
 80172ca:	4611      	mov	r1, r2
 80172cc:	4618      	mov	r0, r3
 80172ce:	f002 fd1b 	bl	8019d08 <RegionChanMaskSet>
 80172d2:	4603      	mov	r3, r0
 80172d4:	f083 0301 	eor.w	r3, r3, #1
 80172d8:	b2db      	uxtb	r3, r3
 80172da:	2b00      	cmp	r3, #0
 80172dc:	f000 8123 	beq.w	8017526 <LoRaMacMibSetRequestConfirm+0x6fa>
            {
                status = LORAMAC_STATUS_PARAMETER_INVALID;
 80172e0:	2303      	movs	r3, #3
 80172e2:	75fb      	strb	r3, [r7, #23]
            }
            break;
 80172e4:	e11f      	b.n	8017526 <LoRaMacMibSetRequestConfirm+0x6fa>
        }
        case MIB_CHANNELS_NB_TRANS:
        {
            if( ( mibSet->Param.ChannelsNbTrans >= 1 ) &&
 80172e6:	687b      	ldr	r3, [r7, #4]
 80172e8:	791b      	ldrb	r3, [r3, #4]
 80172ea:	2b00      	cmp	r3, #0
 80172ec:	d00b      	beq.n	8017306 <LoRaMacMibSetRequestConfirm+0x4da>
                ( mibSet->Param.ChannelsNbTrans <= 15 ) )
 80172ee:	687b      	ldr	r3, [r7, #4]
 80172f0:	791b      	ldrb	r3, [r3, #4]
            if( ( mibSet->Param.ChannelsNbTrans >= 1 ) &&
 80172f2:	2b0f      	cmp	r3, #15
 80172f4:	d807      	bhi.n	8017306 <LoRaMacMibSetRequestConfirm+0x4da>
            {
                MacCtx.NvmCtx->MacParams.ChannelsNbTrans = mibSet->Param.ChannelsNbTrans;
 80172f6:	4b53      	ldr	r3, [pc, #332]	; (8017444 <LoRaMacMibSetRequestConfirm+0x618>)
 80172f8:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 80172fc:	687a      	ldr	r2, [r7, #4]
 80172fe:	7912      	ldrb	r2, [r2, #4]
 8017300:	f883 20a4 	strb.w	r2, [r3, #164]	; 0xa4
            }
            else
            {
                status = LORAMAC_STATUS_PARAMETER_INVALID;
            }
            break;
 8017304:	e112      	b.n	801752c <LoRaMacMibSetRequestConfirm+0x700>
                status = LORAMAC_STATUS_PARAMETER_INVALID;
 8017306:	2303      	movs	r3, #3
 8017308:	75fb      	strb	r3, [r7, #23]
            break;
 801730a:	e10f      	b.n	801752c <LoRaMacMibSetRequestConfirm+0x700>
        }
        case MIB_MAX_RX_WINDOW_DURATION:
        {
            MacCtx.NvmCtx->MacParams.MaxRxWindow = mibSet->Param.MaxRxWindow;
 801730c:	4b4d      	ldr	r3, [pc, #308]	; (8017444 <LoRaMacMibSetRequestConfirm+0x618>)
 801730e:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8017312:	687a      	ldr	r2, [r7, #4]
 8017314:	6852      	ldr	r2, [r2, #4]
 8017316:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
            break;
 801731a:	e107      	b.n	801752c <LoRaMacMibSetRequestConfirm+0x700>
        }
        case MIB_RECEIVE_DELAY_1:
        {
            MacCtx.NvmCtx->MacParams.ReceiveDelay1 = mibSet->Param.ReceiveDelay1;
 801731c:	4b49      	ldr	r3, [pc, #292]	; (8017444 <LoRaMacMibSetRequestConfirm+0x618>)
 801731e:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8017322:	687a      	ldr	r2, [r7, #4]
 8017324:	6852      	ldr	r2, [r2, #4]
 8017326:	f8c3 2094 	str.w	r2, [r3, #148]	; 0x94
            break;
 801732a:	e0ff      	b.n	801752c <LoRaMacMibSetRequestConfirm+0x700>
        }
        case MIB_RECEIVE_DELAY_2:
        {
            MacCtx.NvmCtx->MacParams.ReceiveDelay2 = mibSet->Param.ReceiveDelay2;
 801732c:	4b45      	ldr	r3, [pc, #276]	; (8017444 <LoRaMacMibSetRequestConfirm+0x618>)
 801732e:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8017332:	687a      	ldr	r2, [r7, #4]
 8017334:	6852      	ldr	r2, [r2, #4]
 8017336:	f8c3 2098 	str.w	r2, [r3, #152]	; 0x98
            break;
 801733a:	e0f7      	b.n	801752c <LoRaMacMibSetRequestConfirm+0x700>
        }
        case MIB_JOIN_ACCEPT_DELAY_1:
        {
            MacCtx.NvmCtx->MacParams.JoinAcceptDelay1 = mibSet->Param.JoinAcceptDelay1;
 801733c:	4b41      	ldr	r3, [pc, #260]	; (8017444 <LoRaMacMibSetRequestConfirm+0x618>)
 801733e:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8017342:	687a      	ldr	r2, [r7, #4]
 8017344:	6852      	ldr	r2, [r2, #4]
 8017346:	f8c3 209c 	str.w	r2, [r3, #156]	; 0x9c
            break;
 801734a:	e0ef      	b.n	801752c <LoRaMacMibSetRequestConfirm+0x700>
        }
        case MIB_JOIN_ACCEPT_DELAY_2:
        {
            MacCtx.NvmCtx->MacParams.JoinAcceptDelay2 = mibSet->Param.JoinAcceptDelay2;
 801734c:	4b3d      	ldr	r3, [pc, #244]	; (8017444 <LoRaMacMibSetRequestConfirm+0x618>)
 801734e:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8017352:	687a      	ldr	r2, [r7, #4]
 8017354:	6852      	ldr	r2, [r2, #4]
 8017356:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
            break;
 801735a:	e0e7      	b.n	801752c <LoRaMacMibSetRequestConfirm+0x700>
        }
        case MIB_CHANNELS_DEFAULT_DATARATE:
        {
            verify.DatarateParams.Datarate = mibSet->Param.ChannelsDefaultDatarate;
 801735c:	687b      	ldr	r3, [r7, #4]
 801735e:	f993 3004 	ldrsb.w	r3, [r3, #4]
 8017362:	723b      	strb	r3, [r7, #8]

            if( RegionVerify( MacCtx.NvmCtx->Region, &verify, PHY_DEF_TX_DR ) == true )
 8017364:	4b37      	ldr	r3, [pc, #220]	; (8017444 <LoRaMacMibSetRequestConfirm+0x618>)
 8017366:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 801736a:	781b      	ldrb	r3, [r3, #0]
 801736c:	f107 0108 	add.w	r1, r7, #8
 8017370:	2206      	movs	r2, #6
 8017372:	4618      	mov	r0, r3
 8017374:	f002 fc8f 	bl	8019c96 <RegionVerify>
 8017378:	4603      	mov	r3, r0
 801737a:	2b00      	cmp	r3, #0
 801737c:	d006      	beq.n	801738c <LoRaMacMibSetRequestConfirm+0x560>
            {
                MacCtx.NvmCtx->MacParamsDefaults.ChannelsDatarate = verify.DatarateParams.Datarate;
 801737e:	4b31      	ldr	r3, [pc, #196]	; (8017444 <LoRaMacMibSetRequestConfirm+0x618>)
 8017380:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8017384:	f997 2008 	ldrsb.w	r2, [r7, #8]
 8017388:	715a      	strb	r2, [r3, #5]
            }
            else
            {
                status = LORAMAC_STATUS_PARAMETER_INVALID;
            }
            break;
 801738a:	e0cf      	b.n	801752c <LoRaMacMibSetRequestConfirm+0x700>
                status = LORAMAC_STATUS_PARAMETER_INVALID;
 801738c:	2303      	movs	r3, #3
 801738e:	75fb      	strb	r3, [r7, #23]
            break;
 8017390:	e0cc      	b.n	801752c <LoRaMacMibSetRequestConfirm+0x700>
        }
        case MIB_CHANNELS_DATARATE:
        {
            verify.DatarateParams.Datarate = mibSet->Param.ChannelsDatarate;
 8017392:	687b      	ldr	r3, [r7, #4]
 8017394:	f993 3004 	ldrsb.w	r3, [r3, #4]
 8017398:	723b      	strb	r3, [r7, #8]
            verify.DatarateParams.UplinkDwellTime = MacCtx.NvmCtx->MacParams.UplinkDwellTime;
 801739a:	4b2a      	ldr	r3, [pc, #168]	; (8017444 <LoRaMacMibSetRequestConfirm+0x618>)
 801739c:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 80173a0:	f893 30b8 	ldrb.w	r3, [r3, #184]	; 0xb8
 80173a4:	72bb      	strb	r3, [r7, #10]

            if( RegionVerify( MacCtx.NvmCtx->Region, &verify, PHY_TX_DR ) == true )
 80173a6:	4b27      	ldr	r3, [pc, #156]	; (8017444 <LoRaMacMibSetRequestConfirm+0x618>)
 80173a8:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 80173ac:	781b      	ldrb	r3, [r3, #0]
 80173ae:	f107 0108 	add.w	r1, r7, #8
 80173b2:	2205      	movs	r2, #5
 80173b4:	4618      	mov	r0, r3
 80173b6:	f002 fc6e 	bl	8019c96 <RegionVerify>
 80173ba:	4603      	mov	r3, r0
 80173bc:	2b00      	cmp	r3, #0
 80173be:	d007      	beq.n	80173d0 <LoRaMacMibSetRequestConfirm+0x5a4>
            {
                MacCtx.NvmCtx->MacParams.ChannelsDatarate = verify.DatarateParams.Datarate;
 80173c0:	4b20      	ldr	r3, [pc, #128]	; (8017444 <LoRaMacMibSetRequestConfirm+0x618>)
 80173c2:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 80173c6:	f997 2008 	ldrsb.w	r2, [r7, #8]
 80173ca:	f883 2085 	strb.w	r2, [r3, #133]	; 0x85
            }
            else
            {
                status = LORAMAC_STATUS_PARAMETER_INVALID;
            }
            break;
 80173ce:	e0ad      	b.n	801752c <LoRaMacMibSetRequestConfirm+0x700>
                status = LORAMAC_STATUS_PARAMETER_INVALID;
 80173d0:	2303      	movs	r3, #3
 80173d2:	75fb      	strb	r3, [r7, #23]
            break;
 80173d4:	e0aa      	b.n	801752c <LoRaMacMibSetRequestConfirm+0x700>
        }
        case MIB_CHANNELS_DEFAULT_TX_POWER:
        {
            verify.TxPower = mibSet->Param.ChannelsDefaultTxPower;
 80173d6:	687b      	ldr	r3, [r7, #4]
 80173d8:	f993 3004 	ldrsb.w	r3, [r3, #4]
 80173dc:	723b      	strb	r3, [r7, #8]

            if( RegionVerify( MacCtx.NvmCtx->Region, &verify, PHY_DEF_TX_POWER ) == true )
 80173de:	4b19      	ldr	r3, [pc, #100]	; (8017444 <LoRaMacMibSetRequestConfirm+0x618>)
 80173e0:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 80173e4:	781b      	ldrb	r3, [r3, #0]
 80173e6:	f107 0108 	add.w	r1, r7, #8
 80173ea:	220a      	movs	r2, #10
 80173ec:	4618      	mov	r0, r3
 80173ee:	f002 fc52 	bl	8019c96 <RegionVerify>
 80173f2:	4603      	mov	r3, r0
 80173f4:	2b00      	cmp	r3, #0
 80173f6:	d006      	beq.n	8017406 <LoRaMacMibSetRequestConfirm+0x5da>
            {
                MacCtx.NvmCtx->MacParamsDefaults.ChannelsTxPower = verify.TxPower;
 80173f8:	4b12      	ldr	r3, [pc, #72]	; (8017444 <LoRaMacMibSetRequestConfirm+0x618>)
 80173fa:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 80173fe:	f997 2008 	ldrsb.w	r2, [r7, #8]
 8017402:	711a      	strb	r2, [r3, #4]
            }
            else
            {
                status = LORAMAC_STATUS_PARAMETER_INVALID;
            }
            break;
 8017404:	e092      	b.n	801752c <LoRaMacMibSetRequestConfirm+0x700>
                status = LORAMAC_STATUS_PARAMETER_INVALID;
 8017406:	2303      	movs	r3, #3
 8017408:	75fb      	strb	r3, [r7, #23]
            break;
 801740a:	e08f      	b.n	801752c <LoRaMacMibSetRequestConfirm+0x700>
        }
        case MIB_CHANNELS_TX_POWER:
        {
            verify.TxPower = mibSet->Param.ChannelsTxPower;
 801740c:	687b      	ldr	r3, [r7, #4]
 801740e:	f993 3004 	ldrsb.w	r3, [r3, #4]
 8017412:	723b      	strb	r3, [r7, #8]

            if( RegionVerify( MacCtx.NvmCtx->Region, &verify, PHY_TX_POWER ) == true )
 8017414:	4b0b      	ldr	r3, [pc, #44]	; (8017444 <LoRaMacMibSetRequestConfirm+0x618>)
 8017416:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 801741a:	781b      	ldrb	r3, [r3, #0]
 801741c:	f107 0108 	add.w	r1, r7, #8
 8017420:	2209      	movs	r2, #9
 8017422:	4618      	mov	r0, r3
 8017424:	f002 fc37 	bl	8019c96 <RegionVerify>
 8017428:	4603      	mov	r3, r0
 801742a:	2b00      	cmp	r3, #0
 801742c:	d007      	beq.n	801743e <LoRaMacMibSetRequestConfirm+0x612>
            {
                MacCtx.NvmCtx->MacParams.ChannelsTxPower = verify.TxPower;
 801742e:	4b05      	ldr	r3, [pc, #20]	; (8017444 <LoRaMacMibSetRequestConfirm+0x618>)
 8017430:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8017434:	f997 2008 	ldrsb.w	r2, [r7, #8]
 8017438:	f883 2084 	strb.w	r2, [r3, #132]	; 0x84
            }
            else
            {
                status = LORAMAC_STATUS_PARAMETER_INVALID;
            }
            break;
 801743c:	e076      	b.n	801752c <LoRaMacMibSetRequestConfirm+0x700>
                status = LORAMAC_STATUS_PARAMETER_INVALID;
 801743e:	2303      	movs	r3, #3
 8017440:	75fb      	strb	r3, [r7, #23]
            break;
 8017442:	e073      	b.n	801752c <LoRaMacMibSetRequestConfirm+0x700>
 8017444:	20000be0 	.word	0x20000be0
 8017448:	0802683c 	.word	0x0802683c
        }
        case MIB_SYSTEM_MAX_RX_ERROR:
        {
            MacCtx.NvmCtx->MacParams.SystemMaxRxError = MacCtx.NvmCtx->MacParamsDefaults.SystemMaxRxError = mibSet->Param.SystemMaxRxError;
 801744c:	4b3c      	ldr	r3, [pc, #240]	; (8017540 <LoRaMacMibSetRequestConfirm+0x714>)
 801744e:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8017452:	687a      	ldr	r2, [r7, #4]
 8017454:	6852      	ldr	r2, [r2, #4]
 8017456:	609a      	str	r2, [r3, #8]
 8017458:	4a39      	ldr	r2, [pc, #228]	; (8017540 <LoRaMacMibSetRequestConfirm+0x714>)
 801745a:	f8d2 2484 	ldr.w	r2, [r2, #1156]	; 0x484
 801745e:	689b      	ldr	r3, [r3, #8]
 8017460:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
            break;
 8017464:	e062      	b.n	801752c <LoRaMacMibSetRequestConfirm+0x700>
        }
        case MIB_MIN_RX_SYMBOLS:
        {
            MacCtx.NvmCtx->MacParams.MinRxSymbols = MacCtx.NvmCtx->MacParamsDefaults.MinRxSymbols = mibSet->Param.MinRxSymbols;
 8017466:	4b36      	ldr	r3, [pc, #216]	; (8017540 <LoRaMacMibSetRequestConfirm+0x714>)
 8017468:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 801746c:	687a      	ldr	r2, [r7, #4]
 801746e:	7912      	ldrb	r2, [r2, #4]
 8017470:	731a      	strb	r2, [r3, #12]
 8017472:	4a33      	ldr	r2, [pc, #204]	; (8017540 <LoRaMacMibSetRequestConfirm+0x714>)
 8017474:	f8d2 2484 	ldr.w	r2, [r2, #1156]	; 0x484
 8017478:	7b1b      	ldrb	r3, [r3, #12]
 801747a:	f882 308c 	strb.w	r3, [r2, #140]	; 0x8c
            break;
 801747e:	e055      	b.n	801752c <LoRaMacMibSetRequestConfirm+0x700>
        }
        case MIB_ANTENNA_GAIN:
        {
            MacCtx.NvmCtx->MacParams.AntennaGain = mibSet->Param.AntennaGain;
 8017480:	4b2f      	ldr	r3, [pc, #188]	; (8017540 <LoRaMacMibSetRequestConfirm+0x714>)
 8017482:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8017486:	687a      	ldr	r2, [r7, #4]
 8017488:	6852      	ldr	r2, [r2, #4]
 801748a:	f8c3 20c0 	str.w	r2, [r3, #192]	; 0xc0
            break;
 801748e:	e04d      	b.n	801752c <LoRaMacMibSetRequestConfirm+0x700>
        }
        case MIB_DEFAULT_ANTENNA_GAIN:
        {
            MacCtx.NvmCtx->MacParamsDefaults.AntennaGain = mibSet->Param.DefaultAntennaGain;
 8017490:	4b2b      	ldr	r3, [pc, #172]	; (8017540 <LoRaMacMibSetRequestConfirm+0x714>)
 8017492:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8017496:	687a      	ldr	r2, [r7, #4]
 8017498:	6852      	ldr	r2, [r2, #4]
 801749a:	641a      	str	r2, [r3, #64]	; 0x40
            break;
 801749c:	e046      	b.n	801752c <LoRaMacMibSetRequestConfirm+0x700>
        }
        case MIB_NVM_CTXS:
        {
            if( mibSet->Param.Contexts != 0 )
 801749e:	687b      	ldr	r3, [r7, #4]
 80174a0:	685b      	ldr	r3, [r3, #4]
 80174a2:	2b00      	cmp	r3, #0
 80174a4:	d007      	beq.n	80174b6 <LoRaMacMibSetRequestConfirm+0x68a>
            {
                status = RestoreCtxs( mibSet->Param.Contexts );
 80174a6:	687b      	ldr	r3, [r7, #4]
 80174a8:	685b      	ldr	r3, [r3, #4]
 80174aa:	4618      	mov	r0, r3
 80174ac:	f7fe fc8a 	bl	8015dc4 <RestoreCtxs>
 80174b0:	4603      	mov	r3, r0
 80174b2:	75fb      	strb	r3, [r7, #23]
            }
            else
            {
                status = LORAMAC_STATUS_PARAMETER_INVALID;
            }
            break;
 80174b4:	e03a      	b.n	801752c <LoRaMacMibSetRequestConfirm+0x700>
                status = LORAMAC_STATUS_PARAMETER_INVALID;
 80174b6:	2303      	movs	r3, #3
 80174b8:	75fb      	strb	r3, [r7, #23]
            break;
 80174ba:	e037      	b.n	801752c <LoRaMacMibSetRequestConfirm+0x700>
        }
        case MIB_ABP_LORAWAN_VERSION:
        {
            if( mibSet->Param.AbpLrWanVersion.Fields.Minor <= 1 )
 80174bc:	687b      	ldr	r3, [r7, #4]
 80174be:	799b      	ldrb	r3, [r3, #6]
 80174c0:	2b01      	cmp	r3, #1
 80174c2:	d80f      	bhi.n	80174e4 <LoRaMacMibSetRequestConfirm+0x6b8>
            {
                MacCtx.NvmCtx->Version = mibSet->Param.AbpLrWanVersion;
 80174c4:	4b1e      	ldr	r3, [pc, #120]	; (8017540 <LoRaMacMibSetRequestConfirm+0x714>)
 80174c6:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 80174ca:	687a      	ldr	r2, [r7, #4]
 80174cc:	6852      	ldr	r2, [r2, #4]
 80174ce:	f8c3 2160 	str.w	r2, [r3, #352]	; 0x160

                if( LORAMAC_CRYPTO_SUCCESS != LoRaMacCryptoSetLrWanVersion( mibSet->Param.AbpLrWanVersion ) )
 80174d2:	687b      	ldr	r3, [r7, #4]
 80174d4:	6858      	ldr	r0, [r3, #4]
 80174d6:	f001 fcc7 	bl	8018e68 <LoRaMacCryptoSetLrWanVersion>
 80174da:	4603      	mov	r3, r0
 80174dc:	2b00      	cmp	r3, #0
 80174de:	d024      	beq.n	801752a <LoRaMacMibSetRequestConfirm+0x6fe>
                {
                    return LORAMAC_STATUS_CRYPTO_ERROR;
 80174e0:	2311      	movs	r3, #17
 80174e2:	e028      	b.n	8017536 <LoRaMacMibSetRequestConfirm+0x70a>
                }
            }
            else
            {
                status = LORAMAC_STATUS_PARAMETER_INVALID;
 80174e4:	2303      	movs	r3, #3
 80174e6:	75fb      	strb	r3, [r7, #23]
            }
            break;
 80174e8:	e01f      	b.n	801752a <LoRaMacMibSetRequestConfirm+0x6fe>
        }
        default:
        {
            status = LoRaMacMibClassBSetRequestConfirm( mibSet );
 80174ea:	6878      	ldr	r0, [r7, #4]
 80174ec:	f000 fc07 	bl	8017cfe <LoRaMacMibClassBSetRequestConfirm>
 80174f0:	4603      	mov	r3, r0
 80174f2:	75fb      	strb	r3, [r7, #23]
            break;
 80174f4:	e01a      	b.n	801752c <LoRaMacMibSetRequestConfirm+0x700>
            break;
 80174f6:	bf00      	nop
 80174f8:	e018      	b.n	801752c <LoRaMacMibSetRequestConfirm+0x700>
            break;
 80174fa:	bf00      	nop
 80174fc:	e016      	b.n	801752c <LoRaMacMibSetRequestConfirm+0x700>
            break;
 80174fe:	bf00      	nop
 8017500:	e014      	b.n	801752c <LoRaMacMibSetRequestConfirm+0x700>
            break;
 8017502:	bf00      	nop
 8017504:	e012      	b.n	801752c <LoRaMacMibSetRequestConfirm+0x700>
            break;
 8017506:	bf00      	nop
 8017508:	e010      	b.n	801752c <LoRaMacMibSetRequestConfirm+0x700>
            break;
 801750a:	bf00      	nop
 801750c:	e00e      	b.n	801752c <LoRaMacMibSetRequestConfirm+0x700>
            break;
 801750e:	bf00      	nop
 8017510:	e00c      	b.n	801752c <LoRaMacMibSetRequestConfirm+0x700>
            break;
 8017512:	bf00      	nop
 8017514:	e00a      	b.n	801752c <LoRaMacMibSetRequestConfirm+0x700>
            break;
 8017516:	bf00      	nop
 8017518:	e008      	b.n	801752c <LoRaMacMibSetRequestConfirm+0x700>
            break;
 801751a:	bf00      	nop
 801751c:	e006      	b.n	801752c <LoRaMacMibSetRequestConfirm+0x700>
            break;
 801751e:	bf00      	nop
 8017520:	e004      	b.n	801752c <LoRaMacMibSetRequestConfirm+0x700>
            break;
 8017522:	bf00      	nop
 8017524:	e002      	b.n	801752c <LoRaMacMibSetRequestConfirm+0x700>
            break;
 8017526:	bf00      	nop
 8017528:	e000      	b.n	801752c <LoRaMacMibSetRequestConfirm+0x700>
            break;
 801752a:	bf00      	nop
        }
    }
    EventRegionNvmCtxChanged( );
 801752c:	f7fe fe51 	bl	80161d2 <EventRegionNvmCtxChanged>
    EventMacNvmCtxChanged( );
 8017530:	f7fe fe48 	bl	80161c4 <EventMacNvmCtxChanged>
    return status;
 8017534:	7dfb      	ldrb	r3, [r7, #23]
}
 8017536:	4618      	mov	r0, r3
 8017538:	3718      	adds	r7, #24
 801753a:	46bd      	mov	sp, r7
 801753c:	bd80      	pop	{r7, pc}
 801753e:	bf00      	nop
 8017540:	20000be0 	.word	0x20000be0

08017544 <LoRaMacMlmeRequest>:
    EventRegionNvmCtxChanged( );
    return LORAMAC_STATUS_OK;
}

LoRaMacStatus_t LoRaMacMlmeRequest( MlmeReq_t* mlmeRequest )
{
 8017544:	b590      	push	{r4, r7, lr}
 8017546:	b087      	sub	sp, #28
 8017548:	af00      	add	r7, sp, #0
 801754a:	6078      	str	r0, [r7, #4]
    LoRaMacStatus_t status = LORAMAC_STATUS_SERVICE_UNKNOWN;
 801754c:	2302      	movs	r3, #2
 801754e:	75fb      	strb	r3, [r7, #23]
    MlmeConfirmQueue_t queueElement;
    uint8_t macCmdPayload[2] = { 0x00, 0x00 };
 8017550:	2300      	movs	r3, #0
 8017552:	81bb      	strh	r3, [r7, #12]

    if( mlmeRequest == NULL )
 8017554:	687b      	ldr	r3, [r7, #4]
 8017556:	2b00      	cmp	r3, #0
 8017558:	d101      	bne.n	801755e <LoRaMacMlmeRequest+0x1a>
    {
        return LORAMAC_STATUS_PARAMETER_INVALID;
 801755a:	2303      	movs	r3, #3
 801755c:	e12d      	b.n	80177ba <LoRaMacMlmeRequest+0x276>
    }
    if( LoRaMacIsBusy( ) == true )
 801755e:	f7fe fe7f 	bl	8016260 <LoRaMacIsBusy>
 8017562:	4603      	mov	r3, r0
 8017564:	2b00      	cmp	r3, #0
 8017566:	d001      	beq.n	801756c <LoRaMacMlmeRequest+0x28>
    {
        return LORAMAC_STATUS_BUSY;
 8017568:	2301      	movs	r3, #1
 801756a:	e126      	b.n	80177ba <LoRaMacMlmeRequest+0x276>
    }
    if( LoRaMacConfirmQueueIsFull( ) == true )
 801756c:	f001 f93c 	bl	80187e8 <LoRaMacConfirmQueueIsFull>
 8017570:	4603      	mov	r3, r0
 8017572:	2b00      	cmp	r3, #0
 8017574:	d001      	beq.n	801757a <LoRaMacMlmeRequest+0x36>
    {
        return LORAMAC_STATUS_BUSY;
 8017576:	2301      	movs	r3, #1
 8017578:	e11f      	b.n	80177ba <LoRaMacMlmeRequest+0x276>
    }

    if( LoRaMacConfirmQueueGetCnt( ) == 0 )
 801757a:	f001 f929 	bl	80187d0 <LoRaMacConfirmQueueGetCnt>
 801757e:	4603      	mov	r3, r0
 8017580:	2b00      	cmp	r3, #0
 8017582:	d104      	bne.n	801758e <LoRaMacMlmeRequest+0x4a>
    {
        memset1( ( uint8_t* ) &MacCtx.MlmeConfirm, 0, sizeof( MacCtx.MlmeConfirm ) );
 8017584:	2214      	movs	r2, #20
 8017586:	2100      	movs	r1, #0
 8017588:	488e      	ldr	r0, [pc, #568]	; (80177c4 <LoRaMacMlmeRequest+0x280>)
 801758a:	f006 f889 	bl	801d6a0 <memset1>
    }
    MacCtx.MlmeConfirm.Status = LORAMAC_EVENT_INFO_STATUS_ERROR;
 801758e:	4b8e      	ldr	r3, [pc, #568]	; (80177c8 <LoRaMacMlmeRequest+0x284>)
 8017590:	2201      	movs	r2, #1
 8017592:	f883 2451 	strb.w	r2, [r3, #1105]	; 0x451

    MacCtx.MacFlags.Bits.MlmeReq = 1;
 8017596:	4a8c      	ldr	r2, [pc, #560]	; (80177c8 <LoRaMacMlmeRequest+0x284>)
 8017598:	f892 3481 	ldrb.w	r3, [r2, #1153]	; 0x481
 801759c:	f043 0304 	orr.w	r3, r3, #4
 80175a0:	f882 3481 	strb.w	r3, [r2, #1153]	; 0x481
    queueElement.Request = mlmeRequest->Type;
 80175a4:	687b      	ldr	r3, [r7, #4]
 80175a6:	781b      	ldrb	r3, [r3, #0]
 80175a8:	743b      	strb	r3, [r7, #16]
    queueElement.Status = LORAMAC_EVENT_INFO_STATUS_ERROR;
 80175aa:	2301      	movs	r3, #1
 80175ac:	747b      	strb	r3, [r7, #17]
    queueElement.RestrictCommonReadyToHandle = false;
 80175ae:	2300      	movs	r3, #0
 80175b0:	74fb      	strb	r3, [r7, #19]

    switch( mlmeRequest->Type )
 80175b2:	687b      	ldr	r3, [r7, #4]
 80175b4:	781b      	ldrb	r3, [r3, #0]
 80175b6:	3b01      	subs	r3, #1
 80175b8:	2b0d      	cmp	r3, #13
 80175ba:	f200 80d2 	bhi.w	8017762 <LoRaMacMlmeRequest+0x21e>
 80175be:	a201      	add	r2, pc, #4	; (adr r2, 80175c4 <LoRaMacMlmeRequest+0x80>)
 80175c0:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80175c4:	080175fd 	.word	0x080175fd
 80175c8:	08017763 	.word	0x08017763
 80175cc:	08017763 	.word	0x08017763
 80175d0:	0801766f 	.word	0x0801766f
 80175d4:	0801768d 	.word	0x0801768d
 80175d8:	0801769d 	.word	0x0801769d
 80175dc:	08017763 	.word	0x08017763
 80175e0:	08017763 	.word	0x08017763
 80175e4:	08017763 	.word	0x08017763
 80175e8:	080176b5 	.word	0x080176b5
 80175ec:	08017763 	.word	0x08017763
 80175f0:	08017737 	.word	0x08017737
 80175f4:	080176d3 	.word	0x080176d3
 80175f8:	08017719 	.word	0x08017719
    {
        case MLME_JOIN:
        {
            if( ( MacCtx.MacState & LORAMAC_TX_DELAYED ) == LORAMAC_TX_DELAYED )
 80175fc:	4b72      	ldr	r3, [pc, #456]	; (80177c8 <LoRaMacMlmeRequest+0x284>)
 80175fe:	f8d3 3340 	ldr.w	r3, [r3, #832]	; 0x340
 8017602:	f003 0320 	and.w	r3, r3, #32
 8017606:	2b00      	cmp	r3, #0
 8017608:	d001      	beq.n	801760e <LoRaMacMlmeRequest+0xca>
            {
                return LORAMAC_STATUS_BUSY;
 801760a:	2301      	movs	r3, #1
 801760c:	e0d5      	b.n	80177ba <LoRaMacMlmeRequest+0x276>
            }

            ResetMacParameters( );
 801760e:	f7fd fffd 	bl	801560c <ResetMacParameters>

            MacCtx.NvmCtx->MacParams.ChannelsDatarate = RegionAlternateDr( MacCtx.NvmCtx->Region, mlmeRequest->Req.Join.Datarate, ALTERNATE_DR );
 8017612:	4b6d      	ldr	r3, [pc, #436]	; (80177c8 <LoRaMacMlmeRequest+0x284>)
 8017614:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8017618:	7818      	ldrb	r0, [r3, #0]
 801761a:	687b      	ldr	r3, [r7, #4]
 801761c:	791b      	ldrb	r3, [r3, #4]
 801761e:	b25b      	sxtb	r3, r3
 8017620:	4a69      	ldr	r2, [pc, #420]	; (80177c8 <LoRaMacMlmeRequest+0x284>)
 8017622:	f8d2 4484 	ldr.w	r4, [r2, #1156]	; 0x484
 8017626:	2200      	movs	r2, #0
 8017628:	4619      	mov	r1, r3
 801762a:	f002 fc7e 	bl	8019f2a <RegionAlternateDr>
 801762e:	4603      	mov	r3, r0
 8017630:	f884 3085 	strb.w	r3, [r4, #133]	; 0x85

            queueElement.Status = LORAMAC_EVENT_INFO_STATUS_JOIN_FAIL;
 8017634:	2307      	movs	r3, #7
 8017636:	747b      	strb	r3, [r7, #17]

            status = SendReJoinReq( JOIN_REQ );
 8017638:	20ff      	movs	r0, #255	; 0xff
 801763a:	f7fd fd23 	bl	8015084 <SendReJoinReq>
 801763e:	4603      	mov	r3, r0
 8017640:	75fb      	strb	r3, [r7, #23]

            if( status != LORAMAC_STATUS_OK )
 8017642:	7dfb      	ldrb	r3, [r7, #23]
 8017644:	2b00      	cmp	r3, #0
 8017646:	f000 808e 	beq.w	8017766 <LoRaMacMlmeRequest+0x222>
            {
                // Revert back the previous datarate ( mainly used for US915 like regions )
                MacCtx.NvmCtx->MacParams.ChannelsDatarate = RegionAlternateDr( MacCtx.NvmCtx->Region, mlmeRequest->Req.Join.Datarate, ALTERNATE_DR_RESTORE );
 801764a:	4b5f      	ldr	r3, [pc, #380]	; (80177c8 <LoRaMacMlmeRequest+0x284>)
 801764c:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8017650:	7818      	ldrb	r0, [r3, #0]
 8017652:	687b      	ldr	r3, [r7, #4]
 8017654:	791b      	ldrb	r3, [r3, #4]
 8017656:	b25b      	sxtb	r3, r3
 8017658:	4a5b      	ldr	r2, [pc, #364]	; (80177c8 <LoRaMacMlmeRequest+0x284>)
 801765a:	f8d2 4484 	ldr.w	r4, [r2, #1156]	; 0x484
 801765e:	2201      	movs	r2, #1
 8017660:	4619      	mov	r1, r3
 8017662:	f002 fc62 	bl	8019f2a <RegionAlternateDr>
 8017666:	4603      	mov	r3, r0
 8017668:	f884 3085 	strb.w	r3, [r4, #133]	; 0x85
            }
            break;
 801766c:	e07b      	b.n	8017766 <LoRaMacMlmeRequest+0x222>
        }
        case MLME_LINK_CHECK:
        {
            // LoRaMac will send this command piggy-pack
            status = LORAMAC_STATUS_OK;
 801766e:	2300      	movs	r3, #0
 8017670:	75fb      	strb	r3, [r7, #23]
            if( LoRaMacCommandsAddCmd( MOTE_MAC_LINK_CHECK_REQ, macCmdPayload, 0 ) != LORAMAC_COMMANDS_SUCCESS )
 8017672:	f107 030c 	add.w	r3, r7, #12
 8017676:	2200      	movs	r2, #0
 8017678:	4619      	mov	r1, r3
 801767a:	2002      	movs	r0, #2
 801767c:	f000 fce0 	bl	8018040 <LoRaMacCommandsAddCmd>
 8017680:	4603      	mov	r3, r0
 8017682:	2b00      	cmp	r3, #0
 8017684:	d071      	beq.n	801776a <LoRaMacMlmeRequest+0x226>
            {
                status = LORAMAC_STATUS_MAC_COMMAD_ERROR;
 8017686:	2313      	movs	r3, #19
 8017688:	75fb      	strb	r3, [r7, #23]
            }
            break;
 801768a:	e06e      	b.n	801776a <LoRaMacMlmeRequest+0x226>
        }
        case MLME_TXCW:
        {
            status = SetTxContinuousWave( mlmeRequest->Req.TxCw.Timeout );
 801768c:	687b      	ldr	r3, [r7, #4]
 801768e:	889b      	ldrh	r3, [r3, #4]
 8017690:	4618      	mov	r0, r3
 8017692:	f7fe faed 	bl	8015c70 <SetTxContinuousWave>
 8017696:	4603      	mov	r3, r0
 8017698:	75fb      	strb	r3, [r7, #23]
            break;
 801769a:	e06d      	b.n	8017778 <LoRaMacMlmeRequest+0x234>
        }
        case MLME_TXCW_1:
        {

            status = SetTxContinuousWave1( mlmeRequest->Req.TxCw.Timeout, mlmeRequest->Req.TxCw.Frequency, mlmeRequest->Req.TxCw.Power );
 801769c:	687b      	ldr	r3, [r7, #4]
 801769e:	8898      	ldrh	r0, [r3, #4]
 80176a0:	687b      	ldr	r3, [r7, #4]
 80176a2:	6899      	ldr	r1, [r3, #8]
 80176a4:	687b      	ldr	r3, [r7, #4]
 80176a6:	7b1b      	ldrb	r3, [r3, #12]
 80176a8:	461a      	mov	r2, r3
 80176aa:	f7fe fb1d 	bl	8015ce8 <SetTxContinuousWave1>
 80176ae:	4603      	mov	r3, r0
 80176b0:	75fb      	strb	r3, [r7, #23]
            break;
 80176b2:	e061      	b.n	8017778 <LoRaMacMlmeRequest+0x234>
        }
        case MLME_DEVICE_TIME:
        {
            // LoRaMac will send this command piggy-pack
            status = LORAMAC_STATUS_OK;
 80176b4:	2300      	movs	r3, #0
 80176b6:	75fb      	strb	r3, [r7, #23]
            if( LoRaMacCommandsAddCmd( MOTE_MAC_DEVICE_TIME_REQ, macCmdPayload, 0 ) != LORAMAC_COMMANDS_SUCCESS )
 80176b8:	f107 030c 	add.w	r3, r7, #12
 80176bc:	2200      	movs	r2, #0
 80176be:	4619      	mov	r1, r3
 80176c0:	200d      	movs	r0, #13
 80176c2:	f000 fcbd 	bl	8018040 <LoRaMacCommandsAddCmd>
 80176c6:	4603      	mov	r3, r0
 80176c8:	2b00      	cmp	r3, #0
 80176ca:	d050      	beq.n	801776e <LoRaMacMlmeRequest+0x22a>
            {
                status = LORAMAC_STATUS_MAC_COMMAD_ERROR;
 80176cc:	2313      	movs	r3, #19
 80176ce:	75fb      	strb	r3, [r7, #23]
            }
            break;
 80176d0:	e04d      	b.n	801776e <LoRaMacMlmeRequest+0x22a>
        }
        case MLME_PING_SLOT_INFO:
        {
            if( MacCtx.NvmCtx->DeviceClass == CLASS_A )
 80176d2:	4b3d      	ldr	r3, [pc, #244]	; (80177c8 <LoRaMacMlmeRequest+0x284>)
 80176d4:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 80176d8:	f893 307c 	ldrb.w	r3, [r3, #124]	; 0x7c
 80176dc:	2b00      	cmp	r3, #0
 80176de:	d148      	bne.n	8017772 <LoRaMacMlmeRequest+0x22e>
            {
                uint8_t value = mlmeRequest->Req.PingSlotInfo.PingSlot.Value;
 80176e0:	687b      	ldr	r3, [r7, #4]
 80176e2:	791b      	ldrb	r3, [r3, #4]
 80176e4:	75bb      	strb	r3, [r7, #22]

                // LoRaMac will send this command piggy-pack
                LoRaMacClassBSetPingSlotInfo( mlmeRequest->Req.PingSlotInfo.PingSlot.Fields.Periodicity );
 80176e6:	687b      	ldr	r3, [r7, #4]
 80176e8:	791b      	ldrb	r3, [r3, #4]
 80176ea:	f3c3 0302 	ubfx	r3, r3, #0, #3
 80176ee:	b2db      	uxtb	r3, r3
 80176f0:	4618      	mov	r0, r3
 80176f2:	f000 fad9 	bl	8017ca8 <LoRaMacClassBSetPingSlotInfo>
                macCmdPayload[0] = value;
 80176f6:	7dbb      	ldrb	r3, [r7, #22]
 80176f8:	733b      	strb	r3, [r7, #12]
                status = LORAMAC_STATUS_OK;
 80176fa:	2300      	movs	r3, #0
 80176fc:	75fb      	strb	r3, [r7, #23]
                if( LoRaMacCommandsAddCmd( MOTE_MAC_PING_SLOT_INFO_REQ, macCmdPayload, 1 ) != LORAMAC_COMMANDS_SUCCESS )
 80176fe:	f107 030c 	add.w	r3, r7, #12
 8017702:	2201      	movs	r2, #1
 8017704:	4619      	mov	r1, r3
 8017706:	2010      	movs	r0, #16
 8017708:	f000 fc9a 	bl	8018040 <LoRaMacCommandsAddCmd>
 801770c:	4603      	mov	r3, r0
 801770e:	2b00      	cmp	r3, #0
 8017710:	d02f      	beq.n	8017772 <LoRaMacMlmeRequest+0x22e>
                {
                    status = LORAMAC_STATUS_MAC_COMMAD_ERROR;
 8017712:	2313      	movs	r3, #19
 8017714:	75fb      	strb	r3, [r7, #23]
                }
            }
            break;
 8017716:	e02c      	b.n	8017772 <LoRaMacMlmeRequest+0x22e>
        }
        case MLME_BEACON_TIMING:
        {
            // LoRaMac will send this command piggy-pack
            status = LORAMAC_STATUS_OK;
 8017718:	2300      	movs	r3, #0
 801771a:	75fb      	strb	r3, [r7, #23]
            if( LoRaMacCommandsAddCmd( MOTE_MAC_BEACON_TIMING_REQ, macCmdPayload, 0 ) != LORAMAC_COMMANDS_SUCCESS )
 801771c:	f107 030c 	add.w	r3, r7, #12
 8017720:	2200      	movs	r2, #0
 8017722:	4619      	mov	r1, r3
 8017724:	2012      	movs	r0, #18
 8017726:	f000 fc8b 	bl	8018040 <LoRaMacCommandsAddCmd>
 801772a:	4603      	mov	r3, r0
 801772c:	2b00      	cmp	r3, #0
 801772e:	d022      	beq.n	8017776 <LoRaMacMlmeRequest+0x232>
            {
                status = LORAMAC_STATUS_MAC_COMMAD_ERROR;
 8017730:	2313      	movs	r3, #19
 8017732:	75fb      	strb	r3, [r7, #23]
            }
            break;
 8017734:	e01f      	b.n	8017776 <LoRaMacMlmeRequest+0x232>
        }
        case MLME_BEACON_ACQUISITION:
        {
            // Apply the request
            queueElement.RestrictCommonReadyToHandle = true;
 8017736:	2301      	movs	r3, #1
 8017738:	74fb      	strb	r3, [r7, #19]

            if( LoRaMacClassBIsAcquisitionInProgress( ) == false )
 801773a:	f000 fa6b 	bl	8017c14 <LoRaMacClassBIsAcquisitionInProgress>
 801773e:	4603      	mov	r3, r0
 8017740:	f083 0301 	eor.w	r3, r3, #1
 8017744:	b2db      	uxtb	r3, r3
 8017746:	2b00      	cmp	r3, #0
 8017748:	d008      	beq.n	801775c <LoRaMacMlmeRequest+0x218>
            {
                // Start class B algorithm
                LoRaMacClassBSetBeaconState( BEACON_STATE_ACQUISITION );
 801774a:	2000      	movs	r0, #0
 801774c:	f000 fa44 	bl	8017bd8 <LoRaMacClassBSetBeaconState>
                LoRaMacClassBBeaconTimerEvent( NULL );
 8017750:	2000      	movs	r0, #0
 8017752:	f000 fa66 	bl	8017c22 <LoRaMacClassBBeaconTimerEvent>

                status = LORAMAC_STATUS_OK;
 8017756:	2300      	movs	r3, #0
 8017758:	75fb      	strb	r3, [r7, #23]
            }
            else
            {
                status = LORAMAC_STATUS_BUSY;
            }
            break;
 801775a:	e00d      	b.n	8017778 <LoRaMacMlmeRequest+0x234>
                status = LORAMAC_STATUS_BUSY;
 801775c:	2301      	movs	r3, #1
 801775e:	75fb      	strb	r3, [r7, #23]
            break;
 8017760:	e00a      	b.n	8017778 <LoRaMacMlmeRequest+0x234>
        }
        default:
            break;
 8017762:	bf00      	nop
 8017764:	e008      	b.n	8017778 <LoRaMacMlmeRequest+0x234>
            break;
 8017766:	bf00      	nop
 8017768:	e006      	b.n	8017778 <LoRaMacMlmeRequest+0x234>
            break;
 801776a:	bf00      	nop
 801776c:	e004      	b.n	8017778 <LoRaMacMlmeRequest+0x234>
            break;
 801776e:	bf00      	nop
 8017770:	e002      	b.n	8017778 <LoRaMacMlmeRequest+0x234>
            break;
 8017772:	bf00      	nop
 8017774:	e000      	b.n	8017778 <LoRaMacMlmeRequest+0x234>
            break;
 8017776:	bf00      	nop
    }

    // Fill return structure
    mlmeRequest->ReqReturn.DutyCycleWaitTime = MacCtx.DutyCycleWaitTime;
 8017778:	4b13      	ldr	r3, [pc, #76]	; (80177c8 <LoRaMacMlmeRequest+0x284>)
 801777a:	f8d3 2488 	ldr.w	r2, [r3, #1160]	; 0x488
 801777e:	687b      	ldr	r3, [r7, #4]
 8017780:	611a      	str	r2, [r3, #16]

    if( status != LORAMAC_STATUS_OK )
 8017782:	7dfb      	ldrb	r3, [r7, #23]
 8017784:	2b00      	cmp	r3, #0
 8017786:	d010      	beq.n	80177aa <LoRaMacMlmeRequest+0x266>
    {
        if( LoRaMacConfirmQueueGetCnt( ) == 0 )
 8017788:	f001 f822 	bl	80187d0 <LoRaMacConfirmQueueGetCnt>
 801778c:	4603      	mov	r3, r0
 801778e:	2b00      	cmp	r3, #0
 8017790:	d112      	bne.n	80177b8 <LoRaMacMlmeRequest+0x274>
        {
            MacCtx.NodeAckRequested = false;
 8017792:	4b0d      	ldr	r3, [pc, #52]	; (80177c8 <LoRaMacMlmeRequest+0x284>)
 8017794:	2200      	movs	r2, #0
 8017796:	f883 2414 	strb.w	r2, [r3, #1044]	; 0x414
            MacCtx.MacFlags.Bits.MlmeReq = 0;
 801779a:	4a0b      	ldr	r2, [pc, #44]	; (80177c8 <LoRaMacMlmeRequest+0x284>)
 801779c:	f892 3481 	ldrb.w	r3, [r2, #1153]	; 0x481
 80177a0:	f36f 0382 	bfc	r3, #2, #1
 80177a4:	f882 3481 	strb.w	r3, [r2, #1153]	; 0x481
 80177a8:	e006      	b.n	80177b8 <LoRaMacMlmeRequest+0x274>
        }
    }
    else
    {
        LoRaMacConfirmQueueAdd( &queueElement );
 80177aa:	f107 0310 	add.w	r3, r7, #16
 80177ae:	4618      	mov	r0, r3
 80177b0:	f000 fec4 	bl	801853c <LoRaMacConfirmQueueAdd>
        EventMacNvmCtxChanged( );
 80177b4:	f7fe fd06 	bl	80161c4 <EventMacNvmCtxChanged>
    }
    return status;
 80177b8:	7dfb      	ldrb	r3, [r7, #23]
}
 80177ba:	4618      	mov	r0, r3
 80177bc:	371c      	adds	r7, #28
 80177be:	46bd      	mov	sp, r7
 80177c0:	bd90      	pop	{r4, r7, pc}
 80177c2:	bf00      	nop
 80177c4:	20001030 	.word	0x20001030
 80177c8:	20000be0 	.word	0x20000be0

080177cc <LoRaMacMcpsRequest>:

LoRaMacStatus_t LoRaMacMcpsRequest( McpsReq_t* mcpsRequest, bool allowDelayedTx )
{
 80177cc:	b580      	push	{r7, lr}
 80177ce:	b08c      	sub	sp, #48	; 0x30
 80177d0:	af02      	add	r7, sp, #8
 80177d2:	6078      	str	r0, [r7, #4]
 80177d4:	460b      	mov	r3, r1
 80177d6:	70fb      	strb	r3, [r7, #3]
    GetPhyParams_t getPhy;
    PhyParam_t phyParam;
    LoRaMacStatus_t status = LORAMAC_STATUS_SERVICE_UNKNOWN;
 80177d8:	2302      	movs	r3, #2
 80177da:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
    LoRaMacHeader_t macHdr;
    VerifyParams_t verify;
    uint8_t fPort = 0;
 80177de:	2300      	movs	r3, #0
 80177e0:	f887 3026 	strb.w	r3, [r7, #38]	; 0x26
    void* fBuffer;
    uint16_t fBufferSize;
    int8_t datarate = DR_0;
 80177e4:	2300      	movs	r3, #0
 80177e6:	777b      	strb	r3, [r7, #29]
    bool readyToSend = false;
 80177e8:	2300      	movs	r3, #0
 80177ea:	773b      	strb	r3, [r7, #28]

    if( mcpsRequest == NULL )
 80177ec:	687b      	ldr	r3, [r7, #4]
 80177ee:	2b00      	cmp	r3, #0
 80177f0:	d101      	bne.n	80177f6 <LoRaMacMcpsRequest+0x2a>
    {
        return LORAMAC_STATUS_PARAMETER_INVALID;
 80177f2:	2303      	movs	r3, #3
 80177f4:	e0e0      	b.n	80179b8 <LoRaMacMcpsRequest+0x1ec>
    }
    if( LoRaMacIsBusy( ) == true )
 80177f6:	f7fe fd33 	bl	8016260 <LoRaMacIsBusy>
 80177fa:	4603      	mov	r3, r0
 80177fc:	2b00      	cmp	r3, #0
 80177fe:	d001      	beq.n	8017804 <LoRaMacMcpsRequest+0x38>
    {
        return LORAMAC_STATUS_BUSY;
 8017800:	2301      	movs	r3, #1
 8017802:	e0d9      	b.n	80179b8 <LoRaMacMcpsRequest+0x1ec>
    }

    macHdr.Value = 0;
 8017804:	2300      	movs	r3, #0
 8017806:	733b      	strb	r3, [r7, #12]
    memset1( ( uint8_t* ) &MacCtx.McpsConfirm, 0, sizeof( MacCtx.McpsConfirm ) );
 8017808:	2214      	movs	r2, #20
 801780a:	2100      	movs	r1, #0
 801780c:	486c      	ldr	r0, [pc, #432]	; (80179c0 <LoRaMacMcpsRequest+0x1f4>)
 801780e:	f005 ff47 	bl	801d6a0 <memset1>
    MacCtx.McpsConfirm.Status = LORAMAC_EVENT_INFO_STATUS_ERROR;
 8017812:	4b6c      	ldr	r3, [pc, #432]	; (80179c4 <LoRaMacMcpsRequest+0x1f8>)
 8017814:	2201      	movs	r2, #1
 8017816:	f883 243d 	strb.w	r2, [r3, #1085]	; 0x43d

    // AckTimeoutRetriesCounter must be reset every time a new request (unconfirmed or confirmed) is performed.
    MacCtx.AckTimeoutRetriesCounter = 1;
 801781a:	4b6a      	ldr	r3, [pc, #424]	; (80179c4 <LoRaMacMcpsRequest+0x1f8>)
 801781c:	2201      	movs	r2, #1
 801781e:	f883 2412 	strb.w	r2, [r3, #1042]	; 0x412

    switch( mcpsRequest->Type )
 8017822:	687b      	ldr	r3, [r7, #4]
 8017824:	781b      	ldrb	r3, [r3, #0]
 8017826:	2b03      	cmp	r3, #3
 8017828:	d03d      	beq.n	80178a6 <LoRaMacMcpsRequest+0xda>
 801782a:	2b03      	cmp	r3, #3
 801782c:	dc4f      	bgt.n	80178ce <LoRaMacMcpsRequest+0x102>
 801782e:	2b00      	cmp	r3, #0
 8017830:	d002      	beq.n	8017838 <LoRaMacMcpsRequest+0x6c>
 8017832:	2b01      	cmp	r3, #1
 8017834:	d019      	beq.n	801786a <LoRaMacMcpsRequest+0x9e>
            fBufferSize = mcpsRequest->Req.Proprietary.fBufferSize;
            datarate = mcpsRequest->Req.Proprietary.Datarate;
            break;
        }
        default:
            break;
 8017836:	e04a      	b.n	80178ce <LoRaMacMcpsRequest+0x102>
            readyToSend = true;
 8017838:	2301      	movs	r3, #1
 801783a:	773b      	strb	r3, [r7, #28]
            MacCtx.AckTimeoutRetries = 1;
 801783c:	4b61      	ldr	r3, [pc, #388]	; (80179c4 <LoRaMacMcpsRequest+0x1f8>)
 801783e:	2201      	movs	r2, #1
 8017840:	f883 2411 	strb.w	r2, [r3, #1041]	; 0x411
            macHdr.Bits.MType = FRAME_TYPE_DATA_UNCONFIRMED_UP;
 8017844:	7b3b      	ldrb	r3, [r7, #12]
 8017846:	2202      	movs	r2, #2
 8017848:	f362 1347 	bfi	r3, r2, #5, #3
 801784c:	733b      	strb	r3, [r7, #12]
            fPort = mcpsRequest->Req.Unconfirmed.fPort;
 801784e:	687b      	ldr	r3, [r7, #4]
 8017850:	791b      	ldrb	r3, [r3, #4]
 8017852:	f887 3026 	strb.w	r3, [r7, #38]	; 0x26
            fBuffer = mcpsRequest->Req.Unconfirmed.fBuffer;
 8017856:	687b      	ldr	r3, [r7, #4]
 8017858:	689b      	ldr	r3, [r3, #8]
 801785a:	623b      	str	r3, [r7, #32]
            fBufferSize = mcpsRequest->Req.Unconfirmed.fBufferSize;
 801785c:	687b      	ldr	r3, [r7, #4]
 801785e:	899b      	ldrh	r3, [r3, #12]
 8017860:	83fb      	strh	r3, [r7, #30]
            datarate = mcpsRequest->Req.Unconfirmed.Datarate;
 8017862:	687b      	ldr	r3, [r7, #4]
 8017864:	7b9b      	ldrb	r3, [r3, #14]
 8017866:	777b      	strb	r3, [r7, #29]
            break;
 8017868:	e032      	b.n	80178d0 <LoRaMacMcpsRequest+0x104>
            readyToSend = true;
 801786a:	2301      	movs	r3, #1
 801786c:	773b      	strb	r3, [r7, #28]
            MacCtx.AckTimeoutRetries = MIN( mcpsRequest->Req.Confirmed.NbTrials, MAX_ACK_RETRIES );
 801786e:	687b      	ldr	r3, [r7, #4]
 8017870:	7bdb      	ldrb	r3, [r3, #15]
 8017872:	2b08      	cmp	r3, #8
 8017874:	bf28      	it	cs
 8017876:	2308      	movcs	r3, #8
 8017878:	b2da      	uxtb	r2, r3
 801787a:	4b52      	ldr	r3, [pc, #328]	; (80179c4 <LoRaMacMcpsRequest+0x1f8>)
 801787c:	f883 2411 	strb.w	r2, [r3, #1041]	; 0x411
            macHdr.Bits.MType = FRAME_TYPE_DATA_CONFIRMED_UP;
 8017880:	7b3b      	ldrb	r3, [r7, #12]
 8017882:	2204      	movs	r2, #4
 8017884:	f362 1347 	bfi	r3, r2, #5, #3
 8017888:	733b      	strb	r3, [r7, #12]
            fPort = mcpsRequest->Req.Confirmed.fPort;
 801788a:	687b      	ldr	r3, [r7, #4]
 801788c:	791b      	ldrb	r3, [r3, #4]
 801788e:	f887 3026 	strb.w	r3, [r7, #38]	; 0x26
            fBuffer = mcpsRequest->Req.Confirmed.fBuffer;
 8017892:	687b      	ldr	r3, [r7, #4]
 8017894:	689b      	ldr	r3, [r3, #8]
 8017896:	623b      	str	r3, [r7, #32]
            fBufferSize = mcpsRequest->Req.Confirmed.fBufferSize;
 8017898:	687b      	ldr	r3, [r7, #4]
 801789a:	899b      	ldrh	r3, [r3, #12]
 801789c:	83fb      	strh	r3, [r7, #30]
            datarate = mcpsRequest->Req.Confirmed.Datarate;
 801789e:	687b      	ldr	r3, [r7, #4]
 80178a0:	7b9b      	ldrb	r3, [r3, #14]
 80178a2:	777b      	strb	r3, [r7, #29]
            break;
 80178a4:	e014      	b.n	80178d0 <LoRaMacMcpsRequest+0x104>
            readyToSend = true;
 80178a6:	2301      	movs	r3, #1
 80178a8:	773b      	strb	r3, [r7, #28]
            MacCtx.AckTimeoutRetries = 1;
 80178aa:	4b46      	ldr	r3, [pc, #280]	; (80179c4 <LoRaMacMcpsRequest+0x1f8>)
 80178ac:	2201      	movs	r2, #1
 80178ae:	f883 2411 	strb.w	r2, [r3, #1041]	; 0x411
            macHdr.Bits.MType = FRAME_TYPE_PROPRIETARY;
 80178b2:	7b3b      	ldrb	r3, [r7, #12]
 80178b4:	f043 03e0 	orr.w	r3, r3, #224	; 0xe0
 80178b8:	733b      	strb	r3, [r7, #12]
            fBuffer = mcpsRequest->Req.Proprietary.fBuffer;
 80178ba:	687b      	ldr	r3, [r7, #4]
 80178bc:	685b      	ldr	r3, [r3, #4]
 80178be:	623b      	str	r3, [r7, #32]
            fBufferSize = mcpsRequest->Req.Proprietary.fBufferSize;
 80178c0:	687b      	ldr	r3, [r7, #4]
 80178c2:	891b      	ldrh	r3, [r3, #8]
 80178c4:	83fb      	strh	r3, [r7, #30]
            datarate = mcpsRequest->Req.Proprietary.Datarate;
 80178c6:	687b      	ldr	r3, [r7, #4]
 80178c8:	7a9b      	ldrb	r3, [r3, #10]
 80178ca:	777b      	strb	r3, [r7, #29]
            break;
 80178cc:	e000      	b.n	80178d0 <LoRaMacMcpsRequest+0x104>
            break;
 80178ce:	bf00      	nop
    }

    // Get the minimum possible datarate
    getPhy.Attribute = PHY_MIN_TX_DR;
 80178d0:	2302      	movs	r3, #2
 80178d2:	753b      	strb	r3, [r7, #20]
    getPhy.UplinkDwellTime = MacCtx.NvmCtx->MacParams.UplinkDwellTime;
 80178d4:	4b3b      	ldr	r3, [pc, #236]	; (80179c4 <LoRaMacMcpsRequest+0x1f8>)
 80178d6:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 80178da:	f893 30b8 	ldrb.w	r3, [r3, #184]	; 0xb8
 80178de:	75bb      	strb	r3, [r7, #22]
    phyParam = RegionGetPhyParam( MacCtx.NvmCtx->Region, &getPhy );
 80178e0:	4b38      	ldr	r3, [pc, #224]	; (80179c4 <LoRaMacMcpsRequest+0x1f8>)
 80178e2:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 80178e6:	781b      	ldrb	r3, [r3, #0]
 80178e8:	f107 0214 	add.w	r2, r7, #20
 80178ec:	4611      	mov	r1, r2
 80178ee:	4618      	mov	r0, r3
 80178f0:	f002 f965 	bl	8019bbe <RegionGetPhyParam>
 80178f4:	4603      	mov	r3, r0
 80178f6:	613b      	str	r3, [r7, #16]
    // Apply the minimum possible datarate.
    // Some regions have limitations for the minimum datarate.
    datarate = MAX( datarate, ( int8_t )phyParam.Value );
 80178f8:	693b      	ldr	r3, [r7, #16]
 80178fa:	b25b      	sxtb	r3, r3
 80178fc:	f997 201d 	ldrsb.w	r2, [r7, #29]
 8017900:	4293      	cmp	r3, r2
 8017902:	bfb8      	it	lt
 8017904:	4613      	movlt	r3, r2
 8017906:	777b      	strb	r3, [r7, #29]

    if( readyToSend == true )
 8017908:	7f3b      	ldrb	r3, [r7, #28]
 801790a:	2b00      	cmp	r3, #0
 801790c:	d04d      	beq.n	80179aa <LoRaMacMcpsRequest+0x1de>
    {
        if( MacCtx.NvmCtx->AdrCtrlOn == false )
 801790e:	4b2d      	ldr	r3, [pc, #180]	; (80179c4 <LoRaMacMcpsRequest+0x1f8>)
 8017910:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8017914:	f893 307e 	ldrb.w	r3, [r3, #126]	; 0x7e
 8017918:	f083 0301 	eor.w	r3, r3, #1
 801791c:	b2db      	uxtb	r3, r3
 801791e:	2b00      	cmp	r3, #0
 8017920:	d01e      	beq.n	8017960 <LoRaMacMcpsRequest+0x194>
        {
            verify.DatarateParams.Datarate = datarate;
 8017922:	7f7b      	ldrb	r3, [r7, #29]
 8017924:	723b      	strb	r3, [r7, #8]
            verify.DatarateParams.UplinkDwellTime = MacCtx.NvmCtx->MacParams.UplinkDwellTime;
 8017926:	4b27      	ldr	r3, [pc, #156]	; (80179c4 <LoRaMacMcpsRequest+0x1f8>)
 8017928:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 801792c:	f893 30b8 	ldrb.w	r3, [r3, #184]	; 0xb8
 8017930:	72bb      	strb	r3, [r7, #10]

            if( RegionVerify( MacCtx.NvmCtx->Region, &verify, PHY_TX_DR ) == true )
 8017932:	4b24      	ldr	r3, [pc, #144]	; (80179c4 <LoRaMacMcpsRequest+0x1f8>)
 8017934:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8017938:	781b      	ldrb	r3, [r3, #0]
 801793a:	f107 0108 	add.w	r1, r7, #8
 801793e:	2205      	movs	r2, #5
 8017940:	4618      	mov	r0, r3
 8017942:	f002 f9a8 	bl	8019c96 <RegionVerify>
 8017946:	4603      	mov	r3, r0
 8017948:	2b00      	cmp	r3, #0
 801794a:	d007      	beq.n	801795c <LoRaMacMcpsRequest+0x190>
            {
                MacCtx.NvmCtx->MacParams.ChannelsDatarate = verify.DatarateParams.Datarate;
 801794c:	4b1d      	ldr	r3, [pc, #116]	; (80179c4 <LoRaMacMcpsRequest+0x1f8>)
 801794e:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 8017952:	f997 2008 	ldrsb.w	r2, [r7, #8]
 8017956:	f883 2085 	strb.w	r2, [r3, #133]	; 0x85
 801795a:	e001      	b.n	8017960 <LoRaMacMcpsRequest+0x194>
            }
            else
            {
                return LORAMAC_STATUS_PARAMETER_INVALID;
 801795c:	2303      	movs	r3, #3
 801795e:	e02b      	b.n	80179b8 <LoRaMacMcpsRequest+0x1ec>
            }
        }

        status = Send( &macHdr, fPort, fBuffer, fBufferSize, allowDelayedTx );
 8017960:	8bfa      	ldrh	r2, [r7, #30]
 8017962:	f897 1026 	ldrb.w	r1, [r7, #38]	; 0x26
 8017966:	f107 000c 	add.w	r0, r7, #12
 801796a:	78fb      	ldrb	r3, [r7, #3]
 801796c:	9300      	str	r3, [sp, #0]
 801796e:	4613      	mov	r3, r2
 8017970:	6a3a      	ldr	r2, [r7, #32]
 8017972:	f7fd fa7d 	bl	8014e70 <Send>
 8017976:	4603      	mov	r3, r0
 8017978:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
        if( status == LORAMAC_STATUS_OK )
 801797c:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 8017980:	2b00      	cmp	r3, #0
 8017982:	d10e      	bne.n	80179a2 <LoRaMacMcpsRequest+0x1d6>
        {
            MacCtx.McpsConfirm.McpsRequest = mcpsRequest->Type;
 8017984:	687b      	ldr	r3, [r7, #4]
 8017986:	781a      	ldrb	r2, [r3, #0]
 8017988:	4b0e      	ldr	r3, [pc, #56]	; (80179c4 <LoRaMacMcpsRequest+0x1f8>)
 801798a:	f883 243c 	strb.w	r2, [r3, #1084]	; 0x43c
            MacCtx.MacFlags.Bits.McpsReq = 1;
 801798e:	4a0d      	ldr	r2, [pc, #52]	; (80179c4 <LoRaMacMcpsRequest+0x1f8>)
 8017990:	f892 3481 	ldrb.w	r3, [r2, #1153]	; 0x481
 8017994:	f043 0301 	orr.w	r3, r3, #1
 8017998:	f882 3481 	strb.w	r3, [r2, #1153]	; 0x481
            EventMacNvmCtxChanged( );
 801799c:	f7fe fc12 	bl	80161c4 <EventMacNvmCtxChanged>
 80179a0:	e003      	b.n	80179aa <LoRaMacMcpsRequest+0x1de>
        }
        else
        {
            MacCtx.NodeAckRequested = false;
 80179a2:	4b08      	ldr	r3, [pc, #32]	; (80179c4 <LoRaMacMcpsRequest+0x1f8>)
 80179a4:	2200      	movs	r2, #0
 80179a6:	f883 2414 	strb.w	r2, [r3, #1044]	; 0x414
        }
    }

    // Fill return structure
    mcpsRequest->ReqReturn.DutyCycleWaitTime = MacCtx.DutyCycleWaitTime;
 80179aa:	4b06      	ldr	r3, [pc, #24]	; (80179c4 <LoRaMacMcpsRequest+0x1f8>)
 80179ac:	f8d3 2488 	ldr.w	r2, [r3, #1160]	; 0x488
 80179b0:	687b      	ldr	r3, [r7, #4]
 80179b2:	611a      	str	r2, [r3, #16]

    return status;
 80179b4:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
}
 80179b8:	4618      	mov	r0, r3
 80179ba:	3728      	adds	r7, #40	; 0x28
 80179bc:	46bd      	mov	sp, r7
 80179be:	bd80      	pop	{r7, pc}
 80179c0:	2000101c 	.word	0x2000101c
 80179c4:	20000be0 	.word	0x20000be0

080179c8 <LoRaMacTestSetDutyCycleOn>:

void LoRaMacTestSetDutyCycleOn( bool enable )
{
 80179c8:	b580      	push	{r7, lr}
 80179ca:	b084      	sub	sp, #16
 80179cc:	af00      	add	r7, sp, #0
 80179ce:	4603      	mov	r3, r0
 80179d0:	71fb      	strb	r3, [r7, #7]
    VerifyParams_t verify;

    verify.DutyCycle = enable;
 80179d2:	79fb      	ldrb	r3, [r7, #7]
 80179d4:	733b      	strb	r3, [r7, #12]

    if( RegionVerify( MacCtx.NvmCtx->Region, &verify, PHY_DUTY_CYCLE ) == true )
 80179d6:	4b0b      	ldr	r3, [pc, #44]	; (8017a04 <LoRaMacTestSetDutyCycleOn+0x3c>)
 80179d8:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 80179dc:	781b      	ldrb	r3, [r3, #0]
 80179de:	f107 010c 	add.w	r1, r7, #12
 80179e2:	220f      	movs	r2, #15
 80179e4:	4618      	mov	r0, r3
 80179e6:	f002 f956 	bl	8019c96 <RegionVerify>
 80179ea:	4603      	mov	r3, r0
 80179ec:	2b00      	cmp	r3, #0
 80179ee:	d005      	beq.n	80179fc <LoRaMacTestSetDutyCycleOn+0x34>
    {
        MacCtx.NvmCtx->DutyCycleOn = enable;
 80179f0:	4b04      	ldr	r3, [pc, #16]	; (8017a04 <LoRaMacTestSetDutyCycleOn+0x3c>)
 80179f2:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
 80179f6:	79fa      	ldrb	r2, [r7, #7]
 80179f8:	f883 20c9 	strb.w	r2, [r3, #201]	; 0xc9
    }
}
 80179fc:	bf00      	nop
 80179fe:	3710      	adds	r7, #16
 8017a00:	46bd      	mov	sp, r7
 8017a02:	bd80      	pop	{r7, pc}
 8017a04:	20000be0 	.word	0x20000be0

08017a08 <CalcNextV10X>:
 8017a08:	b580      	push	{r7, lr}
 8017a0a:	b08a      	sub	sp, #40	; 0x28
 8017a0c:	af00      	add	r7, sp, #0
 8017a0e:	60f8      	str	r0, [r7, #12]
 8017a10:	60b9      	str	r1, [r7, #8]
 8017a12:	607a      	str	r2, [r7, #4]
 8017a14:	603b      	str	r3, [r7, #0]
 8017a16:	2300      	movs	r3, #0
 8017a18:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 8017a1c:	68fb      	ldr	r3, [r7, #12]
 8017a1e:	7c1b      	ldrb	r3, [r3, #16]
 8017a20:	f887 3026 	strb.w	r3, [r7, #38]	; 0x26
 8017a24:	68fb      	ldr	r3, [r7, #12]
 8017a26:	7c5b      	ldrb	r3, [r3, #17]
 8017a28:	f887 3025 	strb.w	r3, [r7, #37]	; 0x25
 8017a2c:	68fb      	ldr	r3, [r7, #12]
 8017a2e:	689a      	ldr	r2, [r3, #8]
 8017a30:	683b      	ldr	r3, [r7, #0]
 8017a32:	601a      	str	r2, [r3, #0]
 8017a34:	68fb      	ldr	r3, [r7, #12]
 8017a36:	795b      	ldrb	r3, [r3, #5]
 8017a38:	2b00      	cmp	r3, #0
 8017a3a:	f000 8085 	beq.w	8017b48 <CalcNextV10X+0x140>
 8017a3e:	2302      	movs	r3, #2
 8017a40:	773b      	strb	r3, [r7, #28]
 8017a42:	68fb      	ldr	r3, [r7, #12]
 8017a44:	7c9b      	ldrb	r3, [r3, #18]
 8017a46:	77bb      	strb	r3, [r7, #30]
 8017a48:	68fb      	ldr	r3, [r7, #12]
 8017a4a:	7cdb      	ldrb	r3, [r3, #19]
 8017a4c:	f107 021c 	add.w	r2, r7, #28
 8017a50:	4611      	mov	r1, r2
 8017a52:	4618      	mov	r0, r3
 8017a54:	f002 f8b3 	bl	8019bbe <RegionGetPhyParam>
 8017a58:	4603      	mov	r3, r0
 8017a5a:	61bb      	str	r3, [r7, #24]
 8017a5c:	69bb      	ldr	r3, [r7, #24]
 8017a5e:	f887 3024 	strb.w	r3, [r7, #36]	; 0x24
 8017a62:	f997 2024 	ldrsb.w	r2, [r7, #36]	; 0x24
 8017a66:	f997 3026 	ldrsb.w	r3, [r7, #38]	; 0x26
 8017a6a:	4293      	cmp	r3, r2
 8017a6c:	bfb8      	it	lt
 8017a6e:	4613      	movlt	r3, r2
 8017a70:	f887 3026 	strb.w	r3, [r7, #38]	; 0x26
 8017a74:	f997 2026 	ldrsb.w	r2, [r7, #38]	; 0x26
 8017a78:	f997 3024 	ldrsb.w	r3, [r7, #36]	; 0x24
 8017a7c:	429a      	cmp	r2, r3
 8017a7e:	d106      	bne.n	8017a8e <CalcNextV10X+0x86>
 8017a80:	683b      	ldr	r3, [r7, #0]
 8017a82:	2200      	movs	r2, #0
 8017a84:	601a      	str	r2, [r3, #0]
 8017a86:	2300      	movs	r3, #0
 8017a88:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 8017a8c:	e05c      	b.n	8017b48 <CalcNextV10X+0x140>
 8017a8e:	68fb      	ldr	r3, [r7, #12]
 8017a90:	689b      	ldr	r3, [r3, #8]
 8017a92:	68fa      	ldr	r2, [r7, #12]
 8017a94:	8992      	ldrh	r2, [r2, #12]
 8017a96:	4293      	cmp	r3, r2
 8017a98:	d303      	bcc.n	8017aa2 <CalcNextV10X+0x9a>
 8017a9a:	2301      	movs	r3, #1
 8017a9c:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 8017aa0:	e002      	b.n	8017aa8 <CalcNextV10X+0xa0>
 8017aa2:	2300      	movs	r3, #0
 8017aa4:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 8017aa8:	68fb      	ldr	r3, [r7, #12]
 8017aaa:	689b      	ldr	r3, [r3, #8]
 8017aac:	68fa      	ldr	r2, [r7, #12]
 8017aae:	8992      	ldrh	r2, [r2, #12]
 8017ab0:	4611      	mov	r1, r2
 8017ab2:	68fa      	ldr	r2, [r7, #12]
 8017ab4:	89d2      	ldrh	r2, [r2, #14]
 8017ab6:	440a      	add	r2, r1
 8017ab8:	4293      	cmp	r3, r2
 8017aba:	d345      	bcc.n	8017b48 <CalcNextV10X+0x140>
 8017abc:	2308      	movs	r3, #8
 8017abe:	773b      	strb	r3, [r7, #28]
 8017ac0:	68fb      	ldr	r3, [r7, #12]
 8017ac2:	7cdb      	ldrb	r3, [r3, #19]
 8017ac4:	f107 021c 	add.w	r2, r7, #28
 8017ac8:	4611      	mov	r1, r2
 8017aca:	4618      	mov	r0, r3
 8017acc:	f002 f877 	bl	8019bbe <RegionGetPhyParam>
 8017ad0:	4603      	mov	r3, r0
 8017ad2:	61bb      	str	r3, [r7, #24]
 8017ad4:	69bb      	ldr	r3, [r7, #24]
 8017ad6:	f887 3025 	strb.w	r3, [r7, #37]	; 0x25
 8017ada:	68fb      	ldr	r3, [r7, #12]
 8017adc:	689b      	ldr	r3, [r3, #8]
 8017ade:	68fa      	ldr	r2, [r7, #12]
 8017ae0:	89d2      	ldrh	r2, [r2, #14]
 8017ae2:	fbb3 f1f2 	udiv	r1, r3, r2
 8017ae6:	fb02 f201 	mul.w	r2, r2, r1
 8017aea:	1a9b      	subs	r3, r3, r2
 8017aec:	2b01      	cmp	r3, #1
 8017aee:	d12b      	bne.n	8017b48 <CalcNextV10X+0x140>
 8017af0:	2322      	movs	r3, #34	; 0x22
 8017af2:	773b      	strb	r3, [r7, #28]
 8017af4:	f897 3026 	ldrb.w	r3, [r7, #38]	; 0x26
 8017af8:	777b      	strb	r3, [r7, #29]
 8017afa:	68fb      	ldr	r3, [r7, #12]
 8017afc:	7c9b      	ldrb	r3, [r3, #18]
 8017afe:	77bb      	strb	r3, [r7, #30]
 8017b00:	68fb      	ldr	r3, [r7, #12]
 8017b02:	7cdb      	ldrb	r3, [r3, #19]
 8017b04:	f107 021c 	add.w	r2, r7, #28
 8017b08:	4611      	mov	r1, r2
 8017b0a:	4618      	mov	r0, r3
 8017b0c:	f002 f857 	bl	8019bbe <RegionGetPhyParam>
 8017b10:	4603      	mov	r3, r0
 8017b12:	61bb      	str	r3, [r7, #24]
 8017b14:	69bb      	ldr	r3, [r7, #24]
 8017b16:	f887 3026 	strb.w	r3, [r7, #38]	; 0x26
 8017b1a:	f997 2026 	ldrsb.w	r2, [r7, #38]	; 0x26
 8017b1e:	f997 3024 	ldrsb.w	r3, [r7, #36]	; 0x24
 8017b22:	429a      	cmp	r2, r3
 8017b24:	d110      	bne.n	8017b48 <CalcNextV10X+0x140>
 8017b26:	2300      	movs	r3, #0
 8017b28:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 8017b2c:	68fb      	ldr	r3, [r7, #12]
 8017b2e:	791b      	ldrb	r3, [r3, #4]
 8017b30:	2b00      	cmp	r3, #0
 8017b32:	d009      	beq.n	8017b48 <CalcNextV10X+0x140>
 8017b34:	2302      	movs	r3, #2
 8017b36:	753b      	strb	r3, [r7, #20]
 8017b38:	68fb      	ldr	r3, [r7, #12]
 8017b3a:	7cdb      	ldrb	r3, [r3, #19]
 8017b3c:	f107 0210 	add.w	r2, r7, #16
 8017b40:	4611      	mov	r1, r2
 8017b42:	4618      	mov	r0, r3
 8017b44:	f002 f874 	bl	8019c30 <RegionInitDefaults>
 8017b48:	68bb      	ldr	r3, [r7, #8]
 8017b4a:	f897 2026 	ldrb.w	r2, [r7, #38]	; 0x26
 8017b4e:	701a      	strb	r2, [r3, #0]
 8017b50:	687b      	ldr	r3, [r7, #4]
 8017b52:	f897 2025 	ldrb.w	r2, [r7, #37]	; 0x25
 8017b56:	701a      	strb	r2, [r3, #0]
 8017b58:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 8017b5c:	4618      	mov	r0, r3
 8017b5e:	3728      	adds	r7, #40	; 0x28
 8017b60:	46bd      	mov	sp, r7
 8017b62:	bd80      	pop	{r7, pc}

08017b64 <LoRaMacAdrCalcNext>:
 8017b64:	b580      	push	{r7, lr}
 8017b66:	b084      	sub	sp, #16
 8017b68:	af00      	add	r7, sp, #0
 8017b6a:	60f8      	str	r0, [r7, #12]
 8017b6c:	60b9      	str	r1, [r7, #8]
 8017b6e:	607a      	str	r2, [r7, #4]
 8017b70:	603b      	str	r3, [r7, #0]
 8017b72:	68fb      	ldr	r3, [r7, #12]
 8017b74:	789b      	ldrb	r3, [r3, #2]
 8017b76:	2b00      	cmp	r3, #0
 8017b78:	d107      	bne.n	8017b8a <LoRaMacAdrCalcNext+0x26>
 8017b7a:	683b      	ldr	r3, [r7, #0]
 8017b7c:	687a      	ldr	r2, [r7, #4]
 8017b7e:	68b9      	ldr	r1, [r7, #8]
 8017b80:	68f8      	ldr	r0, [r7, #12]
 8017b82:	f7ff ff41 	bl	8017a08 <CalcNextV10X>
 8017b86:	4603      	mov	r3, r0
 8017b88:	e000      	b.n	8017b8c <LoRaMacAdrCalcNext+0x28>
 8017b8a:	2300      	movs	r3, #0
 8017b8c:	4618      	mov	r0, r3
 8017b8e:	3710      	adds	r7, #16
 8017b90:	46bd      	mov	sp, r7
 8017b92:	bd80      	pop	{r7, pc}

08017b94 <LoRaMacClassBInit>:
 8017b94:	b480      	push	{r7}
 8017b96:	b085      	sub	sp, #20
 8017b98:	af00      	add	r7, sp, #0
 8017b9a:	60f8      	str	r0, [r7, #12]
 8017b9c:	60b9      	str	r1, [r7, #8]
 8017b9e:	607a      	str	r2, [r7, #4]
 8017ba0:	bf00      	nop
 8017ba2:	3714      	adds	r7, #20
 8017ba4:	46bd      	mov	sp, r7
 8017ba6:	bc80      	pop	{r7}
 8017ba8:	4770      	bx	lr

08017baa <LoRaMacClassBRestoreNvmCtx>:
 8017baa:	b480      	push	{r7}
 8017bac:	b083      	sub	sp, #12
 8017bae:	af00      	add	r7, sp, #0
 8017bb0:	6078      	str	r0, [r7, #4]
 8017bb2:	2301      	movs	r3, #1
 8017bb4:	4618      	mov	r0, r3
 8017bb6:	370c      	adds	r7, #12
 8017bb8:	46bd      	mov	sp, r7
 8017bba:	bc80      	pop	{r7}
 8017bbc:	4770      	bx	lr

08017bbe <LoRaMacClassBGetNvmCtx>:
 8017bbe:	b480      	push	{r7}
 8017bc0:	b083      	sub	sp, #12
 8017bc2:	af00      	add	r7, sp, #0
 8017bc4:	6078      	str	r0, [r7, #4]
 8017bc6:	687b      	ldr	r3, [r7, #4]
 8017bc8:	2200      	movs	r2, #0
 8017bca:	601a      	str	r2, [r3, #0]
 8017bcc:	2300      	movs	r3, #0
 8017bce:	4618      	mov	r0, r3
 8017bd0:	370c      	adds	r7, #12
 8017bd2:	46bd      	mov	sp, r7
 8017bd4:	bc80      	pop	{r7}
 8017bd6:	4770      	bx	lr

08017bd8 <LoRaMacClassBSetBeaconState>:
 8017bd8:	b480      	push	{r7}
 8017bda:	b083      	sub	sp, #12
 8017bdc:	af00      	add	r7, sp, #0
 8017bde:	4603      	mov	r3, r0
 8017be0:	71fb      	strb	r3, [r7, #7]
 8017be2:	bf00      	nop
 8017be4:	370c      	adds	r7, #12
 8017be6:	46bd      	mov	sp, r7
 8017be8:	bc80      	pop	{r7}
 8017bea:	4770      	bx	lr

08017bec <LoRaMacClassBSetPingSlotState>:
 8017bec:	b480      	push	{r7}
 8017bee:	b083      	sub	sp, #12
 8017bf0:	af00      	add	r7, sp, #0
 8017bf2:	4603      	mov	r3, r0
 8017bf4:	71fb      	strb	r3, [r7, #7]
 8017bf6:	bf00      	nop
 8017bf8:	370c      	adds	r7, #12
 8017bfa:	46bd      	mov	sp, r7
 8017bfc:	bc80      	pop	{r7}
 8017bfe:	4770      	bx	lr

08017c00 <LoRaMacClassBSetMulticastSlotState>:
 8017c00:	b480      	push	{r7}
 8017c02:	b083      	sub	sp, #12
 8017c04:	af00      	add	r7, sp, #0
 8017c06:	4603      	mov	r3, r0
 8017c08:	71fb      	strb	r3, [r7, #7]
 8017c0a:	bf00      	nop
 8017c0c:	370c      	adds	r7, #12
 8017c0e:	46bd      	mov	sp, r7
 8017c10:	bc80      	pop	{r7}
 8017c12:	4770      	bx	lr

08017c14 <LoRaMacClassBIsAcquisitionInProgress>:
 8017c14:	b480      	push	{r7}
 8017c16:	af00      	add	r7, sp, #0
 8017c18:	2300      	movs	r3, #0
 8017c1a:	4618      	mov	r0, r3
 8017c1c:	46bd      	mov	sp, r7
 8017c1e:	bc80      	pop	{r7}
 8017c20:	4770      	bx	lr

08017c22 <LoRaMacClassBBeaconTimerEvent>:
 8017c22:	b480      	push	{r7}
 8017c24:	b083      	sub	sp, #12
 8017c26:	af00      	add	r7, sp, #0
 8017c28:	6078      	str	r0, [r7, #4]
 8017c2a:	bf00      	nop
 8017c2c:	370c      	adds	r7, #12
 8017c2e:	46bd      	mov	sp, r7
 8017c30:	bc80      	pop	{r7}
 8017c32:	4770      	bx	lr

08017c34 <LoRaMacClassBPingSlotTimerEvent>:
 8017c34:	b480      	push	{r7}
 8017c36:	b083      	sub	sp, #12
 8017c38:	af00      	add	r7, sp, #0
 8017c3a:	6078      	str	r0, [r7, #4]
 8017c3c:	bf00      	nop
 8017c3e:	370c      	adds	r7, #12
 8017c40:	46bd      	mov	sp, r7
 8017c42:	bc80      	pop	{r7}
 8017c44:	4770      	bx	lr

08017c46 <LoRaMacClassBMulticastSlotTimerEvent>:
 8017c46:	b480      	push	{r7}
 8017c48:	b083      	sub	sp, #12
 8017c4a:	af00      	add	r7, sp, #0
 8017c4c:	6078      	str	r0, [r7, #4]
 8017c4e:	bf00      	nop
 8017c50:	370c      	adds	r7, #12
 8017c52:	46bd      	mov	sp, r7
 8017c54:	bc80      	pop	{r7}
 8017c56:	4770      	bx	lr

08017c58 <LoRaMacClassBRxBeacon>:
 8017c58:	b480      	push	{r7}
 8017c5a:	b083      	sub	sp, #12
 8017c5c:	af00      	add	r7, sp, #0
 8017c5e:	6078      	str	r0, [r7, #4]
 8017c60:	460b      	mov	r3, r1
 8017c62:	807b      	strh	r3, [r7, #2]
 8017c64:	2300      	movs	r3, #0
 8017c66:	4618      	mov	r0, r3
 8017c68:	370c      	adds	r7, #12
 8017c6a:	46bd      	mov	sp, r7
 8017c6c:	bc80      	pop	{r7}
 8017c6e:	4770      	bx	lr

08017c70 <LoRaMacClassBIsBeaconExpected>:
 8017c70:	b480      	push	{r7}
 8017c72:	af00      	add	r7, sp, #0
 8017c74:	2300      	movs	r3, #0
 8017c76:	4618      	mov	r0, r3
 8017c78:	46bd      	mov	sp, r7
 8017c7a:	bc80      	pop	{r7}
 8017c7c:	4770      	bx	lr

08017c7e <LoRaMacClassBIsPingExpected>:
 8017c7e:	b480      	push	{r7}
 8017c80:	af00      	add	r7, sp, #0
 8017c82:	2300      	movs	r3, #0
 8017c84:	4618      	mov	r0, r3
 8017c86:	46bd      	mov	sp, r7
 8017c88:	bc80      	pop	{r7}
 8017c8a:	4770      	bx	lr

08017c8c <LoRaMacClassBIsMulticastExpected>:
 8017c8c:	b480      	push	{r7}
 8017c8e:	af00      	add	r7, sp, #0
 8017c90:	2300      	movs	r3, #0
 8017c92:	4618      	mov	r0, r3
 8017c94:	46bd      	mov	sp, r7
 8017c96:	bc80      	pop	{r7}
 8017c98:	4770      	bx	lr

08017c9a <LoRaMacClassBIsBeaconModeActive>:
 8017c9a:	b480      	push	{r7}
 8017c9c:	af00      	add	r7, sp, #0
 8017c9e:	2300      	movs	r3, #0
 8017ca0:	4618      	mov	r0, r3
 8017ca2:	46bd      	mov	sp, r7
 8017ca4:	bc80      	pop	{r7}
 8017ca6:	4770      	bx	lr

08017ca8 <LoRaMacClassBSetPingSlotInfo>:
 8017ca8:	b480      	push	{r7}
 8017caa:	b083      	sub	sp, #12
 8017cac:	af00      	add	r7, sp, #0
 8017cae:	4603      	mov	r3, r0
 8017cb0:	71fb      	strb	r3, [r7, #7]
 8017cb2:	bf00      	nop
 8017cb4:	370c      	adds	r7, #12
 8017cb6:	46bd      	mov	sp, r7
 8017cb8:	bc80      	pop	{r7}
 8017cba:	4770      	bx	lr

08017cbc <LoRaMacClassBHaltBeaconing>:
 8017cbc:	b480      	push	{r7}
 8017cbe:	af00      	add	r7, sp, #0
 8017cc0:	bf00      	nop
 8017cc2:	46bd      	mov	sp, r7
 8017cc4:	bc80      	pop	{r7}
 8017cc6:	4770      	bx	lr

08017cc8 <LoRaMacClassBResumeBeaconing>:
 8017cc8:	b480      	push	{r7}
 8017cca:	af00      	add	r7, sp, #0
 8017ccc:	bf00      	nop
 8017cce:	46bd      	mov	sp, r7
 8017cd0:	bc80      	pop	{r7}
 8017cd2:	4770      	bx	lr

08017cd4 <LoRaMacClassBSwitchClass>:
 8017cd4:	b480      	push	{r7}
 8017cd6:	b083      	sub	sp, #12
 8017cd8:	af00      	add	r7, sp, #0
 8017cda:	4603      	mov	r3, r0
 8017cdc:	71fb      	strb	r3, [r7, #7]
 8017cde:	2302      	movs	r3, #2
 8017ce0:	4618      	mov	r0, r3
 8017ce2:	370c      	adds	r7, #12
 8017ce4:	46bd      	mov	sp, r7
 8017ce6:	bc80      	pop	{r7}
 8017ce8:	4770      	bx	lr

08017cea <LoRaMacClassBMibGetRequestConfirm>:
 8017cea:	b480      	push	{r7}
 8017cec:	b083      	sub	sp, #12
 8017cee:	af00      	add	r7, sp, #0
 8017cf0:	6078      	str	r0, [r7, #4]
 8017cf2:	2302      	movs	r3, #2
 8017cf4:	4618      	mov	r0, r3
 8017cf6:	370c      	adds	r7, #12
 8017cf8:	46bd      	mov	sp, r7
 8017cfa:	bc80      	pop	{r7}
 8017cfc:	4770      	bx	lr

08017cfe <LoRaMacMibClassBSetRequestConfirm>:
 8017cfe:	b480      	push	{r7}
 8017d00:	b083      	sub	sp, #12
 8017d02:	af00      	add	r7, sp, #0
 8017d04:	6078      	str	r0, [r7, #4]
 8017d06:	2302      	movs	r3, #2
 8017d08:	4618      	mov	r0, r3
 8017d0a:	370c      	adds	r7, #12
 8017d0c:	46bd      	mov	sp, r7
 8017d0e:	bc80      	pop	{r7}
 8017d10:	4770      	bx	lr

08017d12 <LoRaMacClassBPingSlotInfoAns>:
 8017d12:	b480      	push	{r7}
 8017d14:	af00      	add	r7, sp, #0
 8017d16:	bf00      	nop
 8017d18:	46bd      	mov	sp, r7
 8017d1a:	bc80      	pop	{r7}
 8017d1c:	4770      	bx	lr

08017d1e <LoRaMacClassBPingSlotChannelReq>:
 8017d1e:	b480      	push	{r7}
 8017d20:	b083      	sub	sp, #12
 8017d22:	af00      	add	r7, sp, #0
 8017d24:	4603      	mov	r3, r0
 8017d26:	6039      	str	r1, [r7, #0]
 8017d28:	71fb      	strb	r3, [r7, #7]
 8017d2a:	2300      	movs	r3, #0
 8017d2c:	4618      	mov	r0, r3
 8017d2e:	370c      	adds	r7, #12
 8017d30:	46bd      	mov	sp, r7
 8017d32:	bc80      	pop	{r7}
 8017d34:	4770      	bx	lr

08017d36 <LoRaMacClassBBeaconTimingAns>:
 8017d36:	b480      	push	{r7}
 8017d38:	b083      	sub	sp, #12
 8017d3a:	af00      	add	r7, sp, #0
 8017d3c:	4603      	mov	r3, r0
 8017d3e:	603a      	str	r2, [r7, #0]
 8017d40:	80fb      	strh	r3, [r7, #6]
 8017d42:	460b      	mov	r3, r1
 8017d44:	717b      	strb	r3, [r7, #5]
 8017d46:	bf00      	nop
 8017d48:	370c      	adds	r7, #12
 8017d4a:	46bd      	mov	sp, r7
 8017d4c:	bc80      	pop	{r7}
 8017d4e:	4770      	bx	lr

08017d50 <LoRaMacClassBDeviceTimeAns>:
 8017d50:	b480      	push	{r7}
 8017d52:	af00      	add	r7, sp, #0
 8017d54:	bf00      	nop
 8017d56:	46bd      	mov	sp, r7
 8017d58:	bc80      	pop	{r7}
 8017d5a:	4770      	bx	lr

08017d5c <LoRaMacClassBBeaconFreqReq>:
 8017d5c:	b480      	push	{r7}
 8017d5e:	b083      	sub	sp, #12
 8017d60:	af00      	add	r7, sp, #0
 8017d62:	6078      	str	r0, [r7, #4]
 8017d64:	2300      	movs	r3, #0
 8017d66:	4618      	mov	r0, r3
 8017d68:	370c      	adds	r7, #12
 8017d6a:	46bd      	mov	sp, r7
 8017d6c:	bc80      	pop	{r7}
 8017d6e:	4770      	bx	lr

08017d70 <LoRaMacClassBIsUplinkCollision>:
 8017d70:	b480      	push	{r7}
 8017d72:	b083      	sub	sp, #12
 8017d74:	af00      	add	r7, sp, #0
 8017d76:	6078      	str	r0, [r7, #4]
 8017d78:	2300      	movs	r3, #0
 8017d7a:	4618      	mov	r0, r3
 8017d7c:	370c      	adds	r7, #12
 8017d7e:	46bd      	mov	sp, r7
 8017d80:	bc80      	pop	{r7}
 8017d82:	4770      	bx	lr

08017d84 <LoRaMacClassBStopRxSlots>:
 8017d84:	b480      	push	{r7}
 8017d86:	af00      	add	r7, sp, #0
 8017d88:	bf00      	nop
 8017d8a:	46bd      	mov	sp, r7
 8017d8c:	bc80      	pop	{r7}
 8017d8e:	4770      	bx	lr

08017d90 <LoRaMacClassBProcess>:
 8017d90:	b480      	push	{r7}
 8017d92:	af00      	add	r7, sp, #0
 8017d94:	bf00      	nop
 8017d96:	46bd      	mov	sp, r7
 8017d98:	bc80      	pop	{r7}
 8017d9a:	4770      	bx	lr

08017d9c <IsSlotFree>:
 8017d9c:	b480      	push	{r7}
 8017d9e:	b085      	sub	sp, #20
 8017da0:	af00      	add	r7, sp, #0
 8017da2:	6078      	str	r0, [r7, #4]
 8017da4:	687b      	ldr	r3, [r7, #4]
 8017da6:	60bb      	str	r3, [r7, #8]
 8017da8:	2300      	movs	r3, #0
 8017daa:	81fb      	strh	r3, [r7, #14]
 8017dac:	e00a      	b.n	8017dc4 <IsSlotFree+0x28>
 8017dae:	89fb      	ldrh	r3, [r7, #14]
 8017db0:	68ba      	ldr	r2, [r7, #8]
 8017db2:	4413      	add	r3, r2
 8017db4:	781b      	ldrb	r3, [r3, #0]
 8017db6:	2b00      	cmp	r3, #0
 8017db8:	d001      	beq.n	8017dbe <IsSlotFree+0x22>
 8017dba:	2300      	movs	r3, #0
 8017dbc:	e006      	b.n	8017dcc <IsSlotFree+0x30>
 8017dbe:	89fb      	ldrh	r3, [r7, #14]
 8017dc0:	3301      	adds	r3, #1
 8017dc2:	81fb      	strh	r3, [r7, #14]
 8017dc4:	89fb      	ldrh	r3, [r7, #14]
 8017dc6:	2b0f      	cmp	r3, #15
 8017dc8:	d9f1      	bls.n	8017dae <IsSlotFree+0x12>
 8017dca:	2301      	movs	r3, #1
 8017dcc:	4618      	mov	r0, r3
 8017dce:	3714      	adds	r7, #20
 8017dd0:	46bd      	mov	sp, r7
 8017dd2:	bc80      	pop	{r7}
 8017dd4:	4770      	bx	lr
	...

08017dd8 <MallocNewMacCommandSlot>:
 8017dd8:	b580      	push	{r7, lr}
 8017dda:	b082      	sub	sp, #8
 8017ddc:	af00      	add	r7, sp, #0
 8017dde:	2300      	movs	r3, #0
 8017de0:	71fb      	strb	r3, [r7, #7]
 8017de2:	e007      	b.n	8017df4 <MallocNewMacCommandSlot+0x1c>
 8017de4:	79fb      	ldrb	r3, [r7, #7]
 8017de6:	3301      	adds	r3, #1
 8017de8:	71fb      	strb	r3, [r7, #7]
 8017dea:	79fb      	ldrb	r3, [r7, #7]
 8017dec:	2b0f      	cmp	r3, #15
 8017dee:	d101      	bne.n	8017df4 <MallocNewMacCommandSlot+0x1c>
 8017df0:	2300      	movs	r3, #0
 8017df2:	e012      	b.n	8017e1a <MallocNewMacCommandSlot+0x42>
 8017df4:	79fb      	ldrb	r3, [r7, #7]
 8017df6:	011b      	lsls	r3, r3, #4
 8017df8:	3308      	adds	r3, #8
 8017dfa:	4a0a      	ldr	r2, [pc, #40]	; (8017e24 <MallocNewMacCommandSlot+0x4c>)
 8017dfc:	4413      	add	r3, r2
 8017dfe:	4618      	mov	r0, r3
 8017e00:	f7ff ffcc 	bl	8017d9c <IsSlotFree>
 8017e04:	4603      	mov	r3, r0
 8017e06:	f083 0301 	eor.w	r3, r3, #1
 8017e0a:	b2db      	uxtb	r3, r3
 8017e0c:	2b00      	cmp	r3, #0
 8017e0e:	d1e9      	bne.n	8017de4 <MallocNewMacCommandSlot+0xc>
 8017e10:	79fb      	ldrb	r3, [r7, #7]
 8017e12:	011b      	lsls	r3, r3, #4
 8017e14:	3308      	adds	r3, #8
 8017e16:	4a03      	ldr	r2, [pc, #12]	; (8017e24 <MallocNewMacCommandSlot+0x4c>)
 8017e18:	4413      	add	r3, r2
 8017e1a:	4618      	mov	r0, r3
 8017e1c:	3708      	adds	r7, #8
 8017e1e:	46bd      	mov	sp, r7
 8017e20:	bd80      	pop	{r7, pc}
 8017e22:	bf00      	nop
 8017e24:	20001218 	.word	0x20001218

08017e28 <FreeMacCommandSlot>:
 8017e28:	b580      	push	{r7, lr}
 8017e2a:	b082      	sub	sp, #8
 8017e2c:	af00      	add	r7, sp, #0
 8017e2e:	6078      	str	r0, [r7, #4]
 8017e30:	687b      	ldr	r3, [r7, #4]
 8017e32:	2b00      	cmp	r3, #0
 8017e34:	d101      	bne.n	8017e3a <FreeMacCommandSlot+0x12>
 8017e36:	2300      	movs	r3, #0
 8017e38:	e005      	b.n	8017e46 <FreeMacCommandSlot+0x1e>
 8017e3a:	2210      	movs	r2, #16
 8017e3c:	2100      	movs	r1, #0
 8017e3e:	6878      	ldr	r0, [r7, #4]
 8017e40:	f005 fc2e 	bl	801d6a0 <memset1>
 8017e44:	2301      	movs	r3, #1
 8017e46:	4618      	mov	r0, r3
 8017e48:	3708      	adds	r7, #8
 8017e4a:	46bd      	mov	sp, r7
 8017e4c:	bd80      	pop	{r7, pc}

08017e4e <LinkedListInit>:
 8017e4e:	b480      	push	{r7}
 8017e50:	b083      	sub	sp, #12
 8017e52:	af00      	add	r7, sp, #0
 8017e54:	6078      	str	r0, [r7, #4]
 8017e56:	687b      	ldr	r3, [r7, #4]
 8017e58:	2b00      	cmp	r3, #0
 8017e5a:	d101      	bne.n	8017e60 <LinkedListInit+0x12>
 8017e5c:	2300      	movs	r3, #0
 8017e5e:	e006      	b.n	8017e6e <LinkedListInit+0x20>
 8017e60:	687b      	ldr	r3, [r7, #4]
 8017e62:	2200      	movs	r2, #0
 8017e64:	601a      	str	r2, [r3, #0]
 8017e66:	687b      	ldr	r3, [r7, #4]
 8017e68:	2200      	movs	r2, #0
 8017e6a:	605a      	str	r2, [r3, #4]
 8017e6c:	2301      	movs	r3, #1
 8017e6e:	4618      	mov	r0, r3
 8017e70:	370c      	adds	r7, #12
 8017e72:	46bd      	mov	sp, r7
 8017e74:	bc80      	pop	{r7}
 8017e76:	4770      	bx	lr

08017e78 <LinkedListAdd>:
 8017e78:	b480      	push	{r7}
 8017e7a:	b083      	sub	sp, #12
 8017e7c:	af00      	add	r7, sp, #0
 8017e7e:	6078      	str	r0, [r7, #4]
 8017e80:	6039      	str	r1, [r7, #0]
 8017e82:	687b      	ldr	r3, [r7, #4]
 8017e84:	2b00      	cmp	r3, #0
 8017e86:	d002      	beq.n	8017e8e <LinkedListAdd+0x16>
 8017e88:	683b      	ldr	r3, [r7, #0]
 8017e8a:	2b00      	cmp	r3, #0
 8017e8c:	d101      	bne.n	8017e92 <LinkedListAdd+0x1a>
 8017e8e:	2300      	movs	r3, #0
 8017e90:	e015      	b.n	8017ebe <LinkedListAdd+0x46>
 8017e92:	687b      	ldr	r3, [r7, #4]
 8017e94:	681b      	ldr	r3, [r3, #0]
 8017e96:	2b00      	cmp	r3, #0
 8017e98:	d102      	bne.n	8017ea0 <LinkedListAdd+0x28>
 8017e9a:	687b      	ldr	r3, [r7, #4]
 8017e9c:	683a      	ldr	r2, [r7, #0]
 8017e9e:	601a      	str	r2, [r3, #0]
 8017ea0:	687b      	ldr	r3, [r7, #4]
 8017ea2:	685b      	ldr	r3, [r3, #4]
 8017ea4:	2b00      	cmp	r3, #0
 8017ea6:	d003      	beq.n	8017eb0 <LinkedListAdd+0x38>
 8017ea8:	687b      	ldr	r3, [r7, #4]
 8017eaa:	685b      	ldr	r3, [r3, #4]
 8017eac:	683a      	ldr	r2, [r7, #0]
 8017eae:	601a      	str	r2, [r3, #0]
 8017eb0:	683b      	ldr	r3, [r7, #0]
 8017eb2:	2200      	movs	r2, #0
 8017eb4:	601a      	str	r2, [r3, #0]
 8017eb6:	687b      	ldr	r3, [r7, #4]
 8017eb8:	683a      	ldr	r2, [r7, #0]
 8017eba:	605a      	str	r2, [r3, #4]
 8017ebc:	2301      	movs	r3, #1
 8017ebe:	4618      	mov	r0, r3
 8017ec0:	370c      	adds	r7, #12
 8017ec2:	46bd      	mov	sp, r7
 8017ec4:	bc80      	pop	{r7}
 8017ec6:	4770      	bx	lr

08017ec8 <LinkedListGetPrevious>:
 8017ec8:	b480      	push	{r7}
 8017eca:	b085      	sub	sp, #20
 8017ecc:	af00      	add	r7, sp, #0
 8017ece:	6078      	str	r0, [r7, #4]
 8017ed0:	6039      	str	r1, [r7, #0]
 8017ed2:	687b      	ldr	r3, [r7, #4]
 8017ed4:	2b00      	cmp	r3, #0
 8017ed6:	d002      	beq.n	8017ede <LinkedListGetPrevious+0x16>
 8017ed8:	683b      	ldr	r3, [r7, #0]
 8017eda:	2b00      	cmp	r3, #0
 8017edc:	d101      	bne.n	8017ee2 <LinkedListGetPrevious+0x1a>
 8017ede:	2300      	movs	r3, #0
 8017ee0:	e016      	b.n	8017f10 <LinkedListGetPrevious+0x48>
 8017ee2:	687b      	ldr	r3, [r7, #4]
 8017ee4:	681b      	ldr	r3, [r3, #0]
 8017ee6:	60fb      	str	r3, [r7, #12]
 8017ee8:	683a      	ldr	r2, [r7, #0]
 8017eea:	68fb      	ldr	r3, [r7, #12]
 8017eec:	429a      	cmp	r2, r3
 8017eee:	d00c      	beq.n	8017f0a <LinkedListGetPrevious+0x42>
 8017ef0:	e002      	b.n	8017ef8 <LinkedListGetPrevious+0x30>
 8017ef2:	68fb      	ldr	r3, [r7, #12]
 8017ef4:	681b      	ldr	r3, [r3, #0]
 8017ef6:	60fb      	str	r3, [r7, #12]
 8017ef8:	68fb      	ldr	r3, [r7, #12]
 8017efa:	2b00      	cmp	r3, #0
 8017efc:	d007      	beq.n	8017f0e <LinkedListGetPrevious+0x46>
 8017efe:	68fb      	ldr	r3, [r7, #12]
 8017f00:	681b      	ldr	r3, [r3, #0]
 8017f02:	683a      	ldr	r2, [r7, #0]
 8017f04:	429a      	cmp	r2, r3
 8017f06:	d1f4      	bne.n	8017ef2 <LinkedListGetPrevious+0x2a>
 8017f08:	e001      	b.n	8017f0e <LinkedListGetPrevious+0x46>
 8017f0a:	2300      	movs	r3, #0
 8017f0c:	60fb      	str	r3, [r7, #12]
 8017f0e:	68fb      	ldr	r3, [r7, #12]
 8017f10:	4618      	mov	r0, r3
 8017f12:	3714      	adds	r7, #20
 8017f14:	46bd      	mov	sp, r7
 8017f16:	bc80      	pop	{r7}
 8017f18:	4770      	bx	lr

08017f1a <LinkedListRemove>:
 8017f1a:	b580      	push	{r7, lr}
 8017f1c:	b084      	sub	sp, #16
 8017f1e:	af00      	add	r7, sp, #0
 8017f20:	6078      	str	r0, [r7, #4]
 8017f22:	6039      	str	r1, [r7, #0]
 8017f24:	687b      	ldr	r3, [r7, #4]
 8017f26:	2b00      	cmp	r3, #0
 8017f28:	d002      	beq.n	8017f30 <LinkedListRemove+0x16>
 8017f2a:	683b      	ldr	r3, [r7, #0]
 8017f2c:	2b00      	cmp	r3, #0
 8017f2e:	d101      	bne.n	8017f34 <LinkedListRemove+0x1a>
 8017f30:	2300      	movs	r3, #0
 8017f32:	e020      	b.n	8017f76 <LinkedListRemove+0x5c>
 8017f34:	6839      	ldr	r1, [r7, #0]
 8017f36:	6878      	ldr	r0, [r7, #4]
 8017f38:	f7ff ffc6 	bl	8017ec8 <LinkedListGetPrevious>
 8017f3c:	60f8      	str	r0, [r7, #12]
 8017f3e:	687b      	ldr	r3, [r7, #4]
 8017f40:	681b      	ldr	r3, [r3, #0]
 8017f42:	683a      	ldr	r2, [r7, #0]
 8017f44:	429a      	cmp	r2, r3
 8017f46:	d103      	bne.n	8017f50 <LinkedListRemove+0x36>
 8017f48:	683b      	ldr	r3, [r7, #0]
 8017f4a:	681a      	ldr	r2, [r3, #0]
 8017f4c:	687b      	ldr	r3, [r7, #4]
 8017f4e:	601a      	str	r2, [r3, #0]
 8017f50:	687b      	ldr	r3, [r7, #4]
 8017f52:	685b      	ldr	r3, [r3, #4]
 8017f54:	683a      	ldr	r2, [r7, #0]
 8017f56:	429a      	cmp	r2, r3
 8017f58:	d102      	bne.n	8017f60 <LinkedListRemove+0x46>
 8017f5a:	687b      	ldr	r3, [r7, #4]
 8017f5c:	68fa      	ldr	r2, [r7, #12]
 8017f5e:	605a      	str	r2, [r3, #4]
 8017f60:	68fb      	ldr	r3, [r7, #12]
 8017f62:	2b00      	cmp	r3, #0
 8017f64:	d003      	beq.n	8017f6e <LinkedListRemove+0x54>
 8017f66:	683b      	ldr	r3, [r7, #0]
 8017f68:	681a      	ldr	r2, [r3, #0]
 8017f6a:	68fb      	ldr	r3, [r7, #12]
 8017f6c:	601a      	str	r2, [r3, #0]
 8017f6e:	683b      	ldr	r3, [r7, #0]
 8017f70:	2200      	movs	r2, #0
 8017f72:	601a      	str	r2, [r3, #0]
 8017f74:	2301      	movs	r3, #1
 8017f76:	4618      	mov	r0, r3
 8017f78:	3710      	adds	r7, #16
 8017f7a:	46bd      	mov	sp, r7
 8017f7c:	bd80      	pop	{r7, pc}

08017f7e <IsSticky>:
 8017f7e:	b480      	push	{r7}
 8017f80:	b083      	sub	sp, #12
 8017f82:	af00      	add	r7, sp, #0
 8017f84:	4603      	mov	r3, r0
 8017f86:	71fb      	strb	r3, [r7, #7]
 8017f88:	79fb      	ldrb	r3, [r7, #7]
 8017f8a:	2b05      	cmp	r3, #5
 8017f8c:	d004      	beq.n	8017f98 <IsSticky+0x1a>
 8017f8e:	2b05      	cmp	r3, #5
 8017f90:	db04      	blt.n	8017f9c <IsSticky+0x1e>
 8017f92:	3b08      	subs	r3, #8
 8017f94:	2b02      	cmp	r3, #2
 8017f96:	d801      	bhi.n	8017f9c <IsSticky+0x1e>
 8017f98:	2301      	movs	r3, #1
 8017f9a:	e000      	b.n	8017f9e <IsSticky+0x20>
 8017f9c:	2300      	movs	r3, #0
 8017f9e:	4618      	mov	r0, r3
 8017fa0:	370c      	adds	r7, #12
 8017fa2:	46bd      	mov	sp, r7
 8017fa4:	bc80      	pop	{r7}
 8017fa6:	4770      	bx	lr

08017fa8 <NvmCtxCallback>:
 8017fa8:	b580      	push	{r7, lr}
 8017faa:	af00      	add	r7, sp, #0
 8017fac:	4b04      	ldr	r3, [pc, #16]	; (8017fc0 <NvmCtxCallback+0x18>)
 8017fae:	681b      	ldr	r3, [r3, #0]
 8017fb0:	2b00      	cmp	r3, #0
 8017fb2:	d002      	beq.n	8017fba <NvmCtxCallback+0x12>
 8017fb4:	4b02      	ldr	r3, [pc, #8]	; (8017fc0 <NvmCtxCallback+0x18>)
 8017fb6:	681b      	ldr	r3, [r3, #0]
 8017fb8:	4798      	blx	r3
 8017fba:	bf00      	nop
 8017fbc:	bd80      	pop	{r7, pc}
 8017fbe:	bf00      	nop
 8017fc0:	20001214 	.word	0x20001214

08017fc4 <LoRaMacCommandsInit>:
 8017fc4:	b580      	push	{r7, lr}
 8017fc6:	b082      	sub	sp, #8
 8017fc8:	af00      	add	r7, sp, #0
 8017fca:	6078      	str	r0, [r7, #4]
 8017fcc:	22fc      	movs	r2, #252	; 0xfc
 8017fce:	2100      	movs	r1, #0
 8017fd0:	4806      	ldr	r0, [pc, #24]	; (8017fec <LoRaMacCommandsInit+0x28>)
 8017fd2:	f005 fb65 	bl	801d6a0 <memset1>
 8017fd6:	4805      	ldr	r0, [pc, #20]	; (8017fec <LoRaMacCommandsInit+0x28>)
 8017fd8:	f7ff ff39 	bl	8017e4e <LinkedListInit>
 8017fdc:	4a04      	ldr	r2, [pc, #16]	; (8017ff0 <LoRaMacCommandsInit+0x2c>)
 8017fde:	687b      	ldr	r3, [r7, #4]
 8017fe0:	6013      	str	r3, [r2, #0]
 8017fe2:	2300      	movs	r3, #0
 8017fe4:	4618      	mov	r0, r3
 8017fe6:	3708      	adds	r7, #8
 8017fe8:	46bd      	mov	sp, r7
 8017fea:	bd80      	pop	{r7, pc}
 8017fec:	20001218 	.word	0x20001218
 8017ff0:	20001214 	.word	0x20001214

08017ff4 <LoRaMacCommandsRestoreNvmCtx>:
 8017ff4:	b580      	push	{r7, lr}
 8017ff6:	b082      	sub	sp, #8
 8017ff8:	af00      	add	r7, sp, #0
 8017ffa:	6078      	str	r0, [r7, #4]
 8017ffc:	687b      	ldr	r3, [r7, #4]
 8017ffe:	2b00      	cmp	r3, #0
 8018000:	d006      	beq.n	8018010 <LoRaMacCommandsRestoreNvmCtx+0x1c>
 8018002:	22fc      	movs	r2, #252	; 0xfc
 8018004:	6879      	ldr	r1, [r7, #4]
 8018006:	4805      	ldr	r0, [pc, #20]	; (801801c <LoRaMacCommandsRestoreNvmCtx+0x28>)
 8018008:	f005 fb0f 	bl	801d62a <memcpy1>
 801800c:	2300      	movs	r3, #0
 801800e:	e000      	b.n	8018012 <LoRaMacCommandsRestoreNvmCtx+0x1e>
 8018010:	2301      	movs	r3, #1
 8018012:	4618      	mov	r0, r3
 8018014:	3708      	adds	r7, #8
 8018016:	46bd      	mov	sp, r7
 8018018:	bd80      	pop	{r7, pc}
 801801a:	bf00      	nop
 801801c:	20001218 	.word	0x20001218

08018020 <LoRaMacCommandsGetNvmCtx>:
 8018020:	b480      	push	{r7}
 8018022:	b083      	sub	sp, #12
 8018024:	af00      	add	r7, sp, #0
 8018026:	6078      	str	r0, [r7, #4]
 8018028:	687b      	ldr	r3, [r7, #4]
 801802a:	22fc      	movs	r2, #252	; 0xfc
 801802c:	601a      	str	r2, [r3, #0]
 801802e:	4b03      	ldr	r3, [pc, #12]	; (801803c <LoRaMacCommandsGetNvmCtx+0x1c>)
 8018030:	4618      	mov	r0, r3
 8018032:	370c      	adds	r7, #12
 8018034:	46bd      	mov	sp, r7
 8018036:	bc80      	pop	{r7}
 8018038:	4770      	bx	lr
 801803a:	bf00      	nop
 801803c:	20001218 	.word	0x20001218

08018040 <LoRaMacCommandsAddCmd>:
 8018040:	b580      	push	{r7, lr}
 8018042:	b086      	sub	sp, #24
 8018044:	af00      	add	r7, sp, #0
 8018046:	4603      	mov	r3, r0
 8018048:	60b9      	str	r1, [r7, #8]
 801804a:	607a      	str	r2, [r7, #4]
 801804c:	73fb      	strb	r3, [r7, #15]
 801804e:	68bb      	ldr	r3, [r7, #8]
 8018050:	2b00      	cmp	r3, #0
 8018052:	d101      	bne.n	8018058 <LoRaMacCommandsAddCmd+0x18>
 8018054:	2301      	movs	r3, #1
 8018056:	e035      	b.n	80180c4 <LoRaMacCommandsAddCmd+0x84>
 8018058:	f7ff febe 	bl	8017dd8 <MallocNewMacCommandSlot>
 801805c:	6178      	str	r0, [r7, #20]
 801805e:	697b      	ldr	r3, [r7, #20]
 8018060:	2b00      	cmp	r3, #0
 8018062:	d101      	bne.n	8018068 <LoRaMacCommandsAddCmd+0x28>
 8018064:	2302      	movs	r3, #2
 8018066:	e02d      	b.n	80180c4 <LoRaMacCommandsAddCmd+0x84>
 8018068:	6979      	ldr	r1, [r7, #20]
 801806a:	4818      	ldr	r0, [pc, #96]	; (80180cc <LoRaMacCommandsAddCmd+0x8c>)
 801806c:	f7ff ff04 	bl	8017e78 <LinkedListAdd>
 8018070:	4603      	mov	r3, r0
 8018072:	f083 0301 	eor.w	r3, r3, #1
 8018076:	b2db      	uxtb	r3, r3
 8018078:	2b00      	cmp	r3, #0
 801807a:	d001      	beq.n	8018080 <LoRaMacCommandsAddCmd+0x40>
 801807c:	2305      	movs	r3, #5
 801807e:	e021      	b.n	80180c4 <LoRaMacCommandsAddCmd+0x84>
 8018080:	697b      	ldr	r3, [r7, #20]
 8018082:	7bfa      	ldrb	r2, [r7, #15]
 8018084:	711a      	strb	r2, [r3, #4]
 8018086:	697b      	ldr	r3, [r7, #20]
 8018088:	687a      	ldr	r2, [r7, #4]
 801808a:	609a      	str	r2, [r3, #8]
 801808c:	697b      	ldr	r3, [r7, #20]
 801808e:	3305      	adds	r3, #5
 8018090:	687a      	ldr	r2, [r7, #4]
 8018092:	b292      	uxth	r2, r2
 8018094:	68b9      	ldr	r1, [r7, #8]
 8018096:	4618      	mov	r0, r3
 8018098:	f005 fac7 	bl	801d62a <memcpy1>
 801809c:	7bfb      	ldrb	r3, [r7, #15]
 801809e:	4618      	mov	r0, r3
 80180a0:	f7ff ff6d 	bl	8017f7e <IsSticky>
 80180a4:	4603      	mov	r3, r0
 80180a6:	461a      	mov	r2, r3
 80180a8:	697b      	ldr	r3, [r7, #20]
 80180aa:	731a      	strb	r2, [r3, #12]
 80180ac:	4b07      	ldr	r3, [pc, #28]	; (80180cc <LoRaMacCommandsAddCmd+0x8c>)
 80180ae:	f8d3 20f8 	ldr.w	r2, [r3, #248]	; 0xf8
 80180b2:	687b      	ldr	r3, [r7, #4]
 80180b4:	4413      	add	r3, r2
 80180b6:	3301      	adds	r3, #1
 80180b8:	4a04      	ldr	r2, [pc, #16]	; (80180cc <LoRaMacCommandsAddCmd+0x8c>)
 80180ba:	f8c2 30f8 	str.w	r3, [r2, #248]	; 0xf8
 80180be:	f7ff ff73 	bl	8017fa8 <NvmCtxCallback>
 80180c2:	2300      	movs	r3, #0
 80180c4:	4618      	mov	r0, r3
 80180c6:	3718      	adds	r7, #24
 80180c8:	46bd      	mov	sp, r7
 80180ca:	bd80      	pop	{r7, pc}
 80180cc:	20001218 	.word	0x20001218

080180d0 <LoRaMacCommandsRemoveCmd>:
 80180d0:	b580      	push	{r7, lr}
 80180d2:	b082      	sub	sp, #8
 80180d4:	af00      	add	r7, sp, #0
 80180d6:	6078      	str	r0, [r7, #4]
 80180d8:	687b      	ldr	r3, [r7, #4]
 80180da:	2b00      	cmp	r3, #0
 80180dc:	d101      	bne.n	80180e2 <LoRaMacCommandsRemoveCmd+0x12>
 80180de:	2301      	movs	r3, #1
 80180e0:	e023      	b.n	801812a <LoRaMacCommandsRemoveCmd+0x5a>
 80180e2:	6879      	ldr	r1, [r7, #4]
 80180e4:	4813      	ldr	r0, [pc, #76]	; (8018134 <LoRaMacCommandsRemoveCmd+0x64>)
 80180e6:	f7ff ff18 	bl	8017f1a <LinkedListRemove>
 80180ea:	4603      	mov	r3, r0
 80180ec:	f083 0301 	eor.w	r3, r3, #1
 80180f0:	b2db      	uxtb	r3, r3
 80180f2:	2b00      	cmp	r3, #0
 80180f4:	d001      	beq.n	80180fa <LoRaMacCommandsRemoveCmd+0x2a>
 80180f6:	2303      	movs	r3, #3
 80180f8:	e017      	b.n	801812a <LoRaMacCommandsRemoveCmd+0x5a>
 80180fa:	4b0e      	ldr	r3, [pc, #56]	; (8018134 <LoRaMacCommandsRemoveCmd+0x64>)
 80180fc:	f8d3 20f8 	ldr.w	r2, [r3, #248]	; 0xf8
 8018100:	687b      	ldr	r3, [r7, #4]
 8018102:	689b      	ldr	r3, [r3, #8]
 8018104:	1ad3      	subs	r3, r2, r3
 8018106:	3b01      	subs	r3, #1
 8018108:	4a0a      	ldr	r2, [pc, #40]	; (8018134 <LoRaMacCommandsRemoveCmd+0x64>)
 801810a:	f8c2 30f8 	str.w	r3, [r2, #248]	; 0xf8
 801810e:	6878      	ldr	r0, [r7, #4]
 8018110:	f7ff fe8a 	bl	8017e28 <FreeMacCommandSlot>
 8018114:	4603      	mov	r3, r0
 8018116:	f083 0301 	eor.w	r3, r3, #1
 801811a:	b2db      	uxtb	r3, r3
 801811c:	2b00      	cmp	r3, #0
 801811e:	d001      	beq.n	8018124 <LoRaMacCommandsRemoveCmd+0x54>
 8018120:	2305      	movs	r3, #5
 8018122:	e002      	b.n	801812a <LoRaMacCommandsRemoveCmd+0x5a>
 8018124:	f7ff ff40 	bl	8017fa8 <NvmCtxCallback>
 8018128:	2300      	movs	r3, #0
 801812a:	4618      	mov	r0, r3
 801812c:	3708      	adds	r7, #8
 801812e:	46bd      	mov	sp, r7
 8018130:	bd80      	pop	{r7, pc}
 8018132:	bf00      	nop
 8018134:	20001218 	.word	0x20001218

08018138 <LoRaMacCommandsRemoveNoneStickyCmds>:
 8018138:	b580      	push	{r7, lr}
 801813a:	b082      	sub	sp, #8
 801813c:	af00      	add	r7, sp, #0
 801813e:	4b10      	ldr	r3, [pc, #64]	; (8018180 <LoRaMacCommandsRemoveNoneStickyCmds+0x48>)
 8018140:	681b      	ldr	r3, [r3, #0]
 8018142:	607b      	str	r3, [r7, #4]
 8018144:	e012      	b.n	801816c <LoRaMacCommandsRemoveNoneStickyCmds+0x34>
 8018146:	687b      	ldr	r3, [r7, #4]
 8018148:	7b1b      	ldrb	r3, [r3, #12]
 801814a:	f083 0301 	eor.w	r3, r3, #1
 801814e:	b2db      	uxtb	r3, r3
 8018150:	2b00      	cmp	r3, #0
 8018152:	d008      	beq.n	8018166 <LoRaMacCommandsRemoveNoneStickyCmds+0x2e>
 8018154:	687b      	ldr	r3, [r7, #4]
 8018156:	681b      	ldr	r3, [r3, #0]
 8018158:	603b      	str	r3, [r7, #0]
 801815a:	6878      	ldr	r0, [r7, #4]
 801815c:	f7ff ffb8 	bl	80180d0 <LoRaMacCommandsRemoveCmd>
 8018160:	683b      	ldr	r3, [r7, #0]
 8018162:	607b      	str	r3, [r7, #4]
 8018164:	e002      	b.n	801816c <LoRaMacCommandsRemoveNoneStickyCmds+0x34>
 8018166:	687b      	ldr	r3, [r7, #4]
 8018168:	681b      	ldr	r3, [r3, #0]
 801816a:	607b      	str	r3, [r7, #4]
 801816c:	687b      	ldr	r3, [r7, #4]
 801816e:	2b00      	cmp	r3, #0
 8018170:	d1e9      	bne.n	8018146 <LoRaMacCommandsRemoveNoneStickyCmds+0xe>
 8018172:	f7ff ff19 	bl	8017fa8 <NvmCtxCallback>
 8018176:	2300      	movs	r3, #0
 8018178:	4618      	mov	r0, r3
 801817a:	3708      	adds	r7, #8
 801817c:	46bd      	mov	sp, r7
 801817e:	bd80      	pop	{r7, pc}
 8018180:	20001218 	.word	0x20001218

08018184 <LoRaMacCommandsRemoveStickyAnsCmds>:
 8018184:	b580      	push	{r7, lr}
 8018186:	b082      	sub	sp, #8
 8018188:	af00      	add	r7, sp, #0
 801818a:	4b0f      	ldr	r3, [pc, #60]	; (80181c8 <LoRaMacCommandsRemoveStickyAnsCmds+0x44>)
 801818c:	681b      	ldr	r3, [r3, #0]
 801818e:	607b      	str	r3, [r7, #4]
 8018190:	e00f      	b.n	80181b2 <LoRaMacCommandsRemoveStickyAnsCmds+0x2e>
 8018192:	687b      	ldr	r3, [r7, #4]
 8018194:	681b      	ldr	r3, [r3, #0]
 8018196:	603b      	str	r3, [r7, #0]
 8018198:	687b      	ldr	r3, [r7, #4]
 801819a:	791b      	ldrb	r3, [r3, #4]
 801819c:	4618      	mov	r0, r3
 801819e:	f7ff feee 	bl	8017f7e <IsSticky>
 80181a2:	4603      	mov	r3, r0
 80181a4:	2b00      	cmp	r3, #0
 80181a6:	d002      	beq.n	80181ae <LoRaMacCommandsRemoveStickyAnsCmds+0x2a>
 80181a8:	6878      	ldr	r0, [r7, #4]
 80181aa:	f7ff ff91 	bl	80180d0 <LoRaMacCommandsRemoveCmd>
 80181ae:	683b      	ldr	r3, [r7, #0]
 80181b0:	607b      	str	r3, [r7, #4]
 80181b2:	687b      	ldr	r3, [r7, #4]
 80181b4:	2b00      	cmp	r3, #0
 80181b6:	d1ec      	bne.n	8018192 <LoRaMacCommandsRemoveStickyAnsCmds+0xe>
 80181b8:	f7ff fef6 	bl	8017fa8 <NvmCtxCallback>
 80181bc:	2300      	movs	r3, #0
 80181be:	4618      	mov	r0, r3
 80181c0:	3708      	adds	r7, #8
 80181c2:	46bd      	mov	sp, r7
 80181c4:	bd80      	pop	{r7, pc}
 80181c6:	bf00      	nop
 80181c8:	20001218 	.word	0x20001218

080181cc <LoRaMacCommandsGetSizeSerializedCmds>:
 80181cc:	b480      	push	{r7}
 80181ce:	b083      	sub	sp, #12
 80181d0:	af00      	add	r7, sp, #0
 80181d2:	6078      	str	r0, [r7, #4]
 80181d4:	687b      	ldr	r3, [r7, #4]
 80181d6:	2b00      	cmp	r3, #0
 80181d8:	d101      	bne.n	80181de <LoRaMacCommandsGetSizeSerializedCmds+0x12>
 80181da:	2301      	movs	r3, #1
 80181dc:	e005      	b.n	80181ea <LoRaMacCommandsGetSizeSerializedCmds+0x1e>
 80181de:	4b05      	ldr	r3, [pc, #20]	; (80181f4 <LoRaMacCommandsGetSizeSerializedCmds+0x28>)
 80181e0:	f8d3 20f8 	ldr.w	r2, [r3, #248]	; 0xf8
 80181e4:	687b      	ldr	r3, [r7, #4]
 80181e6:	601a      	str	r2, [r3, #0]
 80181e8:	2300      	movs	r3, #0
 80181ea:	4618      	mov	r0, r3
 80181ec:	370c      	adds	r7, #12
 80181ee:	46bd      	mov	sp, r7
 80181f0:	bc80      	pop	{r7}
 80181f2:	4770      	bx	lr
 80181f4:	20001218 	.word	0x20001218

080181f8 <LoRaMacCommandsSerializeCmds>:
 80181f8:	b580      	push	{r7, lr}
 80181fa:	b088      	sub	sp, #32
 80181fc:	af00      	add	r7, sp, #0
 80181fe:	60f8      	str	r0, [r7, #12]
 8018200:	60b9      	str	r1, [r7, #8]
 8018202:	607a      	str	r2, [r7, #4]
 8018204:	4b25      	ldr	r3, [pc, #148]	; (801829c <LoRaMacCommandsSerializeCmds+0xa4>)
 8018206:	681b      	ldr	r3, [r3, #0]
 8018208:	61fb      	str	r3, [r7, #28]
 801820a:	2300      	movs	r3, #0
 801820c:	76fb      	strb	r3, [r7, #27]
 801820e:	687b      	ldr	r3, [r7, #4]
 8018210:	2b00      	cmp	r3, #0
 8018212:	d002      	beq.n	801821a <LoRaMacCommandsSerializeCmds+0x22>
 8018214:	68bb      	ldr	r3, [r7, #8]
 8018216:	2b00      	cmp	r3, #0
 8018218:	d126      	bne.n	8018268 <LoRaMacCommandsSerializeCmds+0x70>
 801821a:	2301      	movs	r3, #1
 801821c:	e039      	b.n	8018292 <LoRaMacCommandsSerializeCmds+0x9a>
 801821e:	7efb      	ldrb	r3, [r7, #27]
 8018220:	68fa      	ldr	r2, [r7, #12]
 8018222:	1ad2      	subs	r2, r2, r3
 8018224:	69fb      	ldr	r3, [r7, #28]
 8018226:	689b      	ldr	r3, [r3, #8]
 8018228:	3301      	adds	r3, #1
 801822a:	429a      	cmp	r2, r3
 801822c:	d320      	bcc.n	8018270 <LoRaMacCommandsSerializeCmds+0x78>
 801822e:	7efb      	ldrb	r3, [r7, #27]
 8018230:	1c5a      	adds	r2, r3, #1
 8018232:	76fa      	strb	r2, [r7, #27]
 8018234:	461a      	mov	r2, r3
 8018236:	687b      	ldr	r3, [r7, #4]
 8018238:	4413      	add	r3, r2
 801823a:	69fa      	ldr	r2, [r7, #28]
 801823c:	7912      	ldrb	r2, [r2, #4]
 801823e:	701a      	strb	r2, [r3, #0]
 8018240:	7efb      	ldrb	r3, [r7, #27]
 8018242:	687a      	ldr	r2, [r7, #4]
 8018244:	18d0      	adds	r0, r2, r3
 8018246:	69fb      	ldr	r3, [r7, #28]
 8018248:	1d59      	adds	r1, r3, #5
 801824a:	69fb      	ldr	r3, [r7, #28]
 801824c:	689b      	ldr	r3, [r3, #8]
 801824e:	b29b      	uxth	r3, r3
 8018250:	461a      	mov	r2, r3
 8018252:	f005 f9ea 	bl	801d62a <memcpy1>
 8018256:	69fb      	ldr	r3, [r7, #28]
 8018258:	689b      	ldr	r3, [r3, #8]
 801825a:	b2da      	uxtb	r2, r3
 801825c:	7efb      	ldrb	r3, [r7, #27]
 801825e:	4413      	add	r3, r2
 8018260:	76fb      	strb	r3, [r7, #27]
 8018262:	69fb      	ldr	r3, [r7, #28]
 8018264:	681b      	ldr	r3, [r3, #0]
 8018266:	61fb      	str	r3, [r7, #28]
 8018268:	69fb      	ldr	r3, [r7, #28]
 801826a:	2b00      	cmp	r3, #0
 801826c:	d1d7      	bne.n	801821e <LoRaMacCommandsSerializeCmds+0x26>
 801826e:	e009      	b.n	8018284 <LoRaMacCommandsSerializeCmds+0x8c>
 8018270:	bf00      	nop
 8018272:	e007      	b.n	8018284 <LoRaMacCommandsSerializeCmds+0x8c>
 8018274:	69fb      	ldr	r3, [r7, #28]
 8018276:	681b      	ldr	r3, [r3, #0]
 8018278:	617b      	str	r3, [r7, #20]
 801827a:	69f8      	ldr	r0, [r7, #28]
 801827c:	f7ff ff28 	bl	80180d0 <LoRaMacCommandsRemoveCmd>
 8018280:	697b      	ldr	r3, [r7, #20]
 8018282:	61fb      	str	r3, [r7, #28]
 8018284:	69fb      	ldr	r3, [r7, #28]
 8018286:	2b00      	cmp	r3, #0
 8018288:	d1f4      	bne.n	8018274 <LoRaMacCommandsSerializeCmds+0x7c>
 801828a:	68b8      	ldr	r0, [r7, #8]
 801828c:	f7ff ff9e 	bl	80181cc <LoRaMacCommandsGetSizeSerializedCmds>
 8018290:	2300      	movs	r3, #0
 8018292:	4618      	mov	r0, r3
 8018294:	3720      	adds	r7, #32
 8018296:	46bd      	mov	sp, r7
 8018298:	bd80      	pop	{r7, pc}
 801829a:	bf00      	nop
 801829c:	20001218 	.word	0x20001218

080182a0 <LoRaMacCommandsStickyCmdsPending>:
 80182a0:	b480      	push	{r7}
 80182a2:	b085      	sub	sp, #20
 80182a4:	af00      	add	r7, sp, #0
 80182a6:	6078      	str	r0, [r7, #4]
 80182a8:	687b      	ldr	r3, [r7, #4]
 80182aa:	2b00      	cmp	r3, #0
 80182ac:	d101      	bne.n	80182b2 <LoRaMacCommandsStickyCmdsPending+0x12>
 80182ae:	2301      	movs	r3, #1
 80182b0:	e016      	b.n	80182e0 <LoRaMacCommandsStickyCmdsPending+0x40>
 80182b2:	4b0e      	ldr	r3, [pc, #56]	; (80182ec <LoRaMacCommandsStickyCmdsPending+0x4c>)
 80182b4:	681b      	ldr	r3, [r3, #0]
 80182b6:	60fb      	str	r3, [r7, #12]
 80182b8:	687b      	ldr	r3, [r7, #4]
 80182ba:	2200      	movs	r2, #0
 80182bc:	701a      	strb	r2, [r3, #0]
 80182be:	e00b      	b.n	80182d8 <LoRaMacCommandsStickyCmdsPending+0x38>
 80182c0:	68fb      	ldr	r3, [r7, #12]
 80182c2:	7b1b      	ldrb	r3, [r3, #12]
 80182c4:	2b00      	cmp	r3, #0
 80182c6:	d004      	beq.n	80182d2 <LoRaMacCommandsStickyCmdsPending+0x32>
 80182c8:	687b      	ldr	r3, [r7, #4]
 80182ca:	2201      	movs	r2, #1
 80182cc:	701a      	strb	r2, [r3, #0]
 80182ce:	2300      	movs	r3, #0
 80182d0:	e006      	b.n	80182e0 <LoRaMacCommandsStickyCmdsPending+0x40>
 80182d2:	68fb      	ldr	r3, [r7, #12]
 80182d4:	681b      	ldr	r3, [r3, #0]
 80182d6:	60fb      	str	r3, [r7, #12]
 80182d8:	68fb      	ldr	r3, [r7, #12]
 80182da:	2b00      	cmp	r3, #0
 80182dc:	d1f0      	bne.n	80182c0 <LoRaMacCommandsStickyCmdsPending+0x20>
 80182de:	2300      	movs	r3, #0
 80182e0:	4618      	mov	r0, r3
 80182e2:	3714      	adds	r7, #20
 80182e4:	46bd      	mov	sp, r7
 80182e6:	bc80      	pop	{r7}
 80182e8:	4770      	bx	lr
 80182ea:	bf00      	nop
 80182ec:	20001218 	.word	0x20001218

080182f0 <LoRaMacCommandsGetCmdSize>:
 80182f0:	b480      	push	{r7}
 80182f2:	b085      	sub	sp, #20
 80182f4:	af00      	add	r7, sp, #0
 80182f6:	4603      	mov	r3, r0
 80182f8:	71fb      	strb	r3, [r7, #7]
 80182fa:	2300      	movs	r3, #0
 80182fc:	73fb      	strb	r3, [r7, #15]
 80182fe:	79fb      	ldrb	r3, [r7, #7]
 8018300:	3b02      	subs	r3, #2
 8018302:	2b11      	cmp	r3, #17
 8018304:	d850      	bhi.n	80183a8 <LoRaMacCommandsGetCmdSize+0xb8>
 8018306:	a201      	add	r2, pc, #4	; (adr r2, 801830c <LoRaMacCommandsGetCmdSize+0x1c>)
 8018308:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 801830c:	08018355 	.word	0x08018355
 8018310:	0801835b 	.word	0x0801835b
 8018314:	08018361 	.word	0x08018361
 8018318:	08018367 	.word	0x08018367
 801831c:	0801836d 	.word	0x0801836d
 8018320:	08018373 	.word	0x08018373
 8018324:	08018379 	.word	0x08018379
 8018328:	0801837f 	.word	0x0801837f
 801832c:	08018385 	.word	0x08018385
 8018330:	080183a9 	.word	0x080183a9
 8018334:	080183a9 	.word	0x080183a9
 8018338:	0801838b 	.word	0x0801838b
 801833c:	080183a9 	.word	0x080183a9
 8018340:	080183a9 	.word	0x080183a9
 8018344:	08018391 	.word	0x08018391
 8018348:	08018397 	.word	0x08018397
 801834c:	0801839d 	.word	0x0801839d
 8018350:	080183a3 	.word	0x080183a3
 8018354:	2303      	movs	r3, #3
 8018356:	73fb      	strb	r3, [r7, #15]
 8018358:	e027      	b.n	80183aa <LoRaMacCommandsGetCmdSize+0xba>
 801835a:	2305      	movs	r3, #5
 801835c:	73fb      	strb	r3, [r7, #15]
 801835e:	e024      	b.n	80183aa <LoRaMacCommandsGetCmdSize+0xba>
 8018360:	2302      	movs	r3, #2
 8018362:	73fb      	strb	r3, [r7, #15]
 8018364:	e021      	b.n	80183aa <LoRaMacCommandsGetCmdSize+0xba>
 8018366:	2305      	movs	r3, #5
 8018368:	73fb      	strb	r3, [r7, #15]
 801836a:	e01e      	b.n	80183aa <LoRaMacCommandsGetCmdSize+0xba>
 801836c:	2301      	movs	r3, #1
 801836e:	73fb      	strb	r3, [r7, #15]
 8018370:	e01b      	b.n	80183aa <LoRaMacCommandsGetCmdSize+0xba>
 8018372:	2306      	movs	r3, #6
 8018374:	73fb      	strb	r3, [r7, #15]
 8018376:	e018      	b.n	80183aa <LoRaMacCommandsGetCmdSize+0xba>
 8018378:	2302      	movs	r3, #2
 801837a:	73fb      	strb	r3, [r7, #15]
 801837c:	e015      	b.n	80183aa <LoRaMacCommandsGetCmdSize+0xba>
 801837e:	2302      	movs	r3, #2
 8018380:	73fb      	strb	r3, [r7, #15]
 8018382:	e012      	b.n	80183aa <LoRaMacCommandsGetCmdSize+0xba>
 8018384:	2305      	movs	r3, #5
 8018386:	73fb      	strb	r3, [r7, #15]
 8018388:	e00f      	b.n	80183aa <LoRaMacCommandsGetCmdSize+0xba>
 801838a:	2306      	movs	r3, #6
 801838c:	73fb      	strb	r3, [r7, #15]
 801838e:	e00c      	b.n	80183aa <LoRaMacCommandsGetCmdSize+0xba>
 8018390:	2301      	movs	r3, #1
 8018392:	73fb      	strb	r3, [r7, #15]
 8018394:	e009      	b.n	80183aa <LoRaMacCommandsGetCmdSize+0xba>
 8018396:	2305      	movs	r3, #5
 8018398:	73fb      	strb	r3, [r7, #15]
 801839a:	e006      	b.n	80183aa <LoRaMacCommandsGetCmdSize+0xba>
 801839c:	2304      	movs	r3, #4
 801839e:	73fb      	strb	r3, [r7, #15]
 80183a0:	e003      	b.n	80183aa <LoRaMacCommandsGetCmdSize+0xba>
 80183a2:	2304      	movs	r3, #4
 80183a4:	73fb      	strb	r3, [r7, #15]
 80183a6:	e000      	b.n	80183aa <LoRaMacCommandsGetCmdSize+0xba>
 80183a8:	bf00      	nop
 80183aa:	7bfb      	ldrb	r3, [r7, #15]
 80183ac:	4618      	mov	r0, r3
 80183ae:	3714      	adds	r7, #20
 80183b0:	46bd      	mov	sp, r7
 80183b2:	bc80      	pop	{r7}
 80183b4:	4770      	bx	lr
 80183b6:	bf00      	nop

080183b8 <IncreaseBufferPointer>:
 80183b8:	b480      	push	{r7}
 80183ba:	b083      	sub	sp, #12
 80183bc:	af00      	add	r7, sp, #0
 80183be:	6078      	str	r0, [r7, #4]
 80183c0:	4b09      	ldr	r3, [pc, #36]	; (80183e8 <IncreaseBufferPointer+0x30>)
 80183c2:	691b      	ldr	r3, [r3, #16]
 80183c4:	3310      	adds	r3, #16
 80183c6:	687a      	ldr	r2, [r7, #4]
 80183c8:	429a      	cmp	r2, r3
 80183ca:	d103      	bne.n	80183d4 <IncreaseBufferPointer+0x1c>
 80183cc:	4b06      	ldr	r3, [pc, #24]	; (80183e8 <IncreaseBufferPointer+0x30>)
 80183ce:	691b      	ldr	r3, [r3, #16]
 80183d0:	607b      	str	r3, [r7, #4]
 80183d2:	e002      	b.n	80183da <IncreaseBufferPointer+0x22>
 80183d4:	687b      	ldr	r3, [r7, #4]
 80183d6:	3304      	adds	r3, #4
 80183d8:	607b      	str	r3, [r7, #4]
 80183da:	687b      	ldr	r3, [r7, #4]
 80183dc:	4618      	mov	r0, r3
 80183de:	370c      	adds	r7, #12
 80183e0:	46bd      	mov	sp, r7
 80183e2:	bc80      	pop	{r7}
 80183e4:	4770      	bx	lr
 80183e6:	bf00      	nop
 80183e8:	2000132c 	.word	0x2000132c

080183ec <IsListEmpty>:
 80183ec:	b480      	push	{r7}
 80183ee:	b083      	sub	sp, #12
 80183f0:	af00      	add	r7, sp, #0
 80183f2:	4603      	mov	r3, r0
 80183f4:	71fb      	strb	r3, [r7, #7]
 80183f6:	79fb      	ldrb	r3, [r7, #7]
 80183f8:	2b00      	cmp	r3, #0
 80183fa:	d101      	bne.n	8018400 <IsListEmpty+0x14>
 80183fc:	2301      	movs	r3, #1
 80183fe:	e000      	b.n	8018402 <IsListEmpty+0x16>
 8018400:	2300      	movs	r3, #0
 8018402:	4618      	mov	r0, r3
 8018404:	370c      	adds	r7, #12
 8018406:	46bd      	mov	sp, r7
 8018408:	bc80      	pop	{r7}
 801840a:	4770      	bx	lr

0801840c <IsListFull>:
 801840c:	b480      	push	{r7}
 801840e:	b083      	sub	sp, #12
 8018410:	af00      	add	r7, sp, #0
 8018412:	4603      	mov	r3, r0
 8018414:	71fb      	strb	r3, [r7, #7]
 8018416:	79fb      	ldrb	r3, [r7, #7]
 8018418:	2b04      	cmp	r3, #4
 801841a:	d901      	bls.n	8018420 <IsListFull+0x14>
 801841c:	2301      	movs	r3, #1
 801841e:	e000      	b.n	8018422 <IsListFull+0x16>
 8018420:	2300      	movs	r3, #0
 8018422:	4618      	mov	r0, r3
 8018424:	370c      	adds	r7, #12
 8018426:	46bd      	mov	sp, r7
 8018428:	bc80      	pop	{r7}
 801842a:	4770      	bx	lr

0801842c <GetElement>:
 801842c:	b580      	push	{r7, lr}
 801842e:	b086      	sub	sp, #24
 8018430:	af00      	add	r7, sp, #0
 8018432:	4603      	mov	r3, r0
 8018434:	60b9      	str	r1, [r7, #8]
 8018436:	607a      	str	r2, [r7, #4]
 8018438:	73fb      	strb	r3, [r7, #15]
 801843a:	68bb      	ldr	r3, [r7, #8]
 801843c:	617b      	str	r3, [r7, #20]
 801843e:	4b13      	ldr	r3, [pc, #76]	; (801848c <GetElement+0x60>)
 8018440:	691b      	ldr	r3, [r3, #16]
 8018442:	7d1b      	ldrb	r3, [r3, #20]
 8018444:	4618      	mov	r0, r3
 8018446:	f7ff ffd1 	bl	80183ec <IsListEmpty>
 801844a:	4603      	mov	r3, r0
 801844c:	2b00      	cmp	r3, #0
 801844e:	d001      	beq.n	8018454 <GetElement+0x28>
 8018450:	2300      	movs	r3, #0
 8018452:	e017      	b.n	8018484 <GetElement+0x58>
 8018454:	2300      	movs	r3, #0
 8018456:	74fb      	strb	r3, [r7, #19]
 8018458:	e00d      	b.n	8018476 <GetElement+0x4a>
 801845a:	697b      	ldr	r3, [r7, #20]
 801845c:	781b      	ldrb	r3, [r3, #0]
 801845e:	7bfa      	ldrb	r2, [r7, #15]
 8018460:	429a      	cmp	r2, r3
 8018462:	d101      	bne.n	8018468 <GetElement+0x3c>
 8018464:	697b      	ldr	r3, [r7, #20]
 8018466:	e00d      	b.n	8018484 <GetElement+0x58>
 8018468:	6978      	ldr	r0, [r7, #20]
 801846a:	f7ff ffa5 	bl	80183b8 <IncreaseBufferPointer>
 801846e:	6178      	str	r0, [r7, #20]
 8018470:	7cfb      	ldrb	r3, [r7, #19]
 8018472:	3301      	adds	r3, #1
 8018474:	74fb      	strb	r3, [r7, #19]
 8018476:	4b05      	ldr	r3, [pc, #20]	; (801848c <GetElement+0x60>)
 8018478:	691b      	ldr	r3, [r3, #16]
 801847a:	7d1b      	ldrb	r3, [r3, #20]
 801847c:	7cfa      	ldrb	r2, [r7, #19]
 801847e:	429a      	cmp	r2, r3
 8018480:	d3eb      	bcc.n	801845a <GetElement+0x2e>
 8018482:	2300      	movs	r3, #0
 8018484:	4618      	mov	r0, r3
 8018486:	3718      	adds	r7, #24
 8018488:	46bd      	mov	sp, r7
 801848a:	bd80      	pop	{r7, pc}
 801848c:	2000132c 	.word	0x2000132c

08018490 <LoRaMacConfirmQueueInit>:
 8018490:	b580      	push	{r7, lr}
 8018492:	b082      	sub	sp, #8
 8018494:	af00      	add	r7, sp, #0
 8018496:	6078      	str	r0, [r7, #4]
 8018498:	6039      	str	r1, [r7, #0]
 801849a:	4a13      	ldr	r2, [pc, #76]	; (80184e8 <LoRaMacConfirmQueueInit+0x58>)
 801849c:	687b      	ldr	r3, [r7, #4]
 801849e:	6013      	str	r3, [r2, #0]
 80184a0:	4b11      	ldr	r3, [pc, #68]	; (80184e8 <LoRaMacConfirmQueueInit+0x58>)
 80184a2:	4a12      	ldr	r2, [pc, #72]	; (80184ec <LoRaMacConfirmQueueInit+0x5c>)
 80184a4:	611a      	str	r2, [r3, #16]
 80184a6:	4b10      	ldr	r3, [pc, #64]	; (80184e8 <LoRaMacConfirmQueueInit+0x58>)
 80184a8:	691b      	ldr	r3, [r3, #16]
 80184aa:	2200      	movs	r2, #0
 80184ac:	751a      	strb	r2, [r3, #20]
 80184ae:	4b0e      	ldr	r3, [pc, #56]	; (80184e8 <LoRaMacConfirmQueueInit+0x58>)
 80184b0:	691b      	ldr	r3, [r3, #16]
 80184b2:	461a      	mov	r2, r3
 80184b4:	4b0c      	ldr	r3, [pc, #48]	; (80184e8 <LoRaMacConfirmQueueInit+0x58>)
 80184b6:	605a      	str	r2, [r3, #4]
 80184b8:	4b0b      	ldr	r3, [pc, #44]	; (80184e8 <LoRaMacConfirmQueueInit+0x58>)
 80184ba:	691b      	ldr	r3, [r3, #16]
 80184bc:	461a      	mov	r2, r3
 80184be:	4b0a      	ldr	r3, [pc, #40]	; (80184e8 <LoRaMacConfirmQueueInit+0x58>)
 80184c0:	609a      	str	r2, [r3, #8]
 80184c2:	4b09      	ldr	r3, [pc, #36]	; (80184e8 <LoRaMacConfirmQueueInit+0x58>)
 80184c4:	691b      	ldr	r3, [r3, #16]
 80184c6:	2214      	movs	r2, #20
 80184c8:	21ff      	movs	r1, #255	; 0xff
 80184ca:	4618      	mov	r0, r3
 80184cc:	f005 f8e8 	bl	801d6a0 <memset1>
 80184d0:	4b05      	ldr	r3, [pc, #20]	; (80184e8 <LoRaMacConfirmQueueInit+0x58>)
 80184d2:	691b      	ldr	r3, [r3, #16]
 80184d4:	2201      	movs	r2, #1
 80184d6:	755a      	strb	r2, [r3, #21]
 80184d8:	4a03      	ldr	r2, [pc, #12]	; (80184e8 <LoRaMacConfirmQueueInit+0x58>)
 80184da:	683b      	ldr	r3, [r7, #0]
 80184dc:	60d3      	str	r3, [r2, #12]
 80184de:	bf00      	nop
 80184e0:	3708      	adds	r7, #8
 80184e2:	46bd      	mov	sp, r7
 80184e4:	bd80      	pop	{r7, pc}
 80184e6:	bf00      	nop
 80184e8:	2000132c 	.word	0x2000132c
 80184ec:	20001314 	.word	0x20001314

080184f0 <LoRaMacConfirmQueueRestoreNvmCtx>:
 80184f0:	b580      	push	{r7, lr}
 80184f2:	b082      	sub	sp, #8
 80184f4:	af00      	add	r7, sp, #0
 80184f6:	6078      	str	r0, [r7, #4]
 80184f8:	687b      	ldr	r3, [r7, #4]
 80184fa:	2b00      	cmp	r3, #0
 80184fc:	d006      	beq.n	801850c <LoRaMacConfirmQueueRestoreNvmCtx+0x1c>
 80184fe:	2216      	movs	r2, #22
 8018500:	6879      	ldr	r1, [r7, #4]
 8018502:	4805      	ldr	r0, [pc, #20]	; (8018518 <LoRaMacConfirmQueueRestoreNvmCtx+0x28>)
 8018504:	f005 f891 	bl	801d62a <memcpy1>
 8018508:	2301      	movs	r3, #1
 801850a:	e000      	b.n	801850e <LoRaMacConfirmQueueRestoreNvmCtx+0x1e>
 801850c:	2300      	movs	r3, #0
 801850e:	4618      	mov	r0, r3
 8018510:	3708      	adds	r7, #8
 8018512:	46bd      	mov	sp, r7
 8018514:	bd80      	pop	{r7, pc}
 8018516:	bf00      	nop
 8018518:	20001314 	.word	0x20001314

0801851c <LoRaMacConfirmQueueGetNvmCtx>:
 801851c:	b480      	push	{r7}
 801851e:	b083      	sub	sp, #12
 8018520:	af00      	add	r7, sp, #0
 8018522:	6078      	str	r0, [r7, #4]
 8018524:	687b      	ldr	r3, [r7, #4]
 8018526:	2216      	movs	r2, #22
 8018528:	601a      	str	r2, [r3, #0]
 801852a:	4b03      	ldr	r3, [pc, #12]	; (8018538 <LoRaMacConfirmQueueGetNvmCtx+0x1c>)
 801852c:	4618      	mov	r0, r3
 801852e:	370c      	adds	r7, #12
 8018530:	46bd      	mov	sp, r7
 8018532:	bc80      	pop	{r7}
 8018534:	4770      	bx	lr
 8018536:	bf00      	nop
 8018538:	20001314 	.word	0x20001314

0801853c <LoRaMacConfirmQueueAdd>:
 801853c:	b580      	push	{r7, lr}
 801853e:	b082      	sub	sp, #8
 8018540:	af00      	add	r7, sp, #0
 8018542:	6078      	str	r0, [r7, #4]
 8018544:	4b18      	ldr	r3, [pc, #96]	; (80185a8 <LoRaMacConfirmQueueAdd+0x6c>)
 8018546:	691b      	ldr	r3, [r3, #16]
 8018548:	7d1b      	ldrb	r3, [r3, #20]
 801854a:	4618      	mov	r0, r3
 801854c:	f7ff ff5e 	bl	801840c <IsListFull>
 8018550:	4603      	mov	r3, r0
 8018552:	2b00      	cmp	r3, #0
 8018554:	d001      	beq.n	801855a <LoRaMacConfirmQueueAdd+0x1e>
 8018556:	2300      	movs	r3, #0
 8018558:	e021      	b.n	801859e <LoRaMacConfirmQueueAdd+0x62>
 801855a:	4b13      	ldr	r3, [pc, #76]	; (80185a8 <LoRaMacConfirmQueueAdd+0x6c>)
 801855c:	689b      	ldr	r3, [r3, #8]
 801855e:	687a      	ldr	r2, [r7, #4]
 8018560:	7812      	ldrb	r2, [r2, #0]
 8018562:	701a      	strb	r2, [r3, #0]
 8018564:	4b10      	ldr	r3, [pc, #64]	; (80185a8 <LoRaMacConfirmQueueAdd+0x6c>)
 8018566:	689b      	ldr	r3, [r3, #8]
 8018568:	687a      	ldr	r2, [r7, #4]
 801856a:	7852      	ldrb	r2, [r2, #1]
 801856c:	705a      	strb	r2, [r3, #1]
 801856e:	4b0e      	ldr	r3, [pc, #56]	; (80185a8 <LoRaMacConfirmQueueAdd+0x6c>)
 8018570:	689b      	ldr	r3, [r3, #8]
 8018572:	687a      	ldr	r2, [r7, #4]
 8018574:	78d2      	ldrb	r2, [r2, #3]
 8018576:	70da      	strb	r2, [r3, #3]
 8018578:	4b0b      	ldr	r3, [pc, #44]	; (80185a8 <LoRaMacConfirmQueueAdd+0x6c>)
 801857a:	689b      	ldr	r3, [r3, #8]
 801857c:	2200      	movs	r2, #0
 801857e:	709a      	strb	r2, [r3, #2]
 8018580:	4b09      	ldr	r3, [pc, #36]	; (80185a8 <LoRaMacConfirmQueueAdd+0x6c>)
 8018582:	691b      	ldr	r3, [r3, #16]
 8018584:	7d1a      	ldrb	r2, [r3, #20]
 8018586:	3201      	adds	r2, #1
 8018588:	b2d2      	uxtb	r2, r2
 801858a:	751a      	strb	r2, [r3, #20]
 801858c:	4b06      	ldr	r3, [pc, #24]	; (80185a8 <LoRaMacConfirmQueueAdd+0x6c>)
 801858e:	689b      	ldr	r3, [r3, #8]
 8018590:	4618      	mov	r0, r3
 8018592:	f7ff ff11 	bl	80183b8 <IncreaseBufferPointer>
 8018596:	4603      	mov	r3, r0
 8018598:	4a03      	ldr	r2, [pc, #12]	; (80185a8 <LoRaMacConfirmQueueAdd+0x6c>)
 801859a:	6093      	str	r3, [r2, #8]
 801859c:	2301      	movs	r3, #1
 801859e:	4618      	mov	r0, r3
 80185a0:	3708      	adds	r7, #8
 80185a2:	46bd      	mov	sp, r7
 80185a4:	bd80      	pop	{r7, pc}
 80185a6:	bf00      	nop
 80185a8:	2000132c 	.word	0x2000132c

080185ac <LoRaMacConfirmQueueRemoveFirst>:
 80185ac:	b580      	push	{r7, lr}
 80185ae:	af00      	add	r7, sp, #0
 80185b0:	4b0d      	ldr	r3, [pc, #52]	; (80185e8 <LoRaMacConfirmQueueRemoveFirst+0x3c>)
 80185b2:	691b      	ldr	r3, [r3, #16]
 80185b4:	7d1b      	ldrb	r3, [r3, #20]
 80185b6:	4618      	mov	r0, r3
 80185b8:	f7ff ff18 	bl	80183ec <IsListEmpty>
 80185bc:	4603      	mov	r3, r0
 80185be:	2b00      	cmp	r3, #0
 80185c0:	d001      	beq.n	80185c6 <LoRaMacConfirmQueueRemoveFirst+0x1a>
 80185c2:	2300      	movs	r3, #0
 80185c4:	e00e      	b.n	80185e4 <LoRaMacConfirmQueueRemoveFirst+0x38>
 80185c6:	4b08      	ldr	r3, [pc, #32]	; (80185e8 <LoRaMacConfirmQueueRemoveFirst+0x3c>)
 80185c8:	691b      	ldr	r3, [r3, #16]
 80185ca:	7d1a      	ldrb	r2, [r3, #20]
 80185cc:	3a01      	subs	r2, #1
 80185ce:	b2d2      	uxtb	r2, r2
 80185d0:	751a      	strb	r2, [r3, #20]
 80185d2:	4b05      	ldr	r3, [pc, #20]	; (80185e8 <LoRaMacConfirmQueueRemoveFirst+0x3c>)
 80185d4:	685b      	ldr	r3, [r3, #4]
 80185d6:	4618      	mov	r0, r3
 80185d8:	f7ff feee 	bl	80183b8 <IncreaseBufferPointer>
 80185dc:	4603      	mov	r3, r0
 80185de:	4a02      	ldr	r2, [pc, #8]	; (80185e8 <LoRaMacConfirmQueueRemoveFirst+0x3c>)
 80185e0:	6053      	str	r3, [r2, #4]
 80185e2:	2301      	movs	r3, #1
 80185e4:	4618      	mov	r0, r3
 80185e6:	bd80      	pop	{r7, pc}
 80185e8:	2000132c 	.word	0x2000132c

080185ec <LoRaMacConfirmQueueSetStatus>:
 80185ec:	b580      	push	{r7, lr}
 80185ee:	b084      	sub	sp, #16
 80185f0:	af00      	add	r7, sp, #0
 80185f2:	4603      	mov	r3, r0
 80185f4:	460a      	mov	r2, r1
 80185f6:	71fb      	strb	r3, [r7, #7]
 80185f8:	4613      	mov	r3, r2
 80185fa:	71bb      	strb	r3, [r7, #6]
 80185fc:	2300      	movs	r3, #0
 80185fe:	60fb      	str	r3, [r7, #12]
 8018600:	4b10      	ldr	r3, [pc, #64]	; (8018644 <LoRaMacConfirmQueueSetStatus+0x58>)
 8018602:	691b      	ldr	r3, [r3, #16]
 8018604:	7d1b      	ldrb	r3, [r3, #20]
 8018606:	4618      	mov	r0, r3
 8018608:	f7ff fef0 	bl	80183ec <IsListEmpty>
 801860c:	4603      	mov	r3, r0
 801860e:	f083 0301 	eor.w	r3, r3, #1
 8018612:	b2db      	uxtb	r3, r3
 8018614:	2b00      	cmp	r3, #0
 8018616:	d011      	beq.n	801863c <LoRaMacConfirmQueueSetStatus+0x50>
 8018618:	4b0a      	ldr	r3, [pc, #40]	; (8018644 <LoRaMacConfirmQueueSetStatus+0x58>)
 801861a:	6859      	ldr	r1, [r3, #4]
 801861c:	4b09      	ldr	r3, [pc, #36]	; (8018644 <LoRaMacConfirmQueueSetStatus+0x58>)
 801861e:	689a      	ldr	r2, [r3, #8]
 8018620:	79bb      	ldrb	r3, [r7, #6]
 8018622:	4618      	mov	r0, r3
 8018624:	f7ff ff02 	bl	801842c <GetElement>
 8018628:	60f8      	str	r0, [r7, #12]
 801862a:	68fb      	ldr	r3, [r7, #12]
 801862c:	2b00      	cmp	r3, #0
 801862e:	d005      	beq.n	801863c <LoRaMacConfirmQueueSetStatus+0x50>
 8018630:	68fb      	ldr	r3, [r7, #12]
 8018632:	79fa      	ldrb	r2, [r7, #7]
 8018634:	705a      	strb	r2, [r3, #1]
 8018636:	68fb      	ldr	r3, [r7, #12]
 8018638:	2201      	movs	r2, #1
 801863a:	709a      	strb	r2, [r3, #2]
 801863c:	bf00      	nop
 801863e:	3710      	adds	r7, #16
 8018640:	46bd      	mov	sp, r7
 8018642:	bd80      	pop	{r7, pc}
 8018644:	2000132c 	.word	0x2000132c

08018648 <LoRaMacConfirmQueueGetStatus>:
 8018648:	b580      	push	{r7, lr}
 801864a:	b084      	sub	sp, #16
 801864c:	af00      	add	r7, sp, #0
 801864e:	4603      	mov	r3, r0
 8018650:	71fb      	strb	r3, [r7, #7]
 8018652:	2300      	movs	r3, #0
 8018654:	60fb      	str	r3, [r7, #12]
 8018656:	4b10      	ldr	r3, [pc, #64]	; (8018698 <LoRaMacConfirmQueueGetStatus+0x50>)
 8018658:	691b      	ldr	r3, [r3, #16]
 801865a:	7d1b      	ldrb	r3, [r3, #20]
 801865c:	4618      	mov	r0, r3
 801865e:	f7ff fec5 	bl	80183ec <IsListEmpty>
 8018662:	4603      	mov	r3, r0
 8018664:	f083 0301 	eor.w	r3, r3, #1
 8018668:	b2db      	uxtb	r3, r3
 801866a:	2b00      	cmp	r3, #0
 801866c:	d00e      	beq.n	801868c <LoRaMacConfirmQueueGetStatus+0x44>
 801866e:	4b0a      	ldr	r3, [pc, #40]	; (8018698 <LoRaMacConfirmQueueGetStatus+0x50>)
 8018670:	6859      	ldr	r1, [r3, #4]
 8018672:	4b09      	ldr	r3, [pc, #36]	; (8018698 <LoRaMacConfirmQueueGetStatus+0x50>)
 8018674:	689a      	ldr	r2, [r3, #8]
 8018676:	79fb      	ldrb	r3, [r7, #7]
 8018678:	4618      	mov	r0, r3
 801867a:	f7ff fed7 	bl	801842c <GetElement>
 801867e:	60f8      	str	r0, [r7, #12]
 8018680:	68fb      	ldr	r3, [r7, #12]
 8018682:	2b00      	cmp	r3, #0
 8018684:	d002      	beq.n	801868c <LoRaMacConfirmQueueGetStatus+0x44>
 8018686:	68fb      	ldr	r3, [r7, #12]
 8018688:	785b      	ldrb	r3, [r3, #1]
 801868a:	e000      	b.n	801868e <LoRaMacConfirmQueueGetStatus+0x46>
 801868c:	2301      	movs	r3, #1
 801868e:	4618      	mov	r0, r3
 8018690:	3710      	adds	r7, #16
 8018692:	46bd      	mov	sp, r7
 8018694:	bd80      	pop	{r7, pc}
 8018696:	bf00      	nop
 8018698:	2000132c 	.word	0x2000132c

0801869c <LoRaMacConfirmQueueSetStatusCmn>:
 801869c:	b580      	push	{r7, lr}
 801869e:	b084      	sub	sp, #16
 80186a0:	af00      	add	r7, sp, #0
 80186a2:	4603      	mov	r3, r0
 80186a4:	71fb      	strb	r3, [r7, #7]
 80186a6:	4b16      	ldr	r3, [pc, #88]	; (8018700 <LoRaMacConfirmQueueSetStatusCmn+0x64>)
 80186a8:	685b      	ldr	r3, [r3, #4]
 80186aa:	60fb      	str	r3, [r7, #12]
 80186ac:	4b14      	ldr	r3, [pc, #80]	; (8018700 <LoRaMacConfirmQueueSetStatusCmn+0x64>)
 80186ae:	691b      	ldr	r3, [r3, #16]
 80186b0:	79fa      	ldrb	r2, [r7, #7]
 80186b2:	755a      	strb	r2, [r3, #21]
 80186b4:	4b12      	ldr	r3, [pc, #72]	; (8018700 <LoRaMacConfirmQueueSetStatusCmn+0x64>)
 80186b6:	691b      	ldr	r3, [r3, #16]
 80186b8:	7d1b      	ldrb	r3, [r3, #20]
 80186ba:	4618      	mov	r0, r3
 80186bc:	f7ff fe96 	bl	80183ec <IsListEmpty>
 80186c0:	4603      	mov	r3, r0
 80186c2:	f083 0301 	eor.w	r3, r3, #1
 80186c6:	b2db      	uxtb	r3, r3
 80186c8:	2b00      	cmp	r3, #0
 80186ca:	d015      	beq.n	80186f8 <LoRaMacConfirmQueueSetStatusCmn+0x5c>
 80186cc:	68fb      	ldr	r3, [r7, #12]
 80186ce:	79fa      	ldrb	r2, [r7, #7]
 80186d0:	705a      	strb	r2, [r3, #1]
 80186d2:	68fb      	ldr	r3, [r7, #12]
 80186d4:	78db      	ldrb	r3, [r3, #3]
 80186d6:	f083 0301 	eor.w	r3, r3, #1
 80186da:	b2db      	uxtb	r3, r3
 80186dc:	2b00      	cmp	r3, #0
 80186de:	d002      	beq.n	80186e6 <LoRaMacConfirmQueueSetStatusCmn+0x4a>
 80186e0:	68fb      	ldr	r3, [r7, #12]
 80186e2:	2201      	movs	r2, #1
 80186e4:	709a      	strb	r2, [r3, #2]
 80186e6:	68f8      	ldr	r0, [r7, #12]
 80186e8:	f7ff fe66 	bl	80183b8 <IncreaseBufferPointer>
 80186ec:	60f8      	str	r0, [r7, #12]
 80186ee:	4b04      	ldr	r3, [pc, #16]	; (8018700 <LoRaMacConfirmQueueSetStatusCmn+0x64>)
 80186f0:	689b      	ldr	r3, [r3, #8]
 80186f2:	68fa      	ldr	r2, [r7, #12]
 80186f4:	429a      	cmp	r2, r3
 80186f6:	d1e9      	bne.n	80186cc <LoRaMacConfirmQueueSetStatusCmn+0x30>
 80186f8:	bf00      	nop
 80186fa:	3710      	adds	r7, #16
 80186fc:	46bd      	mov	sp, r7
 80186fe:	bd80      	pop	{r7, pc}
 8018700:	2000132c 	.word	0x2000132c

08018704 <LoRaMacConfirmQueueIsCmdActive>:
 8018704:	b580      	push	{r7, lr}
 8018706:	b082      	sub	sp, #8
 8018708:	af00      	add	r7, sp, #0
 801870a:	4603      	mov	r3, r0
 801870c:	71fb      	strb	r3, [r7, #7]
 801870e:	4b09      	ldr	r3, [pc, #36]	; (8018734 <LoRaMacConfirmQueueIsCmdActive+0x30>)
 8018710:	6859      	ldr	r1, [r3, #4]
 8018712:	4b08      	ldr	r3, [pc, #32]	; (8018734 <LoRaMacConfirmQueueIsCmdActive+0x30>)
 8018714:	689a      	ldr	r2, [r3, #8]
 8018716:	79fb      	ldrb	r3, [r7, #7]
 8018718:	4618      	mov	r0, r3
 801871a:	f7ff fe87 	bl	801842c <GetElement>
 801871e:	4603      	mov	r3, r0
 8018720:	2b00      	cmp	r3, #0
 8018722:	d001      	beq.n	8018728 <LoRaMacConfirmQueueIsCmdActive+0x24>
 8018724:	2301      	movs	r3, #1
 8018726:	e000      	b.n	801872a <LoRaMacConfirmQueueIsCmdActive+0x26>
 8018728:	2300      	movs	r3, #0
 801872a:	4618      	mov	r0, r3
 801872c:	3708      	adds	r7, #8
 801872e:	46bd      	mov	sp, r7
 8018730:	bd80      	pop	{r7, pc}
 8018732:	bf00      	nop
 8018734:	2000132c 	.word	0x2000132c

08018738 <LoRaMacConfirmQueueHandleCb>:
 8018738:	b580      	push	{r7, lr}
 801873a:	b084      	sub	sp, #16
 801873c:	af00      	add	r7, sp, #0
 801873e:	6078      	str	r0, [r7, #4]
 8018740:	4b22      	ldr	r3, [pc, #136]	; (80187cc <LoRaMacConfirmQueueHandleCb+0x94>)
 8018742:	691b      	ldr	r3, [r3, #16]
 8018744:	7d1b      	ldrb	r3, [r3, #20]
 8018746:	73bb      	strb	r3, [r7, #14]
 8018748:	2300      	movs	r3, #0
 801874a:	737b      	strb	r3, [r7, #13]
 801874c:	2300      	movs	r3, #0
 801874e:	73fb      	strb	r3, [r7, #15]
 8018750:	e032      	b.n	80187b8 <LoRaMacConfirmQueueHandleCb+0x80>
 8018752:	4b1e      	ldr	r3, [pc, #120]	; (80187cc <LoRaMacConfirmQueueHandleCb+0x94>)
 8018754:	685b      	ldr	r3, [r3, #4]
 8018756:	781a      	ldrb	r2, [r3, #0]
 8018758:	687b      	ldr	r3, [r7, #4]
 801875a:	701a      	strb	r2, [r3, #0]
 801875c:	4b1b      	ldr	r3, [pc, #108]	; (80187cc <LoRaMacConfirmQueueHandleCb+0x94>)
 801875e:	685b      	ldr	r3, [r3, #4]
 8018760:	785a      	ldrb	r2, [r3, #1]
 8018762:	687b      	ldr	r3, [r7, #4]
 8018764:	705a      	strb	r2, [r3, #1]
 8018766:	4b19      	ldr	r3, [pc, #100]	; (80187cc <LoRaMacConfirmQueueHandleCb+0x94>)
 8018768:	685b      	ldr	r3, [r3, #4]
 801876a:	789b      	ldrb	r3, [r3, #2]
 801876c:	737b      	strb	r3, [r7, #13]
 801876e:	7b7b      	ldrb	r3, [r7, #13]
 8018770:	2b00      	cmp	r3, #0
 8018772:	d005      	beq.n	8018780 <LoRaMacConfirmQueueHandleCb+0x48>
 8018774:	4b15      	ldr	r3, [pc, #84]	; (80187cc <LoRaMacConfirmQueueHandleCb+0x94>)
 8018776:	681b      	ldr	r3, [r3, #0]
 8018778:	689b      	ldr	r3, [r3, #8]
 801877a:	6878      	ldr	r0, [r7, #4]
 801877c:	4798      	blx	r3
 801877e:	e00b      	b.n	8018798 <LoRaMacConfirmQueueHandleCb+0x60>
 8018780:	4b12      	ldr	r3, [pc, #72]	; (80187cc <LoRaMacConfirmQueueHandleCb+0x94>)
 8018782:	685b      	ldr	r3, [r3, #4]
 8018784:	781b      	ldrb	r3, [r3, #0]
 8018786:	723b      	strb	r3, [r7, #8]
 8018788:	4b10      	ldr	r3, [pc, #64]	; (80187cc <LoRaMacConfirmQueueHandleCb+0x94>)
 801878a:	685b      	ldr	r3, [r3, #4]
 801878c:	785b      	ldrb	r3, [r3, #1]
 801878e:	727b      	strb	r3, [r7, #9]
 8018790:	4b0e      	ldr	r3, [pc, #56]	; (80187cc <LoRaMacConfirmQueueHandleCb+0x94>)
 8018792:	685b      	ldr	r3, [r3, #4]
 8018794:	78db      	ldrb	r3, [r3, #3]
 8018796:	72fb      	strb	r3, [r7, #11]
 8018798:	f7ff ff08 	bl	80185ac <LoRaMacConfirmQueueRemoveFirst>
 801879c:	7b7b      	ldrb	r3, [r7, #13]
 801879e:	f083 0301 	eor.w	r3, r3, #1
 80187a2:	b2db      	uxtb	r3, r3
 80187a4:	2b00      	cmp	r3, #0
 80187a6:	d004      	beq.n	80187b2 <LoRaMacConfirmQueueHandleCb+0x7a>
 80187a8:	f107 0308 	add.w	r3, r7, #8
 80187ac:	4618      	mov	r0, r3
 80187ae:	f7ff fec5 	bl	801853c <LoRaMacConfirmQueueAdd>
 80187b2:	7bfb      	ldrb	r3, [r7, #15]
 80187b4:	3301      	adds	r3, #1
 80187b6:	73fb      	strb	r3, [r7, #15]
 80187b8:	7bfa      	ldrb	r2, [r7, #15]
 80187ba:	7bbb      	ldrb	r3, [r7, #14]
 80187bc:	429a      	cmp	r2, r3
 80187be:	d3c8      	bcc.n	8018752 <LoRaMacConfirmQueueHandleCb+0x1a>
 80187c0:	bf00      	nop
 80187c2:	bf00      	nop
 80187c4:	3710      	adds	r7, #16
 80187c6:	46bd      	mov	sp, r7
 80187c8:	bd80      	pop	{r7, pc}
 80187ca:	bf00      	nop
 80187cc:	2000132c 	.word	0x2000132c

080187d0 <LoRaMacConfirmQueueGetCnt>:
 80187d0:	b480      	push	{r7}
 80187d2:	af00      	add	r7, sp, #0
 80187d4:	4b03      	ldr	r3, [pc, #12]	; (80187e4 <LoRaMacConfirmQueueGetCnt+0x14>)
 80187d6:	691b      	ldr	r3, [r3, #16]
 80187d8:	7d1b      	ldrb	r3, [r3, #20]
 80187da:	4618      	mov	r0, r3
 80187dc:	46bd      	mov	sp, r7
 80187de:	bc80      	pop	{r7}
 80187e0:	4770      	bx	lr
 80187e2:	bf00      	nop
 80187e4:	2000132c 	.word	0x2000132c

080187e8 <LoRaMacConfirmQueueIsFull>:
 80187e8:	b580      	push	{r7, lr}
 80187ea:	af00      	add	r7, sp, #0
 80187ec:	4b06      	ldr	r3, [pc, #24]	; (8018808 <LoRaMacConfirmQueueIsFull+0x20>)
 80187ee:	691b      	ldr	r3, [r3, #16]
 80187f0:	7d1b      	ldrb	r3, [r3, #20]
 80187f2:	4618      	mov	r0, r3
 80187f4:	f7ff fe0a 	bl	801840c <IsListFull>
 80187f8:	4603      	mov	r3, r0
 80187fa:	2b00      	cmp	r3, #0
 80187fc:	d001      	beq.n	8018802 <LoRaMacConfirmQueueIsFull+0x1a>
 80187fe:	2301      	movs	r3, #1
 8018800:	e000      	b.n	8018804 <LoRaMacConfirmQueueIsFull+0x1c>
 8018802:	2300      	movs	r3, #0
 8018804:	4618      	mov	r0, r3
 8018806:	bd80      	pop	{r7, pc}
 8018808:	2000132c 	.word	0x2000132c

0801880c <PayloadEncrypt>:
 801880c:	b580      	push	{r7, lr}
 801880e:	b08e      	sub	sp, #56	; 0x38
 8018810:	af00      	add	r7, sp, #0
 8018812:	60f8      	str	r0, [r7, #12]
 8018814:	607b      	str	r3, [r7, #4]
 8018816:	460b      	mov	r3, r1
 8018818:	817b      	strh	r3, [r7, #10]
 801881a:	4613      	mov	r3, r2
 801881c:	727b      	strb	r3, [r7, #9]
 801881e:	68fb      	ldr	r3, [r7, #12]
 8018820:	2b00      	cmp	r3, #0
 8018822:	d101      	bne.n	8018828 <PayloadEncrypt+0x1c>
 8018824:	230a      	movs	r3, #10
 8018826:	e087      	b.n	8018938 <PayloadEncrypt+0x12c>
 8018828:	2300      	movs	r3, #0
 801882a:	f887 3037 	strb.w	r3, [r7, #55]	; 0x37
 801882e:	2301      	movs	r3, #1
 8018830:	86bb      	strh	r3, [r7, #52]	; 0x34
 8018832:	2300      	movs	r3, #0
 8018834:	623b      	str	r3, [r7, #32]
 8018836:	f107 0324 	add.w	r3, r7, #36	; 0x24
 801883a:	2200      	movs	r2, #0
 801883c:	601a      	str	r2, [r3, #0]
 801883e:	605a      	str	r2, [r3, #4]
 8018840:	609a      	str	r2, [r3, #8]
 8018842:	2300      	movs	r3, #0
 8018844:	613b      	str	r3, [r7, #16]
 8018846:	f107 0314 	add.w	r3, r7, #20
 801884a:	2200      	movs	r2, #0
 801884c:	601a      	str	r2, [r3, #0]
 801884e:	605a      	str	r2, [r3, #4]
 8018850:	609a      	str	r2, [r3, #8]
 8018852:	2301      	movs	r3, #1
 8018854:	743b      	strb	r3, [r7, #16]
 8018856:	f897 3040 	ldrb.w	r3, [r7, #64]	; 0x40
 801885a:	757b      	strb	r3, [r7, #21]
 801885c:	687b      	ldr	r3, [r7, #4]
 801885e:	b2db      	uxtb	r3, r3
 8018860:	75bb      	strb	r3, [r7, #22]
 8018862:	687b      	ldr	r3, [r7, #4]
 8018864:	0a1b      	lsrs	r3, r3, #8
 8018866:	b2db      	uxtb	r3, r3
 8018868:	75fb      	strb	r3, [r7, #23]
 801886a:	687b      	ldr	r3, [r7, #4]
 801886c:	0c1b      	lsrs	r3, r3, #16
 801886e:	b2db      	uxtb	r3, r3
 8018870:	763b      	strb	r3, [r7, #24]
 8018872:	687b      	ldr	r3, [r7, #4]
 8018874:	0e1b      	lsrs	r3, r3, #24
 8018876:	b2db      	uxtb	r3, r3
 8018878:	767b      	strb	r3, [r7, #25]
 801887a:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 801887c:	b2db      	uxtb	r3, r3
 801887e:	76bb      	strb	r3, [r7, #26]
 8018880:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8018882:	0a1b      	lsrs	r3, r3, #8
 8018884:	b2db      	uxtb	r3, r3
 8018886:	76fb      	strb	r3, [r7, #27]
 8018888:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 801888a:	0c1b      	lsrs	r3, r3, #16
 801888c:	b2db      	uxtb	r3, r3
 801888e:	773b      	strb	r3, [r7, #28]
 8018890:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8018892:	0e1b      	lsrs	r3, r3, #24
 8018894:	b2db      	uxtb	r3, r3
 8018896:	777b      	strb	r3, [r7, #29]
 8018898:	e049      	b.n	801892e <PayloadEncrypt+0x122>
 801889a:	8ebb      	ldrh	r3, [r7, #52]	; 0x34
 801889c:	b2db      	uxtb	r3, r3
 801889e:	77fb      	strb	r3, [r7, #31]
 80188a0:	8ebb      	ldrh	r3, [r7, #52]	; 0x34
 80188a2:	3301      	adds	r3, #1
 80188a4:	86bb      	strh	r3, [r7, #52]	; 0x34
 80188a6:	f107 0320 	add.w	r3, r7, #32
 80188aa:	7a7a      	ldrb	r2, [r7, #9]
 80188ac:	f107 0010 	add.w	r0, r7, #16
 80188b0:	2110      	movs	r1, #16
 80188b2:	f7f9 f81a 	bl	80118ea <SecureElementAesEncrypt>
 80188b6:	4603      	mov	r3, r0
 80188b8:	2b00      	cmp	r3, #0
 80188ba:	d001      	beq.n	80188c0 <PayloadEncrypt+0xb4>
 80188bc:	230f      	movs	r3, #15
 80188be:	e03b      	b.n	8018938 <PayloadEncrypt+0x12c>
 80188c0:	2300      	movs	r3, #0
 80188c2:	f887 3033 	strb.w	r3, [r7, #51]	; 0x33
 80188c6:	e01f      	b.n	8018908 <PayloadEncrypt+0xfc>
 80188c8:	f897 2037 	ldrb.w	r2, [r7, #55]	; 0x37
 80188cc:	f897 3033 	ldrb.w	r3, [r7, #51]	; 0x33
 80188d0:	4413      	add	r3, r2
 80188d2:	461a      	mov	r2, r3
 80188d4:	68fb      	ldr	r3, [r7, #12]
 80188d6:	4413      	add	r3, r2
 80188d8:	7819      	ldrb	r1, [r3, #0]
 80188da:	f897 3033 	ldrb.w	r3, [r7, #51]	; 0x33
 80188de:	f107 0238 	add.w	r2, r7, #56	; 0x38
 80188e2:	4413      	add	r3, r2
 80188e4:	f813 2c18 	ldrb.w	r2, [r3, #-24]
 80188e8:	f897 0037 	ldrb.w	r0, [r7, #55]	; 0x37
 80188ec:	f897 3033 	ldrb.w	r3, [r7, #51]	; 0x33
 80188f0:	4403      	add	r3, r0
 80188f2:	4618      	mov	r0, r3
 80188f4:	68fb      	ldr	r3, [r7, #12]
 80188f6:	4403      	add	r3, r0
 80188f8:	404a      	eors	r2, r1
 80188fa:	b2d2      	uxtb	r2, r2
 80188fc:	701a      	strb	r2, [r3, #0]
 80188fe:	f897 3033 	ldrb.w	r3, [r7, #51]	; 0x33
 8018902:	3301      	adds	r3, #1
 8018904:	f887 3033 	strb.w	r3, [r7, #51]	; 0x33
 8018908:	f897 3033 	ldrb.w	r3, [r7, #51]	; 0x33
 801890c:	f9b7 200a 	ldrsh.w	r2, [r7, #10]
 8018910:	2a10      	cmp	r2, #16
 8018912:	bfa8      	it	ge
 8018914:	2210      	movge	r2, #16
 8018916:	b212      	sxth	r2, r2
 8018918:	4293      	cmp	r3, r2
 801891a:	dbd5      	blt.n	80188c8 <PayloadEncrypt+0xbc>
 801891c:	897b      	ldrh	r3, [r7, #10]
 801891e:	3b10      	subs	r3, #16
 8018920:	b29b      	uxth	r3, r3
 8018922:	817b      	strh	r3, [r7, #10]
 8018924:	f897 3037 	ldrb.w	r3, [r7, #55]	; 0x37
 8018928:	3310      	adds	r3, #16
 801892a:	f887 3037 	strb.w	r3, [r7, #55]	; 0x37
 801892e:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 8018932:	2b00      	cmp	r3, #0
 8018934:	dcb1      	bgt.n	801889a <PayloadEncrypt+0x8e>
 8018936:	2300      	movs	r3, #0
 8018938:	4618      	mov	r0, r3
 801893a:	3738      	adds	r7, #56	; 0x38
 801893c:	46bd      	mov	sp, r7
 801893e:	bd80      	pop	{r7, pc}

08018940 <PrepareB0>:
 8018940:	b490      	push	{r4, r7}
 8018942:	b082      	sub	sp, #8
 8018944:	af00      	add	r7, sp, #0
 8018946:	4604      	mov	r4, r0
 8018948:	4608      	mov	r0, r1
 801894a:	4611      	mov	r1, r2
 801894c:	461a      	mov	r2, r3
 801894e:	4623      	mov	r3, r4
 8018950:	80fb      	strh	r3, [r7, #6]
 8018952:	4603      	mov	r3, r0
 8018954:	717b      	strb	r3, [r7, #5]
 8018956:	460b      	mov	r3, r1
 8018958:	713b      	strb	r3, [r7, #4]
 801895a:	4613      	mov	r3, r2
 801895c:	70fb      	strb	r3, [r7, #3]
 801895e:	69bb      	ldr	r3, [r7, #24]
 8018960:	2b00      	cmp	r3, #0
 8018962:	d101      	bne.n	8018968 <PrepareB0+0x28>
 8018964:	230a      	movs	r3, #10
 8018966:	e04e      	b.n	8018a06 <PrepareB0+0xc6>
 8018968:	69bb      	ldr	r3, [r7, #24]
 801896a:	2249      	movs	r2, #73	; 0x49
 801896c:	701a      	strb	r2, [r3, #0]
 801896e:	69bb      	ldr	r3, [r7, #24]
 8018970:	3301      	adds	r3, #1
 8018972:	2200      	movs	r2, #0
 8018974:	701a      	strb	r2, [r3, #0]
 8018976:	69bb      	ldr	r3, [r7, #24]
 8018978:	3302      	adds	r3, #2
 801897a:	2200      	movs	r2, #0
 801897c:	701a      	strb	r2, [r3, #0]
 801897e:	69bb      	ldr	r3, [r7, #24]
 8018980:	3303      	adds	r3, #3
 8018982:	2200      	movs	r2, #0
 8018984:	701a      	strb	r2, [r3, #0]
 8018986:	69bb      	ldr	r3, [r7, #24]
 8018988:	3304      	adds	r3, #4
 801898a:	2200      	movs	r2, #0
 801898c:	701a      	strb	r2, [r3, #0]
 801898e:	69bb      	ldr	r3, [r7, #24]
 8018990:	3305      	adds	r3, #5
 8018992:	78fa      	ldrb	r2, [r7, #3]
 8018994:	701a      	strb	r2, [r3, #0]
 8018996:	69bb      	ldr	r3, [r7, #24]
 8018998:	3306      	adds	r3, #6
 801899a:	693a      	ldr	r2, [r7, #16]
 801899c:	b2d2      	uxtb	r2, r2
 801899e:	701a      	strb	r2, [r3, #0]
 80189a0:	693b      	ldr	r3, [r7, #16]
 80189a2:	0a1a      	lsrs	r2, r3, #8
 80189a4:	69bb      	ldr	r3, [r7, #24]
 80189a6:	3307      	adds	r3, #7
 80189a8:	b2d2      	uxtb	r2, r2
 80189aa:	701a      	strb	r2, [r3, #0]
 80189ac:	693b      	ldr	r3, [r7, #16]
 80189ae:	0c1a      	lsrs	r2, r3, #16
 80189b0:	69bb      	ldr	r3, [r7, #24]
 80189b2:	3308      	adds	r3, #8
 80189b4:	b2d2      	uxtb	r2, r2
 80189b6:	701a      	strb	r2, [r3, #0]
 80189b8:	693b      	ldr	r3, [r7, #16]
 80189ba:	0e1a      	lsrs	r2, r3, #24
 80189bc:	69bb      	ldr	r3, [r7, #24]
 80189be:	3309      	adds	r3, #9
 80189c0:	b2d2      	uxtb	r2, r2
 80189c2:	701a      	strb	r2, [r3, #0]
 80189c4:	69bb      	ldr	r3, [r7, #24]
 80189c6:	330a      	adds	r3, #10
 80189c8:	697a      	ldr	r2, [r7, #20]
 80189ca:	b2d2      	uxtb	r2, r2
 80189cc:	701a      	strb	r2, [r3, #0]
 80189ce:	697b      	ldr	r3, [r7, #20]
 80189d0:	0a1a      	lsrs	r2, r3, #8
 80189d2:	69bb      	ldr	r3, [r7, #24]
 80189d4:	330b      	adds	r3, #11
 80189d6:	b2d2      	uxtb	r2, r2
 80189d8:	701a      	strb	r2, [r3, #0]
 80189da:	697b      	ldr	r3, [r7, #20]
 80189dc:	0c1a      	lsrs	r2, r3, #16
 80189de:	69bb      	ldr	r3, [r7, #24]
 80189e0:	330c      	adds	r3, #12
 80189e2:	b2d2      	uxtb	r2, r2
 80189e4:	701a      	strb	r2, [r3, #0]
 80189e6:	697b      	ldr	r3, [r7, #20]
 80189e8:	0e1a      	lsrs	r2, r3, #24
 80189ea:	69bb      	ldr	r3, [r7, #24]
 80189ec:	330d      	adds	r3, #13
 80189ee:	b2d2      	uxtb	r2, r2
 80189f0:	701a      	strb	r2, [r3, #0]
 80189f2:	69bb      	ldr	r3, [r7, #24]
 80189f4:	330e      	adds	r3, #14
 80189f6:	2200      	movs	r2, #0
 80189f8:	701a      	strb	r2, [r3, #0]
 80189fa:	69bb      	ldr	r3, [r7, #24]
 80189fc:	330f      	adds	r3, #15
 80189fe:	88fa      	ldrh	r2, [r7, #6]
 8018a00:	b2d2      	uxtb	r2, r2
 8018a02:	701a      	strb	r2, [r3, #0]
 8018a04:	2300      	movs	r3, #0
 8018a06:	4618      	mov	r0, r3
 8018a08:	3708      	adds	r7, #8
 8018a0a:	46bd      	mov	sp, r7
 8018a0c:	bc90      	pop	{r4, r7}
 8018a0e:	4770      	bx	lr

08018a10 <ComputeCmacB0>:
 8018a10:	b590      	push	{r4, r7, lr}
 8018a12:	b08b      	sub	sp, #44	; 0x2c
 8018a14:	af04      	add	r7, sp, #16
 8018a16:	6078      	str	r0, [r7, #4]
 8018a18:	4608      	mov	r0, r1
 8018a1a:	4611      	mov	r1, r2
 8018a1c:	461a      	mov	r2, r3
 8018a1e:	4603      	mov	r3, r0
 8018a20:	807b      	strh	r3, [r7, #2]
 8018a22:	460b      	mov	r3, r1
 8018a24:	707b      	strb	r3, [r7, #1]
 8018a26:	4613      	mov	r3, r2
 8018a28:	703b      	strb	r3, [r7, #0]
 8018a2a:	687b      	ldr	r3, [r7, #4]
 8018a2c:	2b00      	cmp	r3, #0
 8018a2e:	d002      	beq.n	8018a36 <ComputeCmacB0+0x26>
 8018a30:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8018a32:	2b00      	cmp	r3, #0
 8018a34:	d101      	bne.n	8018a3a <ComputeCmacB0+0x2a>
 8018a36:	230a      	movs	r3, #10
 8018a38:	e024      	b.n	8018a84 <ComputeCmacB0+0x74>
 8018a3a:	887b      	ldrh	r3, [r7, #2]
 8018a3c:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8018a40:	d901      	bls.n	8018a46 <ComputeCmacB0+0x36>
 8018a42:	230e      	movs	r3, #14
 8018a44:	e01e      	b.n	8018a84 <ComputeCmacB0+0x74>
 8018a46:	f897 4028 	ldrb.w	r4, [r7, #40]	; 0x28
 8018a4a:	783a      	ldrb	r2, [r7, #0]
 8018a4c:	7879      	ldrb	r1, [r7, #1]
 8018a4e:	8878      	ldrh	r0, [r7, #2]
 8018a50:	f107 0308 	add.w	r3, r7, #8
 8018a54:	9302      	str	r3, [sp, #8]
 8018a56:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8018a58:	9301      	str	r3, [sp, #4]
 8018a5a:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8018a5c:	9300      	str	r3, [sp, #0]
 8018a5e:	4623      	mov	r3, r4
 8018a60:	f7ff ff6e 	bl	8018940 <PrepareB0>
 8018a64:	7879      	ldrb	r1, [r7, #1]
 8018a66:	887a      	ldrh	r2, [r7, #2]
 8018a68:	f107 0008 	add.w	r0, r7, #8
 8018a6c:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8018a6e:	9300      	str	r3, [sp, #0]
 8018a70:	460b      	mov	r3, r1
 8018a72:	6879      	ldr	r1, [r7, #4]
 8018a74:	f7f8 feec 	bl	8011850 <SecureElementComputeAesCmac>
 8018a78:	4603      	mov	r3, r0
 8018a7a:	2b00      	cmp	r3, #0
 8018a7c:	d001      	beq.n	8018a82 <ComputeCmacB0+0x72>
 8018a7e:	230f      	movs	r3, #15
 8018a80:	e000      	b.n	8018a84 <ComputeCmacB0+0x74>
 8018a82:	2300      	movs	r3, #0
 8018a84:	4618      	mov	r0, r3
 8018a86:	371c      	adds	r7, #28
 8018a88:	46bd      	mov	sp, r7
 8018a8a:	bd90      	pop	{r4, r7, pc}

08018a8c <VerifyCmacB0>:
 8018a8c:	b590      	push	{r4, r7, lr}
 8018a8e:	b0cd      	sub	sp, #308	; 0x134
 8018a90:	af04      	add	r7, sp, #16
 8018a92:	1d3c      	adds	r4, r7, #4
 8018a94:	6020      	str	r0, [r4, #0]
 8018a96:	460c      	mov	r4, r1
 8018a98:	4610      	mov	r0, r2
 8018a9a:	4619      	mov	r1, r3
 8018a9c:	1cbb      	adds	r3, r7, #2
 8018a9e:	4622      	mov	r2, r4
 8018aa0:	801a      	strh	r2, [r3, #0]
 8018aa2:	1c7b      	adds	r3, r7, #1
 8018aa4:	4602      	mov	r2, r0
 8018aa6:	701a      	strb	r2, [r3, #0]
 8018aa8:	463b      	mov	r3, r7
 8018aaa:	460a      	mov	r2, r1
 8018aac:	701a      	strb	r2, [r3, #0]
 8018aae:	1d3b      	adds	r3, r7, #4
 8018ab0:	681b      	ldr	r3, [r3, #0]
 8018ab2:	2b00      	cmp	r3, #0
 8018ab4:	d101      	bne.n	8018aba <VerifyCmacB0+0x2e>
 8018ab6:	230a      	movs	r3, #10
 8018ab8:	e04b      	b.n	8018b52 <VerifyCmacB0+0xc6>
 8018aba:	1cbb      	adds	r3, r7, #2
 8018abc:	881b      	ldrh	r3, [r3, #0]
 8018abe:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8018ac2:	d901      	bls.n	8018ac8 <VerifyCmacB0+0x3c>
 8018ac4:	230e      	movs	r3, #14
 8018ac6:	e044      	b.n	8018b52 <VerifyCmacB0+0xc6>
 8018ac8:	f107 030c 	add.w	r3, r7, #12
 8018acc:	f44f 7288 	mov.w	r2, #272	; 0x110
 8018ad0:	2100      	movs	r1, #0
 8018ad2:	4618      	mov	r0, r3
 8018ad4:	f004 fde4 	bl	801d6a0 <memset1>
 8018ad8:	f897 4130 	ldrb.w	r4, [r7, #304]	; 0x130
 8018adc:	463b      	mov	r3, r7
 8018ade:	781a      	ldrb	r2, [r3, #0]
 8018ae0:	1c7b      	adds	r3, r7, #1
 8018ae2:	7819      	ldrb	r1, [r3, #0]
 8018ae4:	1cbb      	adds	r3, r7, #2
 8018ae6:	8818      	ldrh	r0, [r3, #0]
 8018ae8:	f107 030c 	add.w	r3, r7, #12
 8018aec:	9302      	str	r3, [sp, #8]
 8018aee:	f8d7 3138 	ldr.w	r3, [r7, #312]	; 0x138
 8018af2:	9301      	str	r3, [sp, #4]
 8018af4:	f8d7 3134 	ldr.w	r3, [r7, #308]	; 0x134
 8018af8:	9300      	str	r3, [sp, #0]
 8018afa:	4623      	mov	r3, r4
 8018afc:	f7ff ff20 	bl	8018940 <PrepareB0>
 8018b00:	f107 030c 	add.w	r3, r7, #12
 8018b04:	3310      	adds	r3, #16
 8018b06:	1cba      	adds	r2, r7, #2
 8018b08:	8812      	ldrh	r2, [r2, #0]
 8018b0a:	1d39      	adds	r1, r7, #4
 8018b0c:	6809      	ldr	r1, [r1, #0]
 8018b0e:	4618      	mov	r0, r3
 8018b10:	f004 fd8b 	bl	801d62a <memcpy1>
 8018b14:	2306      	movs	r3, #6
 8018b16:	f887 311f 	strb.w	r3, [r7, #287]	; 0x11f
 8018b1a:	1cbb      	adds	r3, r7, #2
 8018b1c:	881b      	ldrh	r3, [r3, #0]
 8018b1e:	3310      	adds	r3, #16
 8018b20:	b299      	uxth	r1, r3
 8018b22:	1c7b      	adds	r3, r7, #1
 8018b24:	781b      	ldrb	r3, [r3, #0]
 8018b26:	f107 000c 	add.w	r0, r7, #12
 8018b2a:	f8d7 213c 	ldr.w	r2, [r7, #316]	; 0x13c
 8018b2e:	f7f8 fead 	bl	801188c <SecureElementVerifyAesCmac>
 8018b32:	4603      	mov	r3, r0
 8018b34:	f887 311f 	strb.w	r3, [r7, #287]	; 0x11f
 8018b38:	f897 311f 	ldrb.w	r3, [r7, #287]	; 0x11f
 8018b3c:	2b00      	cmp	r3, #0
 8018b3e:	d101      	bne.n	8018b44 <VerifyCmacB0+0xb8>
 8018b40:	2300      	movs	r3, #0
 8018b42:	e006      	b.n	8018b52 <VerifyCmacB0+0xc6>
 8018b44:	f897 311f 	ldrb.w	r3, [r7, #287]	; 0x11f
 8018b48:	2b01      	cmp	r3, #1
 8018b4a:	d101      	bne.n	8018b50 <VerifyCmacB0+0xc4>
 8018b4c:	2301      	movs	r3, #1
 8018b4e:	e000      	b.n	8018b52 <VerifyCmacB0+0xc6>
 8018b50:	230f      	movs	r3, #15
 8018b52:	4618      	mov	r0, r3
 8018b54:	f507 7792 	add.w	r7, r7, #292	; 0x124
 8018b58:	46bd      	mov	sp, r7
 8018b5a:	bd90      	pop	{r4, r7, pc}

08018b5c <GetKeyAddrItem>:
 8018b5c:	b480      	push	{r7}
 8018b5e:	b085      	sub	sp, #20
 8018b60:	af00      	add	r7, sp, #0
 8018b62:	4603      	mov	r3, r0
 8018b64:	6039      	str	r1, [r7, #0]
 8018b66:	71fb      	strb	r3, [r7, #7]
 8018b68:	2300      	movs	r3, #0
 8018b6a:	73fb      	strb	r3, [r7, #15]
 8018b6c:	e011      	b.n	8018b92 <GetKeyAddrItem+0x36>
 8018b6e:	7bfb      	ldrb	r3, [r7, #15]
 8018b70:	4a0c      	ldr	r2, [pc, #48]	; (8018ba4 <GetKeyAddrItem+0x48>)
 8018b72:	f812 3023 	ldrb.w	r3, [r2, r3, lsl #2]
 8018b76:	79fa      	ldrb	r2, [r7, #7]
 8018b78:	429a      	cmp	r2, r3
 8018b7a:	d107      	bne.n	8018b8c <GetKeyAddrItem+0x30>
 8018b7c:	7bfb      	ldrb	r3, [r7, #15]
 8018b7e:	009b      	lsls	r3, r3, #2
 8018b80:	4a08      	ldr	r2, [pc, #32]	; (8018ba4 <GetKeyAddrItem+0x48>)
 8018b82:	441a      	add	r2, r3
 8018b84:	683b      	ldr	r3, [r7, #0]
 8018b86:	601a      	str	r2, [r3, #0]
 8018b88:	2300      	movs	r3, #0
 8018b8a:	e006      	b.n	8018b9a <GetKeyAddrItem+0x3e>
 8018b8c:	7bfb      	ldrb	r3, [r7, #15]
 8018b8e:	3301      	adds	r3, #1
 8018b90:	73fb      	strb	r3, [r7, #15]
 8018b92:	7bfb      	ldrb	r3, [r7, #15]
 8018b94:	2b01      	cmp	r3, #1
 8018b96:	d9ea      	bls.n	8018b6e <GetKeyAddrItem+0x12>
 8018b98:	230c      	movs	r3, #12
 8018b9a:	4618      	mov	r0, r3
 8018b9c:	3714      	adds	r7, #20
 8018b9e:	46bd      	mov	sp, r7
 8018ba0:	bc80      	pop	{r7}
 8018ba2:	4770      	bx	lr
 8018ba4:	200001b4 	.word	0x200001b4

08018ba8 <DeriveSessionKey10x>:
 8018ba8:	b580      	push	{r7, lr}
 8018baa:	b088      	sub	sp, #32
 8018bac:	af00      	add	r7, sp, #0
 8018bae:	60b9      	str	r1, [r7, #8]
 8018bb0:	607a      	str	r2, [r7, #4]
 8018bb2:	603b      	str	r3, [r7, #0]
 8018bb4:	4603      	mov	r3, r0
 8018bb6:	73fb      	strb	r3, [r7, #15]
 8018bb8:	68bb      	ldr	r3, [r7, #8]
 8018bba:	2b00      	cmp	r3, #0
 8018bbc:	d005      	beq.n	8018bca <DeriveSessionKey10x+0x22>
 8018bbe:	687b      	ldr	r3, [r7, #4]
 8018bc0:	2b00      	cmp	r3, #0
 8018bc2:	d002      	beq.n	8018bca <DeriveSessionKey10x+0x22>
 8018bc4:	683b      	ldr	r3, [r7, #0]
 8018bc6:	2b00      	cmp	r3, #0
 8018bc8:	d101      	bne.n	8018bce <DeriveSessionKey10x+0x26>
 8018bca:	230a      	movs	r3, #10
 8018bcc:	e03c      	b.n	8018c48 <DeriveSessionKey10x+0xa0>
 8018bce:	2300      	movs	r3, #0
 8018bd0:	613b      	str	r3, [r7, #16]
 8018bd2:	f107 0314 	add.w	r3, r7, #20
 8018bd6:	2200      	movs	r2, #0
 8018bd8:	601a      	str	r2, [r3, #0]
 8018bda:	605a      	str	r2, [r3, #4]
 8018bdc:	609a      	str	r2, [r3, #8]
 8018bde:	7bfb      	ldrb	r3, [r7, #15]
 8018be0:	2b02      	cmp	r3, #2
 8018be2:	d002      	beq.n	8018bea <DeriveSessionKey10x+0x42>
 8018be4:	2b03      	cmp	r3, #3
 8018be6:	d003      	beq.n	8018bf0 <DeriveSessionKey10x+0x48>
 8018be8:	e005      	b.n	8018bf6 <DeriveSessionKey10x+0x4e>
 8018bea:	2301      	movs	r3, #1
 8018bec:	743b      	strb	r3, [r7, #16]
 8018bee:	e004      	b.n	8018bfa <DeriveSessionKey10x+0x52>
 8018bf0:	2302      	movs	r3, #2
 8018bf2:	743b      	strb	r3, [r7, #16]
 8018bf4:	e001      	b.n	8018bfa <DeriveSessionKey10x+0x52>
 8018bf6:	230b      	movs	r3, #11
 8018bf8:	e026      	b.n	8018c48 <DeriveSessionKey10x+0xa0>
 8018bfa:	f107 0310 	add.w	r3, r7, #16
 8018bfe:	3301      	adds	r3, #1
 8018c00:	2203      	movs	r2, #3
 8018c02:	68b9      	ldr	r1, [r7, #8]
 8018c04:	4618      	mov	r0, r3
 8018c06:	f004 fd10 	bl	801d62a <memcpy1>
 8018c0a:	f107 0310 	add.w	r3, r7, #16
 8018c0e:	3304      	adds	r3, #4
 8018c10:	2203      	movs	r2, #3
 8018c12:	6879      	ldr	r1, [r7, #4]
 8018c14:	4618      	mov	r0, r3
 8018c16:	f004 fd08 	bl	801d62a <memcpy1>
 8018c1a:	f107 0310 	add.w	r3, r7, #16
 8018c1e:	3307      	adds	r3, #7
 8018c20:	2202      	movs	r2, #2
 8018c22:	6839      	ldr	r1, [r7, #0]
 8018c24:	4618      	mov	r0, r3
 8018c26:	f004 fd00 	bl	801d62a <memcpy1>
 8018c2a:	4b09      	ldr	r3, [pc, #36]	; (8018c50 <DeriveSessionKey10x+0xa8>)
 8018c2c:	6818      	ldr	r0, [r3, #0]
 8018c2e:	7bfb      	ldrb	r3, [r7, #15]
 8018c30:	f107 0110 	add.w	r1, r7, #16
 8018c34:	2201      	movs	r2, #1
 8018c36:	6800      	ldr	r0, [r0, #0]
 8018c38:	f7f8 feb8 	bl	80119ac <SecureElementDeriveAndStoreKey>
 8018c3c:	4603      	mov	r3, r0
 8018c3e:	2b00      	cmp	r3, #0
 8018c40:	d001      	beq.n	8018c46 <DeriveSessionKey10x+0x9e>
 8018c42:	230f      	movs	r3, #15
 8018c44:	e000      	b.n	8018c48 <DeriveSessionKey10x+0xa0>
 8018c46:	2300      	movs	r3, #0
 8018c48:	4618      	mov	r0, r3
 8018c4a:	3720      	adds	r7, #32
 8018c4c:	46bd      	mov	sp, r7
 8018c4e:	bd80      	pop	{r7, pc}
 8018c50:	20001340 	.word	0x20001340

08018c54 <GetLastFcntDown>:
 8018c54:	b480      	push	{r7}
 8018c56:	b083      	sub	sp, #12
 8018c58:	af00      	add	r7, sp, #0
 8018c5a:	4603      	mov	r3, r0
 8018c5c:	6039      	str	r1, [r7, #0]
 8018c5e:	71fb      	strb	r3, [r7, #7]
 8018c60:	683b      	ldr	r3, [r7, #0]
 8018c62:	2b00      	cmp	r3, #0
 8018c64:	d101      	bne.n	8018c6a <GetLastFcntDown+0x16>
 8018c66:	230a      	movs	r3, #10
 8018c68:	e03b      	b.n	8018ce2 <GetLastFcntDown+0x8e>
 8018c6a:	79fb      	ldrb	r3, [r7, #7]
 8018c6c:	3b01      	subs	r3, #1
 8018c6e:	2b03      	cmp	r3, #3
 8018c70:	d834      	bhi.n	8018cdc <GetLastFcntDown+0x88>
 8018c72:	a201      	add	r2, pc, #4	; (adr r2, 8018c78 <GetLastFcntDown+0x24>)
 8018c74:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8018c78:	08018c89 	.word	0x08018c89
 8018c7c:	08018ca1 	.word	0x08018ca1
 8018c80:	08018cb9 	.word	0x08018cb9
 8018c84:	08018cd1 	.word	0x08018cd1
 8018c88:	4b18      	ldr	r3, [pc, #96]	; (8018cec <GetLastFcntDown+0x98>)
 8018c8a:	681b      	ldr	r3, [r3, #0]
 8018c8c:	691a      	ldr	r2, [r3, #16]
 8018c8e:	683b      	ldr	r3, [r7, #0]
 8018c90:	601a      	str	r2, [r3, #0]
 8018c92:	4b16      	ldr	r3, [pc, #88]	; (8018cec <GetLastFcntDown+0x98>)
 8018c94:	681a      	ldr	r2, [r3, #0]
 8018c96:	4b15      	ldr	r3, [pc, #84]	; (8018cec <GetLastFcntDown+0x98>)
 8018c98:	681b      	ldr	r3, [r3, #0]
 8018c9a:	3210      	adds	r2, #16
 8018c9c:	621a      	str	r2, [r3, #32]
 8018c9e:	e01f      	b.n	8018ce0 <GetLastFcntDown+0x8c>
 8018ca0:	4b12      	ldr	r3, [pc, #72]	; (8018cec <GetLastFcntDown+0x98>)
 8018ca2:	681b      	ldr	r3, [r3, #0]
 8018ca4:	695a      	ldr	r2, [r3, #20]
 8018ca6:	683b      	ldr	r3, [r7, #0]
 8018ca8:	601a      	str	r2, [r3, #0]
 8018caa:	4b10      	ldr	r3, [pc, #64]	; (8018cec <GetLastFcntDown+0x98>)
 8018cac:	681a      	ldr	r2, [r3, #0]
 8018cae:	4b0f      	ldr	r3, [pc, #60]	; (8018cec <GetLastFcntDown+0x98>)
 8018cb0:	681b      	ldr	r3, [r3, #0]
 8018cb2:	3214      	adds	r2, #20
 8018cb4:	621a      	str	r2, [r3, #32]
 8018cb6:	e013      	b.n	8018ce0 <GetLastFcntDown+0x8c>
 8018cb8:	4b0c      	ldr	r3, [pc, #48]	; (8018cec <GetLastFcntDown+0x98>)
 8018cba:	681b      	ldr	r3, [r3, #0]
 8018cbc:	699a      	ldr	r2, [r3, #24]
 8018cbe:	683b      	ldr	r3, [r7, #0]
 8018cc0:	601a      	str	r2, [r3, #0]
 8018cc2:	4b0a      	ldr	r3, [pc, #40]	; (8018cec <GetLastFcntDown+0x98>)
 8018cc4:	681a      	ldr	r2, [r3, #0]
 8018cc6:	4b09      	ldr	r3, [pc, #36]	; (8018cec <GetLastFcntDown+0x98>)
 8018cc8:	681b      	ldr	r3, [r3, #0]
 8018cca:	3218      	adds	r2, #24
 8018ccc:	621a      	str	r2, [r3, #32]
 8018cce:	e007      	b.n	8018ce0 <GetLastFcntDown+0x8c>
 8018cd0:	4b06      	ldr	r3, [pc, #24]	; (8018cec <GetLastFcntDown+0x98>)
 8018cd2:	681b      	ldr	r3, [r3, #0]
 8018cd4:	69da      	ldr	r2, [r3, #28]
 8018cd6:	683b      	ldr	r3, [r7, #0]
 8018cd8:	601a      	str	r2, [r3, #0]
 8018cda:	e001      	b.n	8018ce0 <GetLastFcntDown+0x8c>
 8018cdc:	2305      	movs	r3, #5
 8018cde:	e000      	b.n	8018ce2 <GetLastFcntDown+0x8e>
 8018ce0:	2300      	movs	r3, #0
 8018ce2:	4618      	mov	r0, r3
 8018ce4:	370c      	adds	r7, #12
 8018ce6:	46bd      	mov	sp, r7
 8018ce8:	bc80      	pop	{r7}
 8018cea:	4770      	bx	lr
 8018cec:	20001340 	.word	0x20001340

08018cf0 <CheckFCntDown>:
 8018cf0:	b580      	push	{r7, lr}
 8018cf2:	b084      	sub	sp, #16
 8018cf4:	af00      	add	r7, sp, #0
 8018cf6:	4603      	mov	r3, r0
 8018cf8:	6039      	str	r1, [r7, #0]
 8018cfa:	71fb      	strb	r3, [r7, #7]
 8018cfc:	2300      	movs	r3, #0
 8018cfe:	60fb      	str	r3, [r7, #12]
 8018d00:	f107 020c 	add.w	r2, r7, #12
 8018d04:	79fb      	ldrb	r3, [r7, #7]
 8018d06:	4611      	mov	r1, r2
 8018d08:	4618      	mov	r0, r3
 8018d0a:	f7ff ffa3 	bl	8018c54 <GetLastFcntDown>
 8018d0e:	4603      	mov	r3, r0
 8018d10:	2b00      	cmp	r3, #0
 8018d12:	d001      	beq.n	8018d18 <CheckFCntDown+0x28>
 8018d14:	2300      	movs	r3, #0
 8018d16:	e00a      	b.n	8018d2e <CheckFCntDown+0x3e>
 8018d18:	68fb      	ldr	r3, [r7, #12]
 8018d1a:	683a      	ldr	r2, [r7, #0]
 8018d1c:	429a      	cmp	r2, r3
 8018d1e:	d803      	bhi.n	8018d28 <CheckFCntDown+0x38>
 8018d20:	68fb      	ldr	r3, [r7, #12]
 8018d22:	f1b3 3fff 	cmp.w	r3, #4294967295
 8018d26:	d101      	bne.n	8018d2c <CheckFCntDown+0x3c>
 8018d28:	2301      	movs	r3, #1
 8018d2a:	e000      	b.n	8018d2e <CheckFCntDown+0x3e>
 8018d2c:	2300      	movs	r3, #0
 8018d2e:	4618      	mov	r0, r3
 8018d30:	3710      	adds	r7, #16
 8018d32:	46bd      	mov	sp, r7
 8018d34:	bd80      	pop	{r7, pc}
	...

08018d38 <UpdateFCntDown>:
 8018d38:	b580      	push	{r7, lr}
 8018d3a:	b082      	sub	sp, #8
 8018d3c:	af00      	add	r7, sp, #0
 8018d3e:	4603      	mov	r3, r0
 8018d40:	6039      	str	r1, [r7, #0]
 8018d42:	71fb      	strb	r3, [r7, #7]
 8018d44:	79fb      	ldrb	r3, [r7, #7]
 8018d46:	3b01      	subs	r3, #1
 8018d48:	2b03      	cmp	r3, #3
 8018d4a:	d81f      	bhi.n	8018d8c <UpdateFCntDown+0x54>
 8018d4c:	a201      	add	r2, pc, #4	; (adr r2, 8018d54 <UpdateFCntDown+0x1c>)
 8018d4e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8018d52:	bf00      	nop
 8018d54:	08018d65 	.word	0x08018d65
 8018d58:	08018d6f 	.word	0x08018d6f
 8018d5c:	08018d79 	.word	0x08018d79
 8018d60:	08018d83 	.word	0x08018d83
 8018d64:	4b0d      	ldr	r3, [pc, #52]	; (8018d9c <UpdateFCntDown+0x64>)
 8018d66:	681b      	ldr	r3, [r3, #0]
 8018d68:	683a      	ldr	r2, [r7, #0]
 8018d6a:	611a      	str	r2, [r3, #16]
 8018d6c:	e00f      	b.n	8018d8e <UpdateFCntDown+0x56>
 8018d6e:	4b0b      	ldr	r3, [pc, #44]	; (8018d9c <UpdateFCntDown+0x64>)
 8018d70:	681b      	ldr	r3, [r3, #0]
 8018d72:	683a      	ldr	r2, [r7, #0]
 8018d74:	615a      	str	r2, [r3, #20]
 8018d76:	e00a      	b.n	8018d8e <UpdateFCntDown+0x56>
 8018d78:	4b08      	ldr	r3, [pc, #32]	; (8018d9c <UpdateFCntDown+0x64>)
 8018d7a:	681b      	ldr	r3, [r3, #0]
 8018d7c:	683a      	ldr	r2, [r7, #0]
 8018d7e:	619a      	str	r2, [r3, #24]
 8018d80:	e005      	b.n	8018d8e <UpdateFCntDown+0x56>
 8018d82:	4b06      	ldr	r3, [pc, #24]	; (8018d9c <UpdateFCntDown+0x64>)
 8018d84:	681b      	ldr	r3, [r3, #0]
 8018d86:	683a      	ldr	r2, [r7, #0]
 8018d88:	61da      	str	r2, [r3, #28]
 8018d8a:	e000      	b.n	8018d8e <UpdateFCntDown+0x56>
 8018d8c:	bf00      	nop
 8018d8e:	4b03      	ldr	r3, [pc, #12]	; (8018d9c <UpdateFCntDown+0x64>)
 8018d90:	685b      	ldr	r3, [r3, #4]
 8018d92:	4798      	blx	r3
 8018d94:	bf00      	nop
 8018d96:	3708      	adds	r7, #8
 8018d98:	46bd      	mov	sp, r7
 8018d9a:	bd80      	pop	{r7, pc}
 8018d9c:	20001340 	.word	0x20001340

08018da0 <ResetFCnts>:
 8018da0:	b580      	push	{r7, lr}
 8018da2:	af00      	add	r7, sp, #0
 8018da4:	4b11      	ldr	r3, [pc, #68]	; (8018dec <ResetFCnts+0x4c>)
 8018da6:	681b      	ldr	r3, [r3, #0]
 8018da8:	2200      	movs	r2, #0
 8018daa:	60da      	str	r2, [r3, #12]
 8018dac:	4b0f      	ldr	r3, [pc, #60]	; (8018dec <ResetFCnts+0x4c>)
 8018dae:	681b      	ldr	r3, [r3, #0]
 8018db0:	f04f 32ff 	mov.w	r2, #4294967295
 8018db4:	611a      	str	r2, [r3, #16]
 8018db6:	4b0d      	ldr	r3, [pc, #52]	; (8018dec <ResetFCnts+0x4c>)
 8018db8:	681b      	ldr	r3, [r3, #0]
 8018dba:	f04f 32ff 	mov.w	r2, #4294967295
 8018dbe:	615a      	str	r2, [r3, #20]
 8018dc0:	4b0a      	ldr	r3, [pc, #40]	; (8018dec <ResetFCnts+0x4c>)
 8018dc2:	681b      	ldr	r3, [r3, #0]
 8018dc4:	f04f 32ff 	mov.w	r2, #4294967295
 8018dc8:	619a      	str	r2, [r3, #24]
 8018dca:	4b08      	ldr	r3, [pc, #32]	; (8018dec <ResetFCnts+0x4c>)
 8018dcc:	681a      	ldr	r2, [r3, #0]
 8018dce:	4b07      	ldr	r3, [pc, #28]	; (8018dec <ResetFCnts+0x4c>)
 8018dd0:	681b      	ldr	r3, [r3, #0]
 8018dd2:	3218      	adds	r2, #24
 8018dd4:	621a      	str	r2, [r3, #32]
 8018dd6:	4b05      	ldr	r3, [pc, #20]	; (8018dec <ResetFCnts+0x4c>)
 8018dd8:	681b      	ldr	r3, [r3, #0]
 8018dda:	f04f 32ff 	mov.w	r2, #4294967295
 8018dde:	61da      	str	r2, [r3, #28]
 8018de0:	4b02      	ldr	r3, [pc, #8]	; (8018dec <ResetFCnts+0x4c>)
 8018de2:	685b      	ldr	r3, [r3, #4]
 8018de4:	4798      	blx	r3
 8018de6:	bf00      	nop
 8018de8:	bd80      	pop	{r7, pc}
 8018dea:	bf00      	nop
 8018dec:	20001340 	.word	0x20001340

08018df0 <DummyCB>:
 8018df0:	b480      	push	{r7}
 8018df2:	af00      	add	r7, sp, #0
 8018df4:	bf00      	nop
 8018df6:	46bd      	mov	sp, r7
 8018df8:	bc80      	pop	{r7}
 8018dfa:	4770      	bx	lr

08018dfc <LoRaMacCryptoInit>:
 8018dfc:	b580      	push	{r7, lr}
 8018dfe:	b082      	sub	sp, #8
 8018e00:	af00      	add	r7, sp, #0
 8018e02:	6078      	str	r0, [r7, #4]
 8018e04:	4b15      	ldr	r3, [pc, #84]	; (8018e5c <LoRaMacCryptoInit+0x60>)
 8018e06:	4a16      	ldr	r2, [pc, #88]	; (8018e60 <LoRaMacCryptoInit+0x64>)
 8018e08:	601a      	str	r2, [r3, #0]
 8018e0a:	687b      	ldr	r3, [r7, #4]
 8018e0c:	2b00      	cmp	r3, #0
 8018e0e:	d003      	beq.n	8018e18 <LoRaMacCryptoInit+0x1c>
 8018e10:	4a12      	ldr	r2, [pc, #72]	; (8018e5c <LoRaMacCryptoInit+0x60>)
 8018e12:	687b      	ldr	r3, [r7, #4]
 8018e14:	6053      	str	r3, [r2, #4]
 8018e16:	e002      	b.n	8018e1e <LoRaMacCryptoInit+0x22>
 8018e18:	4b10      	ldr	r3, [pc, #64]	; (8018e5c <LoRaMacCryptoInit+0x60>)
 8018e1a:	4a12      	ldr	r2, [pc, #72]	; (8018e64 <LoRaMacCryptoInit+0x68>)
 8018e1c:	605a      	str	r2, [r3, #4]
 8018e1e:	4b0f      	ldr	r3, [pc, #60]	; (8018e5c <LoRaMacCryptoInit+0x60>)
 8018e20:	681b      	ldr	r3, [r3, #0]
 8018e22:	2224      	movs	r2, #36	; 0x24
 8018e24:	2100      	movs	r1, #0
 8018e26:	4618      	mov	r0, r3
 8018e28:	f004 fc3a 	bl	801d6a0 <memset1>
 8018e2c:	4b0b      	ldr	r3, [pc, #44]	; (8018e5c <LoRaMacCryptoInit+0x60>)
 8018e2e:	681b      	ldr	r3, [r3, #0]
 8018e30:	2201      	movs	r2, #1
 8018e32:	70da      	strb	r2, [r3, #3]
 8018e34:	4b09      	ldr	r3, [pc, #36]	; (8018e5c <LoRaMacCryptoInit+0x60>)
 8018e36:	681b      	ldr	r3, [r3, #0]
 8018e38:	2201      	movs	r2, #1
 8018e3a:	709a      	strb	r2, [r3, #2]
 8018e3c:	4b07      	ldr	r3, [pc, #28]	; (8018e5c <LoRaMacCryptoInit+0x60>)
 8018e3e:	681b      	ldr	r3, [r3, #0]
 8018e40:	2201      	movs	r2, #1
 8018e42:	705a      	strb	r2, [r3, #1]
 8018e44:	4b05      	ldr	r3, [pc, #20]	; (8018e5c <LoRaMacCryptoInit+0x60>)
 8018e46:	681b      	ldr	r3, [r3, #0]
 8018e48:	2200      	movs	r2, #0
 8018e4a:	701a      	strb	r2, [r3, #0]
 8018e4c:	f7ff ffa8 	bl	8018da0 <ResetFCnts>
 8018e50:	2300      	movs	r3, #0
 8018e52:	4618      	mov	r0, r3
 8018e54:	3708      	adds	r7, #8
 8018e56:	46bd      	mov	sp, r7
 8018e58:	bd80      	pop	{r7, pc}
 8018e5a:	bf00      	nop
 8018e5c:	20001340 	.word	0x20001340
 8018e60:	20001348 	.word	0x20001348
 8018e64:	08018df1 	.word	0x08018df1

08018e68 <LoRaMacCryptoSetLrWanVersion>:
 8018e68:	b480      	push	{r7}
 8018e6a:	b083      	sub	sp, #12
 8018e6c:	af00      	add	r7, sp, #0
 8018e6e:	6078      	str	r0, [r7, #4]
 8018e70:	4b04      	ldr	r3, [pc, #16]	; (8018e84 <LoRaMacCryptoSetLrWanVersion+0x1c>)
 8018e72:	681b      	ldr	r3, [r3, #0]
 8018e74:	687a      	ldr	r2, [r7, #4]
 8018e76:	601a      	str	r2, [r3, #0]
 8018e78:	2300      	movs	r3, #0
 8018e7a:	4618      	mov	r0, r3
 8018e7c:	370c      	adds	r7, #12
 8018e7e:	46bd      	mov	sp, r7
 8018e80:	bc80      	pop	{r7}
 8018e82:	4770      	bx	lr
 8018e84:	20001340 	.word	0x20001340

08018e88 <LoRaMacCryptoRestoreNvmCtx>:
 8018e88:	b580      	push	{r7, lr}
 8018e8a:	b082      	sub	sp, #8
 8018e8c:	af00      	add	r7, sp, #0
 8018e8e:	6078      	str	r0, [r7, #4]
 8018e90:	687b      	ldr	r3, [r7, #4]
 8018e92:	2b00      	cmp	r3, #0
 8018e94:	d006      	beq.n	8018ea4 <LoRaMacCryptoRestoreNvmCtx+0x1c>
 8018e96:	2224      	movs	r2, #36	; 0x24
 8018e98:	6879      	ldr	r1, [r7, #4]
 8018e9a:	4805      	ldr	r0, [pc, #20]	; (8018eb0 <LoRaMacCryptoRestoreNvmCtx+0x28>)
 8018e9c:	f004 fbc5 	bl	801d62a <memcpy1>
 8018ea0:	2300      	movs	r3, #0
 8018ea2:	e000      	b.n	8018ea6 <LoRaMacCryptoRestoreNvmCtx+0x1e>
 8018ea4:	230a      	movs	r3, #10
 8018ea6:	4618      	mov	r0, r3
 8018ea8:	3708      	adds	r7, #8
 8018eaa:	46bd      	mov	sp, r7
 8018eac:	bd80      	pop	{r7, pc}
 8018eae:	bf00      	nop
 8018eb0:	20001348 	.word	0x20001348

08018eb4 <LoRaMacCryptoGetNvmCtx>:
 8018eb4:	b480      	push	{r7}
 8018eb6:	b083      	sub	sp, #12
 8018eb8:	af00      	add	r7, sp, #0
 8018eba:	6078      	str	r0, [r7, #4]
 8018ebc:	687b      	ldr	r3, [r7, #4]
 8018ebe:	2224      	movs	r2, #36	; 0x24
 8018ec0:	601a      	str	r2, [r3, #0]
 8018ec2:	4b03      	ldr	r3, [pc, #12]	; (8018ed0 <LoRaMacCryptoGetNvmCtx+0x1c>)
 8018ec4:	4618      	mov	r0, r3
 8018ec6:	370c      	adds	r7, #12
 8018ec8:	46bd      	mov	sp, r7
 8018eca:	bc80      	pop	{r7}
 8018ecc:	4770      	bx	lr
 8018ece:	bf00      	nop
 8018ed0:	20001348 	.word	0x20001348

08018ed4 <LoRaMacCryptoGetFCntUp>:
 8018ed4:	b480      	push	{r7}
 8018ed6:	b083      	sub	sp, #12
 8018ed8:	af00      	add	r7, sp, #0
 8018eda:	6078      	str	r0, [r7, #4]
 8018edc:	687b      	ldr	r3, [r7, #4]
 8018ede:	2b00      	cmp	r3, #0
 8018ee0:	d101      	bne.n	8018ee6 <LoRaMacCryptoGetFCntUp+0x12>
 8018ee2:	230a      	movs	r3, #10
 8018ee4:	e006      	b.n	8018ef4 <LoRaMacCryptoGetFCntUp+0x20>
 8018ee6:	4b06      	ldr	r3, [pc, #24]	; (8018f00 <LoRaMacCryptoGetFCntUp+0x2c>)
 8018ee8:	681b      	ldr	r3, [r3, #0]
 8018eea:	68db      	ldr	r3, [r3, #12]
 8018eec:	1c5a      	adds	r2, r3, #1
 8018eee:	687b      	ldr	r3, [r7, #4]
 8018ef0:	601a      	str	r2, [r3, #0]
 8018ef2:	2300      	movs	r3, #0
 8018ef4:	4618      	mov	r0, r3
 8018ef6:	370c      	adds	r7, #12
 8018ef8:	46bd      	mov	sp, r7
 8018efa:	bc80      	pop	{r7}
 8018efc:	4770      	bx	lr
 8018efe:	bf00      	nop
 8018f00:	20001340 	.word	0x20001340

08018f04 <LoRaMacCryptoGetFCntDown>:
 8018f04:	b5b0      	push	{r4, r5, r7, lr}
 8018f06:	b088      	sub	sp, #32
 8018f08:	af00      	add	r7, sp, #0
 8018f0a:	60ba      	str	r2, [r7, #8]
 8018f0c:	607b      	str	r3, [r7, #4]
 8018f0e:	4603      	mov	r3, r0
 8018f10:	73fb      	strb	r3, [r7, #15]
 8018f12:	460b      	mov	r3, r1
 8018f14:	81bb      	strh	r3, [r7, #12]
 8018f16:	2300      	movs	r3, #0
 8018f18:	617b      	str	r3, [r7, #20]
 8018f1a:	2300      	movs	r3, #0
 8018f1c:	61fb      	str	r3, [r7, #28]
 8018f1e:	2313      	movs	r3, #19
 8018f20:	76fb      	strb	r3, [r7, #27]
 8018f22:	687b      	ldr	r3, [r7, #4]
 8018f24:	2b00      	cmp	r3, #0
 8018f26:	d101      	bne.n	8018f2c <LoRaMacCryptoGetFCntDown+0x28>
 8018f28:	230a      	movs	r3, #10
 8018f2a:	e04f      	b.n	8018fcc <LoRaMacCryptoGetFCntDown+0xc8>
 8018f2c:	f107 0214 	add.w	r2, r7, #20
 8018f30:	7bfb      	ldrb	r3, [r7, #15]
 8018f32:	4611      	mov	r1, r2
 8018f34:	4618      	mov	r0, r3
 8018f36:	f7ff fe8d 	bl	8018c54 <GetLastFcntDown>
 8018f3a:	4603      	mov	r3, r0
 8018f3c:	76fb      	strb	r3, [r7, #27]
 8018f3e:	7efb      	ldrb	r3, [r7, #27]
 8018f40:	2b00      	cmp	r3, #0
 8018f42:	d001      	beq.n	8018f48 <LoRaMacCryptoGetFCntDown+0x44>
 8018f44:	7efb      	ldrb	r3, [r7, #27]
 8018f46:	e041      	b.n	8018fcc <LoRaMacCryptoGetFCntDown+0xc8>
 8018f48:	697b      	ldr	r3, [r7, #20]
 8018f4a:	f1b3 3fff 	cmp.w	r3, #4294967295
 8018f4e:	d103      	bne.n	8018f58 <LoRaMacCryptoGetFCntDown+0x54>
 8018f50:	687b      	ldr	r3, [r7, #4]
 8018f52:	68ba      	ldr	r2, [r7, #8]
 8018f54:	601a      	str	r2, [r3, #0]
 8018f56:	e01e      	b.n	8018f96 <LoRaMacCryptoGetFCntDown+0x92>
 8018f58:	697b      	ldr	r3, [r7, #20]
 8018f5a:	b29b      	uxth	r3, r3
 8018f5c:	68ba      	ldr	r2, [r7, #8]
 8018f5e:	1ad3      	subs	r3, r2, r3
 8018f60:	61fb      	str	r3, [r7, #28]
 8018f62:	69fb      	ldr	r3, [r7, #28]
 8018f64:	2b00      	cmp	r3, #0
 8018f66:	dd05      	ble.n	8018f74 <LoRaMacCryptoGetFCntDown+0x70>
 8018f68:	697a      	ldr	r2, [r7, #20]
 8018f6a:	69fb      	ldr	r3, [r7, #28]
 8018f6c:	441a      	add	r2, r3
 8018f6e:	687b      	ldr	r3, [r7, #4]
 8018f70:	601a      	str	r2, [r3, #0]
 8018f72:	e010      	b.n	8018f96 <LoRaMacCryptoGetFCntDown+0x92>
 8018f74:	69fb      	ldr	r3, [r7, #28]
 8018f76:	2b00      	cmp	r3, #0
 8018f78:	d104      	bne.n	8018f84 <LoRaMacCryptoGetFCntDown+0x80>
 8018f7a:	697a      	ldr	r2, [r7, #20]
 8018f7c:	687b      	ldr	r3, [r7, #4]
 8018f7e:	601a      	str	r2, [r3, #0]
 8018f80:	2307      	movs	r3, #7
 8018f82:	e023      	b.n	8018fcc <LoRaMacCryptoGetFCntDown+0xc8>
 8018f84:	697b      	ldr	r3, [r7, #20]
 8018f86:	0c1b      	lsrs	r3, r3, #16
 8018f88:	041b      	lsls	r3, r3, #16
 8018f8a:	68ba      	ldr	r2, [r7, #8]
 8018f8c:	4413      	add	r3, r2
 8018f8e:	f503 3280 	add.w	r2, r3, #65536	; 0x10000
 8018f92:	687b      	ldr	r3, [r7, #4]
 8018f94:	601a      	str	r2, [r3, #0]
 8018f96:	4b0f      	ldr	r3, [pc, #60]	; (8018fd4 <LoRaMacCryptoGetFCntDown+0xd0>)
 8018f98:	681b      	ldr	r3, [r3, #0]
 8018f9a:	789b      	ldrb	r3, [r3, #2]
 8018f9c:	2b00      	cmp	r3, #0
 8018f9e:	d114      	bne.n	8018fca <LoRaMacCryptoGetFCntDown+0xc6>
 8018fa0:	687b      	ldr	r3, [r7, #4]
 8018fa2:	681b      	ldr	r3, [r3, #0]
 8018fa4:	4618      	mov	r0, r3
 8018fa6:	f04f 0100 	mov.w	r1, #0
 8018faa:	697b      	ldr	r3, [r7, #20]
 8018fac:	461a      	mov	r2, r3
 8018fae:	f04f 0300 	mov.w	r3, #0
 8018fb2:	1a84      	subs	r4, r0, r2
 8018fb4:	eb61 0503 	sbc.w	r5, r1, r3
 8018fb8:	89ba      	ldrh	r2, [r7, #12]
 8018fba:	f04f 0300 	mov.w	r3, #0
 8018fbe:	4294      	cmp	r4, r2
 8018fc0:	eb75 0303 	sbcs.w	r3, r5, r3
 8018fc4:	db01      	blt.n	8018fca <LoRaMacCryptoGetFCntDown+0xc6>
 8018fc6:	2308      	movs	r3, #8
 8018fc8:	e000      	b.n	8018fcc <LoRaMacCryptoGetFCntDown+0xc8>
 8018fca:	2300      	movs	r3, #0
 8018fcc:	4618      	mov	r0, r3
 8018fce:	3720      	adds	r7, #32
 8018fd0:	46bd      	mov	sp, r7
 8018fd2:	bdb0      	pop	{r4, r5, r7, pc}
 8018fd4:	20001340 	.word	0x20001340

08018fd8 <LoRaMacCryptoSetMulticastReference>:
 8018fd8:	b480      	push	{r7}
 8018fda:	b083      	sub	sp, #12
 8018fdc:	af00      	add	r7, sp, #0
 8018fde:	6078      	str	r0, [r7, #4]
 8018fe0:	687b      	ldr	r3, [r7, #4]
 8018fe2:	2b00      	cmp	r3, #0
 8018fe4:	d101      	bne.n	8018fea <LoRaMacCryptoSetMulticastReference+0x12>
 8018fe6:	230a      	movs	r3, #10
 8018fe8:	e006      	b.n	8018ff8 <LoRaMacCryptoSetMulticastReference+0x20>
 8018fea:	4b06      	ldr	r3, [pc, #24]	; (8019004 <LoRaMacCryptoSetMulticastReference+0x2c>)
 8018fec:	681b      	ldr	r3, [r3, #0]
 8018fee:	f103 021c 	add.w	r2, r3, #28
 8018ff2:	687b      	ldr	r3, [r7, #4]
 8018ff4:	621a      	str	r2, [r3, #32]
 8018ff6:	2300      	movs	r3, #0
 8018ff8:	4618      	mov	r0, r3
 8018ffa:	370c      	adds	r7, #12
 8018ffc:	46bd      	mov	sp, r7
 8018ffe:	bc80      	pop	{r7}
 8019000:	4770      	bx	lr
 8019002:	bf00      	nop
 8019004:	20001340 	.word	0x20001340

08019008 <LoRaMacCryptoSetKey>:
 8019008:	b580      	push	{r7, lr}
 801900a:	b082      	sub	sp, #8
 801900c:	af00      	add	r7, sp, #0
 801900e:	4603      	mov	r3, r0
 8019010:	6039      	str	r1, [r7, #0]
 8019012:	71fb      	strb	r3, [r7, #7]
 8019014:	79fb      	ldrb	r3, [r7, #7]
 8019016:	6839      	ldr	r1, [r7, #0]
 8019018:	4618      	mov	r0, r3
 801901a:	f7f8 fbb5 	bl	8011788 <SecureElementSetKey>
 801901e:	4603      	mov	r3, r0
 8019020:	2b00      	cmp	r3, #0
 8019022:	d001      	beq.n	8019028 <LoRaMacCryptoSetKey+0x20>
 8019024:	230f      	movs	r3, #15
 8019026:	e014      	b.n	8019052 <LoRaMacCryptoSetKey+0x4a>
 8019028:	79fb      	ldrb	r3, [r7, #7]
 801902a:	2b00      	cmp	r3, #0
 801902c:	d110      	bne.n	8019050 <LoRaMacCryptoSetKey+0x48>
 801902e:	79fb      	ldrb	r3, [r7, #7]
 8019030:	4618      	mov	r0, r3
 8019032:	f000 fa21 	bl	8019478 <LoRaMacCryptoDeriveMcRootKey>
 8019036:	4603      	mov	r3, r0
 8019038:	2b00      	cmp	r3, #0
 801903a:	d001      	beq.n	8019040 <LoRaMacCryptoSetKey+0x38>
 801903c:	230f      	movs	r3, #15
 801903e:	e008      	b.n	8019052 <LoRaMacCryptoSetKey+0x4a>
 8019040:	2004      	movs	r0, #4
 8019042:	f000 fa47 	bl	80194d4 <LoRaMacCryptoDeriveMcKEKey>
 8019046:	4603      	mov	r3, r0
 8019048:	2b00      	cmp	r3, #0
 801904a:	d001      	beq.n	8019050 <LoRaMacCryptoSetKey+0x48>
 801904c:	230f      	movs	r3, #15
 801904e:	e000      	b.n	8019052 <LoRaMacCryptoSetKey+0x4a>
 8019050:	2300      	movs	r3, #0
 8019052:	4618      	mov	r0, r3
 8019054:	3708      	adds	r7, #8
 8019056:	46bd      	mov	sp, r7
 8019058:	bd80      	pop	{r7, pc}
	...

0801905c <LoRaMacCryptoPrepareJoinRequest>:
 801905c:	b580      	push	{r7, lr}
 801905e:	b086      	sub	sp, #24
 8019060:	af02      	add	r7, sp, #8
 8019062:	6078      	str	r0, [r7, #4]
 8019064:	687b      	ldr	r3, [r7, #4]
 8019066:	2b00      	cmp	r3, #0
 8019068:	d101      	bne.n	801906e <LoRaMacCryptoPrepareJoinRequest+0x12>
 801906a:	230a      	movs	r3, #10
 801906c:	e036      	b.n	80190dc <LoRaMacCryptoPrepareJoinRequest+0x80>
 801906e:	2301      	movs	r3, #1
 8019070:	73fb      	strb	r3, [r7, #15]
 8019072:	2300      	movs	r3, #0
 8019074:	60bb      	str	r3, [r7, #8]
 8019076:	f107 0308 	add.w	r3, r7, #8
 801907a:	4618      	mov	r0, r3
 801907c:	f7f8 fd5e 	bl	8011b3c <SecureElementRandomNumber>
 8019080:	68ba      	ldr	r2, [r7, #8]
 8019082:	4b18      	ldr	r3, [pc, #96]	; (80190e4 <LoRaMacCryptoPrepareJoinRequest+0x88>)
 8019084:	681b      	ldr	r3, [r3, #0]
 8019086:	b292      	uxth	r2, r2
 8019088:	809a      	strh	r2, [r3, #4]
 801908a:	4b16      	ldr	r3, [pc, #88]	; (80190e4 <LoRaMacCryptoPrepareJoinRequest+0x88>)
 801908c:	685b      	ldr	r3, [r3, #4]
 801908e:	4798      	blx	r3
 8019090:	4b14      	ldr	r3, [pc, #80]	; (80190e4 <LoRaMacCryptoPrepareJoinRequest+0x88>)
 8019092:	681b      	ldr	r3, [r3, #0]
 8019094:	889a      	ldrh	r2, [r3, #4]
 8019096:	687b      	ldr	r3, [r7, #4]
 8019098:	82da      	strh	r2, [r3, #22]
 801909a:	6878      	ldr	r0, [r7, #4]
 801909c:	f000 fc01 	bl	80198a2 <LoRaMacSerializerJoinRequest>
 80190a0:	4603      	mov	r3, r0
 80190a2:	2b00      	cmp	r3, #0
 80190a4:	d001      	beq.n	80190aa <LoRaMacCryptoPrepareJoinRequest+0x4e>
 80190a6:	2311      	movs	r3, #17
 80190a8:	e018      	b.n	80190dc <LoRaMacCryptoPrepareJoinRequest+0x80>
 80190aa:	687b      	ldr	r3, [r7, #4]
 80190ac:	6819      	ldr	r1, [r3, #0]
 80190ae:	687b      	ldr	r3, [r7, #4]
 80190b0:	3318      	adds	r3, #24
 80190b2:	7bfa      	ldrb	r2, [r7, #15]
 80190b4:	9300      	str	r3, [sp, #0]
 80190b6:	4613      	mov	r3, r2
 80190b8:	2213      	movs	r2, #19
 80190ba:	2000      	movs	r0, #0
 80190bc:	f7f8 fbc8 	bl	8011850 <SecureElementComputeAesCmac>
 80190c0:	4603      	mov	r3, r0
 80190c2:	2b00      	cmp	r3, #0
 80190c4:	d001      	beq.n	80190ca <LoRaMacCryptoPrepareJoinRequest+0x6e>
 80190c6:	230f      	movs	r3, #15
 80190c8:	e008      	b.n	80190dc <LoRaMacCryptoPrepareJoinRequest+0x80>
 80190ca:	6878      	ldr	r0, [r7, #4]
 80190cc:	f000 fbe9 	bl	80198a2 <LoRaMacSerializerJoinRequest>
 80190d0:	4603      	mov	r3, r0
 80190d2:	2b00      	cmp	r3, #0
 80190d4:	d001      	beq.n	80190da <LoRaMacCryptoPrepareJoinRequest+0x7e>
 80190d6:	2311      	movs	r3, #17
 80190d8:	e000      	b.n	80190dc <LoRaMacCryptoPrepareJoinRequest+0x80>
 80190da:	2300      	movs	r3, #0
 80190dc:	4618      	mov	r0, r3
 80190de:	3710      	adds	r7, #16
 80190e0:	46bd      	mov	sp, r7
 80190e2:	bd80      	pop	{r7, pc}
 80190e4:	20001340 	.word	0x20001340

080190e8 <LoRaMacCryptoHandleJoinAccept>:
 80190e8:	b590      	push	{r4, r7, lr}
 80190ea:	b095      	sub	sp, #84	; 0x54
 80190ec:	af04      	add	r7, sp, #16
 80190ee:	4603      	mov	r3, r0
 80190f0:	60b9      	str	r1, [r7, #8]
 80190f2:	607a      	str	r2, [r7, #4]
 80190f4:	73fb      	strb	r3, [r7, #15]
 80190f6:	687b      	ldr	r3, [r7, #4]
 80190f8:	2b00      	cmp	r3, #0
 80190fa:	d002      	beq.n	8019102 <LoRaMacCryptoHandleJoinAccept+0x1a>
 80190fc:	68bb      	ldr	r3, [r7, #8]
 80190fe:	2b00      	cmp	r3, #0
 8019100:	d101      	bne.n	8019106 <LoRaMacCryptoHandleJoinAccept+0x1e>
 8019102:	230a      	movs	r3, #10
 8019104:	e09b      	b.n	801923e <LoRaMacCryptoHandleJoinAccept+0x156>
 8019106:	2313      	movs	r3, #19
 8019108:	f887 303f 	strb.w	r3, [r7, #63]	; 0x3f
 801910c:	2300      	movs	r3, #0
 801910e:	617b      	str	r3, [r7, #20]
 8019110:	f107 0318 	add.w	r3, r7, #24
 8019114:	221d      	movs	r2, #29
 8019116:	2100      	movs	r1, #0
 8019118:	4618      	mov	r0, r3
 801911a:	f00b fb53 	bl	80247c4 <memset>
 801911e:	2300      	movs	r3, #0
 8019120:	74fb      	strb	r3, [r7, #19]
 8019122:	4b49      	ldr	r3, [pc, #292]	; (8019248 <LoRaMacCryptoHandleJoinAccept+0x160>)
 8019124:	681b      	ldr	r3, [r3, #0]
 8019126:	3304      	adds	r3, #4
 8019128:	63bb      	str	r3, [r7, #56]	; 0x38
 801912a:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 801912c:	781b      	ldrb	r3, [r3, #0]
 801912e:	b299      	uxth	r1, r3
 8019130:	687b      	ldr	r3, [r7, #4]
 8019132:	681c      	ldr	r4, [r3, #0]
 8019134:	687b      	ldr	r3, [r7, #4]
 8019136:	791b      	ldrb	r3, [r3, #4]
 8019138:	7bf8      	ldrb	r0, [r7, #15]
 801913a:	f107 0213 	add.w	r2, r7, #19
 801913e:	9202      	str	r2, [sp, #8]
 8019140:	f107 0214 	add.w	r2, r7, #20
 8019144:	9201      	str	r2, [sp, #4]
 8019146:	9300      	str	r3, [sp, #0]
 8019148:	4623      	mov	r3, r4
 801914a:	460a      	mov	r2, r1
 801914c:	68b9      	ldr	r1, [r7, #8]
 801914e:	f7f8 fc78 	bl	8011a42 <SecureElementProcessJoinAccept>
 8019152:	4603      	mov	r3, r0
 8019154:	2b00      	cmp	r3, #0
 8019156:	d001      	beq.n	801915c <LoRaMacCryptoHandleJoinAccept+0x74>
 8019158:	230f      	movs	r3, #15
 801915a:	e070      	b.n	801923e <LoRaMacCryptoHandleJoinAccept+0x156>
 801915c:	687b      	ldr	r3, [r7, #4]
 801915e:	6818      	ldr	r0, [r3, #0]
 8019160:	687b      	ldr	r3, [r7, #4]
 8019162:	791b      	ldrb	r3, [r3, #4]
 8019164:	b29a      	uxth	r2, r3
 8019166:	f107 0314 	add.w	r3, r7, #20
 801916a:	4619      	mov	r1, r3
 801916c:	f004 fa5d 	bl	801d62a <memcpy1>
 8019170:	6878      	ldr	r0, [r7, #4]
 8019172:	f000 f9d7 	bl	8019524 <LoRaMacParserJoinAccept>
 8019176:	4603      	mov	r3, r0
 8019178:	2b00      	cmp	r3, #0
 801917a:	d001      	beq.n	8019180 <LoRaMacCryptoHandleJoinAccept+0x98>
 801917c:	2310      	movs	r3, #16
 801917e:	e05e      	b.n	801923e <LoRaMacCryptoHandleJoinAccept+0x156>
 8019180:	2000      	movs	r0, #0
 8019182:	f000 f979 	bl	8019478 <LoRaMacCryptoDeriveMcRootKey>
 8019186:	4603      	mov	r3, r0
 8019188:	f887 303f 	strb.w	r3, [r7, #63]	; 0x3f
 801918c:	f897 303f 	ldrb.w	r3, [r7, #63]	; 0x3f
 8019190:	2b00      	cmp	r3, #0
 8019192:	d002      	beq.n	801919a <LoRaMacCryptoHandleJoinAccept+0xb2>
 8019194:	f897 303f 	ldrb.w	r3, [r7, #63]	; 0x3f
 8019198:	e051      	b.n	801923e <LoRaMacCryptoHandleJoinAccept+0x156>
 801919a:	2004      	movs	r0, #4
 801919c:	f000 f99a 	bl	80194d4 <LoRaMacCryptoDeriveMcKEKey>
 80191a0:	4603      	mov	r3, r0
 80191a2:	f887 303f 	strb.w	r3, [r7, #63]	; 0x3f
 80191a6:	f897 303f 	ldrb.w	r3, [r7, #63]	; 0x3f
 80191aa:	2b00      	cmp	r3, #0
 80191ac:	d002      	beq.n	80191b4 <LoRaMacCryptoHandleJoinAccept+0xcc>
 80191ae:	f897 303f 	ldrb.w	r3, [r7, #63]	; 0x3f
 80191b2:	e044      	b.n	801923e <LoRaMacCryptoHandleJoinAccept+0x156>
 80191b4:	687b      	ldr	r3, [r7, #4]
 80191b6:	1d99      	adds	r1, r3, #6
 80191b8:	687b      	ldr	r3, [r7, #4]
 80191ba:	f103 0209 	add.w	r2, r3, #9
 80191be:	4b22      	ldr	r3, [pc, #136]	; (8019248 <LoRaMacCryptoHandleJoinAccept+0x160>)
 80191c0:	681b      	ldr	r3, [r3, #0]
 80191c2:	3304      	adds	r3, #4
 80191c4:	2003      	movs	r0, #3
 80191c6:	f7ff fcef 	bl	8018ba8 <DeriveSessionKey10x>
 80191ca:	4603      	mov	r3, r0
 80191cc:	f887 303f 	strb.w	r3, [r7, #63]	; 0x3f
 80191d0:	f897 303f 	ldrb.w	r3, [r7, #63]	; 0x3f
 80191d4:	2b00      	cmp	r3, #0
 80191d6:	d002      	beq.n	80191de <LoRaMacCryptoHandleJoinAccept+0xf6>
 80191d8:	f897 303f 	ldrb.w	r3, [r7, #63]	; 0x3f
 80191dc:	e02f      	b.n	801923e <LoRaMacCryptoHandleJoinAccept+0x156>
 80191de:	687b      	ldr	r3, [r7, #4]
 80191e0:	1d99      	adds	r1, r3, #6
 80191e2:	687b      	ldr	r3, [r7, #4]
 80191e4:	f103 0209 	add.w	r2, r3, #9
 80191e8:	4b17      	ldr	r3, [pc, #92]	; (8019248 <LoRaMacCryptoHandleJoinAccept+0x160>)
 80191ea:	681b      	ldr	r3, [r3, #0]
 80191ec:	3304      	adds	r3, #4
 80191ee:	2002      	movs	r0, #2
 80191f0:	f7ff fcda 	bl	8018ba8 <DeriveSessionKey10x>
 80191f4:	4603      	mov	r3, r0
 80191f6:	f887 303f 	strb.w	r3, [r7, #63]	; 0x3f
 80191fa:	f897 303f 	ldrb.w	r3, [r7, #63]	; 0x3f
 80191fe:	2b00      	cmp	r3, #0
 8019200:	d002      	beq.n	8019208 <LoRaMacCryptoHandleJoinAccept+0x120>
 8019202:	f897 303f 	ldrb.w	r3, [r7, #63]	; 0x3f
 8019206:	e01a      	b.n	801923e <LoRaMacCryptoHandleJoinAccept+0x156>
 8019208:	4b0f      	ldr	r3, [pc, #60]	; (8019248 <LoRaMacCryptoHandleJoinAccept+0x160>)
 801920a:	681b      	ldr	r3, [r3, #0]
 801920c:	7cfa      	ldrb	r2, [r7, #19]
 801920e:	709a      	strb	r2, [r3, #2]
 8019210:	4b0d      	ldr	r3, [pc, #52]	; (8019248 <LoRaMacCryptoHandleJoinAccept+0x160>)
 8019212:	681b      	ldr	r3, [r3, #0]
 8019214:	2200      	movs	r2, #0
 8019216:	60da      	str	r2, [r3, #12]
 8019218:	4b0b      	ldr	r3, [pc, #44]	; (8019248 <LoRaMacCryptoHandleJoinAccept+0x160>)
 801921a:	681b      	ldr	r3, [r3, #0]
 801921c:	f04f 32ff 	mov.w	r2, #4294967295
 8019220:	619a      	str	r2, [r3, #24]
 8019222:	4b09      	ldr	r3, [pc, #36]	; (8019248 <LoRaMacCryptoHandleJoinAccept+0x160>)
 8019224:	681b      	ldr	r3, [r3, #0]
 8019226:	f04f 32ff 	mov.w	r2, #4294967295
 801922a:	611a      	str	r2, [r3, #16]
 801922c:	4b06      	ldr	r3, [pc, #24]	; (8019248 <LoRaMacCryptoHandleJoinAccept+0x160>)
 801922e:	681b      	ldr	r3, [r3, #0]
 8019230:	f04f 32ff 	mov.w	r2, #4294967295
 8019234:	615a      	str	r2, [r3, #20]
 8019236:	4b04      	ldr	r3, [pc, #16]	; (8019248 <LoRaMacCryptoHandleJoinAccept+0x160>)
 8019238:	685b      	ldr	r3, [r3, #4]
 801923a:	4798      	blx	r3
 801923c:	2300      	movs	r3, #0
 801923e:	4618      	mov	r0, r3
 8019240:	3744      	adds	r7, #68	; 0x44
 8019242:	46bd      	mov	sp, r7
 8019244:	bd90      	pop	{r4, r7, pc}
 8019246:	bf00      	nop
 8019248:	20001340 	.word	0x20001340

0801924c <LoRaMacCryptoSecureMessage>:
 801924c:	b590      	push	{r4, r7, lr}
 801924e:	b08b      	sub	sp, #44	; 0x2c
 8019250:	af04      	add	r7, sp, #16
 8019252:	60f8      	str	r0, [r7, #12]
 8019254:	607b      	str	r3, [r7, #4]
 8019256:	460b      	mov	r3, r1
 8019258:	72fb      	strb	r3, [r7, #11]
 801925a:	4613      	mov	r3, r2
 801925c:	72bb      	strb	r3, [r7, #10]
 801925e:	2313      	movs	r3, #19
 8019260:	75bb      	strb	r3, [r7, #22]
 8019262:	2303      	movs	r3, #3
 8019264:	75fb      	strb	r3, [r7, #23]
 8019266:	687b      	ldr	r3, [r7, #4]
 8019268:	2b00      	cmp	r3, #0
 801926a:	d101      	bne.n	8019270 <LoRaMacCryptoSecureMessage+0x24>
 801926c:	230a      	movs	r3, #10
 801926e:	e062      	b.n	8019336 <LoRaMacCryptoSecureMessage+0xea>
 8019270:	4b33      	ldr	r3, [pc, #204]	; (8019340 <LoRaMacCryptoSecureMessage+0xf4>)
 8019272:	681b      	ldr	r3, [r3, #0]
 8019274:	68db      	ldr	r3, [r3, #12]
 8019276:	68fa      	ldr	r2, [r7, #12]
 8019278:	429a      	cmp	r2, r3
 801927a:	d201      	bcs.n	8019280 <LoRaMacCryptoSecureMessage+0x34>
 801927c:	2306      	movs	r3, #6
 801927e:	e05a      	b.n	8019336 <LoRaMacCryptoSecureMessage+0xea>
 8019280:	687b      	ldr	r3, [r7, #4]
 8019282:	f893 3020 	ldrb.w	r3, [r3, #32]
 8019286:	2b00      	cmp	r3, #0
 8019288:	d101      	bne.n	801928e <LoRaMacCryptoSecureMessage+0x42>
 801928a:	2302      	movs	r3, #2
 801928c:	75fb      	strb	r3, [r7, #23]
 801928e:	4b2c      	ldr	r3, [pc, #176]	; (8019340 <LoRaMacCryptoSecureMessage+0xf4>)
 8019290:	681b      	ldr	r3, [r3, #0]
 8019292:	68db      	ldr	r3, [r3, #12]
 8019294:	68fa      	ldr	r2, [r7, #12]
 8019296:	429a      	cmp	r2, r3
 8019298:	d916      	bls.n	80192c8 <LoRaMacCryptoSecureMessage+0x7c>
 801929a:	687b      	ldr	r3, [r7, #4]
 801929c:	6a58      	ldr	r0, [r3, #36]	; 0x24
 801929e:	687b      	ldr	r3, [r7, #4]
 80192a0:	f893 3028 	ldrb.w	r3, [r3, #40]	; 0x28
 80192a4:	b219      	sxth	r1, r3
 80192a6:	687b      	ldr	r3, [r7, #4]
 80192a8:	689c      	ldr	r4, [r3, #8]
 80192aa:	7dfa      	ldrb	r2, [r7, #23]
 80192ac:	68fb      	ldr	r3, [r7, #12]
 80192ae:	9301      	str	r3, [sp, #4]
 80192b0:	2300      	movs	r3, #0
 80192b2:	9300      	str	r3, [sp, #0]
 80192b4:	4623      	mov	r3, r4
 80192b6:	f7ff faa9 	bl	801880c <PayloadEncrypt>
 80192ba:	4603      	mov	r3, r0
 80192bc:	75bb      	strb	r3, [r7, #22]
 80192be:	7dbb      	ldrb	r3, [r7, #22]
 80192c0:	2b00      	cmp	r3, #0
 80192c2:	d001      	beq.n	80192c8 <LoRaMacCryptoSecureMessage+0x7c>
 80192c4:	7dbb      	ldrb	r3, [r7, #22]
 80192c6:	e036      	b.n	8019336 <LoRaMacCryptoSecureMessage+0xea>
 80192c8:	6878      	ldr	r0, [r7, #4]
 80192ca:	f000 fb6c 	bl	80199a6 <LoRaMacSerializerData>
 80192ce:	4603      	mov	r3, r0
 80192d0:	2b00      	cmp	r3, #0
 80192d2:	d001      	beq.n	80192d8 <LoRaMacCryptoSecureMessage+0x8c>
 80192d4:	2311      	movs	r3, #17
 80192d6:	e02e      	b.n	8019336 <LoRaMacCryptoSecureMessage+0xea>
 80192d8:	2302      	movs	r3, #2
 80192da:	75fb      	strb	r3, [r7, #23]
 80192dc:	687b      	ldr	r3, [r7, #4]
 80192de:	6818      	ldr	r0, [r3, #0]
 80192e0:	687b      	ldr	r3, [r7, #4]
 80192e2:	791b      	ldrb	r3, [r3, #4]
 80192e4:	b29b      	uxth	r3, r3
 80192e6:	3b04      	subs	r3, #4
 80192e8:	b299      	uxth	r1, r3
 80192ea:	687b      	ldr	r3, [r7, #4]
 80192ec:	689b      	ldr	r3, [r3, #8]
 80192ee:	687a      	ldr	r2, [r7, #4]
 80192f0:	322c      	adds	r2, #44	; 0x2c
 80192f2:	7dfc      	ldrb	r4, [r7, #23]
 80192f4:	9203      	str	r2, [sp, #12]
 80192f6:	68fa      	ldr	r2, [r7, #12]
 80192f8:	9202      	str	r2, [sp, #8]
 80192fa:	9301      	str	r3, [sp, #4]
 80192fc:	2300      	movs	r3, #0
 80192fe:	9300      	str	r3, [sp, #0]
 8019300:	2300      	movs	r3, #0
 8019302:	4622      	mov	r2, r4
 8019304:	f7ff fb84 	bl	8018a10 <ComputeCmacB0>
 8019308:	4603      	mov	r3, r0
 801930a:	75bb      	strb	r3, [r7, #22]
 801930c:	7dbb      	ldrb	r3, [r7, #22]
 801930e:	2b00      	cmp	r3, #0
 8019310:	d001      	beq.n	8019316 <LoRaMacCryptoSecureMessage+0xca>
 8019312:	7dbb      	ldrb	r3, [r7, #22]
 8019314:	e00f      	b.n	8019336 <LoRaMacCryptoSecureMessage+0xea>
 8019316:	6878      	ldr	r0, [r7, #4]
 8019318:	f000 fb45 	bl	80199a6 <LoRaMacSerializerData>
 801931c:	4603      	mov	r3, r0
 801931e:	2b00      	cmp	r3, #0
 8019320:	d001      	beq.n	8019326 <LoRaMacCryptoSecureMessage+0xda>
 8019322:	2311      	movs	r3, #17
 8019324:	e007      	b.n	8019336 <LoRaMacCryptoSecureMessage+0xea>
 8019326:	4b06      	ldr	r3, [pc, #24]	; (8019340 <LoRaMacCryptoSecureMessage+0xf4>)
 8019328:	681b      	ldr	r3, [r3, #0]
 801932a:	68fa      	ldr	r2, [r7, #12]
 801932c:	60da      	str	r2, [r3, #12]
 801932e:	4b04      	ldr	r3, [pc, #16]	; (8019340 <LoRaMacCryptoSecureMessage+0xf4>)
 8019330:	685b      	ldr	r3, [r3, #4]
 8019332:	4798      	blx	r3
 8019334:	2300      	movs	r3, #0
 8019336:	4618      	mov	r0, r3
 8019338:	371c      	adds	r7, #28
 801933a:	46bd      	mov	sp, r7
 801933c:	bd90      	pop	{r4, r7, pc}
 801933e:	bf00      	nop
 8019340:	20001340 	.word	0x20001340

08019344 <LoRaMacCryptoUnsecureMessage>:
 8019344:	b590      	push	{r4, r7, lr}
 8019346:	b08b      	sub	sp, #44	; 0x2c
 8019348:	af04      	add	r7, sp, #16
 801934a:	60b9      	str	r1, [r7, #8]
 801934c:	607b      	str	r3, [r7, #4]
 801934e:	4603      	mov	r3, r0
 8019350:	73fb      	strb	r3, [r7, #15]
 8019352:	4613      	mov	r3, r2
 8019354:	73bb      	strb	r3, [r7, #14]
 8019356:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8019358:	2b00      	cmp	r3, #0
 801935a:	d101      	bne.n	8019360 <LoRaMacCryptoUnsecureMessage+0x1c>
 801935c:	230a      	movs	r3, #10
 801935e:	e084      	b.n	801946a <LoRaMacCryptoUnsecureMessage+0x126>
 8019360:	7bbb      	ldrb	r3, [r7, #14]
 8019362:	6879      	ldr	r1, [r7, #4]
 8019364:	4618      	mov	r0, r3
 8019366:	f7ff fcc3 	bl	8018cf0 <CheckFCntDown>
 801936a:	4603      	mov	r3, r0
 801936c:	f083 0301 	eor.w	r3, r3, #1
 8019370:	b2db      	uxtb	r3, r3
 8019372:	2b00      	cmp	r3, #0
 8019374:	d001      	beq.n	801937a <LoRaMacCryptoUnsecureMessage+0x36>
 8019376:	2306      	movs	r3, #6
 8019378:	e077      	b.n	801946a <LoRaMacCryptoUnsecureMessage+0x126>
 801937a:	2313      	movs	r3, #19
 801937c:	757b      	strb	r3, [r7, #21]
 801937e:	2303      	movs	r3, #3
 8019380:	75fb      	strb	r3, [r7, #23]
 8019382:	2302      	movs	r3, #2
 8019384:	753b      	strb	r3, [r7, #20]
 8019386:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 8019388:	f000 f997 	bl	80196ba <LoRaMacParserData>
 801938c:	4603      	mov	r3, r0
 801938e:	2b00      	cmp	r3, #0
 8019390:	d001      	beq.n	8019396 <LoRaMacCryptoUnsecureMessage+0x52>
 8019392:	2310      	movs	r3, #16
 8019394:	e069      	b.n	801946a <LoRaMacCryptoUnsecureMessage+0x126>
 8019396:	f107 0210 	add.w	r2, r7, #16
 801939a:	7bfb      	ldrb	r3, [r7, #15]
 801939c:	4611      	mov	r1, r2
 801939e:	4618      	mov	r0, r3
 80193a0:	f7ff fbdc 	bl	8018b5c <GetKeyAddrItem>
 80193a4:	4603      	mov	r3, r0
 80193a6:	757b      	strb	r3, [r7, #21]
 80193a8:	7d7b      	ldrb	r3, [r7, #21]
 80193aa:	2b00      	cmp	r3, #0
 80193ac:	d001      	beq.n	80193b2 <LoRaMacCryptoUnsecureMessage+0x6e>
 80193ae:	7d7b      	ldrb	r3, [r7, #21]
 80193b0:	e05b      	b.n	801946a <LoRaMacCryptoUnsecureMessage+0x126>
 80193b2:	693b      	ldr	r3, [r7, #16]
 80193b4:	785b      	ldrb	r3, [r3, #1]
 80193b6:	75fb      	strb	r3, [r7, #23]
 80193b8:	693b      	ldr	r3, [r7, #16]
 80193ba:	789b      	ldrb	r3, [r3, #2]
 80193bc:	753b      	strb	r3, [r7, #20]
 80193be:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80193c0:	689b      	ldr	r3, [r3, #8]
 80193c2:	68ba      	ldr	r2, [r7, #8]
 80193c4:	429a      	cmp	r2, r3
 80193c6:	d001      	beq.n	80193cc <LoRaMacCryptoUnsecureMessage+0x88>
 80193c8:	2302      	movs	r3, #2
 80193ca:	e04e      	b.n	801946a <LoRaMacCryptoUnsecureMessage+0x126>
 80193cc:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80193ce:	7b1b      	ldrb	r3, [r3, #12]
 80193d0:	f3c3 1340 	ubfx	r3, r3, #5, #1
 80193d4:	b2db      	uxtb	r3, r3
 80193d6:	2b00      	cmp	r3, #0
 80193d8:	bf14      	ite	ne
 80193da:	2301      	movne	r3, #1
 80193dc:	2300      	moveq	r3, #0
 80193de:	75bb      	strb	r3, [r7, #22]
 80193e0:	4b24      	ldr	r3, [pc, #144]	; (8019474 <LoRaMacCryptoUnsecureMessage+0x130>)
 80193e2:	681b      	ldr	r3, [r3, #0]
 80193e4:	789b      	ldrb	r3, [r3, #2]
 80193e6:	2b00      	cmp	r3, #0
 80193e8:	d101      	bne.n	80193ee <LoRaMacCryptoUnsecureMessage+0xaa>
 80193ea:	2300      	movs	r3, #0
 80193ec:	75bb      	strb	r3, [r7, #22]
 80193ee:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80193f0:	6818      	ldr	r0, [r3, #0]
 80193f2:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80193f4:	791b      	ldrb	r3, [r3, #4]
 80193f6:	b29b      	uxth	r3, r3
 80193f8:	3b04      	subs	r3, #4
 80193fa:	b299      	uxth	r1, r3
 80193fc:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80193fe:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8019400:	7dbc      	ldrb	r4, [r7, #22]
 8019402:	7d3a      	ldrb	r2, [r7, #20]
 8019404:	9303      	str	r3, [sp, #12]
 8019406:	687b      	ldr	r3, [r7, #4]
 8019408:	9302      	str	r3, [sp, #8]
 801940a:	68bb      	ldr	r3, [r7, #8]
 801940c:	9301      	str	r3, [sp, #4]
 801940e:	2301      	movs	r3, #1
 8019410:	9300      	str	r3, [sp, #0]
 8019412:	4623      	mov	r3, r4
 8019414:	f7ff fb3a 	bl	8018a8c <VerifyCmacB0>
 8019418:	4603      	mov	r3, r0
 801941a:	757b      	strb	r3, [r7, #21]
 801941c:	7d7b      	ldrb	r3, [r7, #21]
 801941e:	2b00      	cmp	r3, #0
 8019420:	d001      	beq.n	8019426 <LoRaMacCryptoUnsecureMessage+0xe2>
 8019422:	7d7b      	ldrb	r3, [r7, #21]
 8019424:	e021      	b.n	801946a <LoRaMacCryptoUnsecureMessage+0x126>
 8019426:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8019428:	f893 3020 	ldrb.w	r3, [r3, #32]
 801942c:	2b00      	cmp	r3, #0
 801942e:	d101      	bne.n	8019434 <LoRaMacCryptoUnsecureMessage+0xf0>
 8019430:	2302      	movs	r3, #2
 8019432:	75fb      	strb	r3, [r7, #23]
 8019434:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8019436:	6a58      	ldr	r0, [r3, #36]	; 0x24
 8019438:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801943a:	f893 3028 	ldrb.w	r3, [r3, #40]	; 0x28
 801943e:	b219      	sxth	r1, r3
 8019440:	7dfa      	ldrb	r2, [r7, #23]
 8019442:	687b      	ldr	r3, [r7, #4]
 8019444:	9301      	str	r3, [sp, #4]
 8019446:	2301      	movs	r3, #1
 8019448:	9300      	str	r3, [sp, #0]
 801944a:	68bb      	ldr	r3, [r7, #8]
 801944c:	f7ff f9de 	bl	801880c <PayloadEncrypt>
 8019450:	4603      	mov	r3, r0
 8019452:	757b      	strb	r3, [r7, #21]
 8019454:	7d7b      	ldrb	r3, [r7, #21]
 8019456:	2b00      	cmp	r3, #0
 8019458:	d001      	beq.n	801945e <LoRaMacCryptoUnsecureMessage+0x11a>
 801945a:	7d7b      	ldrb	r3, [r7, #21]
 801945c:	e005      	b.n	801946a <LoRaMacCryptoUnsecureMessage+0x126>
 801945e:	7bbb      	ldrb	r3, [r7, #14]
 8019460:	6879      	ldr	r1, [r7, #4]
 8019462:	4618      	mov	r0, r3
 8019464:	f7ff fc68 	bl	8018d38 <UpdateFCntDown>
 8019468:	2300      	movs	r3, #0
 801946a:	4618      	mov	r0, r3
 801946c:	371c      	adds	r7, #28
 801946e:	46bd      	mov	sp, r7
 8019470:	bd90      	pop	{r4, r7, pc}
 8019472:	bf00      	nop
 8019474:	20001340 	.word	0x20001340

08019478 <LoRaMacCryptoDeriveMcRootKey>:
 8019478:	b580      	push	{r7, lr}
 801947a:	b086      	sub	sp, #24
 801947c:	af00      	add	r7, sp, #0
 801947e:	4603      	mov	r3, r0
 8019480:	71fb      	strb	r3, [r7, #7]
 8019482:	79fb      	ldrb	r3, [r7, #7]
 8019484:	2b00      	cmp	r3, #0
 8019486:	d001      	beq.n	801948c <LoRaMacCryptoDeriveMcRootKey+0x14>
 8019488:	230b      	movs	r3, #11
 801948a:	e01d      	b.n	80194c8 <LoRaMacCryptoDeriveMcRootKey+0x50>
 801948c:	2300      	movs	r3, #0
 801948e:	60bb      	str	r3, [r7, #8]
 8019490:	f107 030c 	add.w	r3, r7, #12
 8019494:	2200      	movs	r2, #0
 8019496:	601a      	str	r2, [r3, #0]
 8019498:	605a      	str	r2, [r3, #4]
 801949a:	609a      	str	r2, [r3, #8]
 801949c:	4b0c      	ldr	r3, [pc, #48]	; (80194d0 <LoRaMacCryptoDeriveMcRootKey+0x58>)
 801949e:	681b      	ldr	r3, [r3, #0]
 80194a0:	789b      	ldrb	r3, [r3, #2]
 80194a2:	2b01      	cmp	r3, #1
 80194a4:	d101      	bne.n	80194aa <LoRaMacCryptoDeriveMcRootKey+0x32>
 80194a6:	2320      	movs	r3, #32
 80194a8:	723b      	strb	r3, [r7, #8]
 80194aa:	4b09      	ldr	r3, [pc, #36]	; (80194d0 <LoRaMacCryptoDeriveMcRootKey+0x58>)
 80194ac:	6818      	ldr	r0, [r3, #0]
 80194ae:	79fa      	ldrb	r2, [r7, #7]
 80194b0:	f107 0108 	add.w	r1, r7, #8
 80194b4:	2304      	movs	r3, #4
 80194b6:	6800      	ldr	r0, [r0, #0]
 80194b8:	f7f8 fa78 	bl	80119ac <SecureElementDeriveAndStoreKey>
 80194bc:	4603      	mov	r3, r0
 80194be:	2b00      	cmp	r3, #0
 80194c0:	d001      	beq.n	80194c6 <LoRaMacCryptoDeriveMcRootKey+0x4e>
 80194c2:	230f      	movs	r3, #15
 80194c4:	e000      	b.n	80194c8 <LoRaMacCryptoDeriveMcRootKey+0x50>
 80194c6:	2300      	movs	r3, #0
 80194c8:	4618      	mov	r0, r3
 80194ca:	3718      	adds	r7, #24
 80194cc:	46bd      	mov	sp, r7
 80194ce:	bd80      	pop	{r7, pc}
 80194d0:	20001340 	.word	0x20001340

080194d4 <LoRaMacCryptoDeriveMcKEKey>:
 80194d4:	b580      	push	{r7, lr}
 80194d6:	b086      	sub	sp, #24
 80194d8:	af00      	add	r7, sp, #0
 80194da:	4603      	mov	r3, r0
 80194dc:	71fb      	strb	r3, [r7, #7]
 80194de:	79fb      	ldrb	r3, [r7, #7]
 80194e0:	2b04      	cmp	r3, #4
 80194e2:	d001      	beq.n	80194e8 <LoRaMacCryptoDeriveMcKEKey+0x14>
 80194e4:	230b      	movs	r3, #11
 80194e6:	e016      	b.n	8019516 <LoRaMacCryptoDeriveMcKEKey+0x42>
 80194e8:	2300      	movs	r3, #0
 80194ea:	60bb      	str	r3, [r7, #8]
 80194ec:	f107 030c 	add.w	r3, r7, #12
 80194f0:	2200      	movs	r2, #0
 80194f2:	601a      	str	r2, [r3, #0]
 80194f4:	605a      	str	r2, [r3, #4]
 80194f6:	609a      	str	r2, [r3, #8]
 80194f8:	4b09      	ldr	r3, [pc, #36]	; (8019520 <LoRaMacCryptoDeriveMcKEKey+0x4c>)
 80194fa:	6818      	ldr	r0, [r3, #0]
 80194fc:	79fa      	ldrb	r2, [r7, #7]
 80194fe:	f107 0108 	add.w	r1, r7, #8
 8019502:	237f      	movs	r3, #127	; 0x7f
 8019504:	6800      	ldr	r0, [r0, #0]
 8019506:	f7f8 fa51 	bl	80119ac <SecureElementDeriveAndStoreKey>
 801950a:	4603      	mov	r3, r0
 801950c:	2b00      	cmp	r3, #0
 801950e:	d001      	beq.n	8019514 <LoRaMacCryptoDeriveMcKEKey+0x40>
 8019510:	230f      	movs	r3, #15
 8019512:	e000      	b.n	8019516 <LoRaMacCryptoDeriveMcKEKey+0x42>
 8019514:	2300      	movs	r3, #0
 8019516:	4618      	mov	r0, r3
 8019518:	3718      	adds	r7, #24
 801951a:	46bd      	mov	sp, r7
 801951c:	bd80      	pop	{r7, pc}
 801951e:	bf00      	nop
 8019520:	20001340 	.word	0x20001340

08019524 <LoRaMacParserJoinAccept>:
 8019524:	b580      	push	{r7, lr}
 8019526:	b084      	sub	sp, #16
 8019528:	af00      	add	r7, sp, #0
 801952a:	6078      	str	r0, [r7, #4]
 801952c:	687b      	ldr	r3, [r7, #4]
 801952e:	2b00      	cmp	r3, #0
 8019530:	d003      	beq.n	801953a <LoRaMacParserJoinAccept+0x16>
 8019532:	687b      	ldr	r3, [r7, #4]
 8019534:	681b      	ldr	r3, [r3, #0]
 8019536:	2b00      	cmp	r3, #0
 8019538:	d101      	bne.n	801953e <LoRaMacParserJoinAccept+0x1a>
 801953a:	2302      	movs	r3, #2
 801953c:	e0b9      	b.n	80196b2 <LoRaMacParserJoinAccept+0x18e>
 801953e:	2300      	movs	r3, #0
 8019540:	81fb      	strh	r3, [r7, #14]
 8019542:	687b      	ldr	r3, [r7, #4]
 8019544:	681a      	ldr	r2, [r3, #0]
 8019546:	89fb      	ldrh	r3, [r7, #14]
 8019548:	1c59      	adds	r1, r3, #1
 801954a:	81f9      	strh	r1, [r7, #14]
 801954c:	4413      	add	r3, r2
 801954e:	781a      	ldrb	r2, [r3, #0]
 8019550:	687b      	ldr	r3, [r7, #4]
 8019552:	715a      	strb	r2, [r3, #5]
 8019554:	687b      	ldr	r3, [r7, #4]
 8019556:	1d98      	adds	r0, r3, #6
 8019558:	687b      	ldr	r3, [r7, #4]
 801955a:	681a      	ldr	r2, [r3, #0]
 801955c:	89fb      	ldrh	r3, [r7, #14]
 801955e:	4413      	add	r3, r2
 8019560:	2203      	movs	r2, #3
 8019562:	4619      	mov	r1, r3
 8019564:	f004 f861 	bl	801d62a <memcpy1>
 8019568:	89fb      	ldrh	r3, [r7, #14]
 801956a:	3303      	adds	r3, #3
 801956c:	81fb      	strh	r3, [r7, #14]
 801956e:	687b      	ldr	r3, [r7, #4]
 8019570:	f103 0009 	add.w	r0, r3, #9
 8019574:	687b      	ldr	r3, [r7, #4]
 8019576:	681a      	ldr	r2, [r3, #0]
 8019578:	89fb      	ldrh	r3, [r7, #14]
 801957a:	4413      	add	r3, r2
 801957c:	2203      	movs	r2, #3
 801957e:	4619      	mov	r1, r3
 8019580:	f004 f853 	bl	801d62a <memcpy1>
 8019584:	89fb      	ldrh	r3, [r7, #14]
 8019586:	3303      	adds	r3, #3
 8019588:	81fb      	strh	r3, [r7, #14]
 801958a:	687b      	ldr	r3, [r7, #4]
 801958c:	681a      	ldr	r2, [r3, #0]
 801958e:	89fb      	ldrh	r3, [r7, #14]
 8019590:	1c59      	adds	r1, r3, #1
 8019592:	81f9      	strh	r1, [r7, #14]
 8019594:	4413      	add	r3, r2
 8019596:	781b      	ldrb	r3, [r3, #0]
 8019598:	461a      	mov	r2, r3
 801959a:	687b      	ldr	r3, [r7, #4]
 801959c:	60da      	str	r2, [r3, #12]
 801959e:	687b      	ldr	r3, [r7, #4]
 80195a0:	681a      	ldr	r2, [r3, #0]
 80195a2:	89fb      	ldrh	r3, [r7, #14]
 80195a4:	1c59      	adds	r1, r3, #1
 80195a6:	81f9      	strh	r1, [r7, #14]
 80195a8:	4413      	add	r3, r2
 80195aa:	781b      	ldrb	r3, [r3, #0]
 80195ac:	021a      	lsls	r2, r3, #8
 80195ae:	687b      	ldr	r3, [r7, #4]
 80195b0:	68db      	ldr	r3, [r3, #12]
 80195b2:	431a      	orrs	r2, r3
 80195b4:	687b      	ldr	r3, [r7, #4]
 80195b6:	60da      	str	r2, [r3, #12]
 80195b8:	687b      	ldr	r3, [r7, #4]
 80195ba:	681a      	ldr	r2, [r3, #0]
 80195bc:	89fb      	ldrh	r3, [r7, #14]
 80195be:	1c59      	adds	r1, r3, #1
 80195c0:	81f9      	strh	r1, [r7, #14]
 80195c2:	4413      	add	r3, r2
 80195c4:	781b      	ldrb	r3, [r3, #0]
 80195c6:	041a      	lsls	r2, r3, #16
 80195c8:	687b      	ldr	r3, [r7, #4]
 80195ca:	68db      	ldr	r3, [r3, #12]
 80195cc:	431a      	orrs	r2, r3
 80195ce:	687b      	ldr	r3, [r7, #4]
 80195d0:	60da      	str	r2, [r3, #12]
 80195d2:	687b      	ldr	r3, [r7, #4]
 80195d4:	681a      	ldr	r2, [r3, #0]
 80195d6:	89fb      	ldrh	r3, [r7, #14]
 80195d8:	1c59      	adds	r1, r3, #1
 80195da:	81f9      	strh	r1, [r7, #14]
 80195dc:	4413      	add	r3, r2
 80195de:	781b      	ldrb	r3, [r3, #0]
 80195e0:	061a      	lsls	r2, r3, #24
 80195e2:	687b      	ldr	r3, [r7, #4]
 80195e4:	68db      	ldr	r3, [r3, #12]
 80195e6:	431a      	orrs	r2, r3
 80195e8:	687b      	ldr	r3, [r7, #4]
 80195ea:	60da      	str	r2, [r3, #12]
 80195ec:	687b      	ldr	r3, [r7, #4]
 80195ee:	681a      	ldr	r2, [r3, #0]
 80195f0:	89fb      	ldrh	r3, [r7, #14]
 80195f2:	1c59      	adds	r1, r3, #1
 80195f4:	81f9      	strh	r1, [r7, #14]
 80195f6:	4413      	add	r3, r2
 80195f8:	781a      	ldrb	r2, [r3, #0]
 80195fa:	687b      	ldr	r3, [r7, #4]
 80195fc:	741a      	strb	r2, [r3, #16]
 80195fe:	687b      	ldr	r3, [r7, #4]
 8019600:	681a      	ldr	r2, [r3, #0]
 8019602:	89fb      	ldrh	r3, [r7, #14]
 8019604:	1c59      	adds	r1, r3, #1
 8019606:	81f9      	strh	r1, [r7, #14]
 8019608:	4413      	add	r3, r2
 801960a:	781a      	ldrb	r2, [r3, #0]
 801960c:	687b      	ldr	r3, [r7, #4]
 801960e:	745a      	strb	r2, [r3, #17]
 8019610:	687b      	ldr	r3, [r7, #4]
 8019612:	791b      	ldrb	r3, [r3, #4]
 8019614:	1f1a      	subs	r2, r3, #4
 8019616:	89fb      	ldrh	r3, [r7, #14]
 8019618:	1ad3      	subs	r3, r2, r3
 801961a:	2b10      	cmp	r3, #16
 801961c:	d10e      	bne.n	801963c <LoRaMacParserJoinAccept+0x118>
 801961e:	687b      	ldr	r3, [r7, #4]
 8019620:	f103 0012 	add.w	r0, r3, #18
 8019624:	687b      	ldr	r3, [r7, #4]
 8019626:	681a      	ldr	r2, [r3, #0]
 8019628:	89fb      	ldrh	r3, [r7, #14]
 801962a:	4413      	add	r3, r2
 801962c:	2210      	movs	r2, #16
 801962e:	4619      	mov	r1, r3
 8019630:	f003 fffb 	bl	801d62a <memcpy1>
 8019634:	89fb      	ldrh	r3, [r7, #14]
 8019636:	3310      	adds	r3, #16
 8019638:	81fb      	strh	r3, [r7, #14]
 801963a:	e008      	b.n	801964e <LoRaMacParserJoinAccept+0x12a>
 801963c:	687b      	ldr	r3, [r7, #4]
 801963e:	791b      	ldrb	r3, [r3, #4]
 8019640:	1f1a      	subs	r2, r3, #4
 8019642:	89fb      	ldrh	r3, [r7, #14]
 8019644:	1ad3      	subs	r3, r2, r3
 8019646:	2b00      	cmp	r3, #0
 8019648:	dd01      	ble.n	801964e <LoRaMacParserJoinAccept+0x12a>
 801964a:	2301      	movs	r3, #1
 801964c:	e031      	b.n	80196b2 <LoRaMacParserJoinAccept+0x18e>
 801964e:	687b      	ldr	r3, [r7, #4]
 8019650:	681a      	ldr	r2, [r3, #0]
 8019652:	89fb      	ldrh	r3, [r7, #14]
 8019654:	1c59      	adds	r1, r3, #1
 8019656:	81f9      	strh	r1, [r7, #14]
 8019658:	4413      	add	r3, r2
 801965a:	781b      	ldrb	r3, [r3, #0]
 801965c:	461a      	mov	r2, r3
 801965e:	687b      	ldr	r3, [r7, #4]
 8019660:	625a      	str	r2, [r3, #36]	; 0x24
 8019662:	687b      	ldr	r3, [r7, #4]
 8019664:	681a      	ldr	r2, [r3, #0]
 8019666:	89fb      	ldrh	r3, [r7, #14]
 8019668:	1c59      	adds	r1, r3, #1
 801966a:	81f9      	strh	r1, [r7, #14]
 801966c:	4413      	add	r3, r2
 801966e:	781b      	ldrb	r3, [r3, #0]
 8019670:	021a      	lsls	r2, r3, #8
 8019672:	687b      	ldr	r3, [r7, #4]
 8019674:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8019676:	431a      	orrs	r2, r3
 8019678:	687b      	ldr	r3, [r7, #4]
 801967a:	625a      	str	r2, [r3, #36]	; 0x24
 801967c:	687b      	ldr	r3, [r7, #4]
 801967e:	681a      	ldr	r2, [r3, #0]
 8019680:	89fb      	ldrh	r3, [r7, #14]
 8019682:	1c59      	adds	r1, r3, #1
 8019684:	81f9      	strh	r1, [r7, #14]
 8019686:	4413      	add	r3, r2
 8019688:	781b      	ldrb	r3, [r3, #0]
 801968a:	041a      	lsls	r2, r3, #16
 801968c:	687b      	ldr	r3, [r7, #4]
 801968e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8019690:	431a      	orrs	r2, r3
 8019692:	687b      	ldr	r3, [r7, #4]
 8019694:	625a      	str	r2, [r3, #36]	; 0x24
 8019696:	687b      	ldr	r3, [r7, #4]
 8019698:	681a      	ldr	r2, [r3, #0]
 801969a:	89fb      	ldrh	r3, [r7, #14]
 801969c:	1c59      	adds	r1, r3, #1
 801969e:	81f9      	strh	r1, [r7, #14]
 80196a0:	4413      	add	r3, r2
 80196a2:	781b      	ldrb	r3, [r3, #0]
 80196a4:	061a      	lsls	r2, r3, #24
 80196a6:	687b      	ldr	r3, [r7, #4]
 80196a8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80196aa:	431a      	orrs	r2, r3
 80196ac:	687b      	ldr	r3, [r7, #4]
 80196ae:	625a      	str	r2, [r3, #36]	; 0x24
 80196b0:	2300      	movs	r3, #0
 80196b2:	4618      	mov	r0, r3
 80196b4:	3710      	adds	r7, #16
 80196b6:	46bd      	mov	sp, r7
 80196b8:	bd80      	pop	{r7, pc}

080196ba <LoRaMacParserData>:
 80196ba:	b580      	push	{r7, lr}
 80196bc:	b084      	sub	sp, #16
 80196be:	af00      	add	r7, sp, #0
 80196c0:	6078      	str	r0, [r7, #4]
 80196c2:	687b      	ldr	r3, [r7, #4]
 80196c4:	2b00      	cmp	r3, #0
 80196c6:	d003      	beq.n	80196d0 <LoRaMacParserData+0x16>
 80196c8:	687b      	ldr	r3, [r7, #4]
 80196ca:	681b      	ldr	r3, [r3, #0]
 80196cc:	2b00      	cmp	r3, #0
 80196ce:	d101      	bne.n	80196d4 <LoRaMacParserData+0x1a>
 80196d0:	2302      	movs	r3, #2
 80196d2:	e0e2      	b.n	801989a <LoRaMacParserData+0x1e0>
 80196d4:	2300      	movs	r3, #0
 80196d6:	81fb      	strh	r3, [r7, #14]
 80196d8:	687b      	ldr	r3, [r7, #4]
 80196da:	681a      	ldr	r2, [r3, #0]
 80196dc:	89fb      	ldrh	r3, [r7, #14]
 80196de:	1c59      	adds	r1, r3, #1
 80196e0:	81f9      	strh	r1, [r7, #14]
 80196e2:	4413      	add	r3, r2
 80196e4:	781a      	ldrb	r2, [r3, #0]
 80196e6:	687b      	ldr	r3, [r7, #4]
 80196e8:	715a      	strb	r2, [r3, #5]
 80196ea:	687b      	ldr	r3, [r7, #4]
 80196ec:	681a      	ldr	r2, [r3, #0]
 80196ee:	89fb      	ldrh	r3, [r7, #14]
 80196f0:	1c59      	adds	r1, r3, #1
 80196f2:	81f9      	strh	r1, [r7, #14]
 80196f4:	4413      	add	r3, r2
 80196f6:	781b      	ldrb	r3, [r3, #0]
 80196f8:	461a      	mov	r2, r3
 80196fa:	687b      	ldr	r3, [r7, #4]
 80196fc:	609a      	str	r2, [r3, #8]
 80196fe:	687b      	ldr	r3, [r7, #4]
 8019700:	681a      	ldr	r2, [r3, #0]
 8019702:	89fb      	ldrh	r3, [r7, #14]
 8019704:	1c59      	adds	r1, r3, #1
 8019706:	81f9      	strh	r1, [r7, #14]
 8019708:	4413      	add	r3, r2
 801970a:	781b      	ldrb	r3, [r3, #0]
 801970c:	021a      	lsls	r2, r3, #8
 801970e:	687b      	ldr	r3, [r7, #4]
 8019710:	689b      	ldr	r3, [r3, #8]
 8019712:	431a      	orrs	r2, r3
 8019714:	687b      	ldr	r3, [r7, #4]
 8019716:	609a      	str	r2, [r3, #8]
 8019718:	687b      	ldr	r3, [r7, #4]
 801971a:	681a      	ldr	r2, [r3, #0]
 801971c:	89fb      	ldrh	r3, [r7, #14]
 801971e:	1c59      	adds	r1, r3, #1
 8019720:	81f9      	strh	r1, [r7, #14]
 8019722:	4413      	add	r3, r2
 8019724:	781b      	ldrb	r3, [r3, #0]
 8019726:	041a      	lsls	r2, r3, #16
 8019728:	687b      	ldr	r3, [r7, #4]
 801972a:	689b      	ldr	r3, [r3, #8]
 801972c:	431a      	orrs	r2, r3
 801972e:	687b      	ldr	r3, [r7, #4]
 8019730:	609a      	str	r2, [r3, #8]
 8019732:	687b      	ldr	r3, [r7, #4]
 8019734:	681a      	ldr	r2, [r3, #0]
 8019736:	89fb      	ldrh	r3, [r7, #14]
 8019738:	1c59      	adds	r1, r3, #1
 801973a:	81f9      	strh	r1, [r7, #14]
 801973c:	4413      	add	r3, r2
 801973e:	781b      	ldrb	r3, [r3, #0]
 8019740:	061a      	lsls	r2, r3, #24
 8019742:	687b      	ldr	r3, [r7, #4]
 8019744:	689b      	ldr	r3, [r3, #8]
 8019746:	431a      	orrs	r2, r3
 8019748:	687b      	ldr	r3, [r7, #4]
 801974a:	609a      	str	r2, [r3, #8]
 801974c:	687b      	ldr	r3, [r7, #4]
 801974e:	681a      	ldr	r2, [r3, #0]
 8019750:	89fb      	ldrh	r3, [r7, #14]
 8019752:	1c59      	adds	r1, r3, #1
 8019754:	81f9      	strh	r1, [r7, #14]
 8019756:	4413      	add	r3, r2
 8019758:	781a      	ldrb	r2, [r3, #0]
 801975a:	687b      	ldr	r3, [r7, #4]
 801975c:	731a      	strb	r2, [r3, #12]
 801975e:	687b      	ldr	r3, [r7, #4]
 8019760:	681a      	ldr	r2, [r3, #0]
 8019762:	89fb      	ldrh	r3, [r7, #14]
 8019764:	1c59      	adds	r1, r3, #1
 8019766:	81f9      	strh	r1, [r7, #14]
 8019768:	4413      	add	r3, r2
 801976a:	781b      	ldrb	r3, [r3, #0]
 801976c:	b29a      	uxth	r2, r3
 801976e:	687b      	ldr	r3, [r7, #4]
 8019770:	81da      	strh	r2, [r3, #14]
 8019772:	687b      	ldr	r3, [r7, #4]
 8019774:	681a      	ldr	r2, [r3, #0]
 8019776:	89fb      	ldrh	r3, [r7, #14]
 8019778:	1c59      	adds	r1, r3, #1
 801977a:	81f9      	strh	r1, [r7, #14]
 801977c:	4413      	add	r3, r2
 801977e:	781b      	ldrb	r3, [r3, #0]
 8019780:	0219      	lsls	r1, r3, #8
 8019782:	687b      	ldr	r3, [r7, #4]
 8019784:	89db      	ldrh	r3, [r3, #14]
 8019786:	b21a      	sxth	r2, r3
 8019788:	b20b      	sxth	r3, r1
 801978a:	4313      	orrs	r3, r2
 801978c:	b21b      	sxth	r3, r3
 801978e:	b29a      	uxth	r2, r3
 8019790:	687b      	ldr	r3, [r7, #4]
 8019792:	81da      	strh	r2, [r3, #14]
 8019794:	687b      	ldr	r3, [r7, #4]
 8019796:	f103 0010 	add.w	r0, r3, #16
 801979a:	687b      	ldr	r3, [r7, #4]
 801979c:	681a      	ldr	r2, [r3, #0]
 801979e:	89fb      	ldrh	r3, [r7, #14]
 80197a0:	18d1      	adds	r1, r2, r3
 80197a2:	687b      	ldr	r3, [r7, #4]
 80197a4:	7b1b      	ldrb	r3, [r3, #12]
 80197a6:	f3c3 0303 	ubfx	r3, r3, #0, #4
 80197aa:	b2db      	uxtb	r3, r3
 80197ac:	b29b      	uxth	r3, r3
 80197ae:	461a      	mov	r2, r3
 80197b0:	f003 ff3b 	bl	801d62a <memcpy1>
 80197b4:	687b      	ldr	r3, [r7, #4]
 80197b6:	7b1b      	ldrb	r3, [r3, #12]
 80197b8:	f3c3 0303 	ubfx	r3, r3, #0, #4
 80197bc:	b2db      	uxtb	r3, r3
 80197be:	b29a      	uxth	r2, r3
 80197c0:	89fb      	ldrh	r3, [r7, #14]
 80197c2:	4413      	add	r3, r2
 80197c4:	81fb      	strh	r3, [r7, #14]
 80197c6:	687b      	ldr	r3, [r7, #4]
 80197c8:	2200      	movs	r2, #0
 80197ca:	f883 2020 	strb.w	r2, [r3, #32]
 80197ce:	687b      	ldr	r3, [r7, #4]
 80197d0:	2200      	movs	r2, #0
 80197d2:	f883 2028 	strb.w	r2, [r3, #40]	; 0x28
 80197d6:	687b      	ldr	r3, [r7, #4]
 80197d8:	791b      	ldrb	r3, [r3, #4]
 80197da:	461a      	mov	r2, r3
 80197dc:	89fb      	ldrh	r3, [r7, #14]
 80197de:	1ad3      	subs	r3, r2, r3
 80197e0:	2b04      	cmp	r3, #4
 80197e2:	dd28      	ble.n	8019836 <LoRaMacParserData+0x17c>
 80197e4:	687b      	ldr	r3, [r7, #4]
 80197e6:	681a      	ldr	r2, [r3, #0]
 80197e8:	89fb      	ldrh	r3, [r7, #14]
 80197ea:	1c59      	adds	r1, r3, #1
 80197ec:	81f9      	strh	r1, [r7, #14]
 80197ee:	4413      	add	r3, r2
 80197f0:	781a      	ldrb	r2, [r3, #0]
 80197f2:	687b      	ldr	r3, [r7, #4]
 80197f4:	f883 2020 	strb.w	r2, [r3, #32]
 80197f8:	687b      	ldr	r3, [r7, #4]
 80197fa:	791a      	ldrb	r2, [r3, #4]
 80197fc:	89fb      	ldrh	r3, [r7, #14]
 80197fe:	b2db      	uxtb	r3, r3
 8019800:	1ad3      	subs	r3, r2, r3
 8019802:	b2db      	uxtb	r3, r3
 8019804:	3b04      	subs	r3, #4
 8019806:	b2da      	uxtb	r2, r3
 8019808:	687b      	ldr	r3, [r7, #4]
 801980a:	f883 2028 	strb.w	r2, [r3, #40]	; 0x28
 801980e:	687b      	ldr	r3, [r7, #4]
 8019810:	6a58      	ldr	r0, [r3, #36]	; 0x24
 8019812:	687b      	ldr	r3, [r7, #4]
 8019814:	681a      	ldr	r2, [r3, #0]
 8019816:	89fb      	ldrh	r3, [r7, #14]
 8019818:	18d1      	adds	r1, r2, r3
 801981a:	687b      	ldr	r3, [r7, #4]
 801981c:	f893 3028 	ldrb.w	r3, [r3, #40]	; 0x28
 8019820:	b29b      	uxth	r3, r3
 8019822:	461a      	mov	r2, r3
 8019824:	f003 ff01 	bl	801d62a <memcpy1>
 8019828:	687b      	ldr	r3, [r7, #4]
 801982a:	f893 3028 	ldrb.w	r3, [r3, #40]	; 0x28
 801982e:	b29a      	uxth	r2, r3
 8019830:	89fb      	ldrh	r3, [r7, #14]
 8019832:	4413      	add	r3, r2
 8019834:	81fb      	strh	r3, [r7, #14]
 8019836:	687b      	ldr	r3, [r7, #4]
 8019838:	681a      	ldr	r2, [r3, #0]
 801983a:	687b      	ldr	r3, [r7, #4]
 801983c:	791b      	ldrb	r3, [r3, #4]
 801983e:	3b04      	subs	r3, #4
 8019840:	4413      	add	r3, r2
 8019842:	781b      	ldrb	r3, [r3, #0]
 8019844:	461a      	mov	r2, r3
 8019846:	687b      	ldr	r3, [r7, #4]
 8019848:	62da      	str	r2, [r3, #44]	; 0x2c
 801984a:	687b      	ldr	r3, [r7, #4]
 801984c:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 801984e:	687b      	ldr	r3, [r7, #4]
 8019850:	6819      	ldr	r1, [r3, #0]
 8019852:	687b      	ldr	r3, [r7, #4]
 8019854:	791b      	ldrb	r3, [r3, #4]
 8019856:	3b03      	subs	r3, #3
 8019858:	440b      	add	r3, r1
 801985a:	781b      	ldrb	r3, [r3, #0]
 801985c:	021b      	lsls	r3, r3, #8
 801985e:	431a      	orrs	r2, r3
 8019860:	687b      	ldr	r3, [r7, #4]
 8019862:	62da      	str	r2, [r3, #44]	; 0x2c
 8019864:	687b      	ldr	r3, [r7, #4]
 8019866:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8019868:	687b      	ldr	r3, [r7, #4]
 801986a:	6819      	ldr	r1, [r3, #0]
 801986c:	687b      	ldr	r3, [r7, #4]
 801986e:	791b      	ldrb	r3, [r3, #4]
 8019870:	3b02      	subs	r3, #2
 8019872:	440b      	add	r3, r1
 8019874:	781b      	ldrb	r3, [r3, #0]
 8019876:	041b      	lsls	r3, r3, #16
 8019878:	431a      	orrs	r2, r3
 801987a:	687b      	ldr	r3, [r7, #4]
 801987c:	62da      	str	r2, [r3, #44]	; 0x2c
 801987e:	687b      	ldr	r3, [r7, #4]
 8019880:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8019882:	687b      	ldr	r3, [r7, #4]
 8019884:	6819      	ldr	r1, [r3, #0]
 8019886:	687b      	ldr	r3, [r7, #4]
 8019888:	791b      	ldrb	r3, [r3, #4]
 801988a:	3b01      	subs	r3, #1
 801988c:	440b      	add	r3, r1
 801988e:	781b      	ldrb	r3, [r3, #0]
 8019890:	061b      	lsls	r3, r3, #24
 8019892:	431a      	orrs	r2, r3
 8019894:	687b      	ldr	r3, [r7, #4]
 8019896:	62da      	str	r2, [r3, #44]	; 0x2c
 8019898:	2300      	movs	r3, #0
 801989a:	4618      	mov	r0, r3
 801989c:	3710      	adds	r7, #16
 801989e:	46bd      	mov	sp, r7
 80198a0:	bd80      	pop	{r7, pc}

080198a2 <LoRaMacSerializerJoinRequest>:
 80198a2:	b580      	push	{r7, lr}
 80198a4:	b084      	sub	sp, #16
 80198a6:	af00      	add	r7, sp, #0
 80198a8:	6078      	str	r0, [r7, #4]
 80198aa:	687b      	ldr	r3, [r7, #4]
 80198ac:	2b00      	cmp	r3, #0
 80198ae:	d003      	beq.n	80198b8 <LoRaMacSerializerJoinRequest+0x16>
 80198b0:	687b      	ldr	r3, [r7, #4]
 80198b2:	681b      	ldr	r3, [r3, #0]
 80198b4:	2b00      	cmp	r3, #0
 80198b6:	d101      	bne.n	80198bc <LoRaMacSerializerJoinRequest+0x1a>
 80198b8:	2301      	movs	r3, #1
 80198ba:	e070      	b.n	801999e <LoRaMacSerializerJoinRequest+0xfc>
 80198bc:	2300      	movs	r3, #0
 80198be:	81fb      	strh	r3, [r7, #14]
 80198c0:	687b      	ldr	r3, [r7, #4]
 80198c2:	791b      	ldrb	r3, [r3, #4]
 80198c4:	2b16      	cmp	r3, #22
 80198c6:	d801      	bhi.n	80198cc <LoRaMacSerializerJoinRequest+0x2a>
 80198c8:	2302      	movs	r3, #2
 80198ca:	e068      	b.n	801999e <LoRaMacSerializerJoinRequest+0xfc>
 80198cc:	687b      	ldr	r3, [r7, #4]
 80198ce:	681a      	ldr	r2, [r3, #0]
 80198d0:	89fb      	ldrh	r3, [r7, #14]
 80198d2:	1c59      	adds	r1, r3, #1
 80198d4:	81f9      	strh	r1, [r7, #14]
 80198d6:	4413      	add	r3, r2
 80198d8:	687a      	ldr	r2, [r7, #4]
 80198da:	7952      	ldrb	r2, [r2, #5]
 80198dc:	701a      	strb	r2, [r3, #0]
 80198de:	687b      	ldr	r3, [r7, #4]
 80198e0:	681a      	ldr	r2, [r3, #0]
 80198e2:	89fb      	ldrh	r3, [r7, #14]
 80198e4:	18d0      	adds	r0, r2, r3
 80198e6:	687b      	ldr	r3, [r7, #4]
 80198e8:	3306      	adds	r3, #6
 80198ea:	2208      	movs	r2, #8
 80198ec:	4619      	mov	r1, r3
 80198ee:	f003 feb7 	bl	801d660 <memcpyr>
 80198f2:	89fb      	ldrh	r3, [r7, #14]
 80198f4:	3308      	adds	r3, #8
 80198f6:	81fb      	strh	r3, [r7, #14]
 80198f8:	687b      	ldr	r3, [r7, #4]
 80198fa:	681a      	ldr	r2, [r3, #0]
 80198fc:	89fb      	ldrh	r3, [r7, #14]
 80198fe:	18d0      	adds	r0, r2, r3
 8019900:	687b      	ldr	r3, [r7, #4]
 8019902:	330e      	adds	r3, #14
 8019904:	2208      	movs	r2, #8
 8019906:	4619      	mov	r1, r3
 8019908:	f003 feaa 	bl	801d660 <memcpyr>
 801990c:	89fb      	ldrh	r3, [r7, #14]
 801990e:	3308      	adds	r3, #8
 8019910:	81fb      	strh	r3, [r7, #14]
 8019912:	687b      	ldr	r3, [r7, #4]
 8019914:	8ad9      	ldrh	r1, [r3, #22]
 8019916:	687b      	ldr	r3, [r7, #4]
 8019918:	681a      	ldr	r2, [r3, #0]
 801991a:	89fb      	ldrh	r3, [r7, #14]
 801991c:	1c58      	adds	r0, r3, #1
 801991e:	81f8      	strh	r0, [r7, #14]
 8019920:	4413      	add	r3, r2
 8019922:	b2ca      	uxtb	r2, r1
 8019924:	701a      	strb	r2, [r3, #0]
 8019926:	687b      	ldr	r3, [r7, #4]
 8019928:	8adb      	ldrh	r3, [r3, #22]
 801992a:	0a1b      	lsrs	r3, r3, #8
 801992c:	b299      	uxth	r1, r3
 801992e:	687b      	ldr	r3, [r7, #4]
 8019930:	681a      	ldr	r2, [r3, #0]
 8019932:	89fb      	ldrh	r3, [r7, #14]
 8019934:	1c58      	adds	r0, r3, #1
 8019936:	81f8      	strh	r0, [r7, #14]
 8019938:	4413      	add	r3, r2
 801993a:	b2ca      	uxtb	r2, r1
 801993c:	701a      	strb	r2, [r3, #0]
 801993e:	687b      	ldr	r3, [r7, #4]
 8019940:	6999      	ldr	r1, [r3, #24]
 8019942:	687b      	ldr	r3, [r7, #4]
 8019944:	681a      	ldr	r2, [r3, #0]
 8019946:	89fb      	ldrh	r3, [r7, #14]
 8019948:	1c58      	adds	r0, r3, #1
 801994a:	81f8      	strh	r0, [r7, #14]
 801994c:	4413      	add	r3, r2
 801994e:	b2ca      	uxtb	r2, r1
 8019950:	701a      	strb	r2, [r3, #0]
 8019952:	687b      	ldr	r3, [r7, #4]
 8019954:	699b      	ldr	r3, [r3, #24]
 8019956:	0a19      	lsrs	r1, r3, #8
 8019958:	687b      	ldr	r3, [r7, #4]
 801995a:	681a      	ldr	r2, [r3, #0]
 801995c:	89fb      	ldrh	r3, [r7, #14]
 801995e:	1c58      	adds	r0, r3, #1
 8019960:	81f8      	strh	r0, [r7, #14]
 8019962:	4413      	add	r3, r2
 8019964:	b2ca      	uxtb	r2, r1
 8019966:	701a      	strb	r2, [r3, #0]
 8019968:	687b      	ldr	r3, [r7, #4]
 801996a:	699b      	ldr	r3, [r3, #24]
 801996c:	0c19      	lsrs	r1, r3, #16
 801996e:	687b      	ldr	r3, [r7, #4]
 8019970:	681a      	ldr	r2, [r3, #0]
 8019972:	89fb      	ldrh	r3, [r7, #14]
 8019974:	1c58      	adds	r0, r3, #1
 8019976:	81f8      	strh	r0, [r7, #14]
 8019978:	4413      	add	r3, r2
 801997a:	b2ca      	uxtb	r2, r1
 801997c:	701a      	strb	r2, [r3, #0]
 801997e:	687b      	ldr	r3, [r7, #4]
 8019980:	699b      	ldr	r3, [r3, #24]
 8019982:	0e19      	lsrs	r1, r3, #24
 8019984:	687b      	ldr	r3, [r7, #4]
 8019986:	681a      	ldr	r2, [r3, #0]
 8019988:	89fb      	ldrh	r3, [r7, #14]
 801998a:	1c58      	adds	r0, r3, #1
 801998c:	81f8      	strh	r0, [r7, #14]
 801998e:	4413      	add	r3, r2
 8019990:	b2ca      	uxtb	r2, r1
 8019992:	701a      	strb	r2, [r3, #0]
 8019994:	89fb      	ldrh	r3, [r7, #14]
 8019996:	b2da      	uxtb	r2, r3
 8019998:	687b      	ldr	r3, [r7, #4]
 801999a:	711a      	strb	r2, [r3, #4]
 801999c:	2300      	movs	r3, #0
 801999e:	4618      	mov	r0, r3
 80199a0:	3710      	adds	r7, #16
 80199a2:	46bd      	mov	sp, r7
 80199a4:	bd80      	pop	{r7, pc}

080199a6 <LoRaMacSerializerData>:
 80199a6:	b580      	push	{r7, lr}
 80199a8:	b084      	sub	sp, #16
 80199aa:	af00      	add	r7, sp, #0
 80199ac:	6078      	str	r0, [r7, #4]
 80199ae:	687b      	ldr	r3, [r7, #4]
 80199b0:	2b00      	cmp	r3, #0
 80199b2:	d003      	beq.n	80199bc <LoRaMacSerializerData+0x16>
 80199b4:	687b      	ldr	r3, [r7, #4]
 80199b6:	681b      	ldr	r3, [r3, #0]
 80199b8:	2b00      	cmp	r3, #0
 80199ba:	d101      	bne.n	80199c0 <LoRaMacSerializerData+0x1a>
 80199bc:	2301      	movs	r3, #1
 80199be:	e0e5      	b.n	8019b8c <LoRaMacSerializerData+0x1e6>
 80199c0:	2300      	movs	r3, #0
 80199c2:	81fb      	strh	r3, [r7, #14]
 80199c4:	2308      	movs	r3, #8
 80199c6:	81bb      	strh	r3, [r7, #12]
 80199c8:	687b      	ldr	r3, [r7, #4]
 80199ca:	7b1b      	ldrb	r3, [r3, #12]
 80199cc:	f3c3 0303 	ubfx	r3, r3, #0, #4
 80199d0:	b2db      	uxtb	r3, r3
 80199d2:	b29a      	uxth	r2, r3
 80199d4:	89bb      	ldrh	r3, [r7, #12]
 80199d6:	4413      	add	r3, r2
 80199d8:	81bb      	strh	r3, [r7, #12]
 80199da:	687b      	ldr	r3, [r7, #4]
 80199dc:	f893 3028 	ldrb.w	r3, [r3, #40]	; 0x28
 80199e0:	2b00      	cmp	r3, #0
 80199e2:	d002      	beq.n	80199ea <LoRaMacSerializerData+0x44>
 80199e4:	89bb      	ldrh	r3, [r7, #12]
 80199e6:	3301      	adds	r3, #1
 80199e8:	81bb      	strh	r3, [r7, #12]
 80199ea:	687b      	ldr	r3, [r7, #4]
 80199ec:	f893 3028 	ldrb.w	r3, [r3, #40]	; 0x28
 80199f0:	b29a      	uxth	r2, r3
 80199f2:	89bb      	ldrh	r3, [r7, #12]
 80199f4:	4413      	add	r3, r2
 80199f6:	81bb      	strh	r3, [r7, #12]
 80199f8:	89bb      	ldrh	r3, [r7, #12]
 80199fa:	3304      	adds	r3, #4
 80199fc:	81bb      	strh	r3, [r7, #12]
 80199fe:	687b      	ldr	r3, [r7, #4]
 8019a00:	791b      	ldrb	r3, [r3, #4]
 8019a02:	b29b      	uxth	r3, r3
 8019a04:	89ba      	ldrh	r2, [r7, #12]
 8019a06:	429a      	cmp	r2, r3
 8019a08:	d901      	bls.n	8019a0e <LoRaMacSerializerData+0x68>
 8019a0a:	2302      	movs	r3, #2
 8019a0c:	e0be      	b.n	8019b8c <LoRaMacSerializerData+0x1e6>
 8019a0e:	687b      	ldr	r3, [r7, #4]
 8019a10:	681a      	ldr	r2, [r3, #0]
 8019a12:	89fb      	ldrh	r3, [r7, #14]
 8019a14:	1c59      	adds	r1, r3, #1
 8019a16:	81f9      	strh	r1, [r7, #14]
 8019a18:	4413      	add	r3, r2
 8019a1a:	687a      	ldr	r2, [r7, #4]
 8019a1c:	7952      	ldrb	r2, [r2, #5]
 8019a1e:	701a      	strb	r2, [r3, #0]
 8019a20:	687b      	ldr	r3, [r7, #4]
 8019a22:	6899      	ldr	r1, [r3, #8]
 8019a24:	687b      	ldr	r3, [r7, #4]
 8019a26:	681a      	ldr	r2, [r3, #0]
 8019a28:	89fb      	ldrh	r3, [r7, #14]
 8019a2a:	1c58      	adds	r0, r3, #1
 8019a2c:	81f8      	strh	r0, [r7, #14]
 8019a2e:	4413      	add	r3, r2
 8019a30:	b2ca      	uxtb	r2, r1
 8019a32:	701a      	strb	r2, [r3, #0]
 8019a34:	687b      	ldr	r3, [r7, #4]
 8019a36:	689b      	ldr	r3, [r3, #8]
 8019a38:	0a19      	lsrs	r1, r3, #8
 8019a3a:	687b      	ldr	r3, [r7, #4]
 8019a3c:	681a      	ldr	r2, [r3, #0]
 8019a3e:	89fb      	ldrh	r3, [r7, #14]
 8019a40:	1c58      	adds	r0, r3, #1
 8019a42:	81f8      	strh	r0, [r7, #14]
 8019a44:	4413      	add	r3, r2
 8019a46:	b2ca      	uxtb	r2, r1
 8019a48:	701a      	strb	r2, [r3, #0]
 8019a4a:	687b      	ldr	r3, [r7, #4]
 8019a4c:	689b      	ldr	r3, [r3, #8]
 8019a4e:	0c19      	lsrs	r1, r3, #16
 8019a50:	687b      	ldr	r3, [r7, #4]
 8019a52:	681a      	ldr	r2, [r3, #0]
 8019a54:	89fb      	ldrh	r3, [r7, #14]
 8019a56:	1c58      	adds	r0, r3, #1
 8019a58:	81f8      	strh	r0, [r7, #14]
 8019a5a:	4413      	add	r3, r2
 8019a5c:	b2ca      	uxtb	r2, r1
 8019a5e:	701a      	strb	r2, [r3, #0]
 8019a60:	687b      	ldr	r3, [r7, #4]
 8019a62:	689b      	ldr	r3, [r3, #8]
 8019a64:	0e19      	lsrs	r1, r3, #24
 8019a66:	687b      	ldr	r3, [r7, #4]
 8019a68:	681a      	ldr	r2, [r3, #0]
 8019a6a:	89fb      	ldrh	r3, [r7, #14]
 8019a6c:	1c58      	adds	r0, r3, #1
 8019a6e:	81f8      	strh	r0, [r7, #14]
 8019a70:	4413      	add	r3, r2
 8019a72:	b2ca      	uxtb	r2, r1
 8019a74:	701a      	strb	r2, [r3, #0]
 8019a76:	687b      	ldr	r3, [r7, #4]
 8019a78:	681a      	ldr	r2, [r3, #0]
 8019a7a:	89fb      	ldrh	r3, [r7, #14]
 8019a7c:	1c59      	adds	r1, r3, #1
 8019a7e:	81f9      	strh	r1, [r7, #14]
 8019a80:	4413      	add	r3, r2
 8019a82:	687a      	ldr	r2, [r7, #4]
 8019a84:	7b12      	ldrb	r2, [r2, #12]
 8019a86:	701a      	strb	r2, [r3, #0]
 8019a88:	687b      	ldr	r3, [r7, #4]
 8019a8a:	89d9      	ldrh	r1, [r3, #14]
 8019a8c:	687b      	ldr	r3, [r7, #4]
 8019a8e:	681a      	ldr	r2, [r3, #0]
 8019a90:	89fb      	ldrh	r3, [r7, #14]
 8019a92:	1c58      	adds	r0, r3, #1
 8019a94:	81f8      	strh	r0, [r7, #14]
 8019a96:	4413      	add	r3, r2
 8019a98:	b2ca      	uxtb	r2, r1
 8019a9a:	701a      	strb	r2, [r3, #0]
 8019a9c:	687b      	ldr	r3, [r7, #4]
 8019a9e:	89db      	ldrh	r3, [r3, #14]
 8019aa0:	0a1b      	lsrs	r3, r3, #8
 8019aa2:	b299      	uxth	r1, r3
 8019aa4:	687b      	ldr	r3, [r7, #4]
 8019aa6:	681a      	ldr	r2, [r3, #0]
 8019aa8:	89fb      	ldrh	r3, [r7, #14]
 8019aaa:	1c58      	adds	r0, r3, #1
 8019aac:	81f8      	strh	r0, [r7, #14]
 8019aae:	4413      	add	r3, r2
 8019ab0:	b2ca      	uxtb	r2, r1
 8019ab2:	701a      	strb	r2, [r3, #0]
 8019ab4:	687b      	ldr	r3, [r7, #4]
 8019ab6:	681a      	ldr	r2, [r3, #0]
 8019ab8:	89fb      	ldrh	r3, [r7, #14]
 8019aba:	18d0      	adds	r0, r2, r3
 8019abc:	687b      	ldr	r3, [r7, #4]
 8019abe:	f103 0110 	add.w	r1, r3, #16
 8019ac2:	687b      	ldr	r3, [r7, #4]
 8019ac4:	7b1b      	ldrb	r3, [r3, #12]
 8019ac6:	f3c3 0303 	ubfx	r3, r3, #0, #4
 8019aca:	b2db      	uxtb	r3, r3
 8019acc:	b29b      	uxth	r3, r3
 8019ace:	461a      	mov	r2, r3
 8019ad0:	f003 fdab 	bl	801d62a <memcpy1>
 8019ad4:	687b      	ldr	r3, [r7, #4]
 8019ad6:	7b1b      	ldrb	r3, [r3, #12]
 8019ad8:	f3c3 0303 	ubfx	r3, r3, #0, #4
 8019adc:	b2db      	uxtb	r3, r3
 8019ade:	b29a      	uxth	r2, r3
 8019ae0:	89fb      	ldrh	r3, [r7, #14]
 8019ae2:	4413      	add	r3, r2
 8019ae4:	81fb      	strh	r3, [r7, #14]
 8019ae6:	687b      	ldr	r3, [r7, #4]
 8019ae8:	f893 3028 	ldrb.w	r3, [r3, #40]	; 0x28
 8019aec:	2b00      	cmp	r3, #0
 8019aee:	d009      	beq.n	8019b04 <LoRaMacSerializerData+0x15e>
 8019af0:	687b      	ldr	r3, [r7, #4]
 8019af2:	681a      	ldr	r2, [r3, #0]
 8019af4:	89fb      	ldrh	r3, [r7, #14]
 8019af6:	1c59      	adds	r1, r3, #1
 8019af8:	81f9      	strh	r1, [r7, #14]
 8019afa:	4413      	add	r3, r2
 8019afc:	687a      	ldr	r2, [r7, #4]
 8019afe:	f892 2020 	ldrb.w	r2, [r2, #32]
 8019b02:	701a      	strb	r2, [r3, #0]
 8019b04:	687b      	ldr	r3, [r7, #4]
 8019b06:	681a      	ldr	r2, [r3, #0]
 8019b08:	89fb      	ldrh	r3, [r7, #14]
 8019b0a:	18d0      	adds	r0, r2, r3
 8019b0c:	687b      	ldr	r3, [r7, #4]
 8019b0e:	6a59      	ldr	r1, [r3, #36]	; 0x24
 8019b10:	687b      	ldr	r3, [r7, #4]
 8019b12:	f893 3028 	ldrb.w	r3, [r3, #40]	; 0x28
 8019b16:	b29b      	uxth	r3, r3
 8019b18:	461a      	mov	r2, r3
 8019b1a:	f003 fd86 	bl	801d62a <memcpy1>
 8019b1e:	687b      	ldr	r3, [r7, #4]
 8019b20:	f893 3028 	ldrb.w	r3, [r3, #40]	; 0x28
 8019b24:	b29a      	uxth	r2, r3
 8019b26:	89fb      	ldrh	r3, [r7, #14]
 8019b28:	4413      	add	r3, r2
 8019b2a:	81fb      	strh	r3, [r7, #14]
 8019b2c:	687b      	ldr	r3, [r7, #4]
 8019b2e:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 8019b30:	687b      	ldr	r3, [r7, #4]
 8019b32:	681a      	ldr	r2, [r3, #0]
 8019b34:	89fb      	ldrh	r3, [r7, #14]
 8019b36:	1c58      	adds	r0, r3, #1
 8019b38:	81f8      	strh	r0, [r7, #14]
 8019b3a:	4413      	add	r3, r2
 8019b3c:	b2ca      	uxtb	r2, r1
 8019b3e:	701a      	strb	r2, [r3, #0]
 8019b40:	687b      	ldr	r3, [r7, #4]
 8019b42:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8019b44:	0a19      	lsrs	r1, r3, #8
 8019b46:	687b      	ldr	r3, [r7, #4]
 8019b48:	681a      	ldr	r2, [r3, #0]
 8019b4a:	89fb      	ldrh	r3, [r7, #14]
 8019b4c:	1c58      	adds	r0, r3, #1
 8019b4e:	81f8      	strh	r0, [r7, #14]
 8019b50:	4413      	add	r3, r2
 8019b52:	b2ca      	uxtb	r2, r1
 8019b54:	701a      	strb	r2, [r3, #0]
 8019b56:	687b      	ldr	r3, [r7, #4]
 8019b58:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8019b5a:	0c19      	lsrs	r1, r3, #16
 8019b5c:	687b      	ldr	r3, [r7, #4]
 8019b5e:	681a      	ldr	r2, [r3, #0]
 8019b60:	89fb      	ldrh	r3, [r7, #14]
 8019b62:	1c58      	adds	r0, r3, #1
 8019b64:	81f8      	strh	r0, [r7, #14]
 8019b66:	4413      	add	r3, r2
 8019b68:	b2ca      	uxtb	r2, r1
 8019b6a:	701a      	strb	r2, [r3, #0]
 8019b6c:	687b      	ldr	r3, [r7, #4]
 8019b6e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8019b70:	0e19      	lsrs	r1, r3, #24
 8019b72:	687b      	ldr	r3, [r7, #4]
 8019b74:	681a      	ldr	r2, [r3, #0]
 8019b76:	89fb      	ldrh	r3, [r7, #14]
 8019b78:	1c58      	adds	r0, r3, #1
 8019b7a:	81f8      	strh	r0, [r7, #14]
 8019b7c:	4413      	add	r3, r2
 8019b7e:	b2ca      	uxtb	r2, r1
 8019b80:	701a      	strb	r2, [r3, #0]
 8019b82:	89fb      	ldrh	r3, [r7, #14]
 8019b84:	b2da      	uxtb	r2, r3
 8019b86:	687b      	ldr	r3, [r7, #4]
 8019b88:	711a      	strb	r2, [r3, #4]
 8019b8a:	2300      	movs	r3, #0
 8019b8c:	4618      	mov	r0, r3
 8019b8e:	3710      	adds	r7, #16
 8019b90:	46bd      	mov	sp, r7
 8019b92:	bd80      	pop	{r7, pc}

08019b94 <RegionIsActive>:
 8019b94:	b480      	push	{r7}
 8019b96:	b083      	sub	sp, #12
 8019b98:	af00      	add	r7, sp, #0
 8019b9a:	4603      	mov	r3, r0
 8019b9c:	71fb      	strb	r3, [r7, #7]
 8019b9e:	79fb      	ldrb	r3, [r7, #7]
 8019ba0:	2b05      	cmp	r3, #5
 8019ba2:	d002      	beq.n	8019baa <RegionIsActive+0x16>
 8019ba4:	2b08      	cmp	r3, #8
 8019ba6:	d002      	beq.n	8019bae <RegionIsActive+0x1a>
 8019ba8:	e003      	b.n	8019bb2 <RegionIsActive+0x1e>
 8019baa:	2301      	movs	r3, #1
 8019bac:	e002      	b.n	8019bb4 <RegionIsActive+0x20>
 8019bae:	2301      	movs	r3, #1
 8019bb0:	e000      	b.n	8019bb4 <RegionIsActive+0x20>
 8019bb2:	2300      	movs	r3, #0
 8019bb4:	4618      	mov	r0, r3
 8019bb6:	370c      	adds	r7, #12
 8019bb8:	46bd      	mov	sp, r7
 8019bba:	bc80      	pop	{r7}
 8019bbc:	4770      	bx	lr

08019bbe <RegionGetPhyParam>:
 8019bbe:	b580      	push	{r7, lr}
 8019bc0:	b084      	sub	sp, #16
 8019bc2:	af00      	add	r7, sp, #0
 8019bc4:	4603      	mov	r3, r0
 8019bc6:	6039      	str	r1, [r7, #0]
 8019bc8:	71fb      	strb	r3, [r7, #7]
 8019bca:	2300      	movs	r3, #0
 8019bcc:	60bb      	str	r3, [r7, #8]
 8019bce:	79fb      	ldrb	r3, [r7, #7]
 8019bd0:	2b05      	cmp	r3, #5
 8019bd2:	d002      	beq.n	8019bda <RegionGetPhyParam+0x1c>
 8019bd4:	2b08      	cmp	r3, #8
 8019bd6:	d006      	beq.n	8019be6 <RegionGetPhyParam+0x28>
 8019bd8:	e00b      	b.n	8019bf2 <RegionGetPhyParam+0x34>
 8019bda:	6838      	ldr	r0, [r7, #0]
 8019bdc:	f001 f916 	bl	801ae0c <RegionEU868GetPhyParam>
 8019be0:	4603      	mov	r3, r0
 8019be2:	60fb      	str	r3, [r7, #12]
 8019be4:	e007      	b.n	8019bf6 <RegionGetPhyParam+0x38>
 8019be6:	6838      	ldr	r0, [r7, #0]
 8019be8:	f002 fb80 	bl	801c2ec <RegionUS915GetPhyParam>
 8019bec:	4603      	mov	r3, r0
 8019bee:	60fb      	str	r3, [r7, #12]
 8019bf0:	e001      	b.n	8019bf6 <RegionGetPhyParam+0x38>
 8019bf2:	68bb      	ldr	r3, [r7, #8]
 8019bf4:	60fb      	str	r3, [r7, #12]
 8019bf6:	2300      	movs	r3, #0
 8019bf8:	68fb      	ldr	r3, [r7, #12]
 8019bfa:	4618      	mov	r0, r3
 8019bfc:	3710      	adds	r7, #16
 8019bfe:	46bd      	mov	sp, r7
 8019c00:	bd80      	pop	{r7, pc}

08019c02 <RegionSetBandTxDone>:
 8019c02:	b580      	push	{r7, lr}
 8019c04:	b082      	sub	sp, #8
 8019c06:	af00      	add	r7, sp, #0
 8019c08:	4603      	mov	r3, r0
 8019c0a:	6039      	str	r1, [r7, #0]
 8019c0c:	71fb      	strb	r3, [r7, #7]
 8019c0e:	79fb      	ldrb	r3, [r7, #7]
 8019c10:	2b05      	cmp	r3, #5
 8019c12:	d002      	beq.n	8019c1a <RegionSetBandTxDone+0x18>
 8019c14:	2b08      	cmp	r3, #8
 8019c16:	d004      	beq.n	8019c22 <RegionSetBandTxDone+0x20>
 8019c18:	e007      	b.n	8019c2a <RegionSetBandTxDone+0x28>
 8019c1a:	6838      	ldr	r0, [r7, #0]
 8019c1c:	f001 fa2a 	bl	801b074 <RegionEU868SetBandTxDone>
 8019c20:	e003      	b.n	8019c2a <RegionSetBandTxDone+0x28>
 8019c22:	6838      	ldr	r0, [r7, #0]
 8019c24:	f002 fcb0 	bl	801c588 <RegionUS915SetBandTxDone>
 8019c28:	bf00      	nop
 8019c2a:	3708      	adds	r7, #8
 8019c2c:	46bd      	mov	sp, r7
 8019c2e:	bd80      	pop	{r7, pc}

08019c30 <RegionInitDefaults>:
 8019c30:	b580      	push	{r7, lr}
 8019c32:	b082      	sub	sp, #8
 8019c34:	af00      	add	r7, sp, #0
 8019c36:	4603      	mov	r3, r0
 8019c38:	6039      	str	r1, [r7, #0]
 8019c3a:	71fb      	strb	r3, [r7, #7]
 8019c3c:	79fb      	ldrb	r3, [r7, #7]
 8019c3e:	2b05      	cmp	r3, #5
 8019c40:	d002      	beq.n	8019c48 <RegionInitDefaults+0x18>
 8019c42:	2b08      	cmp	r3, #8
 8019c44:	d004      	beq.n	8019c50 <RegionInitDefaults+0x20>
 8019c46:	e007      	b.n	8019c58 <RegionInitDefaults+0x28>
 8019c48:	6838      	ldr	r0, [r7, #0]
 8019c4a:	f001 fa3b 	bl	801b0c4 <RegionEU868InitDefaults>
 8019c4e:	e003      	b.n	8019c58 <RegionInitDefaults+0x28>
 8019c50:	6838      	ldr	r0, [r7, #0]
 8019c52:	f002 fcc3 	bl	801c5dc <RegionUS915InitDefaults>
 8019c56:	bf00      	nop
 8019c58:	bf00      	nop
 8019c5a:	3708      	adds	r7, #8
 8019c5c:	46bd      	mov	sp, r7
 8019c5e:	bd80      	pop	{r7, pc}

08019c60 <RegionGetNvmCtx>:
 8019c60:	b580      	push	{r7, lr}
 8019c62:	b082      	sub	sp, #8
 8019c64:	af00      	add	r7, sp, #0
 8019c66:	4603      	mov	r3, r0
 8019c68:	6039      	str	r1, [r7, #0]
 8019c6a:	71fb      	strb	r3, [r7, #7]
 8019c6c:	79fb      	ldrb	r3, [r7, #7]
 8019c6e:	2b05      	cmp	r3, #5
 8019c70:	d002      	beq.n	8019c78 <RegionGetNvmCtx+0x18>
 8019c72:	2b08      	cmp	r3, #8
 8019c74:	d005      	beq.n	8019c82 <RegionGetNvmCtx+0x22>
 8019c76:	e009      	b.n	8019c8c <RegionGetNvmCtx+0x2c>
 8019c78:	6838      	ldr	r0, [r7, #0]
 8019c7a:	f001 fab1 	bl	801b1e0 <RegionEU868GetNvmCtx>
 8019c7e:	4603      	mov	r3, r0
 8019c80:	e005      	b.n	8019c8e <RegionGetNvmCtx+0x2e>
 8019c82:	6838      	ldr	r0, [r7, #0]
 8019c84:	f002 fda6 	bl	801c7d4 <RegionUS915GetNvmCtx>
 8019c88:	4603      	mov	r3, r0
 8019c8a:	e000      	b.n	8019c8e <RegionGetNvmCtx+0x2e>
 8019c8c:	2300      	movs	r3, #0
 8019c8e:	4618      	mov	r0, r3
 8019c90:	3708      	adds	r7, #8
 8019c92:	46bd      	mov	sp, r7
 8019c94:	bd80      	pop	{r7, pc}

08019c96 <RegionVerify>:
 8019c96:	b580      	push	{r7, lr}
 8019c98:	b082      	sub	sp, #8
 8019c9a:	af00      	add	r7, sp, #0
 8019c9c:	4603      	mov	r3, r0
 8019c9e:	6039      	str	r1, [r7, #0]
 8019ca0:	71fb      	strb	r3, [r7, #7]
 8019ca2:	4613      	mov	r3, r2
 8019ca4:	71bb      	strb	r3, [r7, #6]
 8019ca6:	79fb      	ldrb	r3, [r7, #7]
 8019ca8:	2b05      	cmp	r3, #5
 8019caa:	d002      	beq.n	8019cb2 <RegionVerify+0x1c>
 8019cac:	2b08      	cmp	r3, #8
 8019cae:	d007      	beq.n	8019cc0 <RegionVerify+0x2a>
 8019cb0:	e00d      	b.n	8019cce <RegionVerify+0x38>
 8019cb2:	79bb      	ldrb	r3, [r7, #6]
 8019cb4:	4619      	mov	r1, r3
 8019cb6:	6838      	ldr	r0, [r7, #0]
 8019cb8:	f001 faa2 	bl	801b200 <RegionEU868Verify>
 8019cbc:	4603      	mov	r3, r0
 8019cbe:	e007      	b.n	8019cd0 <RegionVerify+0x3a>
 8019cc0:	79bb      	ldrb	r3, [r7, #6]
 8019cc2:	4619      	mov	r1, r3
 8019cc4:	6838      	ldr	r0, [r7, #0]
 8019cc6:	f002 fd95 	bl	801c7f4 <RegionUS915Verify>
 8019cca:	4603      	mov	r3, r0
 8019ccc:	e000      	b.n	8019cd0 <RegionVerify+0x3a>
 8019cce:	2300      	movs	r3, #0
 8019cd0:	4618      	mov	r0, r3
 8019cd2:	3708      	adds	r7, #8
 8019cd4:	46bd      	mov	sp, r7
 8019cd6:	bd80      	pop	{r7, pc}

08019cd8 <RegionApplyCFList>:
 8019cd8:	b580      	push	{r7, lr}
 8019cda:	b082      	sub	sp, #8
 8019cdc:	af00      	add	r7, sp, #0
 8019cde:	4603      	mov	r3, r0
 8019ce0:	6039      	str	r1, [r7, #0]
 8019ce2:	71fb      	strb	r3, [r7, #7]
 8019ce4:	79fb      	ldrb	r3, [r7, #7]
 8019ce6:	2b05      	cmp	r3, #5
 8019ce8:	d002      	beq.n	8019cf0 <RegionApplyCFList+0x18>
 8019cea:	2b08      	cmp	r3, #8
 8019cec:	d004      	beq.n	8019cf8 <RegionApplyCFList+0x20>
 8019cee:	e007      	b.n	8019d00 <RegionApplyCFList+0x28>
 8019cf0:	6838      	ldr	r0, [r7, #0]
 8019cf2:	f001 fb01 	bl	801b2f8 <RegionEU868ApplyCFList>
 8019cf6:	e003      	b.n	8019d00 <RegionApplyCFList+0x28>
 8019cf8:	6838      	ldr	r0, [r7, #0]
 8019cfa:	f002 fdf1 	bl	801c8e0 <RegionUS915ApplyCFList>
 8019cfe:	bf00      	nop
 8019d00:	bf00      	nop
 8019d02:	3708      	adds	r7, #8
 8019d04:	46bd      	mov	sp, r7
 8019d06:	bd80      	pop	{r7, pc}

08019d08 <RegionChanMaskSet>:
 8019d08:	b580      	push	{r7, lr}
 8019d0a:	b082      	sub	sp, #8
 8019d0c:	af00      	add	r7, sp, #0
 8019d0e:	4603      	mov	r3, r0
 8019d10:	6039      	str	r1, [r7, #0]
 8019d12:	71fb      	strb	r3, [r7, #7]
 8019d14:	79fb      	ldrb	r3, [r7, #7]
 8019d16:	2b05      	cmp	r3, #5
 8019d18:	d002      	beq.n	8019d20 <RegionChanMaskSet+0x18>
 8019d1a:	2b08      	cmp	r3, #8
 8019d1c:	d005      	beq.n	8019d2a <RegionChanMaskSet+0x22>
 8019d1e:	e009      	b.n	8019d34 <RegionChanMaskSet+0x2c>
 8019d20:	6838      	ldr	r0, [r7, #0]
 8019d22:	f001 fb5d 	bl	801b3e0 <RegionEU868ChanMaskSet>
 8019d26:	4603      	mov	r3, r0
 8019d28:	e005      	b.n	8019d36 <RegionChanMaskSet+0x2e>
 8019d2a:	6838      	ldr	r0, [r7, #0]
 8019d2c:	f002 fe50 	bl	801c9d0 <RegionUS915ChanMaskSet>
 8019d30:	4603      	mov	r3, r0
 8019d32:	e000      	b.n	8019d36 <RegionChanMaskSet+0x2e>
 8019d34:	2300      	movs	r3, #0
 8019d36:	4618      	mov	r0, r3
 8019d38:	3708      	adds	r7, #8
 8019d3a:	46bd      	mov	sp, r7
 8019d3c:	bd80      	pop	{r7, pc}

08019d3e <RegionComputeRxWindowParameters>:
 8019d3e:	b580      	push	{r7, lr}
 8019d40:	b082      	sub	sp, #8
 8019d42:	af00      	add	r7, sp, #0
 8019d44:	603b      	str	r3, [r7, #0]
 8019d46:	4603      	mov	r3, r0
 8019d48:	71fb      	strb	r3, [r7, #7]
 8019d4a:	460b      	mov	r3, r1
 8019d4c:	71bb      	strb	r3, [r7, #6]
 8019d4e:	4613      	mov	r3, r2
 8019d50:	717b      	strb	r3, [r7, #5]
 8019d52:	79fb      	ldrb	r3, [r7, #7]
 8019d54:	2b05      	cmp	r3, #5
 8019d56:	d002      	beq.n	8019d5e <RegionComputeRxWindowParameters+0x20>
 8019d58:	2b08      	cmp	r3, #8
 8019d5a:	d008      	beq.n	8019d6e <RegionComputeRxWindowParameters+0x30>
 8019d5c:	e00f      	b.n	8019d7e <RegionComputeRxWindowParameters+0x40>
 8019d5e:	7979      	ldrb	r1, [r7, #5]
 8019d60:	f997 0006 	ldrsb.w	r0, [r7, #6]
 8019d64:	693b      	ldr	r3, [r7, #16]
 8019d66:	683a      	ldr	r2, [r7, #0]
 8019d68:	f001 fb60 	bl	801b42c <RegionEU868ComputeRxWindowParameters>
 8019d6c:	e007      	b.n	8019d7e <RegionComputeRxWindowParameters+0x40>
 8019d6e:	7979      	ldrb	r1, [r7, #5]
 8019d70:	f997 0006 	ldrsb.w	r0, [r7, #6]
 8019d74:	693b      	ldr	r3, [r7, #16]
 8019d76:	683a      	ldr	r2, [r7, #0]
 8019d78:	f002 fe8e 	bl	801ca98 <RegionUS915ComputeRxWindowParameters>
 8019d7c:	bf00      	nop
 8019d7e:	bf00      	nop
 8019d80:	3708      	adds	r7, #8
 8019d82:	46bd      	mov	sp, r7
 8019d84:	bd80      	pop	{r7, pc}

08019d86 <RegionRxConfig>:
 8019d86:	b580      	push	{r7, lr}
 8019d88:	b084      	sub	sp, #16
 8019d8a:	af00      	add	r7, sp, #0
 8019d8c:	4603      	mov	r3, r0
 8019d8e:	60b9      	str	r1, [r7, #8]
 8019d90:	607a      	str	r2, [r7, #4]
 8019d92:	73fb      	strb	r3, [r7, #15]
 8019d94:	7bfb      	ldrb	r3, [r7, #15]
 8019d96:	2b05      	cmp	r3, #5
 8019d98:	d002      	beq.n	8019da0 <RegionRxConfig+0x1a>
 8019d9a:	2b08      	cmp	r3, #8
 8019d9c:	d006      	beq.n	8019dac <RegionRxConfig+0x26>
 8019d9e:	e00b      	b.n	8019db8 <RegionRxConfig+0x32>
 8019da0:	6879      	ldr	r1, [r7, #4]
 8019da2:	68b8      	ldr	r0, [r7, #8]
 8019da4:	f001 fb9a 	bl	801b4dc <RegionEU868RxConfig>
 8019da8:	4603      	mov	r3, r0
 8019daa:	e006      	b.n	8019dba <RegionRxConfig+0x34>
 8019dac:	6879      	ldr	r1, [r7, #4]
 8019dae:	68b8      	ldr	r0, [r7, #8]
 8019db0:	f002 feba 	bl	801cb28 <RegionUS915RxConfig>
 8019db4:	4603      	mov	r3, r0
 8019db6:	e000      	b.n	8019dba <RegionRxConfig+0x34>
 8019db8:	2300      	movs	r3, #0
 8019dba:	4618      	mov	r0, r3
 8019dbc:	3710      	adds	r7, #16
 8019dbe:	46bd      	mov	sp, r7
 8019dc0:	bd80      	pop	{r7, pc}

08019dc2 <RegionTxConfig>:
 8019dc2:	b580      	push	{r7, lr}
 8019dc4:	b084      	sub	sp, #16
 8019dc6:	af00      	add	r7, sp, #0
 8019dc8:	60b9      	str	r1, [r7, #8]
 8019dca:	607a      	str	r2, [r7, #4]
 8019dcc:	603b      	str	r3, [r7, #0]
 8019dce:	4603      	mov	r3, r0
 8019dd0:	73fb      	strb	r3, [r7, #15]
 8019dd2:	7bfb      	ldrb	r3, [r7, #15]
 8019dd4:	2b05      	cmp	r3, #5
 8019dd6:	d002      	beq.n	8019dde <RegionTxConfig+0x1c>
 8019dd8:	2b08      	cmp	r3, #8
 8019dda:	d007      	beq.n	8019dec <RegionTxConfig+0x2a>
 8019ddc:	e00d      	b.n	8019dfa <RegionTxConfig+0x38>
 8019dde:	683a      	ldr	r2, [r7, #0]
 8019de0:	6879      	ldr	r1, [r7, #4]
 8019de2:	68b8      	ldr	r0, [r7, #8]
 8019de4:	f001 fc48 	bl	801b678 <RegionEU868TxConfig>
 8019de8:	4603      	mov	r3, r0
 8019dea:	e007      	b.n	8019dfc <RegionTxConfig+0x3a>
 8019dec:	683a      	ldr	r2, [r7, #0]
 8019dee:	6879      	ldr	r1, [r7, #4]
 8019df0:	68b8      	ldr	r0, [r7, #8]
 8019df2:	f002 ff1d 	bl	801cc30 <RegionUS915TxConfig>
 8019df6:	4603      	mov	r3, r0
 8019df8:	e000      	b.n	8019dfc <RegionTxConfig+0x3a>
 8019dfa:	2300      	movs	r3, #0
 8019dfc:	4618      	mov	r0, r3
 8019dfe:	3710      	adds	r7, #16
 8019e00:	46bd      	mov	sp, r7
 8019e02:	bd80      	pop	{r7, pc}

08019e04 <RegionLinkAdrReq>:
 8019e04:	b580      	push	{r7, lr}
 8019e06:	b086      	sub	sp, #24
 8019e08:	af02      	add	r7, sp, #8
 8019e0a:	60b9      	str	r1, [r7, #8]
 8019e0c:	607a      	str	r2, [r7, #4]
 8019e0e:	603b      	str	r3, [r7, #0]
 8019e10:	4603      	mov	r3, r0
 8019e12:	73fb      	strb	r3, [r7, #15]
 8019e14:	7bfb      	ldrb	r3, [r7, #15]
 8019e16:	2b05      	cmp	r3, #5
 8019e18:	d002      	beq.n	8019e20 <RegionLinkAdrReq+0x1c>
 8019e1a:	2b08      	cmp	r3, #8
 8019e1c:	d00a      	beq.n	8019e34 <RegionLinkAdrReq+0x30>
 8019e1e:	e013      	b.n	8019e48 <RegionLinkAdrReq+0x44>
 8019e20:	69fb      	ldr	r3, [r7, #28]
 8019e22:	9300      	str	r3, [sp, #0]
 8019e24:	69bb      	ldr	r3, [r7, #24]
 8019e26:	683a      	ldr	r2, [r7, #0]
 8019e28:	6879      	ldr	r1, [r7, #4]
 8019e2a:	68b8      	ldr	r0, [r7, #8]
 8019e2c:	f001 fcf0 	bl	801b810 <RegionEU868LinkAdrReq>
 8019e30:	4603      	mov	r3, r0
 8019e32:	e00a      	b.n	8019e4a <RegionLinkAdrReq+0x46>
 8019e34:	69fb      	ldr	r3, [r7, #28]
 8019e36:	9300      	str	r3, [sp, #0]
 8019e38:	69bb      	ldr	r3, [r7, #24]
 8019e3a:	683a      	ldr	r2, [r7, #0]
 8019e3c:	6879      	ldr	r1, [r7, #4]
 8019e3e:	68b8      	ldr	r0, [r7, #8]
 8019e40:	f002 ff98 	bl	801cd74 <RegionUS915LinkAdrReq>
 8019e44:	4603      	mov	r3, r0
 8019e46:	e000      	b.n	8019e4a <RegionLinkAdrReq+0x46>
 8019e48:	2300      	movs	r3, #0
 8019e4a:	4618      	mov	r0, r3
 8019e4c:	3710      	adds	r7, #16
 8019e4e:	46bd      	mov	sp, r7
 8019e50:	bd80      	pop	{r7, pc}

08019e52 <RegionRxParamSetupReq>:
 8019e52:	b580      	push	{r7, lr}
 8019e54:	b082      	sub	sp, #8
 8019e56:	af00      	add	r7, sp, #0
 8019e58:	4603      	mov	r3, r0
 8019e5a:	6039      	str	r1, [r7, #0]
 8019e5c:	71fb      	strb	r3, [r7, #7]
 8019e5e:	79fb      	ldrb	r3, [r7, #7]
 8019e60:	2b05      	cmp	r3, #5
 8019e62:	d002      	beq.n	8019e6a <RegionRxParamSetupReq+0x18>
 8019e64:	2b08      	cmp	r3, #8
 8019e66:	d005      	beq.n	8019e74 <RegionRxParamSetupReq+0x22>
 8019e68:	e009      	b.n	8019e7e <RegionRxParamSetupReq+0x2c>
 8019e6a:	6838      	ldr	r0, [r7, #0]
 8019e6c:	f001 fdec 	bl	801ba48 <RegionEU868RxParamSetupReq>
 8019e70:	4603      	mov	r3, r0
 8019e72:	e005      	b.n	8019e80 <RegionRxParamSetupReq+0x2e>
 8019e74:	6838      	ldr	r0, [r7, #0]
 8019e76:	f003 f993 	bl	801d1a0 <RegionUS915RxParamSetupReq>
 8019e7a:	4603      	mov	r3, r0
 8019e7c:	e000      	b.n	8019e80 <RegionRxParamSetupReq+0x2e>
 8019e7e:	2300      	movs	r3, #0
 8019e80:	4618      	mov	r0, r3
 8019e82:	3708      	adds	r7, #8
 8019e84:	46bd      	mov	sp, r7
 8019e86:	bd80      	pop	{r7, pc}

08019e88 <RegionNewChannelReq>:
 8019e88:	b580      	push	{r7, lr}
 8019e8a:	b082      	sub	sp, #8
 8019e8c:	af00      	add	r7, sp, #0
 8019e8e:	4603      	mov	r3, r0
 8019e90:	6039      	str	r1, [r7, #0]
 8019e92:	71fb      	strb	r3, [r7, #7]
 8019e94:	79fb      	ldrb	r3, [r7, #7]
 8019e96:	2b05      	cmp	r3, #5
 8019e98:	d002      	beq.n	8019ea0 <RegionNewChannelReq+0x18>
 8019e9a:	2b08      	cmp	r3, #8
 8019e9c:	d005      	beq.n	8019eaa <RegionNewChannelReq+0x22>
 8019e9e:	e009      	b.n	8019eb4 <RegionNewChannelReq+0x2c>
 8019ea0:	6838      	ldr	r0, [r7, #0]
 8019ea2:	f001 fe0f 	bl	801bac4 <RegionEU868NewChannelReq>
 8019ea6:	4603      	mov	r3, r0
 8019ea8:	e005      	b.n	8019eb6 <RegionNewChannelReq+0x2e>
 8019eaa:	6838      	ldr	r0, [r7, #0]
 8019eac:	f003 f9c4 	bl	801d238 <RegionUS915NewChannelReq>
 8019eb0:	4603      	mov	r3, r0
 8019eb2:	e000      	b.n	8019eb6 <RegionNewChannelReq+0x2e>
 8019eb4:	2300      	movs	r3, #0
 8019eb6:	4618      	mov	r0, r3
 8019eb8:	3708      	adds	r7, #8
 8019eba:	46bd      	mov	sp, r7
 8019ebc:	bd80      	pop	{r7, pc}

08019ebe <RegionTxParamSetupReq>:
 8019ebe:	b580      	push	{r7, lr}
 8019ec0:	b082      	sub	sp, #8
 8019ec2:	af00      	add	r7, sp, #0
 8019ec4:	4603      	mov	r3, r0
 8019ec6:	6039      	str	r1, [r7, #0]
 8019ec8:	71fb      	strb	r3, [r7, #7]
 8019eca:	79fb      	ldrb	r3, [r7, #7]
 8019ecc:	2b05      	cmp	r3, #5
 8019ece:	d002      	beq.n	8019ed6 <RegionTxParamSetupReq+0x18>
 8019ed0:	2b08      	cmp	r3, #8
 8019ed2:	d005      	beq.n	8019ee0 <RegionTxParamSetupReq+0x22>
 8019ed4:	e009      	b.n	8019eea <RegionTxParamSetupReq+0x2c>
 8019ed6:	6838      	ldr	r0, [r7, #0]
 8019ed8:	f001 fe50 	bl	801bb7c <RegionEU868TxParamSetupReq>
 8019edc:	4603      	mov	r3, r0
 8019ede:	e005      	b.n	8019eec <RegionTxParamSetupReq+0x2e>
 8019ee0:	6838      	ldr	r0, [r7, #0]
 8019ee2:	f003 f9b3 	bl	801d24c <RegionUS915TxParamSetupReq>
 8019ee6:	4603      	mov	r3, r0
 8019ee8:	e000      	b.n	8019eec <RegionTxParamSetupReq+0x2e>
 8019eea:	2300      	movs	r3, #0
 8019eec:	4618      	mov	r0, r3
 8019eee:	3708      	adds	r7, #8
 8019ef0:	46bd      	mov	sp, r7
 8019ef2:	bd80      	pop	{r7, pc}

08019ef4 <RegionDlChannelReq>:
 8019ef4:	b580      	push	{r7, lr}
 8019ef6:	b082      	sub	sp, #8
 8019ef8:	af00      	add	r7, sp, #0
 8019efa:	4603      	mov	r3, r0
 8019efc:	6039      	str	r1, [r7, #0]
 8019efe:	71fb      	strb	r3, [r7, #7]
 8019f00:	79fb      	ldrb	r3, [r7, #7]
 8019f02:	2b05      	cmp	r3, #5
 8019f04:	d002      	beq.n	8019f0c <RegionDlChannelReq+0x18>
 8019f06:	2b08      	cmp	r3, #8
 8019f08:	d005      	beq.n	8019f16 <RegionDlChannelReq+0x22>
 8019f0a:	e009      	b.n	8019f20 <RegionDlChannelReq+0x2c>
 8019f0c:	6838      	ldr	r0, [r7, #0]
 8019f0e:	f001 fe41 	bl	801bb94 <RegionEU868DlChannelReq>
 8019f12:	4603      	mov	r3, r0
 8019f14:	e005      	b.n	8019f22 <RegionDlChannelReq+0x2e>
 8019f16:	6838      	ldr	r0, [r7, #0]
 8019f18:	f003 f9a3 	bl	801d262 <RegionUS915DlChannelReq>
 8019f1c:	4603      	mov	r3, r0
 8019f1e:	e000      	b.n	8019f22 <RegionDlChannelReq+0x2e>
 8019f20:	2300      	movs	r3, #0
 8019f22:	4618      	mov	r0, r3
 8019f24:	3708      	adds	r7, #8
 8019f26:	46bd      	mov	sp, r7
 8019f28:	bd80      	pop	{r7, pc}

08019f2a <RegionAlternateDr>:
 8019f2a:	b580      	push	{r7, lr}
 8019f2c:	b082      	sub	sp, #8
 8019f2e:	af00      	add	r7, sp, #0
 8019f30:	4603      	mov	r3, r0
 8019f32:	71fb      	strb	r3, [r7, #7]
 8019f34:	460b      	mov	r3, r1
 8019f36:	71bb      	strb	r3, [r7, #6]
 8019f38:	4613      	mov	r3, r2
 8019f3a:	717b      	strb	r3, [r7, #5]
 8019f3c:	79fb      	ldrb	r3, [r7, #7]
 8019f3e:	2b05      	cmp	r3, #5
 8019f40:	d002      	beq.n	8019f48 <RegionAlternateDr+0x1e>
 8019f42:	2b08      	cmp	r3, #8
 8019f44:	d009      	beq.n	8019f5a <RegionAlternateDr+0x30>
 8019f46:	e011      	b.n	8019f6c <RegionAlternateDr+0x42>
 8019f48:	797a      	ldrb	r2, [r7, #5]
 8019f4a:	f997 3006 	ldrsb.w	r3, [r7, #6]
 8019f4e:	4611      	mov	r1, r2
 8019f50:	4618      	mov	r0, r3
 8019f52:	f001 fe61 	bl	801bc18 <RegionEU868AlternateDr>
 8019f56:	4603      	mov	r3, r0
 8019f58:	e009      	b.n	8019f6e <RegionAlternateDr+0x44>
 8019f5a:	797a      	ldrb	r2, [r7, #5]
 8019f5c:	f997 3006 	ldrsb.w	r3, [r7, #6]
 8019f60:	4611      	mov	r1, r2
 8019f62:	4618      	mov	r0, r3
 8019f64:	f003 f988 	bl	801d278 <RegionUS915AlternateDr>
 8019f68:	4603      	mov	r3, r0
 8019f6a:	e000      	b.n	8019f6e <RegionAlternateDr+0x44>
 8019f6c:	2300      	movs	r3, #0
 8019f6e:	4618      	mov	r0, r3
 8019f70:	3708      	adds	r7, #8
 8019f72:	46bd      	mov	sp, r7
 8019f74:	bd80      	pop	{r7, pc}

08019f76 <RegionNextChannel>:
 8019f76:	b580      	push	{r7, lr}
 8019f78:	b084      	sub	sp, #16
 8019f7a:	af00      	add	r7, sp, #0
 8019f7c:	60b9      	str	r1, [r7, #8]
 8019f7e:	607a      	str	r2, [r7, #4]
 8019f80:	603b      	str	r3, [r7, #0]
 8019f82:	4603      	mov	r3, r0
 8019f84:	73fb      	strb	r3, [r7, #15]
 8019f86:	7bfb      	ldrb	r3, [r7, #15]
 8019f88:	2b05      	cmp	r3, #5
 8019f8a:	d002      	beq.n	8019f92 <RegionNextChannel+0x1c>
 8019f8c:	2b08      	cmp	r3, #8
 8019f8e:	d008      	beq.n	8019fa2 <RegionNextChannel+0x2c>
 8019f90:	e00f      	b.n	8019fb2 <RegionNextChannel+0x3c>
 8019f92:	69bb      	ldr	r3, [r7, #24]
 8019f94:	683a      	ldr	r2, [r7, #0]
 8019f96:	6879      	ldr	r1, [r7, #4]
 8019f98:	68b8      	ldr	r0, [r7, #8]
 8019f9a:	f001 fe4d 	bl	801bc38 <RegionEU868NextChannel>
 8019f9e:	4603      	mov	r3, r0
 8019fa0:	e008      	b.n	8019fb4 <RegionNextChannel+0x3e>
 8019fa2:	69bb      	ldr	r3, [r7, #24]
 8019fa4:	683a      	ldr	r2, [r7, #0]
 8019fa6:	6879      	ldr	r1, [r7, #4]
 8019fa8:	68b8      	ldr	r0, [r7, #8]
 8019faa:	f003 f99f 	bl	801d2ec <RegionUS915NextChannel>
 8019fae:	4603      	mov	r3, r0
 8019fb0:	e000      	b.n	8019fb4 <RegionNextChannel+0x3e>
 8019fb2:	2309      	movs	r3, #9
 8019fb4:	4618      	mov	r0, r3
 8019fb6:	3710      	adds	r7, #16
 8019fb8:	46bd      	mov	sp, r7
 8019fba:	bd80      	pop	{r7, pc}

08019fbc <RegionSetContinuousWave>:
 8019fbc:	b580      	push	{r7, lr}
 8019fbe:	b082      	sub	sp, #8
 8019fc0:	af00      	add	r7, sp, #0
 8019fc2:	4603      	mov	r3, r0
 8019fc4:	6039      	str	r1, [r7, #0]
 8019fc6:	71fb      	strb	r3, [r7, #7]
 8019fc8:	79fb      	ldrb	r3, [r7, #7]
 8019fca:	2b05      	cmp	r3, #5
 8019fcc:	d002      	beq.n	8019fd4 <RegionSetContinuousWave+0x18>
 8019fce:	2b08      	cmp	r3, #8
 8019fd0:	d004      	beq.n	8019fdc <RegionSetContinuousWave+0x20>
 8019fd2:	e007      	b.n	8019fe4 <RegionSetContinuousWave+0x28>
 8019fd4:	6838      	ldr	r0, [r7, #0]
 8019fd6:	f001 ff97 	bl	801bf08 <RegionEU868SetContinuousWave>
 8019fda:	e003      	b.n	8019fe4 <RegionSetContinuousWave+0x28>
 8019fdc:	6838      	ldr	r0, [r7, #0]
 8019fde:	f003 fa6b 	bl	801d4b8 <RegionUS915SetContinuousWave>
 8019fe2:	bf00      	nop
 8019fe4:	bf00      	nop
 8019fe6:	3708      	adds	r7, #8
 8019fe8:	46bd      	mov	sp, r7
 8019fea:	bd80      	pop	{r7, pc}

08019fec <RegionApplyDrOffset>:
 8019fec:	b590      	push	{r4, r7, lr}
 8019fee:	b083      	sub	sp, #12
 8019ff0:	af00      	add	r7, sp, #0
 8019ff2:	4604      	mov	r4, r0
 8019ff4:	4608      	mov	r0, r1
 8019ff6:	4611      	mov	r1, r2
 8019ff8:	461a      	mov	r2, r3
 8019ffa:	4623      	mov	r3, r4
 8019ffc:	71fb      	strb	r3, [r7, #7]
 8019ffe:	4603      	mov	r3, r0
 801a000:	71bb      	strb	r3, [r7, #6]
 801a002:	460b      	mov	r3, r1
 801a004:	717b      	strb	r3, [r7, #5]
 801a006:	4613      	mov	r3, r2
 801a008:	713b      	strb	r3, [r7, #4]
 801a00a:	79fb      	ldrb	r3, [r7, #7]
 801a00c:	2b05      	cmp	r3, #5
 801a00e:	d002      	beq.n	801a016 <RegionApplyDrOffset+0x2a>
 801a010:	2b08      	cmp	r3, #8
 801a012:	d00a      	beq.n	801a02a <RegionApplyDrOffset+0x3e>
 801a014:	e013      	b.n	801a03e <RegionApplyDrOffset+0x52>
 801a016:	f997 2004 	ldrsb.w	r2, [r7, #4]
 801a01a:	f997 1005 	ldrsb.w	r1, [r7, #5]
 801a01e:	79bb      	ldrb	r3, [r7, #6]
 801a020:	4618      	mov	r0, r3
 801a022:	f001 ffbf 	bl	801bfa4 <RegionEU868ApplyDrOffset>
 801a026:	4603      	mov	r3, r0
 801a028:	e00a      	b.n	801a040 <RegionApplyDrOffset+0x54>
 801a02a:	f997 2004 	ldrsb.w	r2, [r7, #4]
 801a02e:	f997 1005 	ldrsb.w	r1, [r7, #5]
 801a032:	79bb      	ldrb	r3, [r7, #6]
 801a034:	4618      	mov	r0, r3
 801a036:	f003 fa8f 	bl	801d558 <RegionUS915ApplyDrOffset>
 801a03a:	4603      	mov	r3, r0
 801a03c:	e000      	b.n	801a040 <RegionApplyDrOffset+0x54>
 801a03e:	797b      	ldrb	r3, [r7, #5]
 801a040:	4618      	mov	r0, r3
 801a042:	370c      	adds	r7, #12
 801a044:	46bd      	mov	sp, r7
 801a046:	bd90      	pop	{r4, r7, pc}

0801a048 <RegionGetVersion>:
 801a048:	b480      	push	{r7}
 801a04a:	b083      	sub	sp, #12
 801a04c:	af00      	add	r7, sp, #0
 801a04e:	4b04      	ldr	r3, [pc, #16]	; (801a060 <RegionGetVersion+0x18>)
 801a050:	607b      	str	r3, [r7, #4]
 801a052:	687b      	ldr	r3, [r7, #4]
 801a054:	4618      	mov	r0, r3
 801a056:	370c      	adds	r7, #12
 801a058:	46bd      	mov	sp, r7
 801a05a:	bc80      	pop	{r7}
 801a05c:	4770      	bx	lr
 801a05e:	bf00      	nop
 801a060:	01000300 	.word	0x01000300

0801a064 <GetDutyCycle>:
 801a064:	b580      	push	{r7, lr}
 801a066:	b086      	sub	sp, #24
 801a068:	af00      	add	r7, sp, #0
 801a06a:	60f8      	str	r0, [r7, #12]
 801a06c:	4608      	mov	r0, r1
 801a06e:	4639      	mov	r1, r7
 801a070:	e881 000c 	stmia.w	r1, {r2, r3}
 801a074:	4603      	mov	r3, r0
 801a076:	72fb      	strb	r3, [r7, #11]
 801a078:	463b      	mov	r3, r7
 801a07a:	e893 0003 	ldmia.w	r3, {r0, r1}
 801a07e:	f000 f8dc 	bl	801a23a <RegionCommonGetJoinDc>
 801a082:	4603      	mov	r3, r0
 801a084:	82bb      	strh	r3, [r7, #20]
 801a086:	68fb      	ldr	r3, [r7, #12]
 801a088:	881b      	ldrh	r3, [r3, #0]
 801a08a:	82fb      	strh	r3, [r7, #22]
 801a08c:	7afb      	ldrb	r3, [r7, #11]
 801a08e:	f083 0301 	eor.w	r3, r3, #1
 801a092:	b2db      	uxtb	r3, r3
 801a094:	2b00      	cmp	r3, #0
 801a096:	d00c      	beq.n	801a0b2 <GetDutyCycle+0x4e>
 801a098:	463b      	mov	r3, r7
 801a09a:	e893 0003 	ldmia.w	r3, {r0, r1}
 801a09e:	f000 f8cc 	bl	801a23a <RegionCommonGetJoinDc>
 801a0a2:	4603      	mov	r3, r0
 801a0a4:	82bb      	strh	r3, [r7, #20]
 801a0a6:	8aba      	ldrh	r2, [r7, #20]
 801a0a8:	8afb      	ldrh	r3, [r7, #22]
 801a0aa:	4293      	cmp	r3, r2
 801a0ac:	bf38      	it	cc
 801a0ae:	4613      	movcc	r3, r2
 801a0b0:	82fb      	strh	r3, [r7, #22]
 801a0b2:	8afb      	ldrh	r3, [r7, #22]
 801a0b4:	2b00      	cmp	r3, #0
 801a0b6:	d101      	bne.n	801a0bc <GetDutyCycle+0x58>
 801a0b8:	2301      	movs	r3, #1
 801a0ba:	82fb      	strh	r3, [r7, #22]
 801a0bc:	8afb      	ldrh	r3, [r7, #22]
 801a0be:	4618      	mov	r0, r3
 801a0c0:	3718      	adds	r7, #24
 801a0c2:	46bd      	mov	sp, r7
 801a0c4:	bd80      	pop	{r7, pc}
	...

0801a0c8 <SetMaxTimeCredits>:
 801a0c8:	b580      	push	{r7, lr}
 801a0ca:	b086      	sub	sp, #24
 801a0cc:	af00      	add	r7, sp, #0
 801a0ce:	60f8      	str	r0, [r7, #12]
 801a0d0:	4608      	mov	r0, r1
 801a0d2:	4639      	mov	r1, r7
 801a0d4:	e881 000c 	stmia.w	r1, {r2, r3}
 801a0d8:	4603      	mov	r3, r0
 801a0da:	72fb      	strb	r3, [r7, #11]
 801a0dc:	68fb      	ldr	r3, [r7, #12]
 801a0de:	881b      	ldrh	r3, [r3, #0]
 801a0e0:	82bb      	strh	r3, [r7, #20]
 801a0e2:	2301      	movs	r3, #1
 801a0e4:	75fb      	strb	r3, [r7, #23]
 801a0e6:	7af9      	ldrb	r1, [r7, #11]
 801a0e8:	463b      	mov	r3, r7
 801a0ea:	cb0c      	ldmia	r3, {r2, r3}
 801a0ec:	68f8      	ldr	r0, [r7, #12]
 801a0ee:	f7ff ffb9 	bl	801a064 <GetDutyCycle>
 801a0f2:	4603      	mov	r3, r0
 801a0f4:	82bb      	strh	r3, [r7, #20]
 801a0f6:	7afb      	ldrb	r3, [r7, #11]
 801a0f8:	f083 0301 	eor.w	r3, r3, #1
 801a0fc:	b2db      	uxtb	r3, r3
 801a0fe:	2b00      	cmp	r3, #0
 801a100:	d006      	beq.n	801a110 <SetMaxTimeCredits+0x48>
 801a102:	8abb      	ldrh	r3, [r7, #20]
 801a104:	4a0c      	ldr	r2, [pc, #48]	; (801a138 <SetMaxTimeCredits+0x70>)
 801a106:	fba2 2303 	umull	r2, r3, r2, r3
 801a10a:	095b      	lsrs	r3, r3, #5
 801a10c:	b29b      	uxth	r3, r3
 801a10e:	75fb      	strb	r3, [r7, #23]
 801a110:	7dfb      	ldrb	r3, [r7, #23]
 801a112:	4a0a      	ldr	r2, [pc, #40]	; (801a13c <SetMaxTimeCredits+0x74>)
 801a114:	fb02 f303 	mul.w	r3, r2, r3
 801a118:	461a      	mov	r2, r3
 801a11a:	68fb      	ldr	r3, [r7, #12]
 801a11c:	60da      	str	r2, [r3, #12]
 801a11e:	68fb      	ldr	r3, [r7, #12]
 801a120:	685b      	ldr	r3, [r3, #4]
 801a122:	2b00      	cmp	r3, #0
 801a124:	d103      	bne.n	801a12e <SetMaxTimeCredits+0x66>
 801a126:	68fb      	ldr	r3, [r7, #12]
 801a128:	68da      	ldr	r2, [r3, #12]
 801a12a:	68fb      	ldr	r3, [r7, #12]
 801a12c:	609a      	str	r2, [r3, #8]
 801a12e:	8abb      	ldrh	r3, [r7, #20]
 801a130:	4618      	mov	r0, r3
 801a132:	3718      	adds	r7, #24
 801a134:	46bd      	mov	sp, r7
 801a136:	bd80      	pop	{r7, pc}
 801a138:	51eb851f 	.word	0x51eb851f
 801a13c:	0036ee80 	.word	0x0036ee80

0801a140 <UpdateTimeCredits>:
 801a140:	b580      	push	{r7, lr}
 801a142:	b084      	sub	sp, #16
 801a144:	af00      	add	r7, sp, #0
 801a146:	6078      	str	r0, [r7, #4]
 801a148:	4608      	mov	r0, r1
 801a14a:	4611      	mov	r1, r2
 801a14c:	461a      	mov	r2, r3
 801a14e:	4603      	mov	r3, r0
 801a150:	70fb      	strb	r3, [r7, #3]
 801a152:	460b      	mov	r3, r1
 801a154:	70bb      	strb	r3, [r7, #2]
 801a156:	4613      	mov	r3, r2
 801a158:	707b      	strb	r3, [r7, #1]
 801a15a:	78f9      	ldrb	r1, [r7, #3]
 801a15c:	f107 0318 	add.w	r3, r7, #24
 801a160:	cb0c      	ldmia	r3, {r2, r3}
 801a162:	6878      	ldr	r0, [r7, #4]
 801a164:	f7ff ffb0 	bl	801a0c8 <SetMaxTimeCredits>
 801a168:	4603      	mov	r3, r0
 801a16a:	81fb      	strh	r3, [r7, #14]
 801a16c:	78fb      	ldrb	r3, [r7, #3]
 801a16e:	f083 0301 	eor.w	r3, r3, #1
 801a172:	b2db      	uxtb	r3, r3
 801a174:	2b00      	cmp	r3, #0
 801a176:	d010      	beq.n	801a19a <UpdateTimeCredits+0x5a>
 801a178:	78bb      	ldrb	r3, [r7, #2]
 801a17a:	f083 0301 	eor.w	r3, r3, #1
 801a17e:	b2db      	uxtb	r3, r3
 801a180:	2b00      	cmp	r3, #0
 801a182:	d014      	beq.n	801a1ae <UpdateTimeCredits+0x6e>
 801a184:	787b      	ldrb	r3, [r7, #1]
 801a186:	f083 0301 	eor.w	r3, r3, #1
 801a18a:	b2db      	uxtb	r3, r3
 801a18c:	2b00      	cmp	r3, #0
 801a18e:	d00e      	beq.n	801a1ae <UpdateTimeCredits+0x6e>
 801a190:	687b      	ldr	r3, [r7, #4]
 801a192:	68da      	ldr	r2, [r3, #12]
 801a194:	687b      	ldr	r3, [r7, #4]
 801a196:	609a      	str	r2, [r3, #8]
 801a198:	e009      	b.n	801a1ae <UpdateTimeCredits+0x6e>
 801a19a:	78bb      	ldrb	r3, [r7, #2]
 801a19c:	f083 0301 	eor.w	r3, r3, #1
 801a1a0:	b2db      	uxtb	r3, r3
 801a1a2:	2b00      	cmp	r3, #0
 801a1a4:	d003      	beq.n	801a1ae <UpdateTimeCredits+0x6e>
 801a1a6:	687b      	ldr	r3, [r7, #4]
 801a1a8:	68da      	ldr	r2, [r3, #12]
 801a1aa:	687b      	ldr	r3, [r7, #4]
 801a1ac:	609a      	str	r2, [r3, #8]
 801a1ae:	687b      	ldr	r3, [r7, #4]
 801a1b0:	685b      	ldr	r3, [r3, #4]
 801a1b2:	4618      	mov	r0, r3
 801a1b4:	f007 f8be 	bl	8021334 <UTIL_TIMER_GetElapsedTime>
 801a1b8:	4602      	mov	r2, r0
 801a1ba:	687b      	ldr	r3, [r7, #4]
 801a1bc:	689b      	ldr	r3, [r3, #8]
 801a1be:	441a      	add	r2, r3
 801a1c0:	687b      	ldr	r3, [r7, #4]
 801a1c2:	609a      	str	r2, [r3, #8]
 801a1c4:	687b      	ldr	r3, [r7, #4]
 801a1c6:	689a      	ldr	r2, [r3, #8]
 801a1c8:	687b      	ldr	r3, [r7, #4]
 801a1ca:	68db      	ldr	r3, [r3, #12]
 801a1cc:	429a      	cmp	r2, r3
 801a1ce:	d903      	bls.n	801a1d8 <UpdateTimeCredits+0x98>
 801a1d0:	687b      	ldr	r3, [r7, #4]
 801a1d2:	68da      	ldr	r2, [r3, #12]
 801a1d4:	687b      	ldr	r3, [r7, #4]
 801a1d6:	609a      	str	r2, [r3, #8]
 801a1d8:	687b      	ldr	r3, [r7, #4]
 801a1da:	6a3a      	ldr	r2, [r7, #32]
 801a1dc:	605a      	str	r2, [r3, #4]
 801a1de:	89fb      	ldrh	r3, [r7, #14]
 801a1e0:	4618      	mov	r0, r3
 801a1e2:	3710      	adds	r7, #16
 801a1e4:	46bd      	mov	sp, r7
 801a1e6:	bd80      	pop	{r7, pc}

0801a1e8 <CountChannels>:
 801a1e8:	b480      	push	{r7}
 801a1ea:	b085      	sub	sp, #20
 801a1ec:	af00      	add	r7, sp, #0
 801a1ee:	4603      	mov	r3, r0
 801a1f0:	460a      	mov	r2, r1
 801a1f2:	80fb      	strh	r3, [r7, #6]
 801a1f4:	4613      	mov	r3, r2
 801a1f6:	717b      	strb	r3, [r7, #5]
 801a1f8:	2300      	movs	r3, #0
 801a1fa:	73fb      	strb	r3, [r7, #15]
 801a1fc:	2300      	movs	r3, #0
 801a1fe:	73bb      	strb	r3, [r7, #14]
 801a200:	e011      	b.n	801a226 <CountChannels+0x3e>
 801a202:	88fa      	ldrh	r2, [r7, #6]
 801a204:	7bbb      	ldrb	r3, [r7, #14]
 801a206:	2101      	movs	r1, #1
 801a208:	fa01 f303 	lsl.w	r3, r1, r3
 801a20c:	401a      	ands	r2, r3
 801a20e:	7bbb      	ldrb	r3, [r7, #14]
 801a210:	2101      	movs	r1, #1
 801a212:	fa01 f303 	lsl.w	r3, r1, r3
 801a216:	429a      	cmp	r2, r3
 801a218:	d102      	bne.n	801a220 <CountChannels+0x38>
 801a21a:	7bfb      	ldrb	r3, [r7, #15]
 801a21c:	3301      	adds	r3, #1
 801a21e:	73fb      	strb	r3, [r7, #15]
 801a220:	7bbb      	ldrb	r3, [r7, #14]
 801a222:	3301      	adds	r3, #1
 801a224:	73bb      	strb	r3, [r7, #14]
 801a226:	7bba      	ldrb	r2, [r7, #14]
 801a228:	797b      	ldrb	r3, [r7, #5]
 801a22a:	429a      	cmp	r2, r3
 801a22c:	d3e9      	bcc.n	801a202 <CountChannels+0x1a>
 801a22e:	7bfb      	ldrb	r3, [r7, #15]
 801a230:	4618      	mov	r0, r3
 801a232:	3714      	adds	r7, #20
 801a234:	46bd      	mov	sp, r7
 801a236:	bc80      	pop	{r7}
 801a238:	4770      	bx	lr

0801a23a <RegionCommonGetJoinDc>:
 801a23a:	b480      	push	{r7}
 801a23c:	b085      	sub	sp, #20
 801a23e:	af00      	add	r7, sp, #0
 801a240:	463b      	mov	r3, r7
 801a242:	e883 0003 	stmia.w	r3, {r0, r1}
 801a246:	2300      	movs	r3, #0
 801a248:	81fb      	strh	r3, [r7, #14]
 801a24a:	683b      	ldr	r3, [r7, #0]
 801a24c:	f5b3 6f61 	cmp.w	r3, #3600	; 0xe10
 801a250:	d202      	bcs.n	801a258 <RegionCommonGetJoinDc+0x1e>
 801a252:	2364      	movs	r3, #100	; 0x64
 801a254:	81fb      	strh	r3, [r7, #14]
 801a256:	e00b      	b.n	801a270 <RegionCommonGetJoinDc+0x36>
 801a258:	683b      	ldr	r3, [r7, #0]
 801a25a:	f649 22af 	movw	r2, #39599	; 0x9aaf
 801a25e:	4293      	cmp	r3, r2
 801a260:	d803      	bhi.n	801a26a <RegionCommonGetJoinDc+0x30>
 801a262:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 801a266:	81fb      	strh	r3, [r7, #14]
 801a268:	e002      	b.n	801a270 <RegionCommonGetJoinDc+0x36>
 801a26a:	f242 7310 	movw	r3, #10000	; 0x2710
 801a26e:	81fb      	strh	r3, [r7, #14]
 801a270:	89fb      	ldrh	r3, [r7, #14]
 801a272:	4618      	mov	r0, r3
 801a274:	3714      	adds	r7, #20
 801a276:	46bd      	mov	sp, r7
 801a278:	bc80      	pop	{r7}
 801a27a:	4770      	bx	lr

0801a27c <RegionCommonChanVerifyDr>:
 801a27c:	b580      	push	{r7, lr}
 801a27e:	b084      	sub	sp, #16
 801a280:	af00      	add	r7, sp, #0
 801a282:	6039      	str	r1, [r7, #0]
 801a284:	4611      	mov	r1, r2
 801a286:	461a      	mov	r2, r3
 801a288:	4603      	mov	r3, r0
 801a28a:	71fb      	strb	r3, [r7, #7]
 801a28c:	460b      	mov	r3, r1
 801a28e:	71bb      	strb	r3, [r7, #6]
 801a290:	4613      	mov	r3, r2
 801a292:	717b      	strb	r3, [r7, #5]
 801a294:	f997 2018 	ldrsb.w	r2, [r7, #24]
 801a298:	f997 1005 	ldrsb.w	r1, [r7, #5]
 801a29c:	f997 3006 	ldrsb.w	r3, [r7, #6]
 801a2a0:	4618      	mov	r0, r3
 801a2a2:	f000 f85d 	bl	801a360 <RegionCommonValueInRange>
 801a2a6:	4603      	mov	r3, r0
 801a2a8:	2b00      	cmp	r3, #0
 801a2aa:	d101      	bne.n	801a2b0 <RegionCommonChanVerifyDr+0x34>
 801a2ac:	2300      	movs	r3, #0
 801a2ae:	e053      	b.n	801a358 <RegionCommonChanVerifyDr+0xdc>
 801a2b0:	2300      	movs	r3, #0
 801a2b2:	73fb      	strb	r3, [r7, #15]
 801a2b4:	2300      	movs	r3, #0
 801a2b6:	73bb      	strb	r3, [r7, #14]
 801a2b8:	e049      	b.n	801a34e <RegionCommonChanVerifyDr+0xd2>
 801a2ba:	2300      	movs	r3, #0
 801a2bc:	737b      	strb	r3, [r7, #13]
 801a2be:	e03d      	b.n	801a33c <RegionCommonChanVerifyDr+0xc0>
 801a2c0:	7bbb      	ldrb	r3, [r7, #14]
 801a2c2:	005b      	lsls	r3, r3, #1
 801a2c4:	683a      	ldr	r2, [r7, #0]
 801a2c6:	4413      	add	r3, r2
 801a2c8:	881b      	ldrh	r3, [r3, #0]
 801a2ca:	461a      	mov	r2, r3
 801a2cc:	7b7b      	ldrb	r3, [r7, #13]
 801a2ce:	fa42 f303 	asr.w	r3, r2, r3
 801a2d2:	f003 0301 	and.w	r3, r3, #1
 801a2d6:	2b00      	cmp	r3, #0
 801a2d8:	d02d      	beq.n	801a336 <RegionCommonChanVerifyDr+0xba>
 801a2da:	7bfa      	ldrb	r2, [r7, #15]
 801a2dc:	7b7b      	ldrb	r3, [r7, #13]
 801a2de:	4413      	add	r3, r2
 801a2e0:	461a      	mov	r2, r3
 801a2e2:	4613      	mov	r3, r2
 801a2e4:	005b      	lsls	r3, r3, #1
 801a2e6:	4413      	add	r3, r2
 801a2e8:	009b      	lsls	r3, r3, #2
 801a2ea:	461a      	mov	r2, r3
 801a2ec:	69fb      	ldr	r3, [r7, #28]
 801a2ee:	4413      	add	r3, r2
 801a2f0:	7a1b      	ldrb	r3, [r3, #8]
 801a2f2:	f343 0303 	sbfx	r3, r3, #0, #4
 801a2f6:	b25b      	sxtb	r3, r3
 801a2f8:	f003 030f 	and.w	r3, r3, #15
 801a2fc:	b259      	sxtb	r1, r3
 801a2fe:	7bfa      	ldrb	r2, [r7, #15]
 801a300:	7b7b      	ldrb	r3, [r7, #13]
 801a302:	4413      	add	r3, r2
 801a304:	461a      	mov	r2, r3
 801a306:	4613      	mov	r3, r2
 801a308:	005b      	lsls	r3, r3, #1
 801a30a:	4413      	add	r3, r2
 801a30c:	009b      	lsls	r3, r3, #2
 801a30e:	461a      	mov	r2, r3
 801a310:	69fb      	ldr	r3, [r7, #28]
 801a312:	4413      	add	r3, r2
 801a314:	7a1b      	ldrb	r3, [r3, #8]
 801a316:	f343 1303 	sbfx	r3, r3, #4, #4
 801a31a:	b25b      	sxtb	r3, r3
 801a31c:	f003 030f 	and.w	r3, r3, #15
 801a320:	b25a      	sxtb	r2, r3
 801a322:	f997 3006 	ldrsb.w	r3, [r7, #6]
 801a326:	4618      	mov	r0, r3
 801a328:	f000 f81a 	bl	801a360 <RegionCommonValueInRange>
 801a32c:	4603      	mov	r3, r0
 801a32e:	2b01      	cmp	r3, #1
 801a330:	d101      	bne.n	801a336 <RegionCommonChanVerifyDr+0xba>
 801a332:	2301      	movs	r3, #1
 801a334:	e010      	b.n	801a358 <RegionCommonChanVerifyDr+0xdc>
 801a336:	7b7b      	ldrb	r3, [r7, #13]
 801a338:	3301      	adds	r3, #1
 801a33a:	737b      	strb	r3, [r7, #13]
 801a33c:	7b7b      	ldrb	r3, [r7, #13]
 801a33e:	2b0f      	cmp	r3, #15
 801a340:	d9be      	bls.n	801a2c0 <RegionCommonChanVerifyDr+0x44>
 801a342:	7bfb      	ldrb	r3, [r7, #15]
 801a344:	3310      	adds	r3, #16
 801a346:	73fb      	strb	r3, [r7, #15]
 801a348:	7bbb      	ldrb	r3, [r7, #14]
 801a34a:	3301      	adds	r3, #1
 801a34c:	73bb      	strb	r3, [r7, #14]
 801a34e:	7bfa      	ldrb	r2, [r7, #15]
 801a350:	79fb      	ldrb	r3, [r7, #7]
 801a352:	429a      	cmp	r2, r3
 801a354:	d3b1      	bcc.n	801a2ba <RegionCommonChanVerifyDr+0x3e>
 801a356:	2300      	movs	r3, #0
 801a358:	4618      	mov	r0, r3
 801a35a:	3710      	adds	r7, #16
 801a35c:	46bd      	mov	sp, r7
 801a35e:	bd80      	pop	{r7, pc}

0801a360 <RegionCommonValueInRange>:
 801a360:	b480      	push	{r7}
 801a362:	b083      	sub	sp, #12
 801a364:	af00      	add	r7, sp, #0
 801a366:	4603      	mov	r3, r0
 801a368:	71fb      	strb	r3, [r7, #7]
 801a36a:	460b      	mov	r3, r1
 801a36c:	71bb      	strb	r3, [r7, #6]
 801a36e:	4613      	mov	r3, r2
 801a370:	717b      	strb	r3, [r7, #5]
 801a372:	f997 2007 	ldrsb.w	r2, [r7, #7]
 801a376:	f997 3006 	ldrsb.w	r3, [r7, #6]
 801a37a:	429a      	cmp	r2, r3
 801a37c:	db07      	blt.n	801a38e <RegionCommonValueInRange+0x2e>
 801a37e:	f997 2007 	ldrsb.w	r2, [r7, #7]
 801a382:	f997 3005 	ldrsb.w	r3, [r7, #5]
 801a386:	429a      	cmp	r2, r3
 801a388:	dc01      	bgt.n	801a38e <RegionCommonValueInRange+0x2e>
 801a38a:	2301      	movs	r3, #1
 801a38c:	e000      	b.n	801a390 <RegionCommonValueInRange+0x30>
 801a38e:	2300      	movs	r3, #0
 801a390:	4618      	mov	r0, r3
 801a392:	370c      	adds	r7, #12
 801a394:	46bd      	mov	sp, r7
 801a396:	bc80      	pop	{r7}
 801a398:	4770      	bx	lr

0801a39a <RegionCommonChanDisable>:
 801a39a:	b480      	push	{r7}
 801a39c:	b085      	sub	sp, #20
 801a39e:	af00      	add	r7, sp, #0
 801a3a0:	6078      	str	r0, [r7, #4]
 801a3a2:	460b      	mov	r3, r1
 801a3a4:	70fb      	strb	r3, [r7, #3]
 801a3a6:	4613      	mov	r3, r2
 801a3a8:	70bb      	strb	r3, [r7, #2]
 801a3aa:	78fb      	ldrb	r3, [r7, #3]
 801a3ac:	091b      	lsrs	r3, r3, #4
 801a3ae:	73fb      	strb	r3, [r7, #15]
 801a3b0:	78bb      	ldrb	r3, [r7, #2]
 801a3b2:	091b      	lsrs	r3, r3, #4
 801a3b4:	b2db      	uxtb	r3, r3
 801a3b6:	7bfa      	ldrb	r2, [r7, #15]
 801a3b8:	429a      	cmp	r2, r3
 801a3ba:	d803      	bhi.n	801a3c4 <RegionCommonChanDisable+0x2a>
 801a3bc:	78fa      	ldrb	r2, [r7, #3]
 801a3be:	78bb      	ldrb	r3, [r7, #2]
 801a3c0:	429a      	cmp	r2, r3
 801a3c2:	d301      	bcc.n	801a3c8 <RegionCommonChanDisable+0x2e>
 801a3c4:	2300      	movs	r3, #0
 801a3c6:	e017      	b.n	801a3f8 <RegionCommonChanDisable+0x5e>
 801a3c8:	7bfb      	ldrb	r3, [r7, #15]
 801a3ca:	005b      	lsls	r3, r3, #1
 801a3cc:	687a      	ldr	r2, [r7, #4]
 801a3ce:	4413      	add	r3, r2
 801a3d0:	881b      	ldrh	r3, [r3, #0]
 801a3d2:	b21a      	sxth	r2, r3
 801a3d4:	78fb      	ldrb	r3, [r7, #3]
 801a3d6:	f003 030f 	and.w	r3, r3, #15
 801a3da:	2101      	movs	r1, #1
 801a3dc:	fa01 f303 	lsl.w	r3, r1, r3
 801a3e0:	b21b      	sxth	r3, r3
 801a3e2:	43db      	mvns	r3, r3
 801a3e4:	b21b      	sxth	r3, r3
 801a3e6:	4013      	ands	r3, r2
 801a3e8:	b219      	sxth	r1, r3
 801a3ea:	7bfb      	ldrb	r3, [r7, #15]
 801a3ec:	005b      	lsls	r3, r3, #1
 801a3ee:	687a      	ldr	r2, [r7, #4]
 801a3f0:	4413      	add	r3, r2
 801a3f2:	b28a      	uxth	r2, r1
 801a3f4:	801a      	strh	r2, [r3, #0]
 801a3f6:	2301      	movs	r3, #1
 801a3f8:	4618      	mov	r0, r3
 801a3fa:	3714      	adds	r7, #20
 801a3fc:	46bd      	mov	sp, r7
 801a3fe:	bc80      	pop	{r7}
 801a400:	4770      	bx	lr

0801a402 <RegionCommonCountChannels>:
 801a402:	b580      	push	{r7, lr}
 801a404:	b084      	sub	sp, #16
 801a406:	af00      	add	r7, sp, #0
 801a408:	6078      	str	r0, [r7, #4]
 801a40a:	460b      	mov	r3, r1
 801a40c:	70fb      	strb	r3, [r7, #3]
 801a40e:	4613      	mov	r3, r2
 801a410:	70bb      	strb	r3, [r7, #2]
 801a412:	2300      	movs	r3, #0
 801a414:	73fb      	strb	r3, [r7, #15]
 801a416:	687b      	ldr	r3, [r7, #4]
 801a418:	2b00      	cmp	r3, #0
 801a41a:	d101      	bne.n	801a420 <RegionCommonCountChannels+0x1e>
 801a41c:	2300      	movs	r3, #0
 801a41e:	e018      	b.n	801a452 <RegionCommonCountChannels+0x50>
 801a420:	78fb      	ldrb	r3, [r7, #3]
 801a422:	73bb      	strb	r3, [r7, #14]
 801a424:	e010      	b.n	801a448 <RegionCommonCountChannels+0x46>
 801a426:	7bbb      	ldrb	r3, [r7, #14]
 801a428:	005b      	lsls	r3, r3, #1
 801a42a:	687a      	ldr	r2, [r7, #4]
 801a42c:	4413      	add	r3, r2
 801a42e:	881b      	ldrh	r3, [r3, #0]
 801a430:	2110      	movs	r1, #16
 801a432:	4618      	mov	r0, r3
 801a434:	f7ff fed8 	bl	801a1e8 <CountChannels>
 801a438:	4603      	mov	r3, r0
 801a43a:	461a      	mov	r2, r3
 801a43c:	7bfb      	ldrb	r3, [r7, #15]
 801a43e:	4413      	add	r3, r2
 801a440:	73fb      	strb	r3, [r7, #15]
 801a442:	7bbb      	ldrb	r3, [r7, #14]
 801a444:	3301      	adds	r3, #1
 801a446:	73bb      	strb	r3, [r7, #14]
 801a448:	7bba      	ldrb	r2, [r7, #14]
 801a44a:	78bb      	ldrb	r3, [r7, #2]
 801a44c:	429a      	cmp	r2, r3
 801a44e:	d3ea      	bcc.n	801a426 <RegionCommonCountChannels+0x24>
 801a450:	7bfb      	ldrb	r3, [r7, #15]
 801a452:	4618      	mov	r0, r3
 801a454:	3710      	adds	r7, #16
 801a456:	46bd      	mov	sp, r7
 801a458:	bd80      	pop	{r7, pc}

0801a45a <RegionCommonChanMaskCopy>:
 801a45a:	b480      	push	{r7}
 801a45c:	b087      	sub	sp, #28
 801a45e:	af00      	add	r7, sp, #0
 801a460:	60f8      	str	r0, [r7, #12]
 801a462:	60b9      	str	r1, [r7, #8]
 801a464:	4613      	mov	r3, r2
 801a466:	71fb      	strb	r3, [r7, #7]
 801a468:	68fb      	ldr	r3, [r7, #12]
 801a46a:	2b00      	cmp	r3, #0
 801a46c:	d016      	beq.n	801a49c <RegionCommonChanMaskCopy+0x42>
 801a46e:	68bb      	ldr	r3, [r7, #8]
 801a470:	2b00      	cmp	r3, #0
 801a472:	d013      	beq.n	801a49c <RegionCommonChanMaskCopy+0x42>
 801a474:	2300      	movs	r3, #0
 801a476:	75fb      	strb	r3, [r7, #23]
 801a478:	e00c      	b.n	801a494 <RegionCommonChanMaskCopy+0x3a>
 801a47a:	7dfb      	ldrb	r3, [r7, #23]
 801a47c:	005b      	lsls	r3, r3, #1
 801a47e:	68ba      	ldr	r2, [r7, #8]
 801a480:	441a      	add	r2, r3
 801a482:	7dfb      	ldrb	r3, [r7, #23]
 801a484:	005b      	lsls	r3, r3, #1
 801a486:	68f9      	ldr	r1, [r7, #12]
 801a488:	440b      	add	r3, r1
 801a48a:	8812      	ldrh	r2, [r2, #0]
 801a48c:	801a      	strh	r2, [r3, #0]
 801a48e:	7dfb      	ldrb	r3, [r7, #23]
 801a490:	3301      	adds	r3, #1
 801a492:	75fb      	strb	r3, [r7, #23]
 801a494:	7dfa      	ldrb	r2, [r7, #23]
 801a496:	79fb      	ldrb	r3, [r7, #7]
 801a498:	429a      	cmp	r2, r3
 801a49a:	d3ee      	bcc.n	801a47a <RegionCommonChanMaskCopy+0x20>
 801a49c:	bf00      	nop
 801a49e:	371c      	adds	r7, #28
 801a4a0:	46bd      	mov	sp, r7
 801a4a2:	bc80      	pop	{r7}
 801a4a4:	4770      	bx	lr

0801a4a6 <RegionCommonSetBandTxDone>:
 801a4a6:	b082      	sub	sp, #8
 801a4a8:	b580      	push	{r7, lr}
 801a4aa:	b086      	sub	sp, #24
 801a4ac:	af00      	add	r7, sp, #0
 801a4ae:	60f8      	str	r0, [r7, #12]
 801a4b0:	60b9      	str	r1, [r7, #8]
 801a4b2:	627b      	str	r3, [r7, #36]	; 0x24
 801a4b4:	4613      	mov	r3, r2
 801a4b6:	71fb      	strb	r3, [r7, #7]
 801a4b8:	79f9      	ldrb	r1, [r7, #7]
 801a4ba:	f107 0324 	add.w	r3, r7, #36	; 0x24
 801a4be:	cb0c      	ldmia	r3, {r2, r3}
 801a4c0:	68f8      	ldr	r0, [r7, #12]
 801a4c2:	f7ff fdcf 	bl	801a064 <GetDutyCycle>
 801a4c6:	4603      	mov	r3, r0
 801a4c8:	82fb      	strh	r3, [r7, #22]
 801a4ca:	68fb      	ldr	r3, [r7, #12]
 801a4cc:	689a      	ldr	r2, [r3, #8]
 801a4ce:	8afb      	ldrh	r3, [r7, #22]
 801a4d0:	68b9      	ldr	r1, [r7, #8]
 801a4d2:	fb01 f303 	mul.w	r3, r1, r3
 801a4d6:	429a      	cmp	r2, r3
 801a4d8:	d909      	bls.n	801a4ee <RegionCommonSetBandTxDone+0x48>
 801a4da:	68fb      	ldr	r3, [r7, #12]
 801a4dc:	689a      	ldr	r2, [r3, #8]
 801a4de:	8afb      	ldrh	r3, [r7, #22]
 801a4e0:	68b9      	ldr	r1, [r7, #8]
 801a4e2:	fb01 f303 	mul.w	r3, r1, r3
 801a4e6:	1ad2      	subs	r2, r2, r3
 801a4e8:	68fb      	ldr	r3, [r7, #12]
 801a4ea:	609a      	str	r2, [r3, #8]
 801a4ec:	e002      	b.n	801a4f4 <RegionCommonSetBandTxDone+0x4e>
 801a4ee:	68fb      	ldr	r3, [r7, #12]
 801a4f0:	2200      	movs	r2, #0
 801a4f2:	609a      	str	r2, [r3, #8]
 801a4f4:	bf00      	nop
 801a4f6:	3718      	adds	r7, #24
 801a4f8:	46bd      	mov	sp, r7
 801a4fa:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 801a4fe:	b002      	add	sp, #8
 801a500:	4770      	bx	lr

0801a502 <RegionCommonUpdateBandTimeOff>:
 801a502:	b5f0      	push	{r4, r5, r6, r7, lr}
 801a504:	b08d      	sub	sp, #52	; 0x34
 801a506:	af04      	add	r7, sp, #16
 801a508:	6039      	str	r1, [r7, #0]
 801a50a:	4611      	mov	r1, r2
 801a50c:	461a      	mov	r2, r3
 801a50e:	4603      	mov	r3, r0
 801a510:	71fb      	strb	r3, [r7, #7]
 801a512:	460b      	mov	r3, r1
 801a514:	71bb      	strb	r3, [r7, #6]
 801a516:	4613      	mov	r3, r2
 801a518:	717b      	strb	r3, [r7, #5]
 801a51a:	f04f 33ff 	mov.w	r3, #4294967295
 801a51e:	61fb      	str	r3, [r7, #28]
 801a520:	f006 fef6 	bl	8021310 <UTIL_TIMER_GetCurrentTime>
 801a524:	6178      	str	r0, [r7, #20]
 801a526:	2300      	movs	r3, #0
 801a528:	613b      	str	r3, [r7, #16]
 801a52a:	2301      	movs	r3, #1
 801a52c:	81fb      	strh	r3, [r7, #14]
 801a52e:	2300      	movs	r3, #0
 801a530:	76fb      	strb	r3, [r7, #27]
 801a532:	2300      	movs	r3, #0
 801a534:	76bb      	strb	r3, [r7, #26]
 801a536:	e06c      	b.n	801a612 <RegionCommonUpdateBandTimeOff+0x110>
 801a538:	7eba      	ldrb	r2, [r7, #26]
 801a53a:	4613      	mov	r3, r2
 801a53c:	009b      	lsls	r3, r3, #2
 801a53e:	4413      	add	r3, r2
 801a540:	009b      	lsls	r3, r3, #2
 801a542:	461a      	mov	r2, r3
 801a544:	683b      	ldr	r3, [r7, #0]
 801a546:	189c      	adds	r4, r3, r2
 801a548:	f897 6038 	ldrb.w	r6, [r7, #56]	; 0x38
 801a54c:	797a      	ldrb	r2, [r7, #5]
 801a54e:	79fd      	ldrb	r5, [r7, #7]
 801a550:	697b      	ldr	r3, [r7, #20]
 801a552:	9302      	str	r3, [sp, #8]
 801a554:	46ec      	mov	ip, sp
 801a556:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 801a55a:	e893 0003 	ldmia.w	r3, {r0, r1}
 801a55e:	e88c 0003 	stmia.w	ip, {r0, r1}
 801a562:	4633      	mov	r3, r6
 801a564:	4629      	mov	r1, r5
 801a566:	4620      	mov	r0, r4
 801a568:	f7ff fdea 	bl	801a140 <UpdateTimeCredits>
 801a56c:	4603      	mov	r3, r0
 801a56e:	81fb      	strh	r3, [r7, #14]
 801a570:	89fa      	ldrh	r2, [r7, #14]
 801a572:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 801a574:	fb02 f303 	mul.w	r3, r2, r3
 801a578:	613b      	str	r3, [r7, #16]
 801a57a:	7eba      	ldrb	r2, [r7, #26]
 801a57c:	4613      	mov	r3, r2
 801a57e:	009b      	lsls	r3, r3, #2
 801a580:	4413      	add	r3, r2
 801a582:	009b      	lsls	r3, r3, #2
 801a584:	461a      	mov	r2, r3
 801a586:	683b      	ldr	r3, [r7, #0]
 801a588:	4413      	add	r3, r2
 801a58a:	689b      	ldr	r3, [r3, #8]
 801a58c:	693a      	ldr	r2, [r7, #16]
 801a58e:	429a      	cmp	r2, r3
 801a590:	d305      	bcc.n	801a59e <RegionCommonUpdateBandTimeOff+0x9c>
 801a592:	797b      	ldrb	r3, [r7, #5]
 801a594:	f083 0301 	eor.w	r3, r3, #1
 801a598:	b2db      	uxtb	r3, r3
 801a59a:	2b00      	cmp	r3, #0
 801a59c:	d00d      	beq.n	801a5ba <RegionCommonUpdateBandTimeOff+0xb8>
 801a59e:	7eba      	ldrb	r2, [r7, #26]
 801a5a0:	4613      	mov	r3, r2
 801a5a2:	009b      	lsls	r3, r3, #2
 801a5a4:	4413      	add	r3, r2
 801a5a6:	009b      	lsls	r3, r3, #2
 801a5a8:	461a      	mov	r2, r3
 801a5aa:	683b      	ldr	r3, [r7, #0]
 801a5ac:	4413      	add	r3, r2
 801a5ae:	2201      	movs	r2, #1
 801a5b0:	741a      	strb	r2, [r3, #16]
 801a5b2:	7efb      	ldrb	r3, [r7, #27]
 801a5b4:	3301      	adds	r3, #1
 801a5b6:	76fb      	strb	r3, [r7, #27]
 801a5b8:	e028      	b.n	801a60c <RegionCommonUpdateBandTimeOff+0x10a>
 801a5ba:	7eba      	ldrb	r2, [r7, #26]
 801a5bc:	4613      	mov	r3, r2
 801a5be:	009b      	lsls	r3, r3, #2
 801a5c0:	4413      	add	r3, r2
 801a5c2:	009b      	lsls	r3, r3, #2
 801a5c4:	461a      	mov	r2, r3
 801a5c6:	683b      	ldr	r3, [r7, #0]
 801a5c8:	4413      	add	r3, r2
 801a5ca:	2200      	movs	r2, #0
 801a5cc:	741a      	strb	r2, [r3, #16]
 801a5ce:	7eba      	ldrb	r2, [r7, #26]
 801a5d0:	4613      	mov	r3, r2
 801a5d2:	009b      	lsls	r3, r3, #2
 801a5d4:	4413      	add	r3, r2
 801a5d6:	009b      	lsls	r3, r3, #2
 801a5d8:	461a      	mov	r2, r3
 801a5da:	683b      	ldr	r3, [r7, #0]
 801a5dc:	4413      	add	r3, r2
 801a5de:	68db      	ldr	r3, [r3, #12]
 801a5e0:	693a      	ldr	r2, [r7, #16]
 801a5e2:	429a      	cmp	r2, r3
 801a5e4:	d212      	bcs.n	801a60c <RegionCommonUpdateBandTimeOff+0x10a>
 801a5e6:	7eba      	ldrb	r2, [r7, #26]
 801a5e8:	4613      	mov	r3, r2
 801a5ea:	009b      	lsls	r3, r3, #2
 801a5ec:	4413      	add	r3, r2
 801a5ee:	009b      	lsls	r3, r3, #2
 801a5f0:	461a      	mov	r2, r3
 801a5f2:	683b      	ldr	r3, [r7, #0]
 801a5f4:	4413      	add	r3, r2
 801a5f6:	689b      	ldr	r3, [r3, #8]
 801a5f8:	693a      	ldr	r2, [r7, #16]
 801a5fa:	1ad3      	subs	r3, r2, r3
 801a5fc:	69fa      	ldr	r2, [r7, #28]
 801a5fe:	4293      	cmp	r3, r2
 801a600:	bf28      	it	cs
 801a602:	4613      	movcs	r3, r2
 801a604:	61fb      	str	r3, [r7, #28]
 801a606:	7efb      	ldrb	r3, [r7, #27]
 801a608:	3301      	adds	r3, #1
 801a60a:	76fb      	strb	r3, [r7, #27]
 801a60c:	7ebb      	ldrb	r3, [r7, #26]
 801a60e:	3301      	adds	r3, #1
 801a610:	76bb      	strb	r3, [r7, #26]
 801a612:	7eba      	ldrb	r2, [r7, #26]
 801a614:	79bb      	ldrb	r3, [r7, #6]
 801a616:	429a      	cmp	r2, r3
 801a618:	d38e      	bcc.n	801a538 <RegionCommonUpdateBandTimeOff+0x36>
 801a61a:	7efb      	ldrb	r3, [r7, #27]
 801a61c:	2b00      	cmp	r3, #0
 801a61e:	d102      	bne.n	801a626 <RegionCommonUpdateBandTimeOff+0x124>
 801a620:	f04f 33ff 	mov.w	r3, #4294967295
 801a624:	e000      	b.n	801a628 <RegionCommonUpdateBandTimeOff+0x126>
 801a626:	69fb      	ldr	r3, [r7, #28]
 801a628:	4618      	mov	r0, r3
 801a62a:	3724      	adds	r7, #36	; 0x24
 801a62c:	46bd      	mov	sp, r7
 801a62e:	bdf0      	pop	{r4, r5, r6, r7, pc}

0801a630 <RegionCommonParseLinkAdrReq>:
 801a630:	b480      	push	{r7}
 801a632:	b085      	sub	sp, #20
 801a634:	af00      	add	r7, sp, #0
 801a636:	6078      	str	r0, [r7, #4]
 801a638:	6039      	str	r1, [r7, #0]
 801a63a:	2300      	movs	r3, #0
 801a63c:	73fb      	strb	r3, [r7, #15]
 801a63e:	687b      	ldr	r3, [r7, #4]
 801a640:	781b      	ldrb	r3, [r3, #0]
 801a642:	2b03      	cmp	r3, #3
 801a644:	d13f      	bne.n	801a6c6 <RegionCommonParseLinkAdrReq+0x96>
 801a646:	687b      	ldr	r3, [r7, #4]
 801a648:	3301      	adds	r3, #1
 801a64a:	781b      	ldrb	r3, [r3, #0]
 801a64c:	b25a      	sxtb	r2, r3
 801a64e:	683b      	ldr	r3, [r7, #0]
 801a650:	705a      	strb	r2, [r3, #1]
 801a652:	683b      	ldr	r3, [r7, #0]
 801a654:	f993 3001 	ldrsb.w	r3, [r3, #1]
 801a658:	f003 030f 	and.w	r3, r3, #15
 801a65c:	b25a      	sxtb	r2, r3
 801a65e:	683b      	ldr	r3, [r7, #0]
 801a660:	709a      	strb	r2, [r3, #2]
 801a662:	683b      	ldr	r3, [r7, #0]
 801a664:	f993 3001 	ldrsb.w	r3, [r3, #1]
 801a668:	b2db      	uxtb	r3, r3
 801a66a:	091b      	lsrs	r3, r3, #4
 801a66c:	b2db      	uxtb	r3, r3
 801a66e:	b25a      	sxtb	r2, r3
 801a670:	683b      	ldr	r3, [r7, #0]
 801a672:	705a      	strb	r2, [r3, #1]
 801a674:	687b      	ldr	r3, [r7, #4]
 801a676:	3302      	adds	r3, #2
 801a678:	781b      	ldrb	r3, [r3, #0]
 801a67a:	b29a      	uxth	r2, r3
 801a67c:	683b      	ldr	r3, [r7, #0]
 801a67e:	809a      	strh	r2, [r3, #4]
 801a680:	683b      	ldr	r3, [r7, #0]
 801a682:	889b      	ldrh	r3, [r3, #4]
 801a684:	b21a      	sxth	r2, r3
 801a686:	687b      	ldr	r3, [r7, #4]
 801a688:	3303      	adds	r3, #3
 801a68a:	781b      	ldrb	r3, [r3, #0]
 801a68c:	021b      	lsls	r3, r3, #8
 801a68e:	b21b      	sxth	r3, r3
 801a690:	4313      	orrs	r3, r2
 801a692:	b21b      	sxth	r3, r3
 801a694:	b29a      	uxth	r2, r3
 801a696:	683b      	ldr	r3, [r7, #0]
 801a698:	809a      	strh	r2, [r3, #4]
 801a69a:	687b      	ldr	r3, [r7, #4]
 801a69c:	791a      	ldrb	r2, [r3, #4]
 801a69e:	683b      	ldr	r3, [r7, #0]
 801a6a0:	701a      	strb	r2, [r3, #0]
 801a6a2:	683b      	ldr	r3, [r7, #0]
 801a6a4:	781b      	ldrb	r3, [r3, #0]
 801a6a6:	091b      	lsrs	r3, r3, #4
 801a6a8:	b2db      	uxtb	r3, r3
 801a6aa:	f003 0307 	and.w	r3, r3, #7
 801a6ae:	b2da      	uxtb	r2, r3
 801a6b0:	683b      	ldr	r3, [r7, #0]
 801a6b2:	70da      	strb	r2, [r3, #3]
 801a6b4:	683b      	ldr	r3, [r7, #0]
 801a6b6:	781b      	ldrb	r3, [r3, #0]
 801a6b8:	f003 030f 	and.w	r3, r3, #15
 801a6bc:	b2da      	uxtb	r2, r3
 801a6be:	683b      	ldr	r3, [r7, #0]
 801a6c0:	701a      	strb	r2, [r3, #0]
 801a6c2:	2305      	movs	r3, #5
 801a6c4:	73fb      	strb	r3, [r7, #15]
 801a6c6:	7bfb      	ldrb	r3, [r7, #15]
 801a6c8:	4618      	mov	r0, r3
 801a6ca:	3714      	adds	r7, #20
 801a6cc:	46bd      	mov	sp, r7
 801a6ce:	bc80      	pop	{r7}
 801a6d0:	4770      	bx	lr

0801a6d2 <RegionCommonLinkAdrReqVerifyParams>:
 801a6d2:	b5b0      	push	{r4, r5, r7, lr}
 801a6d4:	b088      	sub	sp, #32
 801a6d6:	af02      	add	r7, sp, #8
 801a6d8:	60f8      	str	r0, [r7, #12]
 801a6da:	60b9      	str	r1, [r7, #8]
 801a6dc:	607a      	str	r2, [r7, #4]
 801a6de:	603b      	str	r3, [r7, #0]
 801a6e0:	68fb      	ldr	r3, [r7, #12]
 801a6e2:	791b      	ldrb	r3, [r3, #4]
 801a6e4:	75fb      	strb	r3, [r7, #23]
 801a6e6:	68fb      	ldr	r3, [r7, #12]
 801a6e8:	799b      	ldrb	r3, [r3, #6]
 801a6ea:	75bb      	strb	r3, [r7, #22]
 801a6ec:	68fb      	ldr	r3, [r7, #12]
 801a6ee:	79db      	ldrb	r3, [r3, #7]
 801a6f0:	757b      	strb	r3, [r7, #21]
 801a6f2:	68fb      	ldr	r3, [r7, #12]
 801a6f4:	7a1b      	ldrb	r3, [r3, #8]
 801a6f6:	753b      	strb	r3, [r7, #20]
 801a6f8:	68fb      	ldr	r3, [r7, #12]
 801a6fa:	795b      	ldrb	r3, [r3, #5]
 801a6fc:	f083 0301 	eor.w	r3, r3, #1
 801a700:	b2db      	uxtb	r3, r3
 801a702:	2b00      	cmp	r3, #0
 801a704:	d008      	beq.n	801a718 <RegionCommonLinkAdrReqVerifyParams+0x46>
 801a706:	68fb      	ldr	r3, [r7, #12]
 801a708:	7adb      	ldrb	r3, [r3, #11]
 801a70a:	753b      	strb	r3, [r7, #20]
 801a70c:	68fb      	ldr	r3, [r7, #12]
 801a70e:	7a5b      	ldrb	r3, [r3, #9]
 801a710:	75bb      	strb	r3, [r7, #22]
 801a712:	68fb      	ldr	r3, [r7, #12]
 801a714:	7a9b      	ldrb	r3, [r3, #10]
 801a716:	757b      	strb	r3, [r7, #21]
 801a718:	7dfb      	ldrb	r3, [r7, #23]
 801a71a:	2b00      	cmp	r3, #0
 801a71c:	d03a      	beq.n	801a794 <RegionCommonLinkAdrReqVerifyParams+0xc2>
 801a71e:	68fb      	ldr	r3, [r7, #12]
 801a720:	7b18      	ldrb	r0, [r3, #12]
 801a722:	68fb      	ldr	r3, [r7, #12]
 801a724:	6919      	ldr	r1, [r3, #16]
 801a726:	68fb      	ldr	r3, [r7, #12]
 801a728:	f993 5014 	ldrsb.w	r5, [r3, #20]
 801a72c:	68fb      	ldr	r3, [r7, #12]
 801a72e:	f993 3015 	ldrsb.w	r3, [r3, #21]
 801a732:	68fa      	ldr	r2, [r7, #12]
 801a734:	6992      	ldr	r2, [r2, #24]
 801a736:	f997 4016 	ldrsb.w	r4, [r7, #22]
 801a73a:	9201      	str	r2, [sp, #4]
 801a73c:	9300      	str	r3, [sp, #0]
 801a73e:	462b      	mov	r3, r5
 801a740:	4622      	mov	r2, r4
 801a742:	f7ff fd9b 	bl	801a27c <RegionCommonChanVerifyDr>
 801a746:	4603      	mov	r3, r0
 801a748:	f083 0301 	eor.w	r3, r3, #1
 801a74c:	b2db      	uxtb	r3, r3
 801a74e:	2b00      	cmp	r3, #0
 801a750:	d003      	beq.n	801a75a <RegionCommonLinkAdrReqVerifyParams+0x88>
 801a752:	7dfb      	ldrb	r3, [r7, #23]
 801a754:	f023 0302 	bic.w	r3, r3, #2
 801a758:	75fb      	strb	r3, [r7, #23]
 801a75a:	68fb      	ldr	r3, [r7, #12]
 801a75c:	f993 101d 	ldrsb.w	r1, [r3, #29]
 801a760:	68fb      	ldr	r3, [r7, #12]
 801a762:	f993 201c 	ldrsb.w	r2, [r3, #28]
 801a766:	f997 3015 	ldrsb.w	r3, [r7, #21]
 801a76a:	4618      	mov	r0, r3
 801a76c:	f7ff fdf8 	bl	801a360 <RegionCommonValueInRange>
 801a770:	4603      	mov	r3, r0
 801a772:	2b00      	cmp	r3, #0
 801a774:	d10e      	bne.n	801a794 <RegionCommonLinkAdrReqVerifyParams+0xc2>
 801a776:	68fb      	ldr	r3, [r7, #12]
 801a778:	f993 301d 	ldrsb.w	r3, [r3, #29]
 801a77c:	f997 2015 	ldrsb.w	r2, [r7, #21]
 801a780:	429a      	cmp	r2, r3
 801a782:	da03      	bge.n	801a78c <RegionCommonLinkAdrReqVerifyParams+0xba>
 801a784:	68fb      	ldr	r3, [r7, #12]
 801a786:	7f5b      	ldrb	r3, [r3, #29]
 801a788:	757b      	strb	r3, [r7, #21]
 801a78a:	e003      	b.n	801a794 <RegionCommonLinkAdrReqVerifyParams+0xc2>
 801a78c:	7dfb      	ldrb	r3, [r7, #23]
 801a78e:	f023 0304 	bic.w	r3, r3, #4
 801a792:	75fb      	strb	r3, [r7, #23]
 801a794:	7dfb      	ldrb	r3, [r7, #23]
 801a796:	2b07      	cmp	r3, #7
 801a798:	d105      	bne.n	801a7a6 <RegionCommonLinkAdrReqVerifyParams+0xd4>
 801a79a:	f997 3014 	ldrsb.w	r3, [r7, #20]
 801a79e:	2b00      	cmp	r3, #0
 801a7a0:	d101      	bne.n	801a7a6 <RegionCommonLinkAdrReqVerifyParams+0xd4>
 801a7a2:	2301      	movs	r3, #1
 801a7a4:	753b      	strb	r3, [r7, #20]
 801a7a6:	68bb      	ldr	r3, [r7, #8]
 801a7a8:	7dba      	ldrb	r2, [r7, #22]
 801a7aa:	701a      	strb	r2, [r3, #0]
 801a7ac:	687b      	ldr	r3, [r7, #4]
 801a7ae:	7d7a      	ldrb	r2, [r7, #21]
 801a7b0:	701a      	strb	r2, [r3, #0]
 801a7b2:	7d3a      	ldrb	r2, [r7, #20]
 801a7b4:	683b      	ldr	r3, [r7, #0]
 801a7b6:	701a      	strb	r2, [r3, #0]
 801a7b8:	7dfb      	ldrb	r3, [r7, #23]
 801a7ba:	4618      	mov	r0, r3
 801a7bc:	3718      	adds	r7, #24
 801a7be:	46bd      	mov	sp, r7
 801a7c0:	bdb0      	pop	{r4, r5, r7, pc}
	...

0801a7c4 <RegionCommonComputeSymbolTimeLoRa>:
 801a7c4:	b480      	push	{r7}
 801a7c6:	b083      	sub	sp, #12
 801a7c8:	af00      	add	r7, sp, #0
 801a7ca:	4603      	mov	r3, r0
 801a7cc:	6039      	str	r1, [r7, #0]
 801a7ce:	71fb      	strb	r3, [r7, #7]
 801a7d0:	4a05      	ldr	r2, [pc, #20]	; (801a7e8 <RegionCommonComputeSymbolTimeLoRa+0x24>)
 801a7d2:	683b      	ldr	r3, [r7, #0]
 801a7d4:	fbb2 f2f3 	udiv	r2, r2, r3
 801a7d8:	79fb      	ldrb	r3, [r7, #7]
 801a7da:	fa02 f303 	lsl.w	r3, r2, r3
 801a7de:	4618      	mov	r0, r3
 801a7e0:	370c      	adds	r7, #12
 801a7e2:	46bd      	mov	sp, r7
 801a7e4:	bc80      	pop	{r7}
 801a7e6:	4770      	bx	lr
 801a7e8:	3b9aca00 	.word	0x3b9aca00

0801a7ec <RegionCommonComputeSymbolTimeFsk>:
 801a7ec:	b480      	push	{r7}
 801a7ee:	b083      	sub	sp, #12
 801a7f0:	af00      	add	r7, sp, #0
 801a7f2:	4603      	mov	r3, r0
 801a7f4:	71fb      	strb	r3, [r7, #7]
 801a7f6:	4b03      	ldr	r3, [pc, #12]	; (801a804 <RegionCommonComputeSymbolTimeFsk+0x18>)
 801a7f8:	4618      	mov	r0, r3
 801a7fa:	370c      	adds	r7, #12
 801a7fc:	46bd      	mov	sp, r7
 801a7fe:	bc80      	pop	{r7}
 801a800:	4770      	bx	lr
 801a802:	bf00      	nop
 801a804:	00027100 	.word	0x00027100

0801a808 <RegionCommonComputeRxWindowParameters>:
 801a808:	b480      	push	{r7}
 801a80a:	b085      	sub	sp, #20
 801a80c:	af00      	add	r7, sp, #0
 801a80e:	60f8      	str	r0, [r7, #12]
 801a810:	607a      	str	r2, [r7, #4]
 801a812:	603b      	str	r3, [r7, #0]
 801a814:	460b      	mov	r3, r1
 801a816:	72fb      	strb	r3, [r7, #11]
 801a818:	7afa      	ldrb	r2, [r7, #11]
 801a81a:	7afb      	ldrb	r3, [r7, #11]
 801a81c:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 801a820:	3b04      	subs	r3, #4
 801a822:	0059      	lsls	r1, r3, #1
 801a824:	687b      	ldr	r3, [r7, #4]
 801a826:	4817      	ldr	r0, [pc, #92]	; (801a884 <RegionCommonComputeRxWindowParameters+0x7c>)
 801a828:	fb00 f003 	mul.w	r0, r0, r3
 801a82c:	68fb      	ldr	r3, [r7, #12]
 801a82e:	4403      	add	r3, r0
 801a830:	1e58      	subs	r0, r3, #1
 801a832:	68fb      	ldr	r3, [r7, #12]
 801a834:	fbb0 f3f3 	udiv	r3, r0, r3
 801a838:	440b      	add	r3, r1
 801a83a:	429a      	cmp	r2, r3
 801a83c:	bf38      	it	cc
 801a83e:	461a      	movcc	r2, r3
 801a840:	69bb      	ldr	r3, [r7, #24]
 801a842:	601a      	str	r2, [r3, #0]
 801a844:	68fb      	ldr	r3, [r7, #12]
 801a846:	009a      	lsls	r2, r3, #2
 801a848:	69bb      	ldr	r3, [r7, #24]
 801a84a:	681b      	ldr	r3, [r3, #0]
 801a84c:	68f9      	ldr	r1, [r7, #12]
 801a84e:	fb01 f303 	mul.w	r3, r1, r3
 801a852:	085b      	lsrs	r3, r3, #1
 801a854:	1ad3      	subs	r3, r2, r3
 801a856:	f503 2374 	add.w	r3, r3, #999424	; 0xf4000
 801a85a:	f203 233f 	addw	r3, r3, #575	; 0x23f
 801a85e:	4a0a      	ldr	r2, [pc, #40]	; (801a888 <RegionCommonComputeRxWindowParameters+0x80>)
 801a860:	fb82 1203 	smull	r1, r2, r2, r3
 801a864:	1492      	asrs	r2, r2, #18
 801a866:	17db      	asrs	r3, r3, #31
 801a868:	1ad3      	subs	r3, r2, r3
 801a86a:	461a      	mov	r2, r3
 801a86c:	683b      	ldr	r3, [r7, #0]
 801a86e:	1ad3      	subs	r3, r2, r3
 801a870:	3b01      	subs	r3, #1
 801a872:	461a      	mov	r2, r3
 801a874:	69fb      	ldr	r3, [r7, #28]
 801a876:	601a      	str	r2, [r3, #0]
 801a878:	bf00      	nop
 801a87a:	3714      	adds	r7, #20
 801a87c:	46bd      	mov	sp, r7
 801a87e:	bc80      	pop	{r7}
 801a880:	4770      	bx	lr
 801a882:	bf00      	nop
 801a884:	001e8480 	.word	0x001e8480
 801a888:	431bde83 	.word	0x431bde83

0801a88c <RegionCommonComputeTxPower>:
 801a88c:	b580      	push	{r7, lr}
 801a88e:	b086      	sub	sp, #24
 801a890:	af00      	add	r7, sp, #0
 801a892:	4603      	mov	r3, r0
 801a894:	60b9      	str	r1, [r7, #8]
 801a896:	607a      	str	r2, [r7, #4]
 801a898:	73fb      	strb	r3, [r7, #15]
 801a89a:	2300      	movs	r3, #0
 801a89c:	75fb      	strb	r3, [r7, #23]
 801a89e:	f997 300f 	ldrsb.w	r3, [r7, #15]
 801a8a2:	005b      	lsls	r3, r3, #1
 801a8a4:	4618      	mov	r0, r3
 801a8a6:	f7e6 fa5d 	bl	8000d64 <__aeabi_ui2f>
 801a8aa:	4603      	mov	r3, r0
 801a8ac:	4619      	mov	r1, r3
 801a8ae:	68b8      	ldr	r0, [r7, #8]
 801a8b0:	f7e6 f9a6 	bl	8000c00 <__aeabi_fsub>
 801a8b4:	4603      	mov	r3, r0
 801a8b6:	6879      	ldr	r1, [r7, #4]
 801a8b8:	4618      	mov	r0, r3
 801a8ba:	f7e6 f9a1 	bl	8000c00 <__aeabi_fsub>
 801a8be:	4603      	mov	r3, r0
 801a8c0:	4618      	mov	r0, r3
 801a8c2:	f7e5 fe19 	bl	80004f8 <__aeabi_f2d>
 801a8c6:	4602      	mov	r2, r0
 801a8c8:	460b      	mov	r3, r1
 801a8ca:	4610      	mov	r0, r2
 801a8cc:	4619      	mov	r1, r3
 801a8ce:	f007 f873 	bl	80219b8 <floor>
 801a8d2:	4602      	mov	r2, r0
 801a8d4:	460b      	mov	r3, r1
 801a8d6:	4610      	mov	r0, r2
 801a8d8:	4619      	mov	r1, r3
 801a8da:	f7e6 f915 	bl	8000b08 <__aeabi_d2iz>
 801a8de:	4603      	mov	r3, r0
 801a8e0:	75fb      	strb	r3, [r7, #23]
 801a8e2:	f997 3017 	ldrsb.w	r3, [r7, #23]
 801a8e6:	4618      	mov	r0, r3
 801a8e8:	3718      	adds	r7, #24
 801a8ea:	46bd      	mov	sp, r7
 801a8ec:	bd80      	pop	{r7, pc}

0801a8ee <RegionCommonCountNbOfEnabledChannels>:
 801a8ee:	b590      	push	{r4, r7, lr}
 801a8f0:	b087      	sub	sp, #28
 801a8f2:	af00      	add	r7, sp, #0
 801a8f4:	60f8      	str	r0, [r7, #12]
 801a8f6:	60b9      	str	r1, [r7, #8]
 801a8f8:	607a      	str	r2, [r7, #4]
 801a8fa:	603b      	str	r3, [r7, #0]
 801a8fc:	2300      	movs	r3, #0
 801a8fe:	75fb      	strb	r3, [r7, #23]
 801a900:	2300      	movs	r3, #0
 801a902:	75bb      	strb	r3, [r7, #22]
 801a904:	2300      	movs	r3, #0
 801a906:	757b      	strb	r3, [r7, #21]
 801a908:	2300      	movs	r3, #0
 801a90a:	753b      	strb	r3, [r7, #20]
 801a90c:	e098      	b.n	801aa40 <RegionCommonCountNbOfEnabledChannels+0x152>
 801a90e:	2300      	movs	r3, #0
 801a910:	74fb      	strb	r3, [r7, #19]
 801a912:	e08b      	b.n	801aa2c <RegionCommonCountNbOfEnabledChannels+0x13e>
 801a914:	68fb      	ldr	r3, [r7, #12]
 801a916:	685a      	ldr	r2, [r3, #4]
 801a918:	7d3b      	ldrb	r3, [r7, #20]
 801a91a:	005b      	lsls	r3, r3, #1
 801a91c:	4413      	add	r3, r2
 801a91e:	881b      	ldrh	r3, [r3, #0]
 801a920:	461a      	mov	r2, r3
 801a922:	7cfb      	ldrb	r3, [r7, #19]
 801a924:	fa42 f303 	asr.w	r3, r2, r3
 801a928:	f003 0301 	and.w	r3, r3, #1
 801a92c:	2b00      	cmp	r3, #0
 801a92e:	d07a      	beq.n	801aa26 <RegionCommonCountNbOfEnabledChannels+0x138>
 801a930:	68fb      	ldr	r3, [r7, #12]
 801a932:	689a      	ldr	r2, [r3, #8]
 801a934:	7d79      	ldrb	r1, [r7, #21]
 801a936:	7cfb      	ldrb	r3, [r7, #19]
 801a938:	440b      	add	r3, r1
 801a93a:	4619      	mov	r1, r3
 801a93c:	460b      	mov	r3, r1
 801a93e:	005b      	lsls	r3, r3, #1
 801a940:	440b      	add	r3, r1
 801a942:	009b      	lsls	r3, r3, #2
 801a944:	4413      	add	r3, r2
 801a946:	681b      	ldr	r3, [r3, #0]
 801a948:	2b00      	cmp	r3, #0
 801a94a:	d067      	beq.n	801aa1c <RegionCommonCountNbOfEnabledChannels+0x12e>
 801a94c:	68fb      	ldr	r3, [r7, #12]
 801a94e:	781b      	ldrb	r3, [r3, #0]
 801a950:	f083 0301 	eor.w	r3, r3, #1
 801a954:	b2db      	uxtb	r3, r3
 801a956:	2b00      	cmp	r3, #0
 801a958:	d00d      	beq.n	801a976 <RegionCommonCountNbOfEnabledChannels+0x88>
 801a95a:	68fb      	ldr	r3, [r7, #12]
 801a95c:	8a5b      	ldrh	r3, [r3, #18]
 801a95e:	2b00      	cmp	r3, #0
 801a960:	d009      	beq.n	801a976 <RegionCommonCountNbOfEnabledChannels+0x88>
 801a962:	68fb      	ldr	r3, [r7, #12]
 801a964:	8a5b      	ldrh	r3, [r3, #18]
 801a966:	461a      	mov	r2, r3
 801a968:	7cfb      	ldrb	r3, [r7, #19]
 801a96a:	fa42 f303 	asr.w	r3, r2, r3
 801a96e:	f003 0301 	and.w	r3, r3, #1
 801a972:	2b00      	cmp	r3, #0
 801a974:	d054      	beq.n	801aa20 <RegionCommonCountNbOfEnabledChannels+0x132>
 801a976:	68fb      	ldr	r3, [r7, #12]
 801a978:	785b      	ldrb	r3, [r3, #1]
 801a97a:	b258      	sxtb	r0, r3
 801a97c:	68fb      	ldr	r3, [r7, #12]
 801a97e:	689a      	ldr	r2, [r3, #8]
 801a980:	7d79      	ldrb	r1, [r7, #21]
 801a982:	7cfb      	ldrb	r3, [r7, #19]
 801a984:	440b      	add	r3, r1
 801a986:	4619      	mov	r1, r3
 801a988:	460b      	mov	r3, r1
 801a98a:	005b      	lsls	r3, r3, #1
 801a98c:	440b      	add	r3, r1
 801a98e:	009b      	lsls	r3, r3, #2
 801a990:	4413      	add	r3, r2
 801a992:	7a1b      	ldrb	r3, [r3, #8]
 801a994:	f343 0303 	sbfx	r3, r3, #0, #4
 801a998:	b25b      	sxtb	r3, r3
 801a99a:	461c      	mov	r4, r3
 801a99c:	68fb      	ldr	r3, [r7, #12]
 801a99e:	689a      	ldr	r2, [r3, #8]
 801a9a0:	7d79      	ldrb	r1, [r7, #21]
 801a9a2:	7cfb      	ldrb	r3, [r7, #19]
 801a9a4:	440b      	add	r3, r1
 801a9a6:	4619      	mov	r1, r3
 801a9a8:	460b      	mov	r3, r1
 801a9aa:	005b      	lsls	r3, r3, #1
 801a9ac:	440b      	add	r3, r1
 801a9ae:	009b      	lsls	r3, r3, #2
 801a9b0:	4413      	add	r3, r2
 801a9b2:	7a1b      	ldrb	r3, [r3, #8]
 801a9b4:	f343 1303 	sbfx	r3, r3, #4, #4
 801a9b8:	b25b      	sxtb	r3, r3
 801a9ba:	461a      	mov	r2, r3
 801a9bc:	4621      	mov	r1, r4
 801a9be:	f7ff fccf 	bl	801a360 <RegionCommonValueInRange>
 801a9c2:	4603      	mov	r3, r0
 801a9c4:	2b00      	cmp	r3, #0
 801a9c6:	d02d      	beq.n	801aa24 <RegionCommonCountNbOfEnabledChannels+0x136>
 801a9c8:	68fb      	ldr	r3, [r7, #12]
 801a9ca:	68da      	ldr	r2, [r3, #12]
 801a9cc:	68fb      	ldr	r3, [r7, #12]
 801a9ce:	6899      	ldr	r1, [r3, #8]
 801a9d0:	7d78      	ldrb	r0, [r7, #21]
 801a9d2:	7cfb      	ldrb	r3, [r7, #19]
 801a9d4:	4403      	add	r3, r0
 801a9d6:	4618      	mov	r0, r3
 801a9d8:	4603      	mov	r3, r0
 801a9da:	005b      	lsls	r3, r3, #1
 801a9dc:	4403      	add	r3, r0
 801a9de:	009b      	lsls	r3, r3, #2
 801a9e0:	440b      	add	r3, r1
 801a9e2:	7a5b      	ldrb	r3, [r3, #9]
 801a9e4:	4619      	mov	r1, r3
 801a9e6:	460b      	mov	r3, r1
 801a9e8:	009b      	lsls	r3, r3, #2
 801a9ea:	440b      	add	r3, r1
 801a9ec:	009b      	lsls	r3, r3, #2
 801a9ee:	4413      	add	r3, r2
 801a9f0:	7c1b      	ldrb	r3, [r3, #16]
 801a9f2:	f083 0301 	eor.w	r3, r3, #1
 801a9f6:	b2db      	uxtb	r3, r3
 801a9f8:	2b00      	cmp	r3, #0
 801a9fa:	d003      	beq.n	801aa04 <RegionCommonCountNbOfEnabledChannels+0x116>
 801a9fc:	7dbb      	ldrb	r3, [r7, #22]
 801a9fe:	3301      	adds	r3, #1
 801aa00:	75bb      	strb	r3, [r7, #22]
 801aa02:	e010      	b.n	801aa26 <RegionCommonCountNbOfEnabledChannels+0x138>
 801aa04:	7dfb      	ldrb	r3, [r7, #23]
 801aa06:	1c5a      	adds	r2, r3, #1
 801aa08:	75fa      	strb	r2, [r7, #23]
 801aa0a:	461a      	mov	r2, r3
 801aa0c:	68bb      	ldr	r3, [r7, #8]
 801aa0e:	4413      	add	r3, r2
 801aa10:	7d79      	ldrb	r1, [r7, #21]
 801aa12:	7cfa      	ldrb	r2, [r7, #19]
 801aa14:	440a      	add	r2, r1
 801aa16:	b2d2      	uxtb	r2, r2
 801aa18:	701a      	strb	r2, [r3, #0]
 801aa1a:	e004      	b.n	801aa26 <RegionCommonCountNbOfEnabledChannels+0x138>
 801aa1c:	bf00      	nop
 801aa1e:	e002      	b.n	801aa26 <RegionCommonCountNbOfEnabledChannels+0x138>
 801aa20:	bf00      	nop
 801aa22:	e000      	b.n	801aa26 <RegionCommonCountNbOfEnabledChannels+0x138>
 801aa24:	bf00      	nop
 801aa26:	7cfb      	ldrb	r3, [r7, #19]
 801aa28:	3301      	adds	r3, #1
 801aa2a:	74fb      	strb	r3, [r7, #19]
 801aa2c:	7cfb      	ldrb	r3, [r7, #19]
 801aa2e:	2b0f      	cmp	r3, #15
 801aa30:	f67f af70 	bls.w	801a914 <RegionCommonCountNbOfEnabledChannels+0x26>
 801aa34:	7d7b      	ldrb	r3, [r7, #21]
 801aa36:	3310      	adds	r3, #16
 801aa38:	757b      	strb	r3, [r7, #21]
 801aa3a:	7d3b      	ldrb	r3, [r7, #20]
 801aa3c:	3301      	adds	r3, #1
 801aa3e:	753b      	strb	r3, [r7, #20]
 801aa40:	7d7b      	ldrb	r3, [r7, #21]
 801aa42:	b29a      	uxth	r2, r3
 801aa44:	68fb      	ldr	r3, [r7, #12]
 801aa46:	8a1b      	ldrh	r3, [r3, #16]
 801aa48:	429a      	cmp	r2, r3
 801aa4a:	f4ff af60 	bcc.w	801a90e <RegionCommonCountNbOfEnabledChannels+0x20>
 801aa4e:	687b      	ldr	r3, [r7, #4]
 801aa50:	7dfa      	ldrb	r2, [r7, #23]
 801aa52:	701a      	strb	r2, [r3, #0]
 801aa54:	683b      	ldr	r3, [r7, #0]
 801aa56:	7dba      	ldrb	r2, [r7, #22]
 801aa58:	701a      	strb	r2, [r3, #0]
 801aa5a:	bf00      	nop
 801aa5c:	371c      	adds	r7, #28
 801aa5e:	46bd      	mov	sp, r7
 801aa60:	bd90      	pop	{r4, r7, pc}

0801aa62 <RegionCommonIdentifyChannels>:
 801aa62:	b5f0      	push	{r4, r5, r6, r7, lr}
 801aa64:	b08b      	sub	sp, #44	; 0x2c
 801aa66:	af04      	add	r7, sp, #16
 801aa68:	60f8      	str	r0, [r7, #12]
 801aa6a:	60b9      	str	r1, [r7, #8]
 801aa6c:	607a      	str	r2, [r7, #4]
 801aa6e:	603b      	str	r3, [r7, #0]
 801aa70:	68fb      	ldr	r3, [r7, #12]
 801aa72:	685b      	ldr	r3, [r3, #4]
 801aa74:	4618      	mov	r0, r3
 801aa76:	f006 fc5d 	bl	8021334 <UTIL_TIMER_GetElapsedTime>
 801aa7a:	6178      	str	r0, [r7, #20]
 801aa7c:	68fb      	ldr	r3, [r7, #12]
 801aa7e:	681a      	ldr	r2, [r3, #0]
 801aa80:	697b      	ldr	r3, [r7, #20]
 801aa82:	1ad2      	subs	r2, r2, r3
 801aa84:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 801aa86:	601a      	str	r2, [r3, #0]
 801aa88:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 801aa8a:	2201      	movs	r2, #1
 801aa8c:	701a      	strb	r2, [r3, #0]
 801aa8e:	683b      	ldr	r3, [r7, #0]
 801aa90:	2200      	movs	r2, #0
 801aa92:	701a      	strb	r2, [r3, #0]
 801aa94:	68fb      	ldr	r3, [r7, #12]
 801aa96:	685b      	ldr	r3, [r3, #4]
 801aa98:	2b00      	cmp	r3, #0
 801aa9a:	d004      	beq.n	801aaa6 <RegionCommonIdentifyChannels+0x44>
 801aa9c:	68fb      	ldr	r3, [r7, #12]
 801aa9e:	681b      	ldr	r3, [r3, #0]
 801aaa0:	697a      	ldr	r2, [r7, #20]
 801aaa2:	429a      	cmp	r2, r3
 801aaa4:	d32b      	bcc.n	801aafe <RegionCommonIdentifyChannels+0x9c>
 801aaa6:	68bb      	ldr	r3, [r7, #8]
 801aaa8:	2200      	movs	r2, #0
 801aaaa:	601a      	str	r2, [r3, #0]
 801aaac:	68fb      	ldr	r3, [r7, #12]
 801aaae:	69db      	ldr	r3, [r3, #28]
 801aab0:	781c      	ldrb	r4, [r3, #0]
 801aab2:	68fb      	ldr	r3, [r7, #12]
 801aab4:	69db      	ldr	r3, [r3, #28]
 801aab6:	68dd      	ldr	r5, [r3, #12]
 801aab8:	68fb      	ldr	r3, [r7, #12]
 801aaba:	7a5e      	ldrb	r6, [r3, #9]
 801aabc:	68fb      	ldr	r3, [r7, #12]
 801aabe:	f893 c008 	ldrb.w	ip, [r3, #8]
 801aac2:	68fb      	ldr	r3, [r7, #12]
 801aac4:	7d1b      	ldrb	r3, [r3, #20]
 801aac6:	68fa      	ldr	r2, [r7, #12]
 801aac8:	6992      	ldr	r2, [r2, #24]
 801aaca:	9203      	str	r2, [sp, #12]
 801aacc:	68fa      	ldr	r2, [r7, #12]
 801aace:	f10d 0e04 	add.w	lr, sp, #4
 801aad2:	320c      	adds	r2, #12
 801aad4:	e892 0003 	ldmia.w	r2, {r0, r1}
 801aad8:	e88e 0003 	stmia.w	lr, {r0, r1}
 801aadc:	9300      	str	r3, [sp, #0]
 801aade:	4663      	mov	r3, ip
 801aae0:	4632      	mov	r2, r6
 801aae2:	4629      	mov	r1, r5
 801aae4:	4620      	mov	r0, r4
 801aae6:	f7ff fd0c 	bl	801a502 <RegionCommonUpdateBandTimeOff>
 801aaea:	4602      	mov	r2, r0
 801aaec:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 801aaee:	601a      	str	r2, [r3, #0]
 801aaf0:	68fb      	ldr	r3, [r7, #12]
 801aaf2:	69d8      	ldr	r0, [r3, #28]
 801aaf4:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 801aaf6:	683a      	ldr	r2, [r7, #0]
 801aaf8:	6879      	ldr	r1, [r7, #4]
 801aafa:	f7ff fef8 	bl	801a8ee <RegionCommonCountNbOfEnabledChannels>
 801aafe:	683b      	ldr	r3, [r7, #0]
 801ab00:	781b      	ldrb	r3, [r3, #0]
 801ab02:	2b00      	cmp	r3, #0
 801ab04:	d004      	beq.n	801ab10 <RegionCommonIdentifyChannels+0xae>
 801ab06:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 801ab08:	2200      	movs	r2, #0
 801ab0a:	601a      	str	r2, [r3, #0]
 801ab0c:	2300      	movs	r3, #0
 801ab0e:	e006      	b.n	801ab1e <RegionCommonIdentifyChannels+0xbc>
 801ab10:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 801ab12:	781b      	ldrb	r3, [r3, #0]
 801ab14:	2b00      	cmp	r3, #0
 801ab16:	d001      	beq.n	801ab1c <RegionCommonIdentifyChannels+0xba>
 801ab18:	230b      	movs	r3, #11
 801ab1a:	e000      	b.n	801ab1e <RegionCommonIdentifyChannels+0xbc>
 801ab1c:	230c      	movs	r3, #12
 801ab1e:	4618      	mov	r0, r3
 801ab20:	371c      	adds	r7, #28
 801ab22:	46bd      	mov	sp, r7
 801ab24:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

0801ab28 <RegionCommonRxConfigPrint>:
 801ab28:	b5b0      	push	{r4, r5, r7, lr}
 801ab2a:	b08c      	sub	sp, #48	; 0x30
 801ab2c:	af04      	add	r7, sp, #16
 801ab2e:	4603      	mov	r3, r0
 801ab30:	6039      	str	r1, [r7, #0]
 801ab32:	71fb      	strb	r3, [r7, #7]
 801ab34:	4613      	mov	r3, r2
 801ab36:	71bb      	strb	r3, [r7, #6]
 801ab38:	4b17      	ldr	r3, [pc, #92]	; (801ab98 <RegionCommonRxConfigPrint+0x70>)
 801ab3a:	f107 0408 	add.w	r4, r7, #8
 801ab3e:	461d      	mov	r5, r3
 801ab40:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 801ab42:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 801ab44:	e895 0003 	ldmia.w	r5, {r0, r1}
 801ab48:	e884 0003 	stmia.w	r4, {r0, r1}
 801ab4c:	79fb      	ldrb	r3, [r7, #7]
 801ab4e:	2b05      	cmp	r3, #5
 801ab50:	d813      	bhi.n	801ab7a <RegionCommonRxConfigPrint+0x52>
 801ab52:	79fb      	ldrb	r3, [r7, #7]
 801ab54:	009b      	lsls	r3, r3, #2
 801ab56:	f107 0220 	add.w	r2, r7, #32
 801ab5a:	4413      	add	r3, r2
 801ab5c:	f853 3c18 	ldr.w	r3, [r3, #-24]
 801ab60:	f997 2006 	ldrsb.w	r2, [r7, #6]
 801ab64:	9202      	str	r2, [sp, #8]
 801ab66:	683a      	ldr	r2, [r7, #0]
 801ab68:	9201      	str	r2, [sp, #4]
 801ab6a:	9300      	str	r3, [sp, #0]
 801ab6c:	4b0b      	ldr	r3, [pc, #44]	; (801ab9c <RegionCommonRxConfigPrint+0x74>)
 801ab6e:	2201      	movs	r2, #1
 801ab70:	2100      	movs	r1, #0
 801ab72:	2002      	movs	r0, #2
 801ab74:	f006 fcaa 	bl	80214cc <UTIL_ADV_TRACE_COND_FSend>
 801ab78:	e00a      	b.n	801ab90 <RegionCommonRxConfigPrint+0x68>
 801ab7a:	f997 3006 	ldrsb.w	r3, [r7, #6]
 801ab7e:	9301      	str	r3, [sp, #4]
 801ab80:	683b      	ldr	r3, [r7, #0]
 801ab82:	9300      	str	r3, [sp, #0]
 801ab84:	4b06      	ldr	r3, [pc, #24]	; (801aba0 <RegionCommonRxConfigPrint+0x78>)
 801ab86:	2201      	movs	r2, #1
 801ab88:	2100      	movs	r1, #0
 801ab8a:	2002      	movs	r0, #2
 801ab8c:	f006 fc9e 	bl	80214cc <UTIL_ADV_TRACE_COND_FSend>
 801ab90:	bf00      	nop
 801ab92:	3720      	adds	r7, #32
 801ab94:	46bd      	mov	sp, r7
 801ab96:	bdb0      	pop	{r4, r5, r7, pc}
 801ab98:	08026180 	.word	0x08026180
 801ab9c:	08026144 	.word	0x08026144
 801aba0:	08026164 	.word	0x08026164

0801aba4 <RegionCommonTxConfigPrint>:
 801aba4:	b580      	push	{r7, lr}
 801aba6:	b084      	sub	sp, #16
 801aba8:	af02      	add	r7, sp, #8
 801abaa:	6078      	str	r0, [r7, #4]
 801abac:	460b      	mov	r3, r1
 801abae:	70fb      	strb	r3, [r7, #3]
 801abb0:	f997 3003 	ldrsb.w	r3, [r7, #3]
 801abb4:	9301      	str	r3, [sp, #4]
 801abb6:	687b      	ldr	r3, [r7, #4]
 801abb8:	9300      	str	r3, [sp, #0]
 801abba:	4b05      	ldr	r3, [pc, #20]	; (801abd0 <RegionCommonTxConfigPrint+0x2c>)
 801abbc:	2201      	movs	r2, #1
 801abbe:	2100      	movs	r1, #0
 801abc0:	2002      	movs	r0, #2
 801abc2:	f006 fc83 	bl	80214cc <UTIL_ADV_TRACE_COND_FSend>
 801abc6:	bf00      	nop
 801abc8:	3708      	adds	r7, #8
 801abca:	46bd      	mov	sp, r7
 801abcc:	bd80      	pop	{r7, pc}
 801abce:	bf00      	nop
 801abd0:	08026198 	.word	0x08026198

0801abd4 <GetNextLowerTxDr>:
 801abd4:	b480      	push	{r7}
 801abd6:	b085      	sub	sp, #20
 801abd8:	af00      	add	r7, sp, #0
 801abda:	4603      	mov	r3, r0
 801abdc:	460a      	mov	r2, r1
 801abde:	71fb      	strb	r3, [r7, #7]
 801abe0:	4613      	mov	r3, r2
 801abe2:	71bb      	strb	r3, [r7, #6]
 801abe4:	2300      	movs	r3, #0
 801abe6:	73fb      	strb	r3, [r7, #15]
 801abe8:	f997 2007 	ldrsb.w	r2, [r7, #7]
 801abec:	f997 3006 	ldrsb.w	r3, [r7, #6]
 801abf0:	429a      	cmp	r2, r3
 801abf2:	d102      	bne.n	801abfa <GetNextLowerTxDr+0x26>
 801abf4:	79bb      	ldrb	r3, [r7, #6]
 801abf6:	73fb      	strb	r3, [r7, #15]
 801abf8:	e002      	b.n	801ac00 <GetNextLowerTxDr+0x2c>
 801abfa:	79fb      	ldrb	r3, [r7, #7]
 801abfc:	3b01      	subs	r3, #1
 801abfe:	73fb      	strb	r3, [r7, #15]
 801ac00:	f997 300f 	ldrsb.w	r3, [r7, #15]
 801ac04:	4618      	mov	r0, r3
 801ac06:	3714      	adds	r7, #20
 801ac08:	46bd      	mov	sp, r7
 801ac0a:	bc80      	pop	{r7}
 801ac0c:	4770      	bx	lr
	...

0801ac10 <GetBandwidth>:
 801ac10:	b480      	push	{r7}
 801ac12:	b083      	sub	sp, #12
 801ac14:	af00      	add	r7, sp, #0
 801ac16:	6078      	str	r0, [r7, #4]
 801ac18:	4a09      	ldr	r2, [pc, #36]	; (801ac40 <GetBandwidth+0x30>)
 801ac1a:	687b      	ldr	r3, [r7, #4]
 801ac1c:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 801ac20:	4a08      	ldr	r2, [pc, #32]	; (801ac44 <GetBandwidth+0x34>)
 801ac22:	4293      	cmp	r3, r2
 801ac24:	d004      	beq.n	801ac30 <GetBandwidth+0x20>
 801ac26:	4a08      	ldr	r2, [pc, #32]	; (801ac48 <GetBandwidth+0x38>)
 801ac28:	4293      	cmp	r3, r2
 801ac2a:	d003      	beq.n	801ac34 <GetBandwidth+0x24>
 801ac2c:	2300      	movs	r3, #0
 801ac2e:	e002      	b.n	801ac36 <GetBandwidth+0x26>
 801ac30:	2301      	movs	r3, #1
 801ac32:	e000      	b.n	801ac36 <GetBandwidth+0x26>
 801ac34:	2302      	movs	r3, #2
 801ac36:	4618      	mov	r0, r3
 801ac38:	370c      	adds	r7, #12
 801ac3a:	46bd      	mov	sp, r7
 801ac3c:	bc80      	pop	{r7}
 801ac3e:	4770      	bx	lr
 801ac40:	08026788 	.word	0x08026788
 801ac44:	0003d090 	.word	0x0003d090
 801ac48:	0007a120 	.word	0x0007a120

0801ac4c <LimitTxPower>:
 801ac4c:	b480      	push	{r7}
 801ac4e:	b085      	sub	sp, #20
 801ac50:	af00      	add	r7, sp, #0
 801ac52:	603b      	str	r3, [r7, #0]
 801ac54:	4603      	mov	r3, r0
 801ac56:	71fb      	strb	r3, [r7, #7]
 801ac58:	460b      	mov	r3, r1
 801ac5a:	71bb      	strb	r3, [r7, #6]
 801ac5c:	4613      	mov	r3, r2
 801ac5e:	717b      	strb	r3, [r7, #5]
 801ac60:	79fb      	ldrb	r3, [r7, #7]
 801ac62:	73fb      	strb	r3, [r7, #15]
 801ac64:	f997 2006 	ldrsb.w	r2, [r7, #6]
 801ac68:	f997 3007 	ldrsb.w	r3, [r7, #7]
 801ac6c:	4293      	cmp	r3, r2
 801ac6e:	bfb8      	it	lt
 801ac70:	4613      	movlt	r3, r2
 801ac72:	73fb      	strb	r3, [r7, #15]
 801ac74:	f997 300f 	ldrsb.w	r3, [r7, #15]
 801ac78:	4618      	mov	r0, r3
 801ac7a:	3714      	adds	r7, #20
 801ac7c:	46bd      	mov	sp, r7
 801ac7e:	bc80      	pop	{r7}
 801ac80:	4770      	bx	lr
	...

0801ac84 <VerifyRfFreq>:
 801ac84:	b580      	push	{r7, lr}
 801ac86:	b082      	sub	sp, #8
 801ac88:	af00      	add	r7, sp, #0
 801ac8a:	6078      	str	r0, [r7, #4]
 801ac8c:	6039      	str	r1, [r7, #0]
 801ac8e:	4b2d      	ldr	r3, [pc, #180]	; (801ad44 <VerifyRfFreq+0xc0>)
 801ac90:	6a1b      	ldr	r3, [r3, #32]
 801ac92:	6878      	ldr	r0, [r7, #4]
 801ac94:	4798      	blx	r3
 801ac96:	4603      	mov	r3, r0
 801ac98:	f083 0301 	eor.w	r3, r3, #1
 801ac9c:	b2db      	uxtb	r3, r3
 801ac9e:	2b00      	cmp	r3, #0
 801aca0:	d001      	beq.n	801aca6 <VerifyRfFreq+0x22>
 801aca2:	2300      	movs	r3, #0
 801aca4:	e04a      	b.n	801ad3c <VerifyRfFreq+0xb8>
 801aca6:	687b      	ldr	r3, [r7, #4]
 801aca8:	4a27      	ldr	r2, [pc, #156]	; (801ad48 <VerifyRfFreq+0xc4>)
 801acaa:	4293      	cmp	r3, r2
 801acac:	d307      	bcc.n	801acbe <VerifyRfFreq+0x3a>
 801acae:	687b      	ldr	r3, [r7, #4]
 801acb0:	4a26      	ldr	r2, [pc, #152]	; (801ad4c <VerifyRfFreq+0xc8>)
 801acb2:	4293      	cmp	r3, r2
 801acb4:	d803      	bhi.n	801acbe <VerifyRfFreq+0x3a>
 801acb6:	683b      	ldr	r3, [r7, #0]
 801acb8:	2202      	movs	r2, #2
 801acba:	701a      	strb	r2, [r3, #0]
 801acbc:	e03d      	b.n	801ad3a <VerifyRfFreq+0xb6>
 801acbe:	687b      	ldr	r3, [r7, #4]
 801acc0:	4a22      	ldr	r2, [pc, #136]	; (801ad4c <VerifyRfFreq+0xc8>)
 801acc2:	4293      	cmp	r3, r2
 801acc4:	d907      	bls.n	801acd6 <VerifyRfFreq+0x52>
 801acc6:	687b      	ldr	r3, [r7, #4]
 801acc8:	4a21      	ldr	r2, [pc, #132]	; (801ad50 <VerifyRfFreq+0xcc>)
 801acca:	4293      	cmp	r3, r2
 801accc:	d803      	bhi.n	801acd6 <VerifyRfFreq+0x52>
 801acce:	683b      	ldr	r3, [r7, #0]
 801acd0:	2200      	movs	r2, #0
 801acd2:	701a      	strb	r2, [r3, #0]
 801acd4:	e031      	b.n	801ad3a <VerifyRfFreq+0xb6>
 801acd6:	687b      	ldr	r3, [r7, #4]
 801acd8:	4a1d      	ldr	r2, [pc, #116]	; (801ad50 <VerifyRfFreq+0xcc>)
 801acda:	4293      	cmp	r3, r2
 801acdc:	d907      	bls.n	801acee <VerifyRfFreq+0x6a>
 801acde:	687b      	ldr	r3, [r7, #4]
 801ace0:	4a1c      	ldr	r2, [pc, #112]	; (801ad54 <VerifyRfFreq+0xd0>)
 801ace2:	4293      	cmp	r3, r2
 801ace4:	d803      	bhi.n	801acee <VerifyRfFreq+0x6a>
 801ace6:	683b      	ldr	r3, [r7, #0]
 801ace8:	2201      	movs	r2, #1
 801acea:	701a      	strb	r2, [r3, #0]
 801acec:	e025      	b.n	801ad3a <VerifyRfFreq+0xb6>
 801acee:	687b      	ldr	r3, [r7, #4]
 801acf0:	4a19      	ldr	r2, [pc, #100]	; (801ad58 <VerifyRfFreq+0xd4>)
 801acf2:	4293      	cmp	r3, r2
 801acf4:	d907      	bls.n	801ad06 <VerifyRfFreq+0x82>
 801acf6:	687b      	ldr	r3, [r7, #4]
 801acf8:	4a18      	ldr	r2, [pc, #96]	; (801ad5c <VerifyRfFreq+0xd8>)
 801acfa:	4293      	cmp	r3, r2
 801acfc:	d803      	bhi.n	801ad06 <VerifyRfFreq+0x82>
 801acfe:	683b      	ldr	r3, [r7, #0]
 801ad00:	2205      	movs	r2, #5
 801ad02:	701a      	strb	r2, [r3, #0]
 801ad04:	e019      	b.n	801ad3a <VerifyRfFreq+0xb6>
 801ad06:	687b      	ldr	r3, [r7, #4]
 801ad08:	4a15      	ldr	r2, [pc, #84]	; (801ad60 <VerifyRfFreq+0xdc>)
 801ad0a:	4293      	cmp	r3, r2
 801ad0c:	d907      	bls.n	801ad1e <VerifyRfFreq+0x9a>
 801ad0e:	687b      	ldr	r3, [r7, #4]
 801ad10:	4a14      	ldr	r2, [pc, #80]	; (801ad64 <VerifyRfFreq+0xe0>)
 801ad12:	4293      	cmp	r3, r2
 801ad14:	d803      	bhi.n	801ad1e <VerifyRfFreq+0x9a>
 801ad16:	683b      	ldr	r3, [r7, #0]
 801ad18:	2203      	movs	r2, #3
 801ad1a:	701a      	strb	r2, [r3, #0]
 801ad1c:	e00d      	b.n	801ad3a <VerifyRfFreq+0xb6>
 801ad1e:	687b      	ldr	r3, [r7, #4]
 801ad20:	4a11      	ldr	r2, [pc, #68]	; (801ad68 <VerifyRfFreq+0xe4>)
 801ad22:	4293      	cmp	r3, r2
 801ad24:	d307      	bcc.n	801ad36 <VerifyRfFreq+0xb2>
 801ad26:	687b      	ldr	r3, [r7, #4]
 801ad28:	4a10      	ldr	r2, [pc, #64]	; (801ad6c <VerifyRfFreq+0xe8>)
 801ad2a:	4293      	cmp	r3, r2
 801ad2c:	d803      	bhi.n	801ad36 <VerifyRfFreq+0xb2>
 801ad2e:	683b      	ldr	r3, [r7, #0]
 801ad30:	2204      	movs	r2, #4
 801ad32:	701a      	strb	r2, [r3, #0]
 801ad34:	e001      	b.n	801ad3a <VerifyRfFreq+0xb6>
 801ad36:	2300      	movs	r3, #0
 801ad38:	e000      	b.n	801ad3c <VerifyRfFreq+0xb8>
 801ad3a:	2301      	movs	r3, #1
 801ad3c:	4618      	mov	r0, r3
 801ad3e:	3708      	adds	r7, #8
 801ad40:	46bd      	mov	sp, r7
 801ad42:	bd80      	pop	{r7, pc}
 801ad44:	0802683c 	.word	0x0802683c
 801ad48:	337055c0 	.word	0x337055c0
 801ad4c:	338eda3f 	.word	0x338eda3f
 801ad50:	33bca100 	.word	0x33bca100
 801ad54:	33c5c8c0 	.word	0x33c5c8c0
 801ad58:	33c74f5f 	.word	0x33c74f5f
 801ad5c:	33cef080 	.word	0x33cef080
 801ad60:	33d1fdbf 	.word	0x33d1fdbf
 801ad64:	33d5ce50 	.word	0x33d5ce50
 801ad68:	33d691a0 	.word	0x33d691a0
 801ad6c:	33db2580 	.word	0x33db2580

0801ad70 <GetTimeOnAir>:
 801ad70:	b590      	push	{r4, r7, lr}
 801ad72:	b08b      	sub	sp, #44	; 0x2c
 801ad74:	af04      	add	r7, sp, #16
 801ad76:	4603      	mov	r3, r0
 801ad78:	460a      	mov	r2, r1
 801ad7a:	71fb      	strb	r3, [r7, #7]
 801ad7c:	4613      	mov	r3, r2
 801ad7e:	80bb      	strh	r3, [r7, #4]
 801ad80:	f997 3007 	ldrsb.w	r3, [r7, #7]
 801ad84:	4a1f      	ldr	r2, [pc, #124]	; (801ae04 <GetTimeOnAir+0x94>)
 801ad86:	5cd3      	ldrb	r3, [r2, r3]
 801ad88:	74fb      	strb	r3, [r7, #19]
 801ad8a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 801ad8e:	4618      	mov	r0, r3
 801ad90:	f7ff ff3e 	bl	801ac10 <GetBandwidth>
 801ad94:	60f8      	str	r0, [r7, #12]
 801ad96:	2300      	movs	r3, #0
 801ad98:	617b      	str	r3, [r7, #20]
 801ad9a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 801ad9e:	2b07      	cmp	r3, #7
 801ada0:	d118      	bne.n	801add4 <GetTimeOnAir+0x64>
 801ada2:	4b19      	ldr	r3, [pc, #100]	; (801ae08 <GetTimeOnAir+0x98>)
 801ada4:	6a5c      	ldr	r4, [r3, #36]	; 0x24
 801ada6:	f997 3013 	ldrsb.w	r3, [r7, #19]
 801adaa:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 801adae:	fb02 f303 	mul.w	r3, r2, r3
 801adb2:	4619      	mov	r1, r3
 801adb4:	88bb      	ldrh	r3, [r7, #4]
 801adb6:	b2db      	uxtb	r3, r3
 801adb8:	2201      	movs	r2, #1
 801adba:	9203      	str	r2, [sp, #12]
 801adbc:	9302      	str	r3, [sp, #8]
 801adbe:	2300      	movs	r3, #0
 801adc0:	9301      	str	r3, [sp, #4]
 801adc2:	2305      	movs	r3, #5
 801adc4:	9300      	str	r3, [sp, #0]
 801adc6:	2300      	movs	r3, #0
 801adc8:	460a      	mov	r2, r1
 801adca:	68f9      	ldr	r1, [r7, #12]
 801adcc:	2000      	movs	r0, #0
 801adce:	47a0      	blx	r4
 801add0:	6178      	str	r0, [r7, #20]
 801add2:	e011      	b.n	801adf8 <GetTimeOnAir+0x88>
 801add4:	4b0c      	ldr	r3, [pc, #48]	; (801ae08 <GetTimeOnAir+0x98>)
 801add6:	6a5c      	ldr	r4, [r3, #36]	; 0x24
 801add8:	f997 2013 	ldrsb.w	r2, [r7, #19]
 801addc:	88bb      	ldrh	r3, [r7, #4]
 801adde:	b2db      	uxtb	r3, r3
 801ade0:	2101      	movs	r1, #1
 801ade2:	9103      	str	r1, [sp, #12]
 801ade4:	9302      	str	r3, [sp, #8]
 801ade6:	2300      	movs	r3, #0
 801ade8:	9301      	str	r3, [sp, #4]
 801adea:	2308      	movs	r3, #8
 801adec:	9300      	str	r3, [sp, #0]
 801adee:	2301      	movs	r3, #1
 801adf0:	68f9      	ldr	r1, [r7, #12]
 801adf2:	2001      	movs	r0, #1
 801adf4:	47a0      	blx	r4
 801adf6:	6178      	str	r0, [r7, #20]
 801adf8:	697b      	ldr	r3, [r7, #20]
 801adfa:	4618      	mov	r0, r3
 801adfc:	371c      	adds	r7, #28
 801adfe:	46bd      	mov	sp, r7
 801ae00:	bd90      	pop	{r4, r7, pc}
 801ae02:	bf00      	nop
 801ae04:	08026780 	.word	0x08026780
 801ae08:	0802683c 	.word	0x0802683c

0801ae0c <RegionEU868GetPhyParam>:
 801ae0c:	b580      	push	{r7, lr}
 801ae0e:	b084      	sub	sp, #16
 801ae10:	af00      	add	r7, sp, #0
 801ae12:	6078      	str	r0, [r7, #4]
 801ae14:	2300      	movs	r3, #0
 801ae16:	60bb      	str	r3, [r7, #8]
 801ae18:	687b      	ldr	r3, [r7, #4]
 801ae1a:	781b      	ldrb	r3, [r3, #0]
 801ae1c:	3b01      	subs	r3, #1
 801ae1e:	2b38      	cmp	r3, #56	; 0x38
 801ae20:	f200 810d 	bhi.w	801b03e <RegionEU868GetPhyParam+0x232>
 801ae24:	a201      	add	r2, pc, #4	; (adr r2, 801ae2c <RegionEU868GetPhyParam+0x20>)
 801ae26:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 801ae2a:	bf00      	nop
 801ae2c:	0801af11 	.word	0x0801af11
 801ae30:	0801af17 	.word	0x0801af17
 801ae34:	0801b03f 	.word	0x0801b03f
 801ae38:	0801b03f 	.word	0x0801b03f
 801ae3c:	0801b03f 	.word	0x0801b03f
 801ae40:	0801af1d 	.word	0x0801af1d
 801ae44:	0801b03f 	.word	0x0801b03f
 801ae48:	0801af37 	.word	0x0801af37
 801ae4c:	0801b03f 	.word	0x0801b03f
 801ae50:	0801af3d 	.word	0x0801af3d
 801ae54:	0801af43 	.word	0x0801af43
 801ae58:	0801af49 	.word	0x0801af49
 801ae5c:	0801af4f 	.word	0x0801af4f
 801ae60:	0801af5f 	.word	0x0801af5f
 801ae64:	0801af6f 	.word	0x0801af6f
 801ae68:	0801af75 	.word	0x0801af75
 801ae6c:	0801af7d 	.word	0x0801af7d
 801ae70:	0801af85 	.word	0x0801af85
 801ae74:	0801af8d 	.word	0x0801af8d
 801ae78:	0801af95 	.word	0x0801af95
 801ae7c:	0801af9d 	.word	0x0801af9d
 801ae80:	0801afa5 	.word	0x0801afa5
 801ae84:	0801afb9 	.word	0x0801afb9
 801ae88:	0801afbf 	.word	0x0801afbf
 801ae8c:	0801afc5 	.word	0x0801afc5
 801ae90:	0801afcb 	.word	0x0801afcb
 801ae94:	0801afd1 	.word	0x0801afd1
 801ae98:	0801afd7 	.word	0x0801afd7
 801ae9c:	0801afdd 	.word	0x0801afdd
 801aea0:	0801afe3 	.word	0x0801afe3
 801aea4:	0801afe3 	.word	0x0801afe3
 801aea8:	0801afe9 	.word	0x0801afe9
 801aeac:	0801aff1 	.word	0x0801aff1
 801aeb0:	0801af23 	.word	0x0801af23
 801aeb4:	0801b03f 	.word	0x0801b03f
 801aeb8:	0801b03f 	.word	0x0801b03f
 801aebc:	0801b03f 	.word	0x0801b03f
 801aec0:	0801b03f 	.word	0x0801b03f
 801aec4:	0801b03f 	.word	0x0801b03f
 801aec8:	0801b03f 	.word	0x0801b03f
 801aecc:	0801b03f 	.word	0x0801b03f
 801aed0:	0801b03f 	.word	0x0801b03f
 801aed4:	0801b03f 	.word	0x0801b03f
 801aed8:	0801b03f 	.word	0x0801b03f
 801aedc:	0801b03f 	.word	0x0801b03f
 801aee0:	0801b03f 	.word	0x0801b03f
 801aee4:	0801b03f 	.word	0x0801b03f
 801aee8:	0801aff7 	.word	0x0801aff7
 801aeec:	0801affd 	.word	0x0801affd
 801aef0:	0801b00b 	.word	0x0801b00b
 801aef4:	0801b03f 	.word	0x0801b03f
 801aef8:	0801b03f 	.word	0x0801b03f
 801aefc:	0801b011 	.word	0x0801b011
 801af00:	0801b017 	.word	0x0801b017
 801af04:	0801b03f 	.word	0x0801b03f
 801af08:	0801b01d 	.word	0x0801b01d
 801af0c:	0801b02d 	.word	0x0801b02d
 801af10:	2300      	movs	r3, #0
 801af12:	60bb      	str	r3, [r7, #8]
 801af14:	e094      	b.n	801b040 <RegionEU868GetPhyParam+0x234>
 801af16:	2300      	movs	r3, #0
 801af18:	60bb      	str	r3, [r7, #8]
 801af1a:	e091      	b.n	801b040 <RegionEU868GetPhyParam+0x234>
 801af1c:	2300      	movs	r3, #0
 801af1e:	60bb      	str	r3, [r7, #8]
 801af20:	e08e      	b.n	801b040 <RegionEU868GetPhyParam+0x234>
 801af22:	687b      	ldr	r3, [r7, #4]
 801af24:	f993 3001 	ldrsb.w	r3, [r3, #1]
 801af28:	2100      	movs	r1, #0
 801af2a:	4618      	mov	r0, r3
 801af2c:	f7ff fe52 	bl	801abd4 <GetNextLowerTxDr>
 801af30:	4603      	mov	r3, r0
 801af32:	60bb      	str	r3, [r7, #8]
 801af34:	e084      	b.n	801b040 <RegionEU868GetPhyParam+0x234>
 801af36:	2300      	movs	r3, #0
 801af38:	60bb      	str	r3, [r7, #8]
 801af3a:	e081      	b.n	801b040 <RegionEU868GetPhyParam+0x234>
 801af3c:	2300      	movs	r3, #0
 801af3e:	60bb      	str	r3, [r7, #8]
 801af40:	e07e      	b.n	801b040 <RegionEU868GetPhyParam+0x234>
 801af42:	2340      	movs	r3, #64	; 0x40
 801af44:	60bb      	str	r3, [r7, #8]
 801af46:	e07b      	b.n	801b040 <RegionEU868GetPhyParam+0x234>
 801af48:	2320      	movs	r3, #32
 801af4a:	60bb      	str	r3, [r7, #8]
 801af4c:	e078      	b.n	801b040 <RegionEU868GetPhyParam+0x234>
 801af4e:	687b      	ldr	r3, [r7, #4]
 801af50:	f993 3001 	ldrsb.w	r3, [r3, #1]
 801af54:	461a      	mov	r2, r3
 801af56:	4b3e      	ldr	r3, [pc, #248]	; (801b050 <RegionEU868GetPhyParam+0x244>)
 801af58:	5c9b      	ldrb	r3, [r3, r2]
 801af5a:	60bb      	str	r3, [r7, #8]
 801af5c:	e070      	b.n	801b040 <RegionEU868GetPhyParam+0x234>
 801af5e:	687b      	ldr	r3, [r7, #4]
 801af60:	f993 3001 	ldrsb.w	r3, [r3, #1]
 801af64:	461a      	mov	r2, r3
 801af66:	4b3b      	ldr	r3, [pc, #236]	; (801b054 <RegionEU868GetPhyParam+0x248>)
 801af68:	5c9b      	ldrb	r3, [r3, r2]
 801af6a:	60bb      	str	r3, [r7, #8]
 801af6c:	e068      	b.n	801b040 <RegionEU868GetPhyParam+0x234>
 801af6e:	2301      	movs	r3, #1
 801af70:	60bb      	str	r3, [r7, #8]
 801af72:	e065      	b.n	801b040 <RegionEU868GetPhyParam+0x234>
 801af74:	f640 33b8 	movw	r3, #3000	; 0xbb8
 801af78:	60bb      	str	r3, [r7, #8]
 801af7a:	e061      	b.n	801b040 <RegionEU868GetPhyParam+0x234>
 801af7c:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 801af80:	60bb      	str	r3, [r7, #8]
 801af82:	e05d      	b.n	801b040 <RegionEU868GetPhyParam+0x234>
 801af84:	f44f 63fa 	mov.w	r3, #2000	; 0x7d0
 801af88:	60bb      	str	r3, [r7, #8]
 801af8a:	e059      	b.n	801b040 <RegionEU868GetPhyParam+0x234>
 801af8c:	f241 3388 	movw	r3, #5000	; 0x1388
 801af90:	60bb      	str	r3, [r7, #8]
 801af92:	e055      	b.n	801b040 <RegionEU868GetPhyParam+0x234>
 801af94:	f241 7370 	movw	r3, #6000	; 0x1770
 801af98:	60bb      	str	r3, [r7, #8]
 801af9a:	e051      	b.n	801b040 <RegionEU868GetPhyParam+0x234>
 801af9c:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 801afa0:	60bb      	str	r3, [r7, #8]
 801afa2:	e04d      	b.n	801b040 <RegionEU868GetPhyParam+0x234>
 801afa4:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 801afa8:	482b      	ldr	r0, [pc, #172]	; (801b058 <RegionEU868GetPhyParam+0x24c>)
 801afaa:	f002 fb27 	bl	801d5fc <randr>
 801afae:	4603      	mov	r3, r0
 801afb0:	f503 63fa 	add.w	r3, r3, #2000	; 0x7d0
 801afb4:	60bb      	str	r3, [r7, #8]
 801afb6:	e043      	b.n	801b040 <RegionEU868GetPhyParam+0x234>
 801afb8:	2300      	movs	r3, #0
 801afba:	60bb      	str	r3, [r7, #8]
 801afbc:	e040      	b.n	801b040 <RegionEU868GetPhyParam+0x234>
 801afbe:	4b27      	ldr	r3, [pc, #156]	; (801b05c <RegionEU868GetPhyParam+0x250>)
 801afc0:	60bb      	str	r3, [r7, #8]
 801afc2:	e03d      	b.n	801b040 <RegionEU868GetPhyParam+0x234>
 801afc4:	2300      	movs	r3, #0
 801afc6:	60bb      	str	r3, [r7, #8]
 801afc8:	e03a      	b.n	801b040 <RegionEU868GetPhyParam+0x234>
 801afca:	4b25      	ldr	r3, [pc, #148]	; (801b060 <RegionEU868GetPhyParam+0x254>)
 801afcc:	60bb      	str	r3, [r7, #8]
 801afce:	e037      	b.n	801b040 <RegionEU868GetPhyParam+0x234>
 801afd0:	4b24      	ldr	r3, [pc, #144]	; (801b064 <RegionEU868GetPhyParam+0x258>)
 801afd2:	60bb      	str	r3, [r7, #8]
 801afd4:	e034      	b.n	801b040 <RegionEU868GetPhyParam+0x234>
 801afd6:	2310      	movs	r3, #16
 801afd8:	60bb      	str	r3, [r7, #8]
 801afda:	e031      	b.n	801b040 <RegionEU868GetPhyParam+0x234>
 801afdc:	4b22      	ldr	r3, [pc, #136]	; (801b068 <RegionEU868GetPhyParam+0x25c>)
 801afde:	60bb      	str	r3, [r7, #8]
 801afe0:	e02e      	b.n	801b040 <RegionEU868GetPhyParam+0x234>
 801afe2:	2300      	movs	r3, #0
 801afe4:	60bb      	str	r3, [r7, #8]
 801afe6:	e02b      	b.n	801b040 <RegionEU868GetPhyParam+0x234>
 801afe8:	f04f 4383 	mov.w	r3, #1098907648	; 0x41800000
 801afec:	60bb      	str	r3, [r7, #8]
 801afee:	e027      	b.n	801b040 <RegionEU868GetPhyParam+0x234>
 801aff0:	4b1e      	ldr	r3, [pc, #120]	; (801b06c <RegionEU868GetPhyParam+0x260>)
 801aff2:	60bb      	str	r3, [r7, #8]
 801aff4:	e024      	b.n	801b040 <RegionEU868GetPhyParam+0x234>
 801aff6:	4b19      	ldr	r3, [pc, #100]	; (801b05c <RegionEU868GetPhyParam+0x250>)
 801aff8:	60bb      	str	r3, [r7, #8]
 801affa:	e021      	b.n	801b040 <RegionEU868GetPhyParam+0x234>
 801affc:	2311      	movs	r3, #17
 801affe:	723b      	strb	r3, [r7, #8]
 801b000:	2302      	movs	r3, #2
 801b002:	727b      	strb	r3, [r7, #9]
 801b004:	2300      	movs	r3, #0
 801b006:	72bb      	strb	r3, [r7, #10]
 801b008:	e01a      	b.n	801b040 <RegionEU868GetPhyParam+0x234>
 801b00a:	2303      	movs	r3, #3
 801b00c:	60bb      	str	r3, [r7, #8]
 801b00e:	e017      	b.n	801b040 <RegionEU868GetPhyParam+0x234>
 801b010:	4b12      	ldr	r3, [pc, #72]	; (801b05c <RegionEU868GetPhyParam+0x250>)
 801b012:	60bb      	str	r3, [r7, #8]
 801b014:	e014      	b.n	801b040 <RegionEU868GetPhyParam+0x234>
 801b016:	2303      	movs	r3, #3
 801b018:	60bb      	str	r3, [r7, #8]
 801b01a:	e011      	b.n	801b040 <RegionEU868GetPhyParam+0x234>
 801b01c:	687b      	ldr	r3, [r7, #4]
 801b01e:	f993 3001 	ldrsb.w	r3, [r3, #1]
 801b022:	461a      	mov	r2, r3
 801b024:	4b12      	ldr	r3, [pc, #72]	; (801b070 <RegionEU868GetPhyParam+0x264>)
 801b026:	5c9b      	ldrb	r3, [r3, r2]
 801b028:	60bb      	str	r3, [r7, #8]
 801b02a:	e009      	b.n	801b040 <RegionEU868GetPhyParam+0x234>
 801b02c:	687b      	ldr	r3, [r7, #4]
 801b02e:	f993 3001 	ldrsb.w	r3, [r3, #1]
 801b032:	4618      	mov	r0, r3
 801b034:	f7ff fdec 	bl	801ac10 <GetBandwidth>
 801b038:	4603      	mov	r3, r0
 801b03a:	60bb      	str	r3, [r7, #8]
 801b03c:	e000      	b.n	801b040 <RegionEU868GetPhyParam+0x234>
 801b03e:	bf00      	nop
 801b040:	68bb      	ldr	r3, [r7, #8]
 801b042:	60fb      	str	r3, [r7, #12]
 801b044:	2300      	movs	r3, #0
 801b046:	68fb      	ldr	r3, [r7, #12]
 801b048:	4618      	mov	r0, r3
 801b04a:	3710      	adds	r7, #16
 801b04c:	46bd      	mov	sp, r7
 801b04e:	bd80      	pop	{r7, pc}
 801b050:	080267a8 	.word	0x080267a8
 801b054:	080267b0 	.word	0x080267b0
 801b058:	fffffc18 	.word	0xfffffc18
 801b05c:	33d3e608 	.word	0x33d3e608
 801b060:	200014a4 	.word	0x200014a4
 801b064:	200014a6 	.word	0x200014a6
 801b068:	2000136c 	.word	0x2000136c
 801b06c:	4009999a 	.word	0x4009999a
 801b070:	08026780 	.word	0x08026780

0801b074 <RegionEU868SetBandTxDone>:
 801b074:	b590      	push	{r4, r7, lr}
 801b076:	b085      	sub	sp, #20
 801b078:	af02      	add	r7, sp, #8
 801b07a:	6078      	str	r0, [r7, #4]
 801b07c:	687b      	ldr	r3, [r7, #4]
 801b07e:	781b      	ldrb	r3, [r3, #0]
 801b080:	4619      	mov	r1, r3
 801b082:	4a0f      	ldr	r2, [pc, #60]	; (801b0c0 <RegionEU868SetBandTxDone+0x4c>)
 801b084:	460b      	mov	r3, r1
 801b086:	005b      	lsls	r3, r3, #1
 801b088:	440b      	add	r3, r1
 801b08a:	009b      	lsls	r3, r3, #2
 801b08c:	4413      	add	r3, r2
 801b08e:	3309      	adds	r3, #9
 801b090:	781b      	ldrb	r3, [r3, #0]
 801b092:	461a      	mov	r2, r3
 801b094:	4613      	mov	r3, r2
 801b096:	009b      	lsls	r3, r3, #2
 801b098:	4413      	add	r3, r2
 801b09a:	009b      	lsls	r3, r3, #2
 801b09c:	33c0      	adds	r3, #192	; 0xc0
 801b09e:	4a08      	ldr	r2, [pc, #32]	; (801b0c0 <RegionEU868SetBandTxDone+0x4c>)
 801b0a0:	1898      	adds	r0, r3, r2
 801b0a2:	687b      	ldr	r3, [r7, #4]
 801b0a4:	6899      	ldr	r1, [r3, #8]
 801b0a6:	687b      	ldr	r3, [r7, #4]
 801b0a8:	785c      	ldrb	r4, [r3, #1]
 801b0aa:	687b      	ldr	r3, [r7, #4]
 801b0ac:	691a      	ldr	r2, [r3, #16]
 801b0ae:	9200      	str	r2, [sp, #0]
 801b0b0:	68db      	ldr	r3, [r3, #12]
 801b0b2:	4622      	mov	r2, r4
 801b0b4:	f7ff f9f7 	bl	801a4a6 <RegionCommonSetBandTxDone>
 801b0b8:	bf00      	nop
 801b0ba:	370c      	adds	r7, #12
 801b0bc:	46bd      	mov	sp, r7
 801b0be:	bd90      	pop	{r4, r7, pc}
 801b0c0:	2000136c 	.word	0x2000136c

0801b0c4 <RegionEU868InitDefaults>:
 801b0c4:	b580      	push	{r7, lr}
 801b0c6:	b0aa      	sub	sp, #168	; 0xa8
 801b0c8:	af00      	add	r7, sp, #0
 801b0ca:	6078      	str	r0, [r7, #4]
 801b0cc:	f107 0330 	add.w	r3, r7, #48	; 0x30
 801b0d0:	2278      	movs	r2, #120	; 0x78
 801b0d2:	2100      	movs	r1, #0
 801b0d4:	4618      	mov	r0, r3
 801b0d6:	f009 fb75 	bl	80247c4 <memset>
 801b0da:	2364      	movs	r3, #100	; 0x64
 801b0dc:	863b      	strh	r3, [r7, #48]	; 0x30
 801b0de:	2364      	movs	r3, #100	; 0x64
 801b0e0:	f8a7 3044 	strh.w	r3, [r7, #68]	; 0x44
 801b0e4:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 801b0e8:	f8a7 3058 	strh.w	r3, [r7, #88]	; 0x58
 801b0ec:	230a      	movs	r3, #10
 801b0ee:	f8a7 306c 	strh.w	r3, [r7, #108]	; 0x6c
 801b0f2:	2364      	movs	r3, #100	; 0x64
 801b0f4:	f8a7 3080 	strh.w	r3, [r7, #128]	; 0x80
 801b0f8:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 801b0fc:	f8a7 3094 	strh.w	r3, [r7, #148]	; 0x94
 801b100:	687b      	ldr	r3, [r7, #4]
 801b102:	791b      	ldrb	r3, [r3, #4]
 801b104:	2b03      	cmp	r3, #3
 801b106:	d855      	bhi.n	801b1b4 <RegionEU868InitDefaults+0xf0>
 801b108:	a201      	add	r2, pc, #4	; (adr r2, 801b110 <RegionEU868InitDefaults+0x4c>)
 801b10a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 801b10e:	bf00      	nop
 801b110:	0801b121 	.word	0x0801b121
 801b114:	0801b165 	.word	0x0801b165
 801b118:	0801b183 	.word	0x0801b183
 801b11c:	0801b19b 	.word	0x0801b19b
 801b120:	f107 0330 	add.w	r3, r7, #48	; 0x30
 801b124:	2278      	movs	r2, #120	; 0x78
 801b126:	4619      	mov	r1, r3
 801b128:	4826      	ldr	r0, [pc, #152]	; (801b1c4 <RegionEU868InitDefaults+0x100>)
 801b12a:	f002 fa7e 	bl	801d62a <memcpy1>
 801b12e:	4b26      	ldr	r3, [pc, #152]	; (801b1c8 <RegionEU868InitDefaults+0x104>)
 801b130:	4a26      	ldr	r2, [pc, #152]	; (801b1cc <RegionEU868InitDefaults+0x108>)
 801b132:	ca07      	ldmia	r2, {r0, r1, r2}
 801b134:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 801b138:	4b23      	ldr	r3, [pc, #140]	; (801b1c8 <RegionEU868InitDefaults+0x104>)
 801b13a:	4a25      	ldr	r2, [pc, #148]	; (801b1d0 <RegionEU868InitDefaults+0x10c>)
 801b13c:	330c      	adds	r3, #12
 801b13e:	ca07      	ldmia	r2, {r0, r1, r2}
 801b140:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 801b144:	4b20      	ldr	r3, [pc, #128]	; (801b1c8 <RegionEU868InitDefaults+0x104>)
 801b146:	4a23      	ldr	r2, [pc, #140]	; (801b1d4 <RegionEU868InitDefaults+0x110>)
 801b148:	3318      	adds	r3, #24
 801b14a:	ca07      	ldmia	r2, {r0, r1, r2}
 801b14c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 801b150:	4b1d      	ldr	r3, [pc, #116]	; (801b1c8 <RegionEU868InitDefaults+0x104>)
 801b152:	2207      	movs	r2, #7
 801b154:	f8a3 213a 	strh.w	r2, [r3, #314]	; 0x13a
 801b158:	2201      	movs	r2, #1
 801b15a:	491f      	ldr	r1, [pc, #124]	; (801b1d8 <RegionEU868InitDefaults+0x114>)
 801b15c:	481f      	ldr	r0, [pc, #124]	; (801b1dc <RegionEU868InitDefaults+0x118>)
 801b15e:	f7ff f97c 	bl	801a45a <RegionCommonChanMaskCopy>
 801b162:	e02a      	b.n	801b1ba <RegionEU868InitDefaults+0xf6>
 801b164:	4b18      	ldr	r3, [pc, #96]	; (801b1c8 <RegionEU868InitDefaults+0x104>)
 801b166:	2200      	movs	r2, #0
 801b168:	605a      	str	r2, [r3, #4]
 801b16a:	4b17      	ldr	r3, [pc, #92]	; (801b1c8 <RegionEU868InitDefaults+0x104>)
 801b16c:	2200      	movs	r2, #0
 801b16e:	611a      	str	r2, [r3, #16]
 801b170:	4b15      	ldr	r3, [pc, #84]	; (801b1c8 <RegionEU868InitDefaults+0x104>)
 801b172:	2200      	movs	r2, #0
 801b174:	61da      	str	r2, [r3, #28]
 801b176:	2201      	movs	r2, #1
 801b178:	4917      	ldr	r1, [pc, #92]	; (801b1d8 <RegionEU868InitDefaults+0x114>)
 801b17a:	4818      	ldr	r0, [pc, #96]	; (801b1dc <RegionEU868InitDefaults+0x118>)
 801b17c:	f7ff f96d 	bl	801a45a <RegionCommonChanMaskCopy>
 801b180:	e01b      	b.n	801b1ba <RegionEU868InitDefaults+0xf6>
 801b182:	4b11      	ldr	r3, [pc, #68]	; (801b1c8 <RegionEU868InitDefaults+0x104>)
 801b184:	f8b3 2138 	ldrh.w	r2, [r3, #312]	; 0x138
 801b188:	4b0f      	ldr	r3, [pc, #60]	; (801b1c8 <RegionEU868InitDefaults+0x104>)
 801b18a:	f8b3 313a 	ldrh.w	r3, [r3, #314]	; 0x13a
 801b18e:	4313      	orrs	r3, r2
 801b190:	b29a      	uxth	r2, r3
 801b192:	4b0d      	ldr	r3, [pc, #52]	; (801b1c8 <RegionEU868InitDefaults+0x104>)
 801b194:	f8a3 2138 	strh.w	r2, [r3, #312]	; 0x138
 801b198:	e00f      	b.n	801b1ba <RegionEU868InitDefaults+0xf6>
 801b19a:	687b      	ldr	r3, [r7, #4]
 801b19c:	681b      	ldr	r3, [r3, #0]
 801b19e:	2b00      	cmp	r3, #0
 801b1a0:	d00a      	beq.n	801b1b8 <RegionEU868InitDefaults+0xf4>
 801b1a2:	687b      	ldr	r3, [r7, #4]
 801b1a4:	681b      	ldr	r3, [r3, #0]
 801b1a6:	f44f 729e 	mov.w	r2, #316	; 0x13c
 801b1aa:	4619      	mov	r1, r3
 801b1ac:	4806      	ldr	r0, [pc, #24]	; (801b1c8 <RegionEU868InitDefaults+0x104>)
 801b1ae:	f002 fa3c 	bl	801d62a <memcpy1>
 801b1b2:	e001      	b.n	801b1b8 <RegionEU868InitDefaults+0xf4>
 801b1b4:	bf00      	nop
 801b1b6:	e000      	b.n	801b1ba <RegionEU868InitDefaults+0xf6>
 801b1b8:	bf00      	nop
 801b1ba:	bf00      	nop
 801b1bc:	37a8      	adds	r7, #168	; 0xa8
 801b1be:	46bd      	mov	sp, r7
 801b1c0:	bd80      	pop	{r7, pc}
 801b1c2:	bf00      	nop
 801b1c4:	2000142c 	.word	0x2000142c
 801b1c8:	2000136c 	.word	0x2000136c
 801b1cc:	080261b4 	.word	0x080261b4
 801b1d0:	080261c0 	.word	0x080261c0
 801b1d4:	080261cc 	.word	0x080261cc
 801b1d8:	200014a6 	.word	0x200014a6
 801b1dc:	200014a4 	.word	0x200014a4

0801b1e0 <RegionEU868GetNvmCtx>:
 801b1e0:	b480      	push	{r7}
 801b1e2:	b083      	sub	sp, #12
 801b1e4:	af00      	add	r7, sp, #0
 801b1e6:	6078      	str	r0, [r7, #4]
 801b1e8:	687b      	ldr	r3, [r7, #4]
 801b1ea:	f44f 729e 	mov.w	r2, #316	; 0x13c
 801b1ee:	601a      	str	r2, [r3, #0]
 801b1f0:	4b02      	ldr	r3, [pc, #8]	; (801b1fc <RegionEU868GetNvmCtx+0x1c>)
 801b1f2:	4618      	mov	r0, r3
 801b1f4:	370c      	adds	r7, #12
 801b1f6:	46bd      	mov	sp, r7
 801b1f8:	bc80      	pop	{r7}
 801b1fa:	4770      	bx	lr
 801b1fc:	2000136c 	.word	0x2000136c

0801b200 <RegionEU868Verify>:
 801b200:	b580      	push	{r7, lr}
 801b202:	b084      	sub	sp, #16
 801b204:	af00      	add	r7, sp, #0
 801b206:	6078      	str	r0, [r7, #4]
 801b208:	460b      	mov	r3, r1
 801b20a:	70fb      	strb	r3, [r7, #3]
 801b20c:	78fb      	ldrb	r3, [r7, #3]
 801b20e:	2b0f      	cmp	r3, #15
 801b210:	d86c      	bhi.n	801b2ec <RegionEU868Verify+0xec>
 801b212:	a201      	add	r2, pc, #4	; (adr r2, 801b218 <RegionEU868Verify+0x18>)
 801b214:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 801b218:	0801b259 	.word	0x0801b259
 801b21c:	0801b2ed 	.word	0x0801b2ed
 801b220:	0801b2ed 	.word	0x0801b2ed
 801b224:	0801b2ed 	.word	0x0801b2ed
 801b228:	0801b2ed 	.word	0x0801b2ed
 801b22c:	0801b271 	.word	0x0801b271
 801b230:	0801b28f 	.word	0x0801b28f
 801b234:	0801b2ad 	.word	0x0801b2ad
 801b238:	0801b2ed 	.word	0x0801b2ed
 801b23c:	0801b2cb 	.word	0x0801b2cb
 801b240:	0801b2cb 	.word	0x0801b2cb
 801b244:	0801b2ed 	.word	0x0801b2ed
 801b248:	0801b2ed 	.word	0x0801b2ed
 801b24c:	0801b2ed 	.word	0x0801b2ed
 801b250:	0801b2ed 	.word	0x0801b2ed
 801b254:	0801b2e9 	.word	0x0801b2e9
 801b258:	2300      	movs	r3, #0
 801b25a:	73fb      	strb	r3, [r7, #15]
 801b25c:	687b      	ldr	r3, [r7, #4]
 801b25e:	681b      	ldr	r3, [r3, #0]
 801b260:	f107 020f 	add.w	r2, r7, #15
 801b264:	4611      	mov	r1, r2
 801b266:	4618      	mov	r0, r3
 801b268:	f7ff fd0c 	bl	801ac84 <VerifyRfFreq>
 801b26c:	4603      	mov	r3, r0
 801b26e:	e03e      	b.n	801b2ee <RegionEU868Verify+0xee>
 801b270:	687b      	ldr	r3, [r7, #4]
 801b272:	f993 3000 	ldrsb.w	r3, [r3]
 801b276:	2207      	movs	r2, #7
 801b278:	2100      	movs	r1, #0
 801b27a:	4618      	mov	r0, r3
 801b27c:	f7ff f870 	bl	801a360 <RegionCommonValueInRange>
 801b280:	4603      	mov	r3, r0
 801b282:	2b00      	cmp	r3, #0
 801b284:	bf14      	ite	ne
 801b286:	2301      	movne	r3, #1
 801b288:	2300      	moveq	r3, #0
 801b28a:	b2db      	uxtb	r3, r3
 801b28c:	e02f      	b.n	801b2ee <RegionEU868Verify+0xee>
 801b28e:	687b      	ldr	r3, [r7, #4]
 801b290:	f993 3000 	ldrsb.w	r3, [r3]
 801b294:	2205      	movs	r2, #5
 801b296:	2100      	movs	r1, #0
 801b298:	4618      	mov	r0, r3
 801b29a:	f7ff f861 	bl	801a360 <RegionCommonValueInRange>
 801b29e:	4603      	mov	r3, r0
 801b2a0:	2b00      	cmp	r3, #0
 801b2a2:	bf14      	ite	ne
 801b2a4:	2301      	movne	r3, #1
 801b2a6:	2300      	moveq	r3, #0
 801b2a8:	b2db      	uxtb	r3, r3
 801b2aa:	e020      	b.n	801b2ee <RegionEU868Verify+0xee>
 801b2ac:	687b      	ldr	r3, [r7, #4]
 801b2ae:	f993 3000 	ldrsb.w	r3, [r3]
 801b2b2:	2207      	movs	r2, #7
 801b2b4:	2100      	movs	r1, #0
 801b2b6:	4618      	mov	r0, r3
 801b2b8:	f7ff f852 	bl	801a360 <RegionCommonValueInRange>
 801b2bc:	4603      	mov	r3, r0
 801b2be:	2b00      	cmp	r3, #0
 801b2c0:	bf14      	ite	ne
 801b2c2:	2301      	movne	r3, #1
 801b2c4:	2300      	moveq	r3, #0
 801b2c6:	b2db      	uxtb	r3, r3
 801b2c8:	e011      	b.n	801b2ee <RegionEU868Verify+0xee>
 801b2ca:	687b      	ldr	r3, [r7, #4]
 801b2cc:	f993 3000 	ldrsb.w	r3, [r3]
 801b2d0:	2207      	movs	r2, #7
 801b2d2:	2100      	movs	r1, #0
 801b2d4:	4618      	mov	r0, r3
 801b2d6:	f7ff f843 	bl	801a360 <RegionCommonValueInRange>
 801b2da:	4603      	mov	r3, r0
 801b2dc:	2b00      	cmp	r3, #0
 801b2de:	bf14      	ite	ne
 801b2e0:	2301      	movne	r3, #1
 801b2e2:	2300      	moveq	r3, #0
 801b2e4:	b2db      	uxtb	r3, r3
 801b2e6:	e002      	b.n	801b2ee <RegionEU868Verify+0xee>
 801b2e8:	2301      	movs	r3, #1
 801b2ea:	e000      	b.n	801b2ee <RegionEU868Verify+0xee>
 801b2ec:	2300      	movs	r3, #0
 801b2ee:	4618      	mov	r0, r3
 801b2f0:	3710      	adds	r7, #16
 801b2f2:	46bd      	mov	sp, r7
 801b2f4:	bd80      	pop	{r7, pc}
 801b2f6:	bf00      	nop

0801b2f8 <RegionEU868ApplyCFList>:
 801b2f8:	b580      	push	{r7, lr}
 801b2fa:	b08a      	sub	sp, #40	; 0x28
 801b2fc:	af00      	add	r7, sp, #0
 801b2fe:	6078      	str	r0, [r7, #4]
 801b300:	2350      	movs	r3, #80	; 0x50
 801b302:	f887 3020 	strb.w	r3, [r7, #32]
 801b306:	687b      	ldr	r3, [r7, #4]
 801b308:	791b      	ldrb	r3, [r3, #4]
 801b30a:	2b10      	cmp	r3, #16
 801b30c:	d162      	bne.n	801b3d4 <RegionEU868ApplyCFList+0xdc>
 801b30e:	687b      	ldr	r3, [r7, #4]
 801b310:	681b      	ldr	r3, [r3, #0]
 801b312:	330f      	adds	r3, #15
 801b314:	781b      	ldrb	r3, [r3, #0]
 801b316:	2b00      	cmp	r3, #0
 801b318:	d15e      	bne.n	801b3d8 <RegionEU868ApplyCFList+0xe0>
 801b31a:	2300      	movs	r3, #0
 801b31c:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 801b320:	2303      	movs	r3, #3
 801b322:	f887 3026 	strb.w	r3, [r7, #38]	; 0x26
 801b326:	e050      	b.n	801b3ca <RegionEU868ApplyCFList+0xd2>
 801b328:	f897 3026 	ldrb.w	r3, [r7, #38]	; 0x26
 801b32c:	2b07      	cmp	r3, #7
 801b32e:	d824      	bhi.n	801b37a <RegionEU868ApplyCFList+0x82>
 801b330:	687b      	ldr	r3, [r7, #4]
 801b332:	681a      	ldr	r2, [r3, #0]
 801b334:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 801b338:	4413      	add	r3, r2
 801b33a:	781b      	ldrb	r3, [r3, #0]
 801b33c:	61bb      	str	r3, [r7, #24]
 801b33e:	69ba      	ldr	r2, [r7, #24]
 801b340:	687b      	ldr	r3, [r7, #4]
 801b342:	6819      	ldr	r1, [r3, #0]
 801b344:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 801b348:	3301      	adds	r3, #1
 801b34a:	440b      	add	r3, r1
 801b34c:	781b      	ldrb	r3, [r3, #0]
 801b34e:	021b      	lsls	r3, r3, #8
 801b350:	4313      	orrs	r3, r2
 801b352:	61bb      	str	r3, [r7, #24]
 801b354:	69ba      	ldr	r2, [r7, #24]
 801b356:	687b      	ldr	r3, [r7, #4]
 801b358:	6819      	ldr	r1, [r3, #0]
 801b35a:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 801b35e:	3302      	adds	r3, #2
 801b360:	440b      	add	r3, r1
 801b362:	781b      	ldrb	r3, [r3, #0]
 801b364:	041b      	lsls	r3, r3, #16
 801b366:	4313      	orrs	r3, r2
 801b368:	61bb      	str	r3, [r7, #24]
 801b36a:	69bb      	ldr	r3, [r7, #24]
 801b36c:	2264      	movs	r2, #100	; 0x64
 801b36e:	fb02 f303 	mul.w	r3, r2, r3
 801b372:	61bb      	str	r3, [r7, #24]
 801b374:	2300      	movs	r3, #0
 801b376:	61fb      	str	r3, [r7, #28]
 801b378:	e006      	b.n	801b388 <RegionEU868ApplyCFList+0x90>
 801b37a:	2300      	movs	r3, #0
 801b37c:	61bb      	str	r3, [r7, #24]
 801b37e:	2300      	movs	r3, #0
 801b380:	f887 3020 	strb.w	r3, [r7, #32]
 801b384:	2300      	movs	r3, #0
 801b386:	61fb      	str	r3, [r7, #28]
 801b388:	69bb      	ldr	r3, [r7, #24]
 801b38a:	2b00      	cmp	r3, #0
 801b38c:	d00b      	beq.n	801b3a6 <RegionEU868ApplyCFList+0xae>
 801b38e:	f107 0318 	add.w	r3, r7, #24
 801b392:	613b      	str	r3, [r7, #16]
 801b394:	f897 3026 	ldrb.w	r3, [r7, #38]	; 0x26
 801b398:	753b      	strb	r3, [r7, #20]
 801b39a:	f107 0310 	add.w	r3, r7, #16
 801b39e:	4618      	mov	r0, r3
 801b3a0:	f000 fcec 	bl	801bd7c <RegionEU868ChannelAdd>
 801b3a4:	e007      	b.n	801b3b6 <RegionEU868ApplyCFList+0xbe>
 801b3a6:	f897 3026 	ldrb.w	r3, [r7, #38]	; 0x26
 801b3aa:	733b      	strb	r3, [r7, #12]
 801b3ac:	f107 030c 	add.w	r3, r7, #12
 801b3b0:	4618      	mov	r0, r3
 801b3b2:	f000 fd81 	bl	801beb8 <RegionEU868ChannelsRemove>
 801b3b6:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 801b3ba:	3303      	adds	r3, #3
 801b3bc:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 801b3c0:	f897 3026 	ldrb.w	r3, [r7, #38]	; 0x26
 801b3c4:	3301      	adds	r3, #1
 801b3c6:	f887 3026 	strb.w	r3, [r7, #38]	; 0x26
 801b3ca:	f897 3026 	ldrb.w	r3, [r7, #38]	; 0x26
 801b3ce:	2b0f      	cmp	r3, #15
 801b3d0:	d9aa      	bls.n	801b328 <RegionEU868ApplyCFList+0x30>
 801b3d2:	e002      	b.n	801b3da <RegionEU868ApplyCFList+0xe2>
 801b3d4:	bf00      	nop
 801b3d6:	e000      	b.n	801b3da <RegionEU868ApplyCFList+0xe2>
 801b3d8:	bf00      	nop
 801b3da:	3728      	adds	r7, #40	; 0x28
 801b3dc:	46bd      	mov	sp, r7
 801b3de:	bd80      	pop	{r7, pc}

0801b3e0 <RegionEU868ChanMaskSet>:
 801b3e0:	b580      	push	{r7, lr}
 801b3e2:	b082      	sub	sp, #8
 801b3e4:	af00      	add	r7, sp, #0
 801b3e6:	6078      	str	r0, [r7, #4]
 801b3e8:	687b      	ldr	r3, [r7, #4]
 801b3ea:	791b      	ldrb	r3, [r3, #4]
 801b3ec:	2b00      	cmp	r3, #0
 801b3ee:	d002      	beq.n	801b3f6 <RegionEU868ChanMaskSet+0x16>
 801b3f0:	2b01      	cmp	r3, #1
 801b3f2:	d008      	beq.n	801b406 <RegionEU868ChanMaskSet+0x26>
 801b3f4:	e00f      	b.n	801b416 <RegionEU868ChanMaskSet+0x36>
 801b3f6:	687b      	ldr	r3, [r7, #4]
 801b3f8:	681b      	ldr	r3, [r3, #0]
 801b3fa:	2201      	movs	r2, #1
 801b3fc:	4619      	mov	r1, r3
 801b3fe:	4809      	ldr	r0, [pc, #36]	; (801b424 <RegionEU868ChanMaskSet+0x44>)
 801b400:	f7ff f82b 	bl	801a45a <RegionCommonChanMaskCopy>
 801b404:	e009      	b.n	801b41a <RegionEU868ChanMaskSet+0x3a>
 801b406:	687b      	ldr	r3, [r7, #4]
 801b408:	681b      	ldr	r3, [r3, #0]
 801b40a:	2201      	movs	r2, #1
 801b40c:	4619      	mov	r1, r3
 801b40e:	4806      	ldr	r0, [pc, #24]	; (801b428 <RegionEU868ChanMaskSet+0x48>)
 801b410:	f7ff f823 	bl	801a45a <RegionCommonChanMaskCopy>
 801b414:	e001      	b.n	801b41a <RegionEU868ChanMaskSet+0x3a>
 801b416:	2300      	movs	r3, #0
 801b418:	e000      	b.n	801b41c <RegionEU868ChanMaskSet+0x3c>
 801b41a:	2301      	movs	r3, #1
 801b41c:	4618      	mov	r0, r3
 801b41e:	3708      	adds	r7, #8
 801b420:	46bd      	mov	sp, r7
 801b422:	bd80      	pop	{r7, pc}
 801b424:	200014a4 	.word	0x200014a4
 801b428:	200014a6 	.word	0x200014a6

0801b42c <RegionEU868ComputeRxWindowParameters>:
 801b42c:	b580      	push	{r7, lr}
 801b42e:	b088      	sub	sp, #32
 801b430:	af02      	add	r7, sp, #8
 801b432:	60ba      	str	r2, [r7, #8]
 801b434:	607b      	str	r3, [r7, #4]
 801b436:	4603      	mov	r3, r0
 801b438:	73fb      	strb	r3, [r7, #15]
 801b43a:	460b      	mov	r3, r1
 801b43c:	73bb      	strb	r3, [r7, #14]
 801b43e:	2300      	movs	r3, #0
 801b440:	617b      	str	r3, [r7, #20]
 801b442:	f997 300f 	ldrsb.w	r3, [r7, #15]
 801b446:	2b07      	cmp	r3, #7
 801b448:	bfa8      	it	ge
 801b44a:	2307      	movge	r3, #7
 801b44c:	b25a      	sxtb	r2, r3
 801b44e:	687b      	ldr	r3, [r7, #4]
 801b450:	705a      	strb	r2, [r3, #1]
 801b452:	687b      	ldr	r3, [r7, #4]
 801b454:	f993 3001 	ldrsb.w	r3, [r3, #1]
 801b458:	4618      	mov	r0, r3
 801b45a:	f7ff fbd9 	bl	801ac10 <GetBandwidth>
 801b45e:	4603      	mov	r3, r0
 801b460:	b2da      	uxtb	r2, r3
 801b462:	687b      	ldr	r3, [r7, #4]
 801b464:	709a      	strb	r2, [r3, #2]
 801b466:	687b      	ldr	r3, [r7, #4]
 801b468:	f993 3001 	ldrsb.w	r3, [r3, #1]
 801b46c:	2b07      	cmp	r3, #7
 801b46e:	d10a      	bne.n	801b486 <RegionEU868ComputeRxWindowParameters+0x5a>
 801b470:	687b      	ldr	r3, [r7, #4]
 801b472:	f993 3001 	ldrsb.w	r3, [r3, #1]
 801b476:	461a      	mov	r2, r3
 801b478:	4b15      	ldr	r3, [pc, #84]	; (801b4d0 <RegionEU868ComputeRxWindowParameters+0xa4>)
 801b47a:	5c9b      	ldrb	r3, [r3, r2]
 801b47c:	4618      	mov	r0, r3
 801b47e:	f7ff f9b5 	bl	801a7ec <RegionCommonComputeSymbolTimeFsk>
 801b482:	6178      	str	r0, [r7, #20]
 801b484:	e011      	b.n	801b4aa <RegionEU868ComputeRxWindowParameters+0x7e>
 801b486:	687b      	ldr	r3, [r7, #4]
 801b488:	f993 3001 	ldrsb.w	r3, [r3, #1]
 801b48c:	461a      	mov	r2, r3
 801b48e:	4b10      	ldr	r3, [pc, #64]	; (801b4d0 <RegionEU868ComputeRxWindowParameters+0xa4>)
 801b490:	5c9a      	ldrb	r2, [r3, r2]
 801b492:	687b      	ldr	r3, [r7, #4]
 801b494:	f993 3001 	ldrsb.w	r3, [r3, #1]
 801b498:	4619      	mov	r1, r3
 801b49a:	4b0e      	ldr	r3, [pc, #56]	; (801b4d4 <RegionEU868ComputeRxWindowParameters+0xa8>)
 801b49c:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 801b4a0:	4619      	mov	r1, r3
 801b4a2:	4610      	mov	r0, r2
 801b4a4:	f7ff f98e 	bl	801a7c4 <RegionCommonComputeSymbolTimeLoRa>
 801b4a8:	6178      	str	r0, [r7, #20]
 801b4aa:	4b0b      	ldr	r3, [pc, #44]	; (801b4d8 <RegionEU868ComputeRxWindowParameters+0xac>)
 801b4ac:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 801b4ae:	4798      	blx	r3
 801b4b0:	687b      	ldr	r3, [r7, #4]
 801b4b2:	3308      	adds	r3, #8
 801b4b4:	687a      	ldr	r2, [r7, #4]
 801b4b6:	320c      	adds	r2, #12
 801b4b8:	7bb9      	ldrb	r1, [r7, #14]
 801b4ba:	9201      	str	r2, [sp, #4]
 801b4bc:	9300      	str	r3, [sp, #0]
 801b4be:	4603      	mov	r3, r0
 801b4c0:	68ba      	ldr	r2, [r7, #8]
 801b4c2:	6978      	ldr	r0, [r7, #20]
 801b4c4:	f7ff f9a0 	bl	801a808 <RegionCommonComputeRxWindowParameters>
 801b4c8:	bf00      	nop
 801b4ca:	3718      	adds	r7, #24
 801b4cc:	46bd      	mov	sp, r7
 801b4ce:	bd80      	pop	{r7, pc}
 801b4d0:	08026780 	.word	0x08026780
 801b4d4:	08026788 	.word	0x08026788
 801b4d8:	0802683c 	.word	0x0802683c

0801b4dc <RegionEU868RxConfig>:
 801b4dc:	b5b0      	push	{r4, r5, r7, lr}
 801b4de:	b090      	sub	sp, #64	; 0x40
 801b4e0:	af0a      	add	r7, sp, #40	; 0x28
 801b4e2:	6078      	str	r0, [r7, #4]
 801b4e4:	6039      	str	r1, [r7, #0]
 801b4e6:	687b      	ldr	r3, [r7, #4]
 801b4e8:	785b      	ldrb	r3, [r3, #1]
 801b4ea:	73fb      	strb	r3, [r7, #15]
 801b4ec:	2300      	movs	r3, #0
 801b4ee:	75bb      	strb	r3, [r7, #22]
 801b4f0:	2300      	movs	r3, #0
 801b4f2:	73bb      	strb	r3, [r7, #14]
 801b4f4:	687b      	ldr	r3, [r7, #4]
 801b4f6:	685b      	ldr	r3, [r3, #4]
 801b4f8:	613b      	str	r3, [r7, #16]
 801b4fa:	4b59      	ldr	r3, [pc, #356]	; (801b660 <RegionEU868RxConfig+0x184>)
 801b4fc:	685b      	ldr	r3, [r3, #4]
 801b4fe:	4798      	blx	r3
 801b500:	4603      	mov	r3, r0
 801b502:	2b00      	cmp	r3, #0
 801b504:	d001      	beq.n	801b50a <RegionEU868RxConfig+0x2e>
 801b506:	2300      	movs	r3, #0
 801b508:	e0a5      	b.n	801b656 <RegionEU868RxConfig+0x17a>
 801b50a:	687b      	ldr	r3, [r7, #4]
 801b50c:	7cdb      	ldrb	r3, [r3, #19]
 801b50e:	2b00      	cmp	r3, #0
 801b510:	d123      	bne.n	801b55a <RegionEU868RxConfig+0x7e>
 801b512:	687b      	ldr	r3, [r7, #4]
 801b514:	781b      	ldrb	r3, [r3, #0]
 801b516:	4619      	mov	r1, r3
 801b518:	4a52      	ldr	r2, [pc, #328]	; (801b664 <RegionEU868RxConfig+0x188>)
 801b51a:	460b      	mov	r3, r1
 801b51c:	005b      	lsls	r3, r3, #1
 801b51e:	440b      	add	r3, r1
 801b520:	009b      	lsls	r3, r3, #2
 801b522:	4413      	add	r3, r2
 801b524:	681b      	ldr	r3, [r3, #0]
 801b526:	613b      	str	r3, [r7, #16]
 801b528:	687b      	ldr	r3, [r7, #4]
 801b52a:	781b      	ldrb	r3, [r3, #0]
 801b52c:	4619      	mov	r1, r3
 801b52e:	4a4d      	ldr	r2, [pc, #308]	; (801b664 <RegionEU868RxConfig+0x188>)
 801b530:	460b      	mov	r3, r1
 801b532:	005b      	lsls	r3, r3, #1
 801b534:	440b      	add	r3, r1
 801b536:	009b      	lsls	r3, r3, #2
 801b538:	4413      	add	r3, r2
 801b53a:	3304      	adds	r3, #4
 801b53c:	681b      	ldr	r3, [r3, #0]
 801b53e:	2b00      	cmp	r3, #0
 801b540:	d00b      	beq.n	801b55a <RegionEU868RxConfig+0x7e>
 801b542:	687b      	ldr	r3, [r7, #4]
 801b544:	781b      	ldrb	r3, [r3, #0]
 801b546:	4619      	mov	r1, r3
 801b548:	4a46      	ldr	r2, [pc, #280]	; (801b664 <RegionEU868RxConfig+0x188>)
 801b54a:	460b      	mov	r3, r1
 801b54c:	005b      	lsls	r3, r3, #1
 801b54e:	440b      	add	r3, r1
 801b550:	009b      	lsls	r3, r3, #2
 801b552:	4413      	add	r3, r2
 801b554:	3304      	adds	r3, #4
 801b556:	681b      	ldr	r3, [r3, #0]
 801b558:	613b      	str	r3, [r7, #16]
 801b55a:	f997 300f 	ldrsb.w	r3, [r7, #15]
 801b55e:	4a42      	ldr	r2, [pc, #264]	; (801b668 <RegionEU868RxConfig+0x18c>)
 801b560:	5cd3      	ldrb	r3, [r2, r3]
 801b562:	73bb      	strb	r3, [r7, #14]
 801b564:	4b3e      	ldr	r3, [pc, #248]	; (801b660 <RegionEU868RxConfig+0x184>)
 801b566:	68db      	ldr	r3, [r3, #12]
 801b568:	6938      	ldr	r0, [r7, #16]
 801b56a:	4798      	blx	r3
 801b56c:	f997 300f 	ldrsb.w	r3, [r7, #15]
 801b570:	2b07      	cmp	r3, #7
 801b572:	d128      	bne.n	801b5c6 <RegionEU868RxConfig+0xea>
 801b574:	2300      	movs	r3, #0
 801b576:	75fb      	strb	r3, [r7, #23]
 801b578:	4b39      	ldr	r3, [pc, #228]	; (801b660 <RegionEU868RxConfig+0x184>)
 801b57a:	699c      	ldr	r4, [r3, #24]
 801b57c:	f997 300e 	ldrsb.w	r3, [r7, #14]
 801b580:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 801b584:	fb02 f303 	mul.w	r3, r2, r3
 801b588:	4619      	mov	r1, r3
 801b58a:	687b      	ldr	r3, [r7, #4]
 801b58c:	689b      	ldr	r3, [r3, #8]
 801b58e:	b29b      	uxth	r3, r3
 801b590:	687a      	ldr	r2, [r7, #4]
 801b592:	7c92      	ldrb	r2, [r2, #18]
 801b594:	7df8      	ldrb	r0, [r7, #23]
 801b596:	9209      	str	r2, [sp, #36]	; 0x24
 801b598:	2200      	movs	r2, #0
 801b59a:	9208      	str	r2, [sp, #32]
 801b59c:	2200      	movs	r2, #0
 801b59e:	9207      	str	r2, [sp, #28]
 801b5a0:	2200      	movs	r2, #0
 801b5a2:	9206      	str	r2, [sp, #24]
 801b5a4:	2201      	movs	r2, #1
 801b5a6:	9205      	str	r2, [sp, #20]
 801b5a8:	2200      	movs	r2, #0
 801b5aa:	9204      	str	r2, [sp, #16]
 801b5ac:	2200      	movs	r2, #0
 801b5ae:	9203      	str	r2, [sp, #12]
 801b5b0:	9302      	str	r3, [sp, #8]
 801b5b2:	2305      	movs	r3, #5
 801b5b4:	9301      	str	r3, [sp, #4]
 801b5b6:	4b2d      	ldr	r3, [pc, #180]	; (801b66c <RegionEU868RxConfig+0x190>)
 801b5b8:	9300      	str	r3, [sp, #0]
 801b5ba:	2300      	movs	r3, #0
 801b5bc:	460a      	mov	r2, r1
 801b5be:	f24c 3150 	movw	r1, #50000	; 0xc350
 801b5c2:	47a0      	blx	r4
 801b5c4:	e024      	b.n	801b610 <RegionEU868RxConfig+0x134>
 801b5c6:	2301      	movs	r3, #1
 801b5c8:	75fb      	strb	r3, [r7, #23]
 801b5ca:	4b25      	ldr	r3, [pc, #148]	; (801b660 <RegionEU868RxConfig+0x184>)
 801b5cc:	699c      	ldr	r4, [r3, #24]
 801b5ce:	687b      	ldr	r3, [r7, #4]
 801b5d0:	789b      	ldrb	r3, [r3, #2]
 801b5d2:	461d      	mov	r5, r3
 801b5d4:	f997 100e 	ldrsb.w	r1, [r7, #14]
 801b5d8:	687b      	ldr	r3, [r7, #4]
 801b5da:	689b      	ldr	r3, [r3, #8]
 801b5dc:	b29b      	uxth	r3, r3
 801b5de:	687a      	ldr	r2, [r7, #4]
 801b5e0:	7c92      	ldrb	r2, [r2, #18]
 801b5e2:	7df8      	ldrb	r0, [r7, #23]
 801b5e4:	9209      	str	r2, [sp, #36]	; 0x24
 801b5e6:	2201      	movs	r2, #1
 801b5e8:	9208      	str	r2, [sp, #32]
 801b5ea:	2200      	movs	r2, #0
 801b5ec:	9207      	str	r2, [sp, #28]
 801b5ee:	2200      	movs	r2, #0
 801b5f0:	9206      	str	r2, [sp, #24]
 801b5f2:	2200      	movs	r2, #0
 801b5f4:	9205      	str	r2, [sp, #20]
 801b5f6:	2200      	movs	r2, #0
 801b5f8:	9204      	str	r2, [sp, #16]
 801b5fa:	2200      	movs	r2, #0
 801b5fc:	9203      	str	r2, [sp, #12]
 801b5fe:	9302      	str	r3, [sp, #8]
 801b600:	2308      	movs	r3, #8
 801b602:	9301      	str	r3, [sp, #4]
 801b604:	2300      	movs	r3, #0
 801b606:	9300      	str	r3, [sp, #0]
 801b608:	2301      	movs	r3, #1
 801b60a:	460a      	mov	r2, r1
 801b60c:	4629      	mov	r1, r5
 801b60e:	47a0      	blx	r4
 801b610:	687b      	ldr	r3, [r7, #4]
 801b612:	7c5b      	ldrb	r3, [r3, #17]
 801b614:	2b00      	cmp	r3, #0
 801b616:	d005      	beq.n	801b624 <RegionEU868RxConfig+0x148>
 801b618:	f997 300f 	ldrsb.w	r3, [r7, #15]
 801b61c:	4a14      	ldr	r2, [pc, #80]	; (801b670 <RegionEU868RxConfig+0x194>)
 801b61e:	5cd3      	ldrb	r3, [r2, r3]
 801b620:	75bb      	strb	r3, [r7, #22]
 801b622:	e004      	b.n	801b62e <RegionEU868RxConfig+0x152>
 801b624:	f997 300f 	ldrsb.w	r3, [r7, #15]
 801b628:	4a12      	ldr	r2, [pc, #72]	; (801b674 <RegionEU868RxConfig+0x198>)
 801b62a:	5cd3      	ldrb	r3, [r2, r3]
 801b62c:	75bb      	strb	r3, [r7, #22]
 801b62e:	4b0c      	ldr	r3, [pc, #48]	; (801b660 <RegionEU868RxConfig+0x184>)
 801b630:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 801b632:	7dba      	ldrb	r2, [r7, #22]
 801b634:	320d      	adds	r2, #13
 801b636:	b2d1      	uxtb	r1, r2
 801b638:	7dfa      	ldrb	r2, [r7, #23]
 801b63a:	4610      	mov	r0, r2
 801b63c:	4798      	blx	r3
 801b63e:	687b      	ldr	r3, [r7, #4]
 801b640:	7cdb      	ldrb	r3, [r3, #19]
 801b642:	f997 200f 	ldrsb.w	r2, [r7, #15]
 801b646:	6939      	ldr	r1, [r7, #16]
 801b648:	4618      	mov	r0, r3
 801b64a:	f7ff fa6d 	bl	801ab28 <RegionCommonRxConfigPrint>
 801b64e:	683b      	ldr	r3, [r7, #0]
 801b650:	7bfa      	ldrb	r2, [r7, #15]
 801b652:	701a      	strb	r2, [r3, #0]
 801b654:	2301      	movs	r3, #1
 801b656:	4618      	mov	r0, r3
 801b658:	3718      	adds	r7, #24
 801b65a:	46bd      	mov	sp, r7
 801b65c:	bdb0      	pop	{r4, r5, r7, pc}
 801b65e:	bf00      	nop
 801b660:	0802683c 	.word	0x0802683c
 801b664:	2000136c 	.word	0x2000136c
 801b668:	08026780 	.word	0x08026780
 801b66c:	00014585 	.word	0x00014585
 801b670:	080267b0 	.word	0x080267b0
 801b674:	080267a8 	.word	0x080267a8

0801b678 <RegionEU868TxConfig>:
 801b678:	b590      	push	{r4, r7, lr}
 801b67a:	b093      	sub	sp, #76	; 0x4c
 801b67c:	af0a      	add	r7, sp, #40	; 0x28
 801b67e:	60f8      	str	r0, [r7, #12]
 801b680:	60b9      	str	r1, [r7, #8]
 801b682:	607a      	str	r2, [r7, #4]
 801b684:	68fb      	ldr	r3, [r7, #12]
 801b686:	f993 3001 	ldrsb.w	r3, [r3, #1]
 801b68a:	461a      	mov	r2, r3
 801b68c:	4b5c      	ldr	r3, [pc, #368]	; (801b800 <RegionEU868TxConfig+0x188>)
 801b68e:	5c9b      	ldrb	r3, [r3, r2]
 801b690:	77bb      	strb	r3, [r7, #30]
 801b692:	68fb      	ldr	r3, [r7, #12]
 801b694:	f993 0002 	ldrsb.w	r0, [r3, #2]
 801b698:	68fb      	ldr	r3, [r7, #12]
 801b69a:	781b      	ldrb	r3, [r3, #0]
 801b69c:	4619      	mov	r1, r3
 801b69e:	4a59      	ldr	r2, [pc, #356]	; (801b804 <RegionEU868TxConfig+0x18c>)
 801b6a0:	460b      	mov	r3, r1
 801b6a2:	005b      	lsls	r3, r3, #1
 801b6a4:	440b      	add	r3, r1
 801b6a6:	009b      	lsls	r3, r3, #2
 801b6a8:	4413      	add	r3, r2
 801b6aa:	3309      	adds	r3, #9
 801b6ac:	781b      	ldrb	r3, [r3, #0]
 801b6ae:	4619      	mov	r1, r3
 801b6b0:	4a54      	ldr	r2, [pc, #336]	; (801b804 <RegionEU868TxConfig+0x18c>)
 801b6b2:	460b      	mov	r3, r1
 801b6b4:	009b      	lsls	r3, r3, #2
 801b6b6:	440b      	add	r3, r1
 801b6b8:	009b      	lsls	r3, r3, #2
 801b6ba:	4413      	add	r3, r2
 801b6bc:	33c2      	adds	r3, #194	; 0xc2
 801b6be:	f993 1000 	ldrsb.w	r1, [r3]
 801b6c2:	68fb      	ldr	r3, [r7, #12]
 801b6c4:	f993 2001 	ldrsb.w	r2, [r3, #1]
 801b6c8:	4b4f      	ldr	r3, [pc, #316]	; (801b808 <RegionEU868TxConfig+0x190>)
 801b6ca:	f7ff fabf 	bl	801ac4c <LimitTxPower>
 801b6ce:	4603      	mov	r3, r0
 801b6d0:	777b      	strb	r3, [r7, #29]
 801b6d2:	68fb      	ldr	r3, [r7, #12]
 801b6d4:	f993 3001 	ldrsb.w	r3, [r3, #1]
 801b6d8:	4618      	mov	r0, r3
 801b6da:	f7ff fa99 	bl	801ac10 <GetBandwidth>
 801b6de:	61b8      	str	r0, [r7, #24]
 801b6e0:	2300      	movs	r3, #0
 801b6e2:	75fb      	strb	r3, [r7, #23]
 801b6e4:	68fb      	ldr	r3, [r7, #12]
 801b6e6:	6859      	ldr	r1, [r3, #4]
 801b6e8:	68fb      	ldr	r3, [r7, #12]
 801b6ea:	689a      	ldr	r2, [r3, #8]
 801b6ec:	f997 301d 	ldrsb.w	r3, [r7, #29]
 801b6f0:	4618      	mov	r0, r3
 801b6f2:	f7ff f8cb 	bl	801a88c <RegionCommonComputeTxPower>
 801b6f6:	4603      	mov	r3, r0
 801b6f8:	75fb      	strb	r3, [r7, #23]
 801b6fa:	4b44      	ldr	r3, [pc, #272]	; (801b80c <RegionEU868TxConfig+0x194>)
 801b6fc:	68da      	ldr	r2, [r3, #12]
 801b6fe:	68fb      	ldr	r3, [r7, #12]
 801b700:	781b      	ldrb	r3, [r3, #0]
 801b702:	4618      	mov	r0, r3
 801b704:	493f      	ldr	r1, [pc, #252]	; (801b804 <RegionEU868TxConfig+0x18c>)
 801b706:	4603      	mov	r3, r0
 801b708:	005b      	lsls	r3, r3, #1
 801b70a:	4403      	add	r3, r0
 801b70c:	009b      	lsls	r3, r3, #2
 801b70e:	440b      	add	r3, r1
 801b710:	681b      	ldr	r3, [r3, #0]
 801b712:	4618      	mov	r0, r3
 801b714:	4790      	blx	r2
 801b716:	68fb      	ldr	r3, [r7, #12]
 801b718:	f993 3001 	ldrsb.w	r3, [r3, #1]
 801b71c:	2b07      	cmp	r3, #7
 801b71e:	d124      	bne.n	801b76a <RegionEU868TxConfig+0xf2>
 801b720:	2300      	movs	r3, #0
 801b722:	77fb      	strb	r3, [r7, #31]
 801b724:	4b39      	ldr	r3, [pc, #228]	; (801b80c <RegionEU868TxConfig+0x194>)
 801b726:	69dc      	ldr	r4, [r3, #28]
 801b728:	f997 301e 	ldrsb.w	r3, [r7, #30]
 801b72c:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 801b730:	fb02 f303 	mul.w	r3, r2, r3
 801b734:	461a      	mov	r2, r3
 801b736:	f997 1017 	ldrsb.w	r1, [r7, #23]
 801b73a:	7ff8      	ldrb	r0, [r7, #31]
 801b73c:	f44f 637a 	mov.w	r3, #4000	; 0xfa0
 801b740:	9308      	str	r3, [sp, #32]
 801b742:	2300      	movs	r3, #0
 801b744:	9307      	str	r3, [sp, #28]
 801b746:	2300      	movs	r3, #0
 801b748:	9306      	str	r3, [sp, #24]
 801b74a:	2300      	movs	r3, #0
 801b74c:	9305      	str	r3, [sp, #20]
 801b74e:	2301      	movs	r3, #1
 801b750:	9304      	str	r3, [sp, #16]
 801b752:	2300      	movs	r3, #0
 801b754:	9303      	str	r3, [sp, #12]
 801b756:	2305      	movs	r3, #5
 801b758:	9302      	str	r3, [sp, #8]
 801b75a:	2300      	movs	r3, #0
 801b75c:	9301      	str	r3, [sp, #4]
 801b75e:	9200      	str	r2, [sp, #0]
 801b760:	69bb      	ldr	r3, [r7, #24]
 801b762:	f246 12a8 	movw	r2, #25000	; 0x61a8
 801b766:	47a0      	blx	r4
 801b768:	e01d      	b.n	801b7a6 <RegionEU868TxConfig+0x12e>
 801b76a:	2301      	movs	r3, #1
 801b76c:	77fb      	strb	r3, [r7, #31]
 801b76e:	4b27      	ldr	r3, [pc, #156]	; (801b80c <RegionEU868TxConfig+0x194>)
 801b770:	69dc      	ldr	r4, [r3, #28]
 801b772:	f997 301e 	ldrsb.w	r3, [r7, #30]
 801b776:	f997 1017 	ldrsb.w	r1, [r7, #23]
 801b77a:	7ff8      	ldrb	r0, [r7, #31]
 801b77c:	f44f 627a 	mov.w	r2, #4000	; 0xfa0
 801b780:	9208      	str	r2, [sp, #32]
 801b782:	2200      	movs	r2, #0
 801b784:	9207      	str	r2, [sp, #28]
 801b786:	2200      	movs	r2, #0
 801b788:	9206      	str	r2, [sp, #24]
 801b78a:	2200      	movs	r2, #0
 801b78c:	9205      	str	r2, [sp, #20]
 801b78e:	2201      	movs	r2, #1
 801b790:	9204      	str	r2, [sp, #16]
 801b792:	2200      	movs	r2, #0
 801b794:	9203      	str	r2, [sp, #12]
 801b796:	2208      	movs	r2, #8
 801b798:	9202      	str	r2, [sp, #8]
 801b79a:	2201      	movs	r2, #1
 801b79c:	9201      	str	r2, [sp, #4]
 801b79e:	9300      	str	r3, [sp, #0]
 801b7a0:	69bb      	ldr	r3, [r7, #24]
 801b7a2:	2200      	movs	r2, #0
 801b7a4:	47a0      	blx	r4
 801b7a6:	68fb      	ldr	r3, [r7, #12]
 801b7a8:	781b      	ldrb	r3, [r3, #0]
 801b7aa:	4619      	mov	r1, r3
 801b7ac:	4a15      	ldr	r2, [pc, #84]	; (801b804 <RegionEU868TxConfig+0x18c>)
 801b7ae:	460b      	mov	r3, r1
 801b7b0:	005b      	lsls	r3, r3, #1
 801b7b2:	440b      	add	r3, r1
 801b7b4:	009b      	lsls	r3, r3, #2
 801b7b6:	4413      	add	r3, r2
 801b7b8:	681a      	ldr	r2, [r3, #0]
 801b7ba:	68fb      	ldr	r3, [r7, #12]
 801b7bc:	f993 3001 	ldrsb.w	r3, [r3, #1]
 801b7c0:	4619      	mov	r1, r3
 801b7c2:	4610      	mov	r0, r2
 801b7c4:	f7ff f9ee 	bl	801aba4 <RegionCommonTxConfigPrint>
 801b7c8:	68fb      	ldr	r3, [r7, #12]
 801b7ca:	f993 2001 	ldrsb.w	r2, [r3, #1]
 801b7ce:	68fb      	ldr	r3, [r7, #12]
 801b7d0:	899b      	ldrh	r3, [r3, #12]
 801b7d2:	4619      	mov	r1, r3
 801b7d4:	4610      	mov	r0, r2
 801b7d6:	f7ff facb 	bl	801ad70 <GetTimeOnAir>
 801b7da:	4602      	mov	r2, r0
 801b7dc:	687b      	ldr	r3, [r7, #4]
 801b7de:	601a      	str	r2, [r3, #0]
 801b7e0:	4b0a      	ldr	r3, [pc, #40]	; (801b80c <RegionEU868TxConfig+0x194>)
 801b7e2:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 801b7e4:	68fa      	ldr	r2, [r7, #12]
 801b7e6:	8992      	ldrh	r2, [r2, #12]
 801b7e8:	b2d1      	uxtb	r1, r2
 801b7ea:	7ffa      	ldrb	r2, [r7, #31]
 801b7ec:	4610      	mov	r0, r2
 801b7ee:	4798      	blx	r3
 801b7f0:	68bb      	ldr	r3, [r7, #8]
 801b7f2:	7f7a      	ldrb	r2, [r7, #29]
 801b7f4:	701a      	strb	r2, [r3, #0]
 801b7f6:	2301      	movs	r3, #1
 801b7f8:	4618      	mov	r0, r3
 801b7fa:	3724      	adds	r7, #36	; 0x24
 801b7fc:	46bd      	mov	sp, r7
 801b7fe:	bd90      	pop	{r4, r7, pc}
 801b800:	08026780 	.word	0x08026780
 801b804:	2000136c 	.word	0x2000136c
 801b808:	200014a4 	.word	0x200014a4
 801b80c:	0802683c 	.word	0x0802683c

0801b810 <RegionEU868LinkAdrReq>:
 801b810:	b590      	push	{r4, r7, lr}
 801b812:	b093      	sub	sp, #76	; 0x4c
 801b814:	af00      	add	r7, sp, #0
 801b816:	60f8      	str	r0, [r7, #12]
 801b818:	60b9      	str	r1, [r7, #8]
 801b81a:	607a      	str	r2, [r7, #4]
 801b81c:	603b      	str	r3, [r7, #0]
 801b81e:	2307      	movs	r3, #7
 801b820:	f887 3047 	strb.w	r3, [r7, #71]	; 0x47
 801b824:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 801b828:	2200      	movs	r2, #0
 801b82a:	601a      	str	r2, [r3, #0]
 801b82c:	809a      	strh	r2, [r3, #4]
 801b82e:	2300      	movs	r3, #0
 801b830:	f887 3044 	strb.w	r3, [r7, #68]	; 0x44
 801b834:	2300      	movs	r3, #0
 801b836:	f887 3046 	strb.w	r3, [r7, #70]	; 0x46
 801b83a:	2300      	movs	r3, #0
 801b83c:	877b      	strh	r3, [r7, #58]	; 0x3a
 801b83e:	e083      	b.n	801b948 <RegionEU868LinkAdrReq+0x138>
 801b840:	68fb      	ldr	r3, [r7, #12]
 801b842:	685a      	ldr	r2, [r3, #4]
 801b844:	f897 3046 	ldrb.w	r3, [r7, #70]	; 0x46
 801b848:	4413      	add	r3, r2
 801b84a:	f107 023c 	add.w	r2, r7, #60	; 0x3c
 801b84e:	4611      	mov	r1, r2
 801b850:	4618      	mov	r0, r3
 801b852:	f7fe feed 	bl	801a630 <RegionCommonParseLinkAdrReq>
 801b856:	4603      	mov	r3, r0
 801b858:	f887 3044 	strb.w	r3, [r7, #68]	; 0x44
 801b85c:	f897 3044 	ldrb.w	r3, [r7, #68]	; 0x44
 801b860:	2b00      	cmp	r3, #0
 801b862:	d079      	beq.n	801b958 <RegionEU868LinkAdrReq+0x148>
 801b864:	f897 2046 	ldrb.w	r2, [r7, #70]	; 0x46
 801b868:	f897 3044 	ldrb.w	r3, [r7, #68]	; 0x44
 801b86c:	4413      	add	r3, r2
 801b86e:	f887 3046 	strb.w	r3, [r7, #70]	; 0x46
 801b872:	2307      	movs	r3, #7
 801b874:	f887 3047 	strb.w	r3, [r7, #71]	; 0x47
 801b878:	f8b7 3040 	ldrh.w	r3, [r7, #64]	; 0x40
 801b87c:	877b      	strh	r3, [r7, #58]	; 0x3a
 801b87e:	f897 303f 	ldrb.w	r3, [r7, #63]	; 0x3f
 801b882:	2b00      	cmp	r3, #0
 801b884:	d109      	bne.n	801b89a <RegionEU868LinkAdrReq+0x8a>
 801b886:	8f7b      	ldrh	r3, [r7, #58]	; 0x3a
 801b888:	2b00      	cmp	r3, #0
 801b88a:	d106      	bne.n	801b89a <RegionEU868LinkAdrReq+0x8a>
 801b88c:	f897 3047 	ldrb.w	r3, [r7, #71]	; 0x47
 801b890:	f023 0301 	bic.w	r3, r3, #1
 801b894:	f887 3047 	strb.w	r3, [r7, #71]	; 0x47
 801b898:	e056      	b.n	801b948 <RegionEU868LinkAdrReq+0x138>
 801b89a:	f897 303f 	ldrb.w	r3, [r7, #63]	; 0x3f
 801b89e:	2b00      	cmp	r3, #0
 801b8a0:	d003      	beq.n	801b8aa <RegionEU868LinkAdrReq+0x9a>
 801b8a2:	f897 303f 	ldrb.w	r3, [r7, #63]	; 0x3f
 801b8a6:	2b05      	cmp	r3, #5
 801b8a8:	d903      	bls.n	801b8b2 <RegionEU868LinkAdrReq+0xa2>
 801b8aa:	f897 303f 	ldrb.w	r3, [r7, #63]	; 0x3f
 801b8ae:	2b06      	cmp	r3, #6
 801b8b0:	d906      	bls.n	801b8c0 <RegionEU868LinkAdrReq+0xb0>
 801b8b2:	f897 3047 	ldrb.w	r3, [r7, #71]	; 0x47
 801b8b6:	f023 0301 	bic.w	r3, r3, #1
 801b8ba:	f887 3047 	strb.w	r3, [r7, #71]	; 0x47
 801b8be:	e043      	b.n	801b948 <RegionEU868LinkAdrReq+0x138>
 801b8c0:	2300      	movs	r3, #0
 801b8c2:	f887 3045 	strb.w	r3, [r7, #69]	; 0x45
 801b8c6:	e03b      	b.n	801b940 <RegionEU868LinkAdrReq+0x130>
 801b8c8:	f897 303f 	ldrb.w	r3, [r7, #63]	; 0x3f
 801b8cc:	2b06      	cmp	r3, #6
 801b8ce:	d117      	bne.n	801b900 <RegionEU868LinkAdrReq+0xf0>
 801b8d0:	f897 2045 	ldrb.w	r2, [r7, #69]	; 0x45
 801b8d4:	495a      	ldr	r1, [pc, #360]	; (801ba40 <RegionEU868LinkAdrReq+0x230>)
 801b8d6:	4613      	mov	r3, r2
 801b8d8:	005b      	lsls	r3, r3, #1
 801b8da:	4413      	add	r3, r2
 801b8dc:	009b      	lsls	r3, r3, #2
 801b8de:	440b      	add	r3, r1
 801b8e0:	681b      	ldr	r3, [r3, #0]
 801b8e2:	2b00      	cmp	r3, #0
 801b8e4:	d027      	beq.n	801b936 <RegionEU868LinkAdrReq+0x126>
 801b8e6:	f897 3045 	ldrb.w	r3, [r7, #69]	; 0x45
 801b8ea:	2201      	movs	r2, #1
 801b8ec:	fa02 f303 	lsl.w	r3, r2, r3
 801b8f0:	b21a      	sxth	r2, r3
 801b8f2:	8f7b      	ldrh	r3, [r7, #58]	; 0x3a
 801b8f4:	b21b      	sxth	r3, r3
 801b8f6:	4313      	orrs	r3, r2
 801b8f8:	b21b      	sxth	r3, r3
 801b8fa:	b29b      	uxth	r3, r3
 801b8fc:	877b      	strh	r3, [r7, #58]	; 0x3a
 801b8fe:	e01a      	b.n	801b936 <RegionEU868LinkAdrReq+0x126>
 801b900:	8f7b      	ldrh	r3, [r7, #58]	; 0x3a
 801b902:	461a      	mov	r2, r3
 801b904:	f897 3045 	ldrb.w	r3, [r7, #69]	; 0x45
 801b908:	fa42 f303 	asr.w	r3, r2, r3
 801b90c:	f003 0301 	and.w	r3, r3, #1
 801b910:	2b00      	cmp	r3, #0
 801b912:	d010      	beq.n	801b936 <RegionEU868LinkAdrReq+0x126>
 801b914:	f897 2045 	ldrb.w	r2, [r7, #69]	; 0x45
 801b918:	4949      	ldr	r1, [pc, #292]	; (801ba40 <RegionEU868LinkAdrReq+0x230>)
 801b91a:	4613      	mov	r3, r2
 801b91c:	005b      	lsls	r3, r3, #1
 801b91e:	4413      	add	r3, r2
 801b920:	009b      	lsls	r3, r3, #2
 801b922:	440b      	add	r3, r1
 801b924:	681b      	ldr	r3, [r3, #0]
 801b926:	2b00      	cmp	r3, #0
 801b928:	d105      	bne.n	801b936 <RegionEU868LinkAdrReq+0x126>
 801b92a:	f897 3047 	ldrb.w	r3, [r7, #71]	; 0x47
 801b92e:	f023 0301 	bic.w	r3, r3, #1
 801b932:	f887 3047 	strb.w	r3, [r7, #71]	; 0x47
 801b936:	f897 3045 	ldrb.w	r3, [r7, #69]	; 0x45
 801b93a:	3301      	adds	r3, #1
 801b93c:	f887 3045 	strb.w	r3, [r7, #69]	; 0x45
 801b940:	f897 3045 	ldrb.w	r3, [r7, #69]	; 0x45
 801b944:	2b0f      	cmp	r3, #15
 801b946:	d9bf      	bls.n	801b8c8 <RegionEU868LinkAdrReq+0xb8>
 801b948:	68fb      	ldr	r3, [r7, #12]
 801b94a:	7a1b      	ldrb	r3, [r3, #8]
 801b94c:	f897 2046 	ldrb.w	r2, [r7, #70]	; 0x46
 801b950:	429a      	cmp	r2, r3
 801b952:	f4ff af75 	bcc.w	801b840 <RegionEU868LinkAdrReq+0x30>
 801b956:	e000      	b.n	801b95a <RegionEU868LinkAdrReq+0x14a>
 801b958:	bf00      	nop
 801b95a:	2302      	movs	r3, #2
 801b95c:	f887 3034 	strb.w	r3, [r7, #52]	; 0x34
 801b960:	68fb      	ldr	r3, [r7, #12]
 801b962:	7a5b      	ldrb	r3, [r3, #9]
 801b964:	f887 3036 	strb.w	r3, [r7, #54]	; 0x36
 801b968:	f107 0334 	add.w	r3, r7, #52	; 0x34
 801b96c:	4618      	mov	r0, r3
 801b96e:	f7ff fa4d 	bl	801ae0c <RegionEU868GetPhyParam>
 801b972:	4603      	mov	r3, r0
 801b974:	633b      	str	r3, [r7, #48]	; 0x30
 801b976:	f897 3047 	ldrb.w	r3, [r7, #71]	; 0x47
 801b97a:	753b      	strb	r3, [r7, #20]
 801b97c:	68fb      	ldr	r3, [r7, #12]
 801b97e:	7a9b      	ldrb	r3, [r3, #10]
 801b980:	757b      	strb	r3, [r7, #21]
 801b982:	f997 303d 	ldrsb.w	r3, [r7, #61]	; 0x3d
 801b986:	75bb      	strb	r3, [r7, #22]
 801b988:	f997 303e 	ldrsb.w	r3, [r7, #62]	; 0x3e
 801b98c:	75fb      	strb	r3, [r7, #23]
 801b98e:	f897 303c 	ldrb.w	r3, [r7, #60]	; 0x3c
 801b992:	763b      	strb	r3, [r7, #24]
 801b994:	68fb      	ldr	r3, [r7, #12]
 801b996:	f993 300b 	ldrsb.w	r3, [r3, #11]
 801b99a:	767b      	strb	r3, [r7, #25]
 801b99c:	68fb      	ldr	r3, [r7, #12]
 801b99e:	f993 300c 	ldrsb.w	r3, [r3, #12]
 801b9a2:	76bb      	strb	r3, [r7, #26]
 801b9a4:	68fb      	ldr	r3, [r7, #12]
 801b9a6:	7b5b      	ldrb	r3, [r3, #13]
 801b9a8:	b25b      	sxtb	r3, r3
 801b9aa:	76fb      	strb	r3, [r7, #27]
 801b9ac:	2310      	movs	r3, #16
 801b9ae:	773b      	strb	r3, [r7, #28]
 801b9b0:	f107 033a 	add.w	r3, r7, #58	; 0x3a
 801b9b4:	623b      	str	r3, [r7, #32]
 801b9b6:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 801b9b8:	b25b      	sxtb	r3, r3
 801b9ba:	f887 3024 	strb.w	r3, [r7, #36]	; 0x24
 801b9be:	2307      	movs	r3, #7
 801b9c0:	f887 3025 	strb.w	r3, [r7, #37]	; 0x25
 801b9c4:	4b1e      	ldr	r3, [pc, #120]	; (801ba40 <RegionEU868LinkAdrReq+0x230>)
 801b9c6:	62bb      	str	r3, [r7, #40]	; 0x28
 801b9c8:	2307      	movs	r3, #7
 801b9ca:	f887 302c 	strb.w	r3, [r7, #44]	; 0x2c
 801b9ce:	2300      	movs	r3, #0
 801b9d0:	f887 302d 	strb.w	r3, [r7, #45]	; 0x2d
 801b9d4:	68fb      	ldr	r3, [r7, #12]
 801b9d6:	681b      	ldr	r3, [r3, #0]
 801b9d8:	613b      	str	r3, [r7, #16]
 801b9da:	f107 043c 	add.w	r4, r7, #60	; 0x3c
 801b9de:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 801b9e2:	1c9a      	adds	r2, r3, #2
 801b9e4:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 801b9e8:	1c59      	adds	r1, r3, #1
 801b9ea:	f107 0010 	add.w	r0, r7, #16
 801b9ee:	4623      	mov	r3, r4
 801b9f0:	f7fe fe6f 	bl	801a6d2 <RegionCommonLinkAdrReqVerifyParams>
 801b9f4:	4603      	mov	r3, r0
 801b9f6:	f887 3047 	strb.w	r3, [r7, #71]	; 0x47
 801b9fa:	f897 3047 	ldrb.w	r3, [r7, #71]	; 0x47
 801b9fe:	2b07      	cmp	r3, #7
 801ba00:	d108      	bne.n	801ba14 <RegionEU868LinkAdrReq+0x204>
 801ba02:	2202      	movs	r2, #2
 801ba04:	2100      	movs	r1, #0
 801ba06:	480f      	ldr	r0, [pc, #60]	; (801ba44 <RegionEU868LinkAdrReq+0x234>)
 801ba08:	f001 fe4a 	bl	801d6a0 <memset1>
 801ba0c:	8f7a      	ldrh	r2, [r7, #58]	; 0x3a
 801ba0e:	4b0c      	ldr	r3, [pc, #48]	; (801ba40 <RegionEU868LinkAdrReq+0x230>)
 801ba10:	f8a3 2138 	strh.w	r2, [r3, #312]	; 0x138
 801ba14:	f997 203d 	ldrsb.w	r2, [r7, #61]	; 0x3d
 801ba18:	68bb      	ldr	r3, [r7, #8]
 801ba1a:	701a      	strb	r2, [r3, #0]
 801ba1c:	f997 203e 	ldrsb.w	r2, [r7, #62]	; 0x3e
 801ba20:	687b      	ldr	r3, [r7, #4]
 801ba22:	701a      	strb	r2, [r3, #0]
 801ba24:	f897 203c 	ldrb.w	r2, [r7, #60]	; 0x3c
 801ba28:	683b      	ldr	r3, [r7, #0]
 801ba2a:	701a      	strb	r2, [r3, #0]
 801ba2c:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 801ba2e:	f897 2046 	ldrb.w	r2, [r7, #70]	; 0x46
 801ba32:	701a      	strb	r2, [r3, #0]
 801ba34:	f897 3047 	ldrb.w	r3, [r7, #71]	; 0x47
 801ba38:	4618      	mov	r0, r3
 801ba3a:	374c      	adds	r7, #76	; 0x4c
 801ba3c:	46bd      	mov	sp, r7
 801ba3e:	bd90      	pop	{r4, r7, pc}
 801ba40:	2000136c 	.word	0x2000136c
 801ba44:	200014a4 	.word	0x200014a4

0801ba48 <RegionEU868RxParamSetupReq>:
 801ba48:	b580      	push	{r7, lr}
 801ba4a:	b084      	sub	sp, #16
 801ba4c:	af00      	add	r7, sp, #0
 801ba4e:	6078      	str	r0, [r7, #4]
 801ba50:	2307      	movs	r3, #7
 801ba52:	73fb      	strb	r3, [r7, #15]
 801ba54:	2300      	movs	r3, #0
 801ba56:	73bb      	strb	r3, [r7, #14]
 801ba58:	687b      	ldr	r3, [r7, #4]
 801ba5a:	685b      	ldr	r3, [r3, #4]
 801ba5c:	f107 020e 	add.w	r2, r7, #14
 801ba60:	4611      	mov	r1, r2
 801ba62:	4618      	mov	r0, r3
 801ba64:	f7ff f90e 	bl	801ac84 <VerifyRfFreq>
 801ba68:	4603      	mov	r3, r0
 801ba6a:	f083 0301 	eor.w	r3, r3, #1
 801ba6e:	b2db      	uxtb	r3, r3
 801ba70:	2b00      	cmp	r3, #0
 801ba72:	d003      	beq.n	801ba7c <RegionEU868RxParamSetupReq+0x34>
 801ba74:	7bfb      	ldrb	r3, [r7, #15]
 801ba76:	f023 0301 	bic.w	r3, r3, #1
 801ba7a:	73fb      	strb	r3, [r7, #15]
 801ba7c:	687b      	ldr	r3, [r7, #4]
 801ba7e:	f993 3000 	ldrsb.w	r3, [r3]
 801ba82:	2207      	movs	r2, #7
 801ba84:	2100      	movs	r1, #0
 801ba86:	4618      	mov	r0, r3
 801ba88:	f7fe fc6a 	bl	801a360 <RegionCommonValueInRange>
 801ba8c:	4603      	mov	r3, r0
 801ba8e:	2b00      	cmp	r3, #0
 801ba90:	d103      	bne.n	801ba9a <RegionEU868RxParamSetupReq+0x52>
 801ba92:	7bfb      	ldrb	r3, [r7, #15]
 801ba94:	f023 0302 	bic.w	r3, r3, #2
 801ba98:	73fb      	strb	r3, [r7, #15]
 801ba9a:	687b      	ldr	r3, [r7, #4]
 801ba9c:	f993 3001 	ldrsb.w	r3, [r3, #1]
 801baa0:	2205      	movs	r2, #5
 801baa2:	2100      	movs	r1, #0
 801baa4:	4618      	mov	r0, r3
 801baa6:	f7fe fc5b 	bl	801a360 <RegionCommonValueInRange>
 801baaa:	4603      	mov	r3, r0
 801baac:	2b00      	cmp	r3, #0
 801baae:	d103      	bne.n	801bab8 <RegionEU868RxParamSetupReq+0x70>
 801bab0:	7bfb      	ldrb	r3, [r7, #15]
 801bab2:	f023 0304 	bic.w	r3, r3, #4
 801bab6:	73fb      	strb	r3, [r7, #15]
 801bab8:	7bfb      	ldrb	r3, [r7, #15]
 801baba:	4618      	mov	r0, r3
 801babc:	3710      	adds	r7, #16
 801babe:	46bd      	mov	sp, r7
 801bac0:	bd80      	pop	{r7, pc}
	...

0801bac4 <RegionEU868NewChannelReq>:
 801bac4:	b580      	push	{r7, lr}
 801bac6:	b086      	sub	sp, #24
 801bac8:	af00      	add	r7, sp, #0
 801baca:	6078      	str	r0, [r7, #4]
 801bacc:	2303      	movs	r3, #3
 801bace:	75fb      	strb	r3, [r7, #23]
 801bad0:	687b      	ldr	r3, [r7, #4]
 801bad2:	681b      	ldr	r3, [r3, #0]
 801bad4:	681b      	ldr	r3, [r3, #0]
 801bad6:	2b00      	cmp	r3, #0
 801bad8:	d114      	bne.n	801bb04 <RegionEU868NewChannelReq+0x40>
 801bada:	687b      	ldr	r3, [r7, #4]
 801badc:	f993 3004 	ldrsb.w	r3, [r3, #4]
 801bae0:	b2db      	uxtb	r3, r3
 801bae2:	723b      	strb	r3, [r7, #8]
 801bae4:	f107 0308 	add.w	r3, r7, #8
 801bae8:	4618      	mov	r0, r3
 801baea:	f000 f9e5 	bl	801beb8 <RegionEU868ChannelsRemove>
 801baee:	4603      	mov	r3, r0
 801baf0:	f083 0301 	eor.w	r3, r3, #1
 801baf4:	b2db      	uxtb	r3, r3
 801baf6:	2b00      	cmp	r3, #0
 801baf8:	d03b      	beq.n	801bb72 <RegionEU868NewChannelReq+0xae>
 801bafa:	7dfb      	ldrb	r3, [r7, #23]
 801bafc:	f023 0303 	bic.w	r3, r3, #3
 801bb00:	75fb      	strb	r3, [r7, #23]
 801bb02:	e036      	b.n	801bb72 <RegionEU868NewChannelReq+0xae>
 801bb04:	687b      	ldr	r3, [r7, #4]
 801bb06:	681b      	ldr	r3, [r3, #0]
 801bb08:	60fb      	str	r3, [r7, #12]
 801bb0a:	687b      	ldr	r3, [r7, #4]
 801bb0c:	f993 3004 	ldrsb.w	r3, [r3, #4]
 801bb10:	b2db      	uxtb	r3, r3
 801bb12:	743b      	strb	r3, [r7, #16]
 801bb14:	f107 030c 	add.w	r3, r7, #12
 801bb18:	4618      	mov	r0, r3
 801bb1a:	f000 f92f 	bl	801bd7c <RegionEU868ChannelAdd>
 801bb1e:	4603      	mov	r3, r0
 801bb20:	2b06      	cmp	r3, #6
 801bb22:	d820      	bhi.n	801bb66 <RegionEU868NewChannelReq+0xa2>
 801bb24:	a201      	add	r2, pc, #4	; (adr r2, 801bb2c <RegionEU868NewChannelReq+0x68>)
 801bb26:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 801bb2a:	bf00      	nop
 801bb2c:	0801bb71 	.word	0x0801bb71
 801bb30:	0801bb67 	.word	0x0801bb67
 801bb34:	0801bb67 	.word	0x0801bb67
 801bb38:	0801bb67 	.word	0x0801bb67
 801bb3c:	0801bb49 	.word	0x0801bb49
 801bb40:	0801bb53 	.word	0x0801bb53
 801bb44:	0801bb5d 	.word	0x0801bb5d
 801bb48:	7dfb      	ldrb	r3, [r7, #23]
 801bb4a:	f023 0301 	bic.w	r3, r3, #1
 801bb4e:	75fb      	strb	r3, [r7, #23]
 801bb50:	e00f      	b.n	801bb72 <RegionEU868NewChannelReq+0xae>
 801bb52:	7dfb      	ldrb	r3, [r7, #23]
 801bb54:	f023 0302 	bic.w	r3, r3, #2
 801bb58:	75fb      	strb	r3, [r7, #23]
 801bb5a:	e00a      	b.n	801bb72 <RegionEU868NewChannelReq+0xae>
 801bb5c:	7dfb      	ldrb	r3, [r7, #23]
 801bb5e:	f023 0303 	bic.w	r3, r3, #3
 801bb62:	75fb      	strb	r3, [r7, #23]
 801bb64:	e005      	b.n	801bb72 <RegionEU868NewChannelReq+0xae>
 801bb66:	7dfb      	ldrb	r3, [r7, #23]
 801bb68:	f023 0303 	bic.w	r3, r3, #3
 801bb6c:	75fb      	strb	r3, [r7, #23]
 801bb6e:	e000      	b.n	801bb72 <RegionEU868NewChannelReq+0xae>
 801bb70:	bf00      	nop
 801bb72:	7dfb      	ldrb	r3, [r7, #23]
 801bb74:	4618      	mov	r0, r3
 801bb76:	3718      	adds	r7, #24
 801bb78:	46bd      	mov	sp, r7
 801bb7a:	bd80      	pop	{r7, pc}

0801bb7c <RegionEU868TxParamSetupReq>:
 801bb7c:	b480      	push	{r7}
 801bb7e:	b083      	sub	sp, #12
 801bb80:	af00      	add	r7, sp, #0
 801bb82:	6078      	str	r0, [r7, #4]
 801bb84:	f04f 33ff 	mov.w	r3, #4294967295
 801bb88:	4618      	mov	r0, r3
 801bb8a:	370c      	adds	r7, #12
 801bb8c:	46bd      	mov	sp, r7
 801bb8e:	bc80      	pop	{r7}
 801bb90:	4770      	bx	lr
	...

0801bb94 <RegionEU868DlChannelReq>:
 801bb94:	b580      	push	{r7, lr}
 801bb96:	b084      	sub	sp, #16
 801bb98:	af00      	add	r7, sp, #0
 801bb9a:	6078      	str	r0, [r7, #4]
 801bb9c:	2303      	movs	r3, #3
 801bb9e:	73fb      	strb	r3, [r7, #15]
 801bba0:	2300      	movs	r3, #0
 801bba2:	73bb      	strb	r3, [r7, #14]
 801bba4:	687b      	ldr	r3, [r7, #4]
 801bba6:	685b      	ldr	r3, [r3, #4]
 801bba8:	f107 020e 	add.w	r2, r7, #14
 801bbac:	4611      	mov	r1, r2
 801bbae:	4618      	mov	r0, r3
 801bbb0:	f7ff f868 	bl	801ac84 <VerifyRfFreq>
 801bbb4:	4603      	mov	r3, r0
 801bbb6:	f083 0301 	eor.w	r3, r3, #1
 801bbba:	b2db      	uxtb	r3, r3
 801bbbc:	2b00      	cmp	r3, #0
 801bbbe:	d003      	beq.n	801bbc8 <RegionEU868DlChannelReq+0x34>
 801bbc0:	7bfb      	ldrb	r3, [r7, #15]
 801bbc2:	f023 0301 	bic.w	r3, r3, #1
 801bbc6:	73fb      	strb	r3, [r7, #15]
 801bbc8:	687b      	ldr	r3, [r7, #4]
 801bbca:	781b      	ldrb	r3, [r3, #0]
 801bbcc:	4619      	mov	r1, r3
 801bbce:	4a11      	ldr	r2, [pc, #68]	; (801bc14 <RegionEU868DlChannelReq+0x80>)
 801bbd0:	460b      	mov	r3, r1
 801bbd2:	005b      	lsls	r3, r3, #1
 801bbd4:	440b      	add	r3, r1
 801bbd6:	009b      	lsls	r3, r3, #2
 801bbd8:	4413      	add	r3, r2
 801bbda:	681b      	ldr	r3, [r3, #0]
 801bbdc:	2b00      	cmp	r3, #0
 801bbde:	d103      	bne.n	801bbe8 <RegionEU868DlChannelReq+0x54>
 801bbe0:	7bfb      	ldrb	r3, [r7, #15]
 801bbe2:	f023 0302 	bic.w	r3, r3, #2
 801bbe6:	73fb      	strb	r3, [r7, #15]
 801bbe8:	7bfb      	ldrb	r3, [r7, #15]
 801bbea:	2b03      	cmp	r3, #3
 801bbec:	d10c      	bne.n	801bc08 <RegionEU868DlChannelReq+0x74>
 801bbee:	687b      	ldr	r3, [r7, #4]
 801bbf0:	781b      	ldrb	r3, [r3, #0]
 801bbf2:	4618      	mov	r0, r3
 801bbf4:	687b      	ldr	r3, [r7, #4]
 801bbf6:	685a      	ldr	r2, [r3, #4]
 801bbf8:	4906      	ldr	r1, [pc, #24]	; (801bc14 <RegionEU868DlChannelReq+0x80>)
 801bbfa:	4603      	mov	r3, r0
 801bbfc:	005b      	lsls	r3, r3, #1
 801bbfe:	4403      	add	r3, r0
 801bc00:	009b      	lsls	r3, r3, #2
 801bc02:	440b      	add	r3, r1
 801bc04:	3304      	adds	r3, #4
 801bc06:	601a      	str	r2, [r3, #0]
 801bc08:	7bfb      	ldrb	r3, [r7, #15]
 801bc0a:	4618      	mov	r0, r3
 801bc0c:	3710      	adds	r7, #16
 801bc0e:	46bd      	mov	sp, r7
 801bc10:	bd80      	pop	{r7, pc}
 801bc12:	bf00      	nop
 801bc14:	2000136c 	.word	0x2000136c

0801bc18 <RegionEU868AlternateDr>:
 801bc18:	b480      	push	{r7}
 801bc1a:	b083      	sub	sp, #12
 801bc1c:	af00      	add	r7, sp, #0
 801bc1e:	4603      	mov	r3, r0
 801bc20:	460a      	mov	r2, r1
 801bc22:	71fb      	strb	r3, [r7, #7]
 801bc24:	4613      	mov	r3, r2
 801bc26:	71bb      	strb	r3, [r7, #6]
 801bc28:	f997 3007 	ldrsb.w	r3, [r7, #7]
 801bc2c:	4618      	mov	r0, r3
 801bc2e:	370c      	adds	r7, #12
 801bc30:	46bd      	mov	sp, r7
 801bc32:	bc80      	pop	{r7}
 801bc34:	4770      	bx	lr
	...

0801bc38 <RegionEU868NextChannel>:
 801bc38:	b580      	push	{r7, lr}
 801bc3a:	b098      	sub	sp, #96	; 0x60
 801bc3c:	af02      	add	r7, sp, #8
 801bc3e:	60f8      	str	r0, [r7, #12]
 801bc40:	60b9      	str	r1, [r7, #8]
 801bc42:	607a      	str	r2, [r7, #4]
 801bc44:	603b      	str	r3, [r7, #0]
 801bc46:	2300      	movs	r3, #0
 801bc48:	f887 3056 	strb.w	r3, [r7, #86]	; 0x56
 801bc4c:	2300      	movs	r3, #0
 801bc4e:	f887 3055 	strb.w	r3, [r7, #85]	; 0x55
 801bc52:	2300      	movs	r3, #0
 801bc54:	647b      	str	r3, [r7, #68]	; 0x44
 801bc56:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801bc5a:	2200      	movs	r2, #0
 801bc5c:	601a      	str	r2, [r3, #0]
 801bc5e:	605a      	str	r2, [r3, #4]
 801bc60:	609a      	str	r2, [r3, #8]
 801bc62:	230c      	movs	r3, #12
 801bc64:	f887 3057 	strb.w	r3, [r7, #87]	; 0x57
 801bc68:	2201      	movs	r2, #1
 801bc6a:	2100      	movs	r1, #0
 801bc6c:	4840      	ldr	r0, [pc, #256]	; (801bd70 <RegionEU868NextChannel+0x138>)
 801bc6e:	f7fe fbc8 	bl	801a402 <RegionCommonCountChannels>
 801bc72:	4603      	mov	r3, r0
 801bc74:	2b00      	cmp	r3, #0
 801bc76:	d108      	bne.n	801bc8a <RegionEU868NextChannel+0x52>
 801bc78:	4b3e      	ldr	r3, [pc, #248]	; (801bd74 <RegionEU868NextChannel+0x13c>)
 801bc7a:	f8b3 3138 	ldrh.w	r3, [r3, #312]	; 0x138
 801bc7e:	f043 0307 	orr.w	r3, r3, #7
 801bc82:	b29a      	uxth	r2, r3
 801bc84:	4b3b      	ldr	r3, [pc, #236]	; (801bd74 <RegionEU868NextChannel+0x13c>)
 801bc86:	f8a3 2138 	strh.w	r2, [r3, #312]	; 0x138
 801bc8a:	68fb      	ldr	r3, [r7, #12]
 801bc8c:	7a5b      	ldrb	r3, [r3, #9]
 801bc8e:	743b      	strb	r3, [r7, #16]
 801bc90:	68fb      	ldr	r3, [r7, #12]
 801bc92:	f993 3008 	ldrsb.w	r3, [r3, #8]
 801bc96:	b2db      	uxtb	r3, r3
 801bc98:	747b      	strb	r3, [r7, #17]
 801bc9a:	4b35      	ldr	r3, [pc, #212]	; (801bd70 <RegionEU868NextChannel+0x138>)
 801bc9c:	617b      	str	r3, [r7, #20]
 801bc9e:	4b35      	ldr	r3, [pc, #212]	; (801bd74 <RegionEU868NextChannel+0x13c>)
 801bca0:	61bb      	str	r3, [r7, #24]
 801bca2:	4b35      	ldr	r3, [pc, #212]	; (801bd78 <RegionEU868NextChannel+0x140>)
 801bca4:	61fb      	str	r3, [r7, #28]
 801bca6:	2310      	movs	r3, #16
 801bca8:	843b      	strh	r3, [r7, #32]
 801bcaa:	2307      	movs	r3, #7
 801bcac:	847b      	strh	r3, [r7, #34]	; 0x22
 801bcae:	68fb      	ldr	r3, [r7, #12]
 801bcb0:	681b      	ldr	r3, [r3, #0]
 801bcb2:	627b      	str	r3, [r7, #36]	; 0x24
 801bcb4:	68fb      	ldr	r3, [r7, #12]
 801bcb6:	685b      	ldr	r3, [r3, #4]
 801bcb8:	62bb      	str	r3, [r7, #40]	; 0x28
 801bcba:	68fb      	ldr	r3, [r7, #12]
 801bcbc:	7a9b      	ldrb	r3, [r3, #10]
 801bcbe:	f887 302c 	strb.w	r3, [r7, #44]	; 0x2c
 801bcc2:	2306      	movs	r3, #6
 801bcc4:	f887 302d 	strb.w	r3, [r7, #45]	; 0x2d
 801bcc8:	68fa      	ldr	r2, [r7, #12]
 801bcca:	f107 0330 	add.w	r3, r7, #48	; 0x30
 801bcce:	320c      	adds	r2, #12
 801bcd0:	e892 0003 	ldmia.w	r2, {r0, r1}
 801bcd4:	e883 0003 	stmia.w	r3, {r0, r1}
 801bcd8:	68fb      	ldr	r3, [r7, #12]
 801bcda:	7d1b      	ldrb	r3, [r3, #20]
 801bcdc:	f887 3038 	strb.w	r3, [r7, #56]	; 0x38
 801bce0:	68fb      	ldr	r3, [r7, #12]
 801bce2:	f993 2008 	ldrsb.w	r2, [r3, #8]
 801bce6:	68fb      	ldr	r3, [r7, #12]
 801bce8:	8adb      	ldrh	r3, [r3, #22]
 801bcea:	4619      	mov	r1, r3
 801bcec:	4610      	mov	r0, r2
 801bcee:	f7ff f83f 	bl	801ad70 <GetTimeOnAir>
 801bcf2:	4603      	mov	r3, r0
 801bcf4:	63fb      	str	r3, [r7, #60]	; 0x3c
 801bcf6:	f107 0310 	add.w	r3, r7, #16
 801bcfa:	643b      	str	r3, [r7, #64]	; 0x40
 801bcfc:	f107 0156 	add.w	r1, r7, #86	; 0x56
 801bd00:	f107 0244 	add.w	r2, r7, #68	; 0x44
 801bd04:	f107 0024 	add.w	r0, r7, #36	; 0x24
 801bd08:	687b      	ldr	r3, [r7, #4]
 801bd0a:	9301      	str	r3, [sp, #4]
 801bd0c:	f107 0355 	add.w	r3, r7, #85	; 0x55
 801bd10:	9300      	str	r3, [sp, #0]
 801bd12:	460b      	mov	r3, r1
 801bd14:	6839      	ldr	r1, [r7, #0]
 801bd16:	f7fe fea4 	bl	801aa62 <RegionCommonIdentifyChannels>
 801bd1a:	4603      	mov	r3, r0
 801bd1c:	f887 3057 	strb.w	r3, [r7, #87]	; 0x57
 801bd20:	f897 3057 	ldrb.w	r3, [r7, #87]	; 0x57
 801bd24:	2b00      	cmp	r3, #0
 801bd26:	d10f      	bne.n	801bd48 <RegionEU868NextChannel+0x110>
 801bd28:	f897 3056 	ldrb.w	r3, [r7, #86]	; 0x56
 801bd2c:	3b01      	subs	r3, #1
 801bd2e:	4619      	mov	r1, r3
 801bd30:	2000      	movs	r0, #0
 801bd32:	f001 fc63 	bl	801d5fc <randr>
 801bd36:	4603      	mov	r3, r0
 801bd38:	f107 0258 	add.w	r2, r7, #88	; 0x58
 801bd3c:	4413      	add	r3, r2
 801bd3e:	f813 2c14 	ldrb.w	r2, [r3, #-20]
 801bd42:	68bb      	ldr	r3, [r7, #8]
 801bd44:	701a      	strb	r2, [r3, #0]
 801bd46:	e00c      	b.n	801bd62 <RegionEU868NextChannel+0x12a>
 801bd48:	f897 3057 	ldrb.w	r3, [r7, #87]	; 0x57
 801bd4c:	2b0c      	cmp	r3, #12
 801bd4e:	d108      	bne.n	801bd62 <RegionEU868NextChannel+0x12a>
 801bd50:	4b08      	ldr	r3, [pc, #32]	; (801bd74 <RegionEU868NextChannel+0x13c>)
 801bd52:	f8b3 3138 	ldrh.w	r3, [r3, #312]	; 0x138
 801bd56:	f043 0307 	orr.w	r3, r3, #7
 801bd5a:	b29a      	uxth	r2, r3
 801bd5c:	4b05      	ldr	r3, [pc, #20]	; (801bd74 <RegionEU868NextChannel+0x13c>)
 801bd5e:	f8a3 2138 	strh.w	r2, [r3, #312]	; 0x138
 801bd62:	f897 3057 	ldrb.w	r3, [r7, #87]	; 0x57
 801bd66:	4618      	mov	r0, r3
 801bd68:	3758      	adds	r7, #88	; 0x58
 801bd6a:	46bd      	mov	sp, r7
 801bd6c:	bd80      	pop	{r7, pc}
 801bd6e:	bf00      	nop
 801bd70:	200014a4 	.word	0x200014a4
 801bd74:	2000136c 	.word	0x2000136c
 801bd78:	2000142c 	.word	0x2000142c

0801bd7c <RegionEU868ChannelAdd>:
 801bd7c:	b580      	push	{r7, lr}
 801bd7e:	b084      	sub	sp, #16
 801bd80:	af00      	add	r7, sp, #0
 801bd82:	6078      	str	r0, [r7, #4]
 801bd84:	2300      	movs	r3, #0
 801bd86:	733b      	strb	r3, [r7, #12]
 801bd88:	2300      	movs	r3, #0
 801bd8a:	73fb      	strb	r3, [r7, #15]
 801bd8c:	2300      	movs	r3, #0
 801bd8e:	73bb      	strb	r3, [r7, #14]
 801bd90:	687b      	ldr	r3, [r7, #4]
 801bd92:	791b      	ldrb	r3, [r3, #4]
 801bd94:	737b      	strb	r3, [r7, #13]
 801bd96:	7b7b      	ldrb	r3, [r7, #13]
 801bd98:	2b02      	cmp	r3, #2
 801bd9a:	d801      	bhi.n	801bda0 <RegionEU868ChannelAdd+0x24>
 801bd9c:	2306      	movs	r3, #6
 801bd9e:	e085      	b.n	801beac <RegionEU868ChannelAdd+0x130>
 801bda0:	7b7b      	ldrb	r3, [r7, #13]
 801bda2:	2b0f      	cmp	r3, #15
 801bda4:	d901      	bls.n	801bdaa <RegionEU868ChannelAdd+0x2e>
 801bda6:	2303      	movs	r3, #3
 801bda8:	e080      	b.n	801beac <RegionEU868ChannelAdd+0x130>
 801bdaa:	687b      	ldr	r3, [r7, #4]
 801bdac:	681b      	ldr	r3, [r3, #0]
 801bdae:	7a1b      	ldrb	r3, [r3, #8]
 801bdb0:	f343 0303 	sbfx	r3, r3, #0, #4
 801bdb4:	b25b      	sxtb	r3, r3
 801bdb6:	2207      	movs	r2, #7
 801bdb8:	2100      	movs	r1, #0
 801bdba:	4618      	mov	r0, r3
 801bdbc:	f7fe fad0 	bl	801a360 <RegionCommonValueInRange>
 801bdc0:	4603      	mov	r3, r0
 801bdc2:	2b00      	cmp	r3, #0
 801bdc4:	d101      	bne.n	801bdca <RegionEU868ChannelAdd+0x4e>
 801bdc6:	2301      	movs	r3, #1
 801bdc8:	73fb      	strb	r3, [r7, #15]
 801bdca:	687b      	ldr	r3, [r7, #4]
 801bdcc:	681b      	ldr	r3, [r3, #0]
 801bdce:	7a1b      	ldrb	r3, [r3, #8]
 801bdd0:	f343 1303 	sbfx	r3, r3, #4, #4
 801bdd4:	b25b      	sxtb	r3, r3
 801bdd6:	2207      	movs	r2, #7
 801bdd8:	2100      	movs	r1, #0
 801bdda:	4618      	mov	r0, r3
 801bddc:	f7fe fac0 	bl	801a360 <RegionCommonValueInRange>
 801bde0:	4603      	mov	r3, r0
 801bde2:	2b00      	cmp	r3, #0
 801bde4:	d101      	bne.n	801bdea <RegionEU868ChannelAdd+0x6e>
 801bde6:	2301      	movs	r3, #1
 801bde8:	73fb      	strb	r3, [r7, #15]
 801bdea:	687b      	ldr	r3, [r7, #4]
 801bdec:	681b      	ldr	r3, [r3, #0]
 801bdee:	7a1b      	ldrb	r3, [r3, #8]
 801bdf0:	f343 0303 	sbfx	r3, r3, #0, #4
 801bdf4:	b25a      	sxtb	r2, r3
 801bdf6:	687b      	ldr	r3, [r7, #4]
 801bdf8:	681b      	ldr	r3, [r3, #0]
 801bdfa:	7a1b      	ldrb	r3, [r3, #8]
 801bdfc:	f343 1303 	sbfx	r3, r3, #4, #4
 801be00:	b25b      	sxtb	r3, r3
 801be02:	429a      	cmp	r2, r3
 801be04:	dd01      	ble.n	801be0a <RegionEU868ChannelAdd+0x8e>
 801be06:	2301      	movs	r3, #1
 801be08:	73fb      	strb	r3, [r7, #15]
 801be0a:	7bbb      	ldrb	r3, [r7, #14]
 801be0c:	f083 0301 	eor.w	r3, r3, #1
 801be10:	b2db      	uxtb	r3, r3
 801be12:	2b00      	cmp	r3, #0
 801be14:	d010      	beq.n	801be38 <RegionEU868ChannelAdd+0xbc>
 801be16:	687b      	ldr	r3, [r7, #4]
 801be18:	681b      	ldr	r3, [r3, #0]
 801be1a:	681b      	ldr	r3, [r3, #0]
 801be1c:	f107 020c 	add.w	r2, r7, #12
 801be20:	4611      	mov	r1, r2
 801be22:	4618      	mov	r0, r3
 801be24:	f7fe ff2e 	bl	801ac84 <VerifyRfFreq>
 801be28:	4603      	mov	r3, r0
 801be2a:	f083 0301 	eor.w	r3, r3, #1
 801be2e:	b2db      	uxtb	r3, r3
 801be30:	2b00      	cmp	r3, #0
 801be32:	d001      	beq.n	801be38 <RegionEU868ChannelAdd+0xbc>
 801be34:	2301      	movs	r3, #1
 801be36:	73bb      	strb	r3, [r7, #14]
 801be38:	7bfb      	ldrb	r3, [r7, #15]
 801be3a:	2b00      	cmp	r3, #0
 801be3c:	d004      	beq.n	801be48 <RegionEU868ChannelAdd+0xcc>
 801be3e:	7bbb      	ldrb	r3, [r7, #14]
 801be40:	2b00      	cmp	r3, #0
 801be42:	d001      	beq.n	801be48 <RegionEU868ChannelAdd+0xcc>
 801be44:	2306      	movs	r3, #6
 801be46:	e031      	b.n	801beac <RegionEU868ChannelAdd+0x130>
 801be48:	7bfb      	ldrb	r3, [r7, #15]
 801be4a:	2b00      	cmp	r3, #0
 801be4c:	d001      	beq.n	801be52 <RegionEU868ChannelAdd+0xd6>
 801be4e:	2305      	movs	r3, #5
 801be50:	e02c      	b.n	801beac <RegionEU868ChannelAdd+0x130>
 801be52:	7bbb      	ldrb	r3, [r7, #14]
 801be54:	2b00      	cmp	r3, #0
 801be56:	d001      	beq.n	801be5c <RegionEU868ChannelAdd+0xe0>
 801be58:	2304      	movs	r3, #4
 801be5a:	e027      	b.n	801beac <RegionEU868ChannelAdd+0x130>
 801be5c:	7b7a      	ldrb	r2, [r7, #13]
 801be5e:	4613      	mov	r3, r2
 801be60:	005b      	lsls	r3, r3, #1
 801be62:	4413      	add	r3, r2
 801be64:	009b      	lsls	r3, r3, #2
 801be66:	4a13      	ldr	r2, [pc, #76]	; (801beb4 <RegionEU868ChannelAdd+0x138>)
 801be68:	1898      	adds	r0, r3, r2
 801be6a:	687b      	ldr	r3, [r7, #4]
 801be6c:	681b      	ldr	r3, [r3, #0]
 801be6e:	220c      	movs	r2, #12
 801be70:	4619      	mov	r1, r3
 801be72:	f001 fbda 	bl	801d62a <memcpy1>
 801be76:	7b7a      	ldrb	r2, [r7, #13]
 801be78:	7b38      	ldrb	r0, [r7, #12]
 801be7a:	490e      	ldr	r1, [pc, #56]	; (801beb4 <RegionEU868ChannelAdd+0x138>)
 801be7c:	4613      	mov	r3, r2
 801be7e:	005b      	lsls	r3, r3, #1
 801be80:	4413      	add	r3, r2
 801be82:	009b      	lsls	r3, r3, #2
 801be84:	440b      	add	r3, r1
 801be86:	3309      	adds	r3, #9
 801be88:	4602      	mov	r2, r0
 801be8a:	701a      	strb	r2, [r3, #0]
 801be8c:	4b09      	ldr	r3, [pc, #36]	; (801beb4 <RegionEU868ChannelAdd+0x138>)
 801be8e:	f8b3 3138 	ldrh.w	r3, [r3, #312]	; 0x138
 801be92:	b21a      	sxth	r2, r3
 801be94:	7b7b      	ldrb	r3, [r7, #13]
 801be96:	2101      	movs	r1, #1
 801be98:	fa01 f303 	lsl.w	r3, r1, r3
 801be9c:	b21b      	sxth	r3, r3
 801be9e:	4313      	orrs	r3, r2
 801bea0:	b21b      	sxth	r3, r3
 801bea2:	b29a      	uxth	r2, r3
 801bea4:	4b03      	ldr	r3, [pc, #12]	; (801beb4 <RegionEU868ChannelAdd+0x138>)
 801bea6:	f8a3 2138 	strh.w	r2, [r3, #312]	; 0x138
 801beaa:	2300      	movs	r3, #0
 801beac:	4618      	mov	r0, r3
 801beae:	3710      	adds	r7, #16
 801beb0:	46bd      	mov	sp, r7
 801beb2:	bd80      	pop	{r7, pc}
 801beb4:	2000136c 	.word	0x2000136c

0801beb8 <RegionEU868ChannelsRemove>:
 801beb8:	b580      	push	{r7, lr}
 801beba:	b086      	sub	sp, #24
 801bebc:	af00      	add	r7, sp, #0
 801bebe:	6078      	str	r0, [r7, #4]
 801bec0:	687b      	ldr	r3, [r7, #4]
 801bec2:	781b      	ldrb	r3, [r3, #0]
 801bec4:	75fb      	strb	r3, [r7, #23]
 801bec6:	7dfb      	ldrb	r3, [r7, #23]
 801bec8:	2b02      	cmp	r3, #2
 801beca:	d801      	bhi.n	801bed0 <RegionEU868ChannelsRemove+0x18>
 801becc:	2300      	movs	r3, #0
 801bece:	e012      	b.n	801bef6 <RegionEU868ChannelsRemove+0x3e>
 801bed0:	7dfa      	ldrb	r2, [r7, #23]
 801bed2:	490b      	ldr	r1, [pc, #44]	; (801bf00 <RegionEU868ChannelsRemove+0x48>)
 801bed4:	4613      	mov	r3, r2
 801bed6:	005b      	lsls	r3, r3, #1
 801bed8:	4413      	add	r3, r2
 801beda:	009b      	lsls	r3, r3, #2
 801bedc:	440b      	add	r3, r1
 801bede:	461a      	mov	r2, r3
 801bee0:	2300      	movs	r3, #0
 801bee2:	6013      	str	r3, [r2, #0]
 801bee4:	6053      	str	r3, [r2, #4]
 801bee6:	6093      	str	r3, [r2, #8]
 801bee8:	7dfb      	ldrb	r3, [r7, #23]
 801beea:	2210      	movs	r2, #16
 801beec:	4619      	mov	r1, r3
 801beee:	4805      	ldr	r0, [pc, #20]	; (801bf04 <RegionEU868ChannelsRemove+0x4c>)
 801bef0:	f7fe fa53 	bl	801a39a <RegionCommonChanDisable>
 801bef4:	4603      	mov	r3, r0
 801bef6:	4618      	mov	r0, r3
 801bef8:	3718      	adds	r7, #24
 801befa:	46bd      	mov	sp, r7
 801befc:	bd80      	pop	{r7, pc}
 801befe:	bf00      	nop
 801bf00:	2000136c 	.word	0x2000136c
 801bf04:	200014a4 	.word	0x200014a4

0801bf08 <RegionEU868SetContinuousWave>:
 801bf08:	b580      	push	{r7, lr}
 801bf0a:	b084      	sub	sp, #16
 801bf0c:	af00      	add	r7, sp, #0
 801bf0e:	6078      	str	r0, [r7, #4]
 801bf10:	687b      	ldr	r3, [r7, #4]
 801bf12:	f993 0002 	ldrsb.w	r0, [r3, #2]
 801bf16:	687b      	ldr	r3, [r7, #4]
 801bf18:	781b      	ldrb	r3, [r3, #0]
 801bf1a:	4619      	mov	r1, r3
 801bf1c:	4a1e      	ldr	r2, [pc, #120]	; (801bf98 <RegionEU868SetContinuousWave+0x90>)
 801bf1e:	460b      	mov	r3, r1
 801bf20:	005b      	lsls	r3, r3, #1
 801bf22:	440b      	add	r3, r1
 801bf24:	009b      	lsls	r3, r3, #2
 801bf26:	4413      	add	r3, r2
 801bf28:	3309      	adds	r3, #9
 801bf2a:	781b      	ldrb	r3, [r3, #0]
 801bf2c:	4619      	mov	r1, r3
 801bf2e:	4a1a      	ldr	r2, [pc, #104]	; (801bf98 <RegionEU868SetContinuousWave+0x90>)
 801bf30:	460b      	mov	r3, r1
 801bf32:	009b      	lsls	r3, r3, #2
 801bf34:	440b      	add	r3, r1
 801bf36:	009b      	lsls	r3, r3, #2
 801bf38:	4413      	add	r3, r2
 801bf3a:	33c2      	adds	r3, #194	; 0xc2
 801bf3c:	f993 1000 	ldrsb.w	r1, [r3]
 801bf40:	687b      	ldr	r3, [r7, #4]
 801bf42:	f993 2001 	ldrsb.w	r2, [r3, #1]
 801bf46:	4b15      	ldr	r3, [pc, #84]	; (801bf9c <RegionEU868SetContinuousWave+0x94>)
 801bf48:	f7fe fe80 	bl	801ac4c <LimitTxPower>
 801bf4c:	4603      	mov	r3, r0
 801bf4e:	73fb      	strb	r3, [r7, #15]
 801bf50:	2300      	movs	r3, #0
 801bf52:	73bb      	strb	r3, [r7, #14]
 801bf54:	687b      	ldr	r3, [r7, #4]
 801bf56:	781b      	ldrb	r3, [r3, #0]
 801bf58:	4619      	mov	r1, r3
 801bf5a:	4a0f      	ldr	r2, [pc, #60]	; (801bf98 <RegionEU868SetContinuousWave+0x90>)
 801bf5c:	460b      	mov	r3, r1
 801bf5e:	005b      	lsls	r3, r3, #1
 801bf60:	440b      	add	r3, r1
 801bf62:	009b      	lsls	r3, r3, #2
 801bf64:	4413      	add	r3, r2
 801bf66:	681b      	ldr	r3, [r3, #0]
 801bf68:	60bb      	str	r3, [r7, #8]
 801bf6a:	687b      	ldr	r3, [r7, #4]
 801bf6c:	6859      	ldr	r1, [r3, #4]
 801bf6e:	687b      	ldr	r3, [r7, #4]
 801bf70:	689a      	ldr	r2, [r3, #8]
 801bf72:	f997 300f 	ldrsb.w	r3, [r7, #15]
 801bf76:	4618      	mov	r0, r3
 801bf78:	f7fe fc88 	bl	801a88c <RegionCommonComputeTxPower>
 801bf7c:	4603      	mov	r3, r0
 801bf7e:	73bb      	strb	r3, [r7, #14]
 801bf80:	4b07      	ldr	r3, [pc, #28]	; (801bfa0 <RegionEU868SetContinuousWave+0x98>)
 801bf82:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801bf84:	687a      	ldr	r2, [r7, #4]
 801bf86:	8992      	ldrh	r2, [r2, #12]
 801bf88:	f997 100e 	ldrsb.w	r1, [r7, #14]
 801bf8c:	68b8      	ldr	r0, [r7, #8]
 801bf8e:	4798      	blx	r3
 801bf90:	bf00      	nop
 801bf92:	3710      	adds	r7, #16
 801bf94:	46bd      	mov	sp, r7
 801bf96:	bd80      	pop	{r7, pc}
 801bf98:	2000136c 	.word	0x2000136c
 801bf9c:	200014a4 	.word	0x200014a4
 801bfa0:	0802683c 	.word	0x0802683c

0801bfa4 <RegionEU868ApplyDrOffset>:
 801bfa4:	b480      	push	{r7}
 801bfa6:	b085      	sub	sp, #20
 801bfa8:	af00      	add	r7, sp, #0
 801bfaa:	4603      	mov	r3, r0
 801bfac:	71fb      	strb	r3, [r7, #7]
 801bfae:	460b      	mov	r3, r1
 801bfb0:	71bb      	strb	r3, [r7, #6]
 801bfb2:	4613      	mov	r3, r2
 801bfb4:	717b      	strb	r3, [r7, #5]
 801bfb6:	79ba      	ldrb	r2, [r7, #6]
 801bfb8:	797b      	ldrb	r3, [r7, #5]
 801bfba:	1ad3      	subs	r3, r2, r3
 801bfbc:	b2db      	uxtb	r3, r3
 801bfbe:	73fb      	strb	r3, [r7, #15]
 801bfc0:	f997 300f 	ldrsb.w	r3, [r7, #15]
 801bfc4:	2b00      	cmp	r3, #0
 801bfc6:	da01      	bge.n	801bfcc <RegionEU868ApplyDrOffset+0x28>
 801bfc8:	2300      	movs	r3, #0
 801bfca:	73fb      	strb	r3, [r7, #15]
 801bfcc:	7bfb      	ldrb	r3, [r7, #15]
 801bfce:	4618      	mov	r0, r3
 801bfd0:	3714      	adds	r7, #20
 801bfd2:	46bd      	mov	sp, r7
 801bfd4:	bc80      	pop	{r7}
 801bfd6:	4770      	bx	lr

0801bfd8 <GetNextLowerTxDr>:
 801bfd8:	b480      	push	{r7}
 801bfda:	b085      	sub	sp, #20
 801bfdc:	af00      	add	r7, sp, #0
 801bfde:	4603      	mov	r3, r0
 801bfe0:	460a      	mov	r2, r1
 801bfe2:	71fb      	strb	r3, [r7, #7]
 801bfe4:	4613      	mov	r3, r2
 801bfe6:	71bb      	strb	r3, [r7, #6]
 801bfe8:	2300      	movs	r3, #0
 801bfea:	73fb      	strb	r3, [r7, #15]
 801bfec:	f997 2007 	ldrsb.w	r2, [r7, #7]
 801bff0:	f997 3006 	ldrsb.w	r3, [r7, #6]
 801bff4:	429a      	cmp	r2, r3
 801bff6:	d102      	bne.n	801bffe <GetNextLowerTxDr+0x26>
 801bff8:	79bb      	ldrb	r3, [r7, #6]
 801bffa:	73fb      	strb	r3, [r7, #15]
 801bffc:	e002      	b.n	801c004 <GetNextLowerTxDr+0x2c>
 801bffe:	79fb      	ldrb	r3, [r7, #7]
 801c000:	3b01      	subs	r3, #1
 801c002:	73fb      	strb	r3, [r7, #15]
 801c004:	f997 300f 	ldrsb.w	r3, [r7, #15]
 801c008:	4618      	mov	r0, r3
 801c00a:	3714      	adds	r7, #20
 801c00c:	46bd      	mov	sp, r7
 801c00e:	bc80      	pop	{r7}
 801c010:	4770      	bx	lr

0801c012 <FindAvailable125kHzChannels>:
 801c012:	b480      	push	{r7}
 801c014:	b087      	sub	sp, #28
 801c016:	af00      	add	r7, sp, #0
 801c018:	60f8      	str	r0, [r7, #12]
 801c01a:	460b      	mov	r3, r1
 801c01c:	607a      	str	r2, [r7, #4]
 801c01e:	817b      	strh	r3, [r7, #10]
 801c020:	68fb      	ldr	r3, [r7, #12]
 801c022:	2b00      	cmp	r3, #0
 801c024:	d002      	beq.n	801c02c <FindAvailable125kHzChannels+0x1a>
 801c026:	687b      	ldr	r3, [r7, #4]
 801c028:	2b00      	cmp	r3, #0
 801c02a:	d101      	bne.n	801c030 <FindAvailable125kHzChannels+0x1e>
 801c02c:	2303      	movs	r3, #3
 801c02e:	e021      	b.n	801c074 <FindAvailable125kHzChannels+0x62>
 801c030:	687b      	ldr	r3, [r7, #4]
 801c032:	2200      	movs	r2, #0
 801c034:	701a      	strb	r2, [r3, #0]
 801c036:	2300      	movs	r3, #0
 801c038:	75fb      	strb	r3, [r7, #23]
 801c03a:	e017      	b.n	801c06c <FindAvailable125kHzChannels+0x5a>
 801c03c:	897a      	ldrh	r2, [r7, #10]
 801c03e:	7dfb      	ldrb	r3, [r7, #23]
 801c040:	fa42 f303 	asr.w	r3, r2, r3
 801c044:	f003 0301 	and.w	r3, r3, #1
 801c048:	2b00      	cmp	r3, #0
 801c04a:	d00c      	beq.n	801c066 <FindAvailable125kHzChannels+0x54>
 801c04c:	687b      	ldr	r3, [r7, #4]
 801c04e:	781b      	ldrb	r3, [r3, #0]
 801c050:	461a      	mov	r2, r3
 801c052:	68fb      	ldr	r3, [r7, #12]
 801c054:	4413      	add	r3, r2
 801c056:	7dfa      	ldrb	r2, [r7, #23]
 801c058:	701a      	strb	r2, [r3, #0]
 801c05a:	687b      	ldr	r3, [r7, #4]
 801c05c:	781b      	ldrb	r3, [r3, #0]
 801c05e:	3301      	adds	r3, #1
 801c060:	b2da      	uxtb	r2, r3
 801c062:	687b      	ldr	r3, [r7, #4]
 801c064:	701a      	strb	r2, [r3, #0]
 801c066:	7dfb      	ldrb	r3, [r7, #23]
 801c068:	3301      	adds	r3, #1
 801c06a:	75fb      	strb	r3, [r7, #23]
 801c06c:	7dfb      	ldrb	r3, [r7, #23]
 801c06e:	2b07      	cmp	r3, #7
 801c070:	d9e4      	bls.n	801c03c <FindAvailable125kHzChannels+0x2a>
 801c072:	2300      	movs	r3, #0
 801c074:	4618      	mov	r0, r3
 801c076:	371c      	adds	r7, #28
 801c078:	46bd      	mov	sp, r7
 801c07a:	bc80      	pop	{r7}
 801c07c:	4770      	bx	lr
	...

0801c080 <ComputeNext125kHzJoinChannel>:
 801c080:	b590      	push	{r4, r7, lr}
 801c082:	b087      	sub	sp, #28
 801c084:	af00      	add	r7, sp, #0
 801c086:	6078      	str	r0, [r7, #4]
 801c088:	2300      	movs	r3, #0
 801c08a:	60fb      	str	r3, [r7, #12]
 801c08c:	2300      	movs	r3, #0
 801c08e:	613b      	str	r3, [r7, #16]
 801c090:	2300      	movs	r3, #0
 801c092:	72fb      	strb	r3, [r7, #11]
 801c094:	4b32      	ldr	r3, [pc, #200]	; (801c160 <ComputeNext125kHzJoinChannel+0xe0>)
 801c096:	f893 3398 	ldrb.w	r3, [r3, #920]	; 0x398
 801c09a:	757b      	strb	r3, [r7, #21]
 801c09c:	687b      	ldr	r3, [r7, #4]
 801c09e:	2b00      	cmp	r3, #0
 801c0a0:	d101      	bne.n	801c0a6 <ComputeNext125kHzJoinChannel+0x26>
 801c0a2:	2303      	movs	r3, #3
 801c0a4:	e057      	b.n	801c156 <ComputeNext125kHzJoinChannel+0xd6>
 801c0a6:	7d7b      	ldrb	r3, [r7, #21]
 801c0a8:	085b      	lsrs	r3, r3, #1
 801c0aa:	753b      	strb	r3, [r7, #20]
 801c0ac:	7d7b      	ldrb	r3, [r7, #21]
 801c0ae:	f003 0301 	and.w	r3, r3, #1
 801c0b2:	b2db      	uxtb	r3, r3
 801c0b4:	2b00      	cmp	r3, #0
 801c0b6:	d108      	bne.n	801c0ca <ComputeNext125kHzJoinChannel+0x4a>
 801c0b8:	7d3b      	ldrb	r3, [r7, #20]
 801c0ba:	4a29      	ldr	r2, [pc, #164]	; (801c160 <ComputeNext125kHzJoinChannel+0xe0>)
 801c0bc:	f503 73e0 	add.w	r3, r3, #448	; 0x1c0
 801c0c0:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 801c0c4:	b2db      	uxtb	r3, r3
 801c0c6:	82fb      	strh	r3, [r7, #22]
 801c0c8:	e007      	b.n	801c0da <ComputeNext125kHzJoinChannel+0x5a>
 801c0ca:	7d3b      	ldrb	r3, [r7, #20]
 801c0cc:	4a24      	ldr	r2, [pc, #144]	; (801c160 <ComputeNext125kHzJoinChannel+0xe0>)
 801c0ce:	f503 73e0 	add.w	r3, r3, #448	; 0x1c0
 801c0d2:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 801c0d6:	0a1b      	lsrs	r3, r3, #8
 801c0d8:	82fb      	strh	r3, [r7, #22]
 801c0da:	f107 020b 	add.w	r2, r7, #11
 801c0de:	8af9      	ldrh	r1, [r7, #22]
 801c0e0:	f107 030c 	add.w	r3, r7, #12
 801c0e4:	4618      	mov	r0, r3
 801c0e6:	f7ff ff94 	bl	801c012 <FindAvailable125kHzChannels>
 801c0ea:	4603      	mov	r3, r0
 801c0ec:	2b03      	cmp	r3, #3
 801c0ee:	d101      	bne.n	801c0f4 <ComputeNext125kHzJoinChannel+0x74>
 801c0f0:	2303      	movs	r3, #3
 801c0f2:	e030      	b.n	801c156 <ComputeNext125kHzJoinChannel+0xd6>
 801c0f4:	7afb      	ldrb	r3, [r7, #11]
 801c0f6:	2b00      	cmp	r3, #0
 801c0f8:	d012      	beq.n	801c120 <ComputeNext125kHzJoinChannel+0xa0>
 801c0fa:	7d7b      	ldrb	r3, [r7, #21]
 801c0fc:	00db      	lsls	r3, r3, #3
 801c0fe:	b2dc      	uxtb	r4, r3
 801c100:	7afb      	ldrb	r3, [r7, #11]
 801c102:	3b01      	subs	r3, #1
 801c104:	4619      	mov	r1, r3
 801c106:	2000      	movs	r0, #0
 801c108:	f001 fa78 	bl	801d5fc <randr>
 801c10c:	4603      	mov	r3, r0
 801c10e:	f107 0218 	add.w	r2, r7, #24
 801c112:	4413      	add	r3, r2
 801c114:	f813 3c0c 	ldrb.w	r3, [r3, #-12]
 801c118:	4423      	add	r3, r4
 801c11a:	b2da      	uxtb	r2, r3
 801c11c:	687b      	ldr	r3, [r7, #4]
 801c11e:	701a      	strb	r2, [r3, #0]
 801c120:	7d7b      	ldrb	r3, [r7, #21]
 801c122:	3301      	adds	r3, #1
 801c124:	757b      	strb	r3, [r7, #21]
 801c126:	7d7b      	ldrb	r3, [r7, #21]
 801c128:	2b07      	cmp	r3, #7
 801c12a:	d901      	bls.n	801c130 <ComputeNext125kHzJoinChannel+0xb0>
 801c12c:	2300      	movs	r3, #0
 801c12e:	757b      	strb	r3, [r7, #21]
 801c130:	7afb      	ldrb	r3, [r7, #11]
 801c132:	2b00      	cmp	r3, #0
 801c134:	d105      	bne.n	801c142 <ComputeNext125kHzJoinChannel+0xc2>
 801c136:	4b0a      	ldr	r3, [pc, #40]	; (801c160 <ComputeNext125kHzJoinChannel+0xe0>)
 801c138:	f893 3398 	ldrb.w	r3, [r3, #920]	; 0x398
 801c13c:	7d7a      	ldrb	r2, [r7, #21]
 801c13e:	429a      	cmp	r2, r3
 801c140:	d1b1      	bne.n	801c0a6 <ComputeNext125kHzJoinChannel+0x26>
 801c142:	7afb      	ldrb	r3, [r7, #11]
 801c144:	2b00      	cmp	r3, #0
 801c146:	d005      	beq.n	801c154 <ComputeNext125kHzJoinChannel+0xd4>
 801c148:	4a05      	ldr	r2, [pc, #20]	; (801c160 <ComputeNext125kHzJoinChannel+0xe0>)
 801c14a:	7d7b      	ldrb	r3, [r7, #21]
 801c14c:	f882 3398 	strb.w	r3, [r2, #920]	; 0x398
 801c150:	2300      	movs	r3, #0
 801c152:	e000      	b.n	801c156 <ComputeNext125kHzJoinChannel+0xd6>
 801c154:	2303      	movs	r3, #3
 801c156:	4618      	mov	r0, r3
 801c158:	371c      	adds	r7, #28
 801c15a:	46bd      	mov	sp, r7
 801c15c:	bd90      	pop	{r4, r7, pc}
 801c15e:	bf00      	nop
 801c160:	200014a8 	.word	0x200014a8

0801c164 <GetBandwidth>:
 801c164:	b480      	push	{r7}
 801c166:	b083      	sub	sp, #12
 801c168:	af00      	add	r7, sp, #0
 801c16a:	6078      	str	r0, [r7, #4]
 801c16c:	4a09      	ldr	r2, [pc, #36]	; (801c194 <GetBandwidth+0x30>)
 801c16e:	687b      	ldr	r3, [r7, #4]
 801c170:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 801c174:	4a08      	ldr	r2, [pc, #32]	; (801c198 <GetBandwidth+0x34>)
 801c176:	4293      	cmp	r3, r2
 801c178:	d004      	beq.n	801c184 <GetBandwidth+0x20>
 801c17a:	4a08      	ldr	r2, [pc, #32]	; (801c19c <GetBandwidth+0x38>)
 801c17c:	4293      	cmp	r3, r2
 801c17e:	d003      	beq.n	801c188 <GetBandwidth+0x24>
 801c180:	2300      	movs	r3, #0
 801c182:	e002      	b.n	801c18a <GetBandwidth+0x26>
 801c184:	2301      	movs	r3, #1
 801c186:	e000      	b.n	801c18a <GetBandwidth+0x26>
 801c188:	2302      	movs	r3, #2
 801c18a:	4618      	mov	r0, r3
 801c18c:	370c      	adds	r7, #12
 801c18e:	46bd      	mov	sp, r7
 801c190:	bc80      	pop	{r7}
 801c192:	4770      	bx	lr
 801c194:	080267c8 	.word	0x080267c8
 801c198:	0003d090 	.word	0x0003d090
 801c19c:	0007a120 	.word	0x0007a120

0801c1a0 <LimitTxPower>:
 801c1a0:	b580      	push	{r7, lr}
 801c1a2:	b084      	sub	sp, #16
 801c1a4:	af00      	add	r7, sp, #0
 801c1a6:	603b      	str	r3, [r7, #0]
 801c1a8:	4603      	mov	r3, r0
 801c1aa:	71fb      	strb	r3, [r7, #7]
 801c1ac:	460b      	mov	r3, r1
 801c1ae:	71bb      	strb	r3, [r7, #6]
 801c1b0:	4613      	mov	r3, r2
 801c1b2:	717b      	strb	r3, [r7, #5]
 801c1b4:	79fb      	ldrb	r3, [r7, #7]
 801c1b6:	73fb      	strb	r3, [r7, #15]
 801c1b8:	f997 2006 	ldrsb.w	r2, [r7, #6]
 801c1bc:	f997 3007 	ldrsb.w	r3, [r7, #7]
 801c1c0:	4293      	cmp	r3, r2
 801c1c2:	bfb8      	it	lt
 801c1c4:	4613      	movlt	r3, r2
 801c1c6:	73fb      	strb	r3, [r7, #15]
 801c1c8:	f997 3005 	ldrsb.w	r3, [r7, #5]
 801c1cc:	2b04      	cmp	r3, #4
 801c1ce:	d106      	bne.n	801c1de <LimitTxPower+0x3e>
 801c1d0:	f997 3007 	ldrsb.w	r3, [r7, #7]
 801c1d4:	2b02      	cmp	r3, #2
 801c1d6:	bfb8      	it	lt
 801c1d8:	2302      	movlt	r3, #2
 801c1da:	73fb      	strb	r3, [r7, #15]
 801c1dc:	e00d      	b.n	801c1fa <LimitTxPower+0x5a>
 801c1de:	2204      	movs	r2, #4
 801c1e0:	2100      	movs	r1, #0
 801c1e2:	6838      	ldr	r0, [r7, #0]
 801c1e4:	f7fe f90d 	bl	801a402 <RegionCommonCountChannels>
 801c1e8:	4603      	mov	r3, r0
 801c1ea:	2b31      	cmp	r3, #49	; 0x31
 801c1ec:	d805      	bhi.n	801c1fa <LimitTxPower+0x5a>
 801c1ee:	f997 3007 	ldrsb.w	r3, [r7, #7]
 801c1f2:	2b05      	cmp	r3, #5
 801c1f4:	bfb8      	it	lt
 801c1f6:	2305      	movlt	r3, #5
 801c1f8:	73fb      	strb	r3, [r7, #15]
 801c1fa:	f997 300f 	ldrsb.w	r3, [r7, #15]
 801c1fe:	4618      	mov	r0, r3
 801c200:	3710      	adds	r7, #16
 801c202:	46bd      	mov	sp, r7
 801c204:	bd80      	pop	{r7, pc}
	...

0801c208 <VerifyRfFreq>:
 801c208:	b580      	push	{r7, lr}
 801c20a:	b082      	sub	sp, #8
 801c20c:	af00      	add	r7, sp, #0
 801c20e:	6078      	str	r0, [r7, #4]
 801c210:	4b18      	ldr	r3, [pc, #96]	; (801c274 <VerifyRfFreq+0x6c>)
 801c212:	6a1b      	ldr	r3, [r3, #32]
 801c214:	6878      	ldr	r0, [r7, #4]
 801c216:	4798      	blx	r3
 801c218:	4603      	mov	r3, r0
 801c21a:	f083 0301 	eor.w	r3, r3, #1
 801c21e:	b2db      	uxtb	r3, r3
 801c220:	2b00      	cmp	r3, #0
 801c222:	d001      	beq.n	801c228 <VerifyRfFreq+0x20>
 801c224:	2300      	movs	r3, #0
 801c226:	e021      	b.n	801c26c <VerifyRfFreq+0x64>
 801c228:	687b      	ldr	r3, [r7, #4]
 801c22a:	4a13      	ldr	r2, [pc, #76]	; (801c278 <VerifyRfFreq+0x70>)
 801c22c:	4293      	cmp	r3, r2
 801c22e:	d910      	bls.n	801c252 <VerifyRfFreq+0x4a>
 801c230:	687b      	ldr	r3, [r7, #4]
 801c232:	4a12      	ldr	r2, [pc, #72]	; (801c27c <VerifyRfFreq+0x74>)
 801c234:	4293      	cmp	r3, r2
 801c236:	d80c      	bhi.n	801c252 <VerifyRfFreq+0x4a>
 801c238:	687a      	ldr	r2, [r7, #4]
 801c23a:	4b11      	ldr	r3, [pc, #68]	; (801c280 <VerifyRfFreq+0x78>)
 801c23c:	4413      	add	r3, r2
 801c23e:	4a11      	ldr	r2, [pc, #68]	; (801c284 <VerifyRfFreq+0x7c>)
 801c240:	fba2 1203 	umull	r1, r2, r2, r3
 801c244:	0c92      	lsrs	r2, r2, #18
 801c246:	4910      	ldr	r1, [pc, #64]	; (801c288 <VerifyRfFreq+0x80>)
 801c248:	fb01 f202 	mul.w	r2, r1, r2
 801c24c:	1a9a      	subs	r2, r3, r2
 801c24e:	2a00      	cmp	r2, #0
 801c250:	d001      	beq.n	801c256 <VerifyRfFreq+0x4e>
 801c252:	2300      	movs	r3, #0
 801c254:	e00a      	b.n	801c26c <VerifyRfFreq+0x64>
 801c256:	687b      	ldr	r3, [r7, #4]
 801c258:	4a0c      	ldr	r2, [pc, #48]	; (801c28c <VerifyRfFreq+0x84>)
 801c25a:	4293      	cmp	r3, r2
 801c25c:	d903      	bls.n	801c266 <VerifyRfFreq+0x5e>
 801c25e:	687b      	ldr	r3, [r7, #4]
 801c260:	4a06      	ldr	r2, [pc, #24]	; (801c27c <VerifyRfFreq+0x74>)
 801c262:	4293      	cmp	r3, r2
 801c264:	d901      	bls.n	801c26a <VerifyRfFreq+0x62>
 801c266:	2300      	movs	r3, #0
 801c268:	e000      	b.n	801c26c <VerifyRfFreq+0x64>
 801c26a:	2301      	movs	r3, #1
 801c26c:	4618      	mov	r0, r3
 801c26e:	3708      	adds	r7, #8
 801c270:	46bd      	mov	sp, r7
 801c272:	bd80      	pop	{r7, pc}
 801c274:	0802683c 	.word	0x0802683c
 801c278:	3708709f 	.word	0x3708709f
 801c27c:	374886e0 	.word	0x374886e0
 801c280:	c8f78f60 	.word	0xc8f78f60
 801c284:	6fd91d85 	.word	0x6fd91d85
 801c288:	000927c0 	.word	0x000927c0
 801c28c:	35c8015f 	.word	0x35c8015f

0801c290 <GetTimeOnAir>:
 801c290:	b590      	push	{r4, r7, lr}
 801c292:	b089      	sub	sp, #36	; 0x24
 801c294:	af04      	add	r7, sp, #16
 801c296:	4603      	mov	r3, r0
 801c298:	460a      	mov	r2, r1
 801c29a:	71fb      	strb	r3, [r7, #7]
 801c29c:	4613      	mov	r3, r2
 801c29e:	80bb      	strh	r3, [r7, #4]
 801c2a0:	f997 3007 	ldrsb.w	r3, [r7, #7]
 801c2a4:	4a0f      	ldr	r2, [pc, #60]	; (801c2e4 <GetTimeOnAir+0x54>)
 801c2a6:	5cd3      	ldrb	r3, [r2, r3]
 801c2a8:	73fb      	strb	r3, [r7, #15]
 801c2aa:	f997 3007 	ldrsb.w	r3, [r7, #7]
 801c2ae:	4618      	mov	r0, r3
 801c2b0:	f7ff ff58 	bl	801c164 <GetBandwidth>
 801c2b4:	60b8      	str	r0, [r7, #8]
 801c2b6:	4b0c      	ldr	r3, [pc, #48]	; (801c2e8 <GetTimeOnAir+0x58>)
 801c2b8:	6a5c      	ldr	r4, [r3, #36]	; 0x24
 801c2ba:	f997 200f 	ldrsb.w	r2, [r7, #15]
 801c2be:	88bb      	ldrh	r3, [r7, #4]
 801c2c0:	b2db      	uxtb	r3, r3
 801c2c2:	2101      	movs	r1, #1
 801c2c4:	9103      	str	r1, [sp, #12]
 801c2c6:	9302      	str	r3, [sp, #8]
 801c2c8:	2300      	movs	r3, #0
 801c2ca:	9301      	str	r3, [sp, #4]
 801c2cc:	2308      	movs	r3, #8
 801c2ce:	9300      	str	r3, [sp, #0]
 801c2d0:	2301      	movs	r3, #1
 801c2d2:	68b9      	ldr	r1, [r7, #8]
 801c2d4:	2001      	movs	r0, #1
 801c2d6:	47a0      	blx	r4
 801c2d8:	4603      	mov	r3, r0
 801c2da:	4618      	mov	r0, r3
 801c2dc:	3714      	adds	r7, #20
 801c2de:	46bd      	mov	sp, r7
 801c2e0:	bd90      	pop	{r4, r7, pc}
 801c2e2:	bf00      	nop
 801c2e4:	080267b8 	.word	0x080267b8
 801c2e8:	0802683c 	.word	0x0802683c

0801c2ec <RegionUS915GetPhyParam>:
 801c2ec:	b580      	push	{r7, lr}
 801c2ee:	b084      	sub	sp, #16
 801c2f0:	af00      	add	r7, sp, #0
 801c2f2:	6078      	str	r0, [r7, #4]
 801c2f4:	2300      	movs	r3, #0
 801c2f6:	60bb      	str	r3, [r7, #8]
 801c2f8:	687b      	ldr	r3, [r7, #4]
 801c2fa:	781b      	ldrb	r3, [r3, #0]
 801c2fc:	3b01      	subs	r3, #1
 801c2fe:	2b38      	cmp	r3, #56	; 0x38
 801c300:	f200 8124 	bhi.w	801c54c <RegionUS915GetPhyParam+0x260>
 801c304:	a201      	add	r2, pc, #4	; (adr r2, 801c30c <RegionUS915GetPhyParam+0x20>)
 801c306:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 801c30a:	bf00      	nop
 801c30c:	0801c3f1 	.word	0x0801c3f1
 801c310:	0801c3f7 	.word	0x0801c3f7
 801c314:	0801c54d 	.word	0x0801c54d
 801c318:	0801c54d 	.word	0x0801c54d
 801c31c:	0801c54d 	.word	0x0801c54d
 801c320:	0801c3fd 	.word	0x0801c3fd
 801c324:	0801c54d 	.word	0x0801c54d
 801c328:	0801c417 	.word	0x0801c417
 801c32c:	0801c54d 	.word	0x0801c54d
 801c330:	0801c41d 	.word	0x0801c41d
 801c334:	0801c423 	.word	0x0801c423
 801c338:	0801c429 	.word	0x0801c429
 801c33c:	0801c42f 	.word	0x0801c42f
 801c340:	0801c43f 	.word	0x0801c43f
 801c344:	0801c44f 	.word	0x0801c44f
 801c348:	0801c455 	.word	0x0801c455
 801c34c:	0801c45d 	.word	0x0801c45d
 801c350:	0801c465 	.word	0x0801c465
 801c354:	0801c46d 	.word	0x0801c46d
 801c358:	0801c475 	.word	0x0801c475
 801c35c:	0801c47d 	.word	0x0801c47d
 801c360:	0801c485 	.word	0x0801c485
 801c364:	0801c499 	.word	0x0801c499
 801c368:	0801c49f 	.word	0x0801c49f
 801c36c:	0801c4a5 	.word	0x0801c4a5
 801c370:	0801c4ab 	.word	0x0801c4ab
 801c374:	0801c4b1 	.word	0x0801c4b1
 801c378:	0801c4b7 	.word	0x0801c4b7
 801c37c:	0801c4bd 	.word	0x0801c4bd
 801c380:	0801c4c3 	.word	0x0801c4c3
 801c384:	0801c4c3 	.word	0x0801c4c3
 801c388:	0801c4c9 	.word	0x0801c4c9
 801c38c:	0801c4cf 	.word	0x0801c4cf
 801c390:	0801c403 	.word	0x0801c403
 801c394:	0801c54d 	.word	0x0801c54d
 801c398:	0801c54d 	.word	0x0801c54d
 801c39c:	0801c54d 	.word	0x0801c54d
 801c3a0:	0801c54d 	.word	0x0801c54d
 801c3a4:	0801c54d 	.word	0x0801c54d
 801c3a8:	0801c54d 	.word	0x0801c54d
 801c3ac:	0801c54d 	.word	0x0801c54d
 801c3b0:	0801c54d 	.word	0x0801c54d
 801c3b4:	0801c54d 	.word	0x0801c54d
 801c3b8:	0801c54d 	.word	0x0801c54d
 801c3bc:	0801c54d 	.word	0x0801c54d
 801c3c0:	0801c54d 	.word	0x0801c54d
 801c3c4:	0801c54d 	.word	0x0801c54d
 801c3c8:	0801c4d7 	.word	0x0801c4d7
 801c3cc:	0801c4eb 	.word	0x0801c4eb
 801c3d0:	0801c4f9 	.word	0x0801c4f9
 801c3d4:	0801c4ff 	.word	0x0801c4ff
 801c3d8:	0801c50b 	.word	0x0801c50b
 801c3dc:	0801c511 	.word	0x0801c511
 801c3e0:	0801c525 	.word	0x0801c525
 801c3e4:	0801c505 	.word	0x0801c505
 801c3e8:	0801c52b 	.word	0x0801c52b
 801c3ec:	0801c53b 	.word	0x0801c53b
 801c3f0:	2308      	movs	r3, #8
 801c3f2:	60bb      	str	r3, [r7, #8]
 801c3f4:	e0ab      	b.n	801c54e <RegionUS915GetPhyParam+0x262>
 801c3f6:	2300      	movs	r3, #0
 801c3f8:	60bb      	str	r3, [r7, #8]
 801c3fa:	e0a8      	b.n	801c54e <RegionUS915GetPhyParam+0x262>
 801c3fc:	2300      	movs	r3, #0
 801c3fe:	60bb      	str	r3, [r7, #8]
 801c400:	e0a5      	b.n	801c54e <RegionUS915GetPhyParam+0x262>
 801c402:	687b      	ldr	r3, [r7, #4]
 801c404:	f993 3001 	ldrsb.w	r3, [r3, #1]
 801c408:	2100      	movs	r1, #0
 801c40a:	4618      	mov	r0, r3
 801c40c:	f7ff fde4 	bl	801bfd8 <GetNextLowerTxDr>
 801c410:	4603      	mov	r3, r0
 801c412:	60bb      	str	r3, [r7, #8]
 801c414:	e09b      	b.n	801c54e <RegionUS915GetPhyParam+0x262>
 801c416:	2300      	movs	r3, #0
 801c418:	60bb      	str	r3, [r7, #8]
 801c41a:	e098      	b.n	801c54e <RegionUS915GetPhyParam+0x262>
 801c41c:	2300      	movs	r3, #0
 801c41e:	60bb      	str	r3, [r7, #8]
 801c420:	e095      	b.n	801c54e <RegionUS915GetPhyParam+0x262>
 801c422:	2340      	movs	r3, #64	; 0x40
 801c424:	60bb      	str	r3, [r7, #8]
 801c426:	e092      	b.n	801c54e <RegionUS915GetPhyParam+0x262>
 801c428:	2320      	movs	r3, #32
 801c42a:	60bb      	str	r3, [r7, #8]
 801c42c:	e08f      	b.n	801c54e <RegionUS915GetPhyParam+0x262>
 801c42e:	687b      	ldr	r3, [r7, #4]
 801c430:	f993 3001 	ldrsb.w	r3, [r3, #1]
 801c434:	461a      	mov	r2, r3
 801c436:	4b4a      	ldr	r3, [pc, #296]	; (801c560 <RegionUS915GetPhyParam+0x274>)
 801c438:	5c9b      	ldrb	r3, [r3, r2]
 801c43a:	60bb      	str	r3, [r7, #8]
 801c43c:	e087      	b.n	801c54e <RegionUS915GetPhyParam+0x262>
 801c43e:	687b      	ldr	r3, [r7, #4]
 801c440:	f993 3001 	ldrsb.w	r3, [r3, #1]
 801c444:	461a      	mov	r2, r3
 801c446:	4b47      	ldr	r3, [pc, #284]	; (801c564 <RegionUS915GetPhyParam+0x278>)
 801c448:	5c9b      	ldrb	r3, [r3, r2]
 801c44a:	60bb      	str	r3, [r7, #8]
 801c44c:	e07f      	b.n	801c54e <RegionUS915GetPhyParam+0x262>
 801c44e:	2300      	movs	r3, #0
 801c450:	60bb      	str	r3, [r7, #8]
 801c452:	e07c      	b.n	801c54e <RegionUS915GetPhyParam+0x262>
 801c454:	f640 33b8 	movw	r3, #3000	; 0xbb8
 801c458:	60bb      	str	r3, [r7, #8]
 801c45a:	e078      	b.n	801c54e <RegionUS915GetPhyParam+0x262>
 801c45c:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 801c460:	60bb      	str	r3, [r7, #8]
 801c462:	e074      	b.n	801c54e <RegionUS915GetPhyParam+0x262>
 801c464:	f44f 63fa 	mov.w	r3, #2000	; 0x7d0
 801c468:	60bb      	str	r3, [r7, #8]
 801c46a:	e070      	b.n	801c54e <RegionUS915GetPhyParam+0x262>
 801c46c:	f241 3388 	movw	r3, #5000	; 0x1388
 801c470:	60bb      	str	r3, [r7, #8]
 801c472:	e06c      	b.n	801c54e <RegionUS915GetPhyParam+0x262>
 801c474:	f241 7370 	movw	r3, #6000	; 0x1770
 801c478:	60bb      	str	r3, [r7, #8]
 801c47a:	e068      	b.n	801c54e <RegionUS915GetPhyParam+0x262>
 801c47c:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 801c480:	60bb      	str	r3, [r7, #8]
 801c482:	e064      	b.n	801c54e <RegionUS915GetPhyParam+0x262>
 801c484:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 801c488:	4837      	ldr	r0, [pc, #220]	; (801c568 <RegionUS915GetPhyParam+0x27c>)
 801c48a:	f001 f8b7 	bl	801d5fc <randr>
 801c48e:	4603      	mov	r3, r0
 801c490:	f503 63fa 	add.w	r3, r3, #2000	; 0x7d0
 801c494:	60bb      	str	r3, [r7, #8]
 801c496:	e05a      	b.n	801c54e <RegionUS915GetPhyParam+0x262>
 801c498:	2300      	movs	r3, #0
 801c49a:	60bb      	str	r3, [r7, #8]
 801c49c:	e057      	b.n	801c54e <RegionUS915GetPhyParam+0x262>
 801c49e:	4b33      	ldr	r3, [pc, #204]	; (801c56c <RegionUS915GetPhyParam+0x280>)
 801c4a0:	60bb      	str	r3, [r7, #8]
 801c4a2:	e054      	b.n	801c54e <RegionUS915GetPhyParam+0x262>
 801c4a4:	2308      	movs	r3, #8
 801c4a6:	60bb      	str	r3, [r7, #8]
 801c4a8:	e051      	b.n	801c54e <RegionUS915GetPhyParam+0x262>
 801c4aa:	4b31      	ldr	r3, [pc, #196]	; (801c570 <RegionUS915GetPhyParam+0x284>)
 801c4ac:	60bb      	str	r3, [r7, #8]
 801c4ae:	e04e      	b.n	801c54e <RegionUS915GetPhyParam+0x262>
 801c4b0:	4b30      	ldr	r3, [pc, #192]	; (801c574 <RegionUS915GetPhyParam+0x288>)
 801c4b2:	60bb      	str	r3, [r7, #8]
 801c4b4:	e04b      	b.n	801c54e <RegionUS915GetPhyParam+0x262>
 801c4b6:	2348      	movs	r3, #72	; 0x48
 801c4b8:	60bb      	str	r3, [r7, #8]
 801c4ba:	e048      	b.n	801c54e <RegionUS915GetPhyParam+0x262>
 801c4bc:	4b2e      	ldr	r3, [pc, #184]	; (801c578 <RegionUS915GetPhyParam+0x28c>)
 801c4be:	60bb      	str	r3, [r7, #8]
 801c4c0:	e045      	b.n	801c54e <RegionUS915GetPhyParam+0x262>
 801c4c2:	2300      	movs	r3, #0
 801c4c4:	60bb      	str	r3, [r7, #8]
 801c4c6:	e042      	b.n	801c54e <RegionUS915GetPhyParam+0x262>
 801c4c8:	4b2c      	ldr	r3, [pc, #176]	; (801c57c <RegionUS915GetPhyParam+0x290>)
 801c4ca:	60bb      	str	r3, [r7, #8]
 801c4cc:	e03f      	b.n	801c54e <RegionUS915GetPhyParam+0x262>
 801c4ce:	f04f 0300 	mov.w	r3, #0
 801c4d2:	60bb      	str	r3, [r7, #8]
 801c4d4:	e03b      	b.n	801c54e <RegionUS915GetPhyParam+0x262>
 801c4d6:	687b      	ldr	r3, [r7, #4]
 801c4d8:	791b      	ldrb	r3, [r3, #4]
 801c4da:	461a      	mov	r2, r3
 801c4dc:	4b28      	ldr	r3, [pc, #160]	; (801c580 <RegionUS915GetPhyParam+0x294>)
 801c4de:	fb03 f202 	mul.w	r2, r3, r2
 801c4e2:	4b22      	ldr	r3, [pc, #136]	; (801c56c <RegionUS915GetPhyParam+0x280>)
 801c4e4:	4413      	add	r3, r2
 801c4e6:	60bb      	str	r3, [r7, #8]
 801c4e8:	e031      	b.n	801c54e <RegionUS915GetPhyParam+0x262>
 801c4ea:	2317      	movs	r3, #23
 801c4ec:	723b      	strb	r3, [r7, #8]
 801c4ee:	2305      	movs	r3, #5
 801c4f0:	727b      	strb	r3, [r7, #9]
 801c4f2:	2303      	movs	r3, #3
 801c4f4:	72bb      	strb	r3, [r7, #10]
 801c4f6:	e02a      	b.n	801c54e <RegionUS915GetPhyParam+0x262>
 801c4f8:	2308      	movs	r3, #8
 801c4fa:	60bb      	str	r3, [r7, #8]
 801c4fc:	e027      	b.n	801c54e <RegionUS915GetPhyParam+0x262>
 801c4fe:	4b20      	ldr	r3, [pc, #128]	; (801c580 <RegionUS915GetPhyParam+0x294>)
 801c500:	60bb      	str	r3, [r7, #8]
 801c502:	e024      	b.n	801c54e <RegionUS915GetPhyParam+0x262>
 801c504:	2308      	movs	r3, #8
 801c506:	60bb      	str	r3, [r7, #8]
 801c508:	e021      	b.n	801c54e <RegionUS915GetPhyParam+0x262>
 801c50a:	2308      	movs	r3, #8
 801c50c:	60bb      	str	r3, [r7, #8]
 801c50e:	e01e      	b.n	801c54e <RegionUS915GetPhyParam+0x262>
 801c510:	687b      	ldr	r3, [r7, #4]
 801c512:	791b      	ldrb	r3, [r3, #4]
 801c514:	461a      	mov	r2, r3
 801c516:	4b1a      	ldr	r3, [pc, #104]	; (801c580 <RegionUS915GetPhyParam+0x294>)
 801c518:	fb03 f202 	mul.w	r2, r3, r2
 801c51c:	4b13      	ldr	r3, [pc, #76]	; (801c56c <RegionUS915GetPhyParam+0x280>)
 801c51e:	4413      	add	r3, r2
 801c520:	60bb      	str	r3, [r7, #8]
 801c522:	e014      	b.n	801c54e <RegionUS915GetPhyParam+0x262>
 801c524:	2308      	movs	r3, #8
 801c526:	60bb      	str	r3, [r7, #8]
 801c528:	e011      	b.n	801c54e <RegionUS915GetPhyParam+0x262>
 801c52a:	687b      	ldr	r3, [r7, #4]
 801c52c:	f993 3001 	ldrsb.w	r3, [r3, #1]
 801c530:	461a      	mov	r2, r3
 801c532:	4b14      	ldr	r3, [pc, #80]	; (801c584 <RegionUS915GetPhyParam+0x298>)
 801c534:	5c9b      	ldrb	r3, [r3, r2]
 801c536:	60bb      	str	r3, [r7, #8]
 801c538:	e009      	b.n	801c54e <RegionUS915GetPhyParam+0x262>
 801c53a:	687b      	ldr	r3, [r7, #4]
 801c53c:	f993 3001 	ldrsb.w	r3, [r3, #1]
 801c540:	4618      	mov	r0, r3
 801c542:	f7ff fe0f 	bl	801c164 <GetBandwidth>
 801c546:	4603      	mov	r3, r0
 801c548:	60bb      	str	r3, [r7, #8]
 801c54a:	e000      	b.n	801c54e <RegionUS915GetPhyParam+0x262>
 801c54c:	bf00      	nop
 801c54e:	68bb      	ldr	r3, [r7, #8]
 801c550:	60fb      	str	r3, [r7, #12]
 801c552:	2300      	movs	r3, #0
 801c554:	68fb      	ldr	r3, [r7, #12]
 801c556:	4618      	mov	r0, r3
 801c558:	3710      	adds	r7, #16
 801c55a:	46bd      	mov	sp, r7
 801c55c:	bd80      	pop	{r7, pc}
 801c55e:	bf00      	nop
 801c560:	0802681c 	.word	0x0802681c
 801c564:	0802682c 	.word	0x0802682c
 801c568:	fffffc18 	.word	0xfffffc18
 801c56c:	370870a0 	.word	0x370870a0
 801c570:	2000181c 	.word	0x2000181c
 801c574:	20001834 	.word	0x20001834
 801c578:	200014a8 	.word	0x200014a8
 801c57c:	4200999a 	.word	0x4200999a
 801c580:	000927c0 	.word	0x000927c0
 801c584:	080267b8 	.word	0x080267b8

0801c588 <RegionUS915SetBandTxDone>:
 801c588:	b590      	push	{r4, r7, lr}
 801c58a:	b085      	sub	sp, #20
 801c58c:	af02      	add	r7, sp, #8
 801c58e:	6078      	str	r0, [r7, #4]
 801c590:	687b      	ldr	r3, [r7, #4]
 801c592:	781b      	ldrb	r3, [r3, #0]
 801c594:	4619      	mov	r1, r3
 801c596:	4a10      	ldr	r2, [pc, #64]	; (801c5d8 <RegionUS915SetBandTxDone+0x50>)
 801c598:	460b      	mov	r3, r1
 801c59a:	005b      	lsls	r3, r3, #1
 801c59c:	440b      	add	r3, r1
 801c59e:	009b      	lsls	r3, r3, #2
 801c5a0:	4413      	add	r3, r2
 801c5a2:	3309      	adds	r3, #9
 801c5a4:	781b      	ldrb	r3, [r3, #0]
 801c5a6:	461a      	mov	r2, r3
 801c5a8:	4613      	mov	r3, r2
 801c5aa:	009b      	lsls	r3, r3, #2
 801c5ac:	4413      	add	r3, r2
 801c5ae:	009b      	lsls	r3, r3, #2
 801c5b0:	f503 7358 	add.w	r3, r3, #864	; 0x360
 801c5b4:	4a08      	ldr	r2, [pc, #32]	; (801c5d8 <RegionUS915SetBandTxDone+0x50>)
 801c5b6:	1898      	adds	r0, r3, r2
 801c5b8:	687b      	ldr	r3, [r7, #4]
 801c5ba:	6899      	ldr	r1, [r3, #8]
 801c5bc:	687b      	ldr	r3, [r7, #4]
 801c5be:	785c      	ldrb	r4, [r3, #1]
 801c5c0:	687b      	ldr	r3, [r7, #4]
 801c5c2:	691a      	ldr	r2, [r3, #16]
 801c5c4:	9200      	str	r2, [sp, #0]
 801c5c6:	68db      	ldr	r3, [r3, #12]
 801c5c8:	4622      	mov	r2, r4
 801c5ca:	f7fd ff6c 	bl	801a4a6 <RegionCommonSetBandTxDone>
 801c5ce:	bf00      	nop
 801c5d0:	370c      	adds	r7, #12
 801c5d2:	46bd      	mov	sp, r7
 801c5d4:	bd90      	pop	{r4, r7, pc}
 801c5d6:	bf00      	nop
 801c5d8:	200014a8 	.word	0x200014a8

0801c5dc <RegionUS915InitDefaults>:
 801c5dc:	b580      	push	{r7, lr}
 801c5de:	b088      	sub	sp, #32
 801c5e0:	af00      	add	r7, sp, #0
 801c5e2:	6078      	str	r0, [r7, #4]
 801c5e4:	2301      	movs	r3, #1
 801c5e6:	813b      	strh	r3, [r7, #8]
 801c5e8:	2300      	movs	r3, #0
 801c5ea:	72bb      	strb	r3, [r7, #10]
 801c5ec:	2300      	movs	r3, #0
 801c5ee:	60fb      	str	r3, [r7, #12]
 801c5f0:	2300      	movs	r3, #0
 801c5f2:	613b      	str	r3, [r7, #16]
 801c5f4:	2300      	movs	r3, #0
 801c5f6:	617b      	str	r3, [r7, #20]
 801c5f8:	2300      	movs	r3, #0
 801c5fa:	763b      	strb	r3, [r7, #24]
 801c5fc:	687b      	ldr	r3, [r7, #4]
 801c5fe:	791b      	ldrb	r3, [r3, #4]
 801c600:	2b03      	cmp	r3, #3
 801c602:	f000 80c0 	beq.w	801c786 <RegionUS915InitDefaults+0x1aa>
 801c606:	2b03      	cmp	r3, #3
 801c608:	f300 80ca 	bgt.w	801c7a0 <RegionUS915InitDefaults+0x1c4>
 801c60c:	2b00      	cmp	r3, #0
 801c60e:	d007      	beq.n	801c620 <RegionUS915InitDefaults+0x44>
 801c610:	2b00      	cmp	r3, #0
 801c612:	f2c0 80c5 	blt.w	801c7a0 <RegionUS915InitDefaults+0x1c4>
 801c616:	3b01      	subs	r3, #1
 801c618:	2b01      	cmp	r3, #1
 801c61a:	f200 80c1 	bhi.w	801c7a0 <RegionUS915InitDefaults+0x1c4>
 801c61e:	e08e      	b.n	801c73e <RegionUS915InitDefaults+0x162>
 801c620:	4b63      	ldr	r3, [pc, #396]	; (801c7b0 <RegionUS915InitDefaults+0x1d4>)
 801c622:	2200      	movs	r2, #0
 801c624:	f883 2398 	strb.w	r2, [r3, #920]	; 0x398
 801c628:	4b61      	ldr	r3, [pc, #388]	; (801c7b0 <RegionUS915InitDefaults+0x1d4>)
 801c62a:	2200      	movs	r2, #0
 801c62c:	f883 2399 	strb.w	r2, [r3, #921]	; 0x399
 801c630:	f107 0308 	add.w	r3, r7, #8
 801c634:	2214      	movs	r2, #20
 801c636:	4619      	mov	r1, r3
 801c638:	485e      	ldr	r0, [pc, #376]	; (801c7b4 <RegionUS915InitDefaults+0x1d8>)
 801c63a:	f000 fff6 	bl	801d62a <memcpy1>
 801c63e:	2300      	movs	r3, #0
 801c640:	77fb      	strb	r3, [r7, #31]
 801c642:	e025      	b.n	801c690 <RegionUS915InitDefaults+0xb4>
 801c644:	7ffb      	ldrb	r3, [r7, #31]
 801c646:	4a5c      	ldr	r2, [pc, #368]	; (801c7b8 <RegionUS915InitDefaults+0x1dc>)
 801c648:	fb02 f203 	mul.w	r2, r2, r3
 801c64c:	4b5b      	ldr	r3, [pc, #364]	; (801c7bc <RegionUS915InitDefaults+0x1e0>)
 801c64e:	4413      	add	r3, r2
 801c650:	7ffa      	ldrb	r2, [r7, #31]
 801c652:	4618      	mov	r0, r3
 801c654:	4956      	ldr	r1, [pc, #344]	; (801c7b0 <RegionUS915InitDefaults+0x1d4>)
 801c656:	4613      	mov	r3, r2
 801c658:	005b      	lsls	r3, r3, #1
 801c65a:	4413      	add	r3, r2
 801c65c:	009b      	lsls	r3, r3, #2
 801c65e:	440b      	add	r3, r1
 801c660:	6018      	str	r0, [r3, #0]
 801c662:	7ffa      	ldrb	r2, [r7, #31]
 801c664:	4952      	ldr	r1, [pc, #328]	; (801c7b0 <RegionUS915InitDefaults+0x1d4>)
 801c666:	4613      	mov	r3, r2
 801c668:	005b      	lsls	r3, r3, #1
 801c66a:	4413      	add	r3, r2
 801c66c:	009b      	lsls	r3, r3, #2
 801c66e:	440b      	add	r3, r1
 801c670:	3308      	adds	r3, #8
 801c672:	2230      	movs	r2, #48	; 0x30
 801c674:	701a      	strb	r2, [r3, #0]
 801c676:	7ffa      	ldrb	r2, [r7, #31]
 801c678:	494d      	ldr	r1, [pc, #308]	; (801c7b0 <RegionUS915InitDefaults+0x1d4>)
 801c67a:	4613      	mov	r3, r2
 801c67c:	005b      	lsls	r3, r3, #1
 801c67e:	4413      	add	r3, r2
 801c680:	009b      	lsls	r3, r3, #2
 801c682:	440b      	add	r3, r1
 801c684:	3309      	adds	r3, #9
 801c686:	2200      	movs	r2, #0
 801c688:	701a      	strb	r2, [r3, #0]
 801c68a:	7ffb      	ldrb	r3, [r7, #31]
 801c68c:	3301      	adds	r3, #1
 801c68e:	77fb      	strb	r3, [r7, #31]
 801c690:	7ffb      	ldrb	r3, [r7, #31]
 801c692:	2b3f      	cmp	r3, #63	; 0x3f
 801c694:	d9d6      	bls.n	801c644 <RegionUS915InitDefaults+0x68>
 801c696:	2340      	movs	r3, #64	; 0x40
 801c698:	77bb      	strb	r3, [r7, #30]
 801c69a:	e026      	b.n	801c6ea <RegionUS915InitDefaults+0x10e>
 801c69c:	7fbb      	ldrb	r3, [r7, #30]
 801c69e:	3b40      	subs	r3, #64	; 0x40
 801c6a0:	4a47      	ldr	r2, [pc, #284]	; (801c7c0 <RegionUS915InitDefaults+0x1e4>)
 801c6a2:	fb02 f203 	mul.w	r2, r2, r3
 801c6a6:	4b47      	ldr	r3, [pc, #284]	; (801c7c4 <RegionUS915InitDefaults+0x1e8>)
 801c6a8:	4413      	add	r3, r2
 801c6aa:	7fba      	ldrb	r2, [r7, #30]
 801c6ac:	4618      	mov	r0, r3
 801c6ae:	4940      	ldr	r1, [pc, #256]	; (801c7b0 <RegionUS915InitDefaults+0x1d4>)
 801c6b0:	4613      	mov	r3, r2
 801c6b2:	005b      	lsls	r3, r3, #1
 801c6b4:	4413      	add	r3, r2
 801c6b6:	009b      	lsls	r3, r3, #2
 801c6b8:	440b      	add	r3, r1
 801c6ba:	6018      	str	r0, [r3, #0]
 801c6bc:	7fba      	ldrb	r2, [r7, #30]
 801c6be:	493c      	ldr	r1, [pc, #240]	; (801c7b0 <RegionUS915InitDefaults+0x1d4>)
 801c6c0:	4613      	mov	r3, r2
 801c6c2:	005b      	lsls	r3, r3, #1
 801c6c4:	4413      	add	r3, r2
 801c6c6:	009b      	lsls	r3, r3, #2
 801c6c8:	440b      	add	r3, r1
 801c6ca:	3308      	adds	r3, #8
 801c6cc:	2244      	movs	r2, #68	; 0x44
 801c6ce:	701a      	strb	r2, [r3, #0]
 801c6d0:	7fba      	ldrb	r2, [r7, #30]
 801c6d2:	4937      	ldr	r1, [pc, #220]	; (801c7b0 <RegionUS915InitDefaults+0x1d4>)
 801c6d4:	4613      	mov	r3, r2
 801c6d6:	005b      	lsls	r3, r3, #1
 801c6d8:	4413      	add	r3, r2
 801c6da:	009b      	lsls	r3, r3, #2
 801c6dc:	440b      	add	r3, r1
 801c6de:	3309      	adds	r3, #9
 801c6e0:	2200      	movs	r2, #0
 801c6e2:	701a      	strb	r2, [r3, #0]
 801c6e4:	7fbb      	ldrb	r3, [r7, #30]
 801c6e6:	3301      	adds	r3, #1
 801c6e8:	77bb      	strb	r3, [r7, #30]
 801c6ea:	7fbb      	ldrb	r3, [r7, #30]
 801c6ec:	2b47      	cmp	r3, #71	; 0x47
 801c6ee:	d9d5      	bls.n	801c69c <RegionUS915InitDefaults+0xc0>
 801c6f0:	4b2f      	ldr	r3, [pc, #188]	; (801c7b0 <RegionUS915InitDefaults+0x1d4>)
 801c6f2:	f64f 72ff 	movw	r2, #65535	; 0xffff
 801c6f6:	f8a3 238c 	strh.w	r2, [r3, #908]	; 0x38c
 801c6fa:	4b2d      	ldr	r3, [pc, #180]	; (801c7b0 <RegionUS915InitDefaults+0x1d4>)
 801c6fc:	f64f 72ff 	movw	r2, #65535	; 0xffff
 801c700:	f8a3 238e 	strh.w	r2, [r3, #910]	; 0x38e
 801c704:	4b2a      	ldr	r3, [pc, #168]	; (801c7b0 <RegionUS915InitDefaults+0x1d4>)
 801c706:	f64f 72ff 	movw	r2, #65535	; 0xffff
 801c70a:	f8a3 2390 	strh.w	r2, [r3, #912]	; 0x390
 801c70e:	4b28      	ldr	r3, [pc, #160]	; (801c7b0 <RegionUS915InitDefaults+0x1d4>)
 801c710:	f64f 72ff 	movw	r2, #65535	; 0xffff
 801c714:	f8a3 2392 	strh.w	r2, [r3, #914]	; 0x392
 801c718:	4b25      	ldr	r3, [pc, #148]	; (801c7b0 <RegionUS915InitDefaults+0x1d4>)
 801c71a:	22ff      	movs	r2, #255	; 0xff
 801c71c:	f8a3 2394 	strh.w	r2, [r3, #916]	; 0x394
 801c720:	4b23      	ldr	r3, [pc, #140]	; (801c7b0 <RegionUS915InitDefaults+0x1d4>)
 801c722:	2200      	movs	r2, #0
 801c724:	f8a3 2396 	strh.w	r2, [r3, #918]	; 0x396
 801c728:	2206      	movs	r2, #6
 801c72a:	4927      	ldr	r1, [pc, #156]	; (801c7c8 <RegionUS915InitDefaults+0x1ec>)
 801c72c:	4827      	ldr	r0, [pc, #156]	; (801c7cc <RegionUS915InitDefaults+0x1f0>)
 801c72e:	f7fd fe94 	bl	801a45a <RegionCommonChanMaskCopy>
 801c732:	2206      	movs	r2, #6
 801c734:	4925      	ldr	r1, [pc, #148]	; (801c7cc <RegionUS915InitDefaults+0x1f0>)
 801c736:	4826      	ldr	r0, [pc, #152]	; (801c7d0 <RegionUS915InitDefaults+0x1f4>)
 801c738:	f7fd fe8f 	bl	801a45a <RegionCommonChanMaskCopy>
 801c73c:	e033      	b.n	801c7a6 <RegionUS915InitDefaults+0x1ca>
 801c73e:	2206      	movs	r2, #6
 801c740:	4921      	ldr	r1, [pc, #132]	; (801c7c8 <RegionUS915InitDefaults+0x1ec>)
 801c742:	4822      	ldr	r0, [pc, #136]	; (801c7cc <RegionUS915InitDefaults+0x1f0>)
 801c744:	f7fd fe89 	bl	801a45a <RegionCommonChanMaskCopy>
 801c748:	2300      	movs	r3, #0
 801c74a:	777b      	strb	r3, [r7, #29]
 801c74c:	e017      	b.n	801c77e <RegionUS915InitDefaults+0x1a2>
 801c74e:	7f7b      	ldrb	r3, [r7, #29]
 801c750:	4a17      	ldr	r2, [pc, #92]	; (801c7b0 <RegionUS915InitDefaults+0x1d4>)
 801c752:	f503 73e0 	add.w	r3, r3, #448	; 0x1c0
 801c756:	f832 1013 	ldrh.w	r1, [r2, r3, lsl #1]
 801c75a:	7f7b      	ldrb	r3, [r7, #29]
 801c75c:	4a14      	ldr	r2, [pc, #80]	; (801c7b0 <RegionUS915InitDefaults+0x1d4>)
 801c75e:	f503 73dc 	add.w	r3, r3, #440	; 0x1b8
 801c762:	005b      	lsls	r3, r3, #1
 801c764:	4413      	add	r3, r2
 801c766:	889a      	ldrh	r2, [r3, #4]
 801c768:	7f7b      	ldrb	r3, [r7, #29]
 801c76a:	400a      	ands	r2, r1
 801c76c:	b291      	uxth	r1, r2
 801c76e:	4a10      	ldr	r2, [pc, #64]	; (801c7b0 <RegionUS915InitDefaults+0x1d4>)
 801c770:	f503 73e0 	add.w	r3, r3, #448	; 0x1c0
 801c774:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
 801c778:	7f7b      	ldrb	r3, [r7, #29]
 801c77a:	3301      	adds	r3, #1
 801c77c:	777b      	strb	r3, [r7, #29]
 801c77e:	7f7b      	ldrb	r3, [r7, #29]
 801c780:	2b05      	cmp	r3, #5
 801c782:	d9e4      	bls.n	801c74e <RegionUS915InitDefaults+0x172>
 801c784:	e00f      	b.n	801c7a6 <RegionUS915InitDefaults+0x1ca>
 801c786:	687b      	ldr	r3, [r7, #4]
 801c788:	681b      	ldr	r3, [r3, #0]
 801c78a:	2b00      	cmp	r3, #0
 801c78c:	d00a      	beq.n	801c7a4 <RegionUS915InitDefaults+0x1c8>
 801c78e:	687b      	ldr	r3, [r7, #4]
 801c790:	681b      	ldr	r3, [r3, #0]
 801c792:	f44f 7267 	mov.w	r2, #924	; 0x39c
 801c796:	4619      	mov	r1, r3
 801c798:	4805      	ldr	r0, [pc, #20]	; (801c7b0 <RegionUS915InitDefaults+0x1d4>)
 801c79a:	f000 ff46 	bl	801d62a <memcpy1>
 801c79e:	e001      	b.n	801c7a4 <RegionUS915InitDefaults+0x1c8>
 801c7a0:	bf00      	nop
 801c7a2:	e000      	b.n	801c7a6 <RegionUS915InitDefaults+0x1ca>
 801c7a4:	bf00      	nop
 801c7a6:	bf00      	nop
 801c7a8:	3720      	adds	r7, #32
 801c7aa:	46bd      	mov	sp, r7
 801c7ac:	bd80      	pop	{r7, pc}
 801c7ae:	bf00      	nop
 801c7b0:	200014a8 	.word	0x200014a8
 801c7b4:	20001808 	.word	0x20001808
 801c7b8:	00030d40 	.word	0x00030d40
 801c7bc:	35c80160 	.word	0x35c80160
 801c7c0:	00186a00 	.word	0x00186a00
 801c7c4:	35d2afc0 	.word	0x35d2afc0
 801c7c8:	20001834 	.word	0x20001834
 801c7cc:	2000181c 	.word	0x2000181c
 801c7d0:	20001828 	.word	0x20001828

0801c7d4 <RegionUS915GetNvmCtx>:
 801c7d4:	b480      	push	{r7}
 801c7d6:	b083      	sub	sp, #12
 801c7d8:	af00      	add	r7, sp, #0
 801c7da:	6078      	str	r0, [r7, #4]
 801c7dc:	687b      	ldr	r3, [r7, #4]
 801c7de:	f44f 7267 	mov.w	r2, #924	; 0x39c
 801c7e2:	601a      	str	r2, [r3, #0]
 801c7e4:	4b02      	ldr	r3, [pc, #8]	; (801c7f0 <RegionUS915GetNvmCtx+0x1c>)
 801c7e6:	4618      	mov	r0, r3
 801c7e8:	370c      	adds	r7, #12
 801c7ea:	46bd      	mov	sp, r7
 801c7ec:	bc80      	pop	{r7}
 801c7ee:	4770      	bx	lr
 801c7f0:	200014a8 	.word	0x200014a8

0801c7f4 <RegionUS915Verify>:
 801c7f4:	b580      	push	{r7, lr}
 801c7f6:	b082      	sub	sp, #8
 801c7f8:	af00      	add	r7, sp, #0
 801c7fa:	6078      	str	r0, [r7, #4]
 801c7fc:	460b      	mov	r3, r1
 801c7fe:	70fb      	strb	r3, [r7, #3]
 801c800:	78fb      	ldrb	r3, [r7, #3]
 801c802:	2b0f      	cmp	r3, #15
 801c804:	d867      	bhi.n	801c8d6 <RegionUS915Verify+0xe2>
 801c806:	a201      	add	r2, pc, #4	; (adr r2, 801c80c <RegionUS915Verify+0x18>)
 801c808:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 801c80c:	0801c84d 	.word	0x0801c84d
 801c810:	0801c8d7 	.word	0x0801c8d7
 801c814:	0801c8d7 	.word	0x0801c8d7
 801c818:	0801c8d7 	.word	0x0801c8d7
 801c81c:	0801c8d7 	.word	0x0801c8d7
 801c820:	0801c85b 	.word	0x0801c85b
 801c824:	0801c879 	.word	0x0801c879
 801c828:	0801c897 	.word	0x0801c897
 801c82c:	0801c8d7 	.word	0x0801c8d7
 801c830:	0801c8b5 	.word	0x0801c8b5
 801c834:	0801c8b5 	.word	0x0801c8b5
 801c838:	0801c8d7 	.word	0x0801c8d7
 801c83c:	0801c8d7 	.word	0x0801c8d7
 801c840:	0801c8d7 	.word	0x0801c8d7
 801c844:	0801c8d7 	.word	0x0801c8d7
 801c848:	0801c8d3 	.word	0x0801c8d3
 801c84c:	687b      	ldr	r3, [r7, #4]
 801c84e:	681b      	ldr	r3, [r3, #0]
 801c850:	4618      	mov	r0, r3
 801c852:	f7ff fcd9 	bl	801c208 <VerifyRfFreq>
 801c856:	4603      	mov	r3, r0
 801c858:	e03e      	b.n	801c8d8 <RegionUS915Verify+0xe4>
 801c85a:	687b      	ldr	r3, [r7, #4]
 801c85c:	f993 3000 	ldrsb.w	r3, [r3]
 801c860:	2204      	movs	r2, #4
 801c862:	2100      	movs	r1, #0
 801c864:	4618      	mov	r0, r3
 801c866:	f7fd fd7b 	bl	801a360 <RegionCommonValueInRange>
 801c86a:	4603      	mov	r3, r0
 801c86c:	2b00      	cmp	r3, #0
 801c86e:	bf14      	ite	ne
 801c870:	2301      	movne	r3, #1
 801c872:	2300      	moveq	r3, #0
 801c874:	b2db      	uxtb	r3, r3
 801c876:	e02f      	b.n	801c8d8 <RegionUS915Verify+0xe4>
 801c878:	687b      	ldr	r3, [r7, #4]
 801c87a:	f993 3000 	ldrsb.w	r3, [r3]
 801c87e:	2205      	movs	r2, #5
 801c880:	2100      	movs	r1, #0
 801c882:	4618      	mov	r0, r3
 801c884:	f7fd fd6c 	bl	801a360 <RegionCommonValueInRange>
 801c888:	4603      	mov	r3, r0
 801c88a:	2b00      	cmp	r3, #0
 801c88c:	bf14      	ite	ne
 801c88e:	2301      	movne	r3, #1
 801c890:	2300      	moveq	r3, #0
 801c892:	b2db      	uxtb	r3, r3
 801c894:	e020      	b.n	801c8d8 <RegionUS915Verify+0xe4>
 801c896:	687b      	ldr	r3, [r7, #4]
 801c898:	f993 3000 	ldrsb.w	r3, [r3]
 801c89c:	220d      	movs	r2, #13
 801c89e:	2108      	movs	r1, #8
 801c8a0:	4618      	mov	r0, r3
 801c8a2:	f7fd fd5d 	bl	801a360 <RegionCommonValueInRange>
 801c8a6:	4603      	mov	r3, r0
 801c8a8:	2b00      	cmp	r3, #0
 801c8aa:	bf14      	ite	ne
 801c8ac:	2301      	movne	r3, #1
 801c8ae:	2300      	moveq	r3, #0
 801c8b0:	b2db      	uxtb	r3, r3
 801c8b2:	e011      	b.n	801c8d8 <RegionUS915Verify+0xe4>
 801c8b4:	687b      	ldr	r3, [r7, #4]
 801c8b6:	f993 3000 	ldrsb.w	r3, [r3]
 801c8ba:	220e      	movs	r2, #14
 801c8bc:	2100      	movs	r1, #0
 801c8be:	4618      	mov	r0, r3
 801c8c0:	f7fd fd4e 	bl	801a360 <RegionCommonValueInRange>
 801c8c4:	4603      	mov	r3, r0
 801c8c6:	2b00      	cmp	r3, #0
 801c8c8:	bf14      	ite	ne
 801c8ca:	2301      	movne	r3, #1
 801c8cc:	2300      	moveq	r3, #0
 801c8ce:	b2db      	uxtb	r3, r3
 801c8d0:	e002      	b.n	801c8d8 <RegionUS915Verify+0xe4>
 801c8d2:	2300      	movs	r3, #0
 801c8d4:	e000      	b.n	801c8d8 <RegionUS915Verify+0xe4>
 801c8d6:	2300      	movs	r3, #0
 801c8d8:	4618      	mov	r0, r3
 801c8da:	3708      	adds	r7, #8
 801c8dc:	46bd      	mov	sp, r7
 801c8de:	bd80      	pop	{r7, pc}

0801c8e0 <RegionUS915ApplyCFList>:
 801c8e0:	b480      	push	{r7}
 801c8e2:	b085      	sub	sp, #20
 801c8e4:	af00      	add	r7, sp, #0
 801c8e6:	6078      	str	r0, [r7, #4]
 801c8e8:	687b      	ldr	r3, [r7, #4]
 801c8ea:	791b      	ldrb	r3, [r3, #4]
 801c8ec:	2b10      	cmp	r3, #16
 801c8ee:	d165      	bne.n	801c9bc <RegionUS915ApplyCFList+0xdc>
 801c8f0:	687b      	ldr	r3, [r7, #4]
 801c8f2:	681b      	ldr	r3, [r3, #0]
 801c8f4:	330f      	adds	r3, #15
 801c8f6:	781b      	ldrb	r3, [r3, #0]
 801c8f8:	2b01      	cmp	r3, #1
 801c8fa:	d161      	bne.n	801c9c0 <RegionUS915ApplyCFList+0xe0>
 801c8fc:	2300      	movs	r3, #0
 801c8fe:	73fb      	strb	r3, [r7, #15]
 801c900:	2300      	movs	r3, #0
 801c902:	73bb      	strb	r3, [r7, #14]
 801c904:	e056      	b.n	801c9b4 <RegionUS915ApplyCFList+0xd4>
 801c906:	687b      	ldr	r3, [r7, #4]
 801c908:	681a      	ldr	r2, [r3, #0]
 801c90a:	7bbb      	ldrb	r3, [r7, #14]
 801c90c:	4413      	add	r3, r2
 801c90e:	781a      	ldrb	r2, [r3, #0]
 801c910:	7bfb      	ldrb	r3, [r7, #15]
 801c912:	b291      	uxth	r1, r2
 801c914:	4a2d      	ldr	r2, [pc, #180]	; (801c9cc <RegionUS915ApplyCFList+0xec>)
 801c916:	f503 73dc 	add.w	r3, r3, #440	; 0x1b8
 801c91a:	005b      	lsls	r3, r3, #1
 801c91c:	4413      	add	r3, r2
 801c91e:	460a      	mov	r2, r1
 801c920:	809a      	strh	r2, [r3, #4]
 801c922:	7bfb      	ldrb	r3, [r7, #15]
 801c924:	4a29      	ldr	r2, [pc, #164]	; (801c9cc <RegionUS915ApplyCFList+0xec>)
 801c926:	f503 73dc 	add.w	r3, r3, #440	; 0x1b8
 801c92a:	005b      	lsls	r3, r3, #1
 801c92c:	4413      	add	r3, r2
 801c92e:	8899      	ldrh	r1, [r3, #4]
 801c930:	687b      	ldr	r3, [r7, #4]
 801c932:	681a      	ldr	r2, [r3, #0]
 801c934:	7bbb      	ldrb	r3, [r7, #14]
 801c936:	3301      	adds	r3, #1
 801c938:	4413      	add	r3, r2
 801c93a:	781b      	ldrb	r3, [r3, #0]
 801c93c:	b29b      	uxth	r3, r3
 801c93e:	021b      	lsls	r3, r3, #8
 801c940:	b29a      	uxth	r2, r3
 801c942:	7bfb      	ldrb	r3, [r7, #15]
 801c944:	430a      	orrs	r2, r1
 801c946:	b291      	uxth	r1, r2
 801c948:	4a20      	ldr	r2, [pc, #128]	; (801c9cc <RegionUS915ApplyCFList+0xec>)
 801c94a:	f503 73dc 	add.w	r3, r3, #440	; 0x1b8
 801c94e:	005b      	lsls	r3, r3, #1
 801c950:	4413      	add	r3, r2
 801c952:	460a      	mov	r2, r1
 801c954:	809a      	strh	r2, [r3, #4]
 801c956:	7bfb      	ldrb	r3, [r7, #15]
 801c958:	2b04      	cmp	r3, #4
 801c95a:	d110      	bne.n	801c97e <RegionUS915ApplyCFList+0x9e>
 801c95c:	7bfb      	ldrb	r3, [r7, #15]
 801c95e:	4a1b      	ldr	r2, [pc, #108]	; (801c9cc <RegionUS915ApplyCFList+0xec>)
 801c960:	f503 73dc 	add.w	r3, r3, #440	; 0x1b8
 801c964:	005b      	lsls	r3, r3, #1
 801c966:	4413      	add	r3, r2
 801c968:	889a      	ldrh	r2, [r3, #4]
 801c96a:	7bfb      	ldrb	r3, [r7, #15]
 801c96c:	b2d2      	uxtb	r2, r2
 801c96e:	b291      	uxth	r1, r2
 801c970:	4a16      	ldr	r2, [pc, #88]	; (801c9cc <RegionUS915ApplyCFList+0xec>)
 801c972:	f503 73dc 	add.w	r3, r3, #440	; 0x1b8
 801c976:	005b      	lsls	r3, r3, #1
 801c978:	4413      	add	r3, r2
 801c97a:	460a      	mov	r2, r1
 801c97c:	809a      	strh	r2, [r3, #4]
 801c97e:	7bfb      	ldrb	r3, [r7, #15]
 801c980:	4a12      	ldr	r2, [pc, #72]	; (801c9cc <RegionUS915ApplyCFList+0xec>)
 801c982:	f503 73e0 	add.w	r3, r3, #448	; 0x1c0
 801c986:	f832 1013 	ldrh.w	r1, [r2, r3, lsl #1]
 801c98a:	7bfb      	ldrb	r3, [r7, #15]
 801c98c:	4a0f      	ldr	r2, [pc, #60]	; (801c9cc <RegionUS915ApplyCFList+0xec>)
 801c98e:	f503 73dc 	add.w	r3, r3, #440	; 0x1b8
 801c992:	005b      	lsls	r3, r3, #1
 801c994:	4413      	add	r3, r2
 801c996:	889a      	ldrh	r2, [r3, #4]
 801c998:	7bfb      	ldrb	r3, [r7, #15]
 801c99a:	400a      	ands	r2, r1
 801c99c:	b291      	uxth	r1, r2
 801c99e:	4a0b      	ldr	r2, [pc, #44]	; (801c9cc <RegionUS915ApplyCFList+0xec>)
 801c9a0:	f503 73e0 	add.w	r3, r3, #448	; 0x1c0
 801c9a4:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
 801c9a8:	7bfb      	ldrb	r3, [r7, #15]
 801c9aa:	3301      	adds	r3, #1
 801c9ac:	73fb      	strb	r3, [r7, #15]
 801c9ae:	7bbb      	ldrb	r3, [r7, #14]
 801c9b0:	3302      	adds	r3, #2
 801c9b2:	73bb      	strb	r3, [r7, #14]
 801c9b4:	7bfb      	ldrb	r3, [r7, #15]
 801c9b6:	2b04      	cmp	r3, #4
 801c9b8:	d9a5      	bls.n	801c906 <RegionUS915ApplyCFList+0x26>
 801c9ba:	e002      	b.n	801c9c2 <RegionUS915ApplyCFList+0xe2>
 801c9bc:	bf00      	nop
 801c9be:	e000      	b.n	801c9c2 <RegionUS915ApplyCFList+0xe2>
 801c9c0:	bf00      	nop
 801c9c2:	3714      	adds	r7, #20
 801c9c4:	46bd      	mov	sp, r7
 801c9c6:	bc80      	pop	{r7}
 801c9c8:	4770      	bx	lr
 801c9ca:	bf00      	nop
 801c9cc:	200014a8 	.word	0x200014a8

0801c9d0 <RegionUS915ChanMaskSet>:
 801c9d0:	b580      	push	{r7, lr}
 801c9d2:	b084      	sub	sp, #16
 801c9d4:	af00      	add	r7, sp, #0
 801c9d6:	6078      	str	r0, [r7, #4]
 801c9d8:	687b      	ldr	r3, [r7, #4]
 801c9da:	681b      	ldr	r3, [r3, #0]
 801c9dc:	2204      	movs	r2, #4
 801c9de:	2100      	movs	r1, #0
 801c9e0:	4618      	mov	r0, r3
 801c9e2:	f7fd fd0e 	bl	801a402 <RegionCommonCountChannels>
 801c9e6:	4603      	mov	r3, r0
 801c9e8:	73bb      	strb	r3, [r7, #14]
 801c9ea:	7bbb      	ldrb	r3, [r7, #14]
 801c9ec:	2b01      	cmp	r3, #1
 801c9ee:	d804      	bhi.n	801c9fa <RegionUS915ChanMaskSet+0x2a>
 801c9f0:	7bbb      	ldrb	r3, [r7, #14]
 801c9f2:	2b00      	cmp	r3, #0
 801c9f4:	d001      	beq.n	801c9fa <RegionUS915ChanMaskSet+0x2a>
 801c9f6:	2300      	movs	r3, #0
 801c9f8:	e043      	b.n	801ca82 <RegionUS915ChanMaskSet+0xb2>
 801c9fa:	687b      	ldr	r3, [r7, #4]
 801c9fc:	791b      	ldrb	r3, [r3, #4]
 801c9fe:	2b00      	cmp	r3, #0
 801ca00:	d002      	beq.n	801ca08 <RegionUS915ChanMaskSet+0x38>
 801ca02:	2b01      	cmp	r3, #1
 801ca04:	d032      	beq.n	801ca6c <RegionUS915ChanMaskSet+0x9c>
 801ca06:	e039      	b.n	801ca7c <RegionUS915ChanMaskSet+0xac>
 801ca08:	687b      	ldr	r3, [r7, #4]
 801ca0a:	681b      	ldr	r3, [r3, #0]
 801ca0c:	2206      	movs	r2, #6
 801ca0e:	4619      	mov	r1, r3
 801ca10:	481e      	ldr	r0, [pc, #120]	; (801ca8c <RegionUS915ChanMaskSet+0xbc>)
 801ca12:	f7fd fd22 	bl	801a45a <RegionCommonChanMaskCopy>
 801ca16:	4b1e      	ldr	r3, [pc, #120]	; (801ca90 <RegionUS915ChanMaskSet+0xc0>)
 801ca18:	f8b3 3394 	ldrh.w	r3, [r3, #916]	; 0x394
 801ca1c:	b2db      	uxtb	r3, r3
 801ca1e:	b29a      	uxth	r2, r3
 801ca20:	4b1b      	ldr	r3, [pc, #108]	; (801ca90 <RegionUS915ChanMaskSet+0xc0>)
 801ca22:	f8a3 2394 	strh.w	r2, [r3, #916]	; 0x394
 801ca26:	4b1a      	ldr	r3, [pc, #104]	; (801ca90 <RegionUS915ChanMaskSet+0xc0>)
 801ca28:	2200      	movs	r2, #0
 801ca2a:	f8a3 2396 	strh.w	r2, [r3, #918]	; 0x396
 801ca2e:	2300      	movs	r3, #0
 801ca30:	73fb      	strb	r3, [r7, #15]
 801ca32:	e017      	b.n	801ca64 <RegionUS915ChanMaskSet+0x94>
 801ca34:	7bfb      	ldrb	r3, [r7, #15]
 801ca36:	4a16      	ldr	r2, [pc, #88]	; (801ca90 <RegionUS915ChanMaskSet+0xc0>)
 801ca38:	f503 73e0 	add.w	r3, r3, #448	; 0x1c0
 801ca3c:	f832 1013 	ldrh.w	r1, [r2, r3, lsl #1]
 801ca40:	7bfb      	ldrb	r3, [r7, #15]
 801ca42:	4a13      	ldr	r2, [pc, #76]	; (801ca90 <RegionUS915ChanMaskSet+0xc0>)
 801ca44:	f503 73dc 	add.w	r3, r3, #440	; 0x1b8
 801ca48:	005b      	lsls	r3, r3, #1
 801ca4a:	4413      	add	r3, r2
 801ca4c:	889a      	ldrh	r2, [r3, #4]
 801ca4e:	7bfb      	ldrb	r3, [r7, #15]
 801ca50:	400a      	ands	r2, r1
 801ca52:	b291      	uxth	r1, r2
 801ca54:	4a0e      	ldr	r2, [pc, #56]	; (801ca90 <RegionUS915ChanMaskSet+0xc0>)
 801ca56:	f503 73e0 	add.w	r3, r3, #448	; 0x1c0
 801ca5a:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
 801ca5e:	7bfb      	ldrb	r3, [r7, #15]
 801ca60:	3301      	adds	r3, #1
 801ca62:	73fb      	strb	r3, [r7, #15]
 801ca64:	7bfb      	ldrb	r3, [r7, #15]
 801ca66:	2b05      	cmp	r3, #5
 801ca68:	d9e4      	bls.n	801ca34 <RegionUS915ChanMaskSet+0x64>
 801ca6a:	e009      	b.n	801ca80 <RegionUS915ChanMaskSet+0xb0>
 801ca6c:	687b      	ldr	r3, [r7, #4]
 801ca6e:	681b      	ldr	r3, [r3, #0]
 801ca70:	2206      	movs	r2, #6
 801ca72:	4619      	mov	r1, r3
 801ca74:	4807      	ldr	r0, [pc, #28]	; (801ca94 <RegionUS915ChanMaskSet+0xc4>)
 801ca76:	f7fd fcf0 	bl	801a45a <RegionCommonChanMaskCopy>
 801ca7a:	e001      	b.n	801ca80 <RegionUS915ChanMaskSet+0xb0>
 801ca7c:	2300      	movs	r3, #0
 801ca7e:	e000      	b.n	801ca82 <RegionUS915ChanMaskSet+0xb2>
 801ca80:	2301      	movs	r3, #1
 801ca82:	4618      	mov	r0, r3
 801ca84:	3710      	adds	r7, #16
 801ca86:	46bd      	mov	sp, r7
 801ca88:	bd80      	pop	{r7, pc}
 801ca8a:	bf00      	nop
 801ca8c:	2000181c 	.word	0x2000181c
 801ca90:	200014a8 	.word	0x200014a8
 801ca94:	20001834 	.word	0x20001834

0801ca98 <RegionUS915ComputeRxWindowParameters>:
 801ca98:	b580      	push	{r7, lr}
 801ca9a:	b088      	sub	sp, #32
 801ca9c:	af02      	add	r7, sp, #8
 801ca9e:	60ba      	str	r2, [r7, #8]
 801caa0:	607b      	str	r3, [r7, #4]
 801caa2:	4603      	mov	r3, r0
 801caa4:	73fb      	strb	r3, [r7, #15]
 801caa6:	460b      	mov	r3, r1
 801caa8:	73bb      	strb	r3, [r7, #14]
 801caaa:	2300      	movs	r3, #0
 801caac:	617b      	str	r3, [r7, #20]
 801caae:	f997 300f 	ldrsb.w	r3, [r7, #15]
 801cab2:	2b0d      	cmp	r3, #13
 801cab4:	bfa8      	it	ge
 801cab6:	230d      	movge	r3, #13
 801cab8:	b25a      	sxtb	r2, r3
 801caba:	687b      	ldr	r3, [r7, #4]
 801cabc:	705a      	strb	r2, [r3, #1]
 801cabe:	687b      	ldr	r3, [r7, #4]
 801cac0:	f993 3001 	ldrsb.w	r3, [r3, #1]
 801cac4:	4618      	mov	r0, r3
 801cac6:	f7ff fb4d 	bl	801c164 <GetBandwidth>
 801caca:	4603      	mov	r3, r0
 801cacc:	b2da      	uxtb	r2, r3
 801cace:	687b      	ldr	r3, [r7, #4]
 801cad0:	709a      	strb	r2, [r3, #2]
 801cad2:	687b      	ldr	r3, [r7, #4]
 801cad4:	f993 3001 	ldrsb.w	r3, [r3, #1]
 801cad8:	461a      	mov	r2, r3
 801cada:	4b10      	ldr	r3, [pc, #64]	; (801cb1c <RegionUS915ComputeRxWindowParameters+0x84>)
 801cadc:	5c9a      	ldrb	r2, [r3, r2]
 801cade:	687b      	ldr	r3, [r7, #4]
 801cae0:	f993 3001 	ldrsb.w	r3, [r3, #1]
 801cae4:	4619      	mov	r1, r3
 801cae6:	4b0e      	ldr	r3, [pc, #56]	; (801cb20 <RegionUS915ComputeRxWindowParameters+0x88>)
 801cae8:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 801caec:	4619      	mov	r1, r3
 801caee:	4610      	mov	r0, r2
 801caf0:	f7fd fe68 	bl	801a7c4 <RegionCommonComputeSymbolTimeLoRa>
 801caf4:	6178      	str	r0, [r7, #20]
 801caf6:	4b0b      	ldr	r3, [pc, #44]	; (801cb24 <RegionUS915ComputeRxWindowParameters+0x8c>)
 801caf8:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 801cafa:	4798      	blx	r3
 801cafc:	687b      	ldr	r3, [r7, #4]
 801cafe:	3308      	adds	r3, #8
 801cb00:	687a      	ldr	r2, [r7, #4]
 801cb02:	320c      	adds	r2, #12
 801cb04:	7bb9      	ldrb	r1, [r7, #14]
 801cb06:	9201      	str	r2, [sp, #4]
 801cb08:	9300      	str	r3, [sp, #0]
 801cb0a:	4603      	mov	r3, r0
 801cb0c:	68ba      	ldr	r2, [r7, #8]
 801cb0e:	6978      	ldr	r0, [r7, #20]
 801cb10:	f7fd fe7a 	bl	801a808 <RegionCommonComputeRxWindowParameters>
 801cb14:	bf00      	nop
 801cb16:	3718      	adds	r7, #24
 801cb18:	46bd      	mov	sp, r7
 801cb1a:	bd80      	pop	{r7, pc}
 801cb1c:	080267b8 	.word	0x080267b8
 801cb20:	080267c8 	.word	0x080267c8
 801cb24:	0802683c 	.word	0x0802683c

0801cb28 <RegionUS915RxConfig>:
 801cb28:	b590      	push	{r4, r7, lr}
 801cb2a:	b091      	sub	sp, #68	; 0x44
 801cb2c:	af0a      	add	r7, sp, #40	; 0x28
 801cb2e:	6078      	str	r0, [r7, #4]
 801cb30:	6039      	str	r1, [r7, #0]
 801cb32:	687b      	ldr	r3, [r7, #4]
 801cb34:	785b      	ldrb	r3, [r3, #1]
 801cb36:	73fb      	strb	r3, [r7, #15]
 801cb38:	2300      	movs	r3, #0
 801cb3a:	75fb      	strb	r3, [r7, #23]
 801cb3c:	2300      	movs	r3, #0
 801cb3e:	73bb      	strb	r3, [r7, #14]
 801cb40:	687b      	ldr	r3, [r7, #4]
 801cb42:	685b      	ldr	r3, [r3, #4]
 801cb44:	613b      	str	r3, [r7, #16]
 801cb46:	4b34      	ldr	r3, [pc, #208]	; (801cc18 <RegionUS915RxConfig+0xf0>)
 801cb48:	685b      	ldr	r3, [r3, #4]
 801cb4a:	4798      	blx	r3
 801cb4c:	4603      	mov	r3, r0
 801cb4e:	2b00      	cmp	r3, #0
 801cb50:	d001      	beq.n	801cb56 <RegionUS915RxConfig+0x2e>
 801cb52:	2300      	movs	r3, #0
 801cb54:	e05c      	b.n	801cc10 <RegionUS915RxConfig+0xe8>
 801cb56:	687b      	ldr	r3, [r7, #4]
 801cb58:	7cdb      	ldrb	r3, [r3, #19]
 801cb5a:	2b00      	cmp	r3, #0
 801cb5c:	d109      	bne.n	801cb72 <RegionUS915RxConfig+0x4a>
 801cb5e:	687b      	ldr	r3, [r7, #4]
 801cb60:	781b      	ldrb	r3, [r3, #0]
 801cb62:	f003 0307 	and.w	r3, r3, #7
 801cb66:	4a2d      	ldr	r2, [pc, #180]	; (801cc1c <RegionUS915RxConfig+0xf4>)
 801cb68:	fb02 f203 	mul.w	r2, r2, r3
 801cb6c:	4b2c      	ldr	r3, [pc, #176]	; (801cc20 <RegionUS915RxConfig+0xf8>)
 801cb6e:	4413      	add	r3, r2
 801cb70:	613b      	str	r3, [r7, #16]
 801cb72:	f997 300f 	ldrsb.w	r3, [r7, #15]
 801cb76:	4a2b      	ldr	r2, [pc, #172]	; (801cc24 <RegionUS915RxConfig+0xfc>)
 801cb78:	5cd3      	ldrb	r3, [r2, r3]
 801cb7a:	73bb      	strb	r3, [r7, #14]
 801cb7c:	4b26      	ldr	r3, [pc, #152]	; (801cc18 <RegionUS915RxConfig+0xf0>)
 801cb7e:	68db      	ldr	r3, [r3, #12]
 801cb80:	6938      	ldr	r0, [r7, #16]
 801cb82:	4798      	blx	r3
 801cb84:	4b24      	ldr	r3, [pc, #144]	; (801cc18 <RegionUS915RxConfig+0xf0>)
 801cb86:	699c      	ldr	r4, [r3, #24]
 801cb88:	687b      	ldr	r3, [r7, #4]
 801cb8a:	789b      	ldrb	r3, [r3, #2]
 801cb8c:	4618      	mov	r0, r3
 801cb8e:	f997 100e 	ldrsb.w	r1, [r7, #14]
 801cb92:	687b      	ldr	r3, [r7, #4]
 801cb94:	689b      	ldr	r3, [r3, #8]
 801cb96:	b29b      	uxth	r3, r3
 801cb98:	687a      	ldr	r2, [r7, #4]
 801cb9a:	7c92      	ldrb	r2, [r2, #18]
 801cb9c:	9209      	str	r2, [sp, #36]	; 0x24
 801cb9e:	2201      	movs	r2, #1
 801cba0:	9208      	str	r2, [sp, #32]
 801cba2:	2200      	movs	r2, #0
 801cba4:	9207      	str	r2, [sp, #28]
 801cba6:	2200      	movs	r2, #0
 801cba8:	9206      	str	r2, [sp, #24]
 801cbaa:	2200      	movs	r2, #0
 801cbac:	9205      	str	r2, [sp, #20]
 801cbae:	2200      	movs	r2, #0
 801cbb0:	9204      	str	r2, [sp, #16]
 801cbb2:	2200      	movs	r2, #0
 801cbb4:	9203      	str	r2, [sp, #12]
 801cbb6:	9302      	str	r3, [sp, #8]
 801cbb8:	2308      	movs	r3, #8
 801cbba:	9301      	str	r3, [sp, #4]
 801cbbc:	2300      	movs	r3, #0
 801cbbe:	9300      	str	r3, [sp, #0]
 801cbc0:	2301      	movs	r3, #1
 801cbc2:	460a      	mov	r2, r1
 801cbc4:	4601      	mov	r1, r0
 801cbc6:	2001      	movs	r0, #1
 801cbc8:	47a0      	blx	r4
 801cbca:	687b      	ldr	r3, [r7, #4]
 801cbcc:	7c5b      	ldrb	r3, [r3, #17]
 801cbce:	2b00      	cmp	r3, #0
 801cbd0:	d005      	beq.n	801cbde <RegionUS915RxConfig+0xb6>
 801cbd2:	f997 300f 	ldrsb.w	r3, [r7, #15]
 801cbd6:	4a14      	ldr	r2, [pc, #80]	; (801cc28 <RegionUS915RxConfig+0x100>)
 801cbd8:	5cd3      	ldrb	r3, [r2, r3]
 801cbda:	75fb      	strb	r3, [r7, #23]
 801cbdc:	e004      	b.n	801cbe8 <RegionUS915RxConfig+0xc0>
 801cbde:	f997 300f 	ldrsb.w	r3, [r7, #15]
 801cbe2:	4a12      	ldr	r2, [pc, #72]	; (801cc2c <RegionUS915RxConfig+0x104>)
 801cbe4:	5cd3      	ldrb	r3, [r2, r3]
 801cbe6:	75fb      	strb	r3, [r7, #23]
 801cbe8:	4b0b      	ldr	r3, [pc, #44]	; (801cc18 <RegionUS915RxConfig+0xf0>)
 801cbea:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 801cbec:	7dfa      	ldrb	r2, [r7, #23]
 801cbee:	320d      	adds	r2, #13
 801cbf0:	b2d2      	uxtb	r2, r2
 801cbf2:	4611      	mov	r1, r2
 801cbf4:	2001      	movs	r0, #1
 801cbf6:	4798      	blx	r3
 801cbf8:	687b      	ldr	r3, [r7, #4]
 801cbfa:	7cdb      	ldrb	r3, [r3, #19]
 801cbfc:	f997 200f 	ldrsb.w	r2, [r7, #15]
 801cc00:	6939      	ldr	r1, [r7, #16]
 801cc02:	4618      	mov	r0, r3
 801cc04:	f7fd ff90 	bl	801ab28 <RegionCommonRxConfigPrint>
 801cc08:	683b      	ldr	r3, [r7, #0]
 801cc0a:	7bfa      	ldrb	r2, [r7, #15]
 801cc0c:	701a      	strb	r2, [r3, #0]
 801cc0e:	2301      	movs	r3, #1
 801cc10:	4618      	mov	r0, r3
 801cc12:	371c      	adds	r7, #28
 801cc14:	46bd      	mov	sp, r7
 801cc16:	bd90      	pop	{r4, r7, pc}
 801cc18:	0802683c 	.word	0x0802683c
 801cc1c:	000927c0 	.word	0x000927c0
 801cc20:	370870a0 	.word	0x370870a0
 801cc24:	080267b8 	.word	0x080267b8
 801cc28:	0802682c 	.word	0x0802682c
 801cc2c:	0802681c 	.word	0x0802681c

0801cc30 <RegionUS915TxConfig>:
 801cc30:	b590      	push	{r4, r7, lr}
 801cc32:	b093      	sub	sp, #76	; 0x4c
 801cc34:	af0a      	add	r7, sp, #40	; 0x28
 801cc36:	60f8      	str	r0, [r7, #12]
 801cc38:	60b9      	str	r1, [r7, #8]
 801cc3a:	607a      	str	r2, [r7, #4]
 801cc3c:	68fb      	ldr	r3, [r7, #12]
 801cc3e:	f993 3001 	ldrsb.w	r3, [r3, #1]
 801cc42:	461a      	mov	r2, r3
 801cc44:	4b46      	ldr	r3, [pc, #280]	; (801cd60 <RegionUS915TxConfig+0x130>)
 801cc46:	5c9b      	ldrb	r3, [r3, r2]
 801cc48:	77fb      	strb	r3, [r7, #31]
 801cc4a:	68fb      	ldr	r3, [r7, #12]
 801cc4c:	f993 0002 	ldrsb.w	r0, [r3, #2]
 801cc50:	68fb      	ldr	r3, [r7, #12]
 801cc52:	781b      	ldrb	r3, [r3, #0]
 801cc54:	4619      	mov	r1, r3
 801cc56:	4a43      	ldr	r2, [pc, #268]	; (801cd64 <RegionUS915TxConfig+0x134>)
 801cc58:	460b      	mov	r3, r1
 801cc5a:	005b      	lsls	r3, r3, #1
 801cc5c:	440b      	add	r3, r1
 801cc5e:	009b      	lsls	r3, r3, #2
 801cc60:	4413      	add	r3, r2
 801cc62:	3309      	adds	r3, #9
 801cc64:	781b      	ldrb	r3, [r3, #0]
 801cc66:	4619      	mov	r1, r3
 801cc68:	4a3e      	ldr	r2, [pc, #248]	; (801cd64 <RegionUS915TxConfig+0x134>)
 801cc6a:	460b      	mov	r3, r1
 801cc6c:	009b      	lsls	r3, r3, #2
 801cc6e:	440b      	add	r3, r1
 801cc70:	009b      	lsls	r3, r3, #2
 801cc72:	4413      	add	r3, r2
 801cc74:	f203 3362 	addw	r3, r3, #866	; 0x362
 801cc78:	f993 1000 	ldrsb.w	r1, [r3]
 801cc7c:	68fb      	ldr	r3, [r7, #12]
 801cc7e:	f993 2001 	ldrsb.w	r2, [r3, #1]
 801cc82:	4b39      	ldr	r3, [pc, #228]	; (801cd68 <RegionUS915TxConfig+0x138>)
 801cc84:	f7ff fa8c 	bl	801c1a0 <LimitTxPower>
 801cc88:	4603      	mov	r3, r0
 801cc8a:	77bb      	strb	r3, [r7, #30]
 801cc8c:	68fb      	ldr	r3, [r7, #12]
 801cc8e:	f993 3001 	ldrsb.w	r3, [r3, #1]
 801cc92:	4618      	mov	r0, r3
 801cc94:	f7ff fa66 	bl	801c164 <GetBandwidth>
 801cc98:	61b8      	str	r0, [r7, #24]
 801cc9a:	2300      	movs	r3, #0
 801cc9c:	75fb      	strb	r3, [r7, #23]
 801cc9e:	f997 301e 	ldrsb.w	r3, [r7, #30]
 801cca2:	f04f 0200 	mov.w	r2, #0
 801cca6:	4931      	ldr	r1, [pc, #196]	; (801cd6c <RegionUS915TxConfig+0x13c>)
 801cca8:	4618      	mov	r0, r3
 801ccaa:	f7fd fdef 	bl	801a88c <RegionCommonComputeTxPower>
 801ccae:	4603      	mov	r3, r0
 801ccb0:	75fb      	strb	r3, [r7, #23]
 801ccb2:	4b2f      	ldr	r3, [pc, #188]	; (801cd70 <RegionUS915TxConfig+0x140>)
 801ccb4:	68da      	ldr	r2, [r3, #12]
 801ccb6:	68fb      	ldr	r3, [r7, #12]
 801ccb8:	781b      	ldrb	r3, [r3, #0]
 801ccba:	4618      	mov	r0, r3
 801ccbc:	4929      	ldr	r1, [pc, #164]	; (801cd64 <RegionUS915TxConfig+0x134>)
 801ccbe:	4603      	mov	r3, r0
 801ccc0:	005b      	lsls	r3, r3, #1
 801ccc2:	4403      	add	r3, r0
 801ccc4:	009b      	lsls	r3, r3, #2
 801ccc6:	440b      	add	r3, r1
 801ccc8:	681b      	ldr	r3, [r3, #0]
 801ccca:	4618      	mov	r0, r3
 801cccc:	4790      	blx	r2
 801ccce:	4b28      	ldr	r3, [pc, #160]	; (801cd70 <RegionUS915TxConfig+0x140>)
 801ccd0:	69dc      	ldr	r4, [r3, #28]
 801ccd2:	f997 301f 	ldrsb.w	r3, [r7, #31]
 801ccd6:	f997 1017 	ldrsb.w	r1, [r7, #23]
 801ccda:	f44f 627a 	mov.w	r2, #4000	; 0xfa0
 801ccde:	9208      	str	r2, [sp, #32]
 801cce0:	2200      	movs	r2, #0
 801cce2:	9207      	str	r2, [sp, #28]
 801cce4:	2200      	movs	r2, #0
 801cce6:	9206      	str	r2, [sp, #24]
 801cce8:	2200      	movs	r2, #0
 801ccea:	9205      	str	r2, [sp, #20]
 801ccec:	2201      	movs	r2, #1
 801ccee:	9204      	str	r2, [sp, #16]
 801ccf0:	2200      	movs	r2, #0
 801ccf2:	9203      	str	r2, [sp, #12]
 801ccf4:	2208      	movs	r2, #8
 801ccf6:	9202      	str	r2, [sp, #8]
 801ccf8:	2201      	movs	r2, #1
 801ccfa:	9201      	str	r2, [sp, #4]
 801ccfc:	9300      	str	r3, [sp, #0]
 801ccfe:	69bb      	ldr	r3, [r7, #24]
 801cd00:	2200      	movs	r2, #0
 801cd02:	2001      	movs	r0, #1
 801cd04:	47a0      	blx	r4
 801cd06:	68fb      	ldr	r3, [r7, #12]
 801cd08:	781b      	ldrb	r3, [r3, #0]
 801cd0a:	4619      	mov	r1, r3
 801cd0c:	4a15      	ldr	r2, [pc, #84]	; (801cd64 <RegionUS915TxConfig+0x134>)
 801cd0e:	460b      	mov	r3, r1
 801cd10:	005b      	lsls	r3, r3, #1
 801cd12:	440b      	add	r3, r1
 801cd14:	009b      	lsls	r3, r3, #2
 801cd16:	4413      	add	r3, r2
 801cd18:	681a      	ldr	r2, [r3, #0]
 801cd1a:	68fb      	ldr	r3, [r7, #12]
 801cd1c:	f993 3001 	ldrsb.w	r3, [r3, #1]
 801cd20:	4619      	mov	r1, r3
 801cd22:	4610      	mov	r0, r2
 801cd24:	f7fd ff3e 	bl	801aba4 <RegionCommonTxConfigPrint>
 801cd28:	4b11      	ldr	r3, [pc, #68]	; (801cd70 <RegionUS915TxConfig+0x140>)
 801cd2a:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 801cd2c:	68fa      	ldr	r2, [r7, #12]
 801cd2e:	8992      	ldrh	r2, [r2, #12]
 801cd30:	b2d2      	uxtb	r2, r2
 801cd32:	4611      	mov	r1, r2
 801cd34:	2001      	movs	r0, #1
 801cd36:	4798      	blx	r3
 801cd38:	68fb      	ldr	r3, [r7, #12]
 801cd3a:	f993 2001 	ldrsb.w	r2, [r3, #1]
 801cd3e:	68fb      	ldr	r3, [r7, #12]
 801cd40:	899b      	ldrh	r3, [r3, #12]
 801cd42:	4619      	mov	r1, r3
 801cd44:	4610      	mov	r0, r2
 801cd46:	f7ff faa3 	bl	801c290 <GetTimeOnAir>
 801cd4a:	4602      	mov	r2, r0
 801cd4c:	687b      	ldr	r3, [r7, #4]
 801cd4e:	601a      	str	r2, [r3, #0]
 801cd50:	68bb      	ldr	r3, [r7, #8]
 801cd52:	7fba      	ldrb	r2, [r7, #30]
 801cd54:	701a      	strb	r2, [r3, #0]
 801cd56:	2301      	movs	r3, #1
 801cd58:	4618      	mov	r0, r3
 801cd5a:	3724      	adds	r7, #36	; 0x24
 801cd5c:	46bd      	mov	sp, r7
 801cd5e:	bd90      	pop	{r4, r7, pc}
 801cd60:	080267b8 	.word	0x080267b8
 801cd64:	200014a8 	.word	0x200014a8
 801cd68:	2000181c 	.word	0x2000181c
 801cd6c:	41f00000 	.word	0x41f00000
 801cd70:	0802683c 	.word	0x0802683c

0801cd74 <RegionUS915LinkAdrReq>:
 801cd74:	b590      	push	{r4, r7, lr}
 801cd76:	b097      	sub	sp, #92	; 0x5c
 801cd78:	af00      	add	r7, sp, #0
 801cd7a:	60f8      	str	r0, [r7, #12]
 801cd7c:	60b9      	str	r1, [r7, #8]
 801cd7e:	607a      	str	r2, [r7, #4]
 801cd80:	603b      	str	r3, [r7, #0]
 801cd82:	2307      	movs	r3, #7
 801cd84:	f887 3057 	strb.w	r3, [r7, #87]	; 0x57
 801cd88:	f107 034c 	add.w	r3, r7, #76	; 0x4c
 801cd8c:	2200      	movs	r2, #0
 801cd8e:	601a      	str	r2, [r3, #0]
 801cd90:	809a      	strh	r2, [r3, #4]
 801cd92:	2300      	movs	r3, #0
 801cd94:	f887 3053 	strb.w	r3, [r7, #83]	; 0x53
 801cd98:	2300      	movs	r3, #0
 801cd9a:	f887 3056 	strb.w	r3, [r7, #86]	; 0x56
 801cd9e:	f107 0340 	add.w	r3, r7, #64	; 0x40
 801cda2:	2200      	movs	r2, #0
 801cda4:	601a      	str	r2, [r3, #0]
 801cda6:	605a      	str	r2, [r3, #4]
 801cda8:	609a      	str	r2, [r3, #8]
 801cdaa:	f107 0340 	add.w	r3, r7, #64	; 0x40
 801cdae:	2206      	movs	r2, #6
 801cdb0:	4998      	ldr	r1, [pc, #608]	; (801d014 <RegionUS915LinkAdrReq+0x2a0>)
 801cdb2:	4618      	mov	r0, r3
 801cdb4:	f7fd fb51 	bl	801a45a <RegionCommonChanMaskCopy>
 801cdb8:	e124      	b.n	801d004 <RegionUS915LinkAdrReq+0x290>
 801cdba:	68fb      	ldr	r3, [r7, #12]
 801cdbc:	685a      	ldr	r2, [r3, #4]
 801cdbe:	f897 3056 	ldrb.w	r3, [r7, #86]	; 0x56
 801cdc2:	4413      	add	r3, r2
 801cdc4:	f107 024c 	add.w	r2, r7, #76	; 0x4c
 801cdc8:	4611      	mov	r1, r2
 801cdca:	4618      	mov	r0, r3
 801cdcc:	f7fd fc30 	bl	801a630 <RegionCommonParseLinkAdrReq>
 801cdd0:	4603      	mov	r3, r0
 801cdd2:	f887 3053 	strb.w	r3, [r7, #83]	; 0x53
 801cdd6:	f897 3053 	ldrb.w	r3, [r7, #83]	; 0x53
 801cdda:	2b00      	cmp	r3, #0
 801cddc:	f000 811c 	beq.w	801d018 <RegionUS915LinkAdrReq+0x2a4>
 801cde0:	f897 2056 	ldrb.w	r2, [r7, #86]	; 0x56
 801cde4:	f897 3053 	ldrb.w	r3, [r7, #83]	; 0x53
 801cde8:	4413      	add	r3, r2
 801cdea:	f887 3056 	strb.w	r3, [r7, #86]	; 0x56
 801cdee:	2307      	movs	r3, #7
 801cdf0:	f887 3057 	strb.w	r3, [r7, #87]	; 0x57
 801cdf4:	f897 304f 	ldrb.w	r3, [r7, #79]	; 0x4f
 801cdf8:	2b06      	cmp	r3, #6
 801cdfa:	d116      	bne.n	801ce2a <RegionUS915LinkAdrReq+0xb6>
 801cdfc:	f64f 73ff 	movw	r3, #65535	; 0xffff
 801ce00:	f8a7 3040 	strh.w	r3, [r7, #64]	; 0x40
 801ce04:	f64f 73ff 	movw	r3, #65535	; 0xffff
 801ce08:	f8a7 3042 	strh.w	r3, [r7, #66]	; 0x42
 801ce0c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 801ce10:	f8a7 3044 	strh.w	r3, [r7, #68]	; 0x44
 801ce14:	f64f 73ff 	movw	r3, #65535	; 0xffff
 801ce18:	f8a7 3046 	strh.w	r3, [r7, #70]	; 0x46
 801ce1c:	f8b7 3050 	ldrh.w	r3, [r7, #80]	; 0x50
 801ce20:	b2db      	uxtb	r3, r3
 801ce22:	b29b      	uxth	r3, r3
 801ce24:	f8a7 3048 	strh.w	r3, [r7, #72]	; 0x48
 801ce28:	e0ec      	b.n	801d004 <RegionUS915LinkAdrReq+0x290>
 801ce2a:	f897 304f 	ldrb.w	r3, [r7, #79]	; 0x4f
 801ce2e:	2b07      	cmp	r3, #7
 801ce30:	d112      	bne.n	801ce58 <RegionUS915LinkAdrReq+0xe4>
 801ce32:	2300      	movs	r3, #0
 801ce34:	f8a7 3040 	strh.w	r3, [r7, #64]	; 0x40
 801ce38:	2300      	movs	r3, #0
 801ce3a:	f8a7 3042 	strh.w	r3, [r7, #66]	; 0x42
 801ce3e:	2300      	movs	r3, #0
 801ce40:	f8a7 3044 	strh.w	r3, [r7, #68]	; 0x44
 801ce44:	2300      	movs	r3, #0
 801ce46:	f8a7 3046 	strh.w	r3, [r7, #70]	; 0x46
 801ce4a:	f8b7 3050 	ldrh.w	r3, [r7, #80]	; 0x50
 801ce4e:	b2db      	uxtb	r3, r3
 801ce50:	b29b      	uxth	r3, r3
 801ce52:	f8a7 3048 	strh.w	r3, [r7, #72]	; 0x48
 801ce56:	e0d5      	b.n	801d004 <RegionUS915LinkAdrReq+0x290>
 801ce58:	f897 304f 	ldrb.w	r3, [r7, #79]	; 0x4f
 801ce5c:	2b05      	cmp	r3, #5
 801ce5e:	f040 80c7 	bne.w	801cff0 <RegionUS915LinkAdrReq+0x27c>
 801ce62:	2301      	movs	r3, #1
 801ce64:	f887 3052 	strb.w	r3, [r7, #82]	; 0x52
 801ce68:	2300      	movs	r3, #0
 801ce6a:	f887 3055 	strb.w	r3, [r7, #85]	; 0x55
 801ce6e:	2300      	movs	r3, #0
 801ce70:	f887 3054 	strb.w	r3, [r7, #84]	; 0x54
 801ce74:	e0b6      	b.n	801cfe4 <RegionUS915LinkAdrReq+0x270>
 801ce76:	f8b7 3050 	ldrh.w	r3, [r7, #80]	; 0x50
 801ce7a:	b2da      	uxtb	r2, r3
 801ce7c:	f897 1052 	ldrb.w	r1, [r7, #82]	; 0x52
 801ce80:	f897 3054 	ldrb.w	r3, [r7, #84]	; 0x54
 801ce84:	fa01 f303 	lsl.w	r3, r1, r3
 801ce88:	4013      	ands	r3, r2
 801ce8a:	2b00      	cmp	r3, #0
 801ce8c:	d051      	beq.n	801cf32 <RegionUS915LinkAdrReq+0x1be>
 801ce8e:	f897 3054 	ldrb.w	r3, [r7, #84]	; 0x54
 801ce92:	f003 0301 	and.w	r3, r3, #1
 801ce96:	b2db      	uxtb	r3, r3
 801ce98:	2b00      	cmp	r3, #0
 801ce9a:	d122      	bne.n	801cee2 <RegionUS915LinkAdrReq+0x16e>
 801ce9c:	f897 3055 	ldrb.w	r3, [r7, #85]	; 0x55
 801cea0:	005b      	lsls	r3, r3, #1
 801cea2:	f107 0258 	add.w	r2, r7, #88	; 0x58
 801cea6:	4413      	add	r3, r2
 801cea8:	f833 2c18 	ldrh.w	r2, [r3, #-24]
 801ceac:	f897 3055 	ldrb.w	r3, [r7, #85]	; 0x55
 801ceb0:	f042 02ff 	orr.w	r2, r2, #255	; 0xff
 801ceb4:	b292      	uxth	r2, r2
 801ceb6:	005b      	lsls	r3, r3, #1
 801ceb8:	f107 0158 	add.w	r1, r7, #88	; 0x58
 801cebc:	440b      	add	r3, r1
 801cebe:	f823 2c18 	strh.w	r2, [r3, #-24]
 801cec2:	f8b7 3048 	ldrh.w	r3, [r7, #72]	; 0x48
 801cec6:	b21a      	sxth	r2, r3
 801cec8:	f897 1052 	ldrb.w	r1, [r7, #82]	; 0x52
 801cecc:	f897 3054 	ldrb.w	r3, [r7, #84]	; 0x54
 801ced0:	fa01 f303 	lsl.w	r3, r1, r3
 801ced4:	b21b      	sxth	r3, r3
 801ced6:	4313      	orrs	r3, r2
 801ced8:	b21b      	sxth	r3, r3
 801ceda:	b29b      	uxth	r3, r3
 801cedc:	f8a7 3048 	strh.w	r3, [r7, #72]	; 0x48
 801cee0:	e07b      	b.n	801cfda <RegionUS915LinkAdrReq+0x266>
 801cee2:	f897 3055 	ldrb.w	r3, [r7, #85]	; 0x55
 801cee6:	005b      	lsls	r3, r3, #1
 801cee8:	f107 0258 	add.w	r2, r7, #88	; 0x58
 801ceec:	4413      	add	r3, r2
 801ceee:	f833 2c18 	ldrh.w	r2, [r3, #-24]
 801cef2:	f897 3055 	ldrb.w	r3, [r7, #85]	; 0x55
 801cef6:	f062 02ff 	orn	r2, r2, #255	; 0xff
 801cefa:	b292      	uxth	r2, r2
 801cefc:	005b      	lsls	r3, r3, #1
 801cefe:	f107 0158 	add.w	r1, r7, #88	; 0x58
 801cf02:	440b      	add	r3, r1
 801cf04:	f823 2c18 	strh.w	r2, [r3, #-24]
 801cf08:	f8b7 3048 	ldrh.w	r3, [r7, #72]	; 0x48
 801cf0c:	b21a      	sxth	r2, r3
 801cf0e:	f897 1052 	ldrb.w	r1, [r7, #82]	; 0x52
 801cf12:	f897 3054 	ldrb.w	r3, [r7, #84]	; 0x54
 801cf16:	fa01 f303 	lsl.w	r3, r1, r3
 801cf1a:	b21b      	sxth	r3, r3
 801cf1c:	4313      	orrs	r3, r2
 801cf1e:	b21b      	sxth	r3, r3
 801cf20:	b29b      	uxth	r3, r3
 801cf22:	f8a7 3048 	strh.w	r3, [r7, #72]	; 0x48
 801cf26:	f897 3055 	ldrb.w	r3, [r7, #85]	; 0x55
 801cf2a:	3301      	adds	r3, #1
 801cf2c:	f887 3055 	strb.w	r3, [r7, #85]	; 0x55
 801cf30:	e053      	b.n	801cfda <RegionUS915LinkAdrReq+0x266>
 801cf32:	f897 3054 	ldrb.w	r3, [r7, #84]	; 0x54
 801cf36:	f003 0301 	and.w	r3, r3, #1
 801cf3a:	b2db      	uxtb	r3, r3
 801cf3c:	2b00      	cmp	r3, #0
 801cf3e:	d124      	bne.n	801cf8a <RegionUS915LinkAdrReq+0x216>
 801cf40:	f897 3055 	ldrb.w	r3, [r7, #85]	; 0x55
 801cf44:	005b      	lsls	r3, r3, #1
 801cf46:	f107 0258 	add.w	r2, r7, #88	; 0x58
 801cf4a:	4413      	add	r3, r2
 801cf4c:	f833 2c18 	ldrh.w	r2, [r3, #-24]
 801cf50:	f897 3055 	ldrb.w	r3, [r7, #85]	; 0x55
 801cf54:	f022 02ff 	bic.w	r2, r2, #255	; 0xff
 801cf58:	b292      	uxth	r2, r2
 801cf5a:	005b      	lsls	r3, r3, #1
 801cf5c:	f107 0158 	add.w	r1, r7, #88	; 0x58
 801cf60:	440b      	add	r3, r1
 801cf62:	f823 2c18 	strh.w	r2, [r3, #-24]
 801cf66:	f8b7 3048 	ldrh.w	r3, [r7, #72]	; 0x48
 801cf6a:	b21a      	sxth	r2, r3
 801cf6c:	f897 1052 	ldrb.w	r1, [r7, #82]	; 0x52
 801cf70:	f897 3054 	ldrb.w	r3, [r7, #84]	; 0x54
 801cf74:	fa01 f303 	lsl.w	r3, r1, r3
 801cf78:	b21b      	sxth	r3, r3
 801cf7a:	43db      	mvns	r3, r3
 801cf7c:	b21b      	sxth	r3, r3
 801cf7e:	4013      	ands	r3, r2
 801cf80:	b21b      	sxth	r3, r3
 801cf82:	b29b      	uxth	r3, r3
 801cf84:	f8a7 3048 	strh.w	r3, [r7, #72]	; 0x48
 801cf88:	e027      	b.n	801cfda <RegionUS915LinkAdrReq+0x266>
 801cf8a:	f897 3055 	ldrb.w	r3, [r7, #85]	; 0x55
 801cf8e:	005b      	lsls	r3, r3, #1
 801cf90:	f107 0258 	add.w	r2, r7, #88	; 0x58
 801cf94:	4413      	add	r3, r2
 801cf96:	f833 2c18 	ldrh.w	r2, [r3, #-24]
 801cf9a:	f897 3055 	ldrb.w	r3, [r7, #85]	; 0x55
 801cf9e:	b2d2      	uxtb	r2, r2
 801cfa0:	b292      	uxth	r2, r2
 801cfa2:	005b      	lsls	r3, r3, #1
 801cfa4:	f107 0158 	add.w	r1, r7, #88	; 0x58
 801cfa8:	440b      	add	r3, r1
 801cfaa:	f823 2c18 	strh.w	r2, [r3, #-24]
 801cfae:	f8b7 3048 	ldrh.w	r3, [r7, #72]	; 0x48
 801cfb2:	b21a      	sxth	r2, r3
 801cfb4:	f897 1052 	ldrb.w	r1, [r7, #82]	; 0x52
 801cfb8:	f897 3054 	ldrb.w	r3, [r7, #84]	; 0x54
 801cfbc:	fa01 f303 	lsl.w	r3, r1, r3
 801cfc0:	b21b      	sxth	r3, r3
 801cfc2:	43db      	mvns	r3, r3
 801cfc4:	b21b      	sxth	r3, r3
 801cfc6:	4013      	ands	r3, r2
 801cfc8:	b21b      	sxth	r3, r3
 801cfca:	b29b      	uxth	r3, r3
 801cfcc:	f8a7 3048 	strh.w	r3, [r7, #72]	; 0x48
 801cfd0:	f897 3055 	ldrb.w	r3, [r7, #85]	; 0x55
 801cfd4:	3301      	adds	r3, #1
 801cfd6:	f887 3055 	strb.w	r3, [r7, #85]	; 0x55
 801cfda:	f897 3054 	ldrb.w	r3, [r7, #84]	; 0x54
 801cfde:	3301      	adds	r3, #1
 801cfe0:	f887 3054 	strb.w	r3, [r7, #84]	; 0x54
 801cfe4:	f897 3054 	ldrb.w	r3, [r7, #84]	; 0x54
 801cfe8:	2b07      	cmp	r3, #7
 801cfea:	f67f af44 	bls.w	801ce76 <RegionUS915LinkAdrReq+0x102>
 801cfee:	e009      	b.n	801d004 <RegionUS915LinkAdrReq+0x290>
 801cff0:	f897 304f 	ldrb.w	r3, [r7, #79]	; 0x4f
 801cff4:	f8b7 2050 	ldrh.w	r2, [r7, #80]	; 0x50
 801cff8:	005b      	lsls	r3, r3, #1
 801cffa:	f107 0158 	add.w	r1, r7, #88	; 0x58
 801cffe:	440b      	add	r3, r1
 801d000:	f823 2c18 	strh.w	r2, [r3, #-24]
 801d004:	68fb      	ldr	r3, [r7, #12]
 801d006:	7a1b      	ldrb	r3, [r3, #8]
 801d008:	f897 2056 	ldrb.w	r2, [r7, #86]	; 0x56
 801d00c:	429a      	cmp	r2, r3
 801d00e:	f4ff aed4 	bcc.w	801cdba <RegionUS915LinkAdrReq+0x46>
 801d012:	e002      	b.n	801d01a <RegionUS915LinkAdrReq+0x2a6>
 801d014:	2000181c 	.word	0x2000181c
 801d018:	bf00      	nop
 801d01a:	f997 304d 	ldrsb.w	r3, [r7, #77]	; 0x4d
 801d01e:	2b03      	cmp	r3, #3
 801d020:	dc0f      	bgt.n	801d042 <RegionUS915LinkAdrReq+0x2ce>
 801d022:	f107 0340 	add.w	r3, r7, #64	; 0x40
 801d026:	2204      	movs	r2, #4
 801d028:	2100      	movs	r1, #0
 801d02a:	4618      	mov	r0, r3
 801d02c:	f7fd f9e9 	bl	801a402 <RegionCommonCountChannels>
 801d030:	4603      	mov	r3, r0
 801d032:	2b01      	cmp	r3, #1
 801d034:	d805      	bhi.n	801d042 <RegionUS915LinkAdrReq+0x2ce>
 801d036:	f897 3057 	ldrb.w	r3, [r7, #87]	; 0x57
 801d03a:	f023 0301 	bic.w	r3, r3, #1
 801d03e:	f887 3057 	strb.w	r3, [r7, #87]	; 0x57
 801d042:	2302      	movs	r3, #2
 801d044:	f887 3038 	strb.w	r3, [r7, #56]	; 0x38
 801d048:	68fb      	ldr	r3, [r7, #12]
 801d04a:	7a5b      	ldrb	r3, [r3, #9]
 801d04c:	f887 303a 	strb.w	r3, [r7, #58]	; 0x3a
 801d050:	f107 0338 	add.w	r3, r7, #56	; 0x38
 801d054:	4618      	mov	r0, r3
 801d056:	f7ff f949 	bl	801c2ec <RegionUS915GetPhyParam>
 801d05a:	4603      	mov	r3, r0
 801d05c:	637b      	str	r3, [r7, #52]	; 0x34
 801d05e:	f897 3057 	ldrb.w	r3, [r7, #87]	; 0x57
 801d062:	763b      	strb	r3, [r7, #24]
 801d064:	68fb      	ldr	r3, [r7, #12]
 801d066:	7a9b      	ldrb	r3, [r3, #10]
 801d068:	767b      	strb	r3, [r7, #25]
 801d06a:	f997 304d 	ldrsb.w	r3, [r7, #77]	; 0x4d
 801d06e:	76bb      	strb	r3, [r7, #26]
 801d070:	f997 304e 	ldrsb.w	r3, [r7, #78]	; 0x4e
 801d074:	76fb      	strb	r3, [r7, #27]
 801d076:	f897 304c 	ldrb.w	r3, [r7, #76]	; 0x4c
 801d07a:	773b      	strb	r3, [r7, #28]
 801d07c:	68fb      	ldr	r3, [r7, #12]
 801d07e:	f993 300b 	ldrsb.w	r3, [r3, #11]
 801d082:	777b      	strb	r3, [r7, #29]
 801d084:	68fb      	ldr	r3, [r7, #12]
 801d086:	f993 300c 	ldrsb.w	r3, [r3, #12]
 801d08a:	77bb      	strb	r3, [r7, #30]
 801d08c:	68fb      	ldr	r3, [r7, #12]
 801d08e:	7b5b      	ldrb	r3, [r3, #13]
 801d090:	b25b      	sxtb	r3, r3
 801d092:	77fb      	strb	r3, [r7, #31]
 801d094:	2348      	movs	r3, #72	; 0x48
 801d096:	f887 3020 	strb.w	r3, [r7, #32]
 801d09a:	f107 0340 	add.w	r3, r7, #64	; 0x40
 801d09e:	627b      	str	r3, [r7, #36]	; 0x24
 801d0a0:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 801d0a2:	b25b      	sxtb	r3, r3
 801d0a4:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
 801d0a8:	2304      	movs	r3, #4
 801d0aa:	f887 3029 	strb.w	r3, [r7, #41]	; 0x29
 801d0ae:	4b3a      	ldr	r3, [pc, #232]	; (801d198 <RegionUS915LinkAdrReq+0x424>)
 801d0b0:	62fb      	str	r3, [r7, #44]	; 0x2c
 801d0b2:	230e      	movs	r3, #14
 801d0b4:	f887 3030 	strb.w	r3, [r7, #48]	; 0x30
 801d0b8:	2300      	movs	r3, #0
 801d0ba:	f887 3031 	strb.w	r3, [r7, #49]	; 0x31
 801d0be:	68fb      	ldr	r3, [r7, #12]
 801d0c0:	681b      	ldr	r3, [r3, #0]
 801d0c2:	617b      	str	r3, [r7, #20]
 801d0c4:	f107 044c 	add.w	r4, r7, #76	; 0x4c
 801d0c8:	f107 034c 	add.w	r3, r7, #76	; 0x4c
 801d0cc:	1c9a      	adds	r2, r3, #2
 801d0ce:	f107 034c 	add.w	r3, r7, #76	; 0x4c
 801d0d2:	1c59      	adds	r1, r3, #1
 801d0d4:	f107 0014 	add.w	r0, r7, #20
 801d0d8:	4623      	mov	r3, r4
 801d0da:	f7fd fafa 	bl	801a6d2 <RegionCommonLinkAdrReqVerifyParams>
 801d0de:	4603      	mov	r3, r0
 801d0e0:	f887 3057 	strb.w	r3, [r7, #87]	; 0x57
 801d0e4:	f897 3057 	ldrb.w	r3, [r7, #87]	; 0x57
 801d0e8:	2b07      	cmp	r3, #7
 801d0ea:	d13e      	bne.n	801d16a <RegionUS915LinkAdrReq+0x3f6>
 801d0ec:	f107 0340 	add.w	r3, r7, #64	; 0x40
 801d0f0:	2206      	movs	r2, #6
 801d0f2:	4619      	mov	r1, r3
 801d0f4:	4829      	ldr	r0, [pc, #164]	; (801d19c <RegionUS915LinkAdrReq+0x428>)
 801d0f6:	f7fd f9b0 	bl	801a45a <RegionCommonChanMaskCopy>
 801d0fa:	4b27      	ldr	r3, [pc, #156]	; (801d198 <RegionUS915LinkAdrReq+0x424>)
 801d0fc:	f8b3 2380 	ldrh.w	r2, [r3, #896]	; 0x380
 801d100:	4b25      	ldr	r3, [pc, #148]	; (801d198 <RegionUS915LinkAdrReq+0x424>)
 801d102:	f8b3 3374 	ldrh.w	r3, [r3, #884]	; 0x374
 801d106:	4013      	ands	r3, r2
 801d108:	b29a      	uxth	r2, r3
 801d10a:	4b23      	ldr	r3, [pc, #140]	; (801d198 <RegionUS915LinkAdrReq+0x424>)
 801d10c:	f8a3 2380 	strh.w	r2, [r3, #896]	; 0x380
 801d110:	4b21      	ldr	r3, [pc, #132]	; (801d198 <RegionUS915LinkAdrReq+0x424>)
 801d112:	f8b3 2382 	ldrh.w	r2, [r3, #898]	; 0x382
 801d116:	4b20      	ldr	r3, [pc, #128]	; (801d198 <RegionUS915LinkAdrReq+0x424>)
 801d118:	f8b3 3376 	ldrh.w	r3, [r3, #886]	; 0x376
 801d11c:	4013      	ands	r3, r2
 801d11e:	b29a      	uxth	r2, r3
 801d120:	4b1d      	ldr	r3, [pc, #116]	; (801d198 <RegionUS915LinkAdrReq+0x424>)
 801d122:	f8a3 2382 	strh.w	r2, [r3, #898]	; 0x382
 801d126:	4b1c      	ldr	r3, [pc, #112]	; (801d198 <RegionUS915LinkAdrReq+0x424>)
 801d128:	f8b3 2384 	ldrh.w	r2, [r3, #900]	; 0x384
 801d12c:	4b1a      	ldr	r3, [pc, #104]	; (801d198 <RegionUS915LinkAdrReq+0x424>)
 801d12e:	f8b3 3378 	ldrh.w	r3, [r3, #888]	; 0x378
 801d132:	4013      	ands	r3, r2
 801d134:	b29a      	uxth	r2, r3
 801d136:	4b18      	ldr	r3, [pc, #96]	; (801d198 <RegionUS915LinkAdrReq+0x424>)
 801d138:	f8a3 2384 	strh.w	r2, [r3, #900]	; 0x384
 801d13c:	4b16      	ldr	r3, [pc, #88]	; (801d198 <RegionUS915LinkAdrReq+0x424>)
 801d13e:	f8b3 2386 	ldrh.w	r2, [r3, #902]	; 0x386
 801d142:	4b15      	ldr	r3, [pc, #84]	; (801d198 <RegionUS915LinkAdrReq+0x424>)
 801d144:	f8b3 337a 	ldrh.w	r3, [r3, #890]	; 0x37a
 801d148:	4013      	ands	r3, r2
 801d14a:	b29a      	uxth	r2, r3
 801d14c:	4b12      	ldr	r3, [pc, #72]	; (801d198 <RegionUS915LinkAdrReq+0x424>)
 801d14e:	f8a3 2386 	strh.w	r2, [r3, #902]	; 0x386
 801d152:	4b11      	ldr	r3, [pc, #68]	; (801d198 <RegionUS915LinkAdrReq+0x424>)
 801d154:	f8b3 237c 	ldrh.w	r2, [r3, #892]	; 0x37c
 801d158:	4b0f      	ldr	r3, [pc, #60]	; (801d198 <RegionUS915LinkAdrReq+0x424>)
 801d15a:	f8a3 2388 	strh.w	r2, [r3, #904]	; 0x388
 801d15e:	4b0e      	ldr	r3, [pc, #56]	; (801d198 <RegionUS915LinkAdrReq+0x424>)
 801d160:	f8b3 237e 	ldrh.w	r2, [r3, #894]	; 0x37e
 801d164:	4b0c      	ldr	r3, [pc, #48]	; (801d198 <RegionUS915LinkAdrReq+0x424>)
 801d166:	f8a3 238a 	strh.w	r2, [r3, #906]	; 0x38a
 801d16a:	f997 204d 	ldrsb.w	r2, [r7, #77]	; 0x4d
 801d16e:	68bb      	ldr	r3, [r7, #8]
 801d170:	701a      	strb	r2, [r3, #0]
 801d172:	f997 204e 	ldrsb.w	r2, [r7, #78]	; 0x4e
 801d176:	687b      	ldr	r3, [r7, #4]
 801d178:	701a      	strb	r2, [r3, #0]
 801d17a:	f897 204c 	ldrb.w	r2, [r7, #76]	; 0x4c
 801d17e:	683b      	ldr	r3, [r7, #0]
 801d180:	701a      	strb	r2, [r3, #0]
 801d182:	6ebb      	ldr	r3, [r7, #104]	; 0x68
 801d184:	f897 2056 	ldrb.w	r2, [r7, #86]	; 0x56
 801d188:	701a      	strb	r2, [r3, #0]
 801d18a:	f897 3057 	ldrb.w	r3, [r7, #87]	; 0x57
 801d18e:	4618      	mov	r0, r3
 801d190:	375c      	adds	r7, #92	; 0x5c
 801d192:	46bd      	mov	sp, r7
 801d194:	bd90      	pop	{r4, r7, pc}
 801d196:	bf00      	nop
 801d198:	200014a8 	.word	0x200014a8
 801d19c:	2000181c 	.word	0x2000181c

0801d1a0 <RegionUS915RxParamSetupReq>:
 801d1a0:	b580      	push	{r7, lr}
 801d1a2:	b084      	sub	sp, #16
 801d1a4:	af00      	add	r7, sp, #0
 801d1a6:	6078      	str	r0, [r7, #4]
 801d1a8:	2307      	movs	r3, #7
 801d1aa:	73fb      	strb	r3, [r7, #15]
 801d1ac:	687b      	ldr	r3, [r7, #4]
 801d1ae:	685b      	ldr	r3, [r3, #4]
 801d1b0:	4618      	mov	r0, r3
 801d1b2:	f7ff f829 	bl	801c208 <VerifyRfFreq>
 801d1b6:	4603      	mov	r3, r0
 801d1b8:	f083 0301 	eor.w	r3, r3, #1
 801d1bc:	b2db      	uxtb	r3, r3
 801d1be:	2b00      	cmp	r3, #0
 801d1c0:	d003      	beq.n	801d1ca <RegionUS915RxParamSetupReq+0x2a>
 801d1c2:	7bfb      	ldrb	r3, [r7, #15]
 801d1c4:	f023 0301 	bic.w	r3, r3, #1
 801d1c8:	73fb      	strb	r3, [r7, #15]
 801d1ca:	687b      	ldr	r3, [r7, #4]
 801d1cc:	f993 3000 	ldrsb.w	r3, [r3]
 801d1d0:	220d      	movs	r2, #13
 801d1d2:	2108      	movs	r1, #8
 801d1d4:	4618      	mov	r0, r3
 801d1d6:	f7fd f8c3 	bl	801a360 <RegionCommonValueInRange>
 801d1da:	4603      	mov	r3, r0
 801d1dc:	2b00      	cmp	r3, #0
 801d1de:	d103      	bne.n	801d1e8 <RegionUS915RxParamSetupReq+0x48>
 801d1e0:	7bfb      	ldrb	r3, [r7, #15]
 801d1e2:	f023 0302 	bic.w	r3, r3, #2
 801d1e6:	73fb      	strb	r3, [r7, #15]
 801d1e8:	687b      	ldr	r3, [r7, #4]
 801d1ea:	f993 3000 	ldrsb.w	r3, [r3]
 801d1ee:	2207      	movs	r2, #7
 801d1f0:	2105      	movs	r1, #5
 801d1f2:	4618      	mov	r0, r3
 801d1f4:	f7fd f8b4 	bl	801a360 <RegionCommonValueInRange>
 801d1f8:	4603      	mov	r3, r0
 801d1fa:	2b01      	cmp	r3, #1
 801d1fc:	d004      	beq.n	801d208 <RegionUS915RxParamSetupReq+0x68>
 801d1fe:	687b      	ldr	r3, [r7, #4]
 801d200:	f993 3000 	ldrsb.w	r3, [r3]
 801d204:	2b0d      	cmp	r3, #13
 801d206:	dd03      	ble.n	801d210 <RegionUS915RxParamSetupReq+0x70>
 801d208:	7bfb      	ldrb	r3, [r7, #15]
 801d20a:	f023 0302 	bic.w	r3, r3, #2
 801d20e:	73fb      	strb	r3, [r7, #15]
 801d210:	687b      	ldr	r3, [r7, #4]
 801d212:	f993 3001 	ldrsb.w	r3, [r3, #1]
 801d216:	2203      	movs	r2, #3
 801d218:	2100      	movs	r1, #0
 801d21a:	4618      	mov	r0, r3
 801d21c:	f7fd f8a0 	bl	801a360 <RegionCommonValueInRange>
 801d220:	4603      	mov	r3, r0
 801d222:	2b00      	cmp	r3, #0
 801d224:	d103      	bne.n	801d22e <RegionUS915RxParamSetupReq+0x8e>
 801d226:	7bfb      	ldrb	r3, [r7, #15]
 801d228:	f023 0304 	bic.w	r3, r3, #4
 801d22c:	73fb      	strb	r3, [r7, #15]
 801d22e:	7bfb      	ldrb	r3, [r7, #15]
 801d230:	4618      	mov	r0, r3
 801d232:	3710      	adds	r7, #16
 801d234:	46bd      	mov	sp, r7
 801d236:	bd80      	pop	{r7, pc}

0801d238 <RegionUS915NewChannelReq>:
 801d238:	b480      	push	{r7}
 801d23a:	b083      	sub	sp, #12
 801d23c:	af00      	add	r7, sp, #0
 801d23e:	6078      	str	r0, [r7, #4]
 801d240:	2300      	movs	r3, #0
 801d242:	4618      	mov	r0, r3
 801d244:	370c      	adds	r7, #12
 801d246:	46bd      	mov	sp, r7
 801d248:	bc80      	pop	{r7}
 801d24a:	4770      	bx	lr

0801d24c <RegionUS915TxParamSetupReq>:
 801d24c:	b480      	push	{r7}
 801d24e:	b083      	sub	sp, #12
 801d250:	af00      	add	r7, sp, #0
 801d252:	6078      	str	r0, [r7, #4]
 801d254:	f04f 33ff 	mov.w	r3, #4294967295
 801d258:	4618      	mov	r0, r3
 801d25a:	370c      	adds	r7, #12
 801d25c:	46bd      	mov	sp, r7
 801d25e:	bc80      	pop	{r7}
 801d260:	4770      	bx	lr

0801d262 <RegionUS915DlChannelReq>:
 801d262:	b480      	push	{r7}
 801d264:	b083      	sub	sp, #12
 801d266:	af00      	add	r7, sp, #0
 801d268:	6078      	str	r0, [r7, #4]
 801d26a:	2300      	movs	r3, #0
 801d26c:	4618      	mov	r0, r3
 801d26e:	370c      	adds	r7, #12
 801d270:	46bd      	mov	sp, r7
 801d272:	bc80      	pop	{r7}
 801d274:	4770      	bx	lr
	...

0801d278 <RegionUS915AlternateDr>:
 801d278:	b480      	push	{r7}
 801d27a:	b083      	sub	sp, #12
 801d27c:	af00      	add	r7, sp, #0
 801d27e:	4603      	mov	r3, r0
 801d280:	460a      	mov	r2, r1
 801d282:	71fb      	strb	r3, [r7, #7]
 801d284:	4613      	mov	r3, r2
 801d286:	71bb      	strb	r3, [r7, #6]
 801d288:	79bb      	ldrb	r3, [r7, #6]
 801d28a:	2b00      	cmp	r3, #0
 801d28c:	d108      	bne.n	801d2a0 <RegionUS915AlternateDr+0x28>
 801d28e:	4b15      	ldr	r3, [pc, #84]	; (801d2e4 <RegionUS915AlternateDr+0x6c>)
 801d290:	f893 3399 	ldrb.w	r3, [r3, #921]	; 0x399
 801d294:	3301      	adds	r3, #1
 801d296:	b2da      	uxtb	r2, r3
 801d298:	4b12      	ldr	r3, [pc, #72]	; (801d2e4 <RegionUS915AlternateDr+0x6c>)
 801d29a:	f883 2399 	strb.w	r2, [r3, #921]	; 0x399
 801d29e:	e007      	b.n	801d2b0 <RegionUS915AlternateDr+0x38>
 801d2a0:	4b10      	ldr	r3, [pc, #64]	; (801d2e4 <RegionUS915AlternateDr+0x6c>)
 801d2a2:	f893 3399 	ldrb.w	r3, [r3, #921]	; 0x399
 801d2a6:	3b01      	subs	r3, #1
 801d2a8:	b2da      	uxtb	r2, r3
 801d2aa:	4b0e      	ldr	r3, [pc, #56]	; (801d2e4 <RegionUS915AlternateDr+0x6c>)
 801d2ac:	f883 2399 	strb.w	r2, [r3, #921]	; 0x399
 801d2b0:	4b0c      	ldr	r3, [pc, #48]	; (801d2e4 <RegionUS915AlternateDr+0x6c>)
 801d2b2:	f893 2399 	ldrb.w	r2, [r3, #921]	; 0x399
 801d2b6:	4b0c      	ldr	r3, [pc, #48]	; (801d2e8 <RegionUS915AlternateDr+0x70>)
 801d2b8:	fba3 1302 	umull	r1, r3, r3, r2
 801d2bc:	0859      	lsrs	r1, r3, #1
 801d2be:	460b      	mov	r3, r1
 801d2c0:	00db      	lsls	r3, r3, #3
 801d2c2:	440b      	add	r3, r1
 801d2c4:	1ad3      	subs	r3, r2, r3
 801d2c6:	b2db      	uxtb	r3, r3
 801d2c8:	2b00      	cmp	r3, #0
 801d2ca:	d102      	bne.n	801d2d2 <RegionUS915AlternateDr+0x5a>
 801d2cc:	2304      	movs	r3, #4
 801d2ce:	71fb      	strb	r3, [r7, #7]
 801d2d0:	e001      	b.n	801d2d6 <RegionUS915AlternateDr+0x5e>
 801d2d2:	2300      	movs	r3, #0
 801d2d4:	71fb      	strb	r3, [r7, #7]
 801d2d6:	f997 3007 	ldrsb.w	r3, [r7, #7]
 801d2da:	4618      	mov	r0, r3
 801d2dc:	370c      	adds	r7, #12
 801d2de:	46bd      	mov	sp, r7
 801d2e0:	bc80      	pop	{r7}
 801d2e2:	4770      	bx	lr
 801d2e4:	200014a8 	.word	0x200014a8
 801d2e8:	38e38e39 	.word	0x38e38e39

0801d2ec <RegionUS915NextChannel>:
 801d2ec:	b580      	push	{r7, lr}
 801d2ee:	b0a8      	sub	sp, #160	; 0xa0
 801d2f0:	af02      	add	r7, sp, #8
 801d2f2:	60f8      	str	r0, [r7, #12]
 801d2f4:	60b9      	str	r1, [r7, #8]
 801d2f6:	607a      	str	r2, [r7, #4]
 801d2f8:	603b      	str	r3, [r7, #0]
 801d2fa:	2300      	movs	r3, #0
 801d2fc:	f887 3095 	strb.w	r3, [r7, #149]	; 0x95
 801d300:	2300      	movs	r3, #0
 801d302:	f887 3094 	strb.w	r3, [r7, #148]	; 0x94
 801d306:	2300      	movs	r3, #0
 801d308:	64fb      	str	r3, [r7, #76]	; 0x4c
 801d30a:	f107 0350 	add.w	r3, r7, #80	; 0x50
 801d30e:	2244      	movs	r2, #68	; 0x44
 801d310:	2100      	movs	r1, #0
 801d312:	4618      	mov	r0, r3
 801d314:	f007 fa56 	bl	80247c4 <memset>
 801d318:	2300      	movs	r3, #0
 801d31a:	f887 304b 	strb.w	r3, [r7, #75]	; 0x4b
 801d31e:	230c      	movs	r3, #12
 801d320:	f887 3096 	strb.w	r3, [r7, #150]	; 0x96
 801d324:	2204      	movs	r2, #4
 801d326:	2100      	movs	r1, #0
 801d328:	485f      	ldr	r0, [pc, #380]	; (801d4a8 <RegionUS915NextChannel+0x1bc>)
 801d32a:	f7fd f86a 	bl	801a402 <RegionCommonCountChannels>
 801d32e:	4603      	mov	r3, r0
 801d330:	2b00      	cmp	r3, #0
 801d332:	d108      	bne.n	801d346 <RegionUS915NextChannel+0x5a>
 801d334:	2204      	movs	r2, #4
 801d336:	495d      	ldr	r1, [pc, #372]	; (801d4ac <RegionUS915NextChannel+0x1c0>)
 801d338:	485b      	ldr	r0, [pc, #364]	; (801d4a8 <RegionUS915NextChannel+0x1bc>)
 801d33a:	f7fd f88e 	bl	801a45a <RegionCommonChanMaskCopy>
 801d33e:	4b5c      	ldr	r3, [pc, #368]	; (801d4b0 <RegionUS915NextChannel+0x1c4>)
 801d340:	2200      	movs	r2, #0
 801d342:	f883 2398 	strb.w	r2, [r3, #920]	; 0x398
 801d346:	68fb      	ldr	r3, [r7, #12]
 801d348:	f993 3008 	ldrsb.w	r3, [r3, #8]
 801d34c:	2b03      	cmp	r3, #3
 801d34e:	dd0b      	ble.n	801d368 <RegionUS915NextChannel+0x7c>
 801d350:	4b57      	ldr	r3, [pc, #348]	; (801d4b0 <RegionUS915NextChannel+0x1c4>)
 801d352:	f8b3 3388 	ldrh.w	r3, [r3, #904]	; 0x388
 801d356:	b2db      	uxtb	r3, r3
 801d358:	2b00      	cmp	r3, #0
 801d35a:	d105      	bne.n	801d368 <RegionUS915NextChannel+0x7c>
 801d35c:	4b54      	ldr	r3, [pc, #336]	; (801d4b0 <RegionUS915NextChannel+0x1c4>)
 801d35e:	f8b3 237c 	ldrh.w	r2, [r3, #892]	; 0x37c
 801d362:	4b53      	ldr	r3, [pc, #332]	; (801d4b0 <RegionUS915NextChannel+0x1c4>)
 801d364:	f8a3 2388 	strh.w	r2, [r3, #904]	; 0x388
 801d368:	68fb      	ldr	r3, [r7, #12]
 801d36a:	7a5b      	ldrb	r3, [r3, #9]
 801d36c:	753b      	strb	r3, [r7, #20]
 801d36e:	68fb      	ldr	r3, [r7, #12]
 801d370:	f993 3008 	ldrsb.w	r3, [r3, #8]
 801d374:	b2db      	uxtb	r3, r3
 801d376:	757b      	strb	r3, [r7, #21]
 801d378:	4b4b      	ldr	r3, [pc, #300]	; (801d4a8 <RegionUS915NextChannel+0x1bc>)
 801d37a:	61bb      	str	r3, [r7, #24]
 801d37c:	4b4c      	ldr	r3, [pc, #304]	; (801d4b0 <RegionUS915NextChannel+0x1c4>)
 801d37e:	61fb      	str	r3, [r7, #28]
 801d380:	4b4c      	ldr	r3, [pc, #304]	; (801d4b4 <RegionUS915NextChannel+0x1c8>)
 801d382:	623b      	str	r3, [r7, #32]
 801d384:	2348      	movs	r3, #72	; 0x48
 801d386:	84bb      	strh	r3, [r7, #36]	; 0x24
 801d388:	2300      	movs	r3, #0
 801d38a:	84fb      	strh	r3, [r7, #38]	; 0x26
 801d38c:	68fb      	ldr	r3, [r7, #12]
 801d38e:	681b      	ldr	r3, [r3, #0]
 801d390:	62bb      	str	r3, [r7, #40]	; 0x28
 801d392:	68fb      	ldr	r3, [r7, #12]
 801d394:	685b      	ldr	r3, [r3, #4]
 801d396:	62fb      	str	r3, [r7, #44]	; 0x2c
 801d398:	68fb      	ldr	r3, [r7, #12]
 801d39a:	7a9b      	ldrb	r3, [r3, #10]
 801d39c:	f887 3030 	strb.w	r3, [r7, #48]	; 0x30
 801d3a0:	2301      	movs	r3, #1
 801d3a2:	f887 3031 	strb.w	r3, [r7, #49]	; 0x31
 801d3a6:	f107 0314 	add.w	r3, r7, #20
 801d3aa:	647b      	str	r3, [r7, #68]	; 0x44
 801d3ac:	68fa      	ldr	r2, [r7, #12]
 801d3ae:	f107 0334 	add.w	r3, r7, #52	; 0x34
 801d3b2:	320c      	adds	r2, #12
 801d3b4:	e892 0003 	ldmia.w	r2, {r0, r1}
 801d3b8:	e883 0003 	stmia.w	r3, {r0, r1}
 801d3bc:	68fb      	ldr	r3, [r7, #12]
 801d3be:	7d1b      	ldrb	r3, [r3, #20]
 801d3c0:	f887 303c 	strb.w	r3, [r7, #60]	; 0x3c
 801d3c4:	68fb      	ldr	r3, [r7, #12]
 801d3c6:	f993 2008 	ldrsb.w	r2, [r3, #8]
 801d3ca:	68fb      	ldr	r3, [r7, #12]
 801d3cc:	8adb      	ldrh	r3, [r3, #22]
 801d3ce:	4619      	mov	r1, r3
 801d3d0:	4610      	mov	r0, r2
 801d3d2:	f7fe ff5d 	bl	801c290 <GetTimeOnAir>
 801d3d6:	4603      	mov	r3, r0
 801d3d8:	643b      	str	r3, [r7, #64]	; 0x40
 801d3da:	f107 0195 	add.w	r1, r7, #149	; 0x95
 801d3de:	f107 024c 	add.w	r2, r7, #76	; 0x4c
 801d3e2:	f107 0028 	add.w	r0, r7, #40	; 0x28
 801d3e6:	687b      	ldr	r3, [r7, #4]
 801d3e8:	9301      	str	r3, [sp, #4]
 801d3ea:	f107 0394 	add.w	r3, r7, #148	; 0x94
 801d3ee:	9300      	str	r3, [sp, #0]
 801d3f0:	460b      	mov	r3, r1
 801d3f2:	6839      	ldr	r1, [r7, #0]
 801d3f4:	f7fd fb35 	bl	801aa62 <RegionCommonIdentifyChannels>
 801d3f8:	4603      	mov	r3, r0
 801d3fa:	f887 3096 	strb.w	r3, [r7, #150]	; 0x96
 801d3fe:	f897 3096 	ldrb.w	r3, [r7, #150]	; 0x96
 801d402:	2b00      	cmp	r3, #0
 801d404:	d149      	bne.n	801d49a <RegionUS915NextChannel+0x1ae>
 801d406:	68fb      	ldr	r3, [r7, #12]
 801d408:	7a5b      	ldrb	r3, [r3, #9]
 801d40a:	2b00      	cmp	r3, #0
 801d40c:	d00f      	beq.n	801d42e <RegionUS915NextChannel+0x142>
 801d40e:	f897 3095 	ldrb.w	r3, [r7, #149]	; 0x95
 801d412:	3b01      	subs	r3, #1
 801d414:	4619      	mov	r1, r3
 801d416:	2000      	movs	r0, #0
 801d418:	f000 f8f0 	bl	801d5fc <randr>
 801d41c:	4603      	mov	r3, r0
 801d41e:	f107 0298 	add.w	r2, r7, #152	; 0x98
 801d422:	4413      	add	r3, r2
 801d424:	f813 2c4c 	ldrb.w	r2, [r3, #-76]
 801d428:	68bb      	ldr	r3, [r7, #8]
 801d42a:	701a      	strb	r2, [r3, #0]
 801d42c:	e02e      	b.n	801d48c <RegionUS915NextChannel+0x1a0>
 801d42e:	68fb      	ldr	r3, [r7, #12]
 801d430:	f993 3008 	ldrsb.w	r3, [r3, #8]
 801d434:	2b00      	cmp	r3, #0
 801d436:	d10e      	bne.n	801d456 <RegionUS915NextChannel+0x16a>
 801d438:	f107 034b 	add.w	r3, r7, #75	; 0x4b
 801d43c:	4618      	mov	r0, r3
 801d43e:	f7fe fe1f 	bl	801c080 <ComputeNext125kHzJoinChannel>
 801d442:	4603      	mov	r3, r0
 801d444:	2b03      	cmp	r3, #3
 801d446:	d101      	bne.n	801d44c <RegionUS915NextChannel+0x160>
 801d448:	2303      	movs	r3, #3
 801d44a:	e028      	b.n	801d49e <RegionUS915NextChannel+0x1b2>
 801d44c:	f897 204b 	ldrb.w	r2, [r7, #75]	; 0x4b
 801d450:	68bb      	ldr	r3, [r7, #8]
 801d452:	701a      	strb	r2, [r3, #0]
 801d454:	e01a      	b.n	801d48c <RegionUS915NextChannel+0x1a0>
 801d456:	2300      	movs	r3, #0
 801d458:	f887 3097 	strb.w	r3, [r7, #151]	; 0x97
 801d45c:	e004      	b.n	801d468 <RegionUS915NextChannel+0x17c>
 801d45e:	f897 3097 	ldrb.w	r3, [r7, #151]	; 0x97
 801d462:	3301      	adds	r3, #1
 801d464:	f887 3097 	strb.w	r3, [r7, #151]	; 0x97
 801d468:	4b11      	ldr	r3, [pc, #68]	; (801d4b0 <RegionUS915NextChannel+0x1c4>)
 801d46a:	f8b3 3388 	ldrh.w	r3, [r3, #904]	; 0x388
 801d46e:	b2da      	uxtb	r2, r3
 801d470:	f897 3097 	ldrb.w	r3, [r7, #151]	; 0x97
 801d474:	fa42 f303 	asr.w	r3, r2, r3
 801d478:	f003 0301 	and.w	r3, r3, #1
 801d47c:	2b00      	cmp	r3, #0
 801d47e:	d0ee      	beq.n	801d45e <RegionUS915NextChannel+0x172>
 801d480:	f897 3097 	ldrb.w	r3, [r7, #151]	; 0x97
 801d484:	3340      	adds	r3, #64	; 0x40
 801d486:	b2da      	uxtb	r2, r3
 801d488:	68bb      	ldr	r3, [r7, #8]
 801d48a:	701a      	strb	r2, [r3, #0]
 801d48c:	68bb      	ldr	r3, [r7, #8]
 801d48e:	781b      	ldrb	r3, [r3, #0]
 801d490:	2248      	movs	r2, #72	; 0x48
 801d492:	4619      	mov	r1, r3
 801d494:	4804      	ldr	r0, [pc, #16]	; (801d4a8 <RegionUS915NextChannel+0x1bc>)
 801d496:	f7fc ff80 	bl	801a39a <RegionCommonChanDisable>
 801d49a:	f897 3096 	ldrb.w	r3, [r7, #150]	; 0x96
 801d49e:	4618      	mov	r0, r3
 801d4a0:	3798      	adds	r7, #152	; 0x98
 801d4a2:	46bd      	mov	sp, r7
 801d4a4:	bd80      	pop	{r7, pc}
 801d4a6:	bf00      	nop
 801d4a8:	20001828 	.word	0x20001828
 801d4ac:	2000181c 	.word	0x2000181c
 801d4b0:	200014a8 	.word	0x200014a8
 801d4b4:	20001808 	.word	0x20001808

0801d4b8 <RegionUS915SetContinuousWave>:
 801d4b8:	b580      	push	{r7, lr}
 801d4ba:	b084      	sub	sp, #16
 801d4bc:	af00      	add	r7, sp, #0
 801d4be:	6078      	str	r0, [r7, #4]
 801d4c0:	687b      	ldr	r3, [r7, #4]
 801d4c2:	f993 0002 	ldrsb.w	r0, [r3, #2]
 801d4c6:	687b      	ldr	r3, [r7, #4]
 801d4c8:	781b      	ldrb	r3, [r3, #0]
 801d4ca:	4619      	mov	r1, r3
 801d4cc:	4a1e      	ldr	r2, [pc, #120]	; (801d548 <RegionUS915SetContinuousWave+0x90>)
 801d4ce:	460b      	mov	r3, r1
 801d4d0:	005b      	lsls	r3, r3, #1
 801d4d2:	440b      	add	r3, r1
 801d4d4:	009b      	lsls	r3, r3, #2
 801d4d6:	4413      	add	r3, r2
 801d4d8:	3309      	adds	r3, #9
 801d4da:	781b      	ldrb	r3, [r3, #0]
 801d4dc:	4619      	mov	r1, r3
 801d4de:	4a1a      	ldr	r2, [pc, #104]	; (801d548 <RegionUS915SetContinuousWave+0x90>)
 801d4e0:	460b      	mov	r3, r1
 801d4e2:	009b      	lsls	r3, r3, #2
 801d4e4:	440b      	add	r3, r1
 801d4e6:	009b      	lsls	r3, r3, #2
 801d4e8:	4413      	add	r3, r2
 801d4ea:	f203 3362 	addw	r3, r3, #866	; 0x362
 801d4ee:	f993 1000 	ldrsb.w	r1, [r3]
 801d4f2:	687b      	ldr	r3, [r7, #4]
 801d4f4:	f993 2001 	ldrsb.w	r2, [r3, #1]
 801d4f8:	4b14      	ldr	r3, [pc, #80]	; (801d54c <RegionUS915SetContinuousWave+0x94>)
 801d4fa:	f7fe fe51 	bl	801c1a0 <LimitTxPower>
 801d4fe:	4603      	mov	r3, r0
 801d500:	73fb      	strb	r3, [r7, #15]
 801d502:	2300      	movs	r3, #0
 801d504:	73bb      	strb	r3, [r7, #14]
 801d506:	687b      	ldr	r3, [r7, #4]
 801d508:	781b      	ldrb	r3, [r3, #0]
 801d50a:	4619      	mov	r1, r3
 801d50c:	4a0e      	ldr	r2, [pc, #56]	; (801d548 <RegionUS915SetContinuousWave+0x90>)
 801d50e:	460b      	mov	r3, r1
 801d510:	005b      	lsls	r3, r3, #1
 801d512:	440b      	add	r3, r1
 801d514:	009b      	lsls	r3, r3, #2
 801d516:	4413      	add	r3, r2
 801d518:	681b      	ldr	r3, [r3, #0]
 801d51a:	60bb      	str	r3, [r7, #8]
 801d51c:	f997 300f 	ldrsb.w	r3, [r7, #15]
 801d520:	f04f 0200 	mov.w	r2, #0
 801d524:	490a      	ldr	r1, [pc, #40]	; (801d550 <RegionUS915SetContinuousWave+0x98>)
 801d526:	4618      	mov	r0, r3
 801d528:	f7fd f9b0 	bl	801a88c <RegionCommonComputeTxPower>
 801d52c:	4603      	mov	r3, r0
 801d52e:	73bb      	strb	r3, [r7, #14]
 801d530:	4b08      	ldr	r3, [pc, #32]	; (801d554 <RegionUS915SetContinuousWave+0x9c>)
 801d532:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801d534:	687a      	ldr	r2, [r7, #4]
 801d536:	8992      	ldrh	r2, [r2, #12]
 801d538:	f997 100e 	ldrsb.w	r1, [r7, #14]
 801d53c:	68b8      	ldr	r0, [r7, #8]
 801d53e:	4798      	blx	r3
 801d540:	bf00      	nop
 801d542:	3710      	adds	r7, #16
 801d544:	46bd      	mov	sp, r7
 801d546:	bd80      	pop	{r7, pc}
 801d548:	200014a8 	.word	0x200014a8
 801d54c:	2000181c 	.word	0x2000181c
 801d550:	41f00000 	.word	0x41f00000
 801d554:	0802683c 	.word	0x0802683c

0801d558 <RegionUS915ApplyDrOffset>:
 801d558:	b480      	push	{r7}
 801d55a:	b085      	sub	sp, #20
 801d55c:	af00      	add	r7, sp, #0
 801d55e:	4603      	mov	r3, r0
 801d560:	71fb      	strb	r3, [r7, #7]
 801d562:	460b      	mov	r3, r1
 801d564:	71bb      	strb	r3, [r7, #6]
 801d566:	4613      	mov	r3, r2
 801d568:	717b      	strb	r3, [r7, #5]
 801d56a:	f997 2006 	ldrsb.w	r2, [r7, #6]
 801d56e:	f997 3005 	ldrsb.w	r3, [r7, #5]
 801d572:	4909      	ldr	r1, [pc, #36]	; (801d598 <RegionUS915ApplyDrOffset+0x40>)
 801d574:	0092      	lsls	r2, r2, #2
 801d576:	440a      	add	r2, r1
 801d578:	4413      	add	r3, r2
 801d57a:	781b      	ldrb	r3, [r3, #0]
 801d57c:	73fb      	strb	r3, [r7, #15]
 801d57e:	f997 300f 	ldrsb.w	r3, [r7, #15]
 801d582:	2b00      	cmp	r3, #0
 801d584:	da01      	bge.n	801d58a <RegionUS915ApplyDrOffset+0x32>
 801d586:	2300      	movs	r3, #0
 801d588:	73fb      	strb	r3, [r7, #15]
 801d58a:	7bfb      	ldrb	r3, [r7, #15]
 801d58c:	4618      	mov	r0, r3
 801d58e:	3714      	adds	r7, #20
 801d590:	46bd      	mov	sp, r7
 801d592:	bc80      	pop	{r7}
 801d594:	4770      	bx	lr
 801d596:	bf00      	nop
 801d598:	08026808 	.word	0x08026808

0801d59c <rand1>:
 801d59c:	b480      	push	{r7}
 801d59e:	af00      	add	r7, sp, #0
 801d5a0:	4b0d      	ldr	r3, [pc, #52]	; (801d5d8 <rand1+0x3c>)
 801d5a2:	681b      	ldr	r3, [r3, #0]
 801d5a4:	4a0d      	ldr	r2, [pc, #52]	; (801d5dc <rand1+0x40>)
 801d5a6:	fb02 f303 	mul.w	r3, r2, r3
 801d5aa:	f503 5340 	add.w	r3, r3, #12288	; 0x3000
 801d5ae:	3339      	adds	r3, #57	; 0x39
 801d5b0:	4a09      	ldr	r2, [pc, #36]	; (801d5d8 <rand1+0x3c>)
 801d5b2:	6013      	str	r3, [r2, #0]
 801d5b4:	4b08      	ldr	r3, [pc, #32]	; (801d5d8 <rand1+0x3c>)
 801d5b6:	681a      	ldr	r2, [r3, #0]
 801d5b8:	2303      	movs	r3, #3
 801d5ba:	fba3 1302 	umull	r1, r3, r3, r2
 801d5be:	1ad1      	subs	r1, r2, r3
 801d5c0:	0849      	lsrs	r1, r1, #1
 801d5c2:	440b      	add	r3, r1
 801d5c4:	0f99      	lsrs	r1, r3, #30
 801d5c6:	460b      	mov	r3, r1
 801d5c8:	07db      	lsls	r3, r3, #31
 801d5ca:	1a5b      	subs	r3, r3, r1
 801d5cc:	1ad1      	subs	r1, r2, r3
 801d5ce:	460b      	mov	r3, r1
 801d5d0:	4618      	mov	r0, r3
 801d5d2:	46bd      	mov	sp, r7
 801d5d4:	bc80      	pop	{r7}
 801d5d6:	4770      	bx	lr
 801d5d8:	200001bc 	.word	0x200001bc
 801d5dc:	41c64e6d 	.word	0x41c64e6d

0801d5e0 <srand1>:
 801d5e0:	b480      	push	{r7}
 801d5e2:	b083      	sub	sp, #12
 801d5e4:	af00      	add	r7, sp, #0
 801d5e6:	6078      	str	r0, [r7, #4]
 801d5e8:	4a03      	ldr	r2, [pc, #12]	; (801d5f8 <srand1+0x18>)
 801d5ea:	687b      	ldr	r3, [r7, #4]
 801d5ec:	6013      	str	r3, [r2, #0]
 801d5ee:	bf00      	nop
 801d5f0:	370c      	adds	r7, #12
 801d5f2:	46bd      	mov	sp, r7
 801d5f4:	bc80      	pop	{r7}
 801d5f6:	4770      	bx	lr
 801d5f8:	200001bc 	.word	0x200001bc

0801d5fc <randr>:
 801d5fc:	b580      	push	{r7, lr}
 801d5fe:	b082      	sub	sp, #8
 801d600:	af00      	add	r7, sp, #0
 801d602:	6078      	str	r0, [r7, #4]
 801d604:	6039      	str	r1, [r7, #0]
 801d606:	f7ff ffc9 	bl	801d59c <rand1>
 801d60a:	4602      	mov	r2, r0
 801d60c:	6839      	ldr	r1, [r7, #0]
 801d60e:	687b      	ldr	r3, [r7, #4]
 801d610:	1acb      	subs	r3, r1, r3
 801d612:	3301      	adds	r3, #1
 801d614:	fb92 f1f3 	sdiv	r1, r2, r3
 801d618:	fb03 f301 	mul.w	r3, r3, r1
 801d61c:	1ad2      	subs	r2, r2, r3
 801d61e:	687b      	ldr	r3, [r7, #4]
 801d620:	4413      	add	r3, r2
 801d622:	4618      	mov	r0, r3
 801d624:	3708      	adds	r7, #8
 801d626:	46bd      	mov	sp, r7
 801d628:	bd80      	pop	{r7, pc}

0801d62a <memcpy1>:
 801d62a:	b480      	push	{r7}
 801d62c:	b085      	sub	sp, #20
 801d62e:	af00      	add	r7, sp, #0
 801d630:	60f8      	str	r0, [r7, #12]
 801d632:	60b9      	str	r1, [r7, #8]
 801d634:	4613      	mov	r3, r2
 801d636:	80fb      	strh	r3, [r7, #6]
 801d638:	e007      	b.n	801d64a <memcpy1+0x20>
 801d63a:	68ba      	ldr	r2, [r7, #8]
 801d63c:	1c53      	adds	r3, r2, #1
 801d63e:	60bb      	str	r3, [r7, #8]
 801d640:	68fb      	ldr	r3, [r7, #12]
 801d642:	1c59      	adds	r1, r3, #1
 801d644:	60f9      	str	r1, [r7, #12]
 801d646:	7812      	ldrb	r2, [r2, #0]
 801d648:	701a      	strb	r2, [r3, #0]
 801d64a:	88fb      	ldrh	r3, [r7, #6]
 801d64c:	1e5a      	subs	r2, r3, #1
 801d64e:	80fa      	strh	r2, [r7, #6]
 801d650:	2b00      	cmp	r3, #0
 801d652:	d1f2      	bne.n	801d63a <memcpy1+0x10>
 801d654:	bf00      	nop
 801d656:	bf00      	nop
 801d658:	3714      	adds	r7, #20
 801d65a:	46bd      	mov	sp, r7
 801d65c:	bc80      	pop	{r7}
 801d65e:	4770      	bx	lr

0801d660 <memcpyr>:
 801d660:	b480      	push	{r7}
 801d662:	b085      	sub	sp, #20
 801d664:	af00      	add	r7, sp, #0
 801d666:	60f8      	str	r0, [r7, #12]
 801d668:	60b9      	str	r1, [r7, #8]
 801d66a:	4613      	mov	r3, r2
 801d66c:	80fb      	strh	r3, [r7, #6]
 801d66e:	88fb      	ldrh	r3, [r7, #6]
 801d670:	3b01      	subs	r3, #1
 801d672:	68fa      	ldr	r2, [r7, #12]
 801d674:	4413      	add	r3, r2
 801d676:	60fb      	str	r3, [r7, #12]
 801d678:	e007      	b.n	801d68a <memcpyr+0x2a>
 801d67a:	68ba      	ldr	r2, [r7, #8]
 801d67c:	1c53      	adds	r3, r2, #1
 801d67e:	60bb      	str	r3, [r7, #8]
 801d680:	68fb      	ldr	r3, [r7, #12]
 801d682:	1e59      	subs	r1, r3, #1
 801d684:	60f9      	str	r1, [r7, #12]
 801d686:	7812      	ldrb	r2, [r2, #0]
 801d688:	701a      	strb	r2, [r3, #0]
 801d68a:	88fb      	ldrh	r3, [r7, #6]
 801d68c:	1e5a      	subs	r2, r3, #1
 801d68e:	80fa      	strh	r2, [r7, #6]
 801d690:	2b00      	cmp	r3, #0
 801d692:	d1f2      	bne.n	801d67a <memcpyr+0x1a>
 801d694:	bf00      	nop
 801d696:	bf00      	nop
 801d698:	3714      	adds	r7, #20
 801d69a:	46bd      	mov	sp, r7
 801d69c:	bc80      	pop	{r7}
 801d69e:	4770      	bx	lr

0801d6a0 <memset1>:
 801d6a0:	b480      	push	{r7}
 801d6a2:	b083      	sub	sp, #12
 801d6a4:	af00      	add	r7, sp, #0
 801d6a6:	6078      	str	r0, [r7, #4]
 801d6a8:	460b      	mov	r3, r1
 801d6aa:	70fb      	strb	r3, [r7, #3]
 801d6ac:	4613      	mov	r3, r2
 801d6ae:	803b      	strh	r3, [r7, #0]
 801d6b0:	e004      	b.n	801d6bc <memset1+0x1c>
 801d6b2:	687b      	ldr	r3, [r7, #4]
 801d6b4:	1c5a      	adds	r2, r3, #1
 801d6b6:	607a      	str	r2, [r7, #4]
 801d6b8:	78fa      	ldrb	r2, [r7, #3]
 801d6ba:	701a      	strb	r2, [r3, #0]
 801d6bc:	883b      	ldrh	r3, [r7, #0]
 801d6be:	1e5a      	subs	r2, r3, #1
 801d6c0:	803a      	strh	r2, [r7, #0]
 801d6c2:	2b00      	cmp	r3, #0
 801d6c4:	d1f5      	bne.n	801d6b2 <memset1+0x12>
 801d6c6:	bf00      	nop
 801d6c8:	bf00      	nop
 801d6ca:	370c      	adds	r7, #12
 801d6cc:	46bd      	mov	sp, r7
 801d6ce:	bc80      	pop	{r7}
 801d6d0:	4770      	bx	lr

0801d6d2 <LL_GPIO_SetOutputPin>:
 801d6d2:	b480      	push	{r7}
 801d6d4:	b083      	sub	sp, #12
 801d6d6:	af00      	add	r7, sp, #0
 801d6d8:	6078      	str	r0, [r7, #4]
 801d6da:	6039      	str	r1, [r7, #0]
 801d6dc:	687b      	ldr	r3, [r7, #4]
 801d6de:	683a      	ldr	r2, [r7, #0]
 801d6e0:	619a      	str	r2, [r3, #24]
 801d6e2:	bf00      	nop
 801d6e4:	370c      	adds	r7, #12
 801d6e6:	46bd      	mov	sp, r7
 801d6e8:	bc80      	pop	{r7}
 801d6ea:	4770      	bx	lr

0801d6ec <LL_GPIO_ResetOutputPin>:
 801d6ec:	b480      	push	{r7}
 801d6ee:	b083      	sub	sp, #12
 801d6f0:	af00      	add	r7, sp, #0
 801d6f2:	6078      	str	r0, [r7, #4]
 801d6f4:	6039      	str	r1, [r7, #0]
 801d6f6:	687b      	ldr	r3, [r7, #4]
 801d6f8:	683a      	ldr	r2, [r7, #0]
 801d6fa:	629a      	str	r2, [r3, #40]	; 0x28
 801d6fc:	bf00      	nop
 801d6fe:	370c      	adds	r7, #12
 801d700:	46bd      	mov	sp, r7
 801d702:	bc80      	pop	{r7}
 801d704:	4770      	bx	lr
	...

0801d708 <RadioSetRxGenericConfig>:
 801d708:	b580      	push	{r7, lr}
 801d70a:	b08a      	sub	sp, #40	; 0x28
 801d70c:	af00      	add	r7, sp, #0
 801d70e:	60b9      	str	r1, [r7, #8]
 801d710:	607a      	str	r2, [r7, #4]
 801d712:	603b      	str	r3, [r7, #0]
 801d714:	4603      	mov	r3, r0
 801d716:	73fb      	strb	r3, [r7, #15]
 801d718:	2300      	movs	r3, #0
 801d71a:	61fb      	str	r3, [r7, #28]
 801d71c:	2300      	movs	r3, #0
 801d71e:	617b      	str	r3, [r7, #20]
 801d720:	2300      	movs	r3, #0
 801d722:	61bb      	str	r3, [r7, #24]
 801d724:	687b      	ldr	r3, [r7, #4]
 801d726:	2b00      	cmp	r3, #0
 801d728:	d001      	beq.n	801d72e <RadioSetRxGenericConfig+0x26>
 801d72a:	2300      	movs	r3, #0
 801d72c:	603b      	str	r3, [r7, #0]
 801d72e:	687b      	ldr	r3, [r7, #4]
 801d730:	2b00      	cmp	r3, #0
 801d732:	bf14      	ite	ne
 801d734:	2301      	movne	r3, #1
 801d736:	2300      	moveq	r3, #0
 801d738:	b2da      	uxtb	r2, r3
 801d73a:	4bb3      	ldr	r3, [pc, #716]	; (801da08 <RadioSetRxGenericConfig+0x300>)
 801d73c:	705a      	strb	r2, [r3, #1]
 801d73e:	7bfb      	ldrb	r3, [r7, #15]
 801d740:	2b00      	cmp	r3, #0
 801d742:	d003      	beq.n	801d74c <RadioSetRxGenericConfig+0x44>
 801d744:	2b01      	cmp	r3, #1
 801d746:	f000 80aa 	beq.w	801d89e <RadioSetRxGenericConfig+0x196>
 801d74a:	e158      	b.n	801d9fe <RadioSetRxGenericConfig+0x2f6>
 801d74c:	68bb      	ldr	r3, [r7, #8]
 801d74e:	68db      	ldr	r3, [r3, #12]
 801d750:	2b00      	cmp	r3, #0
 801d752:	d003      	beq.n	801d75c <RadioSetRxGenericConfig+0x54>
 801d754:	68bb      	ldr	r3, [r7, #8]
 801d756:	691b      	ldr	r3, [r3, #16]
 801d758:	2b00      	cmp	r3, #0
 801d75a:	d102      	bne.n	801d762 <RadioSetRxGenericConfig+0x5a>
 801d75c:	f04f 33ff 	mov.w	r3, #4294967295
 801d760:	e14e      	b.n	801da00 <RadioSetRxGenericConfig+0x2f8>
 801d762:	68bb      	ldr	r3, [r7, #8]
 801d764:	7d5b      	ldrb	r3, [r3, #21]
 801d766:	2b08      	cmp	r3, #8
 801d768:	d902      	bls.n	801d770 <RadioSetRxGenericConfig+0x68>
 801d76a:	f04f 33ff 	mov.w	r3, #4294967295
 801d76e:	e147      	b.n	801da00 <RadioSetRxGenericConfig+0x2f8>
 801d770:	2300      	movs	r3, #0
 801d772:	623b      	str	r3, [r7, #32]
 801d774:	e00d      	b.n	801d792 <RadioSetRxGenericConfig+0x8a>
 801d776:	68bb      	ldr	r3, [r7, #8]
 801d778:	699a      	ldr	r2, [r3, #24]
 801d77a:	6a3b      	ldr	r3, [r7, #32]
 801d77c:	4413      	add	r3, r2
 801d77e:	7819      	ldrb	r1, [r3, #0]
 801d780:	f107 0214 	add.w	r2, r7, #20
 801d784:	6a3b      	ldr	r3, [r7, #32]
 801d786:	4413      	add	r3, r2
 801d788:	460a      	mov	r2, r1
 801d78a:	701a      	strb	r2, [r3, #0]
 801d78c:	6a3b      	ldr	r3, [r7, #32]
 801d78e:	3301      	adds	r3, #1
 801d790:	623b      	str	r3, [r7, #32]
 801d792:	68bb      	ldr	r3, [r7, #8]
 801d794:	7d5b      	ldrb	r3, [r3, #21]
 801d796:	461a      	mov	r2, r3
 801d798:	6a3b      	ldr	r3, [r7, #32]
 801d79a:	4293      	cmp	r3, r2
 801d79c:	dbeb      	blt.n	801d776 <RadioSetRxGenericConfig+0x6e>
 801d79e:	68bb      	ldr	r3, [r7, #8]
 801d7a0:	f893 3023 	ldrb.w	r3, [r3, #35]	; 0x23
 801d7a4:	2b00      	cmp	r3, #0
 801d7a6:	d104      	bne.n	801d7b2 <RadioSetRxGenericConfig+0xaa>
 801d7a8:	68bb      	ldr	r3, [r7, #8]
 801d7aa:	69db      	ldr	r3, [r3, #28]
 801d7ac:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 801d7b0:	e002      	b.n	801d7b8 <RadioSetRxGenericConfig+0xb0>
 801d7b2:	23ff      	movs	r3, #255	; 0xff
 801d7b4:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 801d7b8:	68bb      	ldr	r3, [r7, #8]
 801d7ba:	681b      	ldr	r3, [r3, #0]
 801d7bc:	2b00      	cmp	r3, #0
 801d7be:	bf14      	ite	ne
 801d7c0:	2301      	movne	r3, #1
 801d7c2:	2300      	moveq	r3, #0
 801d7c4:	b2db      	uxtb	r3, r3
 801d7c6:	4618      	mov	r0, r3
 801d7c8:	f002 f820 	bl	801f80c <SUBGRF_SetStopRxTimerOnPreambleDetect>
 801d7cc:	4b8e      	ldr	r3, [pc, #568]	; (801da08 <RadioSetRxGenericConfig+0x300>)
 801d7ce:	2200      	movs	r2, #0
 801d7d0:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 801d7d4:	68bb      	ldr	r3, [r7, #8]
 801d7d6:	68db      	ldr	r3, [r3, #12]
 801d7d8:	4a8b      	ldr	r2, [pc, #556]	; (801da08 <RadioSetRxGenericConfig+0x300>)
 801d7da:	63d3      	str	r3, [r2, #60]	; 0x3c
 801d7dc:	68bb      	ldr	r3, [r7, #8]
 801d7de:	791a      	ldrb	r2, [r3, #4]
 801d7e0:	4b89      	ldr	r3, [pc, #548]	; (801da08 <RadioSetRxGenericConfig+0x300>)
 801d7e2:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 801d7e6:	68bb      	ldr	r3, [r7, #8]
 801d7e8:	689b      	ldr	r3, [r3, #8]
 801d7ea:	4618      	mov	r0, r3
 801d7ec:	f000 fa78 	bl	801dce0 <RadioGetFskBandwidthRegValue>
 801d7f0:	4603      	mov	r3, r0
 801d7f2:	461a      	mov	r2, r3
 801d7f4:	4b84      	ldr	r3, [pc, #528]	; (801da08 <RadioSetRxGenericConfig+0x300>)
 801d7f6:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 801d7fa:	4b83      	ldr	r3, [pc, #524]	; (801da08 <RadioSetRxGenericConfig+0x300>)
 801d7fc:	2200      	movs	r2, #0
 801d7fe:	739a      	strb	r2, [r3, #14]
 801d800:	68bb      	ldr	r3, [r7, #8]
 801d802:	691b      	ldr	r3, [r3, #16]
 801d804:	b29b      	uxth	r3, r3
 801d806:	00db      	lsls	r3, r3, #3
 801d808:	b29a      	uxth	r2, r3
 801d80a:	4b7f      	ldr	r3, [pc, #508]	; (801da08 <RadioSetRxGenericConfig+0x300>)
 801d80c:	821a      	strh	r2, [r3, #16]
 801d80e:	68bb      	ldr	r3, [r7, #8]
 801d810:	7d1a      	ldrb	r2, [r3, #20]
 801d812:	4b7d      	ldr	r3, [pc, #500]	; (801da08 <RadioSetRxGenericConfig+0x300>)
 801d814:	749a      	strb	r2, [r3, #18]
 801d816:	68bb      	ldr	r3, [r7, #8]
 801d818:	7d5b      	ldrb	r3, [r3, #21]
 801d81a:	00db      	lsls	r3, r3, #3
 801d81c:	b2da      	uxtb	r2, r3
 801d81e:	4b7a      	ldr	r3, [pc, #488]	; (801da08 <RadioSetRxGenericConfig+0x300>)
 801d820:	74da      	strb	r2, [r3, #19]
 801d822:	68bb      	ldr	r3, [r7, #8]
 801d824:	f893 2022 	ldrb.w	r2, [r3, #34]	; 0x22
 801d828:	4b77      	ldr	r3, [pc, #476]	; (801da08 <RadioSetRxGenericConfig+0x300>)
 801d82a:	751a      	strb	r2, [r3, #20]
 801d82c:	68bb      	ldr	r3, [r7, #8]
 801d82e:	f893 2023 	ldrb.w	r2, [r3, #35]	; 0x23
 801d832:	4b75      	ldr	r3, [pc, #468]	; (801da08 <RadioSetRxGenericConfig+0x300>)
 801d834:	755a      	strb	r2, [r3, #21]
 801d836:	4a74      	ldr	r2, [pc, #464]	; (801da08 <RadioSetRxGenericConfig+0x300>)
 801d838:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 801d83c:	7593      	strb	r3, [r2, #22]
 801d83e:	68bb      	ldr	r3, [r7, #8]
 801d840:	f893 2024 	ldrb.w	r2, [r3, #36]	; 0x24
 801d844:	4b70      	ldr	r3, [pc, #448]	; (801da08 <RadioSetRxGenericConfig+0x300>)
 801d846:	75da      	strb	r2, [r3, #23]
 801d848:	68bb      	ldr	r3, [r7, #8]
 801d84a:	f893 2028 	ldrb.w	r2, [r3, #40]	; 0x28
 801d84e:	4b6e      	ldr	r3, [pc, #440]	; (801da08 <RadioSetRxGenericConfig+0x300>)
 801d850:	761a      	strb	r2, [r3, #24]
 801d852:	f001 f916 	bl	801ea82 <RadioStandby>
 801d856:	2000      	movs	r0, #0
 801d858:	f000 fad8 	bl	801de0c <RadioSetModem>
 801d85c:	486b      	ldr	r0, [pc, #428]	; (801da0c <RadioSetRxGenericConfig+0x304>)
 801d85e:	f002 fa1b 	bl	801fc98 <SUBGRF_SetModulationParams>
 801d862:	486b      	ldr	r0, [pc, #428]	; (801da10 <RadioSetRxGenericConfig+0x308>)
 801d864:	f002 fae6 	bl	801fe34 <SUBGRF_SetPacketParams>
 801d868:	f107 0314 	add.w	r3, r7, #20
 801d86c:	4618      	mov	r0, r3
 801d86e:	f001 fdf0 	bl	801f452 <SUBGRF_SetSyncWord>
 801d872:	68bb      	ldr	r3, [r7, #8]
 801d874:	8c1b      	ldrh	r3, [r3, #32]
 801d876:	4618      	mov	r0, r3
 801d878:	f001 fe3a 	bl	801f4f0 <SUBGRF_SetWhiteningSeed>
 801d87c:	68bb      	ldr	r3, [r7, #8]
 801d87e:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 801d880:	4618      	mov	r0, r3
 801d882:	f001 fe15 	bl	801f4b0 <SUBGRF_SetCrcPolynomial>
 801d886:	683b      	ldr	r3, [r7, #0]
 801d888:	f44f 52fa 	mov.w	r2, #8000	; 0x1f40
 801d88c:	fb02 f203 	mul.w	r2, r2, r3
 801d890:	68bb      	ldr	r3, [r7, #8]
 801d892:	68db      	ldr	r3, [r3, #12]
 801d894:	fbb2 f3f3 	udiv	r3, r2, r3
 801d898:	4a5b      	ldr	r2, [pc, #364]	; (801da08 <RadioSetRxGenericConfig+0x300>)
 801d89a:	6093      	str	r3, [r2, #8]
 801d89c:	e0af      	b.n	801d9fe <RadioSetRxGenericConfig+0x2f6>
 801d89e:	68bb      	ldr	r3, [r7, #8]
 801d8a0:	8e9b      	ldrh	r3, [r3, #52]	; 0x34
 801d8a2:	2b00      	cmp	r3, #0
 801d8a4:	d102      	bne.n	801d8ac <RadioSetRxGenericConfig+0x1a4>
 801d8a6:	f04f 33ff 	mov.w	r3, #4294967295
 801d8aa:	e0a9      	b.n	801da00 <RadioSetRxGenericConfig+0x2f8>
 801d8ac:	68bb      	ldr	r3, [r7, #8]
 801d8ae:	f893 3036 	ldrb.w	r3, [r3, #54]	; 0x36
 801d8b2:	2b01      	cmp	r3, #1
 801d8b4:	d104      	bne.n	801d8c0 <RadioSetRxGenericConfig+0x1b8>
 801d8b6:	68bb      	ldr	r3, [r7, #8]
 801d8b8:	69db      	ldr	r3, [r3, #28]
 801d8ba:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 801d8be:	e002      	b.n	801d8c6 <RadioSetRxGenericConfig+0x1be>
 801d8c0:	23ff      	movs	r3, #255	; 0xff
 801d8c2:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 801d8c6:	68bb      	ldr	r3, [r7, #8]
 801d8c8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d8ca:	2b00      	cmp	r3, #0
 801d8cc:	bf14      	ite	ne
 801d8ce:	2301      	movne	r3, #1
 801d8d0:	2300      	moveq	r3, #0
 801d8d2:	b2db      	uxtb	r3, r3
 801d8d4:	4618      	mov	r0, r3
 801d8d6:	f001 ff99 	bl	801f80c <SUBGRF_SetStopRxTimerOnPreambleDetect>
 801d8da:	683b      	ldr	r3, [r7, #0]
 801d8dc:	b2db      	uxtb	r3, r3
 801d8de:	4618      	mov	r0, r3
 801d8e0:	f001 ffa6 	bl	801f830 <SUBGRF_SetLoRaSymbNumTimeout>
 801d8e4:	4b48      	ldr	r3, [pc, #288]	; (801da08 <RadioSetRxGenericConfig+0x300>)
 801d8e6:	2201      	movs	r2, #1
 801d8e8:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 801d8ec:	68bb      	ldr	r3, [r7, #8]
 801d8ee:	f893 2030 	ldrb.w	r2, [r3, #48]	; 0x30
 801d8f2:	4b45      	ldr	r3, [pc, #276]	; (801da08 <RadioSetRxGenericConfig+0x300>)
 801d8f4:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 801d8f8:	68bb      	ldr	r3, [r7, #8]
 801d8fa:	f893 2031 	ldrb.w	r2, [r3, #49]	; 0x31
 801d8fe:	4b42      	ldr	r3, [pc, #264]	; (801da08 <RadioSetRxGenericConfig+0x300>)
 801d900:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 801d904:	68bb      	ldr	r3, [r7, #8]
 801d906:	f893 2032 	ldrb.w	r2, [r3, #50]	; 0x32
 801d90a:	4b3f      	ldr	r3, [pc, #252]	; (801da08 <RadioSetRxGenericConfig+0x300>)
 801d90c:	f883 2052 	strb.w	r2, [r3, #82]	; 0x52
 801d910:	68bb      	ldr	r3, [r7, #8]
 801d912:	f893 3033 	ldrb.w	r3, [r3, #51]	; 0x33
 801d916:	2b02      	cmp	r3, #2
 801d918:	d010      	beq.n	801d93c <RadioSetRxGenericConfig+0x234>
 801d91a:	2b02      	cmp	r3, #2
 801d91c:	dc22      	bgt.n	801d964 <RadioSetRxGenericConfig+0x25c>
 801d91e:	2b00      	cmp	r3, #0
 801d920:	d002      	beq.n	801d928 <RadioSetRxGenericConfig+0x220>
 801d922:	2b01      	cmp	r3, #1
 801d924:	d005      	beq.n	801d932 <RadioSetRxGenericConfig+0x22a>
 801d926:	e01d      	b.n	801d964 <RadioSetRxGenericConfig+0x25c>
 801d928:	4b37      	ldr	r3, [pc, #220]	; (801da08 <RadioSetRxGenericConfig+0x300>)
 801d92a:	2200      	movs	r2, #0
 801d92c:	f883 2053 	strb.w	r2, [r3, #83]	; 0x53
 801d930:	e019      	b.n	801d966 <RadioSetRxGenericConfig+0x25e>
 801d932:	4b35      	ldr	r3, [pc, #212]	; (801da08 <RadioSetRxGenericConfig+0x300>)
 801d934:	2201      	movs	r2, #1
 801d936:	f883 2053 	strb.w	r2, [r3, #83]	; 0x53
 801d93a:	e014      	b.n	801d966 <RadioSetRxGenericConfig+0x25e>
 801d93c:	68bb      	ldr	r3, [r7, #8]
 801d93e:	f893 3030 	ldrb.w	r3, [r3, #48]	; 0x30
 801d942:	2b0b      	cmp	r3, #11
 801d944:	d004      	beq.n	801d950 <RadioSetRxGenericConfig+0x248>
 801d946:	68bb      	ldr	r3, [r7, #8]
 801d948:	f893 3030 	ldrb.w	r3, [r3, #48]	; 0x30
 801d94c:	2b0c      	cmp	r3, #12
 801d94e:	d104      	bne.n	801d95a <RadioSetRxGenericConfig+0x252>
 801d950:	4b2d      	ldr	r3, [pc, #180]	; (801da08 <RadioSetRxGenericConfig+0x300>)
 801d952:	2201      	movs	r2, #1
 801d954:	f883 2053 	strb.w	r2, [r3, #83]	; 0x53
 801d958:	e005      	b.n	801d966 <RadioSetRxGenericConfig+0x25e>
 801d95a:	4b2b      	ldr	r3, [pc, #172]	; (801da08 <RadioSetRxGenericConfig+0x300>)
 801d95c:	2200      	movs	r2, #0
 801d95e:	f883 2053 	strb.w	r2, [r3, #83]	; 0x53
 801d962:	e000      	b.n	801d966 <RadioSetRxGenericConfig+0x25e>
 801d964:	bf00      	nop
 801d966:	4b28      	ldr	r3, [pc, #160]	; (801da08 <RadioSetRxGenericConfig+0x300>)
 801d968:	2201      	movs	r2, #1
 801d96a:	739a      	strb	r2, [r3, #14]
 801d96c:	68bb      	ldr	r3, [r7, #8]
 801d96e:	8e9a      	ldrh	r2, [r3, #52]	; 0x34
 801d970:	4b25      	ldr	r3, [pc, #148]	; (801da08 <RadioSetRxGenericConfig+0x300>)
 801d972:	839a      	strh	r2, [r3, #28]
 801d974:	68bb      	ldr	r3, [r7, #8]
 801d976:	f893 2036 	ldrb.w	r2, [r3, #54]	; 0x36
 801d97a:	4b23      	ldr	r3, [pc, #140]	; (801da08 <RadioSetRxGenericConfig+0x300>)
 801d97c:	779a      	strb	r2, [r3, #30]
 801d97e:	4a22      	ldr	r2, [pc, #136]	; (801da08 <RadioSetRxGenericConfig+0x300>)
 801d980:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 801d984:	77d3      	strb	r3, [r2, #31]
 801d986:	68bb      	ldr	r3, [r7, #8]
 801d988:	f893 2038 	ldrb.w	r2, [r3, #56]	; 0x38
 801d98c:	4b1e      	ldr	r3, [pc, #120]	; (801da08 <RadioSetRxGenericConfig+0x300>)
 801d98e:	f883 2020 	strb.w	r2, [r3, #32]
 801d992:	68bb      	ldr	r3, [r7, #8]
 801d994:	f893 2039 	ldrb.w	r2, [r3, #57]	; 0x39
 801d998:	4b1b      	ldr	r3, [pc, #108]	; (801da08 <RadioSetRxGenericConfig+0x300>)
 801d99a:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 801d99e:	f001 f870 	bl	801ea82 <RadioStandby>
 801d9a2:	2001      	movs	r0, #1
 801d9a4:	f000 fa32 	bl	801de0c <RadioSetModem>
 801d9a8:	4818      	ldr	r0, [pc, #96]	; (801da0c <RadioSetRxGenericConfig+0x304>)
 801d9aa:	f002 f975 	bl	801fc98 <SUBGRF_SetModulationParams>
 801d9ae:	4818      	ldr	r0, [pc, #96]	; (801da10 <RadioSetRxGenericConfig+0x308>)
 801d9b0:	f002 fa40 	bl	801fe34 <SUBGRF_SetPacketParams>
 801d9b4:	4b14      	ldr	r3, [pc, #80]	; (801da08 <RadioSetRxGenericConfig+0x300>)
 801d9b6:	f893 3021 	ldrb.w	r3, [r3, #33]	; 0x21
 801d9ba:	2b01      	cmp	r3, #1
 801d9bc:	d10d      	bne.n	801d9da <RadioSetRxGenericConfig+0x2d2>
 801d9be:	f240 7036 	movw	r0, #1846	; 0x736
 801d9c2:	f002 fb9f 	bl	8020104 <SUBGRF_ReadRegister>
 801d9c6:	4603      	mov	r3, r0
 801d9c8:	f023 0304 	bic.w	r3, r3, #4
 801d9cc:	b2db      	uxtb	r3, r3
 801d9ce:	4619      	mov	r1, r3
 801d9d0:	f240 7036 	movw	r0, #1846	; 0x736
 801d9d4:	f002 fb82 	bl	80200dc <SUBGRF_WriteRegister>
 801d9d8:	e00c      	b.n	801d9f4 <RadioSetRxGenericConfig+0x2ec>
 801d9da:	f240 7036 	movw	r0, #1846	; 0x736
 801d9de:	f002 fb91 	bl	8020104 <SUBGRF_ReadRegister>
 801d9e2:	4603      	mov	r3, r0
 801d9e4:	f043 0304 	orr.w	r3, r3, #4
 801d9e8:	b2db      	uxtb	r3, r3
 801d9ea:	4619      	mov	r1, r3
 801d9ec:	f240 7036 	movw	r0, #1846	; 0x736
 801d9f0:	f002 fb74 	bl	80200dc <SUBGRF_WriteRegister>
 801d9f4:	4b04      	ldr	r3, [pc, #16]	; (801da08 <RadioSetRxGenericConfig+0x300>)
 801d9f6:	f64f 72ff 	movw	r2, #65535	; 0xffff
 801d9fa:	609a      	str	r2, [r3, #8]
 801d9fc:	bf00      	nop
 801d9fe:	69fb      	ldr	r3, [r7, #28]
 801da00:	4618      	mov	r0, r3
 801da02:	3728      	adds	r7, #40	; 0x28
 801da04:	46bd      	mov	sp, r7
 801da06:	bd80      	pop	{r7, pc}
 801da08:	20001ffc 	.word	0x20001ffc
 801da0c:	20002034 	.word	0x20002034
 801da10:	2000200a 	.word	0x2000200a

0801da14 <RadioSetTxGenericConfig>:
 801da14:	b580      	push	{r7, lr}
 801da16:	b088      	sub	sp, #32
 801da18:	af00      	add	r7, sp, #0
 801da1a:	60b9      	str	r1, [r7, #8]
 801da1c:	607b      	str	r3, [r7, #4]
 801da1e:	4603      	mov	r3, r0
 801da20:	73fb      	strb	r3, [r7, #15]
 801da22:	4613      	mov	r3, r2
 801da24:	73bb      	strb	r3, [r7, #14]
 801da26:	2300      	movs	r3, #0
 801da28:	617b      	str	r3, [r7, #20]
 801da2a:	2300      	movs	r3, #0
 801da2c:	61bb      	str	r3, [r7, #24]
 801da2e:	7bfb      	ldrb	r3, [r7, #15]
 801da30:	2b02      	cmp	r3, #2
 801da32:	f000 811c 	beq.w	801dc6e <RadioSetTxGenericConfig+0x25a>
 801da36:	2b02      	cmp	r3, #2
 801da38:	f300 8138 	bgt.w	801dcac <RadioSetTxGenericConfig+0x298>
 801da3c:	2b00      	cmp	r3, #0
 801da3e:	d003      	beq.n	801da48 <RadioSetTxGenericConfig+0x34>
 801da40:	2b01      	cmp	r3, #1
 801da42:	f000 8083 	beq.w	801db4c <RadioSetTxGenericConfig+0x138>
 801da46:	e131      	b.n	801dcac <RadioSetTxGenericConfig+0x298>
 801da48:	68bb      	ldr	r3, [r7, #8]
 801da4a:	689b      	ldr	r3, [r3, #8]
 801da4c:	2b00      	cmp	r3, #0
 801da4e:	d003      	beq.n	801da58 <RadioSetTxGenericConfig+0x44>
 801da50:	68bb      	ldr	r3, [r7, #8]
 801da52:	691b      	ldr	r3, [r3, #16]
 801da54:	2b00      	cmp	r3, #0
 801da56:	d102      	bne.n	801da5e <RadioSetTxGenericConfig+0x4a>
 801da58:	f04f 33ff 	mov.w	r3, #4294967295
 801da5c:	e135      	b.n	801dcca <RadioSetTxGenericConfig+0x2b6>
 801da5e:	68bb      	ldr	r3, [r7, #8]
 801da60:	7d1b      	ldrb	r3, [r3, #20]
 801da62:	2b08      	cmp	r3, #8
 801da64:	d902      	bls.n	801da6c <RadioSetTxGenericConfig+0x58>
 801da66:	f04f 33ff 	mov.w	r3, #4294967295
 801da6a:	e12e      	b.n	801dcca <RadioSetTxGenericConfig+0x2b6>
 801da6c:	2300      	movs	r3, #0
 801da6e:	61fb      	str	r3, [r7, #28]
 801da70:	e00d      	b.n	801da8e <RadioSetTxGenericConfig+0x7a>
 801da72:	68bb      	ldr	r3, [r7, #8]
 801da74:	699a      	ldr	r2, [r3, #24]
 801da76:	69fb      	ldr	r3, [r7, #28]
 801da78:	4413      	add	r3, r2
 801da7a:	7819      	ldrb	r1, [r3, #0]
 801da7c:	f107 0214 	add.w	r2, r7, #20
 801da80:	69fb      	ldr	r3, [r7, #28]
 801da82:	4413      	add	r3, r2
 801da84:	460a      	mov	r2, r1
 801da86:	701a      	strb	r2, [r3, #0]
 801da88:	69fb      	ldr	r3, [r7, #28]
 801da8a:	3301      	adds	r3, #1
 801da8c:	61fb      	str	r3, [r7, #28]
 801da8e:	68bb      	ldr	r3, [r7, #8]
 801da90:	7d1b      	ldrb	r3, [r3, #20]
 801da92:	461a      	mov	r2, r3
 801da94:	69fb      	ldr	r3, [r7, #28]
 801da96:	4293      	cmp	r3, r2
 801da98:	dbeb      	blt.n	801da72 <RadioSetTxGenericConfig+0x5e>
 801da9a:	4b8e      	ldr	r3, [pc, #568]	; (801dcd4 <RadioSetTxGenericConfig+0x2c0>)
 801da9c:	2200      	movs	r2, #0
 801da9e:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 801daa2:	68bb      	ldr	r3, [r7, #8]
 801daa4:	689b      	ldr	r3, [r3, #8]
 801daa6:	4a8b      	ldr	r2, [pc, #556]	; (801dcd4 <RadioSetTxGenericConfig+0x2c0>)
 801daa8:	63d3      	str	r3, [r2, #60]	; 0x3c
 801daaa:	68bb      	ldr	r3, [r7, #8]
 801daac:	781a      	ldrb	r2, [r3, #0]
 801daae:	4b89      	ldr	r3, [pc, #548]	; (801dcd4 <RadioSetTxGenericConfig+0x2c0>)
 801dab0:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 801dab4:	68bb      	ldr	r3, [r7, #8]
 801dab6:	685b      	ldr	r3, [r3, #4]
 801dab8:	4618      	mov	r0, r3
 801daba:	f000 f911 	bl	801dce0 <RadioGetFskBandwidthRegValue>
 801dabe:	4603      	mov	r3, r0
 801dac0:	461a      	mov	r2, r3
 801dac2:	4b84      	ldr	r3, [pc, #528]	; (801dcd4 <RadioSetTxGenericConfig+0x2c0>)
 801dac4:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 801dac8:	68bb      	ldr	r3, [r7, #8]
 801daca:	68db      	ldr	r3, [r3, #12]
 801dacc:	4a81      	ldr	r2, [pc, #516]	; (801dcd4 <RadioSetTxGenericConfig+0x2c0>)
 801dace:	6413      	str	r3, [r2, #64]	; 0x40
 801dad0:	4b80      	ldr	r3, [pc, #512]	; (801dcd4 <RadioSetTxGenericConfig+0x2c0>)
 801dad2:	2200      	movs	r2, #0
 801dad4:	739a      	strb	r2, [r3, #14]
 801dad6:	68bb      	ldr	r3, [r7, #8]
 801dad8:	691b      	ldr	r3, [r3, #16]
 801dada:	b29b      	uxth	r3, r3
 801dadc:	00db      	lsls	r3, r3, #3
 801dade:	b29a      	uxth	r2, r3
 801dae0:	4b7c      	ldr	r3, [pc, #496]	; (801dcd4 <RadioSetTxGenericConfig+0x2c0>)
 801dae2:	821a      	strh	r2, [r3, #16]
 801dae4:	4b7b      	ldr	r3, [pc, #492]	; (801dcd4 <RadioSetTxGenericConfig+0x2c0>)
 801dae6:	2204      	movs	r2, #4
 801dae8:	749a      	strb	r2, [r3, #18]
 801daea:	68bb      	ldr	r3, [r7, #8]
 801daec:	7d1b      	ldrb	r3, [r3, #20]
 801daee:	00db      	lsls	r3, r3, #3
 801daf0:	b2da      	uxtb	r2, r3
 801daf2:	4b78      	ldr	r3, [pc, #480]	; (801dcd4 <RadioSetTxGenericConfig+0x2c0>)
 801daf4:	74da      	strb	r2, [r3, #19]
 801daf6:	4b77      	ldr	r3, [pc, #476]	; (801dcd4 <RadioSetTxGenericConfig+0x2c0>)
 801daf8:	2200      	movs	r2, #0
 801dafa:	751a      	strb	r2, [r3, #20]
 801dafc:	68bb      	ldr	r3, [r7, #8]
 801dafe:	7f9a      	ldrb	r2, [r3, #30]
 801db00:	4b74      	ldr	r3, [pc, #464]	; (801dcd4 <RadioSetTxGenericConfig+0x2c0>)
 801db02:	755a      	strb	r2, [r3, #21]
 801db04:	68bb      	ldr	r3, [r7, #8]
 801db06:	7fda      	ldrb	r2, [r3, #31]
 801db08:	4b72      	ldr	r3, [pc, #456]	; (801dcd4 <RadioSetTxGenericConfig+0x2c0>)
 801db0a:	75da      	strb	r2, [r3, #23]
 801db0c:	68bb      	ldr	r3, [r7, #8]
 801db0e:	f893 2022 	ldrb.w	r2, [r3, #34]	; 0x22
 801db12:	4b70      	ldr	r3, [pc, #448]	; (801dcd4 <RadioSetTxGenericConfig+0x2c0>)
 801db14:	761a      	strb	r2, [r3, #24]
 801db16:	f000 ffb4 	bl	801ea82 <RadioStandby>
 801db1a:	2000      	movs	r0, #0
 801db1c:	f000 f976 	bl	801de0c <RadioSetModem>
 801db20:	486d      	ldr	r0, [pc, #436]	; (801dcd8 <RadioSetTxGenericConfig+0x2c4>)
 801db22:	f002 f8b9 	bl	801fc98 <SUBGRF_SetModulationParams>
 801db26:	486d      	ldr	r0, [pc, #436]	; (801dcdc <RadioSetTxGenericConfig+0x2c8>)
 801db28:	f002 f984 	bl	801fe34 <SUBGRF_SetPacketParams>
 801db2c:	f107 0314 	add.w	r3, r7, #20
 801db30:	4618      	mov	r0, r3
 801db32:	f001 fc8e 	bl	801f452 <SUBGRF_SetSyncWord>
 801db36:	68bb      	ldr	r3, [r7, #8]
 801db38:	8b9b      	ldrh	r3, [r3, #28]
 801db3a:	4618      	mov	r0, r3
 801db3c:	f001 fcd8 	bl	801f4f0 <SUBGRF_SetWhiteningSeed>
 801db40:	68bb      	ldr	r3, [r7, #8]
 801db42:	8c1b      	ldrh	r3, [r3, #32]
 801db44:	4618      	mov	r0, r3
 801db46:	f001 fcb3 	bl	801f4b0 <SUBGRF_SetCrcPolynomial>
 801db4a:	e0b0      	b.n	801dcae <RadioSetTxGenericConfig+0x29a>
 801db4c:	4b61      	ldr	r3, [pc, #388]	; (801dcd4 <RadioSetTxGenericConfig+0x2c0>)
 801db4e:	2201      	movs	r2, #1
 801db50:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 801db54:	68bb      	ldr	r3, [r7, #8]
 801db56:	f893 2024 	ldrb.w	r2, [r3, #36]	; 0x24
 801db5a:	4b5e      	ldr	r3, [pc, #376]	; (801dcd4 <RadioSetTxGenericConfig+0x2c0>)
 801db5c:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 801db60:	68bb      	ldr	r3, [r7, #8]
 801db62:	f893 2025 	ldrb.w	r2, [r3, #37]	; 0x25
 801db66:	4b5b      	ldr	r3, [pc, #364]	; (801dcd4 <RadioSetTxGenericConfig+0x2c0>)
 801db68:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 801db6c:	68bb      	ldr	r3, [r7, #8]
 801db6e:	f893 2026 	ldrb.w	r2, [r3, #38]	; 0x26
 801db72:	4b58      	ldr	r3, [pc, #352]	; (801dcd4 <RadioSetTxGenericConfig+0x2c0>)
 801db74:	f883 2052 	strb.w	r2, [r3, #82]	; 0x52
 801db78:	68bb      	ldr	r3, [r7, #8]
 801db7a:	f893 3027 	ldrb.w	r3, [r3, #39]	; 0x27
 801db7e:	2b02      	cmp	r3, #2
 801db80:	d010      	beq.n	801dba4 <RadioSetTxGenericConfig+0x190>
 801db82:	2b02      	cmp	r3, #2
 801db84:	dc22      	bgt.n	801dbcc <RadioSetTxGenericConfig+0x1b8>
 801db86:	2b00      	cmp	r3, #0
 801db88:	d002      	beq.n	801db90 <RadioSetTxGenericConfig+0x17c>
 801db8a:	2b01      	cmp	r3, #1
 801db8c:	d005      	beq.n	801db9a <RadioSetTxGenericConfig+0x186>
 801db8e:	e01d      	b.n	801dbcc <RadioSetTxGenericConfig+0x1b8>
 801db90:	4b50      	ldr	r3, [pc, #320]	; (801dcd4 <RadioSetTxGenericConfig+0x2c0>)
 801db92:	2200      	movs	r2, #0
 801db94:	f883 2053 	strb.w	r2, [r3, #83]	; 0x53
 801db98:	e019      	b.n	801dbce <RadioSetTxGenericConfig+0x1ba>
 801db9a:	4b4e      	ldr	r3, [pc, #312]	; (801dcd4 <RadioSetTxGenericConfig+0x2c0>)
 801db9c:	2201      	movs	r2, #1
 801db9e:	f883 2053 	strb.w	r2, [r3, #83]	; 0x53
 801dba2:	e014      	b.n	801dbce <RadioSetTxGenericConfig+0x1ba>
 801dba4:	68bb      	ldr	r3, [r7, #8]
 801dba6:	f893 3024 	ldrb.w	r3, [r3, #36]	; 0x24
 801dbaa:	2b0b      	cmp	r3, #11
 801dbac:	d004      	beq.n	801dbb8 <RadioSetTxGenericConfig+0x1a4>
 801dbae:	68bb      	ldr	r3, [r7, #8]
 801dbb0:	f893 3024 	ldrb.w	r3, [r3, #36]	; 0x24
 801dbb4:	2b0c      	cmp	r3, #12
 801dbb6:	d104      	bne.n	801dbc2 <RadioSetTxGenericConfig+0x1ae>
 801dbb8:	4b46      	ldr	r3, [pc, #280]	; (801dcd4 <RadioSetTxGenericConfig+0x2c0>)
 801dbba:	2201      	movs	r2, #1
 801dbbc:	f883 2053 	strb.w	r2, [r3, #83]	; 0x53
 801dbc0:	e005      	b.n	801dbce <RadioSetTxGenericConfig+0x1ba>
 801dbc2:	4b44      	ldr	r3, [pc, #272]	; (801dcd4 <RadioSetTxGenericConfig+0x2c0>)
 801dbc4:	2200      	movs	r2, #0
 801dbc6:	f883 2053 	strb.w	r2, [r3, #83]	; 0x53
 801dbca:	e000      	b.n	801dbce <RadioSetTxGenericConfig+0x1ba>
 801dbcc:	bf00      	nop
 801dbce:	68bb      	ldr	r3, [r7, #8]
 801dbd0:	f893 3027 	ldrb.w	r3, [r3, #39]	; 0x27
 801dbd4:	2b00      	cmp	r3, #0
 801dbd6:	bf14      	ite	ne
 801dbd8:	2301      	movne	r3, #1
 801dbda:	2300      	moveq	r3, #0
 801dbdc:	b2db      	uxtb	r3, r3
 801dbde:	461a      	mov	r2, r3
 801dbe0:	4b3c      	ldr	r3, [pc, #240]	; (801dcd4 <RadioSetTxGenericConfig+0x2c0>)
 801dbe2:	f883 2053 	strb.w	r2, [r3, #83]	; 0x53
 801dbe6:	4b3b      	ldr	r3, [pc, #236]	; (801dcd4 <RadioSetTxGenericConfig+0x2c0>)
 801dbe8:	2201      	movs	r2, #1
 801dbea:	739a      	strb	r2, [r3, #14]
 801dbec:	68bb      	ldr	r3, [r7, #8]
 801dbee:	8d1a      	ldrh	r2, [r3, #40]	; 0x28
 801dbf0:	4b38      	ldr	r3, [pc, #224]	; (801dcd4 <RadioSetTxGenericConfig+0x2c0>)
 801dbf2:	839a      	strh	r2, [r3, #28]
 801dbf4:	68bb      	ldr	r3, [r7, #8]
 801dbf6:	f893 202a 	ldrb.w	r2, [r3, #42]	; 0x2a
 801dbfa:	4b36      	ldr	r3, [pc, #216]	; (801dcd4 <RadioSetTxGenericConfig+0x2c0>)
 801dbfc:	779a      	strb	r2, [r3, #30]
 801dbfe:	68bb      	ldr	r3, [r7, #8]
 801dc00:	f893 202b 	ldrb.w	r2, [r3, #43]	; 0x2b
 801dc04:	4b33      	ldr	r3, [pc, #204]	; (801dcd4 <RadioSetTxGenericConfig+0x2c0>)
 801dc06:	f883 2020 	strb.w	r2, [r3, #32]
 801dc0a:	68bb      	ldr	r3, [r7, #8]
 801dc0c:	f893 202c 	ldrb.w	r2, [r3, #44]	; 0x2c
 801dc10:	4b30      	ldr	r3, [pc, #192]	; (801dcd4 <RadioSetTxGenericConfig+0x2c0>)
 801dc12:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 801dc16:	f000 ff34 	bl	801ea82 <RadioStandby>
 801dc1a:	2001      	movs	r0, #1
 801dc1c:	f000 f8f6 	bl	801de0c <RadioSetModem>
 801dc20:	482d      	ldr	r0, [pc, #180]	; (801dcd8 <RadioSetTxGenericConfig+0x2c4>)
 801dc22:	f002 f839 	bl	801fc98 <SUBGRF_SetModulationParams>
 801dc26:	482d      	ldr	r0, [pc, #180]	; (801dcdc <RadioSetTxGenericConfig+0x2c8>)
 801dc28:	f002 f904 	bl	801fe34 <SUBGRF_SetPacketParams>
 801dc2c:	4b29      	ldr	r3, [pc, #164]	; (801dcd4 <RadioSetTxGenericConfig+0x2c0>)
 801dc2e:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 801dc32:	2b06      	cmp	r3, #6
 801dc34:	d10d      	bne.n	801dc52 <RadioSetTxGenericConfig+0x23e>
 801dc36:	f640 0089 	movw	r0, #2185	; 0x889
 801dc3a:	f002 fa63 	bl	8020104 <SUBGRF_ReadRegister>
 801dc3e:	4603      	mov	r3, r0
 801dc40:	f023 0304 	bic.w	r3, r3, #4
 801dc44:	b2db      	uxtb	r3, r3
 801dc46:	4619      	mov	r1, r3
 801dc48:	f640 0089 	movw	r0, #2185	; 0x889
 801dc4c:	f002 fa46 	bl	80200dc <SUBGRF_WriteRegister>
 801dc50:	e02d      	b.n	801dcae <RadioSetTxGenericConfig+0x29a>
 801dc52:	f640 0089 	movw	r0, #2185	; 0x889
 801dc56:	f002 fa55 	bl	8020104 <SUBGRF_ReadRegister>
 801dc5a:	4603      	mov	r3, r0
 801dc5c:	f043 0304 	orr.w	r3, r3, #4
 801dc60:	b2db      	uxtb	r3, r3
 801dc62:	4619      	mov	r1, r3
 801dc64:	f640 0089 	movw	r0, #2185	; 0x889
 801dc68:	f002 fa38 	bl	80200dc <SUBGRF_WriteRegister>
 801dc6c:	e01f      	b.n	801dcae <RadioSetTxGenericConfig+0x29a>
 801dc6e:	68bb      	ldr	r3, [r7, #8]
 801dc70:	689b      	ldr	r3, [r3, #8]
 801dc72:	2b00      	cmp	r3, #0
 801dc74:	d004      	beq.n	801dc80 <RadioSetTxGenericConfig+0x26c>
 801dc76:	68bb      	ldr	r3, [r7, #8]
 801dc78:	689b      	ldr	r3, [r3, #8]
 801dc7a:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 801dc7e:	d902      	bls.n	801dc86 <RadioSetTxGenericConfig+0x272>
 801dc80:	f04f 33ff 	mov.w	r3, #4294967295
 801dc84:	e021      	b.n	801dcca <RadioSetTxGenericConfig+0x2b6>
 801dc86:	2002      	movs	r0, #2
 801dc88:	f000 f8c0 	bl	801de0c <RadioSetModem>
 801dc8c:	4b11      	ldr	r3, [pc, #68]	; (801dcd4 <RadioSetTxGenericConfig+0x2c0>)
 801dc8e:	2202      	movs	r2, #2
 801dc90:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 801dc94:	68bb      	ldr	r3, [r7, #8]
 801dc96:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801dc98:	4a0e      	ldr	r2, [pc, #56]	; (801dcd4 <RadioSetTxGenericConfig+0x2c0>)
 801dc9a:	6493      	str	r3, [r2, #72]	; 0x48
 801dc9c:	4b0d      	ldr	r3, [pc, #52]	; (801dcd4 <RadioSetTxGenericConfig+0x2c0>)
 801dc9e:	2216      	movs	r2, #22
 801dca0:	f883 204c 	strb.w	r2, [r3, #76]	; 0x4c
 801dca4:	480c      	ldr	r0, [pc, #48]	; (801dcd8 <RadioSetTxGenericConfig+0x2c4>)
 801dca6:	f001 fff7 	bl	801fc98 <SUBGRF_SetModulationParams>
 801dcaa:	e000      	b.n	801dcae <RadioSetTxGenericConfig+0x29a>
 801dcac:	bf00      	nop
 801dcae:	f997 300e 	ldrsb.w	r3, [r7, #14]
 801dcb2:	4618      	mov	r0, r3
 801dcb4:	f002 fab6 	bl	8020224 <SUBGRF_SetRfTxPower>
 801dcb8:	4603      	mov	r3, r0
 801dcba:	461a      	mov	r2, r3
 801dcbc:	4b05      	ldr	r3, [pc, #20]	; (801dcd4 <RadioSetTxGenericConfig+0x2c0>)
 801dcbe:	f883 2056 	strb.w	r2, [r3, #86]	; 0x56
 801dcc2:	4a04      	ldr	r2, [pc, #16]	; (801dcd4 <RadioSetTxGenericConfig+0x2c0>)
 801dcc4:	687b      	ldr	r3, [r7, #4]
 801dcc6:	6053      	str	r3, [r2, #4]
 801dcc8:	2300      	movs	r3, #0
 801dcca:	4618      	mov	r0, r3
 801dccc:	3720      	adds	r7, #32
 801dcce:	46bd      	mov	sp, r7
 801dcd0:	bd80      	pop	{r7, pc}
 801dcd2:	bf00      	nop
 801dcd4:	20001ffc 	.word	0x20001ffc
 801dcd8:	20002034 	.word	0x20002034
 801dcdc:	2000200a 	.word	0x2000200a

0801dce0 <RadioGetFskBandwidthRegValue>:
 801dce0:	b480      	push	{r7}
 801dce2:	b085      	sub	sp, #20
 801dce4:	af00      	add	r7, sp, #0
 801dce6:	6078      	str	r0, [r7, #4]
 801dce8:	687b      	ldr	r3, [r7, #4]
 801dcea:	2b00      	cmp	r3, #0
 801dcec:	d101      	bne.n	801dcf2 <RadioGetFskBandwidthRegValue+0x12>
 801dcee:	231f      	movs	r3, #31
 801dcf0:	e016      	b.n	801dd20 <RadioGetFskBandwidthRegValue+0x40>
 801dcf2:	2300      	movs	r3, #0
 801dcf4:	73fb      	strb	r3, [r7, #15]
 801dcf6:	e00f      	b.n	801dd18 <RadioGetFskBandwidthRegValue+0x38>
 801dcf8:	7bfb      	ldrb	r3, [r7, #15]
 801dcfa:	4a0c      	ldr	r2, [pc, #48]	; (801dd2c <RadioGetFskBandwidthRegValue+0x4c>)
 801dcfc:	f852 3033 	ldr.w	r3, [r2, r3, lsl #3]
 801dd00:	687a      	ldr	r2, [r7, #4]
 801dd02:	429a      	cmp	r2, r3
 801dd04:	d205      	bcs.n	801dd12 <RadioGetFskBandwidthRegValue+0x32>
 801dd06:	7bfb      	ldrb	r3, [r7, #15]
 801dd08:	4a08      	ldr	r2, [pc, #32]	; (801dd2c <RadioGetFskBandwidthRegValue+0x4c>)
 801dd0a:	00db      	lsls	r3, r3, #3
 801dd0c:	4413      	add	r3, r2
 801dd0e:	791b      	ldrb	r3, [r3, #4]
 801dd10:	e006      	b.n	801dd20 <RadioGetFskBandwidthRegValue+0x40>
 801dd12:	7bfb      	ldrb	r3, [r7, #15]
 801dd14:	3301      	adds	r3, #1
 801dd16:	73fb      	strb	r3, [r7, #15]
 801dd18:	7bfb      	ldrb	r3, [r7, #15]
 801dd1a:	2b15      	cmp	r3, #21
 801dd1c:	d9ec      	bls.n	801dcf8 <RadioGetFskBandwidthRegValue+0x18>
 801dd1e:	e7fe      	b.n	801dd1e <RadioGetFskBandwidthRegValue+0x3e>
 801dd20:	4618      	mov	r0, r3
 801dd22:	3714      	adds	r7, #20
 801dd24:	46bd      	mov	sp, r7
 801dd26:	bc80      	pop	{r7}
 801dd28:	4770      	bx	lr
 801dd2a:	bf00      	nop
 801dd2c:	080268b8 	.word	0x080268b8

0801dd30 <RadioInit>:
 801dd30:	b580      	push	{r7, lr}
 801dd32:	b084      	sub	sp, #16
 801dd34:	af02      	add	r7, sp, #8
 801dd36:	6078      	str	r0, [r7, #4]
 801dd38:	4a21      	ldr	r2, [pc, #132]	; (801ddc0 <RadioInit+0x90>)
 801dd3a:	687b      	ldr	r3, [r7, #4]
 801dd3c:	6013      	str	r3, [r2, #0]
 801dd3e:	4b21      	ldr	r3, [pc, #132]	; (801ddc4 <RadioInit+0x94>)
 801dd40:	2200      	movs	r2, #0
 801dd42:	705a      	strb	r2, [r3, #1]
 801dd44:	4b1f      	ldr	r3, [pc, #124]	; (801ddc4 <RadioInit+0x94>)
 801dd46:	2200      	movs	r2, #0
 801dd48:	605a      	str	r2, [r3, #4]
 801dd4a:	4b1e      	ldr	r3, [pc, #120]	; (801ddc4 <RadioInit+0x94>)
 801dd4c:	2200      	movs	r2, #0
 801dd4e:	609a      	str	r2, [r3, #8]
 801dd50:	481d      	ldr	r0, [pc, #116]	; (801ddc8 <RadioInit+0x98>)
 801dd52:	f001 fae9 	bl	801f328 <SUBGRF_Init>
 801dd56:	2000      	movs	r0, #0
 801dd58:	f000 ffdc 	bl	801ed14 <RadioSetPublicNetwork>
 801dd5c:	f001 fd9a 	bl	801f894 <SUBGRF_SetRegulatorMode>
 801dd60:	2100      	movs	r1, #0
 801dd62:	2000      	movs	r0, #0
 801dd64:	f002 f906 	bl	801ff74 <SUBGRF_SetBufferBaseAddress>
 801dd68:	2204      	movs	r2, #4
 801dd6a:	2100      	movs	r1, #0
 801dd6c:	2001      	movs	r0, #1
 801dd6e:	f001 ff2b 	bl	801fbc8 <SUBGRF_SetTxParams>
 801dd72:	2300      	movs	r3, #0
 801dd74:	2200      	movs	r2, #0
 801dd76:	f64f 71ff 	movw	r1, #65535	; 0xffff
 801dd7a:	f64f 70ff 	movw	r0, #65535	; 0xffff
 801dd7e:	f001 fe57 	bl	801fa30 <SUBGRF_SetDioIrqParams>
 801dd82:	f000 fe6b 	bl	801ea5c <RadioSleep>
 801dd86:	2300      	movs	r3, #0
 801dd88:	9300      	str	r3, [sp, #0]
 801dd8a:	4b10      	ldr	r3, [pc, #64]	; (801ddcc <RadioInit+0x9c>)
 801dd8c:	2200      	movs	r2, #0
 801dd8e:	f04f 31ff 	mov.w	r1, #4294967295
 801dd92:	480f      	ldr	r0, [pc, #60]	; (801ddd0 <RadioInit+0xa0>)
 801dd94:	f003 f8fe 	bl	8020f94 <UTIL_TIMER_Create>
 801dd98:	2300      	movs	r3, #0
 801dd9a:	9300      	str	r3, [sp, #0]
 801dd9c:	4b0d      	ldr	r3, [pc, #52]	; (801ddd4 <RadioInit+0xa4>)
 801dd9e:	2200      	movs	r2, #0
 801dda0:	f04f 31ff 	mov.w	r1, #4294967295
 801dda4:	480c      	ldr	r0, [pc, #48]	; (801ddd8 <RadioInit+0xa8>)
 801dda6:	f003 f8f5 	bl	8020f94 <UTIL_TIMER_Create>
 801ddaa:	4809      	ldr	r0, [pc, #36]	; (801ddd0 <RadioInit+0xa0>)
 801ddac:	f003 f996 	bl	80210dc <UTIL_TIMER_Stop>
 801ddb0:	4809      	ldr	r0, [pc, #36]	; (801ddd8 <RadioInit+0xa8>)
 801ddb2:	f003 f993 	bl	80210dc <UTIL_TIMER_Stop>
 801ddb6:	bf00      	nop
 801ddb8:	3708      	adds	r7, #8
 801ddba:	46bd      	mov	sp, r7
 801ddbc:	bd80      	pop	{r7, pc}
 801ddbe:	bf00      	nop
 801ddc0:	20001944 	.word	0x20001944
 801ddc4:	20001ffc 	.word	0x20001ffc
 801ddc8:	0801edf9 	.word	0x0801edf9
 801ddcc:	0801ed81 	.word	0x0801ed81
 801ddd0:	20002054 	.word	0x20002054
 801ddd4:	0801edbd 	.word	0x0801edbd
 801ddd8:	2000206c 	.word	0x2000206c

0801dddc <RadioGetStatus>:
 801dddc:	b580      	push	{r7, lr}
 801ddde:	af00      	add	r7, sp, #0
 801dde0:	f001 fae8 	bl	801f3b4 <SUBGRF_GetOperatingMode>
 801dde4:	4603      	mov	r3, r0
 801dde6:	2b07      	cmp	r3, #7
 801dde8:	d00a      	beq.n	801de00 <RadioGetStatus+0x24>
 801ddea:	2b07      	cmp	r3, #7
 801ddec:	dc0a      	bgt.n	801de04 <RadioGetStatus+0x28>
 801ddee:	2b04      	cmp	r3, #4
 801ddf0:	d002      	beq.n	801ddf8 <RadioGetStatus+0x1c>
 801ddf2:	2b05      	cmp	r3, #5
 801ddf4:	d002      	beq.n	801ddfc <RadioGetStatus+0x20>
 801ddf6:	e005      	b.n	801de04 <RadioGetStatus+0x28>
 801ddf8:	2302      	movs	r3, #2
 801ddfa:	e004      	b.n	801de06 <RadioGetStatus+0x2a>
 801ddfc:	2301      	movs	r3, #1
 801ddfe:	e002      	b.n	801de06 <RadioGetStatus+0x2a>
 801de00:	2303      	movs	r3, #3
 801de02:	e000      	b.n	801de06 <RadioGetStatus+0x2a>
 801de04:	2300      	movs	r3, #0
 801de06:	4618      	mov	r0, r3
 801de08:	bd80      	pop	{r7, pc}
	...

0801de0c <RadioSetModem>:
 801de0c:	b580      	push	{r7, lr}
 801de0e:	b082      	sub	sp, #8
 801de10:	af00      	add	r7, sp, #0
 801de12:	4603      	mov	r3, r0
 801de14:	71fb      	strb	r3, [r7, #7]
 801de16:	4a19      	ldr	r2, [pc, #100]	; (801de7c <RadioSetModem+0x70>)
 801de18:	79fb      	ldrb	r3, [r7, #7]
 801de1a:	7013      	strb	r3, [r2, #0]
 801de1c:	79fb      	ldrb	r3, [r7, #7]
 801de1e:	2b04      	cmp	r3, #4
 801de20:	d023      	beq.n	801de6a <RadioSetModem+0x5e>
 801de22:	2b04      	cmp	r3, #4
 801de24:	dc03      	bgt.n	801de2e <RadioSetModem+0x22>
 801de26:	2b01      	cmp	r3, #1
 801de28:	d008      	beq.n	801de3c <RadioSetModem+0x30>
 801de2a:	2b03      	cmp	r3, #3
 801de2c:	d019      	beq.n	801de62 <RadioSetModem+0x56>
 801de2e:	2000      	movs	r0, #0
 801de30:	f001 fea2 	bl	801fb78 <SUBGRF_SetPacketType>
 801de34:	4b11      	ldr	r3, [pc, #68]	; (801de7c <RadioSetModem+0x70>)
 801de36:	2200      	movs	r2, #0
 801de38:	735a      	strb	r2, [r3, #13]
 801de3a:	e01b      	b.n	801de74 <RadioSetModem+0x68>
 801de3c:	2001      	movs	r0, #1
 801de3e:	f001 fe9b 	bl	801fb78 <SUBGRF_SetPacketType>
 801de42:	4b0e      	ldr	r3, [pc, #56]	; (801de7c <RadioSetModem+0x70>)
 801de44:	7b5a      	ldrb	r2, [r3, #13]
 801de46:	4b0d      	ldr	r3, [pc, #52]	; (801de7c <RadioSetModem+0x70>)
 801de48:	7b1b      	ldrb	r3, [r3, #12]
 801de4a:	429a      	cmp	r2, r3
 801de4c:	d011      	beq.n	801de72 <RadioSetModem+0x66>
 801de4e:	4b0b      	ldr	r3, [pc, #44]	; (801de7c <RadioSetModem+0x70>)
 801de50:	7b1a      	ldrb	r2, [r3, #12]
 801de52:	4b0a      	ldr	r3, [pc, #40]	; (801de7c <RadioSetModem+0x70>)
 801de54:	735a      	strb	r2, [r3, #13]
 801de56:	4b09      	ldr	r3, [pc, #36]	; (801de7c <RadioSetModem+0x70>)
 801de58:	7b5b      	ldrb	r3, [r3, #13]
 801de5a:	4618      	mov	r0, r3
 801de5c:	f000 ff5a 	bl	801ed14 <RadioSetPublicNetwork>
 801de60:	e007      	b.n	801de72 <RadioSetModem+0x66>
 801de62:	2002      	movs	r0, #2
 801de64:	f001 fe88 	bl	801fb78 <SUBGRF_SetPacketType>
 801de68:	e004      	b.n	801de74 <RadioSetModem+0x68>
 801de6a:	2000      	movs	r0, #0
 801de6c:	f001 fe84 	bl	801fb78 <SUBGRF_SetPacketType>
 801de70:	e000      	b.n	801de74 <RadioSetModem+0x68>
 801de72:	bf00      	nop
 801de74:	bf00      	nop
 801de76:	3708      	adds	r7, #8
 801de78:	46bd      	mov	sp, r7
 801de7a:	bd80      	pop	{r7, pc}
 801de7c:	20001ffc 	.word	0x20001ffc

0801de80 <RadioSetChannel>:
 801de80:	b580      	push	{r7, lr}
 801de82:	b082      	sub	sp, #8
 801de84:	af00      	add	r7, sp, #0
 801de86:	6078      	str	r0, [r7, #4]
 801de88:	6878      	ldr	r0, [r7, #4]
 801de8a:	f001 fe31 	bl	801faf0 <SUBGRF_SetRfFrequency>
 801de8e:	bf00      	nop
 801de90:	3708      	adds	r7, #8
 801de92:	46bd      	mov	sp, r7
 801de94:	bd80      	pop	{r7, pc}

0801de96 <RadioIsChannelFree>:
 801de96:	b580      	push	{r7, lr}
 801de98:	b090      	sub	sp, #64	; 0x40
 801de9a:	af0a      	add	r7, sp, #40	; 0x28
 801de9c:	60f8      	str	r0, [r7, #12]
 801de9e:	60b9      	str	r1, [r7, #8]
 801dea0:	603b      	str	r3, [r7, #0]
 801dea2:	4613      	mov	r3, r2
 801dea4:	80fb      	strh	r3, [r7, #6]
 801dea6:	2301      	movs	r3, #1
 801dea8:	75fb      	strb	r3, [r7, #23]
 801deaa:	2300      	movs	r3, #0
 801deac:	82bb      	strh	r3, [r7, #20]
 801deae:	2300      	movs	r3, #0
 801deb0:	613b      	str	r3, [r7, #16]
 801deb2:	f000 fde6 	bl	801ea82 <RadioStandby>
 801deb6:	2000      	movs	r0, #0
 801deb8:	f7ff ffa8 	bl	801de0c <RadioSetModem>
 801debc:	68f8      	ldr	r0, [r7, #12]
 801debe:	f7ff ffdf 	bl	801de80 <RadioSetChannel>
 801dec2:	2301      	movs	r3, #1
 801dec4:	9309      	str	r3, [sp, #36]	; 0x24
 801dec6:	2300      	movs	r3, #0
 801dec8:	9308      	str	r3, [sp, #32]
 801deca:	2300      	movs	r3, #0
 801decc:	9307      	str	r3, [sp, #28]
 801dece:	2300      	movs	r3, #0
 801ded0:	9306      	str	r3, [sp, #24]
 801ded2:	2300      	movs	r3, #0
 801ded4:	9305      	str	r3, [sp, #20]
 801ded6:	2300      	movs	r3, #0
 801ded8:	9304      	str	r3, [sp, #16]
 801deda:	2300      	movs	r3, #0
 801dedc:	9303      	str	r3, [sp, #12]
 801dede:	2300      	movs	r3, #0
 801dee0:	9302      	str	r3, [sp, #8]
 801dee2:	2303      	movs	r3, #3
 801dee4:	9301      	str	r3, [sp, #4]
 801dee6:	68bb      	ldr	r3, [r7, #8]
 801dee8:	9300      	str	r3, [sp, #0]
 801deea:	2300      	movs	r3, #0
 801deec:	f44f 7216 	mov.w	r2, #600	; 0x258
 801def0:	68b9      	ldr	r1, [r7, #8]
 801def2:	2000      	movs	r0, #0
 801def4:	f000 f840 	bl	801df78 <RadioSetRxConfig>
 801def8:	2000      	movs	r0, #0
 801defa:	f000 fdc9 	bl	801ea90 <RadioRx>
 801defe:	f000 ff37 	bl	801ed70 <RadioGetWakeupTime>
 801df02:	4603      	mov	r3, r0
 801df04:	4618      	mov	r0, r3
 801df06:	f7e8 fa6c 	bl	80063e2 <HAL_Delay>
 801df0a:	f003 fa01 	bl	8021310 <UTIL_TIMER_GetCurrentTime>
 801df0e:	6138      	str	r0, [r7, #16]
 801df10:	e00d      	b.n	801df2e <RadioIsChannelFree+0x98>
 801df12:	2000      	movs	r0, #0
 801df14:	f000 fe7c 	bl	801ec10 <RadioRssi>
 801df18:	4603      	mov	r3, r0
 801df1a:	82bb      	strh	r3, [r7, #20]
 801df1c:	f9b7 2014 	ldrsh.w	r2, [r7, #20]
 801df20:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 801df24:	429a      	cmp	r2, r3
 801df26:	dd02      	ble.n	801df2e <RadioIsChannelFree+0x98>
 801df28:	2300      	movs	r3, #0
 801df2a:	75fb      	strb	r3, [r7, #23]
 801df2c:	e006      	b.n	801df3c <RadioIsChannelFree+0xa6>
 801df2e:	6938      	ldr	r0, [r7, #16]
 801df30:	f003 fa00 	bl	8021334 <UTIL_TIMER_GetElapsedTime>
 801df34:	4602      	mov	r2, r0
 801df36:	683b      	ldr	r3, [r7, #0]
 801df38:	4293      	cmp	r3, r2
 801df3a:	d8ea      	bhi.n	801df12 <RadioIsChannelFree+0x7c>
 801df3c:	f000 fda1 	bl	801ea82 <RadioStandby>
 801df40:	7dfb      	ldrb	r3, [r7, #23]
 801df42:	4618      	mov	r0, r3
 801df44:	3718      	adds	r7, #24
 801df46:	46bd      	mov	sp, r7
 801df48:	bd80      	pop	{r7, pc}

0801df4a <RadioRandom>:
 801df4a:	b580      	push	{r7, lr}
 801df4c:	b082      	sub	sp, #8
 801df4e:	af00      	add	r7, sp, #0
 801df50:	2300      	movs	r3, #0
 801df52:	607b      	str	r3, [r7, #4]
 801df54:	2001      	movs	r0, #1
 801df56:	f7ff ff59 	bl	801de0c <RadioSetModem>
 801df5a:	2300      	movs	r3, #0
 801df5c:	2200      	movs	r2, #0
 801df5e:	2100      	movs	r1, #0
 801df60:	2000      	movs	r0, #0
 801df62:	f001 fd65 	bl	801fa30 <SUBGRF_SetDioIrqParams>
 801df66:	f001 faf6 	bl	801f556 <SUBGRF_GetRandom>
 801df6a:	6078      	str	r0, [r7, #4]
 801df6c:	687b      	ldr	r3, [r7, #4]
 801df6e:	4618      	mov	r0, r3
 801df70:	3708      	adds	r7, #8
 801df72:	46bd      	mov	sp, r7
 801df74:	bd80      	pop	{r7, pc}
	...

0801df78 <RadioSetRxConfig>:
 801df78:	b580      	push	{r7, lr}
 801df7a:	b08a      	sub	sp, #40	; 0x28
 801df7c:	af00      	add	r7, sp, #0
 801df7e:	60b9      	str	r1, [r7, #8]
 801df80:	607a      	str	r2, [r7, #4]
 801df82:	461a      	mov	r2, r3
 801df84:	4603      	mov	r3, r0
 801df86:	73fb      	strb	r3, [r7, #15]
 801df88:	4613      	mov	r3, r2
 801df8a:	73bb      	strb	r3, [r7, #14]
 801df8c:	4abc      	ldr	r2, [pc, #752]	; (801e280 <RadioSetRxConfig+0x308>)
 801df8e:	f897 3054 	ldrb.w	r3, [r7, #84]	; 0x54
 801df92:	7053      	strb	r3, [r2, #1]
 801df94:	f897 3054 	ldrb.w	r3, [r7, #84]	; 0x54
 801df98:	2b00      	cmp	r3, #0
 801df9a:	d001      	beq.n	801dfa0 <RadioSetRxConfig+0x28>
 801df9c:	2300      	movs	r3, #0
 801df9e:	873b      	strh	r3, [r7, #56]	; 0x38
 801dfa0:	f897 303c 	ldrb.w	r3, [r7, #60]	; 0x3c
 801dfa4:	2b00      	cmp	r3, #0
 801dfa6:	d004      	beq.n	801dfb2 <RadioSetRxConfig+0x3a>
 801dfa8:	4ab6      	ldr	r2, [pc, #728]	; (801e284 <RadioSetRxConfig+0x30c>)
 801dfaa:	f897 3040 	ldrb.w	r3, [r7, #64]	; 0x40
 801dfae:	7013      	strb	r3, [r2, #0]
 801dfb0:	e002      	b.n	801dfb8 <RadioSetRxConfig+0x40>
 801dfb2:	4bb4      	ldr	r3, [pc, #720]	; (801e284 <RadioSetRxConfig+0x30c>)
 801dfb4:	22ff      	movs	r2, #255	; 0xff
 801dfb6:	701a      	strb	r2, [r3, #0]
 801dfb8:	7bfb      	ldrb	r3, [r7, #15]
 801dfba:	2b04      	cmp	r3, #4
 801dfbc:	d009      	beq.n	801dfd2 <RadioSetRxConfig+0x5a>
 801dfbe:	2b04      	cmp	r3, #4
 801dfc0:	f300 81da 	bgt.w	801e378 <RadioSetRxConfig+0x400>
 801dfc4:	2b00      	cmp	r3, #0
 801dfc6:	f000 80bf 	beq.w	801e148 <RadioSetRxConfig+0x1d0>
 801dfca:	2b01      	cmp	r3, #1
 801dfcc:	f000 812c 	beq.w	801e228 <RadioSetRxConfig+0x2b0>
 801dfd0:	e1d2      	b.n	801e378 <RadioSetRxConfig+0x400>
 801dfd2:	2001      	movs	r0, #1
 801dfd4:	f001 fc1a 	bl	801f80c <SUBGRF_SetStopRxTimerOnPreambleDetect>
 801dfd8:	4ba9      	ldr	r3, [pc, #676]	; (801e280 <RadioSetRxConfig+0x308>)
 801dfda:	2200      	movs	r2, #0
 801dfdc:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 801dfe0:	4aa7      	ldr	r2, [pc, #668]	; (801e280 <RadioSetRxConfig+0x308>)
 801dfe2:	687b      	ldr	r3, [r7, #4]
 801dfe4:	63d3      	str	r3, [r2, #60]	; 0x3c
 801dfe6:	4ba6      	ldr	r3, [pc, #664]	; (801e280 <RadioSetRxConfig+0x308>)
 801dfe8:	2209      	movs	r2, #9
 801dfea:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 801dfee:	4ba4      	ldr	r3, [pc, #656]	; (801e280 <RadioSetRxConfig+0x308>)
 801dff0:	f44f 7248 	mov.w	r2, #800	; 0x320
 801dff4:	641a      	str	r2, [r3, #64]	; 0x40
 801dff6:	68b8      	ldr	r0, [r7, #8]
 801dff8:	f7ff fe72 	bl	801dce0 <RadioGetFskBandwidthRegValue>
 801dffc:	4603      	mov	r3, r0
 801dffe:	461a      	mov	r2, r3
 801e000:	4b9f      	ldr	r3, [pc, #636]	; (801e280 <RadioSetRxConfig+0x308>)
 801e002:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 801e006:	4b9e      	ldr	r3, [pc, #632]	; (801e280 <RadioSetRxConfig+0x308>)
 801e008:	2200      	movs	r2, #0
 801e00a:	739a      	strb	r2, [r3, #14]
 801e00c:	8ebb      	ldrh	r3, [r7, #52]	; 0x34
 801e00e:	00db      	lsls	r3, r3, #3
 801e010:	b29a      	uxth	r2, r3
 801e012:	4b9b      	ldr	r3, [pc, #620]	; (801e280 <RadioSetRxConfig+0x308>)
 801e014:	821a      	strh	r2, [r3, #16]
 801e016:	4b9a      	ldr	r3, [pc, #616]	; (801e280 <RadioSetRxConfig+0x308>)
 801e018:	2200      	movs	r2, #0
 801e01a:	749a      	strb	r2, [r3, #18]
 801e01c:	4b98      	ldr	r3, [pc, #608]	; (801e280 <RadioSetRxConfig+0x308>)
 801e01e:	2210      	movs	r2, #16
 801e020:	74da      	strb	r2, [r3, #19]
 801e022:	4b97      	ldr	r3, [pc, #604]	; (801e280 <RadioSetRxConfig+0x308>)
 801e024:	2200      	movs	r2, #0
 801e026:	751a      	strb	r2, [r3, #20]
 801e028:	4b95      	ldr	r3, [pc, #596]	; (801e280 <RadioSetRxConfig+0x308>)
 801e02a:	2200      	movs	r2, #0
 801e02c:	755a      	strb	r2, [r3, #21]
 801e02e:	4b95      	ldr	r3, [pc, #596]	; (801e284 <RadioSetRxConfig+0x30c>)
 801e030:	781a      	ldrb	r2, [r3, #0]
 801e032:	4b93      	ldr	r3, [pc, #588]	; (801e280 <RadioSetRxConfig+0x308>)
 801e034:	759a      	strb	r2, [r3, #22]
 801e036:	4b92      	ldr	r3, [pc, #584]	; (801e280 <RadioSetRxConfig+0x308>)
 801e038:	2201      	movs	r2, #1
 801e03a:	75da      	strb	r2, [r3, #23]
 801e03c:	4b90      	ldr	r3, [pc, #576]	; (801e280 <RadioSetRxConfig+0x308>)
 801e03e:	2200      	movs	r2, #0
 801e040:	761a      	strb	r2, [r3, #24]
 801e042:	2004      	movs	r0, #4
 801e044:	f7ff fee2 	bl	801de0c <RadioSetModem>
 801e048:	488f      	ldr	r0, [pc, #572]	; (801e288 <RadioSetRxConfig+0x310>)
 801e04a:	f001 fe25 	bl	801fc98 <SUBGRF_SetModulationParams>
 801e04e:	488f      	ldr	r0, [pc, #572]	; (801e28c <RadioSetRxConfig+0x314>)
 801e050:	f001 fef0 	bl	801fe34 <SUBGRF_SetPacketParams>
 801e054:	4a8e      	ldr	r2, [pc, #568]	; (801e290 <RadioSetRxConfig+0x318>)
 801e056:	f107 031c 	add.w	r3, r7, #28
 801e05a:	e892 0003 	ldmia.w	r2, {r0, r1}
 801e05e:	e883 0003 	stmia.w	r3, {r0, r1}
 801e062:	f107 031c 	add.w	r3, r7, #28
 801e066:	4618      	mov	r0, r3
 801e068:	f001 f9f3 	bl	801f452 <SUBGRF_SetSyncWord>
 801e06c:	f240 10ff 	movw	r0, #511	; 0x1ff
 801e070:	f001 fa3e 	bl	801f4f0 <SUBGRF_SetWhiteningSeed>
 801e074:	f640 00b8 	movw	r0, #2232	; 0x8b8
 801e078:	f000 fde9 	bl	801ec4e <RadioRead>
 801e07c:	4603      	mov	r3, r0
 801e07e:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 801e082:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 801e086:	f023 0310 	bic.w	r3, r3, #16
 801e08a:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 801e08e:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 801e092:	4619      	mov	r1, r3
 801e094:	f640 00b8 	movw	r0, #2232	; 0x8b8
 801e098:	f000 fdc7 	bl	801ec2a <RadioWrite>
 801e09c:	2104      	movs	r1, #4
 801e09e:	f640 00b9 	movw	r0, #2233	; 0x8b9
 801e0a2:	f000 fdc2 	bl	801ec2a <RadioWrite>
 801e0a6:	f640 009b 	movw	r0, #2203	; 0x89b
 801e0aa:	f000 fdd0 	bl	801ec4e <RadioRead>
 801e0ae:	4603      	mov	r3, r0
 801e0b0:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 801e0b4:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 801e0b8:	f023 031c 	bic.w	r3, r3, #28
 801e0bc:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 801e0c0:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 801e0c4:	f043 0308 	orr.w	r3, r3, #8
 801e0c8:	b2db      	uxtb	r3, r3
 801e0ca:	4619      	mov	r1, r3
 801e0cc:	f640 009b 	movw	r0, #2203	; 0x89b
 801e0d0:	f000 fdab 	bl	801ec2a <RadioWrite>
 801e0d4:	f240 60d1 	movw	r0, #1745	; 0x6d1
 801e0d8:	f000 fdb9 	bl	801ec4e <RadioRead>
 801e0dc:	4603      	mov	r3, r0
 801e0de:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 801e0e2:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 801e0e6:	f023 0318 	bic.w	r3, r3, #24
 801e0ea:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 801e0ee:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 801e0f2:	f043 0318 	orr.w	r3, r3, #24
 801e0f6:	b2db      	uxtb	r3, r3
 801e0f8:	4619      	mov	r1, r3
 801e0fa:	f240 60d1 	movw	r0, #1745	; 0x6d1
 801e0fe:	f000 fd94 	bl	801ec2a <RadioWrite>
 801e102:	f240 60ac 	movw	r0, #1708	; 0x6ac
 801e106:	f000 fda2 	bl	801ec4e <RadioRead>
 801e10a:	4603      	mov	r3, r0
 801e10c:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 801e110:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 801e114:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 801e118:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 801e11c:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 801e120:	f043 0350 	orr.w	r3, r3, #80	; 0x50
 801e124:	b2db      	uxtb	r3, r3
 801e126:	4619      	mov	r1, r3
 801e128:	f240 60ac 	movw	r0, #1708	; 0x6ac
 801e12c:	f000 fd7d 	bl	801ec2a <RadioWrite>
 801e130:	8f3b      	ldrh	r3, [r7, #56]	; 0x38
 801e132:	f44f 52fa 	mov.w	r2, #8000	; 0x1f40
 801e136:	fb02 f303 	mul.w	r3, r2, r3
 801e13a:	461a      	mov	r2, r3
 801e13c:	687b      	ldr	r3, [r7, #4]
 801e13e:	fbb2 f3f3 	udiv	r3, r2, r3
 801e142:	4a4f      	ldr	r2, [pc, #316]	; (801e280 <RadioSetRxConfig+0x308>)
 801e144:	6093      	str	r3, [r2, #8]
 801e146:	e118      	b.n	801e37a <RadioSetRxConfig+0x402>
 801e148:	2000      	movs	r0, #0
 801e14a:	f001 fb5f 	bl	801f80c <SUBGRF_SetStopRxTimerOnPreambleDetect>
 801e14e:	4b4c      	ldr	r3, [pc, #304]	; (801e280 <RadioSetRxConfig+0x308>)
 801e150:	2200      	movs	r2, #0
 801e152:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 801e156:	4a4a      	ldr	r2, [pc, #296]	; (801e280 <RadioSetRxConfig+0x308>)
 801e158:	687b      	ldr	r3, [r7, #4]
 801e15a:	63d3      	str	r3, [r2, #60]	; 0x3c
 801e15c:	4b48      	ldr	r3, [pc, #288]	; (801e280 <RadioSetRxConfig+0x308>)
 801e15e:	220b      	movs	r2, #11
 801e160:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 801e164:	68b8      	ldr	r0, [r7, #8]
 801e166:	f7ff fdbb 	bl	801dce0 <RadioGetFskBandwidthRegValue>
 801e16a:	4603      	mov	r3, r0
 801e16c:	461a      	mov	r2, r3
 801e16e:	4b44      	ldr	r3, [pc, #272]	; (801e280 <RadioSetRxConfig+0x308>)
 801e170:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 801e174:	4b42      	ldr	r3, [pc, #264]	; (801e280 <RadioSetRxConfig+0x308>)
 801e176:	2200      	movs	r2, #0
 801e178:	739a      	strb	r2, [r3, #14]
 801e17a:	8ebb      	ldrh	r3, [r7, #52]	; 0x34
 801e17c:	00db      	lsls	r3, r3, #3
 801e17e:	b29a      	uxth	r2, r3
 801e180:	4b3f      	ldr	r3, [pc, #252]	; (801e280 <RadioSetRxConfig+0x308>)
 801e182:	821a      	strh	r2, [r3, #16]
 801e184:	4b3e      	ldr	r3, [pc, #248]	; (801e280 <RadioSetRxConfig+0x308>)
 801e186:	2204      	movs	r2, #4
 801e188:	749a      	strb	r2, [r3, #18]
 801e18a:	4b3d      	ldr	r3, [pc, #244]	; (801e280 <RadioSetRxConfig+0x308>)
 801e18c:	2218      	movs	r2, #24
 801e18e:	74da      	strb	r2, [r3, #19]
 801e190:	4b3b      	ldr	r3, [pc, #236]	; (801e280 <RadioSetRxConfig+0x308>)
 801e192:	2200      	movs	r2, #0
 801e194:	751a      	strb	r2, [r3, #20]
 801e196:	f897 303c 	ldrb.w	r3, [r7, #60]	; 0x3c
 801e19a:	f083 0301 	eor.w	r3, r3, #1
 801e19e:	b2db      	uxtb	r3, r3
 801e1a0:	461a      	mov	r2, r3
 801e1a2:	4b37      	ldr	r3, [pc, #220]	; (801e280 <RadioSetRxConfig+0x308>)
 801e1a4:	755a      	strb	r2, [r3, #21]
 801e1a6:	4b37      	ldr	r3, [pc, #220]	; (801e284 <RadioSetRxConfig+0x30c>)
 801e1a8:	781a      	ldrb	r2, [r3, #0]
 801e1aa:	4b35      	ldr	r3, [pc, #212]	; (801e280 <RadioSetRxConfig+0x308>)
 801e1ac:	759a      	strb	r2, [r3, #22]
 801e1ae:	f897 3044 	ldrb.w	r3, [r7, #68]	; 0x44
 801e1b2:	2b00      	cmp	r3, #0
 801e1b4:	d003      	beq.n	801e1be <RadioSetRxConfig+0x246>
 801e1b6:	4b32      	ldr	r3, [pc, #200]	; (801e280 <RadioSetRxConfig+0x308>)
 801e1b8:	22f2      	movs	r2, #242	; 0xf2
 801e1ba:	75da      	strb	r2, [r3, #23]
 801e1bc:	e002      	b.n	801e1c4 <RadioSetRxConfig+0x24c>
 801e1be:	4b30      	ldr	r3, [pc, #192]	; (801e280 <RadioSetRxConfig+0x308>)
 801e1c0:	2201      	movs	r2, #1
 801e1c2:	75da      	strb	r2, [r3, #23]
 801e1c4:	4b2e      	ldr	r3, [pc, #184]	; (801e280 <RadioSetRxConfig+0x308>)
 801e1c6:	2201      	movs	r2, #1
 801e1c8:	761a      	strb	r2, [r3, #24]
 801e1ca:	f000 fc5a 	bl	801ea82 <RadioStandby>
 801e1ce:	4b2c      	ldr	r3, [pc, #176]	; (801e280 <RadioSetRxConfig+0x308>)
 801e1d0:	f893 3038 	ldrb.w	r3, [r3, #56]	; 0x38
 801e1d4:	2b00      	cmp	r3, #0
 801e1d6:	bf14      	ite	ne
 801e1d8:	2301      	movne	r3, #1
 801e1da:	2300      	moveq	r3, #0
 801e1dc:	b2db      	uxtb	r3, r3
 801e1de:	4618      	mov	r0, r3
 801e1e0:	f7ff fe14 	bl	801de0c <RadioSetModem>
 801e1e4:	4828      	ldr	r0, [pc, #160]	; (801e288 <RadioSetRxConfig+0x310>)
 801e1e6:	f001 fd57 	bl	801fc98 <SUBGRF_SetModulationParams>
 801e1ea:	4828      	ldr	r0, [pc, #160]	; (801e28c <RadioSetRxConfig+0x314>)
 801e1ec:	f001 fe22 	bl	801fe34 <SUBGRF_SetPacketParams>
 801e1f0:	4a28      	ldr	r2, [pc, #160]	; (801e294 <RadioSetRxConfig+0x31c>)
 801e1f2:	f107 0314 	add.w	r3, r7, #20
 801e1f6:	e892 0003 	ldmia.w	r2, {r0, r1}
 801e1fa:	e883 0003 	stmia.w	r3, {r0, r1}
 801e1fe:	f107 0314 	add.w	r3, r7, #20
 801e202:	4618      	mov	r0, r3
 801e204:	f001 f925 	bl	801f452 <SUBGRF_SetSyncWord>
 801e208:	f240 10ff 	movw	r0, #511	; 0x1ff
 801e20c:	f001 f970 	bl	801f4f0 <SUBGRF_SetWhiteningSeed>
 801e210:	8f3b      	ldrh	r3, [r7, #56]	; 0x38
 801e212:	f44f 52fa 	mov.w	r2, #8000	; 0x1f40
 801e216:	fb02 f303 	mul.w	r3, r2, r3
 801e21a:	461a      	mov	r2, r3
 801e21c:	687b      	ldr	r3, [r7, #4]
 801e21e:	fbb2 f3f3 	udiv	r3, r2, r3
 801e222:	4a17      	ldr	r2, [pc, #92]	; (801e280 <RadioSetRxConfig+0x308>)
 801e224:	6093      	str	r3, [r2, #8]
 801e226:	e0a8      	b.n	801e37a <RadioSetRxConfig+0x402>
 801e228:	2000      	movs	r0, #0
 801e22a:	f001 faef 	bl	801f80c <SUBGRF_SetStopRxTimerOnPreambleDetect>
 801e22e:	4b14      	ldr	r3, [pc, #80]	; (801e280 <RadioSetRxConfig+0x308>)
 801e230:	2201      	movs	r2, #1
 801e232:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 801e236:	687b      	ldr	r3, [r7, #4]
 801e238:	b2da      	uxtb	r2, r3
 801e23a:	4b11      	ldr	r3, [pc, #68]	; (801e280 <RadioSetRxConfig+0x308>)
 801e23c:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 801e240:	4a15      	ldr	r2, [pc, #84]	; (801e298 <RadioSetRxConfig+0x320>)
 801e242:	68bb      	ldr	r3, [r7, #8]
 801e244:	4413      	add	r3, r2
 801e246:	781a      	ldrb	r2, [r3, #0]
 801e248:	4b0d      	ldr	r3, [pc, #52]	; (801e280 <RadioSetRxConfig+0x308>)
 801e24a:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 801e24e:	4a0c      	ldr	r2, [pc, #48]	; (801e280 <RadioSetRxConfig+0x308>)
 801e250:	7bbb      	ldrb	r3, [r7, #14]
 801e252:	f882 3052 	strb.w	r3, [r2, #82]	; 0x52
 801e256:	68bb      	ldr	r3, [r7, #8]
 801e258:	2b00      	cmp	r3, #0
 801e25a:	d105      	bne.n	801e268 <RadioSetRxConfig+0x2f0>
 801e25c:	687b      	ldr	r3, [r7, #4]
 801e25e:	2b0b      	cmp	r3, #11
 801e260:	d008      	beq.n	801e274 <RadioSetRxConfig+0x2fc>
 801e262:	687b      	ldr	r3, [r7, #4]
 801e264:	2b0c      	cmp	r3, #12
 801e266:	d005      	beq.n	801e274 <RadioSetRxConfig+0x2fc>
 801e268:	68bb      	ldr	r3, [r7, #8]
 801e26a:	2b01      	cmp	r3, #1
 801e26c:	d116      	bne.n	801e29c <RadioSetRxConfig+0x324>
 801e26e:	687b      	ldr	r3, [r7, #4]
 801e270:	2b0c      	cmp	r3, #12
 801e272:	d113      	bne.n	801e29c <RadioSetRxConfig+0x324>
 801e274:	4b02      	ldr	r3, [pc, #8]	; (801e280 <RadioSetRxConfig+0x308>)
 801e276:	2201      	movs	r2, #1
 801e278:	f883 2053 	strb.w	r2, [r3, #83]	; 0x53
 801e27c:	e012      	b.n	801e2a4 <RadioSetRxConfig+0x32c>
 801e27e:	bf00      	nop
 801e280:	20001ffc 	.word	0x20001ffc
 801e284:	200001c0 	.word	0x200001c0
 801e288:	20002034 	.word	0x20002034
 801e28c:	2000200a 	.word	0x2000200a
 801e290:	080261d8 	.word	0x080261d8
 801e294:	080261e0 	.word	0x080261e0
 801e298:	08026968 	.word	0x08026968
 801e29c:	4b39      	ldr	r3, [pc, #228]	; (801e384 <RadioSetRxConfig+0x40c>)
 801e29e:	2200      	movs	r2, #0
 801e2a0:	f883 2053 	strb.w	r2, [r3, #83]	; 0x53
 801e2a4:	4b37      	ldr	r3, [pc, #220]	; (801e384 <RadioSetRxConfig+0x40c>)
 801e2a6:	2201      	movs	r2, #1
 801e2a8:	739a      	strb	r2, [r3, #14]
 801e2aa:	4b36      	ldr	r3, [pc, #216]	; (801e384 <RadioSetRxConfig+0x40c>)
 801e2ac:	f893 3050 	ldrb.w	r3, [r3, #80]	; 0x50
 801e2b0:	2b05      	cmp	r3, #5
 801e2b2:	d004      	beq.n	801e2be <RadioSetRxConfig+0x346>
 801e2b4:	4b33      	ldr	r3, [pc, #204]	; (801e384 <RadioSetRxConfig+0x40c>)
 801e2b6:	f893 3050 	ldrb.w	r3, [r3, #80]	; 0x50
 801e2ba:	2b06      	cmp	r3, #6
 801e2bc:	d10a      	bne.n	801e2d4 <RadioSetRxConfig+0x35c>
 801e2be:	8ebb      	ldrh	r3, [r7, #52]	; 0x34
 801e2c0:	2b0b      	cmp	r3, #11
 801e2c2:	d803      	bhi.n	801e2cc <RadioSetRxConfig+0x354>
 801e2c4:	4b2f      	ldr	r3, [pc, #188]	; (801e384 <RadioSetRxConfig+0x40c>)
 801e2c6:	220c      	movs	r2, #12
 801e2c8:	839a      	strh	r2, [r3, #28]
 801e2ca:	e006      	b.n	801e2da <RadioSetRxConfig+0x362>
 801e2cc:	4a2d      	ldr	r2, [pc, #180]	; (801e384 <RadioSetRxConfig+0x40c>)
 801e2ce:	8ebb      	ldrh	r3, [r7, #52]	; 0x34
 801e2d0:	8393      	strh	r3, [r2, #28]
 801e2d2:	e002      	b.n	801e2da <RadioSetRxConfig+0x362>
 801e2d4:	4a2b      	ldr	r2, [pc, #172]	; (801e384 <RadioSetRxConfig+0x40c>)
 801e2d6:	8ebb      	ldrh	r3, [r7, #52]	; 0x34
 801e2d8:	8393      	strh	r3, [r2, #28]
 801e2da:	f897 203c 	ldrb.w	r2, [r7, #60]	; 0x3c
 801e2de:	4b29      	ldr	r3, [pc, #164]	; (801e384 <RadioSetRxConfig+0x40c>)
 801e2e0:	779a      	strb	r2, [r3, #30]
 801e2e2:	4b29      	ldr	r3, [pc, #164]	; (801e388 <RadioSetRxConfig+0x410>)
 801e2e4:	781a      	ldrb	r2, [r3, #0]
 801e2e6:	4b27      	ldr	r3, [pc, #156]	; (801e384 <RadioSetRxConfig+0x40c>)
 801e2e8:	77da      	strb	r2, [r3, #31]
 801e2ea:	f897 2044 	ldrb.w	r2, [r7, #68]	; 0x44
 801e2ee:	4b25      	ldr	r3, [pc, #148]	; (801e384 <RadioSetRxConfig+0x40c>)
 801e2f0:	f883 2020 	strb.w	r2, [r3, #32]
 801e2f4:	f897 2050 	ldrb.w	r2, [r7, #80]	; 0x50
 801e2f8:	4b22      	ldr	r3, [pc, #136]	; (801e384 <RadioSetRxConfig+0x40c>)
 801e2fa:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 801e2fe:	f000 fbc0 	bl	801ea82 <RadioStandby>
 801e302:	4b20      	ldr	r3, [pc, #128]	; (801e384 <RadioSetRxConfig+0x40c>)
 801e304:	f893 3038 	ldrb.w	r3, [r3, #56]	; 0x38
 801e308:	2b00      	cmp	r3, #0
 801e30a:	bf14      	ite	ne
 801e30c:	2301      	movne	r3, #1
 801e30e:	2300      	moveq	r3, #0
 801e310:	b2db      	uxtb	r3, r3
 801e312:	4618      	mov	r0, r3
 801e314:	f7ff fd7a 	bl	801de0c <RadioSetModem>
 801e318:	481c      	ldr	r0, [pc, #112]	; (801e38c <RadioSetRxConfig+0x414>)
 801e31a:	f001 fcbd 	bl	801fc98 <SUBGRF_SetModulationParams>
 801e31e:	481c      	ldr	r0, [pc, #112]	; (801e390 <RadioSetRxConfig+0x418>)
 801e320:	f001 fd88 	bl	801fe34 <SUBGRF_SetPacketParams>
 801e324:	8f3b      	ldrh	r3, [r7, #56]	; 0x38
 801e326:	b2db      	uxtb	r3, r3
 801e328:	4618      	mov	r0, r3
 801e32a:	f001 fa81 	bl	801f830 <SUBGRF_SetLoRaSymbNumTimeout>
 801e32e:	4b15      	ldr	r3, [pc, #84]	; (801e384 <RadioSetRxConfig+0x40c>)
 801e330:	f893 3021 	ldrb.w	r3, [r3, #33]	; 0x21
 801e334:	2b01      	cmp	r3, #1
 801e336:	d10d      	bne.n	801e354 <RadioSetRxConfig+0x3dc>
 801e338:	f240 7036 	movw	r0, #1846	; 0x736
 801e33c:	f001 fee2 	bl	8020104 <SUBGRF_ReadRegister>
 801e340:	4603      	mov	r3, r0
 801e342:	f023 0304 	bic.w	r3, r3, #4
 801e346:	b2db      	uxtb	r3, r3
 801e348:	4619      	mov	r1, r3
 801e34a:	f240 7036 	movw	r0, #1846	; 0x736
 801e34e:	f001 fec5 	bl	80200dc <SUBGRF_WriteRegister>
 801e352:	e00c      	b.n	801e36e <RadioSetRxConfig+0x3f6>
 801e354:	f240 7036 	movw	r0, #1846	; 0x736
 801e358:	f001 fed4 	bl	8020104 <SUBGRF_ReadRegister>
 801e35c:	4603      	mov	r3, r0
 801e35e:	f043 0304 	orr.w	r3, r3, #4
 801e362:	b2db      	uxtb	r3, r3
 801e364:	4619      	mov	r1, r3
 801e366:	f240 7036 	movw	r0, #1846	; 0x736
 801e36a:	f001 feb7 	bl	80200dc <SUBGRF_WriteRegister>
 801e36e:	4b05      	ldr	r3, [pc, #20]	; (801e384 <RadioSetRxConfig+0x40c>)
 801e370:	f64f 72ff 	movw	r2, #65535	; 0xffff
 801e374:	609a      	str	r2, [r3, #8]
 801e376:	e000      	b.n	801e37a <RadioSetRxConfig+0x402>
 801e378:	bf00      	nop
 801e37a:	bf00      	nop
 801e37c:	3728      	adds	r7, #40	; 0x28
 801e37e:	46bd      	mov	sp, r7
 801e380:	bd80      	pop	{r7, pc}
 801e382:	bf00      	nop
 801e384:	20001ffc 	.word	0x20001ffc
 801e388:	200001c0 	.word	0x200001c0
 801e38c:	20002034 	.word	0x20002034
 801e390:	2000200a 	.word	0x2000200a

0801e394 <RadioSetTxConfig>:
 801e394:	b580      	push	{r7, lr}
 801e396:	b086      	sub	sp, #24
 801e398:	af00      	add	r7, sp, #0
 801e39a:	60ba      	str	r2, [r7, #8]
 801e39c:	607b      	str	r3, [r7, #4]
 801e39e:	4603      	mov	r3, r0
 801e3a0:	73fb      	strb	r3, [r7, #15]
 801e3a2:	460b      	mov	r3, r1
 801e3a4:	73bb      	strb	r3, [r7, #14]
 801e3a6:	7bfb      	ldrb	r3, [r7, #15]
 801e3a8:	2b03      	cmp	r3, #3
 801e3aa:	d007      	beq.n	801e3bc <RadioSetTxConfig+0x28>
 801e3ac:	2b03      	cmp	r3, #3
 801e3ae:	f300 80e5 	bgt.w	801e57c <RadioSetTxConfig+0x1e8>
 801e3b2:	2b00      	cmp	r3, #0
 801e3b4:	d014      	beq.n	801e3e0 <RadioSetTxConfig+0x4c>
 801e3b6:	2b01      	cmp	r3, #1
 801e3b8:	d073      	beq.n	801e4a2 <RadioSetTxConfig+0x10e>
 801e3ba:	e0df      	b.n	801e57c <RadioSetTxConfig+0x1e8>
 801e3bc:	2003      	movs	r0, #3
 801e3be:	f7ff fd25 	bl	801de0c <RadioSetModem>
 801e3c2:	4b89      	ldr	r3, [pc, #548]	; (801e5e8 <RadioSetTxConfig+0x254>)
 801e3c4:	2202      	movs	r2, #2
 801e3c6:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 801e3ca:	4a87      	ldr	r2, [pc, #540]	; (801e5e8 <RadioSetTxConfig+0x254>)
 801e3cc:	6a3b      	ldr	r3, [r7, #32]
 801e3ce:	6493      	str	r3, [r2, #72]	; 0x48
 801e3d0:	4b85      	ldr	r3, [pc, #532]	; (801e5e8 <RadioSetTxConfig+0x254>)
 801e3d2:	2216      	movs	r2, #22
 801e3d4:	f883 204c 	strb.w	r2, [r3, #76]	; 0x4c
 801e3d8:	4884      	ldr	r0, [pc, #528]	; (801e5ec <RadioSetTxConfig+0x258>)
 801e3da:	f001 fc5d 	bl	801fc98 <SUBGRF_SetModulationParams>
 801e3de:	e0ce      	b.n	801e57e <RadioSetTxConfig+0x1ea>
 801e3e0:	4b81      	ldr	r3, [pc, #516]	; (801e5e8 <RadioSetTxConfig+0x254>)
 801e3e2:	2200      	movs	r2, #0
 801e3e4:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 801e3e8:	4a7f      	ldr	r2, [pc, #508]	; (801e5e8 <RadioSetTxConfig+0x254>)
 801e3ea:	6a3b      	ldr	r3, [r7, #32]
 801e3ec:	63d3      	str	r3, [r2, #60]	; 0x3c
 801e3ee:	4b7e      	ldr	r3, [pc, #504]	; (801e5e8 <RadioSetTxConfig+0x254>)
 801e3f0:	220b      	movs	r2, #11
 801e3f2:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 801e3f6:	6878      	ldr	r0, [r7, #4]
 801e3f8:	f7ff fc72 	bl	801dce0 <RadioGetFskBandwidthRegValue>
 801e3fc:	4603      	mov	r3, r0
 801e3fe:	461a      	mov	r2, r3
 801e400:	4b79      	ldr	r3, [pc, #484]	; (801e5e8 <RadioSetTxConfig+0x254>)
 801e402:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 801e406:	4a78      	ldr	r2, [pc, #480]	; (801e5e8 <RadioSetTxConfig+0x254>)
 801e408:	68bb      	ldr	r3, [r7, #8]
 801e40a:	6413      	str	r3, [r2, #64]	; 0x40
 801e40c:	4b76      	ldr	r3, [pc, #472]	; (801e5e8 <RadioSetTxConfig+0x254>)
 801e40e:	2200      	movs	r2, #0
 801e410:	739a      	strb	r2, [r3, #14]
 801e412:	8d3b      	ldrh	r3, [r7, #40]	; 0x28
 801e414:	00db      	lsls	r3, r3, #3
 801e416:	b29a      	uxth	r2, r3
 801e418:	4b73      	ldr	r3, [pc, #460]	; (801e5e8 <RadioSetTxConfig+0x254>)
 801e41a:	821a      	strh	r2, [r3, #16]
 801e41c:	4b72      	ldr	r3, [pc, #456]	; (801e5e8 <RadioSetTxConfig+0x254>)
 801e41e:	2204      	movs	r2, #4
 801e420:	749a      	strb	r2, [r3, #18]
 801e422:	4b71      	ldr	r3, [pc, #452]	; (801e5e8 <RadioSetTxConfig+0x254>)
 801e424:	2218      	movs	r2, #24
 801e426:	74da      	strb	r2, [r3, #19]
 801e428:	4b6f      	ldr	r3, [pc, #444]	; (801e5e8 <RadioSetTxConfig+0x254>)
 801e42a:	2200      	movs	r2, #0
 801e42c:	751a      	strb	r2, [r3, #20]
 801e42e:	f897 302c 	ldrb.w	r3, [r7, #44]	; 0x2c
 801e432:	f083 0301 	eor.w	r3, r3, #1
 801e436:	b2db      	uxtb	r3, r3
 801e438:	461a      	mov	r2, r3
 801e43a:	4b6b      	ldr	r3, [pc, #428]	; (801e5e8 <RadioSetTxConfig+0x254>)
 801e43c:	755a      	strb	r2, [r3, #21]
 801e43e:	f897 3030 	ldrb.w	r3, [r7, #48]	; 0x30
 801e442:	2b00      	cmp	r3, #0
 801e444:	d003      	beq.n	801e44e <RadioSetTxConfig+0xba>
 801e446:	4b68      	ldr	r3, [pc, #416]	; (801e5e8 <RadioSetTxConfig+0x254>)
 801e448:	22f2      	movs	r2, #242	; 0xf2
 801e44a:	75da      	strb	r2, [r3, #23]
 801e44c:	e002      	b.n	801e454 <RadioSetTxConfig+0xc0>
 801e44e:	4b66      	ldr	r3, [pc, #408]	; (801e5e8 <RadioSetTxConfig+0x254>)
 801e450:	2201      	movs	r2, #1
 801e452:	75da      	strb	r2, [r3, #23]
 801e454:	4b64      	ldr	r3, [pc, #400]	; (801e5e8 <RadioSetTxConfig+0x254>)
 801e456:	2201      	movs	r2, #1
 801e458:	761a      	strb	r2, [r3, #24]
 801e45a:	f000 fb12 	bl	801ea82 <RadioStandby>
 801e45e:	4b62      	ldr	r3, [pc, #392]	; (801e5e8 <RadioSetTxConfig+0x254>)
 801e460:	f893 3038 	ldrb.w	r3, [r3, #56]	; 0x38
 801e464:	2b00      	cmp	r3, #0
 801e466:	bf14      	ite	ne
 801e468:	2301      	movne	r3, #1
 801e46a:	2300      	moveq	r3, #0
 801e46c:	b2db      	uxtb	r3, r3
 801e46e:	4618      	mov	r0, r3
 801e470:	f7ff fccc 	bl	801de0c <RadioSetModem>
 801e474:	485d      	ldr	r0, [pc, #372]	; (801e5ec <RadioSetTxConfig+0x258>)
 801e476:	f001 fc0f 	bl	801fc98 <SUBGRF_SetModulationParams>
 801e47a:	485d      	ldr	r0, [pc, #372]	; (801e5f0 <RadioSetTxConfig+0x25c>)
 801e47c:	f001 fcda 	bl	801fe34 <SUBGRF_SetPacketParams>
 801e480:	4a5c      	ldr	r2, [pc, #368]	; (801e5f4 <RadioSetTxConfig+0x260>)
 801e482:	f107 0310 	add.w	r3, r7, #16
 801e486:	e892 0003 	ldmia.w	r2, {r0, r1}
 801e48a:	e883 0003 	stmia.w	r3, {r0, r1}
 801e48e:	f107 0310 	add.w	r3, r7, #16
 801e492:	4618      	mov	r0, r3
 801e494:	f000 ffdd 	bl	801f452 <SUBGRF_SetSyncWord>
 801e498:	f240 10ff 	movw	r0, #511	; 0x1ff
 801e49c:	f001 f828 	bl	801f4f0 <SUBGRF_SetWhiteningSeed>
 801e4a0:	e06d      	b.n	801e57e <RadioSetTxConfig+0x1ea>
 801e4a2:	4b51      	ldr	r3, [pc, #324]	; (801e5e8 <RadioSetTxConfig+0x254>)
 801e4a4:	2201      	movs	r2, #1
 801e4a6:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 801e4aa:	6a3b      	ldr	r3, [r7, #32]
 801e4ac:	b2da      	uxtb	r2, r3
 801e4ae:	4b4e      	ldr	r3, [pc, #312]	; (801e5e8 <RadioSetTxConfig+0x254>)
 801e4b0:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 801e4b4:	4a50      	ldr	r2, [pc, #320]	; (801e5f8 <RadioSetTxConfig+0x264>)
 801e4b6:	687b      	ldr	r3, [r7, #4]
 801e4b8:	4413      	add	r3, r2
 801e4ba:	781a      	ldrb	r2, [r3, #0]
 801e4bc:	4b4a      	ldr	r3, [pc, #296]	; (801e5e8 <RadioSetTxConfig+0x254>)
 801e4be:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 801e4c2:	4a49      	ldr	r2, [pc, #292]	; (801e5e8 <RadioSetTxConfig+0x254>)
 801e4c4:	f897 3024 	ldrb.w	r3, [r7, #36]	; 0x24
 801e4c8:	f882 3052 	strb.w	r3, [r2, #82]	; 0x52
 801e4cc:	687b      	ldr	r3, [r7, #4]
 801e4ce:	2b00      	cmp	r3, #0
 801e4d0:	d105      	bne.n	801e4de <RadioSetTxConfig+0x14a>
 801e4d2:	6a3b      	ldr	r3, [r7, #32]
 801e4d4:	2b0b      	cmp	r3, #11
 801e4d6:	d008      	beq.n	801e4ea <RadioSetTxConfig+0x156>
 801e4d8:	6a3b      	ldr	r3, [r7, #32]
 801e4da:	2b0c      	cmp	r3, #12
 801e4dc:	d005      	beq.n	801e4ea <RadioSetTxConfig+0x156>
 801e4de:	687b      	ldr	r3, [r7, #4]
 801e4e0:	2b01      	cmp	r3, #1
 801e4e2:	d107      	bne.n	801e4f4 <RadioSetTxConfig+0x160>
 801e4e4:	6a3b      	ldr	r3, [r7, #32]
 801e4e6:	2b0c      	cmp	r3, #12
 801e4e8:	d104      	bne.n	801e4f4 <RadioSetTxConfig+0x160>
 801e4ea:	4b3f      	ldr	r3, [pc, #252]	; (801e5e8 <RadioSetTxConfig+0x254>)
 801e4ec:	2201      	movs	r2, #1
 801e4ee:	f883 2053 	strb.w	r2, [r3, #83]	; 0x53
 801e4f2:	e003      	b.n	801e4fc <RadioSetTxConfig+0x168>
 801e4f4:	4b3c      	ldr	r3, [pc, #240]	; (801e5e8 <RadioSetTxConfig+0x254>)
 801e4f6:	2200      	movs	r2, #0
 801e4f8:	f883 2053 	strb.w	r2, [r3, #83]	; 0x53
 801e4fc:	4b3a      	ldr	r3, [pc, #232]	; (801e5e8 <RadioSetTxConfig+0x254>)
 801e4fe:	2201      	movs	r2, #1
 801e500:	739a      	strb	r2, [r3, #14]
 801e502:	4b39      	ldr	r3, [pc, #228]	; (801e5e8 <RadioSetTxConfig+0x254>)
 801e504:	f893 3050 	ldrb.w	r3, [r3, #80]	; 0x50
 801e508:	2b05      	cmp	r3, #5
 801e50a:	d004      	beq.n	801e516 <RadioSetTxConfig+0x182>
 801e50c:	4b36      	ldr	r3, [pc, #216]	; (801e5e8 <RadioSetTxConfig+0x254>)
 801e50e:	f893 3050 	ldrb.w	r3, [r3, #80]	; 0x50
 801e512:	2b06      	cmp	r3, #6
 801e514:	d10a      	bne.n	801e52c <RadioSetTxConfig+0x198>
 801e516:	8d3b      	ldrh	r3, [r7, #40]	; 0x28
 801e518:	2b0b      	cmp	r3, #11
 801e51a:	d803      	bhi.n	801e524 <RadioSetTxConfig+0x190>
 801e51c:	4b32      	ldr	r3, [pc, #200]	; (801e5e8 <RadioSetTxConfig+0x254>)
 801e51e:	220c      	movs	r2, #12
 801e520:	839a      	strh	r2, [r3, #28]
 801e522:	e006      	b.n	801e532 <RadioSetTxConfig+0x19e>
 801e524:	4a30      	ldr	r2, [pc, #192]	; (801e5e8 <RadioSetTxConfig+0x254>)
 801e526:	8d3b      	ldrh	r3, [r7, #40]	; 0x28
 801e528:	8393      	strh	r3, [r2, #28]
 801e52a:	e002      	b.n	801e532 <RadioSetTxConfig+0x19e>
 801e52c:	4a2e      	ldr	r2, [pc, #184]	; (801e5e8 <RadioSetTxConfig+0x254>)
 801e52e:	8d3b      	ldrh	r3, [r7, #40]	; 0x28
 801e530:	8393      	strh	r3, [r2, #28]
 801e532:	f897 202c 	ldrb.w	r2, [r7, #44]	; 0x2c
 801e536:	4b2c      	ldr	r3, [pc, #176]	; (801e5e8 <RadioSetTxConfig+0x254>)
 801e538:	779a      	strb	r2, [r3, #30]
 801e53a:	4b30      	ldr	r3, [pc, #192]	; (801e5fc <RadioSetTxConfig+0x268>)
 801e53c:	781a      	ldrb	r2, [r3, #0]
 801e53e:	4b2a      	ldr	r3, [pc, #168]	; (801e5e8 <RadioSetTxConfig+0x254>)
 801e540:	77da      	strb	r2, [r3, #31]
 801e542:	f897 2030 	ldrb.w	r2, [r7, #48]	; 0x30
 801e546:	4b28      	ldr	r3, [pc, #160]	; (801e5e8 <RadioSetTxConfig+0x254>)
 801e548:	f883 2020 	strb.w	r2, [r3, #32]
 801e54c:	f897 203c 	ldrb.w	r2, [r7, #60]	; 0x3c
 801e550:	4b25      	ldr	r3, [pc, #148]	; (801e5e8 <RadioSetTxConfig+0x254>)
 801e552:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 801e556:	f000 fa94 	bl	801ea82 <RadioStandby>
 801e55a:	4b23      	ldr	r3, [pc, #140]	; (801e5e8 <RadioSetTxConfig+0x254>)
 801e55c:	f893 3038 	ldrb.w	r3, [r3, #56]	; 0x38
 801e560:	2b00      	cmp	r3, #0
 801e562:	bf14      	ite	ne
 801e564:	2301      	movne	r3, #1
 801e566:	2300      	moveq	r3, #0
 801e568:	b2db      	uxtb	r3, r3
 801e56a:	4618      	mov	r0, r3
 801e56c:	f7ff fc4e 	bl	801de0c <RadioSetModem>
 801e570:	481e      	ldr	r0, [pc, #120]	; (801e5ec <RadioSetTxConfig+0x258>)
 801e572:	f001 fb91 	bl	801fc98 <SUBGRF_SetModulationParams>
 801e576:	481e      	ldr	r0, [pc, #120]	; (801e5f0 <RadioSetTxConfig+0x25c>)
 801e578:	f001 fc5c 	bl	801fe34 <SUBGRF_SetPacketParams>
 801e57c:	bf00      	nop
 801e57e:	7bfb      	ldrb	r3, [r7, #15]
 801e580:	2b01      	cmp	r3, #1
 801e582:	d112      	bne.n	801e5aa <RadioSetTxConfig+0x216>
 801e584:	4b18      	ldr	r3, [pc, #96]	; (801e5e8 <RadioSetTxConfig+0x254>)
 801e586:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 801e58a:	2b06      	cmp	r3, #6
 801e58c:	d10d      	bne.n	801e5aa <RadioSetTxConfig+0x216>
 801e58e:	f640 0089 	movw	r0, #2185	; 0x889
 801e592:	f001 fdb7 	bl	8020104 <SUBGRF_ReadRegister>
 801e596:	4603      	mov	r3, r0
 801e598:	f023 0304 	bic.w	r3, r3, #4
 801e59c:	b2db      	uxtb	r3, r3
 801e59e:	4619      	mov	r1, r3
 801e5a0:	f640 0089 	movw	r0, #2185	; 0x889
 801e5a4:	f001 fd9a 	bl	80200dc <SUBGRF_WriteRegister>
 801e5a8:	e00c      	b.n	801e5c4 <RadioSetTxConfig+0x230>
 801e5aa:	f640 0089 	movw	r0, #2185	; 0x889
 801e5ae:	f001 fda9 	bl	8020104 <SUBGRF_ReadRegister>
 801e5b2:	4603      	mov	r3, r0
 801e5b4:	f043 0304 	orr.w	r3, r3, #4
 801e5b8:	b2db      	uxtb	r3, r3
 801e5ba:	4619      	mov	r1, r3
 801e5bc:	f640 0089 	movw	r0, #2185	; 0x889
 801e5c0:	f001 fd8c 	bl	80200dc <SUBGRF_WriteRegister>
 801e5c4:	f997 300e 	ldrsb.w	r3, [r7, #14]
 801e5c8:	4618      	mov	r0, r3
 801e5ca:	f001 fe2b 	bl	8020224 <SUBGRF_SetRfTxPower>
 801e5ce:	4603      	mov	r3, r0
 801e5d0:	461a      	mov	r2, r3
 801e5d2:	4b05      	ldr	r3, [pc, #20]	; (801e5e8 <RadioSetTxConfig+0x254>)
 801e5d4:	f883 2056 	strb.w	r2, [r3, #86]	; 0x56
 801e5d8:	4a03      	ldr	r2, [pc, #12]	; (801e5e8 <RadioSetTxConfig+0x254>)
 801e5da:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 801e5dc:	6053      	str	r3, [r2, #4]
 801e5de:	bf00      	nop
 801e5e0:	3718      	adds	r7, #24
 801e5e2:	46bd      	mov	sp, r7
 801e5e4:	bd80      	pop	{r7, pc}
 801e5e6:	bf00      	nop
 801e5e8:	20001ffc 	.word	0x20001ffc
 801e5ec:	20002034 	.word	0x20002034
 801e5f0:	2000200a 	.word	0x2000200a
 801e5f4:	080261e0 	.word	0x080261e0
 801e5f8:	08026968 	.word	0x08026968
 801e5fc:	200001c0 	.word	0x200001c0

0801e600 <RadioCheckRfFrequency>:
 801e600:	b480      	push	{r7}
 801e602:	b083      	sub	sp, #12
 801e604:	af00      	add	r7, sp, #0
 801e606:	6078      	str	r0, [r7, #4]
 801e608:	2301      	movs	r3, #1
 801e60a:	4618      	mov	r0, r3
 801e60c:	370c      	adds	r7, #12
 801e60e:	46bd      	mov	sp, r7
 801e610:	bc80      	pop	{r7}
 801e612:	4770      	bx	lr

0801e614 <RadioGetLoRaBandwidthInHz>:
 801e614:	b480      	push	{r7}
 801e616:	b085      	sub	sp, #20
 801e618:	af00      	add	r7, sp, #0
 801e61a:	4603      	mov	r3, r0
 801e61c:	71fb      	strb	r3, [r7, #7]
 801e61e:	2300      	movs	r3, #0
 801e620:	60fb      	str	r3, [r7, #12]
 801e622:	79fb      	ldrb	r3, [r7, #7]
 801e624:	2b0a      	cmp	r3, #10
 801e626:	d83e      	bhi.n	801e6a6 <RadioGetLoRaBandwidthInHz+0x92>
 801e628:	a201      	add	r2, pc, #4	; (adr r2, 801e630 <RadioGetLoRaBandwidthInHz+0x1c>)
 801e62a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 801e62e:	bf00      	nop
 801e630:	0801e65d 	.word	0x0801e65d
 801e634:	0801e66d 	.word	0x0801e66d
 801e638:	0801e67d 	.word	0x0801e67d
 801e63c:	0801e68d 	.word	0x0801e68d
 801e640:	0801e695 	.word	0x0801e695
 801e644:	0801e69b 	.word	0x0801e69b
 801e648:	0801e6a1 	.word	0x0801e6a1
 801e64c:	0801e6a7 	.word	0x0801e6a7
 801e650:	0801e665 	.word	0x0801e665
 801e654:	0801e675 	.word	0x0801e675
 801e658:	0801e685 	.word	0x0801e685
 801e65c:	f641 6384 	movw	r3, #7812	; 0x1e84
 801e660:	60fb      	str	r3, [r7, #12]
 801e662:	e020      	b.n	801e6a6 <RadioGetLoRaBandwidthInHz+0x92>
 801e664:	f642 03b1 	movw	r3, #10417	; 0x28b1
 801e668:	60fb      	str	r3, [r7, #12]
 801e66a:	e01c      	b.n	801e6a6 <RadioGetLoRaBandwidthInHz+0x92>
 801e66c:	f643 5309 	movw	r3, #15625	; 0x3d09
 801e670:	60fb      	str	r3, [r7, #12]
 801e672:	e018      	b.n	801e6a6 <RadioGetLoRaBandwidthInHz+0x92>
 801e674:	f245 1361 	movw	r3, #20833	; 0x5161
 801e678:	60fb      	str	r3, [r7, #12]
 801e67a:	e014      	b.n	801e6a6 <RadioGetLoRaBandwidthInHz+0x92>
 801e67c:	f647 2312 	movw	r3, #31250	; 0x7a12
 801e680:	60fb      	str	r3, [r7, #12]
 801e682:	e010      	b.n	801e6a6 <RadioGetLoRaBandwidthInHz+0x92>
 801e684:	f24a 23c3 	movw	r3, #41667	; 0xa2c3
 801e688:	60fb      	str	r3, [r7, #12]
 801e68a:	e00c      	b.n	801e6a6 <RadioGetLoRaBandwidthInHz+0x92>
 801e68c:	f24f 4324 	movw	r3, #62500	; 0xf424
 801e690:	60fb      	str	r3, [r7, #12]
 801e692:	e008      	b.n	801e6a6 <RadioGetLoRaBandwidthInHz+0x92>
 801e694:	4b07      	ldr	r3, [pc, #28]	; (801e6b4 <RadioGetLoRaBandwidthInHz+0xa0>)
 801e696:	60fb      	str	r3, [r7, #12]
 801e698:	e005      	b.n	801e6a6 <RadioGetLoRaBandwidthInHz+0x92>
 801e69a:	4b07      	ldr	r3, [pc, #28]	; (801e6b8 <RadioGetLoRaBandwidthInHz+0xa4>)
 801e69c:	60fb      	str	r3, [r7, #12]
 801e69e:	e002      	b.n	801e6a6 <RadioGetLoRaBandwidthInHz+0x92>
 801e6a0:	4b06      	ldr	r3, [pc, #24]	; (801e6bc <RadioGetLoRaBandwidthInHz+0xa8>)
 801e6a2:	60fb      	str	r3, [r7, #12]
 801e6a4:	bf00      	nop
 801e6a6:	68fb      	ldr	r3, [r7, #12]
 801e6a8:	4618      	mov	r0, r3
 801e6aa:	3714      	adds	r7, #20
 801e6ac:	46bd      	mov	sp, r7
 801e6ae:	bc80      	pop	{r7}
 801e6b0:	4770      	bx	lr
 801e6b2:	bf00      	nop
 801e6b4:	0001e848 	.word	0x0001e848
 801e6b8:	0003d090 	.word	0x0003d090
 801e6bc:	0007a120 	.word	0x0007a120

0801e6c0 <RadioGetGfskTimeOnAirNumerator>:
 801e6c0:	b480      	push	{r7}
 801e6c2:	b083      	sub	sp, #12
 801e6c4:	af00      	add	r7, sp, #0
 801e6c6:	6078      	str	r0, [r7, #4]
 801e6c8:	4608      	mov	r0, r1
 801e6ca:	4611      	mov	r1, r2
 801e6cc:	461a      	mov	r2, r3
 801e6ce:	4603      	mov	r3, r0
 801e6d0:	70fb      	strb	r3, [r7, #3]
 801e6d2:	460b      	mov	r3, r1
 801e6d4:	803b      	strh	r3, [r7, #0]
 801e6d6:	4613      	mov	r3, r2
 801e6d8:	70bb      	strb	r3, [r7, #2]
 801e6da:	883b      	ldrh	r3, [r7, #0]
 801e6dc:	00db      	lsls	r3, r3, #3
 801e6de:	78ba      	ldrb	r2, [r7, #2]
 801e6e0:	f082 0201 	eor.w	r2, r2, #1
 801e6e4:	b2d2      	uxtb	r2, r2
 801e6e6:	2a00      	cmp	r2, #0
 801e6e8:	d001      	beq.n	801e6ee <RadioGetGfskTimeOnAirNumerator+0x2e>
 801e6ea:	2208      	movs	r2, #8
 801e6ec:	e000      	b.n	801e6f0 <RadioGetGfskTimeOnAirNumerator+0x30>
 801e6ee:	2200      	movs	r2, #0
 801e6f0:	4413      	add	r3, r2
 801e6f2:	f103 0218 	add.w	r2, r3, #24
 801e6f6:	7c3b      	ldrb	r3, [r7, #16]
 801e6f8:	7d39      	ldrb	r1, [r7, #20]
 801e6fa:	2900      	cmp	r1, #0
 801e6fc:	d001      	beq.n	801e702 <RadioGetGfskTimeOnAirNumerator+0x42>
 801e6fe:	2102      	movs	r1, #2
 801e700:	e000      	b.n	801e704 <RadioGetGfskTimeOnAirNumerator+0x44>
 801e702:	2100      	movs	r1, #0
 801e704:	440b      	add	r3, r1
 801e706:	00db      	lsls	r3, r3, #3
 801e708:	4413      	add	r3, r2
 801e70a:	4618      	mov	r0, r3
 801e70c:	370c      	adds	r7, #12
 801e70e:	46bd      	mov	sp, r7
 801e710:	bc80      	pop	{r7}
 801e712:	4770      	bx	lr

0801e714 <RadioGetLoRaTimeOnAirNumerator>:
 801e714:	b480      	push	{r7}
 801e716:	b08b      	sub	sp, #44	; 0x2c
 801e718:	af00      	add	r7, sp, #0
 801e71a:	60f8      	str	r0, [r7, #12]
 801e71c:	60b9      	str	r1, [r7, #8]
 801e71e:	4611      	mov	r1, r2
 801e720:	461a      	mov	r2, r3
 801e722:	460b      	mov	r3, r1
 801e724:	71fb      	strb	r3, [r7, #7]
 801e726:	4613      	mov	r3, r2
 801e728:	80bb      	strh	r3, [r7, #4]
 801e72a:	79fb      	ldrb	r3, [r7, #7]
 801e72c:	3304      	adds	r3, #4
 801e72e:	617b      	str	r3, [r7, #20]
 801e730:	2300      	movs	r3, #0
 801e732:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 801e736:	68bb      	ldr	r3, [r7, #8]
 801e738:	2b05      	cmp	r3, #5
 801e73a:	d002      	beq.n	801e742 <RadioGetLoRaTimeOnAirNumerator+0x2e>
 801e73c:	68bb      	ldr	r3, [r7, #8]
 801e73e:	2b06      	cmp	r3, #6
 801e740:	d104      	bne.n	801e74c <RadioGetLoRaTimeOnAirNumerator+0x38>
 801e742:	88bb      	ldrh	r3, [r7, #4]
 801e744:	2b0b      	cmp	r3, #11
 801e746:	d801      	bhi.n	801e74c <RadioGetLoRaTimeOnAirNumerator+0x38>
 801e748:	230c      	movs	r3, #12
 801e74a:	80bb      	strh	r3, [r7, #4]
 801e74c:	68fb      	ldr	r3, [r7, #12]
 801e74e:	2b00      	cmp	r3, #0
 801e750:	d105      	bne.n	801e75e <RadioGetLoRaTimeOnAirNumerator+0x4a>
 801e752:	68bb      	ldr	r3, [r7, #8]
 801e754:	2b0b      	cmp	r3, #11
 801e756:	d008      	beq.n	801e76a <RadioGetLoRaTimeOnAirNumerator+0x56>
 801e758:	68bb      	ldr	r3, [r7, #8]
 801e75a:	2b0c      	cmp	r3, #12
 801e75c:	d005      	beq.n	801e76a <RadioGetLoRaTimeOnAirNumerator+0x56>
 801e75e:	68fb      	ldr	r3, [r7, #12]
 801e760:	2b01      	cmp	r3, #1
 801e762:	d105      	bne.n	801e770 <RadioGetLoRaTimeOnAirNumerator+0x5c>
 801e764:	68bb      	ldr	r3, [r7, #8]
 801e766:	2b0c      	cmp	r3, #12
 801e768:	d102      	bne.n	801e770 <RadioGetLoRaTimeOnAirNumerator+0x5c>
 801e76a:	2301      	movs	r3, #1
 801e76c:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 801e770:	f897 3034 	ldrb.w	r3, [r7, #52]	; 0x34
 801e774:	00db      	lsls	r3, r3, #3
 801e776:	f897 2038 	ldrb.w	r2, [r7, #56]	; 0x38
 801e77a:	2a00      	cmp	r2, #0
 801e77c:	d001      	beq.n	801e782 <RadioGetLoRaTimeOnAirNumerator+0x6e>
 801e77e:	2210      	movs	r2, #16
 801e780:	e000      	b.n	801e784 <RadioGetLoRaTimeOnAirNumerator+0x70>
 801e782:	2200      	movs	r2, #0
 801e784:	4413      	add	r3, r2
 801e786:	461a      	mov	r2, r3
 801e788:	68bb      	ldr	r3, [r7, #8]
 801e78a:	009b      	lsls	r3, r3, #2
 801e78c:	1ad3      	subs	r3, r2, r3
 801e78e:	f897 2030 	ldrb.w	r2, [r7, #48]	; 0x30
 801e792:	2a00      	cmp	r2, #0
 801e794:	d001      	beq.n	801e79a <RadioGetLoRaTimeOnAirNumerator+0x86>
 801e796:	2200      	movs	r2, #0
 801e798:	e000      	b.n	801e79c <RadioGetLoRaTimeOnAirNumerator+0x88>
 801e79a:	2214      	movs	r2, #20
 801e79c:	4413      	add	r3, r2
 801e79e:	61fb      	str	r3, [r7, #28]
 801e7a0:	68bb      	ldr	r3, [r7, #8]
 801e7a2:	2b06      	cmp	r3, #6
 801e7a4:	d803      	bhi.n	801e7ae <RadioGetLoRaTimeOnAirNumerator+0x9a>
 801e7a6:	68bb      	ldr	r3, [r7, #8]
 801e7a8:	009b      	lsls	r3, r3, #2
 801e7aa:	623b      	str	r3, [r7, #32]
 801e7ac:	e00e      	b.n	801e7cc <RadioGetLoRaTimeOnAirNumerator+0xb8>
 801e7ae:	69fb      	ldr	r3, [r7, #28]
 801e7b0:	3308      	adds	r3, #8
 801e7b2:	61fb      	str	r3, [r7, #28]
 801e7b4:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 801e7b8:	2b00      	cmp	r3, #0
 801e7ba:	d004      	beq.n	801e7c6 <RadioGetLoRaTimeOnAirNumerator+0xb2>
 801e7bc:	68bb      	ldr	r3, [r7, #8]
 801e7be:	3b02      	subs	r3, #2
 801e7c0:	009b      	lsls	r3, r3, #2
 801e7c2:	623b      	str	r3, [r7, #32]
 801e7c4:	e002      	b.n	801e7cc <RadioGetLoRaTimeOnAirNumerator+0xb8>
 801e7c6:	68bb      	ldr	r3, [r7, #8]
 801e7c8:	009b      	lsls	r3, r3, #2
 801e7ca:	623b      	str	r3, [r7, #32]
 801e7cc:	69fb      	ldr	r3, [r7, #28]
 801e7ce:	2b00      	cmp	r3, #0
 801e7d0:	da01      	bge.n	801e7d6 <RadioGetLoRaTimeOnAirNumerator+0xc2>
 801e7d2:	2300      	movs	r3, #0
 801e7d4:	61fb      	str	r3, [r7, #28]
 801e7d6:	69fa      	ldr	r2, [r7, #28]
 801e7d8:	6a3b      	ldr	r3, [r7, #32]
 801e7da:	4413      	add	r3, r2
 801e7dc:	1e5a      	subs	r2, r3, #1
 801e7de:	6a3b      	ldr	r3, [r7, #32]
 801e7e0:	fb92 f3f3 	sdiv	r3, r2, r3
 801e7e4:	697a      	ldr	r2, [r7, #20]
 801e7e6:	fb02 f203 	mul.w	r2, r2, r3
 801e7ea:	88bb      	ldrh	r3, [r7, #4]
 801e7ec:	4413      	add	r3, r2
 801e7ee:	330c      	adds	r3, #12
 801e7f0:	61bb      	str	r3, [r7, #24]
 801e7f2:	68bb      	ldr	r3, [r7, #8]
 801e7f4:	2b06      	cmp	r3, #6
 801e7f6:	d802      	bhi.n	801e7fe <RadioGetLoRaTimeOnAirNumerator+0xea>
 801e7f8:	69bb      	ldr	r3, [r7, #24]
 801e7fa:	3302      	adds	r3, #2
 801e7fc:	61bb      	str	r3, [r7, #24]
 801e7fe:	69bb      	ldr	r3, [r7, #24]
 801e800:	009b      	lsls	r3, r3, #2
 801e802:	1c5a      	adds	r2, r3, #1
 801e804:	68bb      	ldr	r3, [r7, #8]
 801e806:	3b02      	subs	r3, #2
 801e808:	fa02 f303 	lsl.w	r3, r2, r3
 801e80c:	4618      	mov	r0, r3
 801e80e:	372c      	adds	r7, #44	; 0x2c
 801e810:	46bd      	mov	sp, r7
 801e812:	bc80      	pop	{r7}
 801e814:	4770      	bx	lr
	...

0801e818 <RadioTimeOnAir>:
 801e818:	b580      	push	{r7, lr}
 801e81a:	b08a      	sub	sp, #40	; 0x28
 801e81c:	af04      	add	r7, sp, #16
 801e81e:	60b9      	str	r1, [r7, #8]
 801e820:	607a      	str	r2, [r7, #4]
 801e822:	461a      	mov	r2, r3
 801e824:	4603      	mov	r3, r0
 801e826:	73fb      	strb	r3, [r7, #15]
 801e828:	4613      	mov	r3, r2
 801e82a:	73bb      	strb	r3, [r7, #14]
 801e82c:	2300      	movs	r3, #0
 801e82e:	617b      	str	r3, [r7, #20]
 801e830:	2301      	movs	r3, #1
 801e832:	613b      	str	r3, [r7, #16]
 801e834:	7bfb      	ldrb	r3, [r7, #15]
 801e836:	2b00      	cmp	r3, #0
 801e838:	d002      	beq.n	801e840 <RadioTimeOnAir+0x28>
 801e83a:	2b01      	cmp	r3, #1
 801e83c:	d017      	beq.n	801e86e <RadioTimeOnAir+0x56>
 801e83e:	e035      	b.n	801e8ac <RadioTimeOnAir+0x94>
 801e840:	f897 0024 	ldrb.w	r0, [r7, #36]	; 0x24
 801e844:	8c3a      	ldrh	r2, [r7, #32]
 801e846:	7bb9      	ldrb	r1, [r7, #14]
 801e848:	f897 302c 	ldrb.w	r3, [r7, #44]	; 0x2c
 801e84c:	9301      	str	r3, [sp, #4]
 801e84e:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 801e852:	9300      	str	r3, [sp, #0]
 801e854:	4603      	mov	r3, r0
 801e856:	6878      	ldr	r0, [r7, #4]
 801e858:	f7ff ff32 	bl	801e6c0 <RadioGetGfskTimeOnAirNumerator>
 801e85c:	4603      	mov	r3, r0
 801e85e:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 801e862:	fb02 f303 	mul.w	r3, r2, r3
 801e866:	617b      	str	r3, [r7, #20]
 801e868:	687b      	ldr	r3, [r7, #4]
 801e86a:	613b      	str	r3, [r7, #16]
 801e86c:	e01e      	b.n	801e8ac <RadioTimeOnAir+0x94>
 801e86e:	8c39      	ldrh	r1, [r7, #32]
 801e870:	7bba      	ldrb	r2, [r7, #14]
 801e872:	f897 302c 	ldrb.w	r3, [r7, #44]	; 0x2c
 801e876:	9302      	str	r3, [sp, #8]
 801e878:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 801e87c:	9301      	str	r3, [sp, #4]
 801e87e:	f897 3024 	ldrb.w	r3, [r7, #36]	; 0x24
 801e882:	9300      	str	r3, [sp, #0]
 801e884:	460b      	mov	r3, r1
 801e886:	6879      	ldr	r1, [r7, #4]
 801e888:	68b8      	ldr	r0, [r7, #8]
 801e88a:	f7ff ff43 	bl	801e714 <RadioGetLoRaTimeOnAirNumerator>
 801e88e:	4603      	mov	r3, r0
 801e890:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 801e894:	fb02 f303 	mul.w	r3, r2, r3
 801e898:	617b      	str	r3, [r7, #20]
 801e89a:	4a0a      	ldr	r2, [pc, #40]	; (801e8c4 <RadioTimeOnAir+0xac>)
 801e89c:	68bb      	ldr	r3, [r7, #8]
 801e89e:	4413      	add	r3, r2
 801e8a0:	781b      	ldrb	r3, [r3, #0]
 801e8a2:	4618      	mov	r0, r3
 801e8a4:	f7ff feb6 	bl	801e614 <RadioGetLoRaBandwidthInHz>
 801e8a8:	6138      	str	r0, [r7, #16]
 801e8aa:	bf00      	nop
 801e8ac:	697a      	ldr	r2, [r7, #20]
 801e8ae:	693b      	ldr	r3, [r7, #16]
 801e8b0:	4413      	add	r3, r2
 801e8b2:	1e5a      	subs	r2, r3, #1
 801e8b4:	693b      	ldr	r3, [r7, #16]
 801e8b6:	fbb2 f3f3 	udiv	r3, r2, r3
 801e8ba:	4618      	mov	r0, r3
 801e8bc:	3718      	adds	r7, #24
 801e8be:	46bd      	mov	sp, r7
 801e8c0:	bd80      	pop	{r7, pc}
 801e8c2:	bf00      	nop
 801e8c4:	08026968 	.word	0x08026968

0801e8c8 <RadioSend>:
 801e8c8:	b580      	push	{r7, lr}
 801e8ca:	b08c      	sub	sp, #48	; 0x30
 801e8cc:	af00      	add	r7, sp, #0
 801e8ce:	6078      	str	r0, [r7, #4]
 801e8d0:	460b      	mov	r3, r1
 801e8d2:	70fb      	strb	r3, [r7, #3]
 801e8d4:	2300      	movs	r3, #0
 801e8d6:	2200      	movs	r2, #0
 801e8d8:	f240 2101 	movw	r1, #513	; 0x201
 801e8dc:	f240 2001 	movw	r0, #513	; 0x201
 801e8e0:	f001 f8a6 	bl	801fa30 <SUBGRF_SetDioIrqParams>
 801e8e4:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 801e8e8:	4858      	ldr	r0, [pc, #352]	; (801ea4c <RadioSend+0x184>)
 801e8ea:	f7fe fef2 	bl	801d6d2 <LL_GPIO_SetOutputPin>
 801e8ee:	4b58      	ldr	r3, [pc, #352]	; (801ea50 <RadioSend+0x188>)
 801e8f0:	f893 3056 	ldrb.w	r3, [r3, #86]	; 0x56
 801e8f4:	2101      	movs	r1, #1
 801e8f6:	4618      	mov	r0, r3
 801e8f8:	f001 fc6c 	bl	80201d4 <SUBGRF_SetSwitch>
 801e8fc:	4b54      	ldr	r3, [pc, #336]	; (801ea50 <RadioSend+0x188>)
 801e8fe:	781b      	ldrb	r3, [r3, #0]
 801e900:	2b03      	cmp	r3, #3
 801e902:	f200 8094 	bhi.w	801ea2e <RadioSend+0x166>
 801e906:	a201      	add	r2, pc, #4	; (adr r2, 801e90c <RadioSend+0x44>)
 801e908:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 801e90c:	0801e937 	.word	0x0801e937
 801e910:	0801e91d 	.word	0x0801e91d
 801e914:	0801e951 	.word	0x0801e951
 801e918:	0801e971 	.word	0x0801e971
 801e91c:	4a4c      	ldr	r2, [pc, #304]	; (801ea50 <RadioSend+0x188>)
 801e91e:	78fb      	ldrb	r3, [r7, #3]
 801e920:	77d3      	strb	r3, [r2, #31]
 801e922:	484c      	ldr	r0, [pc, #304]	; (801ea54 <RadioSend+0x18c>)
 801e924:	f001 fa86 	bl	801fe34 <SUBGRF_SetPacketParams>
 801e928:	78fb      	ldrb	r3, [r7, #3]
 801e92a:	2200      	movs	r2, #0
 801e92c:	4619      	mov	r1, r3
 801e92e:	6878      	ldr	r0, [r7, #4]
 801e930:	f000 fd7c 	bl	801f42c <SUBGRF_SendPayload>
 801e934:	e07c      	b.n	801ea30 <RadioSend+0x168>
 801e936:	4a46      	ldr	r2, [pc, #280]	; (801ea50 <RadioSend+0x188>)
 801e938:	78fb      	ldrb	r3, [r7, #3]
 801e93a:	7593      	strb	r3, [r2, #22]
 801e93c:	4845      	ldr	r0, [pc, #276]	; (801ea54 <RadioSend+0x18c>)
 801e93e:	f001 fa79 	bl	801fe34 <SUBGRF_SetPacketParams>
 801e942:	78fb      	ldrb	r3, [r7, #3]
 801e944:	2200      	movs	r2, #0
 801e946:	4619      	mov	r1, r3
 801e948:	6878      	ldr	r0, [r7, #4]
 801e94a:	f000 fd6f 	bl	801f42c <SUBGRF_SendPayload>
 801e94e:	e06f      	b.n	801ea30 <RadioSend+0x168>
 801e950:	4b3f      	ldr	r3, [pc, #252]	; (801ea50 <RadioSend+0x188>)
 801e952:	2202      	movs	r2, #2
 801e954:	739a      	strb	r2, [r3, #14]
 801e956:	4a3e      	ldr	r2, [pc, #248]	; (801ea50 <RadioSend+0x188>)
 801e958:	78fb      	ldrb	r3, [r7, #3]
 801e95a:	7693      	strb	r3, [r2, #26]
 801e95c:	483d      	ldr	r0, [pc, #244]	; (801ea54 <RadioSend+0x18c>)
 801e95e:	f001 fa69 	bl	801fe34 <SUBGRF_SetPacketParams>
 801e962:	78fb      	ldrb	r3, [r7, #3]
 801e964:	2200      	movs	r2, #0
 801e966:	4619      	mov	r1, r3
 801e968:	6878      	ldr	r0, [r7, #4]
 801e96a:	f000 fd5f 	bl	801f42c <SUBGRF_SendPayload>
 801e96e:	e05f      	b.n	801ea30 <RadioSend+0x168>
 801e970:	2300      	movs	r3, #0
 801e972:	60bb      	str	r3, [r7, #8]
 801e974:	f107 030c 	add.w	r3, r7, #12
 801e978:	221f      	movs	r2, #31
 801e97a:	2100      	movs	r1, #0
 801e97c:	4618      	mov	r0, r3
 801e97e:	f005 ff21 	bl	80247c4 <memset>
 801e982:	78fa      	ldrb	r2, [r7, #3]
 801e984:	f107 0308 	add.w	r3, r7, #8
 801e988:	6879      	ldr	r1, [r7, #4]
 801e98a:	4618      	mov	r0, r3
 801e98c:	f000 fc3b 	bl	801f206 <payload_integration>
 801e990:	4b2f      	ldr	r3, [pc, #188]	; (801ea50 <RadioSend+0x188>)
 801e992:	2202      	movs	r2, #2
 801e994:	739a      	strb	r2, [r3, #14]
 801e996:	78fb      	ldrb	r3, [r7, #3]
 801e998:	3301      	adds	r3, #1
 801e99a:	b2da      	uxtb	r2, r3
 801e99c:	4b2c      	ldr	r3, [pc, #176]	; (801ea50 <RadioSend+0x188>)
 801e99e:	769a      	strb	r2, [r3, #26]
 801e9a0:	482c      	ldr	r0, [pc, #176]	; (801ea54 <RadioSend+0x18c>)
 801e9a2:	f001 fa47 	bl	801fe34 <SUBGRF_SetPacketParams>
 801e9a6:	4b2a      	ldr	r3, [pc, #168]	; (801ea50 <RadioSend+0x188>)
 801e9a8:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801e9aa:	2b64      	cmp	r3, #100	; 0x64
 801e9ac:	d110      	bne.n	801e9d0 <RadioSend+0x108>
 801e9ae:	2100      	movs	r1, #0
 801e9b0:	20f1      	movs	r0, #241	; 0xf1
 801e9b2:	f000 f93a 	bl	801ec2a <RadioWrite>
 801e9b6:	2100      	movs	r1, #0
 801e9b8:	20f0      	movs	r0, #240	; 0xf0
 801e9ba:	f000 f936 	bl	801ec2a <RadioWrite>
 801e9be:	2170      	movs	r1, #112	; 0x70
 801e9c0:	20f3      	movs	r0, #243	; 0xf3
 801e9c2:	f000 f932 	bl	801ec2a <RadioWrite>
 801e9c6:	211d      	movs	r1, #29
 801e9c8:	20f2      	movs	r0, #242	; 0xf2
 801e9ca:	f000 f92e 	bl	801ec2a <RadioWrite>
 801e9ce:	e00f      	b.n	801e9f0 <RadioSend+0x128>
 801e9d0:	2100      	movs	r1, #0
 801e9d2:	20f1      	movs	r0, #241	; 0xf1
 801e9d4:	f000 f929 	bl	801ec2a <RadioWrite>
 801e9d8:	2100      	movs	r1, #0
 801e9da:	20f0      	movs	r0, #240	; 0xf0
 801e9dc:	f000 f925 	bl	801ec2a <RadioWrite>
 801e9e0:	21e1      	movs	r1, #225	; 0xe1
 801e9e2:	20f3      	movs	r0, #243	; 0xf3
 801e9e4:	f000 f921 	bl	801ec2a <RadioWrite>
 801e9e8:	2104      	movs	r1, #4
 801e9ea:	20f2      	movs	r0, #242	; 0xf2
 801e9ec:	f000 f91d 	bl	801ec2a <RadioWrite>
 801e9f0:	78fb      	ldrb	r3, [r7, #3]
 801e9f2:	b29b      	uxth	r3, r3
 801e9f4:	00db      	lsls	r3, r3, #3
 801e9f6:	b29b      	uxth	r3, r3
 801e9f8:	3302      	adds	r3, #2
 801e9fa:	85fb      	strh	r3, [r7, #46]	; 0x2e
 801e9fc:	8dfb      	ldrh	r3, [r7, #46]	; 0x2e
 801e9fe:	0a1b      	lsrs	r3, r3, #8
 801ea00:	b29b      	uxth	r3, r3
 801ea02:	b2db      	uxtb	r3, r3
 801ea04:	4619      	mov	r1, r3
 801ea06:	20f4      	movs	r0, #244	; 0xf4
 801ea08:	f000 f90f 	bl	801ec2a <RadioWrite>
 801ea0c:	8dfb      	ldrh	r3, [r7, #46]	; 0x2e
 801ea0e:	b2db      	uxtb	r3, r3
 801ea10:	4619      	mov	r1, r3
 801ea12:	20f5      	movs	r0, #245	; 0xf5
 801ea14:	f000 f909 	bl	801ec2a <RadioWrite>
 801ea18:	78fb      	ldrb	r3, [r7, #3]
 801ea1a:	3301      	adds	r3, #1
 801ea1c:	b2d9      	uxtb	r1, r3
 801ea1e:	f107 0308 	add.w	r3, r7, #8
 801ea22:	f06f 427f 	mvn.w	r2, #4278190080	; 0xff000000
 801ea26:	4618      	mov	r0, r3
 801ea28:	f000 fd00 	bl	801f42c <SUBGRF_SendPayload>
 801ea2c:	e000      	b.n	801ea30 <RadioSend+0x168>
 801ea2e:	bf00      	nop
 801ea30:	4b07      	ldr	r3, [pc, #28]	; (801ea50 <RadioSend+0x188>)
 801ea32:	685b      	ldr	r3, [r3, #4]
 801ea34:	4619      	mov	r1, r3
 801ea36:	4808      	ldr	r0, [pc, #32]	; (801ea58 <RadioSend+0x190>)
 801ea38:	f002 fbc0 	bl	80211bc <UTIL_TIMER_SetPeriod>
 801ea3c:	4806      	ldr	r0, [pc, #24]	; (801ea58 <RadioSend+0x190>)
 801ea3e:	f002 fadf 	bl	8021000 <UTIL_TIMER_Start>
 801ea42:	bf00      	nop
 801ea44:	3730      	adds	r7, #48	; 0x30
 801ea46:	46bd      	mov	sp, r7
 801ea48:	bd80      	pop	{r7, pc}
 801ea4a:	bf00      	nop
 801ea4c:	48000400 	.word	0x48000400
 801ea50:	20001ffc 	.word	0x20001ffc
 801ea54:	2000200a 	.word	0x2000200a
 801ea58:	20002054 	.word	0x20002054

0801ea5c <RadioSleep>:
 801ea5c:	b580      	push	{r7, lr}
 801ea5e:	b082      	sub	sp, #8
 801ea60:	af00      	add	r7, sp, #0
 801ea62:	2300      	movs	r3, #0
 801ea64:	713b      	strb	r3, [r7, #4]
 801ea66:	793b      	ldrb	r3, [r7, #4]
 801ea68:	f043 0304 	orr.w	r3, r3, #4
 801ea6c:	713b      	strb	r3, [r7, #4]
 801ea6e:	7938      	ldrb	r0, [r7, #4]
 801ea70:	f000 fdb8 	bl	801f5e4 <SUBGRF_SetSleep>
 801ea74:	2002      	movs	r0, #2
 801ea76:	f7e7 fcb4 	bl	80063e2 <HAL_Delay>
 801ea7a:	bf00      	nop
 801ea7c:	3708      	adds	r7, #8
 801ea7e:	46bd      	mov	sp, r7
 801ea80:	bd80      	pop	{r7, pc}

0801ea82 <RadioStandby>:
 801ea82:	b580      	push	{r7, lr}
 801ea84:	af00      	add	r7, sp, #0
 801ea86:	2000      	movs	r0, #0
 801ea88:	f000 fde0 	bl	801f64c <SUBGRF_SetStandby>
 801ea8c:	bf00      	nop
 801ea8e:	bd80      	pop	{r7, pc}

0801ea90 <RadioRx>:
 801ea90:	b580      	push	{r7, lr}
 801ea92:	b082      	sub	sp, #8
 801ea94:	af00      	add	r7, sp, #0
 801ea96:	6078      	str	r0, [r7, #4]
 801ea98:	2300      	movs	r3, #0
 801ea9a:	2200      	movs	r2, #0
 801ea9c:	f64f 71ff 	movw	r1, #65535	; 0xffff
 801eaa0:	f64f 70ff 	movw	r0, #65535	; 0xffff
 801eaa4:	f000 ffc4 	bl	801fa30 <SUBGRF_SetDioIrqParams>
 801eaa8:	687b      	ldr	r3, [r7, #4]
 801eaaa:	2b00      	cmp	r3, #0
 801eaac:	d006      	beq.n	801eabc <RadioRx+0x2c>
 801eaae:	6879      	ldr	r1, [r7, #4]
 801eab0:	4812      	ldr	r0, [pc, #72]	; (801eafc <RadioRx+0x6c>)
 801eab2:	f002 fb83 	bl	80211bc <UTIL_TIMER_SetPeriod>
 801eab6:	4811      	ldr	r0, [pc, #68]	; (801eafc <RadioRx+0x6c>)
 801eab8:	f002 faa2 	bl	8021000 <UTIL_TIMER_Start>
 801eabc:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 801eac0:	480f      	ldr	r0, [pc, #60]	; (801eb00 <RadioRx+0x70>)
 801eac2:	f7fe fe06 	bl	801d6d2 <LL_GPIO_SetOutputPin>
 801eac6:	4b0f      	ldr	r3, [pc, #60]	; (801eb04 <RadioRx+0x74>)
 801eac8:	f893 3056 	ldrb.w	r3, [r3, #86]	; 0x56
 801eacc:	2100      	movs	r1, #0
 801eace:	4618      	mov	r0, r3
 801ead0:	f001 fb80 	bl	80201d4 <SUBGRF_SetSwitch>
 801ead4:	4b0b      	ldr	r3, [pc, #44]	; (801eb04 <RadioRx+0x74>)
 801ead6:	785b      	ldrb	r3, [r3, #1]
 801ead8:	2b00      	cmp	r3, #0
 801eada:	d004      	beq.n	801eae6 <RadioRx+0x56>
 801eadc:	f06f 407f 	mvn.w	r0, #4278190080	; 0xff000000
 801eae0:	f000 fdf4 	bl	801f6cc <SUBGRF_SetRx>
 801eae4:	e005      	b.n	801eaf2 <RadioRx+0x62>
 801eae6:	4b07      	ldr	r3, [pc, #28]	; (801eb04 <RadioRx+0x74>)
 801eae8:	689b      	ldr	r3, [r3, #8]
 801eaea:	019b      	lsls	r3, r3, #6
 801eaec:	4618      	mov	r0, r3
 801eaee:	f000 fded 	bl	801f6cc <SUBGRF_SetRx>
 801eaf2:	bf00      	nop
 801eaf4:	3708      	adds	r7, #8
 801eaf6:	46bd      	mov	sp, r7
 801eaf8:	bd80      	pop	{r7, pc}
 801eafa:	bf00      	nop
 801eafc:	2000206c 	.word	0x2000206c
 801eb00:	48000400 	.word	0x48000400
 801eb04:	20001ffc 	.word	0x20001ffc

0801eb08 <RadioRxBoosted>:
 801eb08:	b580      	push	{r7, lr}
 801eb0a:	b082      	sub	sp, #8
 801eb0c:	af00      	add	r7, sp, #0
 801eb0e:	6078      	str	r0, [r7, #4]
 801eb10:	2300      	movs	r3, #0
 801eb12:	2200      	movs	r2, #0
 801eb14:	f64f 71ff 	movw	r1, #65535	; 0xffff
 801eb18:	f64f 70ff 	movw	r0, #65535	; 0xffff
 801eb1c:	f000 ff88 	bl	801fa30 <SUBGRF_SetDioIrqParams>
 801eb20:	687b      	ldr	r3, [r7, #4]
 801eb22:	2b00      	cmp	r3, #0
 801eb24:	d006      	beq.n	801eb34 <RadioRxBoosted+0x2c>
 801eb26:	6879      	ldr	r1, [r7, #4]
 801eb28:	480f      	ldr	r0, [pc, #60]	; (801eb68 <RadioRxBoosted+0x60>)
 801eb2a:	f002 fb47 	bl	80211bc <UTIL_TIMER_SetPeriod>
 801eb2e:	480e      	ldr	r0, [pc, #56]	; (801eb68 <RadioRxBoosted+0x60>)
 801eb30:	f002 fa66 	bl	8021000 <UTIL_TIMER_Start>
 801eb34:	4b0d      	ldr	r3, [pc, #52]	; (801eb6c <RadioRxBoosted+0x64>)
 801eb36:	f893 3056 	ldrb.w	r3, [r3, #86]	; 0x56
 801eb3a:	2100      	movs	r1, #0
 801eb3c:	4618      	mov	r0, r3
 801eb3e:	f001 fb49 	bl	80201d4 <SUBGRF_SetSwitch>
 801eb42:	4b0a      	ldr	r3, [pc, #40]	; (801eb6c <RadioRxBoosted+0x64>)
 801eb44:	785b      	ldrb	r3, [r3, #1]
 801eb46:	2b00      	cmp	r3, #0
 801eb48:	d004      	beq.n	801eb54 <RadioRxBoosted+0x4c>
 801eb4a:	f06f 407f 	mvn.w	r0, #4278190080	; 0xff000000
 801eb4e:	f000 fddf 	bl	801f710 <SUBGRF_SetRxBoosted>
 801eb52:	e005      	b.n	801eb60 <RadioRxBoosted+0x58>
 801eb54:	4b05      	ldr	r3, [pc, #20]	; (801eb6c <RadioRxBoosted+0x64>)
 801eb56:	689b      	ldr	r3, [r3, #8]
 801eb58:	019b      	lsls	r3, r3, #6
 801eb5a:	4618      	mov	r0, r3
 801eb5c:	f000 fdd8 	bl	801f710 <SUBGRF_SetRxBoosted>
 801eb60:	bf00      	nop
 801eb62:	3708      	adds	r7, #8
 801eb64:	46bd      	mov	sp, r7
 801eb66:	bd80      	pop	{r7, pc}
 801eb68:	2000206c 	.word	0x2000206c
 801eb6c:	20001ffc 	.word	0x20001ffc

0801eb70 <RadioSetRxDutyCycle>:
 801eb70:	b580      	push	{r7, lr}
 801eb72:	b082      	sub	sp, #8
 801eb74:	af00      	add	r7, sp, #0
 801eb76:	6078      	str	r0, [r7, #4]
 801eb78:	6039      	str	r1, [r7, #0]
 801eb7a:	4b07      	ldr	r3, [pc, #28]	; (801eb98 <RadioSetRxDutyCycle+0x28>)
 801eb7c:	f893 3056 	ldrb.w	r3, [r3, #86]	; 0x56
 801eb80:	2100      	movs	r1, #0
 801eb82:	4618      	mov	r0, r3
 801eb84:	f001 fb26 	bl	80201d4 <SUBGRF_SetSwitch>
 801eb88:	6839      	ldr	r1, [r7, #0]
 801eb8a:	6878      	ldr	r0, [r7, #4]
 801eb8c:	f000 fde6 	bl	801f75c <SUBGRF_SetRxDutyCycle>
 801eb90:	bf00      	nop
 801eb92:	3708      	adds	r7, #8
 801eb94:	46bd      	mov	sp, r7
 801eb96:	bd80      	pop	{r7, pc}
 801eb98:	20001ffc 	.word	0x20001ffc

0801eb9c <RadioStartCad>:
 801eb9c:	b580      	push	{r7, lr}
 801eb9e:	af00      	add	r7, sp, #0
 801eba0:	2300      	movs	r3, #0
 801eba2:	2200      	movs	r2, #0
 801eba4:	f44f 71c0 	mov.w	r1, #384	; 0x180
 801eba8:	f44f 70c0 	mov.w	r0, #384	; 0x180
 801ebac:	f000 ff40 	bl	801fa30 <SUBGRF_SetDioIrqParams>
 801ebb0:	f000 fe02 	bl	801f7b8 <SUBGRF_SetCad>
 801ebb4:	bf00      	nop
 801ebb6:	bd80      	pop	{r7, pc}

0801ebb8 <RadioSetTxContinuousWave>:
 801ebb8:	b580      	push	{r7, lr}
 801ebba:	b084      	sub	sp, #16
 801ebbc:	af00      	add	r7, sp, #0
 801ebbe:	6078      	str	r0, [r7, #4]
 801ebc0:	460b      	mov	r3, r1
 801ebc2:	70fb      	strb	r3, [r7, #3]
 801ebc4:	4613      	mov	r3, r2
 801ebc6:	803b      	strh	r3, [r7, #0]
 801ebc8:	883b      	ldrh	r3, [r7, #0]
 801ebca:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 801ebce:	fb02 f303 	mul.w	r3, r2, r3
 801ebd2:	60fb      	str	r3, [r7, #12]
 801ebd4:	6878      	ldr	r0, [r7, #4]
 801ebd6:	f000 ff8b 	bl	801faf0 <SUBGRF_SetRfFrequency>
 801ebda:	f997 3003 	ldrsb.w	r3, [r7, #3]
 801ebde:	4618      	mov	r0, r3
 801ebe0:	f001 fb20 	bl	8020224 <SUBGRF_SetRfTxPower>
 801ebe4:	4603      	mov	r3, r0
 801ebe6:	72fb      	strb	r3, [r7, #11]
 801ebe8:	7afb      	ldrb	r3, [r7, #11]
 801ebea:	2101      	movs	r1, #1
 801ebec:	4618      	mov	r0, r3
 801ebee:	f001 faf1 	bl	80201d4 <SUBGRF_SetSwitch>
 801ebf2:	f000 fdf3 	bl	801f7dc <SUBGRF_SetTxContinuousWave>
 801ebf6:	68f9      	ldr	r1, [r7, #12]
 801ebf8:	4804      	ldr	r0, [pc, #16]	; (801ec0c <RadioSetTxContinuousWave+0x54>)
 801ebfa:	f002 fadf 	bl	80211bc <UTIL_TIMER_SetPeriod>
 801ebfe:	4803      	ldr	r0, [pc, #12]	; (801ec0c <RadioSetTxContinuousWave+0x54>)
 801ec00:	f002 f9fe 	bl	8021000 <UTIL_TIMER_Start>
 801ec04:	bf00      	nop
 801ec06:	3710      	adds	r7, #16
 801ec08:	46bd      	mov	sp, r7
 801ec0a:	bd80      	pop	{r7, pc}
 801ec0c:	20002054 	.word	0x20002054

0801ec10 <RadioRssi>:
 801ec10:	b580      	push	{r7, lr}
 801ec12:	b082      	sub	sp, #8
 801ec14:	af00      	add	r7, sp, #0
 801ec16:	4603      	mov	r3, r0
 801ec18:	71fb      	strb	r3, [r7, #7]
 801ec1a:	f001 f9c5 	bl	801ffa8 <SUBGRF_GetRssiInst>
 801ec1e:	4603      	mov	r3, r0
 801ec20:	b21b      	sxth	r3, r3
 801ec22:	4618      	mov	r0, r3
 801ec24:	3708      	adds	r7, #8
 801ec26:	46bd      	mov	sp, r7
 801ec28:	bd80      	pop	{r7, pc}

0801ec2a <RadioWrite>:
 801ec2a:	b580      	push	{r7, lr}
 801ec2c:	b082      	sub	sp, #8
 801ec2e:	af00      	add	r7, sp, #0
 801ec30:	4603      	mov	r3, r0
 801ec32:	460a      	mov	r2, r1
 801ec34:	80fb      	strh	r3, [r7, #6]
 801ec36:	4613      	mov	r3, r2
 801ec38:	717b      	strb	r3, [r7, #5]
 801ec3a:	797a      	ldrb	r2, [r7, #5]
 801ec3c:	88fb      	ldrh	r3, [r7, #6]
 801ec3e:	4611      	mov	r1, r2
 801ec40:	4618      	mov	r0, r3
 801ec42:	f001 fa4b 	bl	80200dc <SUBGRF_WriteRegister>
 801ec46:	bf00      	nop
 801ec48:	3708      	adds	r7, #8
 801ec4a:	46bd      	mov	sp, r7
 801ec4c:	bd80      	pop	{r7, pc}

0801ec4e <RadioRead>:
 801ec4e:	b580      	push	{r7, lr}
 801ec50:	b082      	sub	sp, #8
 801ec52:	af00      	add	r7, sp, #0
 801ec54:	4603      	mov	r3, r0
 801ec56:	80fb      	strh	r3, [r7, #6]
 801ec58:	88fb      	ldrh	r3, [r7, #6]
 801ec5a:	4618      	mov	r0, r3
 801ec5c:	f001 fa52 	bl	8020104 <SUBGRF_ReadRegister>
 801ec60:	4603      	mov	r3, r0
 801ec62:	4618      	mov	r0, r3
 801ec64:	3708      	adds	r7, #8
 801ec66:	46bd      	mov	sp, r7
 801ec68:	bd80      	pop	{r7, pc}

0801ec6a <RadioWriteRegisters>:
 801ec6a:	b580      	push	{r7, lr}
 801ec6c:	b082      	sub	sp, #8
 801ec6e:	af00      	add	r7, sp, #0
 801ec70:	4603      	mov	r3, r0
 801ec72:	6039      	str	r1, [r7, #0]
 801ec74:	80fb      	strh	r3, [r7, #6]
 801ec76:	4613      	mov	r3, r2
 801ec78:	717b      	strb	r3, [r7, #5]
 801ec7a:	797b      	ldrb	r3, [r7, #5]
 801ec7c:	b29a      	uxth	r2, r3
 801ec7e:	88fb      	ldrh	r3, [r7, #6]
 801ec80:	6839      	ldr	r1, [r7, #0]
 801ec82:	4618      	mov	r0, r3
 801ec84:	f001 fa52 	bl	802012c <SUBGRF_WriteRegisters>
 801ec88:	bf00      	nop
 801ec8a:	3708      	adds	r7, #8
 801ec8c:	46bd      	mov	sp, r7
 801ec8e:	bd80      	pop	{r7, pc}

0801ec90 <RadioReadRegisters>:
 801ec90:	b580      	push	{r7, lr}
 801ec92:	b082      	sub	sp, #8
 801ec94:	af00      	add	r7, sp, #0
 801ec96:	4603      	mov	r3, r0
 801ec98:	6039      	str	r1, [r7, #0]
 801ec9a:	80fb      	strh	r3, [r7, #6]
 801ec9c:	4613      	mov	r3, r2
 801ec9e:	717b      	strb	r3, [r7, #5]
 801eca0:	797b      	ldrb	r3, [r7, #5]
 801eca2:	b29a      	uxth	r2, r3
 801eca4:	88fb      	ldrh	r3, [r7, #6]
 801eca6:	6839      	ldr	r1, [r7, #0]
 801eca8:	4618      	mov	r0, r3
 801ecaa:	f001 fa53 	bl	8020154 <SUBGRF_ReadRegisters>
 801ecae:	bf00      	nop
 801ecb0:	3708      	adds	r7, #8
 801ecb2:	46bd      	mov	sp, r7
 801ecb4:	bd80      	pop	{r7, pc}
	...

0801ecb8 <RadioSetMaxPayloadLength>:
 801ecb8:	b580      	push	{r7, lr}
 801ecba:	b082      	sub	sp, #8
 801ecbc:	af00      	add	r7, sp, #0
 801ecbe:	4603      	mov	r3, r0
 801ecc0:	460a      	mov	r2, r1
 801ecc2:	71fb      	strb	r3, [r7, #7]
 801ecc4:	4613      	mov	r3, r2
 801ecc6:	71bb      	strb	r3, [r7, #6]
 801ecc8:	79fb      	ldrb	r3, [r7, #7]
 801ecca:	2b01      	cmp	r3, #1
 801eccc:	d10a      	bne.n	801ece4 <RadioSetMaxPayloadLength+0x2c>
 801ecce:	4a0e      	ldr	r2, [pc, #56]	; (801ed08 <RadioSetMaxPayloadLength+0x50>)
 801ecd0:	79bb      	ldrb	r3, [r7, #6]
 801ecd2:	7013      	strb	r3, [r2, #0]
 801ecd4:	4b0c      	ldr	r3, [pc, #48]	; (801ed08 <RadioSetMaxPayloadLength+0x50>)
 801ecd6:	781a      	ldrb	r2, [r3, #0]
 801ecd8:	4b0c      	ldr	r3, [pc, #48]	; (801ed0c <RadioSetMaxPayloadLength+0x54>)
 801ecda:	77da      	strb	r2, [r3, #31]
 801ecdc:	480c      	ldr	r0, [pc, #48]	; (801ed10 <RadioSetMaxPayloadLength+0x58>)
 801ecde:	f001 f8a9 	bl	801fe34 <SUBGRF_SetPacketParams>
 801ece2:	e00d      	b.n	801ed00 <RadioSetMaxPayloadLength+0x48>
 801ece4:	4b09      	ldr	r3, [pc, #36]	; (801ed0c <RadioSetMaxPayloadLength+0x54>)
 801ece6:	7d5b      	ldrb	r3, [r3, #21]
 801ece8:	2b01      	cmp	r3, #1
 801ecea:	d109      	bne.n	801ed00 <RadioSetMaxPayloadLength+0x48>
 801ecec:	4a06      	ldr	r2, [pc, #24]	; (801ed08 <RadioSetMaxPayloadLength+0x50>)
 801ecee:	79bb      	ldrb	r3, [r7, #6]
 801ecf0:	7013      	strb	r3, [r2, #0]
 801ecf2:	4b05      	ldr	r3, [pc, #20]	; (801ed08 <RadioSetMaxPayloadLength+0x50>)
 801ecf4:	781a      	ldrb	r2, [r3, #0]
 801ecf6:	4b05      	ldr	r3, [pc, #20]	; (801ed0c <RadioSetMaxPayloadLength+0x54>)
 801ecf8:	759a      	strb	r2, [r3, #22]
 801ecfa:	4805      	ldr	r0, [pc, #20]	; (801ed10 <RadioSetMaxPayloadLength+0x58>)
 801ecfc:	f001 f89a 	bl	801fe34 <SUBGRF_SetPacketParams>
 801ed00:	bf00      	nop
 801ed02:	3708      	adds	r7, #8
 801ed04:	46bd      	mov	sp, r7
 801ed06:	bd80      	pop	{r7, pc}
 801ed08:	200001c0 	.word	0x200001c0
 801ed0c:	20001ffc 	.word	0x20001ffc
 801ed10:	2000200a 	.word	0x2000200a

0801ed14 <RadioSetPublicNetwork>:
 801ed14:	b580      	push	{r7, lr}
 801ed16:	b082      	sub	sp, #8
 801ed18:	af00      	add	r7, sp, #0
 801ed1a:	4603      	mov	r3, r0
 801ed1c:	71fb      	strb	r3, [r7, #7]
 801ed1e:	4a13      	ldr	r2, [pc, #76]	; (801ed6c <RadioSetPublicNetwork+0x58>)
 801ed20:	79fb      	ldrb	r3, [r7, #7]
 801ed22:	7313      	strb	r3, [r2, #12]
 801ed24:	4b11      	ldr	r3, [pc, #68]	; (801ed6c <RadioSetPublicNetwork+0x58>)
 801ed26:	7b1a      	ldrb	r2, [r3, #12]
 801ed28:	4b10      	ldr	r3, [pc, #64]	; (801ed6c <RadioSetPublicNetwork+0x58>)
 801ed2a:	735a      	strb	r2, [r3, #13]
 801ed2c:	2001      	movs	r0, #1
 801ed2e:	f7ff f86d 	bl	801de0c <RadioSetModem>
 801ed32:	79fb      	ldrb	r3, [r7, #7]
 801ed34:	2b00      	cmp	r3, #0
 801ed36:	d00a      	beq.n	801ed4e <RadioSetPublicNetwork+0x3a>
 801ed38:	2134      	movs	r1, #52	; 0x34
 801ed3a:	f44f 60e8 	mov.w	r0, #1856	; 0x740
 801ed3e:	f001 f9cd 	bl	80200dc <SUBGRF_WriteRegister>
 801ed42:	2144      	movs	r1, #68	; 0x44
 801ed44:	f240 7041 	movw	r0, #1857	; 0x741
 801ed48:	f001 f9c8 	bl	80200dc <SUBGRF_WriteRegister>
 801ed4c:	e009      	b.n	801ed62 <RadioSetPublicNetwork+0x4e>
 801ed4e:	2114      	movs	r1, #20
 801ed50:	f44f 60e8 	mov.w	r0, #1856	; 0x740
 801ed54:	f001 f9c2 	bl	80200dc <SUBGRF_WriteRegister>
 801ed58:	2124      	movs	r1, #36	; 0x24
 801ed5a:	f240 7041 	movw	r0, #1857	; 0x741
 801ed5e:	f001 f9bd 	bl	80200dc <SUBGRF_WriteRegister>
 801ed62:	bf00      	nop
 801ed64:	3708      	adds	r7, #8
 801ed66:	46bd      	mov	sp, r7
 801ed68:	bd80      	pop	{r7, pc}
 801ed6a:	bf00      	nop
 801ed6c:	20001ffc 	.word	0x20001ffc

0801ed70 <RadioGetWakeupTime>:
 801ed70:	b580      	push	{r7, lr}
 801ed72:	af00      	add	r7, sp, #0
 801ed74:	f001 fa8a 	bl	802028c <SUBGRF_GetRadioWakeUpTime>
 801ed78:	4603      	mov	r3, r0
 801ed7a:	3303      	adds	r3, #3
 801ed7c:	4618      	mov	r0, r3
 801ed7e:	bd80      	pop	{r7, pc}

0801ed80 <RadioOnTxTimeoutIrq>:
 801ed80:	b580      	push	{r7, lr}
 801ed82:	b082      	sub	sp, #8
 801ed84:	af00      	add	r7, sp, #0
 801ed86:	6078      	str	r0, [r7, #4]
 801ed88:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 801ed8c:	4809      	ldr	r0, [pc, #36]	; (801edb4 <RadioOnTxTimeoutIrq+0x34>)
 801ed8e:	f7fe fcad 	bl	801d6ec <LL_GPIO_ResetOutputPin>
 801ed92:	4b09      	ldr	r3, [pc, #36]	; (801edb8 <RadioOnTxTimeoutIrq+0x38>)
 801ed94:	681b      	ldr	r3, [r3, #0]
 801ed96:	2b00      	cmp	r3, #0
 801ed98:	d008      	beq.n	801edac <RadioOnTxTimeoutIrq+0x2c>
 801ed9a:	4b07      	ldr	r3, [pc, #28]	; (801edb8 <RadioOnTxTimeoutIrq+0x38>)
 801ed9c:	681b      	ldr	r3, [r3, #0]
 801ed9e:	685b      	ldr	r3, [r3, #4]
 801eda0:	2b00      	cmp	r3, #0
 801eda2:	d003      	beq.n	801edac <RadioOnTxTimeoutIrq+0x2c>
 801eda4:	4b04      	ldr	r3, [pc, #16]	; (801edb8 <RadioOnTxTimeoutIrq+0x38>)
 801eda6:	681b      	ldr	r3, [r3, #0]
 801eda8:	685b      	ldr	r3, [r3, #4]
 801edaa:	4798      	blx	r3
 801edac:	bf00      	nop
 801edae:	3708      	adds	r7, #8
 801edb0:	46bd      	mov	sp, r7
 801edb2:	bd80      	pop	{r7, pc}
 801edb4:	48000400 	.word	0x48000400
 801edb8:	20001944 	.word	0x20001944

0801edbc <RadioOnRxTimeoutIrq>:
 801edbc:	b580      	push	{r7, lr}
 801edbe:	b082      	sub	sp, #8
 801edc0:	af00      	add	r7, sp, #0
 801edc2:	6078      	str	r0, [r7, #4]
 801edc4:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 801edc8:	4809      	ldr	r0, [pc, #36]	; (801edf0 <RadioOnRxTimeoutIrq+0x34>)
 801edca:	f7fe fc8f 	bl	801d6ec <LL_GPIO_ResetOutputPin>
 801edce:	4b09      	ldr	r3, [pc, #36]	; (801edf4 <RadioOnRxTimeoutIrq+0x38>)
 801edd0:	681b      	ldr	r3, [r3, #0]
 801edd2:	2b00      	cmp	r3, #0
 801edd4:	d008      	beq.n	801ede8 <RadioOnRxTimeoutIrq+0x2c>
 801edd6:	4b07      	ldr	r3, [pc, #28]	; (801edf4 <RadioOnRxTimeoutIrq+0x38>)
 801edd8:	681b      	ldr	r3, [r3, #0]
 801edda:	68db      	ldr	r3, [r3, #12]
 801eddc:	2b00      	cmp	r3, #0
 801edde:	d003      	beq.n	801ede8 <RadioOnRxTimeoutIrq+0x2c>
 801ede0:	4b04      	ldr	r3, [pc, #16]	; (801edf4 <RadioOnRxTimeoutIrq+0x38>)
 801ede2:	681b      	ldr	r3, [r3, #0]
 801ede4:	68db      	ldr	r3, [r3, #12]
 801ede6:	4798      	blx	r3
 801ede8:	bf00      	nop
 801edea:	3708      	adds	r7, #8
 801edec:	46bd      	mov	sp, r7
 801edee:	bd80      	pop	{r7, pc}
 801edf0:	48000400 	.word	0x48000400
 801edf4:	20001944 	.word	0x20001944

0801edf8 <RadioOnDioIrq>:
 801edf8:	b580      	push	{r7, lr}
 801edfa:	b082      	sub	sp, #8
 801edfc:	af00      	add	r7, sp, #0
 801edfe:	4603      	mov	r3, r0
 801ee00:	80fb      	strh	r3, [r7, #6]
 801ee02:	4a05      	ldr	r2, [pc, #20]	; (801ee18 <RadioOnDioIrq+0x20>)
 801ee04:	88fb      	ldrh	r3, [r7, #6]
 801ee06:	f8a2 3054 	strh.w	r3, [r2, #84]	; 0x54
 801ee0a:	f000 f807 	bl	801ee1c <RadioIrqProcess>
 801ee0e:	bf00      	nop
 801ee10:	3708      	adds	r7, #8
 801ee12:	46bd      	mov	sp, r7
 801ee14:	bd80      	pop	{r7, pc}
 801ee16:	bf00      	nop
 801ee18:	20001ffc 	.word	0x20001ffc

0801ee1c <RadioIrqProcess>:
 801ee1c:	b590      	push	{r4, r7, lr}
 801ee1e:	b083      	sub	sp, #12
 801ee20:	af00      	add	r7, sp, #0
 801ee22:	4bb8      	ldr	r3, [pc, #736]	; (801f104 <RadioIrqProcess+0x2e8>)
 801ee24:	f8b3 3054 	ldrh.w	r3, [r3, #84]	; 0x54
 801ee28:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 801ee2c:	f000 8119 	beq.w	801f062 <RadioIrqProcess+0x246>
 801ee30:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 801ee34:	f300 819b 	bgt.w	801f16e <RadioIrqProcess+0x352>
 801ee38:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 801ee3c:	f000 80fd 	beq.w	801f03a <RadioIrqProcess+0x21e>
 801ee40:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 801ee44:	f300 8193 	bgt.w	801f16e <RadioIrqProcess+0x352>
 801ee48:	2b80      	cmp	r3, #128	; 0x80
 801ee4a:	f000 80e2 	beq.w	801f012 <RadioIrqProcess+0x1f6>
 801ee4e:	2b80      	cmp	r3, #128	; 0x80
 801ee50:	f300 818d 	bgt.w	801f16e <RadioIrqProcess+0x352>
 801ee54:	2b20      	cmp	r3, #32
 801ee56:	dc49      	bgt.n	801eeec <RadioIrqProcess+0xd0>
 801ee58:	2b00      	cmp	r3, #0
 801ee5a:	f340 8188 	ble.w	801f16e <RadioIrqProcess+0x352>
 801ee5e:	3b01      	subs	r3, #1
 801ee60:	2b1f      	cmp	r3, #31
 801ee62:	f200 8184 	bhi.w	801f16e <RadioIrqProcess+0x352>
 801ee66:	a201      	add	r2, pc, #4	; (adr r2, 801ee6c <RadioIrqProcess+0x50>)
 801ee68:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 801ee6c:	0801eef3 	.word	0x0801eef3
 801ee70:	0801ef29 	.word	0x0801ef29
 801ee74:	0801f16f 	.word	0x0801f16f
 801ee78:	0801f0db 	.word	0x0801f0db
 801ee7c:	0801f16f 	.word	0x0801f16f
 801ee80:	0801f16f 	.word	0x0801f16f
 801ee84:	0801f16f 	.word	0x0801f16f
 801ee88:	0801f0e9 	.word	0x0801f0e9
 801ee8c:	0801f16f 	.word	0x0801f16f
 801ee90:	0801f16f 	.word	0x0801f16f
 801ee94:	0801f16f 	.word	0x0801f16f
 801ee98:	0801f16f 	.word	0x0801f16f
 801ee9c:	0801f16f 	.word	0x0801f16f
 801eea0:	0801f16f 	.word	0x0801f16f
 801eea4:	0801f16f 	.word	0x0801f16f
 801eea8:	0801f0f7 	.word	0x0801f0f7
 801eeac:	0801f16f 	.word	0x0801f16f
 801eeb0:	0801f16f 	.word	0x0801f16f
 801eeb4:	0801f16f 	.word	0x0801f16f
 801eeb8:	0801f16f 	.word	0x0801f16f
 801eebc:	0801f16f 	.word	0x0801f16f
 801eec0:	0801f16f 	.word	0x0801f16f
 801eec4:	0801f16f 	.word	0x0801f16f
 801eec8:	0801f16f 	.word	0x0801f16f
 801eecc:	0801f16f 	.word	0x0801f16f
 801eed0:	0801f16f 	.word	0x0801f16f
 801eed4:	0801f16f 	.word	0x0801f16f
 801eed8:	0801f16f 	.word	0x0801f16f
 801eedc:	0801f16f 	.word	0x0801f16f
 801eee0:	0801f16f 	.word	0x0801f16f
 801eee4:	0801f16f 	.word	0x0801f16f
 801eee8:	0801f12d 	.word	0x0801f12d
 801eeec:	2b40      	cmp	r3, #64	; 0x40
 801eeee:	d076      	beq.n	801efde <RadioIrqProcess+0x1c2>
 801eef0:	e13d      	b.n	801f16e <RadioIrqProcess+0x352>
 801eef2:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 801eef6:	4884      	ldr	r0, [pc, #528]	; (801f108 <RadioIrqProcess+0x2ec>)
 801eef8:	f7fe fbf8 	bl	801d6ec <LL_GPIO_ResetOutputPin>
 801eefc:	4883      	ldr	r0, [pc, #524]	; (801f10c <RadioIrqProcess+0x2f0>)
 801eefe:	f002 f8ed 	bl	80210dc <UTIL_TIMER_Stop>
 801ef02:	2000      	movs	r0, #0
 801ef04:	f000 fba2 	bl	801f64c <SUBGRF_SetStandby>
 801ef08:	4b81      	ldr	r3, [pc, #516]	; (801f110 <RadioIrqProcess+0x2f4>)
 801ef0a:	681b      	ldr	r3, [r3, #0]
 801ef0c:	2b00      	cmp	r3, #0
 801ef0e:	f000 8130 	beq.w	801f172 <RadioIrqProcess+0x356>
 801ef12:	4b7f      	ldr	r3, [pc, #508]	; (801f110 <RadioIrqProcess+0x2f4>)
 801ef14:	681b      	ldr	r3, [r3, #0]
 801ef16:	681b      	ldr	r3, [r3, #0]
 801ef18:	2b00      	cmp	r3, #0
 801ef1a:	f000 812a 	beq.w	801f172 <RadioIrqProcess+0x356>
 801ef1e:	4b7c      	ldr	r3, [pc, #496]	; (801f110 <RadioIrqProcess+0x2f4>)
 801ef20:	681b      	ldr	r3, [r3, #0]
 801ef22:	681b      	ldr	r3, [r3, #0]
 801ef24:	4798      	blx	r3
 801ef26:	e124      	b.n	801f172 <RadioIrqProcess+0x356>
 801ef28:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 801ef2c:	4876      	ldr	r0, [pc, #472]	; (801f108 <RadioIrqProcess+0x2ec>)
 801ef2e:	f7fe fbdd 	bl	801d6ec <LL_GPIO_ResetOutputPin>
 801ef32:	4878      	ldr	r0, [pc, #480]	; (801f114 <RadioIrqProcess+0x2f8>)
 801ef34:	f002 f8d2 	bl	80210dc <UTIL_TIMER_Stop>
 801ef38:	4b72      	ldr	r3, [pc, #456]	; (801f104 <RadioIrqProcess+0x2e8>)
 801ef3a:	785b      	ldrb	r3, [r3, #1]
 801ef3c:	f083 0301 	eor.w	r3, r3, #1
 801ef40:	b2db      	uxtb	r3, r3
 801ef42:	2b00      	cmp	r3, #0
 801ef44:	d014      	beq.n	801ef70 <RadioIrqProcess+0x154>
 801ef46:	2000      	movs	r0, #0
 801ef48:	f000 fb80 	bl	801f64c <SUBGRF_SetStandby>
 801ef4c:	2100      	movs	r1, #0
 801ef4e:	f640 1002 	movw	r0, #2306	; 0x902
 801ef52:	f001 f8c3 	bl	80200dc <SUBGRF_WriteRegister>
 801ef56:	f640 1044 	movw	r0, #2372	; 0x944
 801ef5a:	f001 f8d3 	bl	8020104 <SUBGRF_ReadRegister>
 801ef5e:	4603      	mov	r3, r0
 801ef60:	f043 0302 	orr.w	r3, r3, #2
 801ef64:	b2db      	uxtb	r3, r3
 801ef66:	4619      	mov	r1, r3
 801ef68:	f640 1044 	movw	r0, #2372	; 0x944
 801ef6c:	f001 f8b6 	bl	80200dc <SUBGRF_WriteRegister>
 801ef70:	1dfb      	adds	r3, r7, #7
 801ef72:	22ff      	movs	r2, #255	; 0xff
 801ef74:	4619      	mov	r1, r3
 801ef76:	4868      	ldr	r0, [pc, #416]	; (801f118 <RadioIrqProcess+0x2fc>)
 801ef78:	f000 fa36 	bl	801f3e8 <SUBGRF_GetPayload>
 801ef7c:	4867      	ldr	r0, [pc, #412]	; (801f11c <RadioIrqProcess+0x300>)
 801ef7e:	f001 f859 	bl	8020034 <SUBGRF_GetPacketStatus>
 801ef82:	4b63      	ldr	r3, [pc, #396]	; (801f110 <RadioIrqProcess+0x2f4>)
 801ef84:	681b      	ldr	r3, [r3, #0]
 801ef86:	2b00      	cmp	r3, #0
 801ef88:	d027      	beq.n	801efda <RadioIrqProcess+0x1be>
 801ef8a:	4b61      	ldr	r3, [pc, #388]	; (801f110 <RadioIrqProcess+0x2f4>)
 801ef8c:	681b      	ldr	r3, [r3, #0]
 801ef8e:	689b      	ldr	r3, [r3, #8]
 801ef90:	2b00      	cmp	r3, #0
 801ef92:	d022      	beq.n	801efda <RadioIrqProcess+0x1be>
 801ef94:	4b5b      	ldr	r3, [pc, #364]	; (801f104 <RadioIrqProcess+0x2e8>)
 801ef96:	f893 3024 	ldrb.w	r3, [r3, #36]	; 0x24
 801ef9a:	2b01      	cmp	r3, #1
 801ef9c:	d10e      	bne.n	801efbc <RadioIrqProcess+0x1a0>
 801ef9e:	4b5c      	ldr	r3, [pc, #368]	; (801f110 <RadioIrqProcess+0x2f4>)
 801efa0:	681b      	ldr	r3, [r3, #0]
 801efa2:	689c      	ldr	r4, [r3, #8]
 801efa4:	79fb      	ldrb	r3, [r7, #7]
 801efa6:	b299      	uxth	r1, r3
 801efa8:	4b56      	ldr	r3, [pc, #344]	; (801f104 <RadioIrqProcess+0x2e8>)
 801efaa:	f993 3030 	ldrsb.w	r3, [r3, #48]	; 0x30
 801efae:	b21a      	sxth	r2, r3
 801efb0:	4b54      	ldr	r3, [pc, #336]	; (801f104 <RadioIrqProcess+0x2e8>)
 801efb2:	f993 3031 	ldrsb.w	r3, [r3, #49]	; 0x31
 801efb6:	4858      	ldr	r0, [pc, #352]	; (801f118 <RadioIrqProcess+0x2fc>)
 801efb8:	47a0      	blx	r4
 801efba:	e00f      	b.n	801efdc <RadioIrqProcess+0x1c0>
 801efbc:	4b54      	ldr	r3, [pc, #336]	; (801f110 <RadioIrqProcess+0x2f4>)
 801efbe:	681b      	ldr	r3, [r3, #0]
 801efc0:	689c      	ldr	r4, [r3, #8]
 801efc2:	79fb      	ldrb	r3, [r7, #7]
 801efc4:	b299      	uxth	r1, r3
 801efc6:	4b4f      	ldr	r3, [pc, #316]	; (801f104 <RadioIrqProcess+0x2e8>)
 801efc8:	f993 3029 	ldrsb.w	r3, [r3, #41]	; 0x29
 801efcc:	b21a      	sxth	r2, r3
 801efce:	4b4d      	ldr	r3, [pc, #308]	; (801f104 <RadioIrqProcess+0x2e8>)
 801efd0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801efd2:	b25b      	sxtb	r3, r3
 801efd4:	4850      	ldr	r0, [pc, #320]	; (801f118 <RadioIrqProcess+0x2fc>)
 801efd6:	47a0      	blx	r4
 801efd8:	e000      	b.n	801efdc <RadioIrqProcess+0x1c0>
 801efda:	bf00      	nop
 801efdc:	e0d4      	b.n	801f188 <RadioIrqProcess+0x36c>
 801efde:	4b49      	ldr	r3, [pc, #292]	; (801f104 <RadioIrqProcess+0x2e8>)
 801efe0:	785b      	ldrb	r3, [r3, #1]
 801efe2:	f083 0301 	eor.w	r3, r3, #1
 801efe6:	b2db      	uxtb	r3, r3
 801efe8:	2b00      	cmp	r3, #0
 801efea:	d002      	beq.n	801eff2 <RadioIrqProcess+0x1d6>
 801efec:	2000      	movs	r0, #0
 801efee:	f000 fb2d 	bl	801f64c <SUBGRF_SetStandby>
 801eff2:	4b47      	ldr	r3, [pc, #284]	; (801f110 <RadioIrqProcess+0x2f4>)
 801eff4:	681b      	ldr	r3, [r3, #0]
 801eff6:	2b00      	cmp	r3, #0
 801eff8:	f000 80bd 	beq.w	801f176 <RadioIrqProcess+0x35a>
 801effc:	4b44      	ldr	r3, [pc, #272]	; (801f110 <RadioIrqProcess+0x2f4>)
 801effe:	681b      	ldr	r3, [r3, #0]
 801f000:	691b      	ldr	r3, [r3, #16]
 801f002:	2b00      	cmp	r3, #0
 801f004:	f000 80b7 	beq.w	801f176 <RadioIrqProcess+0x35a>
 801f008:	4b41      	ldr	r3, [pc, #260]	; (801f110 <RadioIrqProcess+0x2f4>)
 801f00a:	681b      	ldr	r3, [r3, #0]
 801f00c:	691b      	ldr	r3, [r3, #16]
 801f00e:	4798      	blx	r3
 801f010:	e0b1      	b.n	801f176 <RadioIrqProcess+0x35a>
 801f012:	2000      	movs	r0, #0
 801f014:	f000 fb1a 	bl	801f64c <SUBGRF_SetStandby>
 801f018:	4b3d      	ldr	r3, [pc, #244]	; (801f110 <RadioIrqProcess+0x2f4>)
 801f01a:	681b      	ldr	r3, [r3, #0]
 801f01c:	2b00      	cmp	r3, #0
 801f01e:	f000 80ac 	beq.w	801f17a <RadioIrqProcess+0x35e>
 801f022:	4b3b      	ldr	r3, [pc, #236]	; (801f110 <RadioIrqProcess+0x2f4>)
 801f024:	681b      	ldr	r3, [r3, #0]
 801f026:	699b      	ldr	r3, [r3, #24]
 801f028:	2b00      	cmp	r3, #0
 801f02a:	f000 80a6 	beq.w	801f17a <RadioIrqProcess+0x35e>
 801f02e:	4b38      	ldr	r3, [pc, #224]	; (801f110 <RadioIrqProcess+0x2f4>)
 801f030:	681b      	ldr	r3, [r3, #0]
 801f032:	699b      	ldr	r3, [r3, #24]
 801f034:	2000      	movs	r0, #0
 801f036:	4798      	blx	r3
 801f038:	e09f      	b.n	801f17a <RadioIrqProcess+0x35e>
 801f03a:	2000      	movs	r0, #0
 801f03c:	f000 fb06 	bl	801f64c <SUBGRF_SetStandby>
 801f040:	4b33      	ldr	r3, [pc, #204]	; (801f110 <RadioIrqProcess+0x2f4>)
 801f042:	681b      	ldr	r3, [r3, #0]
 801f044:	2b00      	cmp	r3, #0
 801f046:	f000 809a 	beq.w	801f17e <RadioIrqProcess+0x362>
 801f04a:	4b31      	ldr	r3, [pc, #196]	; (801f110 <RadioIrqProcess+0x2f4>)
 801f04c:	681b      	ldr	r3, [r3, #0]
 801f04e:	699b      	ldr	r3, [r3, #24]
 801f050:	2b00      	cmp	r3, #0
 801f052:	f000 8094 	beq.w	801f17e <RadioIrqProcess+0x362>
 801f056:	4b2e      	ldr	r3, [pc, #184]	; (801f110 <RadioIrqProcess+0x2f4>)
 801f058:	681b      	ldr	r3, [r3, #0]
 801f05a:	699b      	ldr	r3, [r3, #24]
 801f05c:	2001      	movs	r0, #1
 801f05e:	4798      	blx	r3
 801f060:	e08d      	b.n	801f17e <RadioIrqProcess+0x362>
 801f062:	f000 f9a7 	bl	801f3b4 <SUBGRF_GetOperatingMode>
 801f066:	4603      	mov	r3, r0
 801f068:	2b04      	cmp	r3, #4
 801f06a:	d118      	bne.n	801f09e <RadioIrqProcess+0x282>
 801f06c:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 801f070:	4825      	ldr	r0, [pc, #148]	; (801f108 <RadioIrqProcess+0x2ec>)
 801f072:	f7fe fb3b 	bl	801d6ec <LL_GPIO_ResetOutputPin>
 801f076:	4825      	ldr	r0, [pc, #148]	; (801f10c <RadioIrqProcess+0x2f0>)
 801f078:	f002 f830 	bl	80210dc <UTIL_TIMER_Stop>
 801f07c:	2000      	movs	r0, #0
 801f07e:	f000 fae5 	bl	801f64c <SUBGRF_SetStandby>
 801f082:	4b23      	ldr	r3, [pc, #140]	; (801f110 <RadioIrqProcess+0x2f4>)
 801f084:	681b      	ldr	r3, [r3, #0]
 801f086:	2b00      	cmp	r3, #0
 801f088:	d07b      	beq.n	801f182 <RadioIrqProcess+0x366>
 801f08a:	4b21      	ldr	r3, [pc, #132]	; (801f110 <RadioIrqProcess+0x2f4>)
 801f08c:	681b      	ldr	r3, [r3, #0]
 801f08e:	685b      	ldr	r3, [r3, #4]
 801f090:	2b00      	cmp	r3, #0
 801f092:	d076      	beq.n	801f182 <RadioIrqProcess+0x366>
 801f094:	4b1e      	ldr	r3, [pc, #120]	; (801f110 <RadioIrqProcess+0x2f4>)
 801f096:	681b      	ldr	r3, [r3, #0]
 801f098:	685b      	ldr	r3, [r3, #4]
 801f09a:	4798      	blx	r3
 801f09c:	e071      	b.n	801f182 <RadioIrqProcess+0x366>
 801f09e:	f000 f989 	bl	801f3b4 <SUBGRF_GetOperatingMode>
 801f0a2:	4603      	mov	r3, r0
 801f0a4:	2b05      	cmp	r3, #5
 801f0a6:	d16c      	bne.n	801f182 <RadioIrqProcess+0x366>
 801f0a8:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 801f0ac:	4816      	ldr	r0, [pc, #88]	; (801f108 <RadioIrqProcess+0x2ec>)
 801f0ae:	f7fe fb1d 	bl	801d6ec <LL_GPIO_ResetOutputPin>
 801f0b2:	4818      	ldr	r0, [pc, #96]	; (801f114 <RadioIrqProcess+0x2f8>)
 801f0b4:	f002 f812 	bl	80210dc <UTIL_TIMER_Stop>
 801f0b8:	2000      	movs	r0, #0
 801f0ba:	f000 fac7 	bl	801f64c <SUBGRF_SetStandby>
 801f0be:	4b14      	ldr	r3, [pc, #80]	; (801f110 <RadioIrqProcess+0x2f4>)
 801f0c0:	681b      	ldr	r3, [r3, #0]
 801f0c2:	2b00      	cmp	r3, #0
 801f0c4:	d05d      	beq.n	801f182 <RadioIrqProcess+0x366>
 801f0c6:	4b12      	ldr	r3, [pc, #72]	; (801f110 <RadioIrqProcess+0x2f4>)
 801f0c8:	681b      	ldr	r3, [r3, #0]
 801f0ca:	68db      	ldr	r3, [r3, #12]
 801f0cc:	2b00      	cmp	r3, #0
 801f0ce:	d058      	beq.n	801f182 <RadioIrqProcess+0x366>
 801f0d0:	4b0f      	ldr	r3, [pc, #60]	; (801f110 <RadioIrqProcess+0x2f4>)
 801f0d2:	681b      	ldr	r3, [r3, #0]
 801f0d4:	68db      	ldr	r3, [r3, #12]
 801f0d6:	4798      	blx	r3
 801f0d8:	e053      	b.n	801f182 <RadioIrqProcess+0x366>
 801f0da:	4b11      	ldr	r3, [pc, #68]	; (801f120 <RadioIrqProcess+0x304>)
 801f0dc:	2201      	movs	r2, #1
 801f0de:	2100      	movs	r1, #0
 801f0e0:	2002      	movs	r0, #2
 801f0e2:	f002 f9f3 	bl	80214cc <UTIL_ADV_TRACE_COND_FSend>
 801f0e6:	e04f      	b.n	801f188 <RadioIrqProcess+0x36c>
 801f0e8:	4b0e      	ldr	r3, [pc, #56]	; (801f124 <RadioIrqProcess+0x308>)
 801f0ea:	2201      	movs	r2, #1
 801f0ec:	2100      	movs	r1, #0
 801f0ee:	2002      	movs	r0, #2
 801f0f0:	f002 f9ec 	bl	80214cc <UTIL_ADV_TRACE_COND_FSend>
 801f0f4:	e048      	b.n	801f188 <RadioIrqProcess+0x36c>
 801f0f6:	4b0c      	ldr	r3, [pc, #48]	; (801f128 <RadioIrqProcess+0x30c>)
 801f0f8:	2201      	movs	r2, #1
 801f0fa:	2100      	movs	r1, #0
 801f0fc:	2002      	movs	r0, #2
 801f0fe:	f002 f9e5 	bl	80214cc <UTIL_ADV_TRACE_COND_FSend>
 801f102:	e041      	b.n	801f188 <RadioIrqProcess+0x36c>
 801f104:	20001ffc 	.word	0x20001ffc
 801f108:	48000400 	.word	0x48000400
 801f10c:	20002054 	.word	0x20002054
 801f110:	20001944 	.word	0x20001944
 801f114:	2000206c 	.word	0x2000206c
 801f118:	20001844 	.word	0x20001844
 801f11c:	20002020 	.word	0x20002020
 801f120:	080261e8 	.word	0x080261e8
 801f124:	080261f4 	.word	0x080261f4
 801f128:	08026200 	.word	0x08026200
 801f12c:	4818      	ldr	r0, [pc, #96]	; (801f190 <RadioIrqProcess+0x374>)
 801f12e:	f001 ffd5 	bl	80210dc <UTIL_TIMER_Stop>
 801f132:	4b18      	ldr	r3, [pc, #96]	; (801f194 <RadioIrqProcess+0x378>)
 801f134:	785b      	ldrb	r3, [r3, #1]
 801f136:	f083 0301 	eor.w	r3, r3, #1
 801f13a:	b2db      	uxtb	r3, r3
 801f13c:	2b00      	cmp	r3, #0
 801f13e:	d002      	beq.n	801f146 <RadioIrqProcess+0x32a>
 801f140:	2000      	movs	r0, #0
 801f142:	f000 fa83 	bl	801f64c <SUBGRF_SetStandby>
 801f146:	4b14      	ldr	r3, [pc, #80]	; (801f198 <RadioIrqProcess+0x37c>)
 801f148:	681b      	ldr	r3, [r3, #0]
 801f14a:	2b00      	cmp	r3, #0
 801f14c:	d01b      	beq.n	801f186 <RadioIrqProcess+0x36a>
 801f14e:	4b12      	ldr	r3, [pc, #72]	; (801f198 <RadioIrqProcess+0x37c>)
 801f150:	681b      	ldr	r3, [r3, #0]
 801f152:	68db      	ldr	r3, [r3, #12]
 801f154:	2b00      	cmp	r3, #0
 801f156:	d016      	beq.n	801f186 <RadioIrqProcess+0x36a>
 801f158:	4b0f      	ldr	r3, [pc, #60]	; (801f198 <RadioIrqProcess+0x37c>)
 801f15a:	681b      	ldr	r3, [r3, #0]
 801f15c:	68db      	ldr	r3, [r3, #12]
 801f15e:	4798      	blx	r3
 801f160:	4b0e      	ldr	r3, [pc, #56]	; (801f19c <RadioIrqProcess+0x380>)
 801f162:	2201      	movs	r2, #1
 801f164:	2100      	movs	r1, #0
 801f166:	2002      	movs	r0, #2
 801f168:	f002 f9b0 	bl	80214cc <UTIL_ADV_TRACE_COND_FSend>
 801f16c:	e00b      	b.n	801f186 <RadioIrqProcess+0x36a>
 801f16e:	bf00      	nop
 801f170:	e00a      	b.n	801f188 <RadioIrqProcess+0x36c>
 801f172:	bf00      	nop
 801f174:	e008      	b.n	801f188 <RadioIrqProcess+0x36c>
 801f176:	bf00      	nop
 801f178:	e006      	b.n	801f188 <RadioIrqProcess+0x36c>
 801f17a:	bf00      	nop
 801f17c:	e004      	b.n	801f188 <RadioIrqProcess+0x36c>
 801f17e:	bf00      	nop
 801f180:	e002      	b.n	801f188 <RadioIrqProcess+0x36c>
 801f182:	bf00      	nop
 801f184:	e000      	b.n	801f188 <RadioIrqProcess+0x36c>
 801f186:	bf00      	nop
 801f188:	bf00      	nop
 801f18a:	370c      	adds	r7, #12
 801f18c:	46bd      	mov	sp, r7
 801f18e:	bd90      	pop	{r4, r7, pc}
 801f190:	2000206c 	.word	0x2000206c
 801f194:	20001ffc 	.word	0x20001ffc
 801f198:	20001944 	.word	0x20001944
 801f19c:	0802620c 	.word	0x0802620c

0801f1a0 <RadioTxPrbs>:
 801f1a0:	b580      	push	{r7, lr}
 801f1a2:	af00      	add	r7, sp, #0
 801f1a4:	4b09      	ldr	r3, [pc, #36]	; (801f1cc <RadioTxPrbs+0x2c>)
 801f1a6:	f893 3056 	ldrb.w	r3, [r3, #86]	; 0x56
 801f1aa:	2101      	movs	r1, #1
 801f1ac:	4618      	mov	r0, r3
 801f1ae:	f001 f811 	bl	80201d4 <SUBGRF_SetSwitch>
 801f1b2:	4b07      	ldr	r3, [pc, #28]	; (801f1d0 <RadioTxPrbs+0x30>)
 801f1b4:	212d      	movs	r1, #45	; 0x2d
 801f1b6:	f44f 60d7 	mov.w	r0, #1720	; 0x6b8
 801f1ba:	4798      	blx	r3
 801f1bc:	f000 fb1a 	bl	801f7f4 <SUBGRF_SetTxInfinitePreamble>
 801f1c0:	4804      	ldr	r0, [pc, #16]	; (801f1d4 <RadioTxPrbs+0x34>)
 801f1c2:	f000 fa61 	bl	801f688 <SUBGRF_SetTx>
 801f1c6:	bf00      	nop
 801f1c8:	bd80      	pop	{r7, pc}
 801f1ca:	bf00      	nop
 801f1cc:	20001ffc 	.word	0x20001ffc
 801f1d0:	0801ec2b 	.word	0x0801ec2b
 801f1d4:	000fffff 	.word	0x000fffff

0801f1d8 <RadioTxCw>:
 801f1d8:	b580      	push	{r7, lr}
 801f1da:	b084      	sub	sp, #16
 801f1dc:	af00      	add	r7, sp, #0
 801f1de:	4603      	mov	r3, r0
 801f1e0:	71fb      	strb	r3, [r7, #7]
 801f1e2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 801f1e6:	4618      	mov	r0, r3
 801f1e8:	f001 f81c 	bl	8020224 <SUBGRF_SetRfTxPower>
 801f1ec:	4603      	mov	r3, r0
 801f1ee:	73fb      	strb	r3, [r7, #15]
 801f1f0:	7bfb      	ldrb	r3, [r7, #15]
 801f1f2:	2101      	movs	r1, #1
 801f1f4:	4618      	mov	r0, r3
 801f1f6:	f000 ffed 	bl	80201d4 <SUBGRF_SetSwitch>
 801f1fa:	f000 faef 	bl	801f7dc <SUBGRF_SetTxContinuousWave>
 801f1fe:	bf00      	nop
 801f200:	3710      	adds	r7, #16
 801f202:	46bd      	mov	sp, r7
 801f204:	bd80      	pop	{r7, pc}

0801f206 <payload_integration>:
 801f206:	b480      	push	{r7}
 801f208:	b089      	sub	sp, #36	; 0x24
 801f20a:	af00      	add	r7, sp, #0
 801f20c:	60f8      	str	r0, [r7, #12]
 801f20e:	60b9      	str	r1, [r7, #8]
 801f210:	4613      	mov	r3, r2
 801f212:	71fb      	strb	r3, [r7, #7]
 801f214:	2300      	movs	r3, #0
 801f216:	77fb      	strb	r3, [r7, #31]
 801f218:	2300      	movs	r3, #0
 801f21a:	61bb      	str	r3, [r7, #24]
 801f21c:	2300      	movs	r3, #0
 801f21e:	61bb      	str	r3, [r7, #24]
 801f220:	e011      	b.n	801f246 <payload_integration+0x40>
 801f222:	69bb      	ldr	r3, [r7, #24]
 801f224:	68ba      	ldr	r2, [r7, #8]
 801f226:	4413      	add	r3, r2
 801f228:	781a      	ldrb	r2, [r3, #0]
 801f22a:	69bb      	ldr	r3, [r7, #24]
 801f22c:	68b9      	ldr	r1, [r7, #8]
 801f22e:	440b      	add	r3, r1
 801f230:	43d2      	mvns	r2, r2
 801f232:	b2d2      	uxtb	r2, r2
 801f234:	701a      	strb	r2, [r3, #0]
 801f236:	69bb      	ldr	r3, [r7, #24]
 801f238:	68fa      	ldr	r2, [r7, #12]
 801f23a:	4413      	add	r3, r2
 801f23c:	2200      	movs	r2, #0
 801f23e:	701a      	strb	r2, [r3, #0]
 801f240:	69bb      	ldr	r3, [r7, #24]
 801f242:	3301      	adds	r3, #1
 801f244:	61bb      	str	r3, [r7, #24]
 801f246:	79fb      	ldrb	r3, [r7, #7]
 801f248:	69ba      	ldr	r2, [r7, #24]
 801f24a:	429a      	cmp	r2, r3
 801f24c:	dbe9      	blt.n	801f222 <payload_integration+0x1c>
 801f24e:	2300      	movs	r3, #0
 801f250:	61bb      	str	r3, [r7, #24]
 801f252:	e049      	b.n	801f2e8 <payload_integration+0xe2>
 801f254:	69bb      	ldr	r3, [r7, #24]
 801f256:	425a      	negs	r2, r3
 801f258:	f003 0307 	and.w	r3, r3, #7
 801f25c:	f002 0207 	and.w	r2, r2, #7
 801f260:	bf58      	it	pl
 801f262:	4253      	negpl	r3, r2
 801f264:	b2db      	uxtb	r3, r3
 801f266:	f1c3 0307 	rsb	r3, r3, #7
 801f26a:	75fb      	strb	r3, [r7, #23]
 801f26c:	69bb      	ldr	r3, [r7, #24]
 801f26e:	2b00      	cmp	r3, #0
 801f270:	da00      	bge.n	801f274 <payload_integration+0x6e>
 801f272:	3307      	adds	r3, #7
 801f274:	10db      	asrs	r3, r3, #3
 801f276:	75bb      	strb	r3, [r7, #22]
 801f278:	69bb      	ldr	r3, [r7, #24]
 801f27a:	3301      	adds	r3, #1
 801f27c:	425a      	negs	r2, r3
 801f27e:	f003 0307 	and.w	r3, r3, #7
 801f282:	f002 0207 	and.w	r2, r2, #7
 801f286:	bf58      	it	pl
 801f288:	4253      	negpl	r3, r2
 801f28a:	b2db      	uxtb	r3, r3
 801f28c:	f1c3 0307 	rsb	r3, r3, #7
 801f290:	757b      	strb	r3, [r7, #21]
 801f292:	69bb      	ldr	r3, [r7, #24]
 801f294:	3301      	adds	r3, #1
 801f296:	2b00      	cmp	r3, #0
 801f298:	da00      	bge.n	801f29c <payload_integration+0x96>
 801f29a:	3307      	adds	r3, #7
 801f29c:	10db      	asrs	r3, r3, #3
 801f29e:	753b      	strb	r3, [r7, #20]
 801f2a0:	7dbb      	ldrb	r3, [r7, #22]
 801f2a2:	68ba      	ldr	r2, [r7, #8]
 801f2a4:	4413      	add	r3, r2
 801f2a6:	781b      	ldrb	r3, [r3, #0]
 801f2a8:	461a      	mov	r2, r3
 801f2aa:	7dfb      	ldrb	r3, [r7, #23]
 801f2ac:	fa42 f303 	asr.w	r3, r2, r3
 801f2b0:	b2db      	uxtb	r3, r3
 801f2b2:	f003 0301 	and.w	r3, r3, #1
 801f2b6:	74fb      	strb	r3, [r7, #19]
 801f2b8:	7ffa      	ldrb	r2, [r7, #31]
 801f2ba:	7cfb      	ldrb	r3, [r7, #19]
 801f2bc:	4053      	eors	r3, r2
 801f2be:	77fb      	strb	r3, [r7, #31]
 801f2c0:	7d3b      	ldrb	r3, [r7, #20]
 801f2c2:	68fa      	ldr	r2, [r7, #12]
 801f2c4:	4413      	add	r3, r2
 801f2c6:	781b      	ldrb	r3, [r3, #0]
 801f2c8:	b25a      	sxtb	r2, r3
 801f2ca:	7ff9      	ldrb	r1, [r7, #31]
 801f2cc:	7d7b      	ldrb	r3, [r7, #21]
 801f2ce:	fa01 f303 	lsl.w	r3, r1, r3
 801f2d2:	b25b      	sxtb	r3, r3
 801f2d4:	4313      	orrs	r3, r2
 801f2d6:	b259      	sxtb	r1, r3
 801f2d8:	7d3b      	ldrb	r3, [r7, #20]
 801f2da:	68fa      	ldr	r2, [r7, #12]
 801f2dc:	4413      	add	r3, r2
 801f2de:	b2ca      	uxtb	r2, r1
 801f2e0:	701a      	strb	r2, [r3, #0]
 801f2e2:	69bb      	ldr	r3, [r7, #24]
 801f2e4:	3301      	adds	r3, #1
 801f2e6:	61bb      	str	r3, [r7, #24]
 801f2e8:	79fb      	ldrb	r3, [r7, #7]
 801f2ea:	00db      	lsls	r3, r3, #3
 801f2ec:	69ba      	ldr	r2, [r7, #24]
 801f2ee:	429a      	cmp	r2, r3
 801f2f0:	dbb0      	blt.n	801f254 <payload_integration+0x4e>
 801f2f2:	7ffb      	ldrb	r3, [r7, #31]
 801f2f4:	01db      	lsls	r3, r3, #7
 801f2f6:	b25a      	sxtb	r2, r3
 801f2f8:	7ffb      	ldrb	r3, [r7, #31]
 801f2fa:	019b      	lsls	r3, r3, #6
 801f2fc:	b25b      	sxtb	r3, r3
 801f2fe:	4313      	orrs	r3, r2
 801f300:	b25b      	sxtb	r3, r3
 801f302:	7ffa      	ldrb	r2, [r7, #31]
 801f304:	2a00      	cmp	r2, #0
 801f306:	d101      	bne.n	801f30c <payload_integration+0x106>
 801f308:	2220      	movs	r2, #32
 801f30a:	e000      	b.n	801f30e <payload_integration+0x108>
 801f30c:	2200      	movs	r2, #0
 801f30e:	4313      	orrs	r3, r2
 801f310:	b259      	sxtb	r1, r3
 801f312:	79fb      	ldrb	r3, [r7, #7]
 801f314:	68fa      	ldr	r2, [r7, #12]
 801f316:	4413      	add	r3, r2
 801f318:	b2ca      	uxtb	r2, r1
 801f31a:	701a      	strb	r2, [r3, #0]
 801f31c:	bf00      	nop
 801f31e:	3724      	adds	r7, #36	; 0x24
 801f320:	46bd      	mov	sp, r7
 801f322:	bc80      	pop	{r7}
 801f324:	4770      	bx	lr
	...

0801f328 <SUBGRF_Init>:
 801f328:	b580      	push	{r7, lr}
 801f32a:	b084      	sub	sp, #16
 801f32c:	af00      	add	r7, sp, #0
 801f32e:	6078      	str	r0, [r7, #4]
 801f330:	687b      	ldr	r3, [r7, #4]
 801f332:	2b00      	cmp	r3, #0
 801f334:	d002      	beq.n	801f33c <SUBGRF_Init+0x14>
 801f336:	4a1c      	ldr	r2, [pc, #112]	; (801f3a8 <SUBGRF_Init+0x80>)
 801f338:	687b      	ldr	r3, [r7, #4]
 801f33a:	6013      	str	r3, [r2, #0]
 801f33c:	2002      	movs	r0, #2
 801f33e:	f001 f83d 	bl	80203bc <Radio_SMPS_Set>
 801f342:	f7e6 fe09 	bl	8005f58 <MX_SUBGHZ_Init>
 801f346:	4b19      	ldr	r3, [pc, #100]	; (801f3ac <SUBGRF_Init+0x84>)
 801f348:	2200      	movs	r2, #0
 801f34a:	701a      	strb	r2, [r3, #0]
 801f34c:	2000      	movs	r0, #0
 801f34e:	f000 f97d 	bl	801f64c <SUBGRF_SetStandby>
 801f352:	f7f0 ffe3 	bl	801031c <RBI_IsTCXO>
 801f356:	4603      	mov	r3, r0
 801f358:	2b01      	cmp	r3, #1
 801f35a:	d112      	bne.n	801f382 <SUBGRF_Init+0x5a>
 801f35c:	f7f0 ffd7 	bl	801030e <RBI_GetWakeUpTime>
 801f360:	4603      	mov	r3, r0
 801f362:	019b      	lsls	r3, r3, #6
 801f364:	4619      	mov	r1, r3
 801f366:	2001      	movs	r0, #1
 801f368:	f000 fb9e 	bl	801faa8 <SUBGRF_SetTcxoMode>
 801f36c:	2100      	movs	r1, #0
 801f36e:	f640 1011 	movw	r0, #2321	; 0x911
 801f372:	f000 feb3 	bl	80200dc <SUBGRF_WriteRegister>
 801f376:	237f      	movs	r3, #127	; 0x7f
 801f378:	733b      	strb	r3, [r7, #12]
 801f37a:	7b38      	ldrb	r0, [r7, #12]
 801f37c:	f000 faa4 	bl	801f8c8 <SUBGRF_Calibrate>
 801f380:	e009      	b.n	801f396 <SUBGRF_Init+0x6e>
 801f382:	2120      	movs	r1, #32
 801f384:	f640 1011 	movw	r0, #2321	; 0x911
 801f388:	f000 fea8 	bl	80200dc <SUBGRF_WriteRegister>
 801f38c:	2120      	movs	r1, #32
 801f38e:	f640 1012 	movw	r0, #2322	; 0x912
 801f392:	f000 fea3 	bl	80200dc <SUBGRF_WriteRegister>
 801f396:	f7f0 ff19 	bl	80101cc <RBI_Init>
 801f39a:	4b05      	ldr	r3, [pc, #20]	; (801f3b0 <SUBGRF_Init+0x88>)
 801f39c:	2201      	movs	r2, #1
 801f39e:	701a      	strb	r2, [r3, #0]
 801f3a0:	bf00      	nop
 801f3a2:	3710      	adds	r7, #16
 801f3a4:	46bd      	mov	sp, r7
 801f3a6:	bd80      	pop	{r7, pc}
 801f3a8:	20001954 	.word	0x20001954
 801f3ac:	20001950 	.word	0x20001950
 801f3b0:	20001948 	.word	0x20001948

0801f3b4 <SUBGRF_GetOperatingMode>:
 801f3b4:	b480      	push	{r7}
 801f3b6:	af00      	add	r7, sp, #0
 801f3b8:	4b02      	ldr	r3, [pc, #8]	; (801f3c4 <SUBGRF_GetOperatingMode+0x10>)
 801f3ba:	781b      	ldrb	r3, [r3, #0]
 801f3bc:	4618      	mov	r0, r3
 801f3be:	46bd      	mov	sp, r7
 801f3c0:	bc80      	pop	{r7}
 801f3c2:	4770      	bx	lr
 801f3c4:	20001948 	.word	0x20001948

0801f3c8 <SUBGRF_SetPayload>:
 801f3c8:	b580      	push	{r7, lr}
 801f3ca:	b082      	sub	sp, #8
 801f3cc:	af00      	add	r7, sp, #0
 801f3ce:	6078      	str	r0, [r7, #4]
 801f3d0:	460b      	mov	r3, r1
 801f3d2:	70fb      	strb	r3, [r7, #3]
 801f3d4:	78fb      	ldrb	r3, [r7, #3]
 801f3d6:	461a      	mov	r2, r3
 801f3d8:	6879      	ldr	r1, [r7, #4]
 801f3da:	2000      	movs	r0, #0
 801f3dc:	f000 fece 	bl	802017c <SUBGRF_WriteBuffer>
 801f3e0:	bf00      	nop
 801f3e2:	3708      	adds	r7, #8
 801f3e4:	46bd      	mov	sp, r7
 801f3e6:	bd80      	pop	{r7, pc}

0801f3e8 <SUBGRF_GetPayload>:
 801f3e8:	b580      	push	{r7, lr}
 801f3ea:	b086      	sub	sp, #24
 801f3ec:	af00      	add	r7, sp, #0
 801f3ee:	60f8      	str	r0, [r7, #12]
 801f3f0:	60b9      	str	r1, [r7, #8]
 801f3f2:	4613      	mov	r3, r2
 801f3f4:	71fb      	strb	r3, [r7, #7]
 801f3f6:	2300      	movs	r3, #0
 801f3f8:	75fb      	strb	r3, [r7, #23]
 801f3fa:	f107 0317 	add.w	r3, r7, #23
 801f3fe:	4619      	mov	r1, r3
 801f400:	68b8      	ldr	r0, [r7, #8]
 801f402:	f000 fde9 	bl	801ffd8 <SUBGRF_GetRxBufferStatus>
 801f406:	68bb      	ldr	r3, [r7, #8]
 801f408:	781b      	ldrb	r3, [r3, #0]
 801f40a:	79fa      	ldrb	r2, [r7, #7]
 801f40c:	429a      	cmp	r2, r3
 801f40e:	d201      	bcs.n	801f414 <SUBGRF_GetPayload+0x2c>
 801f410:	2301      	movs	r3, #1
 801f412:	e007      	b.n	801f424 <SUBGRF_GetPayload+0x3c>
 801f414:	7df8      	ldrb	r0, [r7, #23]
 801f416:	68bb      	ldr	r3, [r7, #8]
 801f418:	781b      	ldrb	r3, [r3, #0]
 801f41a:	461a      	mov	r2, r3
 801f41c:	68f9      	ldr	r1, [r7, #12]
 801f41e:	f000 fec3 	bl	80201a8 <SUBGRF_ReadBuffer>
 801f422:	2300      	movs	r3, #0
 801f424:	4618      	mov	r0, r3
 801f426:	3718      	adds	r7, #24
 801f428:	46bd      	mov	sp, r7
 801f42a:	bd80      	pop	{r7, pc}

0801f42c <SUBGRF_SendPayload>:
 801f42c:	b580      	push	{r7, lr}
 801f42e:	b084      	sub	sp, #16
 801f430:	af00      	add	r7, sp, #0
 801f432:	60f8      	str	r0, [r7, #12]
 801f434:	460b      	mov	r3, r1
 801f436:	607a      	str	r2, [r7, #4]
 801f438:	72fb      	strb	r3, [r7, #11]
 801f43a:	7afb      	ldrb	r3, [r7, #11]
 801f43c:	4619      	mov	r1, r3
 801f43e:	68f8      	ldr	r0, [r7, #12]
 801f440:	f7ff ffc2 	bl	801f3c8 <SUBGRF_SetPayload>
 801f444:	6878      	ldr	r0, [r7, #4]
 801f446:	f000 f91f 	bl	801f688 <SUBGRF_SetTx>
 801f44a:	bf00      	nop
 801f44c:	3710      	adds	r7, #16
 801f44e:	46bd      	mov	sp, r7
 801f450:	bd80      	pop	{r7, pc}

0801f452 <SUBGRF_SetSyncWord>:
 801f452:	b580      	push	{r7, lr}
 801f454:	b082      	sub	sp, #8
 801f456:	af00      	add	r7, sp, #0
 801f458:	6078      	str	r0, [r7, #4]
 801f45a:	2208      	movs	r2, #8
 801f45c:	6879      	ldr	r1, [r7, #4]
 801f45e:	f44f 60d8 	mov.w	r0, #1728	; 0x6c0
 801f462:	f000 fe63 	bl	802012c <SUBGRF_WriteRegisters>
 801f466:	2300      	movs	r3, #0
 801f468:	4618      	mov	r0, r3
 801f46a:	3708      	adds	r7, #8
 801f46c:	46bd      	mov	sp, r7
 801f46e:	bd80      	pop	{r7, pc}

0801f470 <SUBGRF_SetCrcSeed>:
 801f470:	b580      	push	{r7, lr}
 801f472:	b084      	sub	sp, #16
 801f474:	af00      	add	r7, sp, #0
 801f476:	4603      	mov	r3, r0
 801f478:	80fb      	strh	r3, [r7, #6]
 801f47a:	88fb      	ldrh	r3, [r7, #6]
 801f47c:	0a1b      	lsrs	r3, r3, #8
 801f47e:	b29b      	uxth	r3, r3
 801f480:	b2db      	uxtb	r3, r3
 801f482:	733b      	strb	r3, [r7, #12]
 801f484:	88fb      	ldrh	r3, [r7, #6]
 801f486:	b2db      	uxtb	r3, r3
 801f488:	737b      	strb	r3, [r7, #13]
 801f48a:	f000 fb93 	bl	801fbb4 <SUBGRF_GetPacketType>
 801f48e:	4603      	mov	r3, r0
 801f490:	2b00      	cmp	r3, #0
 801f492:	d108      	bne.n	801f4a6 <SUBGRF_SetCrcSeed+0x36>
 801f494:	f107 030c 	add.w	r3, r7, #12
 801f498:	2202      	movs	r2, #2
 801f49a:	4619      	mov	r1, r3
 801f49c:	f240 60bc 	movw	r0, #1724	; 0x6bc
 801f4a0:	f000 fe44 	bl	802012c <SUBGRF_WriteRegisters>
 801f4a4:	e000      	b.n	801f4a8 <SUBGRF_SetCrcSeed+0x38>
 801f4a6:	bf00      	nop
 801f4a8:	bf00      	nop
 801f4aa:	3710      	adds	r7, #16
 801f4ac:	46bd      	mov	sp, r7
 801f4ae:	bd80      	pop	{r7, pc}

0801f4b0 <SUBGRF_SetCrcPolynomial>:
 801f4b0:	b580      	push	{r7, lr}
 801f4b2:	b084      	sub	sp, #16
 801f4b4:	af00      	add	r7, sp, #0
 801f4b6:	4603      	mov	r3, r0
 801f4b8:	80fb      	strh	r3, [r7, #6]
 801f4ba:	88fb      	ldrh	r3, [r7, #6]
 801f4bc:	0a1b      	lsrs	r3, r3, #8
 801f4be:	b29b      	uxth	r3, r3
 801f4c0:	b2db      	uxtb	r3, r3
 801f4c2:	733b      	strb	r3, [r7, #12]
 801f4c4:	88fb      	ldrh	r3, [r7, #6]
 801f4c6:	b2db      	uxtb	r3, r3
 801f4c8:	737b      	strb	r3, [r7, #13]
 801f4ca:	f000 fb73 	bl	801fbb4 <SUBGRF_GetPacketType>
 801f4ce:	4603      	mov	r3, r0
 801f4d0:	2b00      	cmp	r3, #0
 801f4d2:	d108      	bne.n	801f4e6 <SUBGRF_SetCrcPolynomial+0x36>
 801f4d4:	f107 030c 	add.w	r3, r7, #12
 801f4d8:	2202      	movs	r2, #2
 801f4da:	4619      	mov	r1, r3
 801f4dc:	f240 60be 	movw	r0, #1726	; 0x6be
 801f4e0:	f000 fe24 	bl	802012c <SUBGRF_WriteRegisters>
 801f4e4:	e000      	b.n	801f4e8 <SUBGRF_SetCrcPolynomial+0x38>
 801f4e6:	bf00      	nop
 801f4e8:	bf00      	nop
 801f4ea:	3710      	adds	r7, #16
 801f4ec:	46bd      	mov	sp, r7
 801f4ee:	bd80      	pop	{r7, pc}

0801f4f0 <SUBGRF_SetWhiteningSeed>:
 801f4f0:	b580      	push	{r7, lr}
 801f4f2:	b084      	sub	sp, #16
 801f4f4:	af00      	add	r7, sp, #0
 801f4f6:	4603      	mov	r3, r0
 801f4f8:	80fb      	strh	r3, [r7, #6]
 801f4fa:	2300      	movs	r3, #0
 801f4fc:	73fb      	strb	r3, [r7, #15]
 801f4fe:	f000 fb59 	bl	801fbb4 <SUBGRF_GetPacketType>
 801f502:	4603      	mov	r3, r0
 801f504:	2b00      	cmp	r3, #0
 801f506:	d121      	bne.n	801f54c <SUBGRF_SetWhiteningSeed+0x5c>
 801f508:	f44f 60d7 	mov.w	r0, #1720	; 0x6b8
 801f50c:	f000 fdfa 	bl	8020104 <SUBGRF_ReadRegister>
 801f510:	4603      	mov	r3, r0
 801f512:	f023 0301 	bic.w	r3, r3, #1
 801f516:	73fb      	strb	r3, [r7, #15]
 801f518:	88fb      	ldrh	r3, [r7, #6]
 801f51a:	0a1b      	lsrs	r3, r3, #8
 801f51c:	b29b      	uxth	r3, r3
 801f51e:	b25b      	sxtb	r3, r3
 801f520:	f003 0301 	and.w	r3, r3, #1
 801f524:	b25a      	sxtb	r2, r3
 801f526:	f997 300f 	ldrsb.w	r3, [r7, #15]
 801f52a:	4313      	orrs	r3, r2
 801f52c:	b25b      	sxtb	r3, r3
 801f52e:	73fb      	strb	r3, [r7, #15]
 801f530:	7bfb      	ldrb	r3, [r7, #15]
 801f532:	4619      	mov	r1, r3
 801f534:	f44f 60d7 	mov.w	r0, #1720	; 0x6b8
 801f538:	f000 fdd0 	bl	80200dc <SUBGRF_WriteRegister>
 801f53c:	88fb      	ldrh	r3, [r7, #6]
 801f53e:	b2db      	uxtb	r3, r3
 801f540:	4619      	mov	r1, r3
 801f542:	f240 60b9 	movw	r0, #1721	; 0x6b9
 801f546:	f000 fdc9 	bl	80200dc <SUBGRF_WriteRegister>
 801f54a:	e000      	b.n	801f54e <SUBGRF_SetWhiteningSeed+0x5e>
 801f54c:	bf00      	nop
 801f54e:	bf00      	nop
 801f550:	3710      	adds	r7, #16
 801f552:	46bd      	mov	sp, r7
 801f554:	bd80      	pop	{r7, pc}

0801f556 <SUBGRF_GetRandom>:
 801f556:	b580      	push	{r7, lr}
 801f558:	b082      	sub	sp, #8
 801f55a:	af00      	add	r7, sp, #0
 801f55c:	2300      	movs	r3, #0
 801f55e:	603b      	str	r3, [r7, #0]
 801f560:	2300      	movs	r3, #0
 801f562:	71fb      	strb	r3, [r7, #7]
 801f564:	2300      	movs	r3, #0
 801f566:	71bb      	strb	r3, [r7, #6]
 801f568:	f640 00e2 	movw	r0, #2274	; 0x8e2
 801f56c:	f000 fdca 	bl	8020104 <SUBGRF_ReadRegister>
 801f570:	4603      	mov	r3, r0
 801f572:	71fb      	strb	r3, [r7, #7]
 801f574:	79fb      	ldrb	r3, [r7, #7]
 801f576:	f023 0301 	bic.w	r3, r3, #1
 801f57a:	b2db      	uxtb	r3, r3
 801f57c:	4619      	mov	r1, r3
 801f57e:	f640 00e2 	movw	r0, #2274	; 0x8e2
 801f582:	f000 fdab 	bl	80200dc <SUBGRF_WriteRegister>
 801f586:	f640 00e5 	movw	r0, #2277	; 0x8e5
 801f58a:	f000 fdbb 	bl	8020104 <SUBGRF_ReadRegister>
 801f58e:	4603      	mov	r3, r0
 801f590:	71bb      	strb	r3, [r7, #6]
 801f592:	79bb      	ldrb	r3, [r7, #6]
 801f594:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 801f598:	b2db      	uxtb	r3, r3
 801f59a:	4619      	mov	r1, r3
 801f59c:	f640 00e5 	movw	r0, #2277	; 0x8e5
 801f5a0:	f000 fd9c 	bl	80200dc <SUBGRF_WriteRegister>
 801f5a4:	f06f 407f 	mvn.w	r0, #4278190080	; 0xff000000
 801f5a8:	f000 f890 	bl	801f6cc <SUBGRF_SetRx>
 801f5ac:	463b      	mov	r3, r7
 801f5ae:	2204      	movs	r2, #4
 801f5b0:	4619      	mov	r1, r3
 801f5b2:	f640 0019 	movw	r0, #2073	; 0x819
 801f5b6:	f000 fdcd 	bl	8020154 <SUBGRF_ReadRegisters>
 801f5ba:	2000      	movs	r0, #0
 801f5bc:	f000 f846 	bl	801f64c <SUBGRF_SetStandby>
 801f5c0:	79fb      	ldrb	r3, [r7, #7]
 801f5c2:	4619      	mov	r1, r3
 801f5c4:	f640 00e2 	movw	r0, #2274	; 0x8e2
 801f5c8:	f000 fd88 	bl	80200dc <SUBGRF_WriteRegister>
 801f5cc:	79bb      	ldrb	r3, [r7, #6]
 801f5ce:	4619      	mov	r1, r3
 801f5d0:	f640 00e5 	movw	r0, #2277	; 0x8e5
 801f5d4:	f000 fd82 	bl	80200dc <SUBGRF_WriteRegister>
 801f5d8:	683b      	ldr	r3, [r7, #0]
 801f5da:	4618      	mov	r0, r3
 801f5dc:	3708      	adds	r7, #8
 801f5de:	46bd      	mov	sp, r7
 801f5e0:	bd80      	pop	{r7, pc}
	...

0801f5e4 <SUBGRF_SetSleep>:
 801f5e4:	b580      	push	{r7, lr}
 801f5e6:	b084      	sub	sp, #16
 801f5e8:	af00      	add	r7, sp, #0
 801f5ea:	7138      	strb	r0, [r7, #4]
 801f5ec:	2000      	movs	r0, #0
 801f5ee:	f7f0 fe2b 	bl	8010248 <RBI_ConfigRFSwitch>
 801f5f2:	2002      	movs	r0, #2
 801f5f4:	f000 fee2 	bl	80203bc <Radio_SMPS_Set>
 801f5f8:	793b      	ldrb	r3, [r7, #4]
 801f5fa:	f3c3 0380 	ubfx	r3, r3, #2, #1
 801f5fe:	b2db      	uxtb	r3, r3
 801f600:	009b      	lsls	r3, r3, #2
 801f602:	b25a      	sxtb	r2, r3
 801f604:	793b      	ldrb	r3, [r7, #4]
 801f606:	f3c3 0340 	ubfx	r3, r3, #1, #1
 801f60a:	b2db      	uxtb	r3, r3
 801f60c:	005b      	lsls	r3, r3, #1
 801f60e:	b25b      	sxtb	r3, r3
 801f610:	4313      	orrs	r3, r2
 801f612:	b25a      	sxtb	r2, r3
 801f614:	793b      	ldrb	r3, [r7, #4]
 801f616:	f3c3 0300 	ubfx	r3, r3, #0, #1
 801f61a:	b2db      	uxtb	r3, r3
 801f61c:	b25b      	sxtb	r3, r3
 801f61e:	4313      	orrs	r3, r2
 801f620:	b25b      	sxtb	r3, r3
 801f622:	b2db      	uxtb	r3, r3
 801f624:	73fb      	strb	r3, [r7, #15]
 801f626:	f107 020f 	add.w	r2, r7, #15
 801f62a:	2301      	movs	r3, #1
 801f62c:	2184      	movs	r1, #132	; 0x84
 801f62e:	4805      	ldr	r0, [pc, #20]	; (801f644 <SUBGRF_SetSleep+0x60>)
 801f630:	f7ed ff48 	bl	800d4c4 <HAL_SUBGHZ_ExecSetCmd>
 801f634:	4b04      	ldr	r3, [pc, #16]	; (801f648 <SUBGRF_SetSleep+0x64>)
 801f636:	2200      	movs	r2, #0
 801f638:	701a      	strb	r2, [r3, #0]
 801f63a:	bf00      	nop
 801f63c:	3710      	adds	r7, #16
 801f63e:	46bd      	mov	sp, r7
 801f640:	bd80      	pop	{r7, pc}
 801f642:	bf00      	nop
 801f644:	20001e98 	.word	0x20001e98
 801f648:	20001948 	.word	0x20001948

0801f64c <SUBGRF_SetStandby>:
 801f64c:	b580      	push	{r7, lr}
 801f64e:	b082      	sub	sp, #8
 801f650:	af00      	add	r7, sp, #0
 801f652:	4603      	mov	r3, r0
 801f654:	71fb      	strb	r3, [r7, #7]
 801f656:	1dfa      	adds	r2, r7, #7
 801f658:	2301      	movs	r3, #1
 801f65a:	2180      	movs	r1, #128	; 0x80
 801f65c:	4808      	ldr	r0, [pc, #32]	; (801f680 <SUBGRF_SetStandby+0x34>)
 801f65e:	f7ed ff31 	bl	800d4c4 <HAL_SUBGHZ_ExecSetCmd>
 801f662:	79fb      	ldrb	r3, [r7, #7]
 801f664:	2b00      	cmp	r3, #0
 801f666:	d103      	bne.n	801f670 <SUBGRF_SetStandby+0x24>
 801f668:	4b06      	ldr	r3, [pc, #24]	; (801f684 <SUBGRF_SetStandby+0x38>)
 801f66a:	2201      	movs	r2, #1
 801f66c:	701a      	strb	r2, [r3, #0]
 801f66e:	e002      	b.n	801f676 <SUBGRF_SetStandby+0x2a>
 801f670:	4b04      	ldr	r3, [pc, #16]	; (801f684 <SUBGRF_SetStandby+0x38>)
 801f672:	2202      	movs	r2, #2
 801f674:	701a      	strb	r2, [r3, #0]
 801f676:	bf00      	nop
 801f678:	3708      	adds	r7, #8
 801f67a:	46bd      	mov	sp, r7
 801f67c:	bd80      	pop	{r7, pc}
 801f67e:	bf00      	nop
 801f680:	20001e98 	.word	0x20001e98
 801f684:	20001948 	.word	0x20001948

0801f688 <SUBGRF_SetTx>:
 801f688:	b580      	push	{r7, lr}
 801f68a:	b084      	sub	sp, #16
 801f68c:	af00      	add	r7, sp, #0
 801f68e:	6078      	str	r0, [r7, #4]
 801f690:	4b0c      	ldr	r3, [pc, #48]	; (801f6c4 <SUBGRF_SetTx+0x3c>)
 801f692:	2204      	movs	r2, #4
 801f694:	701a      	strb	r2, [r3, #0]
 801f696:	687b      	ldr	r3, [r7, #4]
 801f698:	0c1b      	lsrs	r3, r3, #16
 801f69a:	b2db      	uxtb	r3, r3
 801f69c:	733b      	strb	r3, [r7, #12]
 801f69e:	687b      	ldr	r3, [r7, #4]
 801f6a0:	0a1b      	lsrs	r3, r3, #8
 801f6a2:	b2db      	uxtb	r3, r3
 801f6a4:	737b      	strb	r3, [r7, #13]
 801f6a6:	687b      	ldr	r3, [r7, #4]
 801f6a8:	b2db      	uxtb	r3, r3
 801f6aa:	73bb      	strb	r3, [r7, #14]
 801f6ac:	f107 020c 	add.w	r2, r7, #12
 801f6b0:	2303      	movs	r3, #3
 801f6b2:	2183      	movs	r1, #131	; 0x83
 801f6b4:	4804      	ldr	r0, [pc, #16]	; (801f6c8 <SUBGRF_SetTx+0x40>)
 801f6b6:	f7ed ff05 	bl	800d4c4 <HAL_SUBGHZ_ExecSetCmd>
 801f6ba:	bf00      	nop
 801f6bc:	3710      	adds	r7, #16
 801f6be:	46bd      	mov	sp, r7
 801f6c0:	bd80      	pop	{r7, pc}
 801f6c2:	bf00      	nop
 801f6c4:	20001948 	.word	0x20001948
 801f6c8:	20001e98 	.word	0x20001e98

0801f6cc <SUBGRF_SetRx>:
 801f6cc:	b580      	push	{r7, lr}
 801f6ce:	b084      	sub	sp, #16
 801f6d0:	af00      	add	r7, sp, #0
 801f6d2:	6078      	str	r0, [r7, #4]
 801f6d4:	4b0c      	ldr	r3, [pc, #48]	; (801f708 <SUBGRF_SetRx+0x3c>)
 801f6d6:	2205      	movs	r2, #5
 801f6d8:	701a      	strb	r2, [r3, #0]
 801f6da:	687b      	ldr	r3, [r7, #4]
 801f6dc:	0c1b      	lsrs	r3, r3, #16
 801f6de:	b2db      	uxtb	r3, r3
 801f6e0:	733b      	strb	r3, [r7, #12]
 801f6e2:	687b      	ldr	r3, [r7, #4]
 801f6e4:	0a1b      	lsrs	r3, r3, #8
 801f6e6:	b2db      	uxtb	r3, r3
 801f6e8:	737b      	strb	r3, [r7, #13]
 801f6ea:	687b      	ldr	r3, [r7, #4]
 801f6ec:	b2db      	uxtb	r3, r3
 801f6ee:	73bb      	strb	r3, [r7, #14]
 801f6f0:	f107 020c 	add.w	r2, r7, #12
 801f6f4:	2303      	movs	r3, #3
 801f6f6:	2182      	movs	r1, #130	; 0x82
 801f6f8:	4804      	ldr	r0, [pc, #16]	; (801f70c <SUBGRF_SetRx+0x40>)
 801f6fa:	f7ed fee3 	bl	800d4c4 <HAL_SUBGHZ_ExecSetCmd>
 801f6fe:	bf00      	nop
 801f700:	3710      	adds	r7, #16
 801f702:	46bd      	mov	sp, r7
 801f704:	bd80      	pop	{r7, pc}
 801f706:	bf00      	nop
 801f708:	20001948 	.word	0x20001948
 801f70c:	20001e98 	.word	0x20001e98

0801f710 <SUBGRF_SetRxBoosted>:
 801f710:	b580      	push	{r7, lr}
 801f712:	b084      	sub	sp, #16
 801f714:	af00      	add	r7, sp, #0
 801f716:	6078      	str	r0, [r7, #4]
 801f718:	4b0e      	ldr	r3, [pc, #56]	; (801f754 <SUBGRF_SetRxBoosted+0x44>)
 801f71a:	2205      	movs	r2, #5
 801f71c:	701a      	strb	r2, [r3, #0]
 801f71e:	2197      	movs	r1, #151	; 0x97
 801f720:	f640 00ac 	movw	r0, #2220	; 0x8ac
 801f724:	f000 fcda 	bl	80200dc <SUBGRF_WriteRegister>
 801f728:	687b      	ldr	r3, [r7, #4]
 801f72a:	0c1b      	lsrs	r3, r3, #16
 801f72c:	b2db      	uxtb	r3, r3
 801f72e:	733b      	strb	r3, [r7, #12]
 801f730:	687b      	ldr	r3, [r7, #4]
 801f732:	0a1b      	lsrs	r3, r3, #8
 801f734:	b2db      	uxtb	r3, r3
 801f736:	737b      	strb	r3, [r7, #13]
 801f738:	687b      	ldr	r3, [r7, #4]
 801f73a:	b2db      	uxtb	r3, r3
 801f73c:	73bb      	strb	r3, [r7, #14]
 801f73e:	f107 020c 	add.w	r2, r7, #12
 801f742:	2303      	movs	r3, #3
 801f744:	2182      	movs	r1, #130	; 0x82
 801f746:	4804      	ldr	r0, [pc, #16]	; (801f758 <SUBGRF_SetRxBoosted+0x48>)
 801f748:	f7ed febc 	bl	800d4c4 <HAL_SUBGHZ_ExecSetCmd>
 801f74c:	bf00      	nop
 801f74e:	3710      	adds	r7, #16
 801f750:	46bd      	mov	sp, r7
 801f752:	bd80      	pop	{r7, pc}
 801f754:	20001948 	.word	0x20001948
 801f758:	20001e98 	.word	0x20001e98

0801f75c <SUBGRF_SetRxDutyCycle>:
 801f75c:	b580      	push	{r7, lr}
 801f75e:	b084      	sub	sp, #16
 801f760:	af00      	add	r7, sp, #0
 801f762:	6078      	str	r0, [r7, #4]
 801f764:	6039      	str	r1, [r7, #0]
 801f766:	687b      	ldr	r3, [r7, #4]
 801f768:	0c1b      	lsrs	r3, r3, #16
 801f76a:	b2db      	uxtb	r3, r3
 801f76c:	723b      	strb	r3, [r7, #8]
 801f76e:	687b      	ldr	r3, [r7, #4]
 801f770:	0a1b      	lsrs	r3, r3, #8
 801f772:	b2db      	uxtb	r3, r3
 801f774:	727b      	strb	r3, [r7, #9]
 801f776:	687b      	ldr	r3, [r7, #4]
 801f778:	b2db      	uxtb	r3, r3
 801f77a:	72bb      	strb	r3, [r7, #10]
 801f77c:	683b      	ldr	r3, [r7, #0]
 801f77e:	0c1b      	lsrs	r3, r3, #16
 801f780:	b2db      	uxtb	r3, r3
 801f782:	72fb      	strb	r3, [r7, #11]
 801f784:	683b      	ldr	r3, [r7, #0]
 801f786:	0a1b      	lsrs	r3, r3, #8
 801f788:	b2db      	uxtb	r3, r3
 801f78a:	733b      	strb	r3, [r7, #12]
 801f78c:	683b      	ldr	r3, [r7, #0]
 801f78e:	b2db      	uxtb	r3, r3
 801f790:	737b      	strb	r3, [r7, #13]
 801f792:	f107 0208 	add.w	r2, r7, #8
 801f796:	2306      	movs	r3, #6
 801f798:	2194      	movs	r1, #148	; 0x94
 801f79a:	4805      	ldr	r0, [pc, #20]	; (801f7b0 <SUBGRF_SetRxDutyCycle+0x54>)
 801f79c:	f7ed fe92 	bl	800d4c4 <HAL_SUBGHZ_ExecSetCmd>
 801f7a0:	4b04      	ldr	r3, [pc, #16]	; (801f7b4 <SUBGRF_SetRxDutyCycle+0x58>)
 801f7a2:	2206      	movs	r2, #6
 801f7a4:	701a      	strb	r2, [r3, #0]
 801f7a6:	bf00      	nop
 801f7a8:	3710      	adds	r7, #16
 801f7aa:	46bd      	mov	sp, r7
 801f7ac:	bd80      	pop	{r7, pc}
 801f7ae:	bf00      	nop
 801f7b0:	20001e98 	.word	0x20001e98
 801f7b4:	20001948 	.word	0x20001948

0801f7b8 <SUBGRF_SetCad>:
 801f7b8:	b580      	push	{r7, lr}
 801f7ba:	af00      	add	r7, sp, #0
 801f7bc:	2300      	movs	r3, #0
 801f7be:	2200      	movs	r2, #0
 801f7c0:	21c5      	movs	r1, #197	; 0xc5
 801f7c2:	4804      	ldr	r0, [pc, #16]	; (801f7d4 <SUBGRF_SetCad+0x1c>)
 801f7c4:	f7ed fe7e 	bl	800d4c4 <HAL_SUBGHZ_ExecSetCmd>
 801f7c8:	4b03      	ldr	r3, [pc, #12]	; (801f7d8 <SUBGRF_SetCad+0x20>)
 801f7ca:	2207      	movs	r2, #7
 801f7cc:	701a      	strb	r2, [r3, #0]
 801f7ce:	bf00      	nop
 801f7d0:	bd80      	pop	{r7, pc}
 801f7d2:	bf00      	nop
 801f7d4:	20001e98 	.word	0x20001e98
 801f7d8:	20001948 	.word	0x20001948

0801f7dc <SUBGRF_SetTxContinuousWave>:
 801f7dc:	b580      	push	{r7, lr}
 801f7de:	af00      	add	r7, sp, #0
 801f7e0:	2300      	movs	r3, #0
 801f7e2:	2200      	movs	r2, #0
 801f7e4:	21d1      	movs	r1, #209	; 0xd1
 801f7e6:	4802      	ldr	r0, [pc, #8]	; (801f7f0 <SUBGRF_SetTxContinuousWave+0x14>)
 801f7e8:	f7ed fe6c 	bl	800d4c4 <HAL_SUBGHZ_ExecSetCmd>
 801f7ec:	bf00      	nop
 801f7ee:	bd80      	pop	{r7, pc}
 801f7f0:	20001e98 	.word	0x20001e98

0801f7f4 <SUBGRF_SetTxInfinitePreamble>:
 801f7f4:	b580      	push	{r7, lr}
 801f7f6:	af00      	add	r7, sp, #0
 801f7f8:	2300      	movs	r3, #0
 801f7fa:	2200      	movs	r2, #0
 801f7fc:	21d2      	movs	r1, #210	; 0xd2
 801f7fe:	4802      	ldr	r0, [pc, #8]	; (801f808 <SUBGRF_SetTxInfinitePreamble+0x14>)
 801f800:	f7ed fe60 	bl	800d4c4 <HAL_SUBGHZ_ExecSetCmd>
 801f804:	bf00      	nop
 801f806:	bd80      	pop	{r7, pc}
 801f808:	20001e98 	.word	0x20001e98

0801f80c <SUBGRF_SetStopRxTimerOnPreambleDetect>:
 801f80c:	b580      	push	{r7, lr}
 801f80e:	b082      	sub	sp, #8
 801f810:	af00      	add	r7, sp, #0
 801f812:	4603      	mov	r3, r0
 801f814:	71fb      	strb	r3, [r7, #7]
 801f816:	1dfa      	adds	r2, r7, #7
 801f818:	2301      	movs	r3, #1
 801f81a:	219f      	movs	r1, #159	; 0x9f
 801f81c:	4803      	ldr	r0, [pc, #12]	; (801f82c <SUBGRF_SetStopRxTimerOnPreambleDetect+0x20>)
 801f81e:	f7ed fe51 	bl	800d4c4 <HAL_SUBGHZ_ExecSetCmd>
 801f822:	bf00      	nop
 801f824:	3708      	adds	r7, #8
 801f826:	46bd      	mov	sp, r7
 801f828:	bd80      	pop	{r7, pc}
 801f82a:	bf00      	nop
 801f82c:	20001e98 	.word	0x20001e98

0801f830 <SUBGRF_SetLoRaSymbNumTimeout>:
 801f830:	b580      	push	{r7, lr}
 801f832:	b084      	sub	sp, #16
 801f834:	af00      	add	r7, sp, #0
 801f836:	4603      	mov	r3, r0
 801f838:	71fb      	strb	r3, [r7, #7]
 801f83a:	1dfa      	adds	r2, r7, #7
 801f83c:	2301      	movs	r3, #1
 801f83e:	21a0      	movs	r1, #160	; 0xa0
 801f840:	4813      	ldr	r0, [pc, #76]	; (801f890 <SUBGRF_SetLoRaSymbNumTimeout+0x60>)
 801f842:	f7ed fe3f 	bl	800d4c4 <HAL_SUBGHZ_ExecSetCmd>
 801f846:	79fb      	ldrb	r3, [r7, #7]
 801f848:	2b3f      	cmp	r3, #63	; 0x3f
 801f84a:	d91c      	bls.n	801f886 <SUBGRF_SetLoRaSymbNumTimeout+0x56>
 801f84c:	79fb      	ldrb	r3, [r7, #7]
 801f84e:	085b      	lsrs	r3, r3, #1
 801f850:	73fb      	strb	r3, [r7, #15]
 801f852:	2300      	movs	r3, #0
 801f854:	73bb      	strb	r3, [r7, #14]
 801f856:	2300      	movs	r3, #0
 801f858:	737b      	strb	r3, [r7, #13]
 801f85a:	e005      	b.n	801f868 <SUBGRF_SetLoRaSymbNumTimeout+0x38>
 801f85c:	7bfb      	ldrb	r3, [r7, #15]
 801f85e:	089b      	lsrs	r3, r3, #2
 801f860:	73fb      	strb	r3, [r7, #15]
 801f862:	7bbb      	ldrb	r3, [r7, #14]
 801f864:	3301      	adds	r3, #1
 801f866:	73bb      	strb	r3, [r7, #14]
 801f868:	7bfb      	ldrb	r3, [r7, #15]
 801f86a:	2b1f      	cmp	r3, #31
 801f86c:	d8f6      	bhi.n	801f85c <SUBGRF_SetLoRaSymbNumTimeout+0x2c>
 801f86e:	7bfb      	ldrb	r3, [r7, #15]
 801f870:	00db      	lsls	r3, r3, #3
 801f872:	b2da      	uxtb	r2, r3
 801f874:	7bbb      	ldrb	r3, [r7, #14]
 801f876:	4413      	add	r3, r2
 801f878:	737b      	strb	r3, [r7, #13]
 801f87a:	7b7b      	ldrb	r3, [r7, #13]
 801f87c:	4619      	mov	r1, r3
 801f87e:	f240 7006 	movw	r0, #1798	; 0x706
 801f882:	f000 fc2b 	bl	80200dc <SUBGRF_WriteRegister>
 801f886:	bf00      	nop
 801f888:	3710      	adds	r7, #16
 801f88a:	46bd      	mov	sp, r7
 801f88c:	bd80      	pop	{r7, pc}
 801f88e:	bf00      	nop
 801f890:	20001e98 	.word	0x20001e98

0801f894 <SUBGRF_SetRegulatorMode>:
 801f894:	b580      	push	{r7, lr}
 801f896:	b082      	sub	sp, #8
 801f898:	af00      	add	r7, sp, #0
 801f89a:	f7f0 fd46 	bl	801032a <RBI_IsDCDC>
 801f89e:	4603      	mov	r3, r0
 801f8a0:	2b01      	cmp	r3, #1
 801f8a2:	d102      	bne.n	801f8aa <SUBGRF_SetRegulatorMode+0x16>
 801f8a4:	2301      	movs	r3, #1
 801f8a6:	71fb      	strb	r3, [r7, #7]
 801f8a8:	e001      	b.n	801f8ae <SUBGRF_SetRegulatorMode+0x1a>
 801f8aa:	2300      	movs	r3, #0
 801f8ac:	71fb      	strb	r3, [r7, #7]
 801f8ae:	1dfa      	adds	r2, r7, #7
 801f8b0:	2301      	movs	r3, #1
 801f8b2:	2196      	movs	r1, #150	; 0x96
 801f8b4:	4803      	ldr	r0, [pc, #12]	; (801f8c4 <SUBGRF_SetRegulatorMode+0x30>)
 801f8b6:	f7ed fe05 	bl	800d4c4 <HAL_SUBGHZ_ExecSetCmd>
 801f8ba:	bf00      	nop
 801f8bc:	3708      	adds	r7, #8
 801f8be:	46bd      	mov	sp, r7
 801f8c0:	bd80      	pop	{r7, pc}
 801f8c2:	bf00      	nop
 801f8c4:	20001e98 	.word	0x20001e98

0801f8c8 <SUBGRF_Calibrate>:
 801f8c8:	b580      	push	{r7, lr}
 801f8ca:	b084      	sub	sp, #16
 801f8cc:	af00      	add	r7, sp, #0
 801f8ce:	7138      	strb	r0, [r7, #4]
 801f8d0:	793b      	ldrb	r3, [r7, #4]
 801f8d2:	f3c3 1380 	ubfx	r3, r3, #6, #1
 801f8d6:	b2db      	uxtb	r3, r3
 801f8d8:	019b      	lsls	r3, r3, #6
 801f8da:	b25a      	sxtb	r2, r3
 801f8dc:	793b      	ldrb	r3, [r7, #4]
 801f8de:	f3c3 1340 	ubfx	r3, r3, #5, #1
 801f8e2:	b2db      	uxtb	r3, r3
 801f8e4:	015b      	lsls	r3, r3, #5
 801f8e6:	b25b      	sxtb	r3, r3
 801f8e8:	4313      	orrs	r3, r2
 801f8ea:	b25a      	sxtb	r2, r3
 801f8ec:	793b      	ldrb	r3, [r7, #4]
 801f8ee:	f3c3 1300 	ubfx	r3, r3, #4, #1
 801f8f2:	b2db      	uxtb	r3, r3
 801f8f4:	011b      	lsls	r3, r3, #4
 801f8f6:	b25b      	sxtb	r3, r3
 801f8f8:	4313      	orrs	r3, r2
 801f8fa:	b25a      	sxtb	r2, r3
 801f8fc:	793b      	ldrb	r3, [r7, #4]
 801f8fe:	f3c3 03c0 	ubfx	r3, r3, #3, #1
 801f902:	b2db      	uxtb	r3, r3
 801f904:	00db      	lsls	r3, r3, #3
 801f906:	b25b      	sxtb	r3, r3
 801f908:	4313      	orrs	r3, r2
 801f90a:	b25a      	sxtb	r2, r3
 801f90c:	793b      	ldrb	r3, [r7, #4]
 801f90e:	f3c3 0380 	ubfx	r3, r3, #2, #1
 801f912:	b2db      	uxtb	r3, r3
 801f914:	009b      	lsls	r3, r3, #2
 801f916:	b25b      	sxtb	r3, r3
 801f918:	4313      	orrs	r3, r2
 801f91a:	b25a      	sxtb	r2, r3
 801f91c:	793b      	ldrb	r3, [r7, #4]
 801f91e:	f3c3 0340 	ubfx	r3, r3, #1, #1
 801f922:	b2db      	uxtb	r3, r3
 801f924:	005b      	lsls	r3, r3, #1
 801f926:	b25b      	sxtb	r3, r3
 801f928:	4313      	orrs	r3, r2
 801f92a:	b25a      	sxtb	r2, r3
 801f92c:	793b      	ldrb	r3, [r7, #4]
 801f92e:	f3c3 0300 	ubfx	r3, r3, #0, #1
 801f932:	b2db      	uxtb	r3, r3
 801f934:	b25b      	sxtb	r3, r3
 801f936:	4313      	orrs	r3, r2
 801f938:	b25b      	sxtb	r3, r3
 801f93a:	b2db      	uxtb	r3, r3
 801f93c:	73fb      	strb	r3, [r7, #15]
 801f93e:	f107 020f 	add.w	r2, r7, #15
 801f942:	2301      	movs	r3, #1
 801f944:	2189      	movs	r1, #137	; 0x89
 801f946:	4803      	ldr	r0, [pc, #12]	; (801f954 <SUBGRF_Calibrate+0x8c>)
 801f948:	f7ed fdbc 	bl	800d4c4 <HAL_SUBGHZ_ExecSetCmd>
 801f94c:	bf00      	nop
 801f94e:	3710      	adds	r7, #16
 801f950:	46bd      	mov	sp, r7
 801f952:	bd80      	pop	{r7, pc}
 801f954:	20001e98 	.word	0x20001e98

0801f958 <SUBGRF_CalibrateImage>:
 801f958:	b580      	push	{r7, lr}
 801f95a:	b084      	sub	sp, #16
 801f95c:	af00      	add	r7, sp, #0
 801f95e:	6078      	str	r0, [r7, #4]
 801f960:	687b      	ldr	r3, [r7, #4]
 801f962:	4a1b      	ldr	r2, [pc, #108]	; (801f9d0 <SUBGRF_CalibrateImage+0x78>)
 801f964:	4293      	cmp	r3, r2
 801f966:	d904      	bls.n	801f972 <SUBGRF_CalibrateImage+0x1a>
 801f968:	23e1      	movs	r3, #225	; 0xe1
 801f96a:	733b      	strb	r3, [r7, #12]
 801f96c:	23e9      	movs	r3, #233	; 0xe9
 801f96e:	737b      	strb	r3, [r7, #13]
 801f970:	e022      	b.n	801f9b8 <SUBGRF_CalibrateImage+0x60>
 801f972:	687b      	ldr	r3, [r7, #4]
 801f974:	4a17      	ldr	r2, [pc, #92]	; (801f9d4 <SUBGRF_CalibrateImage+0x7c>)
 801f976:	4293      	cmp	r3, r2
 801f978:	d904      	bls.n	801f984 <SUBGRF_CalibrateImage+0x2c>
 801f97a:	23d7      	movs	r3, #215	; 0xd7
 801f97c:	733b      	strb	r3, [r7, #12]
 801f97e:	23db      	movs	r3, #219	; 0xdb
 801f980:	737b      	strb	r3, [r7, #13]
 801f982:	e019      	b.n	801f9b8 <SUBGRF_CalibrateImage+0x60>
 801f984:	687b      	ldr	r3, [r7, #4]
 801f986:	4a14      	ldr	r2, [pc, #80]	; (801f9d8 <SUBGRF_CalibrateImage+0x80>)
 801f988:	4293      	cmp	r3, r2
 801f98a:	d904      	bls.n	801f996 <SUBGRF_CalibrateImage+0x3e>
 801f98c:	23c1      	movs	r3, #193	; 0xc1
 801f98e:	733b      	strb	r3, [r7, #12]
 801f990:	23c5      	movs	r3, #197	; 0xc5
 801f992:	737b      	strb	r3, [r7, #13]
 801f994:	e010      	b.n	801f9b8 <SUBGRF_CalibrateImage+0x60>
 801f996:	687b      	ldr	r3, [r7, #4]
 801f998:	4a10      	ldr	r2, [pc, #64]	; (801f9dc <SUBGRF_CalibrateImage+0x84>)
 801f99a:	4293      	cmp	r3, r2
 801f99c:	d904      	bls.n	801f9a8 <SUBGRF_CalibrateImage+0x50>
 801f99e:	2375      	movs	r3, #117	; 0x75
 801f9a0:	733b      	strb	r3, [r7, #12]
 801f9a2:	2381      	movs	r3, #129	; 0x81
 801f9a4:	737b      	strb	r3, [r7, #13]
 801f9a6:	e007      	b.n	801f9b8 <SUBGRF_CalibrateImage+0x60>
 801f9a8:	687b      	ldr	r3, [r7, #4]
 801f9aa:	4a0d      	ldr	r2, [pc, #52]	; (801f9e0 <SUBGRF_CalibrateImage+0x88>)
 801f9ac:	4293      	cmp	r3, r2
 801f9ae:	d903      	bls.n	801f9b8 <SUBGRF_CalibrateImage+0x60>
 801f9b0:	236b      	movs	r3, #107	; 0x6b
 801f9b2:	733b      	strb	r3, [r7, #12]
 801f9b4:	236f      	movs	r3, #111	; 0x6f
 801f9b6:	737b      	strb	r3, [r7, #13]
 801f9b8:	f107 020c 	add.w	r2, r7, #12
 801f9bc:	2302      	movs	r3, #2
 801f9be:	2198      	movs	r1, #152	; 0x98
 801f9c0:	4808      	ldr	r0, [pc, #32]	; (801f9e4 <SUBGRF_CalibrateImage+0x8c>)
 801f9c2:	f7ed fd7f 	bl	800d4c4 <HAL_SUBGHZ_ExecSetCmd>
 801f9c6:	bf00      	nop
 801f9c8:	3710      	adds	r7, #16
 801f9ca:	46bd      	mov	sp, r7
 801f9cc:	bd80      	pop	{r7, pc}
 801f9ce:	bf00      	nop
 801f9d0:	35a4e900 	.word	0x35a4e900
 801f9d4:	32a9f880 	.word	0x32a9f880
 801f9d8:	2de54480 	.word	0x2de54480
 801f9dc:	1b6b0b00 	.word	0x1b6b0b00
 801f9e0:	1954fc40 	.word	0x1954fc40
 801f9e4:	20001e98 	.word	0x20001e98

0801f9e8 <SUBGRF_SetPaConfig>:
 801f9e8:	b590      	push	{r4, r7, lr}
 801f9ea:	b085      	sub	sp, #20
 801f9ec:	af00      	add	r7, sp, #0
 801f9ee:	4604      	mov	r4, r0
 801f9f0:	4608      	mov	r0, r1
 801f9f2:	4611      	mov	r1, r2
 801f9f4:	461a      	mov	r2, r3
 801f9f6:	4623      	mov	r3, r4
 801f9f8:	71fb      	strb	r3, [r7, #7]
 801f9fa:	4603      	mov	r3, r0
 801f9fc:	71bb      	strb	r3, [r7, #6]
 801f9fe:	460b      	mov	r3, r1
 801fa00:	717b      	strb	r3, [r7, #5]
 801fa02:	4613      	mov	r3, r2
 801fa04:	713b      	strb	r3, [r7, #4]
 801fa06:	79fb      	ldrb	r3, [r7, #7]
 801fa08:	733b      	strb	r3, [r7, #12]
 801fa0a:	79bb      	ldrb	r3, [r7, #6]
 801fa0c:	737b      	strb	r3, [r7, #13]
 801fa0e:	797b      	ldrb	r3, [r7, #5]
 801fa10:	73bb      	strb	r3, [r7, #14]
 801fa12:	793b      	ldrb	r3, [r7, #4]
 801fa14:	73fb      	strb	r3, [r7, #15]
 801fa16:	f107 020c 	add.w	r2, r7, #12
 801fa1a:	2304      	movs	r3, #4
 801fa1c:	2195      	movs	r1, #149	; 0x95
 801fa1e:	4803      	ldr	r0, [pc, #12]	; (801fa2c <SUBGRF_SetPaConfig+0x44>)
 801fa20:	f7ed fd50 	bl	800d4c4 <HAL_SUBGHZ_ExecSetCmd>
 801fa24:	bf00      	nop
 801fa26:	3714      	adds	r7, #20
 801fa28:	46bd      	mov	sp, r7
 801fa2a:	bd90      	pop	{r4, r7, pc}
 801fa2c:	20001e98 	.word	0x20001e98

0801fa30 <SUBGRF_SetDioIrqParams>:
 801fa30:	b590      	push	{r4, r7, lr}
 801fa32:	b085      	sub	sp, #20
 801fa34:	af00      	add	r7, sp, #0
 801fa36:	4604      	mov	r4, r0
 801fa38:	4608      	mov	r0, r1
 801fa3a:	4611      	mov	r1, r2
 801fa3c:	461a      	mov	r2, r3
 801fa3e:	4623      	mov	r3, r4
 801fa40:	80fb      	strh	r3, [r7, #6]
 801fa42:	4603      	mov	r3, r0
 801fa44:	80bb      	strh	r3, [r7, #4]
 801fa46:	460b      	mov	r3, r1
 801fa48:	807b      	strh	r3, [r7, #2]
 801fa4a:	4613      	mov	r3, r2
 801fa4c:	803b      	strh	r3, [r7, #0]
 801fa4e:	88fb      	ldrh	r3, [r7, #6]
 801fa50:	0a1b      	lsrs	r3, r3, #8
 801fa52:	b29b      	uxth	r3, r3
 801fa54:	b2db      	uxtb	r3, r3
 801fa56:	723b      	strb	r3, [r7, #8]
 801fa58:	88fb      	ldrh	r3, [r7, #6]
 801fa5a:	b2db      	uxtb	r3, r3
 801fa5c:	727b      	strb	r3, [r7, #9]
 801fa5e:	88bb      	ldrh	r3, [r7, #4]
 801fa60:	0a1b      	lsrs	r3, r3, #8
 801fa62:	b29b      	uxth	r3, r3
 801fa64:	b2db      	uxtb	r3, r3
 801fa66:	72bb      	strb	r3, [r7, #10]
 801fa68:	88bb      	ldrh	r3, [r7, #4]
 801fa6a:	b2db      	uxtb	r3, r3
 801fa6c:	72fb      	strb	r3, [r7, #11]
 801fa6e:	887b      	ldrh	r3, [r7, #2]
 801fa70:	0a1b      	lsrs	r3, r3, #8
 801fa72:	b29b      	uxth	r3, r3
 801fa74:	b2db      	uxtb	r3, r3
 801fa76:	733b      	strb	r3, [r7, #12]
 801fa78:	887b      	ldrh	r3, [r7, #2]
 801fa7a:	b2db      	uxtb	r3, r3
 801fa7c:	737b      	strb	r3, [r7, #13]
 801fa7e:	883b      	ldrh	r3, [r7, #0]
 801fa80:	0a1b      	lsrs	r3, r3, #8
 801fa82:	b29b      	uxth	r3, r3
 801fa84:	b2db      	uxtb	r3, r3
 801fa86:	73bb      	strb	r3, [r7, #14]
 801fa88:	883b      	ldrh	r3, [r7, #0]
 801fa8a:	b2db      	uxtb	r3, r3
 801fa8c:	73fb      	strb	r3, [r7, #15]
 801fa8e:	f107 0208 	add.w	r2, r7, #8
 801fa92:	2308      	movs	r3, #8
 801fa94:	2108      	movs	r1, #8
 801fa96:	4803      	ldr	r0, [pc, #12]	; (801faa4 <SUBGRF_SetDioIrqParams+0x74>)
 801fa98:	f7ed fd14 	bl	800d4c4 <HAL_SUBGHZ_ExecSetCmd>
 801fa9c:	bf00      	nop
 801fa9e:	3714      	adds	r7, #20
 801faa0:	46bd      	mov	sp, r7
 801faa2:	bd90      	pop	{r4, r7, pc}
 801faa4:	20001e98 	.word	0x20001e98

0801faa8 <SUBGRF_SetTcxoMode>:
 801faa8:	b580      	push	{r7, lr}
 801faaa:	b084      	sub	sp, #16
 801faac:	af00      	add	r7, sp, #0
 801faae:	4603      	mov	r3, r0
 801fab0:	6039      	str	r1, [r7, #0]
 801fab2:	71fb      	strb	r3, [r7, #7]
 801fab4:	79fb      	ldrb	r3, [r7, #7]
 801fab6:	f003 0307 	and.w	r3, r3, #7
 801faba:	b2db      	uxtb	r3, r3
 801fabc:	733b      	strb	r3, [r7, #12]
 801fabe:	683b      	ldr	r3, [r7, #0]
 801fac0:	0c1b      	lsrs	r3, r3, #16
 801fac2:	b2db      	uxtb	r3, r3
 801fac4:	737b      	strb	r3, [r7, #13]
 801fac6:	683b      	ldr	r3, [r7, #0]
 801fac8:	0a1b      	lsrs	r3, r3, #8
 801faca:	b2db      	uxtb	r3, r3
 801facc:	73bb      	strb	r3, [r7, #14]
 801face:	683b      	ldr	r3, [r7, #0]
 801fad0:	b2db      	uxtb	r3, r3
 801fad2:	73fb      	strb	r3, [r7, #15]
 801fad4:	f107 020c 	add.w	r2, r7, #12
 801fad8:	2304      	movs	r3, #4
 801fada:	2197      	movs	r1, #151	; 0x97
 801fadc:	4803      	ldr	r0, [pc, #12]	; (801faec <SUBGRF_SetTcxoMode+0x44>)
 801fade:	f7ed fcf1 	bl	800d4c4 <HAL_SUBGHZ_ExecSetCmd>
 801fae2:	bf00      	nop
 801fae4:	3710      	adds	r7, #16
 801fae6:	46bd      	mov	sp, r7
 801fae8:	bd80      	pop	{r7, pc}
 801faea:	bf00      	nop
 801faec:	20001e98 	.word	0x20001e98

0801faf0 <SUBGRF_SetRfFrequency>:
 801faf0:	b5b0      	push	{r4, r5, r7, lr}
 801faf2:	b084      	sub	sp, #16
 801faf4:	af00      	add	r7, sp, #0
 801faf6:	6078      	str	r0, [r7, #4]
 801faf8:	2300      	movs	r3, #0
 801fafa:	60fb      	str	r3, [r7, #12]
 801fafc:	4b1b      	ldr	r3, [pc, #108]	; (801fb6c <SUBGRF_SetRfFrequency+0x7c>)
 801fafe:	781b      	ldrb	r3, [r3, #0]
 801fb00:	f083 0301 	eor.w	r3, r3, #1
 801fb04:	b2db      	uxtb	r3, r3
 801fb06:	2b00      	cmp	r3, #0
 801fb08:	d005      	beq.n	801fb16 <SUBGRF_SetRfFrequency+0x26>
 801fb0a:	6878      	ldr	r0, [r7, #4]
 801fb0c:	f7ff ff24 	bl	801f958 <SUBGRF_CalibrateImage>
 801fb10:	4b16      	ldr	r3, [pc, #88]	; (801fb6c <SUBGRF_SetRfFrequency+0x7c>)
 801fb12:	2201      	movs	r2, #1
 801fb14:	701a      	strb	r2, [r3, #0]
 801fb16:	687b      	ldr	r3, [r7, #4]
 801fb18:	461a      	mov	r2, r3
 801fb1a:	f04f 0300 	mov.w	r3, #0
 801fb1e:	09d5      	lsrs	r5, r2, #7
 801fb20:	0654      	lsls	r4, r2, #25
 801fb22:	4a13      	ldr	r2, [pc, #76]	; (801fb70 <SUBGRF_SetRfFrequency+0x80>)
 801fb24:	f04f 0300 	mov.w	r3, #0
 801fb28:	4620      	mov	r0, r4
 801fb2a:	4629      	mov	r1, r5
 801fb2c:	f7e1 fb94 	bl	8001258 <__aeabi_uldivmod>
 801fb30:	4602      	mov	r2, r0
 801fb32:	460b      	mov	r3, r1
 801fb34:	4613      	mov	r3, r2
 801fb36:	60fb      	str	r3, [r7, #12]
 801fb38:	68fb      	ldr	r3, [r7, #12]
 801fb3a:	0e1b      	lsrs	r3, r3, #24
 801fb3c:	b2db      	uxtb	r3, r3
 801fb3e:	723b      	strb	r3, [r7, #8]
 801fb40:	68fb      	ldr	r3, [r7, #12]
 801fb42:	0c1b      	lsrs	r3, r3, #16
 801fb44:	b2db      	uxtb	r3, r3
 801fb46:	727b      	strb	r3, [r7, #9]
 801fb48:	68fb      	ldr	r3, [r7, #12]
 801fb4a:	0a1b      	lsrs	r3, r3, #8
 801fb4c:	b2db      	uxtb	r3, r3
 801fb4e:	72bb      	strb	r3, [r7, #10]
 801fb50:	68fb      	ldr	r3, [r7, #12]
 801fb52:	b2db      	uxtb	r3, r3
 801fb54:	72fb      	strb	r3, [r7, #11]
 801fb56:	f107 0208 	add.w	r2, r7, #8
 801fb5a:	2304      	movs	r3, #4
 801fb5c:	2186      	movs	r1, #134	; 0x86
 801fb5e:	4805      	ldr	r0, [pc, #20]	; (801fb74 <SUBGRF_SetRfFrequency+0x84>)
 801fb60:	f7ed fcb0 	bl	800d4c4 <HAL_SUBGHZ_ExecSetCmd>
 801fb64:	bf00      	nop
 801fb66:	3710      	adds	r7, #16
 801fb68:	46bd      	mov	sp, r7
 801fb6a:	bdb0      	pop	{r4, r5, r7, pc}
 801fb6c:	20001950 	.word	0x20001950
 801fb70:	01e84800 	.word	0x01e84800
 801fb74:	20001e98 	.word	0x20001e98

0801fb78 <SUBGRF_SetPacketType>:
 801fb78:	b580      	push	{r7, lr}
 801fb7a:	b082      	sub	sp, #8
 801fb7c:	af00      	add	r7, sp, #0
 801fb7e:	4603      	mov	r3, r0
 801fb80:	71fb      	strb	r3, [r7, #7]
 801fb82:	79fa      	ldrb	r2, [r7, #7]
 801fb84:	4b09      	ldr	r3, [pc, #36]	; (801fbac <SUBGRF_SetPacketType+0x34>)
 801fb86:	701a      	strb	r2, [r3, #0]
 801fb88:	79fb      	ldrb	r3, [r7, #7]
 801fb8a:	2b00      	cmp	r3, #0
 801fb8c:	d104      	bne.n	801fb98 <SUBGRF_SetPacketType+0x20>
 801fb8e:	2100      	movs	r1, #0
 801fb90:	f240 60ac 	movw	r0, #1708	; 0x6ac
 801fb94:	f000 faa2 	bl	80200dc <SUBGRF_WriteRegister>
 801fb98:	1dfa      	adds	r2, r7, #7
 801fb9a:	2301      	movs	r3, #1
 801fb9c:	218a      	movs	r1, #138	; 0x8a
 801fb9e:	4804      	ldr	r0, [pc, #16]	; (801fbb0 <SUBGRF_SetPacketType+0x38>)
 801fba0:	f7ed fc90 	bl	800d4c4 <HAL_SUBGHZ_ExecSetCmd>
 801fba4:	bf00      	nop
 801fba6:	3708      	adds	r7, #8
 801fba8:	46bd      	mov	sp, r7
 801fbaa:	bd80      	pop	{r7, pc}
 801fbac:	20001949 	.word	0x20001949
 801fbb0:	20001e98 	.word	0x20001e98

0801fbb4 <SUBGRF_GetPacketType>:
 801fbb4:	b480      	push	{r7}
 801fbb6:	af00      	add	r7, sp, #0
 801fbb8:	4b02      	ldr	r3, [pc, #8]	; (801fbc4 <SUBGRF_GetPacketType+0x10>)
 801fbba:	781b      	ldrb	r3, [r3, #0]
 801fbbc:	4618      	mov	r0, r3
 801fbbe:	46bd      	mov	sp, r7
 801fbc0:	bc80      	pop	{r7}
 801fbc2:	4770      	bx	lr
 801fbc4:	20001949 	.word	0x20001949

0801fbc8 <SUBGRF_SetTxParams>:
 801fbc8:	b580      	push	{r7, lr}
 801fbca:	b084      	sub	sp, #16
 801fbcc:	af00      	add	r7, sp, #0
 801fbce:	4603      	mov	r3, r0
 801fbd0:	71fb      	strb	r3, [r7, #7]
 801fbd2:	460b      	mov	r3, r1
 801fbd4:	71bb      	strb	r3, [r7, #6]
 801fbd6:	4613      	mov	r3, r2
 801fbd8:	717b      	strb	r3, [r7, #5]
 801fbda:	79fb      	ldrb	r3, [r7, #7]
 801fbdc:	2b01      	cmp	r3, #1
 801fbde:	d124      	bne.n	801fc2a <SUBGRF_SetTxParams+0x62>
 801fbe0:	f997 3006 	ldrsb.w	r3, [r7, #6]
 801fbe4:	2b0f      	cmp	r3, #15
 801fbe6:	d106      	bne.n	801fbf6 <SUBGRF_SetTxParams+0x2e>
 801fbe8:	2301      	movs	r3, #1
 801fbea:	2201      	movs	r2, #1
 801fbec:	2100      	movs	r1, #0
 801fbee:	2006      	movs	r0, #6
 801fbf0:	f7ff fefa 	bl	801f9e8 <SUBGRF_SetPaConfig>
 801fbf4:	e005      	b.n	801fc02 <SUBGRF_SetTxParams+0x3a>
 801fbf6:	2301      	movs	r3, #1
 801fbf8:	2201      	movs	r2, #1
 801fbfa:	2100      	movs	r1, #0
 801fbfc:	2004      	movs	r0, #4
 801fbfe:	f7ff fef3 	bl	801f9e8 <SUBGRF_SetPaConfig>
 801fc02:	f997 3006 	ldrsb.w	r3, [r7, #6]
 801fc06:	2b0d      	cmp	r3, #13
 801fc08:	dd02      	ble.n	801fc10 <SUBGRF_SetTxParams+0x48>
 801fc0a:	230e      	movs	r3, #14
 801fc0c:	71bb      	strb	r3, [r7, #6]
 801fc0e:	e006      	b.n	801fc1e <SUBGRF_SetTxParams+0x56>
 801fc10:	f997 3006 	ldrsb.w	r3, [r7, #6]
 801fc14:	f113 0f11 	cmn.w	r3, #17
 801fc18:	da01      	bge.n	801fc1e <SUBGRF_SetTxParams+0x56>
 801fc1a:	23ef      	movs	r3, #239	; 0xef
 801fc1c:	71bb      	strb	r3, [r7, #6]
 801fc1e:	2118      	movs	r1, #24
 801fc20:	f640 00e7 	movw	r0, #2279	; 0x8e7
 801fc24:	f000 fa5a 	bl	80200dc <SUBGRF_WriteRegister>
 801fc28:	e025      	b.n	801fc76 <SUBGRF_SetTxParams+0xae>
 801fc2a:	f640 00d8 	movw	r0, #2264	; 0x8d8
 801fc2e:	f000 fa69 	bl	8020104 <SUBGRF_ReadRegister>
 801fc32:	4603      	mov	r3, r0
 801fc34:	f043 031e 	orr.w	r3, r3, #30
 801fc38:	b2db      	uxtb	r3, r3
 801fc3a:	4619      	mov	r1, r3
 801fc3c:	f640 00d8 	movw	r0, #2264	; 0x8d8
 801fc40:	f000 fa4c 	bl	80200dc <SUBGRF_WriteRegister>
 801fc44:	2301      	movs	r3, #1
 801fc46:	2200      	movs	r2, #0
 801fc48:	2107      	movs	r1, #7
 801fc4a:	2004      	movs	r0, #4
 801fc4c:	f7ff fecc 	bl	801f9e8 <SUBGRF_SetPaConfig>
 801fc50:	f997 3006 	ldrsb.w	r3, [r7, #6]
 801fc54:	2b16      	cmp	r3, #22
 801fc56:	dd02      	ble.n	801fc5e <SUBGRF_SetTxParams+0x96>
 801fc58:	2316      	movs	r3, #22
 801fc5a:	71bb      	strb	r3, [r7, #6]
 801fc5c:	e006      	b.n	801fc6c <SUBGRF_SetTxParams+0xa4>
 801fc5e:	f997 3006 	ldrsb.w	r3, [r7, #6]
 801fc62:	f113 0f09 	cmn.w	r3, #9
 801fc66:	da01      	bge.n	801fc6c <SUBGRF_SetTxParams+0xa4>
 801fc68:	23f7      	movs	r3, #247	; 0xf7
 801fc6a:	71bb      	strb	r3, [r7, #6]
 801fc6c:	2138      	movs	r1, #56	; 0x38
 801fc6e:	f640 00e7 	movw	r0, #2279	; 0x8e7
 801fc72:	f000 fa33 	bl	80200dc <SUBGRF_WriteRegister>
 801fc76:	79bb      	ldrb	r3, [r7, #6]
 801fc78:	733b      	strb	r3, [r7, #12]
 801fc7a:	797b      	ldrb	r3, [r7, #5]
 801fc7c:	737b      	strb	r3, [r7, #13]
 801fc7e:	f107 020c 	add.w	r2, r7, #12
 801fc82:	2302      	movs	r3, #2
 801fc84:	218e      	movs	r1, #142	; 0x8e
 801fc86:	4803      	ldr	r0, [pc, #12]	; (801fc94 <SUBGRF_SetTxParams+0xcc>)
 801fc88:	f7ed fc1c 	bl	800d4c4 <HAL_SUBGHZ_ExecSetCmd>
 801fc8c:	bf00      	nop
 801fc8e:	3710      	adds	r7, #16
 801fc90:	46bd      	mov	sp, r7
 801fc92:	bd80      	pop	{r7, pc}
 801fc94:	20001e98 	.word	0x20001e98

0801fc98 <SUBGRF_SetModulationParams>:
 801fc98:	b5b0      	push	{r4, r5, r7, lr}
 801fc9a:	b086      	sub	sp, #24
 801fc9c:	af00      	add	r7, sp, #0
 801fc9e:	6078      	str	r0, [r7, #4]
 801fca0:	2300      	movs	r3, #0
 801fca2:	617b      	str	r3, [r7, #20]
 801fca4:	4a5e      	ldr	r2, [pc, #376]	; (801fe20 <SUBGRF_SetModulationParams+0x188>)
 801fca6:	f107 0308 	add.w	r3, r7, #8
 801fcaa:	e892 0003 	ldmia.w	r2, {r0, r1}
 801fcae:	e883 0003 	stmia.w	r3, {r0, r1}
 801fcb2:	687b      	ldr	r3, [r7, #4]
 801fcb4:	781a      	ldrb	r2, [r3, #0]
 801fcb6:	4b5b      	ldr	r3, [pc, #364]	; (801fe24 <SUBGRF_SetModulationParams+0x18c>)
 801fcb8:	781b      	ldrb	r3, [r3, #0]
 801fcba:	429a      	cmp	r2, r3
 801fcbc:	d004      	beq.n	801fcc8 <SUBGRF_SetModulationParams+0x30>
 801fcbe:	687b      	ldr	r3, [r7, #4]
 801fcc0:	781b      	ldrb	r3, [r3, #0]
 801fcc2:	4618      	mov	r0, r3
 801fcc4:	f7ff ff58 	bl	801fb78 <SUBGRF_SetPacketType>
 801fcc8:	687b      	ldr	r3, [r7, #4]
 801fcca:	781b      	ldrb	r3, [r3, #0]
 801fccc:	2b03      	cmp	r3, #3
 801fcce:	f200 80a2 	bhi.w	801fe16 <SUBGRF_SetModulationParams+0x17e>
 801fcd2:	a201      	add	r2, pc, #4	; (adr r2, 801fcd8 <SUBGRF_SetModulationParams+0x40>)
 801fcd4:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 801fcd8:	0801fce9 	.word	0x0801fce9
 801fcdc:	0801fda5 	.word	0x0801fda5
 801fce0:	0801fd67 	.word	0x0801fd67
 801fce4:	0801fdd3 	.word	0x0801fdd3
 801fce8:	2308      	movs	r3, #8
 801fcea:	74fb      	strb	r3, [r7, #19]
 801fcec:	687b      	ldr	r3, [r7, #4]
 801fcee:	685b      	ldr	r3, [r3, #4]
 801fcf0:	4a4d      	ldr	r2, [pc, #308]	; (801fe28 <SUBGRF_SetModulationParams+0x190>)
 801fcf2:	fbb2 f3f3 	udiv	r3, r2, r3
 801fcf6:	617b      	str	r3, [r7, #20]
 801fcf8:	697b      	ldr	r3, [r7, #20]
 801fcfa:	0c1b      	lsrs	r3, r3, #16
 801fcfc:	b2db      	uxtb	r3, r3
 801fcfe:	723b      	strb	r3, [r7, #8]
 801fd00:	697b      	ldr	r3, [r7, #20]
 801fd02:	0a1b      	lsrs	r3, r3, #8
 801fd04:	b2db      	uxtb	r3, r3
 801fd06:	727b      	strb	r3, [r7, #9]
 801fd08:	697b      	ldr	r3, [r7, #20]
 801fd0a:	b2db      	uxtb	r3, r3
 801fd0c:	72bb      	strb	r3, [r7, #10]
 801fd0e:	687b      	ldr	r3, [r7, #4]
 801fd10:	7b1b      	ldrb	r3, [r3, #12]
 801fd12:	72fb      	strb	r3, [r7, #11]
 801fd14:	687b      	ldr	r3, [r7, #4]
 801fd16:	7b5b      	ldrb	r3, [r3, #13]
 801fd18:	733b      	strb	r3, [r7, #12]
 801fd1a:	687b      	ldr	r3, [r7, #4]
 801fd1c:	689b      	ldr	r3, [r3, #8]
 801fd1e:	461a      	mov	r2, r3
 801fd20:	f04f 0300 	mov.w	r3, #0
 801fd24:	09d5      	lsrs	r5, r2, #7
 801fd26:	0654      	lsls	r4, r2, #25
 801fd28:	4a40      	ldr	r2, [pc, #256]	; (801fe2c <SUBGRF_SetModulationParams+0x194>)
 801fd2a:	f04f 0300 	mov.w	r3, #0
 801fd2e:	4620      	mov	r0, r4
 801fd30:	4629      	mov	r1, r5
 801fd32:	f7e1 fa91 	bl	8001258 <__aeabi_uldivmod>
 801fd36:	4602      	mov	r2, r0
 801fd38:	460b      	mov	r3, r1
 801fd3a:	4613      	mov	r3, r2
 801fd3c:	617b      	str	r3, [r7, #20]
 801fd3e:	697b      	ldr	r3, [r7, #20]
 801fd40:	0c1b      	lsrs	r3, r3, #16
 801fd42:	b2db      	uxtb	r3, r3
 801fd44:	737b      	strb	r3, [r7, #13]
 801fd46:	697b      	ldr	r3, [r7, #20]
 801fd48:	0a1b      	lsrs	r3, r3, #8
 801fd4a:	b2db      	uxtb	r3, r3
 801fd4c:	73bb      	strb	r3, [r7, #14]
 801fd4e:	697b      	ldr	r3, [r7, #20]
 801fd50:	b2db      	uxtb	r3, r3
 801fd52:	73fb      	strb	r3, [r7, #15]
 801fd54:	7cfb      	ldrb	r3, [r7, #19]
 801fd56:	b29b      	uxth	r3, r3
 801fd58:	f107 0208 	add.w	r2, r7, #8
 801fd5c:	218b      	movs	r1, #139	; 0x8b
 801fd5e:	4834      	ldr	r0, [pc, #208]	; (801fe30 <SUBGRF_SetModulationParams+0x198>)
 801fd60:	f7ed fbb0 	bl	800d4c4 <HAL_SUBGHZ_ExecSetCmd>
 801fd64:	e058      	b.n	801fe18 <SUBGRF_SetModulationParams+0x180>
 801fd66:	2304      	movs	r3, #4
 801fd68:	74fb      	strb	r3, [r7, #19]
 801fd6a:	687b      	ldr	r3, [r7, #4]
 801fd6c:	691b      	ldr	r3, [r3, #16]
 801fd6e:	4a2e      	ldr	r2, [pc, #184]	; (801fe28 <SUBGRF_SetModulationParams+0x190>)
 801fd70:	fbb2 f3f3 	udiv	r3, r2, r3
 801fd74:	617b      	str	r3, [r7, #20]
 801fd76:	697b      	ldr	r3, [r7, #20]
 801fd78:	0c1b      	lsrs	r3, r3, #16
 801fd7a:	b2db      	uxtb	r3, r3
 801fd7c:	723b      	strb	r3, [r7, #8]
 801fd7e:	697b      	ldr	r3, [r7, #20]
 801fd80:	0a1b      	lsrs	r3, r3, #8
 801fd82:	b2db      	uxtb	r3, r3
 801fd84:	727b      	strb	r3, [r7, #9]
 801fd86:	697b      	ldr	r3, [r7, #20]
 801fd88:	b2db      	uxtb	r3, r3
 801fd8a:	72bb      	strb	r3, [r7, #10]
 801fd8c:	687b      	ldr	r3, [r7, #4]
 801fd8e:	7d1b      	ldrb	r3, [r3, #20]
 801fd90:	72fb      	strb	r3, [r7, #11]
 801fd92:	7cfb      	ldrb	r3, [r7, #19]
 801fd94:	b29b      	uxth	r3, r3
 801fd96:	f107 0208 	add.w	r2, r7, #8
 801fd9a:	218b      	movs	r1, #139	; 0x8b
 801fd9c:	4824      	ldr	r0, [pc, #144]	; (801fe30 <SUBGRF_SetModulationParams+0x198>)
 801fd9e:	f7ed fb91 	bl	800d4c4 <HAL_SUBGHZ_ExecSetCmd>
 801fda2:	e039      	b.n	801fe18 <SUBGRF_SetModulationParams+0x180>
 801fda4:	2304      	movs	r3, #4
 801fda6:	74fb      	strb	r3, [r7, #19]
 801fda8:	687b      	ldr	r3, [r7, #4]
 801fdaa:	7e1b      	ldrb	r3, [r3, #24]
 801fdac:	723b      	strb	r3, [r7, #8]
 801fdae:	687b      	ldr	r3, [r7, #4]
 801fdb0:	7e5b      	ldrb	r3, [r3, #25]
 801fdb2:	727b      	strb	r3, [r7, #9]
 801fdb4:	687b      	ldr	r3, [r7, #4]
 801fdb6:	7e9b      	ldrb	r3, [r3, #26]
 801fdb8:	72bb      	strb	r3, [r7, #10]
 801fdba:	687b      	ldr	r3, [r7, #4]
 801fdbc:	7edb      	ldrb	r3, [r3, #27]
 801fdbe:	72fb      	strb	r3, [r7, #11]
 801fdc0:	7cfb      	ldrb	r3, [r7, #19]
 801fdc2:	b29b      	uxth	r3, r3
 801fdc4:	f107 0208 	add.w	r2, r7, #8
 801fdc8:	218b      	movs	r1, #139	; 0x8b
 801fdca:	4819      	ldr	r0, [pc, #100]	; (801fe30 <SUBGRF_SetModulationParams+0x198>)
 801fdcc:	f7ed fb7a 	bl	800d4c4 <HAL_SUBGHZ_ExecSetCmd>
 801fdd0:	e022      	b.n	801fe18 <SUBGRF_SetModulationParams+0x180>
 801fdd2:	2305      	movs	r3, #5
 801fdd4:	74fb      	strb	r3, [r7, #19]
 801fdd6:	687b      	ldr	r3, [r7, #4]
 801fdd8:	685b      	ldr	r3, [r3, #4]
 801fdda:	4a13      	ldr	r2, [pc, #76]	; (801fe28 <SUBGRF_SetModulationParams+0x190>)
 801fddc:	fbb2 f3f3 	udiv	r3, r2, r3
 801fde0:	617b      	str	r3, [r7, #20]
 801fde2:	697b      	ldr	r3, [r7, #20]
 801fde4:	0c1b      	lsrs	r3, r3, #16
 801fde6:	b2db      	uxtb	r3, r3
 801fde8:	723b      	strb	r3, [r7, #8]
 801fdea:	697b      	ldr	r3, [r7, #20]
 801fdec:	0a1b      	lsrs	r3, r3, #8
 801fdee:	b2db      	uxtb	r3, r3
 801fdf0:	727b      	strb	r3, [r7, #9]
 801fdf2:	697b      	ldr	r3, [r7, #20]
 801fdf4:	b2db      	uxtb	r3, r3
 801fdf6:	72bb      	strb	r3, [r7, #10]
 801fdf8:	687b      	ldr	r3, [r7, #4]
 801fdfa:	7b1b      	ldrb	r3, [r3, #12]
 801fdfc:	72fb      	strb	r3, [r7, #11]
 801fdfe:	687b      	ldr	r3, [r7, #4]
 801fe00:	7b5b      	ldrb	r3, [r3, #13]
 801fe02:	733b      	strb	r3, [r7, #12]
 801fe04:	7cfb      	ldrb	r3, [r7, #19]
 801fe06:	b29b      	uxth	r3, r3
 801fe08:	f107 0208 	add.w	r2, r7, #8
 801fe0c:	218b      	movs	r1, #139	; 0x8b
 801fe0e:	4808      	ldr	r0, [pc, #32]	; (801fe30 <SUBGRF_SetModulationParams+0x198>)
 801fe10:	f7ed fb58 	bl	800d4c4 <HAL_SUBGHZ_ExecSetCmd>
 801fe14:	e000      	b.n	801fe18 <SUBGRF_SetModulationParams+0x180>
 801fe16:	bf00      	nop
 801fe18:	bf00      	nop
 801fe1a:	3718      	adds	r7, #24
 801fe1c:	46bd      	mov	sp, r7
 801fe1e:	bdb0      	pop	{r4, r5, r7, pc}
 801fe20:	08026218 	.word	0x08026218
 801fe24:	20001949 	.word	0x20001949
 801fe28:	3d090000 	.word	0x3d090000
 801fe2c:	01e84800 	.word	0x01e84800
 801fe30:	20001e98 	.word	0x20001e98

0801fe34 <SUBGRF_SetPacketParams>:
 801fe34:	b580      	push	{r7, lr}
 801fe36:	b086      	sub	sp, #24
 801fe38:	af00      	add	r7, sp, #0
 801fe3a:	6078      	str	r0, [r7, #4]
 801fe3c:	2300      	movs	r3, #0
 801fe3e:	75bb      	strb	r3, [r7, #22]
 801fe40:	4a48      	ldr	r2, [pc, #288]	; (801ff64 <SUBGRF_SetPacketParams+0x130>)
 801fe42:	f107 030c 	add.w	r3, r7, #12
 801fe46:	ca07      	ldmia	r2, {r0, r1, r2}
 801fe48:	c303      	stmia	r3!, {r0, r1}
 801fe4a:	701a      	strb	r2, [r3, #0]
 801fe4c:	687b      	ldr	r3, [r7, #4]
 801fe4e:	781a      	ldrb	r2, [r3, #0]
 801fe50:	4b45      	ldr	r3, [pc, #276]	; (801ff68 <SUBGRF_SetPacketParams+0x134>)
 801fe52:	781b      	ldrb	r3, [r3, #0]
 801fe54:	429a      	cmp	r2, r3
 801fe56:	d004      	beq.n	801fe62 <SUBGRF_SetPacketParams+0x2e>
 801fe58:	687b      	ldr	r3, [r7, #4]
 801fe5a:	781b      	ldrb	r3, [r3, #0]
 801fe5c:	4618      	mov	r0, r3
 801fe5e:	f7ff fe8b 	bl	801fb78 <SUBGRF_SetPacketType>
 801fe62:	687b      	ldr	r3, [r7, #4]
 801fe64:	781b      	ldrb	r3, [r3, #0]
 801fe66:	2b03      	cmp	r3, #3
 801fe68:	d878      	bhi.n	801ff5c <SUBGRF_SetPacketParams+0x128>
 801fe6a:	a201      	add	r2, pc, #4	; (adr r2, 801fe70 <SUBGRF_SetPacketParams+0x3c>)
 801fe6c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 801fe70:	0801fe81 	.word	0x0801fe81
 801fe74:	0801ff11 	.word	0x0801ff11
 801fe78:	0801ff05 	.word	0x0801ff05
 801fe7c:	0801fe81 	.word	0x0801fe81
 801fe80:	687b      	ldr	r3, [r7, #4]
 801fe82:	7a5b      	ldrb	r3, [r3, #9]
 801fe84:	2bf1      	cmp	r3, #241	; 0xf1
 801fe86:	d10a      	bne.n	801fe9e <SUBGRF_SetPacketParams+0x6a>
 801fe88:	f64f 70ff 	movw	r0, #65535	; 0xffff
 801fe8c:	f7ff faf0 	bl	801f470 <SUBGRF_SetCrcSeed>
 801fe90:	f248 0005 	movw	r0, #32773	; 0x8005
 801fe94:	f7ff fb0c 	bl	801f4b0 <SUBGRF_SetCrcPolynomial>
 801fe98:	2302      	movs	r3, #2
 801fe9a:	75bb      	strb	r3, [r7, #22]
 801fe9c:	e011      	b.n	801fec2 <SUBGRF_SetPacketParams+0x8e>
 801fe9e:	687b      	ldr	r3, [r7, #4]
 801fea0:	7a5b      	ldrb	r3, [r3, #9]
 801fea2:	2bf2      	cmp	r3, #242	; 0xf2
 801fea4:	d10a      	bne.n	801febc <SUBGRF_SetPacketParams+0x88>
 801fea6:	f641 500f 	movw	r0, #7439	; 0x1d0f
 801feaa:	f7ff fae1 	bl	801f470 <SUBGRF_SetCrcSeed>
 801feae:	f241 0021 	movw	r0, #4129	; 0x1021
 801feb2:	f7ff fafd 	bl	801f4b0 <SUBGRF_SetCrcPolynomial>
 801feb6:	2306      	movs	r3, #6
 801feb8:	75bb      	strb	r3, [r7, #22]
 801feba:	e002      	b.n	801fec2 <SUBGRF_SetPacketParams+0x8e>
 801febc:	687b      	ldr	r3, [r7, #4]
 801febe:	7a5b      	ldrb	r3, [r3, #9]
 801fec0:	75bb      	strb	r3, [r7, #22]
 801fec2:	2309      	movs	r3, #9
 801fec4:	75fb      	strb	r3, [r7, #23]
 801fec6:	687b      	ldr	r3, [r7, #4]
 801fec8:	885b      	ldrh	r3, [r3, #2]
 801feca:	0a1b      	lsrs	r3, r3, #8
 801fecc:	b29b      	uxth	r3, r3
 801fece:	b2db      	uxtb	r3, r3
 801fed0:	733b      	strb	r3, [r7, #12]
 801fed2:	687b      	ldr	r3, [r7, #4]
 801fed4:	885b      	ldrh	r3, [r3, #2]
 801fed6:	b2db      	uxtb	r3, r3
 801fed8:	737b      	strb	r3, [r7, #13]
 801feda:	687b      	ldr	r3, [r7, #4]
 801fedc:	791b      	ldrb	r3, [r3, #4]
 801fede:	73bb      	strb	r3, [r7, #14]
 801fee0:	687b      	ldr	r3, [r7, #4]
 801fee2:	795b      	ldrb	r3, [r3, #5]
 801fee4:	73fb      	strb	r3, [r7, #15]
 801fee6:	687b      	ldr	r3, [r7, #4]
 801fee8:	799b      	ldrb	r3, [r3, #6]
 801feea:	743b      	strb	r3, [r7, #16]
 801feec:	687b      	ldr	r3, [r7, #4]
 801feee:	79db      	ldrb	r3, [r3, #7]
 801fef0:	747b      	strb	r3, [r7, #17]
 801fef2:	687b      	ldr	r3, [r7, #4]
 801fef4:	7a1b      	ldrb	r3, [r3, #8]
 801fef6:	74bb      	strb	r3, [r7, #18]
 801fef8:	7dbb      	ldrb	r3, [r7, #22]
 801fefa:	74fb      	strb	r3, [r7, #19]
 801fefc:	687b      	ldr	r3, [r7, #4]
 801fefe:	7a9b      	ldrb	r3, [r3, #10]
 801ff00:	753b      	strb	r3, [r7, #20]
 801ff02:	e022      	b.n	801ff4a <SUBGRF_SetPacketParams+0x116>
 801ff04:	2301      	movs	r3, #1
 801ff06:	75fb      	strb	r3, [r7, #23]
 801ff08:	687b      	ldr	r3, [r7, #4]
 801ff0a:	7b1b      	ldrb	r3, [r3, #12]
 801ff0c:	733b      	strb	r3, [r7, #12]
 801ff0e:	e01c      	b.n	801ff4a <SUBGRF_SetPacketParams+0x116>
 801ff10:	2306      	movs	r3, #6
 801ff12:	75fb      	strb	r3, [r7, #23]
 801ff14:	687b      	ldr	r3, [r7, #4]
 801ff16:	89db      	ldrh	r3, [r3, #14]
 801ff18:	0a1b      	lsrs	r3, r3, #8
 801ff1a:	b29b      	uxth	r3, r3
 801ff1c:	b2db      	uxtb	r3, r3
 801ff1e:	733b      	strb	r3, [r7, #12]
 801ff20:	687b      	ldr	r3, [r7, #4]
 801ff22:	89db      	ldrh	r3, [r3, #14]
 801ff24:	b2db      	uxtb	r3, r3
 801ff26:	737b      	strb	r3, [r7, #13]
 801ff28:	687b      	ldr	r3, [r7, #4]
 801ff2a:	7c1a      	ldrb	r2, [r3, #16]
 801ff2c:	4b0f      	ldr	r3, [pc, #60]	; (801ff6c <SUBGRF_SetPacketParams+0x138>)
 801ff2e:	4611      	mov	r1, r2
 801ff30:	7019      	strb	r1, [r3, #0]
 801ff32:	4613      	mov	r3, r2
 801ff34:	73bb      	strb	r3, [r7, #14]
 801ff36:	687b      	ldr	r3, [r7, #4]
 801ff38:	7c5b      	ldrb	r3, [r3, #17]
 801ff3a:	73fb      	strb	r3, [r7, #15]
 801ff3c:	687b      	ldr	r3, [r7, #4]
 801ff3e:	7c9b      	ldrb	r3, [r3, #18]
 801ff40:	743b      	strb	r3, [r7, #16]
 801ff42:	687b      	ldr	r3, [r7, #4]
 801ff44:	7cdb      	ldrb	r3, [r3, #19]
 801ff46:	747b      	strb	r3, [r7, #17]
 801ff48:	bf00      	nop
 801ff4a:	7dfb      	ldrb	r3, [r7, #23]
 801ff4c:	b29b      	uxth	r3, r3
 801ff4e:	f107 020c 	add.w	r2, r7, #12
 801ff52:	218c      	movs	r1, #140	; 0x8c
 801ff54:	4806      	ldr	r0, [pc, #24]	; (801ff70 <SUBGRF_SetPacketParams+0x13c>)
 801ff56:	f7ed fab5 	bl	800d4c4 <HAL_SUBGHZ_ExecSetCmd>
 801ff5a:	e000      	b.n	801ff5e <SUBGRF_SetPacketParams+0x12a>
 801ff5c:	bf00      	nop
 801ff5e:	3718      	adds	r7, #24
 801ff60:	46bd      	mov	sp, r7
 801ff62:	bd80      	pop	{r7, pc}
 801ff64:	08026220 	.word	0x08026220
 801ff68:	20001949 	.word	0x20001949
 801ff6c:	2000194a 	.word	0x2000194a
 801ff70:	20001e98 	.word	0x20001e98

0801ff74 <SUBGRF_SetBufferBaseAddress>:
 801ff74:	b580      	push	{r7, lr}
 801ff76:	b084      	sub	sp, #16
 801ff78:	af00      	add	r7, sp, #0
 801ff7a:	4603      	mov	r3, r0
 801ff7c:	460a      	mov	r2, r1
 801ff7e:	71fb      	strb	r3, [r7, #7]
 801ff80:	4613      	mov	r3, r2
 801ff82:	71bb      	strb	r3, [r7, #6]
 801ff84:	79fb      	ldrb	r3, [r7, #7]
 801ff86:	733b      	strb	r3, [r7, #12]
 801ff88:	79bb      	ldrb	r3, [r7, #6]
 801ff8a:	737b      	strb	r3, [r7, #13]
 801ff8c:	f107 020c 	add.w	r2, r7, #12
 801ff90:	2302      	movs	r3, #2
 801ff92:	218f      	movs	r1, #143	; 0x8f
 801ff94:	4803      	ldr	r0, [pc, #12]	; (801ffa4 <SUBGRF_SetBufferBaseAddress+0x30>)
 801ff96:	f7ed fa95 	bl	800d4c4 <HAL_SUBGHZ_ExecSetCmd>
 801ff9a:	bf00      	nop
 801ff9c:	3710      	adds	r7, #16
 801ff9e:	46bd      	mov	sp, r7
 801ffa0:	bd80      	pop	{r7, pc}
 801ffa2:	bf00      	nop
 801ffa4:	20001e98 	.word	0x20001e98

0801ffa8 <SUBGRF_GetRssiInst>:
 801ffa8:	b580      	push	{r7, lr}
 801ffaa:	b082      	sub	sp, #8
 801ffac:	af00      	add	r7, sp, #0
 801ffae:	2300      	movs	r3, #0
 801ffb0:	71fb      	strb	r3, [r7, #7]
 801ffb2:	1d3a      	adds	r2, r7, #4
 801ffb4:	2301      	movs	r3, #1
 801ffb6:	2115      	movs	r1, #21
 801ffb8:	4806      	ldr	r0, [pc, #24]	; (801ffd4 <SUBGRF_GetRssiInst+0x2c>)
 801ffba:	f7ed fae2 	bl	800d582 <HAL_SUBGHZ_ExecGetCmd>
 801ffbe:	793b      	ldrb	r3, [r7, #4]
 801ffc0:	425b      	negs	r3, r3
 801ffc2:	105b      	asrs	r3, r3, #1
 801ffc4:	71fb      	strb	r3, [r7, #7]
 801ffc6:	f997 3007 	ldrsb.w	r3, [r7, #7]
 801ffca:	4618      	mov	r0, r3
 801ffcc:	3708      	adds	r7, #8
 801ffce:	46bd      	mov	sp, r7
 801ffd0:	bd80      	pop	{r7, pc}
 801ffd2:	bf00      	nop
 801ffd4:	20001e98 	.word	0x20001e98

0801ffd8 <SUBGRF_GetRxBufferStatus>:
 801ffd8:	b580      	push	{r7, lr}
 801ffda:	b084      	sub	sp, #16
 801ffdc:	af00      	add	r7, sp, #0
 801ffde:	6078      	str	r0, [r7, #4]
 801ffe0:	6039      	str	r1, [r7, #0]
 801ffe2:	f107 020c 	add.w	r2, r7, #12
 801ffe6:	2302      	movs	r3, #2
 801ffe8:	2113      	movs	r1, #19
 801ffea:	4810      	ldr	r0, [pc, #64]	; (802002c <SUBGRF_GetRxBufferStatus+0x54>)
 801ffec:	f7ed fac9 	bl	800d582 <HAL_SUBGHZ_ExecGetCmd>
 801fff0:	f7ff fde0 	bl	801fbb4 <SUBGRF_GetPacketType>
 801fff4:	4603      	mov	r3, r0
 801fff6:	2b01      	cmp	r3, #1
 801fff8:	d10d      	bne.n	8020016 <SUBGRF_GetRxBufferStatus+0x3e>
 801fffa:	4b0d      	ldr	r3, [pc, #52]	; (8020030 <SUBGRF_GetRxBufferStatus+0x58>)
 801fffc:	781b      	ldrb	r3, [r3, #0]
 801fffe:	b2db      	uxtb	r3, r3
 8020000:	2b01      	cmp	r3, #1
 8020002:	d108      	bne.n	8020016 <SUBGRF_GetRxBufferStatus+0x3e>
 8020004:	f240 7002 	movw	r0, #1794	; 0x702
 8020008:	f000 f87c 	bl	8020104 <SUBGRF_ReadRegister>
 802000c:	4603      	mov	r3, r0
 802000e:	461a      	mov	r2, r3
 8020010:	687b      	ldr	r3, [r7, #4]
 8020012:	701a      	strb	r2, [r3, #0]
 8020014:	e002      	b.n	802001c <SUBGRF_GetRxBufferStatus+0x44>
 8020016:	7b3a      	ldrb	r2, [r7, #12]
 8020018:	687b      	ldr	r3, [r7, #4]
 802001a:	701a      	strb	r2, [r3, #0]
 802001c:	7b7a      	ldrb	r2, [r7, #13]
 802001e:	683b      	ldr	r3, [r7, #0]
 8020020:	701a      	strb	r2, [r3, #0]
 8020022:	bf00      	nop
 8020024:	3710      	adds	r7, #16
 8020026:	46bd      	mov	sp, r7
 8020028:	bd80      	pop	{r7, pc}
 802002a:	bf00      	nop
 802002c:	20001e98 	.word	0x20001e98
 8020030:	2000194a 	.word	0x2000194a

08020034 <SUBGRF_GetPacketStatus>:
 8020034:	b580      	push	{r7, lr}
 8020036:	b084      	sub	sp, #16
 8020038:	af00      	add	r7, sp, #0
 802003a:	6078      	str	r0, [r7, #4]
 802003c:	f107 020c 	add.w	r2, r7, #12
 8020040:	2303      	movs	r3, #3
 8020042:	2114      	movs	r1, #20
 8020044:	4823      	ldr	r0, [pc, #140]	; (80200d4 <SUBGRF_GetPacketStatus+0xa0>)
 8020046:	f7ed fa9c 	bl	800d582 <HAL_SUBGHZ_ExecGetCmd>
 802004a:	f7ff fdb3 	bl	801fbb4 <SUBGRF_GetPacketType>
 802004e:	4603      	mov	r3, r0
 8020050:	461a      	mov	r2, r3
 8020052:	687b      	ldr	r3, [r7, #4]
 8020054:	701a      	strb	r2, [r3, #0]
 8020056:	687b      	ldr	r3, [r7, #4]
 8020058:	781b      	ldrb	r3, [r3, #0]
 802005a:	2b00      	cmp	r3, #0
 802005c:	d002      	beq.n	8020064 <SUBGRF_GetPacketStatus+0x30>
 802005e:	2b01      	cmp	r3, #1
 8020060:	d013      	beq.n	802008a <SUBGRF_GetPacketStatus+0x56>
 8020062:	e02a      	b.n	80200ba <SUBGRF_GetPacketStatus+0x86>
 8020064:	7b3a      	ldrb	r2, [r7, #12]
 8020066:	687b      	ldr	r3, [r7, #4]
 8020068:	711a      	strb	r2, [r3, #4]
 802006a:	7b7b      	ldrb	r3, [r7, #13]
 802006c:	425b      	negs	r3, r3
 802006e:	105b      	asrs	r3, r3, #1
 8020070:	b25a      	sxtb	r2, r3
 8020072:	687b      	ldr	r3, [r7, #4]
 8020074:	719a      	strb	r2, [r3, #6]
 8020076:	7bbb      	ldrb	r3, [r7, #14]
 8020078:	425b      	negs	r3, r3
 802007a:	105b      	asrs	r3, r3, #1
 802007c:	b25a      	sxtb	r2, r3
 802007e:	687b      	ldr	r3, [r7, #4]
 8020080:	715a      	strb	r2, [r3, #5]
 8020082:	687b      	ldr	r3, [r7, #4]
 8020084:	2200      	movs	r2, #0
 8020086:	609a      	str	r2, [r3, #8]
 8020088:	e020      	b.n	80200cc <SUBGRF_GetPacketStatus+0x98>
 802008a:	7b3b      	ldrb	r3, [r7, #12]
 802008c:	425b      	negs	r3, r3
 802008e:	105b      	asrs	r3, r3, #1
 8020090:	b25a      	sxtb	r2, r3
 8020092:	687b      	ldr	r3, [r7, #4]
 8020094:	731a      	strb	r2, [r3, #12]
 8020096:	7b7b      	ldrb	r3, [r7, #13]
 8020098:	b25b      	sxtb	r3, r3
 802009a:	3302      	adds	r3, #2
 802009c:	109b      	asrs	r3, r3, #2
 802009e:	b25a      	sxtb	r2, r3
 80200a0:	687b      	ldr	r3, [r7, #4]
 80200a2:	735a      	strb	r2, [r3, #13]
 80200a4:	7bbb      	ldrb	r3, [r7, #14]
 80200a6:	425b      	negs	r3, r3
 80200a8:	105b      	asrs	r3, r3, #1
 80200aa:	b25a      	sxtb	r2, r3
 80200ac:	687b      	ldr	r3, [r7, #4]
 80200ae:	739a      	strb	r2, [r3, #14]
 80200b0:	4b09      	ldr	r3, [pc, #36]	; (80200d8 <SUBGRF_GetPacketStatus+0xa4>)
 80200b2:	681a      	ldr	r2, [r3, #0]
 80200b4:	687b      	ldr	r3, [r7, #4]
 80200b6:	611a      	str	r2, [r3, #16]
 80200b8:	e008      	b.n	80200cc <SUBGRF_GetPacketStatus+0x98>
 80200ba:	2214      	movs	r2, #20
 80200bc:	2100      	movs	r1, #0
 80200be:	6878      	ldr	r0, [r7, #4]
 80200c0:	f000 fa63 	bl	802058a <UTIL_MEM_set_8>
 80200c4:	687b      	ldr	r3, [r7, #4]
 80200c6:	220f      	movs	r2, #15
 80200c8:	701a      	strb	r2, [r3, #0]
 80200ca:	bf00      	nop
 80200cc:	bf00      	nop
 80200ce:	3710      	adds	r7, #16
 80200d0:	46bd      	mov	sp, r7
 80200d2:	bd80      	pop	{r7, pc}
 80200d4:	20001e98 	.word	0x20001e98
 80200d8:	2000194c 	.word	0x2000194c

080200dc <SUBGRF_WriteRegister>:
 80200dc:	b580      	push	{r7, lr}
 80200de:	b082      	sub	sp, #8
 80200e0:	af00      	add	r7, sp, #0
 80200e2:	4603      	mov	r3, r0
 80200e4:	460a      	mov	r2, r1
 80200e6:	80fb      	strh	r3, [r7, #6]
 80200e8:	4613      	mov	r3, r2
 80200ea:	717b      	strb	r3, [r7, #5]
 80200ec:	1d7a      	adds	r2, r7, #5
 80200ee:	88f9      	ldrh	r1, [r7, #6]
 80200f0:	2301      	movs	r3, #1
 80200f2:	4803      	ldr	r0, [pc, #12]	; (8020100 <SUBGRF_WriteRegister+0x24>)
 80200f4:	f7ed f926 	bl	800d344 <HAL_SUBGHZ_WriteRegisters>
 80200f8:	bf00      	nop
 80200fa:	3708      	adds	r7, #8
 80200fc:	46bd      	mov	sp, r7
 80200fe:	bd80      	pop	{r7, pc}
 8020100:	20001e98 	.word	0x20001e98

08020104 <SUBGRF_ReadRegister>:
 8020104:	b580      	push	{r7, lr}
 8020106:	b084      	sub	sp, #16
 8020108:	af00      	add	r7, sp, #0
 802010a:	4603      	mov	r3, r0
 802010c:	80fb      	strh	r3, [r7, #6]
 802010e:	f107 020f 	add.w	r2, r7, #15
 8020112:	88f9      	ldrh	r1, [r7, #6]
 8020114:	2301      	movs	r3, #1
 8020116:	4804      	ldr	r0, [pc, #16]	; (8020128 <SUBGRF_ReadRegister+0x24>)
 8020118:	f7ed f973 	bl	800d402 <HAL_SUBGHZ_ReadRegisters>
 802011c:	7bfb      	ldrb	r3, [r7, #15]
 802011e:	4618      	mov	r0, r3
 8020120:	3710      	adds	r7, #16
 8020122:	46bd      	mov	sp, r7
 8020124:	bd80      	pop	{r7, pc}
 8020126:	bf00      	nop
 8020128:	20001e98 	.word	0x20001e98

0802012c <SUBGRF_WriteRegisters>:
 802012c:	b580      	push	{r7, lr}
 802012e:	b082      	sub	sp, #8
 8020130:	af00      	add	r7, sp, #0
 8020132:	4603      	mov	r3, r0
 8020134:	6039      	str	r1, [r7, #0]
 8020136:	80fb      	strh	r3, [r7, #6]
 8020138:	4613      	mov	r3, r2
 802013a:	80bb      	strh	r3, [r7, #4]
 802013c:	88bb      	ldrh	r3, [r7, #4]
 802013e:	88f9      	ldrh	r1, [r7, #6]
 8020140:	683a      	ldr	r2, [r7, #0]
 8020142:	4803      	ldr	r0, [pc, #12]	; (8020150 <SUBGRF_WriteRegisters+0x24>)
 8020144:	f7ed f8fe 	bl	800d344 <HAL_SUBGHZ_WriteRegisters>
 8020148:	bf00      	nop
 802014a:	3708      	adds	r7, #8
 802014c:	46bd      	mov	sp, r7
 802014e:	bd80      	pop	{r7, pc}
 8020150:	20001e98 	.word	0x20001e98

08020154 <SUBGRF_ReadRegisters>:
 8020154:	b580      	push	{r7, lr}
 8020156:	b082      	sub	sp, #8
 8020158:	af00      	add	r7, sp, #0
 802015a:	4603      	mov	r3, r0
 802015c:	6039      	str	r1, [r7, #0]
 802015e:	80fb      	strh	r3, [r7, #6]
 8020160:	4613      	mov	r3, r2
 8020162:	80bb      	strh	r3, [r7, #4]
 8020164:	88bb      	ldrh	r3, [r7, #4]
 8020166:	88f9      	ldrh	r1, [r7, #6]
 8020168:	683a      	ldr	r2, [r7, #0]
 802016a:	4803      	ldr	r0, [pc, #12]	; (8020178 <SUBGRF_ReadRegisters+0x24>)
 802016c:	f7ed f949 	bl	800d402 <HAL_SUBGHZ_ReadRegisters>
 8020170:	bf00      	nop
 8020172:	3708      	adds	r7, #8
 8020174:	46bd      	mov	sp, r7
 8020176:	bd80      	pop	{r7, pc}
 8020178:	20001e98 	.word	0x20001e98

0802017c <SUBGRF_WriteBuffer>:
 802017c:	b580      	push	{r7, lr}
 802017e:	b082      	sub	sp, #8
 8020180:	af00      	add	r7, sp, #0
 8020182:	4603      	mov	r3, r0
 8020184:	6039      	str	r1, [r7, #0]
 8020186:	71fb      	strb	r3, [r7, #7]
 8020188:	4613      	mov	r3, r2
 802018a:	71bb      	strb	r3, [r7, #6]
 802018c:	79bb      	ldrb	r3, [r7, #6]
 802018e:	b29b      	uxth	r3, r3
 8020190:	79f9      	ldrb	r1, [r7, #7]
 8020192:	683a      	ldr	r2, [r7, #0]
 8020194:	4803      	ldr	r0, [pc, #12]	; (80201a4 <SUBGRF_WriteBuffer+0x28>)
 8020196:	f7ed fa48 	bl	800d62a <HAL_SUBGHZ_WriteBuffer>
 802019a:	bf00      	nop
 802019c:	3708      	adds	r7, #8
 802019e:	46bd      	mov	sp, r7
 80201a0:	bd80      	pop	{r7, pc}
 80201a2:	bf00      	nop
 80201a4:	20001e98 	.word	0x20001e98

080201a8 <SUBGRF_ReadBuffer>:
 80201a8:	b580      	push	{r7, lr}
 80201aa:	b082      	sub	sp, #8
 80201ac:	af00      	add	r7, sp, #0
 80201ae:	4603      	mov	r3, r0
 80201b0:	6039      	str	r1, [r7, #0]
 80201b2:	71fb      	strb	r3, [r7, #7]
 80201b4:	4613      	mov	r3, r2
 80201b6:	71bb      	strb	r3, [r7, #6]
 80201b8:	79bb      	ldrb	r3, [r7, #6]
 80201ba:	b29b      	uxth	r3, r3
 80201bc:	79f9      	ldrb	r1, [r7, #7]
 80201be:	683a      	ldr	r2, [r7, #0]
 80201c0:	4803      	ldr	r0, [pc, #12]	; (80201d0 <SUBGRF_ReadBuffer+0x28>)
 80201c2:	f7ed fa85 	bl	800d6d0 <HAL_SUBGHZ_ReadBuffer>
 80201c6:	bf00      	nop
 80201c8:	3708      	adds	r7, #8
 80201ca:	46bd      	mov	sp, r7
 80201cc:	bd80      	pop	{r7, pc}
 80201ce:	bf00      	nop
 80201d0:	20001e98 	.word	0x20001e98

080201d4 <SUBGRF_SetSwitch>:
 80201d4:	b580      	push	{r7, lr}
 80201d6:	b084      	sub	sp, #16
 80201d8:	af00      	add	r7, sp, #0
 80201da:	4603      	mov	r3, r0
 80201dc:	460a      	mov	r2, r1
 80201de:	71fb      	strb	r3, [r7, #7]
 80201e0:	4613      	mov	r3, r2
 80201e2:	71bb      	strb	r3, [r7, #6]
 80201e4:	2301      	movs	r3, #1
 80201e6:	73fb      	strb	r3, [r7, #15]
 80201e8:	79bb      	ldrb	r3, [r7, #6]
 80201ea:	2b01      	cmp	r3, #1
 80201ec:	d10d      	bne.n	802020a <SUBGRF_SetSwitch+0x36>
 80201ee:	79fb      	ldrb	r3, [r7, #7]
 80201f0:	2b01      	cmp	r3, #1
 80201f2:	d104      	bne.n	80201fe <SUBGRF_SetSwitch+0x2a>
 80201f4:	2302      	movs	r3, #2
 80201f6:	73fb      	strb	r3, [r7, #15]
 80201f8:	2004      	movs	r0, #4
 80201fa:	f000 f8df 	bl	80203bc <Radio_SMPS_Set>
 80201fe:	79fb      	ldrb	r3, [r7, #7]
 8020200:	2b02      	cmp	r3, #2
 8020202:	d107      	bne.n	8020214 <SUBGRF_SetSwitch+0x40>
 8020204:	2303      	movs	r3, #3
 8020206:	73fb      	strb	r3, [r7, #15]
 8020208:	e004      	b.n	8020214 <SUBGRF_SetSwitch+0x40>
 802020a:	79bb      	ldrb	r3, [r7, #6]
 802020c:	2b00      	cmp	r3, #0
 802020e:	d101      	bne.n	8020214 <SUBGRF_SetSwitch+0x40>
 8020210:	2301      	movs	r3, #1
 8020212:	73fb      	strb	r3, [r7, #15]
 8020214:	7bfb      	ldrb	r3, [r7, #15]
 8020216:	4618      	mov	r0, r3
 8020218:	f7f0 f816 	bl	8010248 <RBI_ConfigRFSwitch>
 802021c:	bf00      	nop
 802021e:	3710      	adds	r7, #16
 8020220:	46bd      	mov	sp, r7
 8020222:	bd80      	pop	{r7, pc}

08020224 <SUBGRF_SetRfTxPower>:
 8020224:	b580      	push	{r7, lr}
 8020226:	b084      	sub	sp, #16
 8020228:	af00      	add	r7, sp, #0
 802022a:	4603      	mov	r3, r0
 802022c:	71fb      	strb	r3, [r7, #7]
 802022e:	2301      	movs	r3, #1
 8020230:	73fb      	strb	r3, [r7, #15]
 8020232:	f7f0 f865 	bl	8010300 <RBI_GetTxConfig>
 8020236:	60b8      	str	r0, [r7, #8]
 8020238:	68bb      	ldr	r3, [r7, #8]
 802023a:	2b02      	cmp	r3, #2
 802023c:	d016      	beq.n	802026c <SUBGRF_SetRfTxPower+0x48>
 802023e:	68bb      	ldr	r3, [r7, #8]
 8020240:	2b02      	cmp	r3, #2
 8020242:	dc16      	bgt.n	8020272 <SUBGRF_SetRfTxPower+0x4e>
 8020244:	68bb      	ldr	r3, [r7, #8]
 8020246:	2b00      	cmp	r3, #0
 8020248:	d003      	beq.n	8020252 <SUBGRF_SetRfTxPower+0x2e>
 802024a:	68bb      	ldr	r3, [r7, #8]
 802024c:	2b01      	cmp	r3, #1
 802024e:	d00a      	beq.n	8020266 <SUBGRF_SetRfTxPower+0x42>
 8020250:	e00f      	b.n	8020272 <SUBGRF_SetRfTxPower+0x4e>
 8020252:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8020256:	2b0f      	cmp	r3, #15
 8020258:	dd02      	ble.n	8020260 <SUBGRF_SetRfTxPower+0x3c>
 802025a:	2302      	movs	r3, #2
 802025c:	73fb      	strb	r3, [r7, #15]
 802025e:	e009      	b.n	8020274 <SUBGRF_SetRfTxPower+0x50>
 8020260:	2301      	movs	r3, #1
 8020262:	73fb      	strb	r3, [r7, #15]
 8020264:	e006      	b.n	8020274 <SUBGRF_SetRfTxPower+0x50>
 8020266:	2301      	movs	r3, #1
 8020268:	73fb      	strb	r3, [r7, #15]
 802026a:	e003      	b.n	8020274 <SUBGRF_SetRfTxPower+0x50>
 802026c:	2302      	movs	r3, #2
 802026e:	73fb      	strb	r3, [r7, #15]
 8020270:	e000      	b.n	8020274 <SUBGRF_SetRfTxPower+0x50>
 8020272:	bf00      	nop
 8020274:	f997 1007 	ldrsb.w	r1, [r7, #7]
 8020278:	7bfb      	ldrb	r3, [r7, #15]
 802027a:	2202      	movs	r2, #2
 802027c:	4618      	mov	r0, r3
 802027e:	f7ff fca3 	bl	801fbc8 <SUBGRF_SetTxParams>
 8020282:	7bfb      	ldrb	r3, [r7, #15]
 8020284:	4618      	mov	r0, r3
 8020286:	3710      	adds	r7, #16
 8020288:	46bd      	mov	sp, r7
 802028a:	bd80      	pop	{r7, pc}

0802028c <SUBGRF_GetRadioWakeUpTime>:
 802028c:	b580      	push	{r7, lr}
 802028e:	af00      	add	r7, sp, #0
 8020290:	f7f0 f83d 	bl	801030e <RBI_GetWakeUpTime>
 8020294:	4603      	mov	r3, r0
 8020296:	4618      	mov	r0, r3
 8020298:	bd80      	pop	{r7, pc}
	...

0802029c <HAL_SUBGHZ_TxCpltCallback>:
 802029c:	b580      	push	{r7, lr}
 802029e:	b082      	sub	sp, #8
 80202a0:	af00      	add	r7, sp, #0
 80202a2:	6078      	str	r0, [r7, #4]
 80202a4:	4b03      	ldr	r3, [pc, #12]	; (80202b4 <HAL_SUBGHZ_TxCpltCallback+0x18>)
 80202a6:	681b      	ldr	r3, [r3, #0]
 80202a8:	2001      	movs	r0, #1
 80202aa:	4798      	blx	r3
 80202ac:	bf00      	nop
 80202ae:	3708      	adds	r7, #8
 80202b0:	46bd      	mov	sp, r7
 80202b2:	bd80      	pop	{r7, pc}
 80202b4:	20001954 	.word	0x20001954

080202b8 <HAL_SUBGHZ_RxCpltCallback>:
 80202b8:	b580      	push	{r7, lr}
 80202ba:	b082      	sub	sp, #8
 80202bc:	af00      	add	r7, sp, #0
 80202be:	6078      	str	r0, [r7, #4]
 80202c0:	4b03      	ldr	r3, [pc, #12]	; (80202d0 <HAL_SUBGHZ_RxCpltCallback+0x18>)
 80202c2:	681b      	ldr	r3, [r3, #0]
 80202c4:	2002      	movs	r0, #2
 80202c6:	4798      	blx	r3
 80202c8:	bf00      	nop
 80202ca:	3708      	adds	r7, #8
 80202cc:	46bd      	mov	sp, r7
 80202ce:	bd80      	pop	{r7, pc}
 80202d0:	20001954 	.word	0x20001954

080202d4 <HAL_SUBGHZ_CRCErrorCallback>:
 80202d4:	b580      	push	{r7, lr}
 80202d6:	b082      	sub	sp, #8
 80202d8:	af00      	add	r7, sp, #0
 80202da:	6078      	str	r0, [r7, #4]
 80202dc:	4b03      	ldr	r3, [pc, #12]	; (80202ec <HAL_SUBGHZ_CRCErrorCallback+0x18>)
 80202de:	681b      	ldr	r3, [r3, #0]
 80202e0:	2040      	movs	r0, #64	; 0x40
 80202e2:	4798      	blx	r3
 80202e4:	bf00      	nop
 80202e6:	3708      	adds	r7, #8
 80202e8:	46bd      	mov	sp, r7
 80202ea:	bd80      	pop	{r7, pc}
 80202ec:	20001954 	.word	0x20001954

080202f0 <HAL_SUBGHZ_CADStatusCallback>:
 80202f0:	b580      	push	{r7, lr}
 80202f2:	b082      	sub	sp, #8
 80202f4:	af00      	add	r7, sp, #0
 80202f6:	6078      	str	r0, [r7, #4]
 80202f8:	460b      	mov	r3, r1
 80202fa:	70fb      	strb	r3, [r7, #3]
 80202fc:	78fb      	ldrb	r3, [r7, #3]
 80202fe:	2b00      	cmp	r3, #0
 8020300:	d002      	beq.n	8020308 <HAL_SUBGHZ_CADStatusCallback+0x18>
 8020302:	2b01      	cmp	r3, #1
 8020304:	d005      	beq.n	8020312 <HAL_SUBGHZ_CADStatusCallback+0x22>
 8020306:	e00a      	b.n	802031e <HAL_SUBGHZ_CADStatusCallback+0x2e>
 8020308:	4b07      	ldr	r3, [pc, #28]	; (8020328 <HAL_SUBGHZ_CADStatusCallback+0x38>)
 802030a:	681b      	ldr	r3, [r3, #0]
 802030c:	2080      	movs	r0, #128	; 0x80
 802030e:	4798      	blx	r3
 8020310:	e005      	b.n	802031e <HAL_SUBGHZ_CADStatusCallback+0x2e>
 8020312:	4b05      	ldr	r3, [pc, #20]	; (8020328 <HAL_SUBGHZ_CADStatusCallback+0x38>)
 8020314:	681b      	ldr	r3, [r3, #0]
 8020316:	f44f 7080 	mov.w	r0, #256	; 0x100
 802031a:	4798      	blx	r3
 802031c:	bf00      	nop
 802031e:	bf00      	nop
 8020320:	3708      	adds	r7, #8
 8020322:	46bd      	mov	sp, r7
 8020324:	bd80      	pop	{r7, pc}
 8020326:	bf00      	nop
 8020328:	20001954 	.word	0x20001954

0802032c <HAL_SUBGHZ_RxTxTimeoutCallback>:
 802032c:	b580      	push	{r7, lr}
 802032e:	b082      	sub	sp, #8
 8020330:	af00      	add	r7, sp, #0
 8020332:	6078      	str	r0, [r7, #4]
 8020334:	4b04      	ldr	r3, [pc, #16]	; (8020348 <HAL_SUBGHZ_RxTxTimeoutCallback+0x1c>)
 8020336:	681b      	ldr	r3, [r3, #0]
 8020338:	f44f 7000 	mov.w	r0, #512	; 0x200
 802033c:	4798      	blx	r3
 802033e:	bf00      	nop
 8020340:	3708      	adds	r7, #8
 8020342:	46bd      	mov	sp, r7
 8020344:	bd80      	pop	{r7, pc}
 8020346:	bf00      	nop
 8020348:	20001954 	.word	0x20001954

0802034c <HAL_SUBGHZ_HeaderErrorCallback>:
 802034c:	b580      	push	{r7, lr}
 802034e:	b082      	sub	sp, #8
 8020350:	af00      	add	r7, sp, #0
 8020352:	6078      	str	r0, [r7, #4]
 8020354:	4b03      	ldr	r3, [pc, #12]	; (8020364 <HAL_SUBGHZ_HeaderErrorCallback+0x18>)
 8020356:	681b      	ldr	r3, [r3, #0]
 8020358:	2020      	movs	r0, #32
 802035a:	4798      	blx	r3
 802035c:	bf00      	nop
 802035e:	3708      	adds	r7, #8
 8020360:	46bd      	mov	sp, r7
 8020362:	bd80      	pop	{r7, pc}
 8020364:	20001954 	.word	0x20001954

08020368 <HAL_SUBGHZ_PreambleDetectedCallback>:
 8020368:	b580      	push	{r7, lr}
 802036a:	b082      	sub	sp, #8
 802036c:	af00      	add	r7, sp, #0
 802036e:	6078      	str	r0, [r7, #4]
 8020370:	4b03      	ldr	r3, [pc, #12]	; (8020380 <HAL_SUBGHZ_PreambleDetectedCallback+0x18>)
 8020372:	681b      	ldr	r3, [r3, #0]
 8020374:	2004      	movs	r0, #4
 8020376:	4798      	blx	r3
 8020378:	bf00      	nop
 802037a:	3708      	adds	r7, #8
 802037c:	46bd      	mov	sp, r7
 802037e:	bd80      	pop	{r7, pc}
 8020380:	20001954 	.word	0x20001954

08020384 <HAL_SUBGHZ_SyncWordValidCallback>:
 8020384:	b580      	push	{r7, lr}
 8020386:	b082      	sub	sp, #8
 8020388:	af00      	add	r7, sp, #0
 802038a:	6078      	str	r0, [r7, #4]
 802038c:	4b03      	ldr	r3, [pc, #12]	; (802039c <HAL_SUBGHZ_SyncWordValidCallback+0x18>)
 802038e:	681b      	ldr	r3, [r3, #0]
 8020390:	2008      	movs	r0, #8
 8020392:	4798      	blx	r3
 8020394:	bf00      	nop
 8020396:	3708      	adds	r7, #8
 8020398:	46bd      	mov	sp, r7
 802039a:	bd80      	pop	{r7, pc}
 802039c:	20001954 	.word	0x20001954

080203a0 <HAL_SUBGHZ_HeaderValidCallback>:
 80203a0:	b580      	push	{r7, lr}
 80203a2:	b082      	sub	sp, #8
 80203a4:	af00      	add	r7, sp, #0
 80203a6:	6078      	str	r0, [r7, #4]
 80203a8:	4b03      	ldr	r3, [pc, #12]	; (80203b8 <HAL_SUBGHZ_HeaderValidCallback+0x18>)
 80203aa:	681b      	ldr	r3, [r3, #0]
 80203ac:	2010      	movs	r0, #16
 80203ae:	4798      	blx	r3
 80203b0:	bf00      	nop
 80203b2:	3708      	adds	r7, #8
 80203b4:	46bd      	mov	sp, r7
 80203b6:	bd80      	pop	{r7, pc}
 80203b8:	20001954 	.word	0x20001954

080203bc <Radio_SMPS_Set>:
 80203bc:	b580      	push	{r7, lr}
 80203be:	b084      	sub	sp, #16
 80203c0:	af00      	add	r7, sp, #0
 80203c2:	4603      	mov	r3, r0
 80203c4:	71fb      	strb	r3, [r7, #7]
 80203c6:	f7ef ffb0 	bl	801032a <RBI_IsDCDC>
 80203ca:	4603      	mov	r3, r0
 80203cc:	2b01      	cmp	r3, #1
 80203ce:	d112      	bne.n	80203f6 <Radio_SMPS_Set+0x3a>
 80203d0:	f640 1023 	movw	r0, #2339	; 0x923
 80203d4:	f7ff fe96 	bl	8020104 <SUBGRF_ReadRegister>
 80203d8:	4603      	mov	r3, r0
 80203da:	73fb      	strb	r3, [r7, #15]
 80203dc:	7bfb      	ldrb	r3, [r7, #15]
 80203de:	f023 0306 	bic.w	r3, r3, #6
 80203e2:	73fb      	strb	r3, [r7, #15]
 80203e4:	7bfa      	ldrb	r2, [r7, #15]
 80203e6:	79fb      	ldrb	r3, [r7, #7]
 80203e8:	4313      	orrs	r3, r2
 80203ea:	b2db      	uxtb	r3, r3
 80203ec:	4619      	mov	r1, r3
 80203ee:	f640 1023 	movw	r0, #2339	; 0x923
 80203f2:	f7ff fe73 	bl	80200dc <SUBGRF_WriteRegister>
 80203f6:	bf00      	nop
 80203f8:	3710      	adds	r7, #16
 80203fa:	46bd      	mov	sp, r7
 80203fc:	bd80      	pop	{r7, pc}
	...

08020400 <UTIL_LPM_Init>:
 8020400:	b480      	push	{r7}
 8020402:	af00      	add	r7, sp, #0
 8020404:	4b04      	ldr	r3, [pc, #16]	; (8020418 <UTIL_LPM_Init+0x18>)
 8020406:	2200      	movs	r2, #0
 8020408:	601a      	str	r2, [r3, #0]
 802040a:	4b04      	ldr	r3, [pc, #16]	; (802041c <UTIL_LPM_Init+0x1c>)
 802040c:	2200      	movs	r2, #0
 802040e:	601a      	str	r2, [r3, #0]
 8020410:	bf00      	nop
 8020412:	46bd      	mov	sp, r7
 8020414:	bc80      	pop	{r7}
 8020416:	4770      	bx	lr
 8020418:	20001958 	.word	0x20001958
 802041c:	2000195c 	.word	0x2000195c

08020420 <UTIL_LPM_SetStopMode>:
 8020420:	b480      	push	{r7}
 8020422:	b087      	sub	sp, #28
 8020424:	af00      	add	r7, sp, #0
 8020426:	6078      	str	r0, [r7, #4]
 8020428:	460b      	mov	r3, r1
 802042a:	70fb      	strb	r3, [r7, #3]
 802042c:	f3ef 8310 	mrs	r3, PRIMASK
 8020430:	613b      	str	r3, [r7, #16]
 8020432:	693b      	ldr	r3, [r7, #16]
 8020434:	617b      	str	r3, [r7, #20]
 8020436:	b672      	cpsid	i
 8020438:	bf00      	nop
 802043a:	78fb      	ldrb	r3, [r7, #3]
 802043c:	2b00      	cmp	r3, #0
 802043e:	d008      	beq.n	8020452 <UTIL_LPM_SetStopMode+0x32>
 8020440:	2b01      	cmp	r3, #1
 8020442:	d10e      	bne.n	8020462 <UTIL_LPM_SetStopMode+0x42>
 8020444:	4b0d      	ldr	r3, [pc, #52]	; (802047c <UTIL_LPM_SetStopMode+0x5c>)
 8020446:	681a      	ldr	r2, [r3, #0]
 8020448:	687b      	ldr	r3, [r7, #4]
 802044a:	4313      	orrs	r3, r2
 802044c:	4a0b      	ldr	r2, [pc, #44]	; (802047c <UTIL_LPM_SetStopMode+0x5c>)
 802044e:	6013      	str	r3, [r2, #0]
 8020450:	e008      	b.n	8020464 <UTIL_LPM_SetStopMode+0x44>
 8020452:	687b      	ldr	r3, [r7, #4]
 8020454:	43da      	mvns	r2, r3
 8020456:	4b09      	ldr	r3, [pc, #36]	; (802047c <UTIL_LPM_SetStopMode+0x5c>)
 8020458:	681b      	ldr	r3, [r3, #0]
 802045a:	4013      	ands	r3, r2
 802045c:	4a07      	ldr	r2, [pc, #28]	; (802047c <UTIL_LPM_SetStopMode+0x5c>)
 802045e:	6013      	str	r3, [r2, #0]
 8020460:	e000      	b.n	8020464 <UTIL_LPM_SetStopMode+0x44>
 8020462:	bf00      	nop
 8020464:	697b      	ldr	r3, [r7, #20]
 8020466:	60fb      	str	r3, [r7, #12]
 8020468:	68fb      	ldr	r3, [r7, #12]
 802046a:	f383 8810 	msr	PRIMASK, r3
 802046e:	bf00      	nop
 8020470:	bf00      	nop
 8020472:	371c      	adds	r7, #28
 8020474:	46bd      	mov	sp, r7
 8020476:	bc80      	pop	{r7}
 8020478:	4770      	bx	lr
 802047a:	bf00      	nop
 802047c:	20001958 	.word	0x20001958

08020480 <UTIL_LPM_SetOffMode>:
 8020480:	b480      	push	{r7}
 8020482:	b087      	sub	sp, #28
 8020484:	af00      	add	r7, sp, #0
 8020486:	6078      	str	r0, [r7, #4]
 8020488:	460b      	mov	r3, r1
 802048a:	70fb      	strb	r3, [r7, #3]
 802048c:	f3ef 8310 	mrs	r3, PRIMASK
 8020490:	613b      	str	r3, [r7, #16]
 8020492:	693b      	ldr	r3, [r7, #16]
 8020494:	617b      	str	r3, [r7, #20]
 8020496:	b672      	cpsid	i
 8020498:	bf00      	nop
 802049a:	78fb      	ldrb	r3, [r7, #3]
 802049c:	2b00      	cmp	r3, #0
 802049e:	d008      	beq.n	80204b2 <UTIL_LPM_SetOffMode+0x32>
 80204a0:	2b01      	cmp	r3, #1
 80204a2:	d10e      	bne.n	80204c2 <UTIL_LPM_SetOffMode+0x42>
 80204a4:	4b0d      	ldr	r3, [pc, #52]	; (80204dc <UTIL_LPM_SetOffMode+0x5c>)
 80204a6:	681a      	ldr	r2, [r3, #0]
 80204a8:	687b      	ldr	r3, [r7, #4]
 80204aa:	4313      	orrs	r3, r2
 80204ac:	4a0b      	ldr	r2, [pc, #44]	; (80204dc <UTIL_LPM_SetOffMode+0x5c>)
 80204ae:	6013      	str	r3, [r2, #0]
 80204b0:	e008      	b.n	80204c4 <UTIL_LPM_SetOffMode+0x44>
 80204b2:	687b      	ldr	r3, [r7, #4]
 80204b4:	43da      	mvns	r2, r3
 80204b6:	4b09      	ldr	r3, [pc, #36]	; (80204dc <UTIL_LPM_SetOffMode+0x5c>)
 80204b8:	681b      	ldr	r3, [r3, #0]
 80204ba:	4013      	ands	r3, r2
 80204bc:	4a07      	ldr	r2, [pc, #28]	; (80204dc <UTIL_LPM_SetOffMode+0x5c>)
 80204be:	6013      	str	r3, [r2, #0]
 80204c0:	e000      	b.n	80204c4 <UTIL_LPM_SetOffMode+0x44>
 80204c2:	bf00      	nop
 80204c4:	697b      	ldr	r3, [r7, #20]
 80204c6:	60fb      	str	r3, [r7, #12]
 80204c8:	68fb      	ldr	r3, [r7, #12]
 80204ca:	f383 8810 	msr	PRIMASK, r3
 80204ce:	bf00      	nop
 80204d0:	bf00      	nop
 80204d2:	371c      	adds	r7, #28
 80204d4:	46bd      	mov	sp, r7
 80204d6:	bc80      	pop	{r7}
 80204d8:	4770      	bx	lr
 80204da:	bf00      	nop
 80204dc:	2000195c 	.word	0x2000195c

080204e0 <UTIL_LPM_EnterLowPower>:
 80204e0:	b580      	push	{r7, lr}
 80204e2:	b084      	sub	sp, #16
 80204e4:	af00      	add	r7, sp, #0
 80204e6:	f3ef 8310 	mrs	r3, PRIMASK
 80204ea:	60bb      	str	r3, [r7, #8]
 80204ec:	68bb      	ldr	r3, [r7, #8]
 80204ee:	60fb      	str	r3, [r7, #12]
 80204f0:	b672      	cpsid	i
 80204f2:	bf00      	nop
 80204f4:	4b12      	ldr	r3, [pc, #72]	; (8020540 <UTIL_LPM_EnterLowPower+0x60>)
 80204f6:	681b      	ldr	r3, [r3, #0]
 80204f8:	2b00      	cmp	r3, #0
 80204fa:	d006      	beq.n	802050a <UTIL_LPM_EnterLowPower+0x2a>
 80204fc:	4b11      	ldr	r3, [pc, #68]	; (8020544 <UTIL_LPM_EnterLowPower+0x64>)
 80204fe:	681b      	ldr	r3, [r3, #0]
 8020500:	4798      	blx	r3
 8020502:	4b10      	ldr	r3, [pc, #64]	; (8020544 <UTIL_LPM_EnterLowPower+0x64>)
 8020504:	685b      	ldr	r3, [r3, #4]
 8020506:	4798      	blx	r3
 8020508:	e010      	b.n	802052c <UTIL_LPM_EnterLowPower+0x4c>
 802050a:	4b0f      	ldr	r3, [pc, #60]	; (8020548 <UTIL_LPM_EnterLowPower+0x68>)
 802050c:	681b      	ldr	r3, [r3, #0]
 802050e:	2b00      	cmp	r3, #0
 8020510:	d006      	beq.n	8020520 <UTIL_LPM_EnterLowPower+0x40>
 8020512:	4b0c      	ldr	r3, [pc, #48]	; (8020544 <UTIL_LPM_EnterLowPower+0x64>)
 8020514:	689b      	ldr	r3, [r3, #8]
 8020516:	4798      	blx	r3
 8020518:	4b0a      	ldr	r3, [pc, #40]	; (8020544 <UTIL_LPM_EnterLowPower+0x64>)
 802051a:	68db      	ldr	r3, [r3, #12]
 802051c:	4798      	blx	r3
 802051e:	e005      	b.n	802052c <UTIL_LPM_EnterLowPower+0x4c>
 8020520:	4b08      	ldr	r3, [pc, #32]	; (8020544 <UTIL_LPM_EnterLowPower+0x64>)
 8020522:	691b      	ldr	r3, [r3, #16]
 8020524:	4798      	blx	r3
 8020526:	4b07      	ldr	r3, [pc, #28]	; (8020544 <UTIL_LPM_EnterLowPower+0x64>)
 8020528:	695b      	ldr	r3, [r3, #20]
 802052a:	4798      	blx	r3
 802052c:	68fb      	ldr	r3, [r7, #12]
 802052e:	607b      	str	r3, [r7, #4]
 8020530:	687b      	ldr	r3, [r7, #4]
 8020532:	f383 8810 	msr	PRIMASK, r3
 8020536:	bf00      	nop
 8020538:	bf00      	nop
 802053a:	3710      	adds	r7, #16
 802053c:	46bd      	mov	sp, r7
 802053e:	bd80      	pop	{r7, pc}
 8020540:	20001958 	.word	0x20001958
 8020544:	080262a4 	.word	0x080262a4
 8020548:	2000195c 	.word	0x2000195c

0802054c <UTIL_MEM_cpy_8>:
 802054c:	b480      	push	{r7}
 802054e:	b087      	sub	sp, #28
 8020550:	af00      	add	r7, sp, #0
 8020552:	60f8      	str	r0, [r7, #12]
 8020554:	60b9      	str	r1, [r7, #8]
 8020556:	4613      	mov	r3, r2
 8020558:	80fb      	strh	r3, [r7, #6]
 802055a:	68fb      	ldr	r3, [r7, #12]
 802055c:	617b      	str	r3, [r7, #20]
 802055e:	68bb      	ldr	r3, [r7, #8]
 8020560:	613b      	str	r3, [r7, #16]
 8020562:	e007      	b.n	8020574 <UTIL_MEM_cpy_8+0x28>
 8020564:	693a      	ldr	r2, [r7, #16]
 8020566:	1c53      	adds	r3, r2, #1
 8020568:	613b      	str	r3, [r7, #16]
 802056a:	697b      	ldr	r3, [r7, #20]
 802056c:	1c59      	adds	r1, r3, #1
 802056e:	6179      	str	r1, [r7, #20]
 8020570:	7812      	ldrb	r2, [r2, #0]
 8020572:	701a      	strb	r2, [r3, #0]
 8020574:	88fb      	ldrh	r3, [r7, #6]
 8020576:	1e5a      	subs	r2, r3, #1
 8020578:	80fa      	strh	r2, [r7, #6]
 802057a:	2b00      	cmp	r3, #0
 802057c:	d1f2      	bne.n	8020564 <UTIL_MEM_cpy_8+0x18>
 802057e:	bf00      	nop
 8020580:	bf00      	nop
 8020582:	371c      	adds	r7, #28
 8020584:	46bd      	mov	sp, r7
 8020586:	bc80      	pop	{r7}
 8020588:	4770      	bx	lr

0802058a <UTIL_MEM_set_8>:
 802058a:	b480      	push	{r7}
 802058c:	b085      	sub	sp, #20
 802058e:	af00      	add	r7, sp, #0
 8020590:	6078      	str	r0, [r7, #4]
 8020592:	460b      	mov	r3, r1
 8020594:	70fb      	strb	r3, [r7, #3]
 8020596:	4613      	mov	r3, r2
 8020598:	803b      	strh	r3, [r7, #0]
 802059a:	687b      	ldr	r3, [r7, #4]
 802059c:	60fb      	str	r3, [r7, #12]
 802059e:	e004      	b.n	80205aa <UTIL_MEM_set_8+0x20>
 80205a0:	68fb      	ldr	r3, [r7, #12]
 80205a2:	1c5a      	adds	r2, r3, #1
 80205a4:	60fa      	str	r2, [r7, #12]
 80205a6:	78fa      	ldrb	r2, [r7, #3]
 80205a8:	701a      	strb	r2, [r3, #0]
 80205aa:	883b      	ldrh	r3, [r7, #0]
 80205ac:	1e5a      	subs	r2, r3, #1
 80205ae:	803a      	strh	r2, [r7, #0]
 80205b0:	2b00      	cmp	r3, #0
 80205b2:	d1f5      	bne.n	80205a0 <UTIL_MEM_set_8+0x16>
 80205b4:	bf00      	nop
 80205b6:	bf00      	nop
 80205b8:	3714      	adds	r7, #20
 80205ba:	46bd      	mov	sp, r7
 80205bc:	bc80      	pop	{r7}
 80205be:	4770      	bx	lr

080205c0 <SysTimeAdd>:
 80205c0:	b082      	sub	sp, #8
 80205c2:	b480      	push	{r7}
 80205c4:	b087      	sub	sp, #28
 80205c6:	af00      	add	r7, sp, #0
 80205c8:	60f8      	str	r0, [r7, #12]
 80205ca:	1d38      	adds	r0, r7, #4
 80205cc:	e880 0006 	stmia.w	r0, {r1, r2}
 80205d0:	627b      	str	r3, [r7, #36]	; 0x24
 80205d2:	2300      	movs	r3, #0
 80205d4:	613b      	str	r3, [r7, #16]
 80205d6:	2300      	movs	r3, #0
 80205d8:	82bb      	strh	r3, [r7, #20]
 80205da:	687a      	ldr	r2, [r7, #4]
 80205dc:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80205de:	4413      	add	r3, r2
 80205e0:	613b      	str	r3, [r7, #16]
 80205e2:	f9b7 3008 	ldrsh.w	r3, [r7, #8]
 80205e6:	b29a      	uxth	r2, r3
 80205e8:	f9b7 3028 	ldrsh.w	r3, [r7, #40]	; 0x28
 80205ec:	b29b      	uxth	r3, r3
 80205ee:	4413      	add	r3, r2
 80205f0:	b29b      	uxth	r3, r3
 80205f2:	b21b      	sxth	r3, r3
 80205f4:	82bb      	strh	r3, [r7, #20]
 80205f6:	f9b7 3014 	ldrsh.w	r3, [r7, #20]
 80205fa:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 80205fe:	db0a      	blt.n	8020616 <SysTimeAdd+0x56>
 8020600:	693b      	ldr	r3, [r7, #16]
 8020602:	3301      	adds	r3, #1
 8020604:	613b      	str	r3, [r7, #16]
 8020606:	f9b7 3014 	ldrsh.w	r3, [r7, #20]
 802060a:	b29b      	uxth	r3, r3
 802060c:	f5a3 737a 	sub.w	r3, r3, #1000	; 0x3e8
 8020610:	b29b      	uxth	r3, r3
 8020612:	b21b      	sxth	r3, r3
 8020614:	82bb      	strh	r3, [r7, #20]
 8020616:	68fb      	ldr	r3, [r7, #12]
 8020618:	461a      	mov	r2, r3
 802061a:	f107 0310 	add.w	r3, r7, #16
 802061e:	e893 0003 	ldmia.w	r3, {r0, r1}
 8020622:	e882 0003 	stmia.w	r2, {r0, r1}
 8020626:	68f8      	ldr	r0, [r7, #12]
 8020628:	371c      	adds	r7, #28
 802062a:	46bd      	mov	sp, r7
 802062c:	bc80      	pop	{r7}
 802062e:	b002      	add	sp, #8
 8020630:	4770      	bx	lr

08020632 <SysTimeSub>:
 8020632:	b082      	sub	sp, #8
 8020634:	b480      	push	{r7}
 8020636:	b087      	sub	sp, #28
 8020638:	af00      	add	r7, sp, #0
 802063a:	60f8      	str	r0, [r7, #12]
 802063c:	1d38      	adds	r0, r7, #4
 802063e:	e880 0006 	stmia.w	r0, {r1, r2}
 8020642:	627b      	str	r3, [r7, #36]	; 0x24
 8020644:	2300      	movs	r3, #0
 8020646:	613b      	str	r3, [r7, #16]
 8020648:	2300      	movs	r3, #0
 802064a:	82bb      	strh	r3, [r7, #20]
 802064c:	687a      	ldr	r2, [r7, #4]
 802064e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8020650:	1ad3      	subs	r3, r2, r3
 8020652:	613b      	str	r3, [r7, #16]
 8020654:	f9b7 3008 	ldrsh.w	r3, [r7, #8]
 8020658:	b29a      	uxth	r2, r3
 802065a:	f9b7 3028 	ldrsh.w	r3, [r7, #40]	; 0x28
 802065e:	b29b      	uxth	r3, r3
 8020660:	1ad3      	subs	r3, r2, r3
 8020662:	b29b      	uxth	r3, r3
 8020664:	b21b      	sxth	r3, r3
 8020666:	82bb      	strh	r3, [r7, #20]
 8020668:	f9b7 3014 	ldrsh.w	r3, [r7, #20]
 802066c:	2b00      	cmp	r3, #0
 802066e:	da0a      	bge.n	8020686 <SysTimeSub+0x54>
 8020670:	693b      	ldr	r3, [r7, #16]
 8020672:	3b01      	subs	r3, #1
 8020674:	613b      	str	r3, [r7, #16]
 8020676:	f9b7 3014 	ldrsh.w	r3, [r7, #20]
 802067a:	b29b      	uxth	r3, r3
 802067c:	f503 737a 	add.w	r3, r3, #1000	; 0x3e8
 8020680:	b29b      	uxth	r3, r3
 8020682:	b21b      	sxth	r3, r3
 8020684:	82bb      	strh	r3, [r7, #20]
 8020686:	68fb      	ldr	r3, [r7, #12]
 8020688:	461a      	mov	r2, r3
 802068a:	f107 0310 	add.w	r3, r7, #16
 802068e:	e893 0003 	ldmia.w	r3, {r0, r1}
 8020692:	e882 0003 	stmia.w	r2, {r0, r1}
 8020696:	68f8      	ldr	r0, [r7, #12]
 8020698:	371c      	adds	r7, #28
 802069a:	46bd      	mov	sp, r7
 802069c:	bc80      	pop	{r7}
 802069e:	b002      	add	sp, #8
 80206a0:	4770      	bx	lr
	...

080206a4 <SysTimeSet>:
 80206a4:	b580      	push	{r7, lr}
 80206a6:	b088      	sub	sp, #32
 80206a8:	af02      	add	r7, sp, #8
 80206aa:	463b      	mov	r3, r7
 80206ac:	e883 0003 	stmia.w	r3, {r0, r1}
 80206b0:	2300      	movs	r3, #0
 80206b2:	60bb      	str	r3, [r7, #8]
 80206b4:	2300      	movs	r3, #0
 80206b6:	81bb      	strh	r3, [r7, #12]
 80206b8:	4b10      	ldr	r3, [pc, #64]	; (80206fc <SysTimeSet+0x58>)
 80206ba:	691b      	ldr	r3, [r3, #16]
 80206bc:	f107 0208 	add.w	r2, r7, #8
 80206c0:	3204      	adds	r2, #4
 80206c2:	4610      	mov	r0, r2
 80206c4:	4798      	blx	r3
 80206c6:	4603      	mov	r3, r0
 80206c8:	60bb      	str	r3, [r7, #8]
 80206ca:	f107 0010 	add.w	r0, r7, #16
 80206ce:	68fb      	ldr	r3, [r7, #12]
 80206d0:	9300      	str	r3, [sp, #0]
 80206d2:	68bb      	ldr	r3, [r7, #8]
 80206d4:	463a      	mov	r2, r7
 80206d6:	ca06      	ldmia	r2, {r1, r2}
 80206d8:	f7ff ffab 	bl	8020632 <SysTimeSub>
 80206dc:	4b07      	ldr	r3, [pc, #28]	; (80206fc <SysTimeSet+0x58>)
 80206de:	681b      	ldr	r3, [r3, #0]
 80206e0:	693a      	ldr	r2, [r7, #16]
 80206e2:	4610      	mov	r0, r2
 80206e4:	4798      	blx	r3
 80206e6:	4b05      	ldr	r3, [pc, #20]	; (80206fc <SysTimeSet+0x58>)
 80206e8:	689b      	ldr	r3, [r3, #8]
 80206ea:	f9b7 2014 	ldrsh.w	r2, [r7, #20]
 80206ee:	4610      	mov	r0, r2
 80206f0:	4798      	blx	r3
 80206f2:	bf00      	nop
 80206f4:	3718      	adds	r7, #24
 80206f6:	46bd      	mov	sp, r7
 80206f8:	bd80      	pop	{r7, pc}
 80206fa:	bf00      	nop
 80206fc:	08026388 	.word	0x08026388

08020700 <SysTimeGet>:
 8020700:	b580      	push	{r7, lr}
 8020702:	b08a      	sub	sp, #40	; 0x28
 8020704:	af02      	add	r7, sp, #8
 8020706:	6078      	str	r0, [r7, #4]
 8020708:	2300      	movs	r3, #0
 802070a:	61bb      	str	r3, [r7, #24]
 802070c:	2300      	movs	r3, #0
 802070e:	83bb      	strh	r3, [r7, #28]
 8020710:	2300      	movs	r3, #0
 8020712:	613b      	str	r3, [r7, #16]
 8020714:	2300      	movs	r3, #0
 8020716:	82bb      	strh	r3, [r7, #20]
 8020718:	4b14      	ldr	r3, [pc, #80]	; (802076c <SysTimeGet+0x6c>)
 802071a:	691b      	ldr	r3, [r3, #16]
 802071c:	f107 0218 	add.w	r2, r7, #24
 8020720:	3204      	adds	r2, #4
 8020722:	4610      	mov	r0, r2
 8020724:	4798      	blx	r3
 8020726:	4603      	mov	r3, r0
 8020728:	61bb      	str	r3, [r7, #24]
 802072a:	4b10      	ldr	r3, [pc, #64]	; (802076c <SysTimeGet+0x6c>)
 802072c:	68db      	ldr	r3, [r3, #12]
 802072e:	4798      	blx	r3
 8020730:	4603      	mov	r3, r0
 8020732:	b21b      	sxth	r3, r3
 8020734:	81bb      	strh	r3, [r7, #12]
 8020736:	4b0d      	ldr	r3, [pc, #52]	; (802076c <SysTimeGet+0x6c>)
 8020738:	685b      	ldr	r3, [r3, #4]
 802073a:	4798      	blx	r3
 802073c:	4603      	mov	r3, r0
 802073e:	60bb      	str	r3, [r7, #8]
 8020740:	f107 0010 	add.w	r0, r7, #16
 8020744:	69fb      	ldr	r3, [r7, #28]
 8020746:	9300      	str	r3, [sp, #0]
 8020748:	69bb      	ldr	r3, [r7, #24]
 802074a:	f107 0208 	add.w	r2, r7, #8
 802074e:	ca06      	ldmia	r2, {r1, r2}
 8020750:	f7ff ff36 	bl	80205c0 <SysTimeAdd>
 8020754:	687b      	ldr	r3, [r7, #4]
 8020756:	461a      	mov	r2, r3
 8020758:	f107 0310 	add.w	r3, r7, #16
 802075c:	e893 0003 	ldmia.w	r3, {r0, r1}
 8020760:	e882 0003 	stmia.w	r2, {r0, r1}
 8020764:	6878      	ldr	r0, [r7, #4]
 8020766:	3720      	adds	r7, #32
 8020768:	46bd      	mov	sp, r7
 802076a:	bd80      	pop	{r7, pc}
 802076c:	08026388 	.word	0x08026388

08020770 <SysTimeGetMcuTime>:
 8020770:	b580      	push	{r7, lr}
 8020772:	b084      	sub	sp, #16
 8020774:	af00      	add	r7, sp, #0
 8020776:	6078      	str	r0, [r7, #4]
 8020778:	2300      	movs	r3, #0
 802077a:	60bb      	str	r3, [r7, #8]
 802077c:	2300      	movs	r3, #0
 802077e:	81bb      	strh	r3, [r7, #12]
 8020780:	4b0a      	ldr	r3, [pc, #40]	; (80207ac <SysTimeGetMcuTime+0x3c>)
 8020782:	691b      	ldr	r3, [r3, #16]
 8020784:	f107 0208 	add.w	r2, r7, #8
 8020788:	3204      	adds	r2, #4
 802078a:	4610      	mov	r0, r2
 802078c:	4798      	blx	r3
 802078e:	4603      	mov	r3, r0
 8020790:	60bb      	str	r3, [r7, #8]
 8020792:	687b      	ldr	r3, [r7, #4]
 8020794:	461a      	mov	r2, r3
 8020796:	f107 0308 	add.w	r3, r7, #8
 802079a:	e893 0003 	ldmia.w	r3, {r0, r1}
 802079e:	e882 0003 	stmia.w	r2, {r0, r1}
 80207a2:	6878      	ldr	r0, [r7, #4]
 80207a4:	3710      	adds	r7, #16
 80207a6:	46bd      	mov	sp, r7
 80207a8:	bd80      	pop	{r7, pc}
 80207aa:	bf00      	nop
 80207ac:	08026388 	.word	0x08026388

080207b0 <ee_skip_atoi>:
 80207b0:	b480      	push	{r7}
 80207b2:	b085      	sub	sp, #20
 80207b4:	af00      	add	r7, sp, #0
 80207b6:	6078      	str	r0, [r7, #4]
 80207b8:	2300      	movs	r3, #0
 80207ba:	60fb      	str	r3, [r7, #12]
 80207bc:	e00e      	b.n	80207dc <ee_skip_atoi+0x2c>
 80207be:	68fa      	ldr	r2, [r7, #12]
 80207c0:	4613      	mov	r3, r2
 80207c2:	009b      	lsls	r3, r3, #2
 80207c4:	4413      	add	r3, r2
 80207c6:	005b      	lsls	r3, r3, #1
 80207c8:	4618      	mov	r0, r3
 80207ca:	687b      	ldr	r3, [r7, #4]
 80207cc:	681b      	ldr	r3, [r3, #0]
 80207ce:	1c59      	adds	r1, r3, #1
 80207d0:	687a      	ldr	r2, [r7, #4]
 80207d2:	6011      	str	r1, [r2, #0]
 80207d4:	781b      	ldrb	r3, [r3, #0]
 80207d6:	4403      	add	r3, r0
 80207d8:	3b30      	subs	r3, #48	; 0x30
 80207da:	60fb      	str	r3, [r7, #12]
 80207dc:	687b      	ldr	r3, [r7, #4]
 80207de:	681b      	ldr	r3, [r3, #0]
 80207e0:	781b      	ldrb	r3, [r3, #0]
 80207e2:	2b2f      	cmp	r3, #47	; 0x2f
 80207e4:	d904      	bls.n	80207f0 <ee_skip_atoi+0x40>
 80207e6:	687b      	ldr	r3, [r7, #4]
 80207e8:	681b      	ldr	r3, [r3, #0]
 80207ea:	781b      	ldrb	r3, [r3, #0]
 80207ec:	2b39      	cmp	r3, #57	; 0x39
 80207ee:	d9e6      	bls.n	80207be <ee_skip_atoi+0xe>
 80207f0:	68fb      	ldr	r3, [r7, #12]
 80207f2:	4618      	mov	r0, r3
 80207f4:	3714      	adds	r7, #20
 80207f6:	46bd      	mov	sp, r7
 80207f8:	bc80      	pop	{r7}
 80207fa:	4770      	bx	lr

080207fc <ee_number>:
 80207fc:	b480      	push	{r7}
 80207fe:	b099      	sub	sp, #100	; 0x64
 8020800:	af00      	add	r7, sp, #0
 8020802:	60f8      	str	r0, [r7, #12]
 8020804:	60b9      	str	r1, [r7, #8]
 8020806:	607a      	str	r2, [r7, #4]
 8020808:	603b      	str	r3, [r7, #0]
 802080a:	4b72      	ldr	r3, [pc, #456]	; (80209d4 <ee_number+0x1d8>)
 802080c:	681b      	ldr	r3, [r3, #0]
 802080e:	65bb      	str	r3, [r7, #88]	; 0x58
 8020810:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 8020812:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8020816:	2b00      	cmp	r3, #0
 8020818:	d002      	beq.n	8020820 <ee_number+0x24>
 802081a:	4b6f      	ldr	r3, [pc, #444]	; (80209d8 <ee_number+0x1dc>)
 802081c:	681b      	ldr	r3, [r3, #0]
 802081e:	65bb      	str	r3, [r7, #88]	; 0x58
 8020820:	683b      	ldr	r3, [r7, #0]
 8020822:	2b01      	cmp	r3, #1
 8020824:	dd02      	ble.n	802082c <ee_number+0x30>
 8020826:	683b      	ldr	r3, [r7, #0]
 8020828:	2b24      	cmp	r3, #36	; 0x24
 802082a:	dd01      	ble.n	8020830 <ee_number+0x34>
 802082c:	2300      	movs	r3, #0
 802082e:	e0cc      	b.n	80209ca <ee_number+0x1ce>
 8020830:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 8020832:	f003 0301 	and.w	r3, r3, #1
 8020836:	2b00      	cmp	r3, #0
 8020838:	d001      	beq.n	802083e <ee_number+0x42>
 802083a:	2330      	movs	r3, #48	; 0x30
 802083c:	e000      	b.n	8020840 <ee_number+0x44>
 802083e:	2320      	movs	r3, #32
 8020840:	f887 3053 	strb.w	r3, [r7, #83]	; 0x53
 8020844:	2300      	movs	r3, #0
 8020846:	f887 305f 	strb.w	r3, [r7, #95]	; 0x5f
 802084a:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 802084c:	f003 0302 	and.w	r3, r3, #2
 8020850:	2b00      	cmp	r3, #0
 8020852:	d00b      	beq.n	802086c <ee_number+0x70>
 8020854:	687b      	ldr	r3, [r7, #4]
 8020856:	2b00      	cmp	r3, #0
 8020858:	da08      	bge.n	802086c <ee_number+0x70>
 802085a:	232d      	movs	r3, #45	; 0x2d
 802085c:	f887 305f 	strb.w	r3, [r7, #95]	; 0x5f
 8020860:	687b      	ldr	r3, [r7, #4]
 8020862:	425b      	negs	r3, r3
 8020864:	607b      	str	r3, [r7, #4]
 8020866:	6ebb      	ldr	r3, [r7, #104]	; 0x68
 8020868:	3b01      	subs	r3, #1
 802086a:	66bb      	str	r3, [r7, #104]	; 0x68
 802086c:	2300      	movs	r3, #0
 802086e:	657b      	str	r3, [r7, #84]	; 0x54
 8020870:	687b      	ldr	r3, [r7, #4]
 8020872:	2b00      	cmp	r3, #0
 8020874:	d120      	bne.n	80208b8 <ee_number+0xbc>
 8020876:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8020878:	1c5a      	adds	r2, r3, #1
 802087a:	657a      	str	r2, [r7, #84]	; 0x54
 802087c:	f107 0260 	add.w	r2, r7, #96	; 0x60
 8020880:	4413      	add	r3, r2
 8020882:	2230      	movs	r2, #48	; 0x30
 8020884:	f803 2c50 	strb.w	r2, [r3, #-80]
 8020888:	e019      	b.n	80208be <ee_number+0xc2>
 802088a:	687b      	ldr	r3, [r7, #4]
 802088c:	683a      	ldr	r2, [r7, #0]
 802088e:	fbb3 f1f2 	udiv	r1, r3, r2
 8020892:	fb02 f201 	mul.w	r2, r2, r1
 8020896:	1a9b      	subs	r3, r3, r2
 8020898:	6dba      	ldr	r2, [r7, #88]	; 0x58
 802089a:	441a      	add	r2, r3
 802089c:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 802089e:	1c59      	adds	r1, r3, #1
 80208a0:	6579      	str	r1, [r7, #84]	; 0x54
 80208a2:	7812      	ldrb	r2, [r2, #0]
 80208a4:	f107 0160 	add.w	r1, r7, #96	; 0x60
 80208a8:	440b      	add	r3, r1
 80208aa:	f803 2c50 	strb.w	r2, [r3, #-80]
 80208ae:	687a      	ldr	r2, [r7, #4]
 80208b0:	683b      	ldr	r3, [r7, #0]
 80208b2:	fbb2 f3f3 	udiv	r3, r2, r3
 80208b6:	607b      	str	r3, [r7, #4]
 80208b8:	687b      	ldr	r3, [r7, #4]
 80208ba:	2b00      	cmp	r3, #0
 80208bc:	d1e5      	bne.n	802088a <ee_number+0x8e>
 80208be:	6d7a      	ldr	r2, [r7, #84]	; 0x54
 80208c0:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 80208c2:	429a      	cmp	r2, r3
 80208c4:	dd01      	ble.n	80208ca <ee_number+0xce>
 80208c6:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 80208c8:	66fb      	str	r3, [r7, #108]	; 0x6c
 80208ca:	6eba      	ldr	r2, [r7, #104]	; 0x68
 80208cc:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 80208ce:	1ad3      	subs	r3, r2, r3
 80208d0:	66bb      	str	r3, [r7, #104]	; 0x68
 80208d2:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 80208d4:	f003 0301 	and.w	r3, r3, #1
 80208d8:	2b00      	cmp	r3, #0
 80208da:	d112      	bne.n	8020902 <ee_number+0x106>
 80208dc:	e00c      	b.n	80208f8 <ee_number+0xfc>
 80208de:	68fb      	ldr	r3, [r7, #12]
 80208e0:	1c5a      	adds	r2, r3, #1
 80208e2:	60fa      	str	r2, [r7, #12]
 80208e4:	2220      	movs	r2, #32
 80208e6:	701a      	strb	r2, [r3, #0]
 80208e8:	68bb      	ldr	r3, [r7, #8]
 80208ea:	3b01      	subs	r3, #1
 80208ec:	60bb      	str	r3, [r7, #8]
 80208ee:	68bb      	ldr	r3, [r7, #8]
 80208f0:	2b00      	cmp	r3, #0
 80208f2:	d101      	bne.n	80208f8 <ee_number+0xfc>
 80208f4:	68fb      	ldr	r3, [r7, #12]
 80208f6:	e068      	b.n	80209ca <ee_number+0x1ce>
 80208f8:	6ebb      	ldr	r3, [r7, #104]	; 0x68
 80208fa:	1e5a      	subs	r2, r3, #1
 80208fc:	66ba      	str	r2, [r7, #104]	; 0x68
 80208fe:	2b00      	cmp	r3, #0
 8020900:	dced      	bgt.n	80208de <ee_number+0xe2>
 8020902:	f897 305f 	ldrb.w	r3, [r7, #95]	; 0x5f
 8020906:	2b00      	cmp	r3, #0
 8020908:	d01b      	beq.n	8020942 <ee_number+0x146>
 802090a:	68fb      	ldr	r3, [r7, #12]
 802090c:	1c5a      	adds	r2, r3, #1
 802090e:	60fa      	str	r2, [r7, #12]
 8020910:	f897 205f 	ldrb.w	r2, [r7, #95]	; 0x5f
 8020914:	701a      	strb	r2, [r3, #0]
 8020916:	68bb      	ldr	r3, [r7, #8]
 8020918:	3b01      	subs	r3, #1
 802091a:	60bb      	str	r3, [r7, #8]
 802091c:	68bb      	ldr	r3, [r7, #8]
 802091e:	2b00      	cmp	r3, #0
 8020920:	d10f      	bne.n	8020942 <ee_number+0x146>
 8020922:	68fb      	ldr	r3, [r7, #12]
 8020924:	e051      	b.n	80209ca <ee_number+0x1ce>
 8020926:	68fb      	ldr	r3, [r7, #12]
 8020928:	1c5a      	adds	r2, r3, #1
 802092a:	60fa      	str	r2, [r7, #12]
 802092c:	f897 2053 	ldrb.w	r2, [r7, #83]	; 0x53
 8020930:	701a      	strb	r2, [r3, #0]
 8020932:	68bb      	ldr	r3, [r7, #8]
 8020934:	3b01      	subs	r3, #1
 8020936:	60bb      	str	r3, [r7, #8]
 8020938:	68bb      	ldr	r3, [r7, #8]
 802093a:	2b00      	cmp	r3, #0
 802093c:	d101      	bne.n	8020942 <ee_number+0x146>
 802093e:	68fb      	ldr	r3, [r7, #12]
 8020940:	e043      	b.n	80209ca <ee_number+0x1ce>
 8020942:	6ebb      	ldr	r3, [r7, #104]	; 0x68
 8020944:	1e5a      	subs	r2, r3, #1
 8020946:	66ba      	str	r2, [r7, #104]	; 0x68
 8020948:	2b00      	cmp	r3, #0
 802094a:	dcec      	bgt.n	8020926 <ee_number+0x12a>
 802094c:	e00c      	b.n	8020968 <ee_number+0x16c>
 802094e:	68fb      	ldr	r3, [r7, #12]
 8020950:	1c5a      	adds	r2, r3, #1
 8020952:	60fa      	str	r2, [r7, #12]
 8020954:	2230      	movs	r2, #48	; 0x30
 8020956:	701a      	strb	r2, [r3, #0]
 8020958:	68bb      	ldr	r3, [r7, #8]
 802095a:	3b01      	subs	r3, #1
 802095c:	60bb      	str	r3, [r7, #8]
 802095e:	68bb      	ldr	r3, [r7, #8]
 8020960:	2b00      	cmp	r3, #0
 8020962:	d101      	bne.n	8020968 <ee_number+0x16c>
 8020964:	68fb      	ldr	r3, [r7, #12]
 8020966:	e030      	b.n	80209ca <ee_number+0x1ce>
 8020968:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 802096a:	1e5a      	subs	r2, r3, #1
 802096c:	66fa      	str	r2, [r7, #108]	; 0x6c
 802096e:	6d7a      	ldr	r2, [r7, #84]	; 0x54
 8020970:	429a      	cmp	r2, r3
 8020972:	dbec      	blt.n	802094e <ee_number+0x152>
 8020974:	e010      	b.n	8020998 <ee_number+0x19c>
 8020976:	68fb      	ldr	r3, [r7, #12]
 8020978:	1c5a      	adds	r2, r3, #1
 802097a:	60fa      	str	r2, [r7, #12]
 802097c:	f107 0110 	add.w	r1, r7, #16
 8020980:	6d7a      	ldr	r2, [r7, #84]	; 0x54
 8020982:	440a      	add	r2, r1
 8020984:	7812      	ldrb	r2, [r2, #0]
 8020986:	701a      	strb	r2, [r3, #0]
 8020988:	68bb      	ldr	r3, [r7, #8]
 802098a:	3b01      	subs	r3, #1
 802098c:	60bb      	str	r3, [r7, #8]
 802098e:	68bb      	ldr	r3, [r7, #8]
 8020990:	2b00      	cmp	r3, #0
 8020992:	d101      	bne.n	8020998 <ee_number+0x19c>
 8020994:	68fb      	ldr	r3, [r7, #12]
 8020996:	e018      	b.n	80209ca <ee_number+0x1ce>
 8020998:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 802099a:	1e5a      	subs	r2, r3, #1
 802099c:	657a      	str	r2, [r7, #84]	; 0x54
 802099e:	2b00      	cmp	r3, #0
 80209a0:	dce9      	bgt.n	8020976 <ee_number+0x17a>
 80209a2:	e00c      	b.n	80209be <ee_number+0x1c2>
 80209a4:	68fb      	ldr	r3, [r7, #12]
 80209a6:	1c5a      	adds	r2, r3, #1
 80209a8:	60fa      	str	r2, [r7, #12]
 80209aa:	2220      	movs	r2, #32
 80209ac:	701a      	strb	r2, [r3, #0]
 80209ae:	68bb      	ldr	r3, [r7, #8]
 80209b0:	3b01      	subs	r3, #1
 80209b2:	60bb      	str	r3, [r7, #8]
 80209b4:	68bb      	ldr	r3, [r7, #8]
 80209b6:	2b00      	cmp	r3, #0
 80209b8:	d101      	bne.n	80209be <ee_number+0x1c2>
 80209ba:	68fb      	ldr	r3, [r7, #12]
 80209bc:	e005      	b.n	80209ca <ee_number+0x1ce>
 80209be:	6ebb      	ldr	r3, [r7, #104]	; 0x68
 80209c0:	1e5a      	subs	r2, r3, #1
 80209c2:	66ba      	str	r2, [r7, #104]	; 0x68
 80209c4:	2b00      	cmp	r3, #0
 80209c6:	dced      	bgt.n	80209a4 <ee_number+0x1a8>
 80209c8:	68fb      	ldr	r3, [r7, #12]
 80209ca:	4618      	mov	r0, r3
 80209cc:	3764      	adds	r7, #100	; 0x64
 80209ce:	46bd      	mov	sp, r7
 80209d0:	bc80      	pop	{r7}
 80209d2:	4770      	bx	lr
 80209d4:	200001c4 	.word	0x200001c4
 80209d8:	200001c8 	.word	0x200001c8

080209dc <tiny_vsnprintf_like>:
 80209dc:	b580      	push	{r7, lr}
 80209de:	b092      	sub	sp, #72	; 0x48
 80209e0:	af04      	add	r7, sp, #16
 80209e2:	60f8      	str	r0, [r7, #12]
 80209e4:	60b9      	str	r1, [r7, #8]
 80209e6:	607a      	str	r2, [r7, #4]
 80209e8:	603b      	str	r3, [r7, #0]
 80209ea:	68bb      	ldr	r3, [r7, #8]
 80209ec:	2b00      	cmp	r3, #0
 80209ee:	dc01      	bgt.n	80209f4 <tiny_vsnprintf_like+0x18>
 80209f0:	2300      	movs	r3, #0
 80209f2:	e142      	b.n	8020c7a <tiny_vsnprintf_like+0x29e>
 80209f4:	68fb      	ldr	r3, [r7, #12]
 80209f6:	62fb      	str	r3, [r7, #44]	; 0x2c
 80209f8:	e12a      	b.n	8020c50 <tiny_vsnprintf_like+0x274>
 80209fa:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 80209fc:	68fb      	ldr	r3, [r7, #12]
 80209fe:	1ad2      	subs	r2, r2, r3
 8020a00:	68bb      	ldr	r3, [r7, #8]
 8020a02:	3b01      	subs	r3, #1
 8020a04:	429a      	cmp	r2, r3
 8020a06:	f280 8131 	bge.w	8020c6c <tiny_vsnprintf_like+0x290>
 8020a0a:	687b      	ldr	r3, [r7, #4]
 8020a0c:	781b      	ldrb	r3, [r3, #0]
 8020a0e:	2b25      	cmp	r3, #37	; 0x25
 8020a10:	d006      	beq.n	8020a20 <tiny_vsnprintf_like+0x44>
 8020a12:	687a      	ldr	r2, [r7, #4]
 8020a14:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8020a16:	1c59      	adds	r1, r3, #1
 8020a18:	62f9      	str	r1, [r7, #44]	; 0x2c
 8020a1a:	7812      	ldrb	r2, [r2, #0]
 8020a1c:	701a      	strb	r2, [r3, #0]
 8020a1e:	e114      	b.n	8020c4a <tiny_vsnprintf_like+0x26e>
 8020a20:	2300      	movs	r3, #0
 8020a22:	623b      	str	r3, [r7, #32]
 8020a24:	687b      	ldr	r3, [r7, #4]
 8020a26:	3301      	adds	r3, #1
 8020a28:	607b      	str	r3, [r7, #4]
 8020a2a:	687b      	ldr	r3, [r7, #4]
 8020a2c:	781b      	ldrb	r3, [r3, #0]
 8020a2e:	2b30      	cmp	r3, #48	; 0x30
 8020a30:	d103      	bne.n	8020a3a <tiny_vsnprintf_like+0x5e>
 8020a32:	6a3b      	ldr	r3, [r7, #32]
 8020a34:	f043 0301 	orr.w	r3, r3, #1
 8020a38:	623b      	str	r3, [r7, #32]
 8020a3a:	f04f 33ff 	mov.w	r3, #4294967295
 8020a3e:	61fb      	str	r3, [r7, #28]
 8020a40:	687b      	ldr	r3, [r7, #4]
 8020a42:	781b      	ldrb	r3, [r3, #0]
 8020a44:	2b2f      	cmp	r3, #47	; 0x2f
 8020a46:	d908      	bls.n	8020a5a <tiny_vsnprintf_like+0x7e>
 8020a48:	687b      	ldr	r3, [r7, #4]
 8020a4a:	781b      	ldrb	r3, [r3, #0]
 8020a4c:	2b39      	cmp	r3, #57	; 0x39
 8020a4e:	d804      	bhi.n	8020a5a <tiny_vsnprintf_like+0x7e>
 8020a50:	1d3b      	adds	r3, r7, #4
 8020a52:	4618      	mov	r0, r3
 8020a54:	f7ff feac 	bl	80207b0 <ee_skip_atoi>
 8020a58:	61f8      	str	r0, [r7, #28]
 8020a5a:	f04f 33ff 	mov.w	r3, #4294967295
 8020a5e:	61bb      	str	r3, [r7, #24]
 8020a60:	f04f 33ff 	mov.w	r3, #4294967295
 8020a64:	617b      	str	r3, [r7, #20]
 8020a66:	230a      	movs	r3, #10
 8020a68:	633b      	str	r3, [r7, #48]	; 0x30
 8020a6a:	687b      	ldr	r3, [r7, #4]
 8020a6c:	781b      	ldrb	r3, [r3, #0]
 8020a6e:	3b58      	subs	r3, #88	; 0x58
 8020a70:	2b20      	cmp	r3, #32
 8020a72:	f200 8094 	bhi.w	8020b9e <tiny_vsnprintf_like+0x1c2>
 8020a76:	a201      	add	r2, pc, #4	; (adr r2, 8020a7c <tiny_vsnprintf_like+0xa0>)
 8020a78:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8020a7c:	08020b87 	.word	0x08020b87
 8020a80:	08020b9f 	.word	0x08020b9f
 8020a84:	08020b9f 	.word	0x08020b9f
 8020a88:	08020b9f 	.word	0x08020b9f
 8020a8c:	08020b9f 	.word	0x08020b9f
 8020a90:	08020b9f 	.word	0x08020b9f
 8020a94:	08020b9f 	.word	0x08020b9f
 8020a98:	08020b9f 	.word	0x08020b9f
 8020a9c:	08020b9f 	.word	0x08020b9f
 8020aa0:	08020b9f 	.word	0x08020b9f
 8020aa4:	08020b9f 	.word	0x08020b9f
 8020aa8:	08020b0b 	.word	0x08020b0b
 8020aac:	08020b95 	.word	0x08020b95
 8020ab0:	08020b9f 	.word	0x08020b9f
 8020ab4:	08020b9f 	.word	0x08020b9f
 8020ab8:	08020b9f 	.word	0x08020b9f
 8020abc:	08020b9f 	.word	0x08020b9f
 8020ac0:	08020b95 	.word	0x08020b95
 8020ac4:	08020b9f 	.word	0x08020b9f
 8020ac8:	08020b9f 	.word	0x08020b9f
 8020acc:	08020b9f 	.word	0x08020b9f
 8020ad0:	08020b9f 	.word	0x08020b9f
 8020ad4:	08020b9f 	.word	0x08020b9f
 8020ad8:	08020b9f 	.word	0x08020b9f
 8020adc:	08020b9f 	.word	0x08020b9f
 8020ae0:	08020b9f 	.word	0x08020b9f
 8020ae4:	08020b9f 	.word	0x08020b9f
 8020ae8:	08020b2b 	.word	0x08020b2b
 8020aec:	08020b9f 	.word	0x08020b9f
 8020af0:	08020beb 	.word	0x08020beb
 8020af4:	08020b9f 	.word	0x08020b9f
 8020af8:	08020b9f 	.word	0x08020b9f
 8020afc:	08020b8f 	.word	0x08020b8f
 8020b00:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8020b02:	1c5a      	adds	r2, r3, #1
 8020b04:	62fa      	str	r2, [r7, #44]	; 0x2c
 8020b06:	2220      	movs	r2, #32
 8020b08:	701a      	strb	r2, [r3, #0]
 8020b0a:	69fb      	ldr	r3, [r7, #28]
 8020b0c:	3b01      	subs	r3, #1
 8020b0e:	61fb      	str	r3, [r7, #28]
 8020b10:	69fb      	ldr	r3, [r7, #28]
 8020b12:	2b00      	cmp	r3, #0
 8020b14:	dcf4      	bgt.n	8020b00 <tiny_vsnprintf_like+0x124>
 8020b16:	683b      	ldr	r3, [r7, #0]
 8020b18:	1d1a      	adds	r2, r3, #4
 8020b1a:	603a      	str	r2, [r7, #0]
 8020b1c:	6819      	ldr	r1, [r3, #0]
 8020b1e:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8020b20:	1c5a      	adds	r2, r3, #1
 8020b22:	62fa      	str	r2, [r7, #44]	; 0x2c
 8020b24:	b2ca      	uxtb	r2, r1
 8020b26:	701a      	strb	r2, [r3, #0]
 8020b28:	e08f      	b.n	8020c4a <tiny_vsnprintf_like+0x26e>
 8020b2a:	683b      	ldr	r3, [r7, #0]
 8020b2c:	1d1a      	adds	r2, r3, #4
 8020b2e:	603a      	str	r2, [r7, #0]
 8020b30:	681b      	ldr	r3, [r3, #0]
 8020b32:	627b      	str	r3, [r7, #36]	; 0x24
 8020b34:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8020b36:	2b00      	cmp	r3, #0
 8020b38:	d101      	bne.n	8020b3e <tiny_vsnprintf_like+0x162>
 8020b3a:	4b52      	ldr	r3, [pc, #328]	; (8020c84 <tiny_vsnprintf_like+0x2a8>)
 8020b3c:	627b      	str	r3, [r7, #36]	; 0x24
 8020b3e:	6a78      	ldr	r0, [r7, #36]	; 0x24
 8020b40:	f7df fb1e 	bl	8000180 <strlen>
 8020b44:	4603      	mov	r3, r0
 8020b46:	613b      	str	r3, [r7, #16]
 8020b48:	e004      	b.n	8020b54 <tiny_vsnprintf_like+0x178>
 8020b4a:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8020b4c:	1c5a      	adds	r2, r3, #1
 8020b4e:	62fa      	str	r2, [r7, #44]	; 0x2c
 8020b50:	2220      	movs	r2, #32
 8020b52:	701a      	strb	r2, [r3, #0]
 8020b54:	69fb      	ldr	r3, [r7, #28]
 8020b56:	1e5a      	subs	r2, r3, #1
 8020b58:	61fa      	str	r2, [r7, #28]
 8020b5a:	693a      	ldr	r2, [r7, #16]
 8020b5c:	429a      	cmp	r2, r3
 8020b5e:	dbf4      	blt.n	8020b4a <tiny_vsnprintf_like+0x16e>
 8020b60:	2300      	movs	r3, #0
 8020b62:	62bb      	str	r3, [r7, #40]	; 0x28
 8020b64:	e00a      	b.n	8020b7c <tiny_vsnprintf_like+0x1a0>
 8020b66:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8020b68:	1c53      	adds	r3, r2, #1
 8020b6a:	627b      	str	r3, [r7, #36]	; 0x24
 8020b6c:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8020b6e:	1c59      	adds	r1, r3, #1
 8020b70:	62f9      	str	r1, [r7, #44]	; 0x2c
 8020b72:	7812      	ldrb	r2, [r2, #0]
 8020b74:	701a      	strb	r2, [r3, #0]
 8020b76:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8020b78:	3301      	adds	r3, #1
 8020b7a:	62bb      	str	r3, [r7, #40]	; 0x28
 8020b7c:	6aba      	ldr	r2, [r7, #40]	; 0x28
 8020b7e:	693b      	ldr	r3, [r7, #16]
 8020b80:	429a      	cmp	r2, r3
 8020b82:	dbf0      	blt.n	8020b66 <tiny_vsnprintf_like+0x18a>
 8020b84:	e061      	b.n	8020c4a <tiny_vsnprintf_like+0x26e>
 8020b86:	6a3b      	ldr	r3, [r7, #32]
 8020b88:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8020b8c:	623b      	str	r3, [r7, #32]
 8020b8e:	2310      	movs	r3, #16
 8020b90:	633b      	str	r3, [r7, #48]	; 0x30
 8020b92:	e02d      	b.n	8020bf0 <tiny_vsnprintf_like+0x214>
 8020b94:	6a3b      	ldr	r3, [r7, #32]
 8020b96:	f043 0302 	orr.w	r3, r3, #2
 8020b9a:	623b      	str	r3, [r7, #32]
 8020b9c:	e025      	b.n	8020bea <tiny_vsnprintf_like+0x20e>
 8020b9e:	687b      	ldr	r3, [r7, #4]
 8020ba0:	781b      	ldrb	r3, [r3, #0]
 8020ba2:	2b25      	cmp	r3, #37	; 0x25
 8020ba4:	d004      	beq.n	8020bb0 <tiny_vsnprintf_like+0x1d4>
 8020ba6:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8020ba8:	1c5a      	adds	r2, r3, #1
 8020baa:	62fa      	str	r2, [r7, #44]	; 0x2c
 8020bac:	2225      	movs	r2, #37	; 0x25
 8020bae:	701a      	strb	r2, [r3, #0]
 8020bb0:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8020bb2:	68fb      	ldr	r3, [r7, #12]
 8020bb4:	1ad2      	subs	r2, r2, r3
 8020bb6:	68bb      	ldr	r3, [r7, #8]
 8020bb8:	3b01      	subs	r3, #1
 8020bba:	429a      	cmp	r2, r3
 8020bbc:	da17      	bge.n	8020bee <tiny_vsnprintf_like+0x212>
 8020bbe:	687b      	ldr	r3, [r7, #4]
 8020bc0:	781b      	ldrb	r3, [r3, #0]
 8020bc2:	2b00      	cmp	r3, #0
 8020bc4:	d006      	beq.n	8020bd4 <tiny_vsnprintf_like+0x1f8>
 8020bc6:	687a      	ldr	r2, [r7, #4]
 8020bc8:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8020bca:	1c59      	adds	r1, r3, #1
 8020bcc:	62f9      	str	r1, [r7, #44]	; 0x2c
 8020bce:	7812      	ldrb	r2, [r2, #0]
 8020bd0:	701a      	strb	r2, [r3, #0]
 8020bd2:	e002      	b.n	8020bda <tiny_vsnprintf_like+0x1fe>
 8020bd4:	687b      	ldr	r3, [r7, #4]
 8020bd6:	3b01      	subs	r3, #1
 8020bd8:	607b      	str	r3, [r7, #4]
 8020bda:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8020bdc:	68fb      	ldr	r3, [r7, #12]
 8020bde:	1ad2      	subs	r2, r2, r3
 8020be0:	68bb      	ldr	r3, [r7, #8]
 8020be2:	3b01      	subs	r3, #1
 8020be4:	429a      	cmp	r2, r3
 8020be6:	db2f      	blt.n	8020c48 <tiny_vsnprintf_like+0x26c>
 8020be8:	e002      	b.n	8020bf0 <tiny_vsnprintf_like+0x214>
 8020bea:	bf00      	nop
 8020bec:	e000      	b.n	8020bf0 <tiny_vsnprintf_like+0x214>
 8020bee:	bf00      	nop
 8020bf0:	697b      	ldr	r3, [r7, #20]
 8020bf2:	2b6c      	cmp	r3, #108	; 0x6c
 8020bf4:	d105      	bne.n	8020c02 <tiny_vsnprintf_like+0x226>
 8020bf6:	683b      	ldr	r3, [r7, #0]
 8020bf8:	1d1a      	adds	r2, r3, #4
 8020bfa:	603a      	str	r2, [r7, #0]
 8020bfc:	681b      	ldr	r3, [r3, #0]
 8020bfe:	637b      	str	r3, [r7, #52]	; 0x34
 8020c00:	e00f      	b.n	8020c22 <tiny_vsnprintf_like+0x246>
 8020c02:	6a3b      	ldr	r3, [r7, #32]
 8020c04:	f003 0302 	and.w	r3, r3, #2
 8020c08:	2b00      	cmp	r3, #0
 8020c0a:	d005      	beq.n	8020c18 <tiny_vsnprintf_like+0x23c>
 8020c0c:	683b      	ldr	r3, [r7, #0]
 8020c0e:	1d1a      	adds	r2, r3, #4
 8020c10:	603a      	str	r2, [r7, #0]
 8020c12:	681b      	ldr	r3, [r3, #0]
 8020c14:	637b      	str	r3, [r7, #52]	; 0x34
 8020c16:	e004      	b.n	8020c22 <tiny_vsnprintf_like+0x246>
 8020c18:	683b      	ldr	r3, [r7, #0]
 8020c1a:	1d1a      	adds	r2, r3, #4
 8020c1c:	603a      	str	r2, [r7, #0]
 8020c1e:	681b      	ldr	r3, [r3, #0]
 8020c20:	637b      	str	r3, [r7, #52]	; 0x34
 8020c22:	68bb      	ldr	r3, [r7, #8]
 8020c24:	1e5a      	subs	r2, r3, #1
 8020c26:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 8020c28:	68fb      	ldr	r3, [r7, #12]
 8020c2a:	1acb      	subs	r3, r1, r3
 8020c2c:	1ad1      	subs	r1, r2, r3
 8020c2e:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 8020c30:	6a3b      	ldr	r3, [r7, #32]
 8020c32:	9302      	str	r3, [sp, #8]
 8020c34:	69bb      	ldr	r3, [r7, #24]
 8020c36:	9301      	str	r3, [sp, #4]
 8020c38:	69fb      	ldr	r3, [r7, #28]
 8020c3a:	9300      	str	r3, [sp, #0]
 8020c3c:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8020c3e:	6af8      	ldr	r0, [r7, #44]	; 0x2c
 8020c40:	f7ff fddc 	bl	80207fc <ee_number>
 8020c44:	62f8      	str	r0, [r7, #44]	; 0x2c
 8020c46:	e000      	b.n	8020c4a <tiny_vsnprintf_like+0x26e>
 8020c48:	bf00      	nop
 8020c4a:	687b      	ldr	r3, [r7, #4]
 8020c4c:	3301      	adds	r3, #1
 8020c4e:	607b      	str	r3, [r7, #4]
 8020c50:	687b      	ldr	r3, [r7, #4]
 8020c52:	781b      	ldrb	r3, [r3, #0]
 8020c54:	2b00      	cmp	r3, #0
 8020c56:	f47f aed0 	bne.w	80209fa <tiny_vsnprintf_like+0x1e>
 8020c5a:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8020c5c:	68fb      	ldr	r3, [r7, #12]
 8020c5e:	1ad2      	subs	r2, r2, r3
 8020c60:	68bb      	ldr	r3, [r7, #8]
 8020c62:	3b01      	subs	r3, #1
 8020c64:	429a      	cmp	r2, r3
 8020c66:	f6bf aec8 	bge.w	80209fa <tiny_vsnprintf_like+0x1e>
 8020c6a:	e000      	b.n	8020c6e <tiny_vsnprintf_like+0x292>
 8020c6c:	bf00      	nop
 8020c6e:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8020c70:	2200      	movs	r2, #0
 8020c72:	701a      	strb	r2, [r3, #0]
 8020c74:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8020c76:	68fb      	ldr	r3, [r7, #12]
 8020c78:	1ad3      	subs	r3, r2, r3
 8020c7a:	4618      	mov	r0, r3
 8020c7c:	3738      	adds	r7, #56	; 0x38
 8020c7e:	46bd      	mov	sp, r7
 8020c80:	bd80      	pop	{r7, pc}
 8020c82:	bf00      	nop
 8020c84:	0802627c 	.word	0x0802627c

08020c88 <UTIL_SEQ_Run>:
 8020c88:	b580      	push	{r7, lr}
 8020c8a:	b08c      	sub	sp, #48	; 0x30
 8020c8c:	af00      	add	r7, sp, #0
 8020c8e:	6078      	str	r0, [r7, #4]
 8020c90:	4b67      	ldr	r3, [pc, #412]	; (8020e30 <UTIL_SEQ_Run+0x1a8>)
 8020c92:	681b      	ldr	r3, [r3, #0]
 8020c94:	62bb      	str	r3, [r7, #40]	; 0x28
 8020c96:	4b66      	ldr	r3, [pc, #408]	; (8020e30 <UTIL_SEQ_Run+0x1a8>)
 8020c98:	681a      	ldr	r2, [r3, #0]
 8020c9a:	687b      	ldr	r3, [r7, #4]
 8020c9c:	4013      	ands	r3, r2
 8020c9e:	4a64      	ldr	r2, [pc, #400]	; (8020e30 <UTIL_SEQ_Run+0x1a8>)
 8020ca0:	6013      	str	r3, [r2, #0]
 8020ca2:	e083      	b.n	8020dac <UTIL_SEQ_Run+0x124>
 8020ca4:	2300      	movs	r3, #0
 8020ca6:	62fb      	str	r3, [r7, #44]	; 0x2c
 8020ca8:	e002      	b.n	8020cb0 <UTIL_SEQ_Run+0x28>
 8020caa:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8020cac:	3301      	adds	r3, #1
 8020cae:	62fb      	str	r3, [r7, #44]	; 0x2c
 8020cb0:	4a60      	ldr	r2, [pc, #384]	; (8020e34 <UTIL_SEQ_Run+0x1ac>)
 8020cb2:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8020cb4:	f852 2033 	ldr.w	r2, [r2, r3, lsl #3]
 8020cb8:	4b5f      	ldr	r3, [pc, #380]	; (8020e38 <UTIL_SEQ_Run+0x1b0>)
 8020cba:	681b      	ldr	r3, [r3, #0]
 8020cbc:	401a      	ands	r2, r3
 8020cbe:	4b5c      	ldr	r3, [pc, #368]	; (8020e30 <UTIL_SEQ_Run+0x1a8>)
 8020cc0:	681b      	ldr	r3, [r3, #0]
 8020cc2:	4013      	ands	r3, r2
 8020cc4:	2b00      	cmp	r3, #0
 8020cc6:	d0f0      	beq.n	8020caa <UTIL_SEQ_Run+0x22>
 8020cc8:	4a5a      	ldr	r2, [pc, #360]	; (8020e34 <UTIL_SEQ_Run+0x1ac>)
 8020cca:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8020ccc:	f852 2033 	ldr.w	r2, [r2, r3, lsl #3]
 8020cd0:	4b59      	ldr	r3, [pc, #356]	; (8020e38 <UTIL_SEQ_Run+0x1b0>)
 8020cd2:	681b      	ldr	r3, [r3, #0]
 8020cd4:	401a      	ands	r2, r3
 8020cd6:	4b56      	ldr	r3, [pc, #344]	; (8020e30 <UTIL_SEQ_Run+0x1a8>)
 8020cd8:	681b      	ldr	r3, [r3, #0]
 8020cda:	4013      	ands	r3, r2
 8020cdc:	627b      	str	r3, [r7, #36]	; 0x24
 8020cde:	4a55      	ldr	r2, [pc, #340]	; (8020e34 <UTIL_SEQ_Run+0x1ac>)
 8020ce0:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8020ce2:	00db      	lsls	r3, r3, #3
 8020ce4:	4413      	add	r3, r2
 8020ce6:	685a      	ldr	r2, [r3, #4]
 8020ce8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8020cea:	4013      	ands	r3, r2
 8020cec:	2b00      	cmp	r3, #0
 8020cee:	d106      	bne.n	8020cfe <UTIL_SEQ_Run+0x76>
 8020cf0:	4a50      	ldr	r2, [pc, #320]	; (8020e34 <UTIL_SEQ_Run+0x1ac>)
 8020cf2:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8020cf4:	00db      	lsls	r3, r3, #3
 8020cf6:	4413      	add	r3, r2
 8020cf8:	f04f 32ff 	mov.w	r2, #4294967295
 8020cfc:	605a      	str	r2, [r3, #4]
 8020cfe:	4a4d      	ldr	r2, [pc, #308]	; (8020e34 <UTIL_SEQ_Run+0x1ac>)
 8020d00:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8020d02:	00db      	lsls	r3, r3, #3
 8020d04:	4413      	add	r3, r2
 8020d06:	685a      	ldr	r2, [r3, #4]
 8020d08:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8020d0a:	4013      	ands	r3, r2
 8020d0c:	4618      	mov	r0, r3
 8020d0e:	f000 f8f9 	bl	8020f04 <SEQ_BitPosition>
 8020d12:	4603      	mov	r3, r0
 8020d14:	461a      	mov	r2, r3
 8020d16:	4b49      	ldr	r3, [pc, #292]	; (8020e3c <UTIL_SEQ_Run+0x1b4>)
 8020d18:	601a      	str	r2, [r3, #0]
 8020d1a:	4a46      	ldr	r2, [pc, #280]	; (8020e34 <UTIL_SEQ_Run+0x1ac>)
 8020d1c:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8020d1e:	00db      	lsls	r3, r3, #3
 8020d20:	4413      	add	r3, r2
 8020d22:	685a      	ldr	r2, [r3, #4]
 8020d24:	4b45      	ldr	r3, [pc, #276]	; (8020e3c <UTIL_SEQ_Run+0x1b4>)
 8020d26:	681b      	ldr	r3, [r3, #0]
 8020d28:	2101      	movs	r1, #1
 8020d2a:	fa01 f303 	lsl.w	r3, r1, r3
 8020d2e:	43db      	mvns	r3, r3
 8020d30:	401a      	ands	r2, r3
 8020d32:	4940      	ldr	r1, [pc, #256]	; (8020e34 <UTIL_SEQ_Run+0x1ac>)
 8020d34:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8020d36:	00db      	lsls	r3, r3, #3
 8020d38:	440b      	add	r3, r1
 8020d3a:	605a      	str	r2, [r3, #4]
 8020d3c:	f3ef 8310 	mrs	r3, PRIMASK
 8020d40:	61bb      	str	r3, [r7, #24]
 8020d42:	69bb      	ldr	r3, [r7, #24]
 8020d44:	623b      	str	r3, [r7, #32]
 8020d46:	b672      	cpsid	i
 8020d48:	bf00      	nop
 8020d4a:	4b3c      	ldr	r3, [pc, #240]	; (8020e3c <UTIL_SEQ_Run+0x1b4>)
 8020d4c:	681b      	ldr	r3, [r3, #0]
 8020d4e:	2201      	movs	r2, #1
 8020d50:	fa02 f303 	lsl.w	r3, r2, r3
 8020d54:	43da      	mvns	r2, r3
 8020d56:	4b3a      	ldr	r3, [pc, #232]	; (8020e40 <UTIL_SEQ_Run+0x1b8>)
 8020d58:	681b      	ldr	r3, [r3, #0]
 8020d5a:	4013      	ands	r3, r2
 8020d5c:	4a38      	ldr	r2, [pc, #224]	; (8020e40 <UTIL_SEQ_Run+0x1b8>)
 8020d5e:	6013      	str	r3, [r2, #0]
 8020d60:	2302      	movs	r3, #2
 8020d62:	62fb      	str	r3, [r7, #44]	; 0x2c
 8020d64:	e013      	b.n	8020d8e <UTIL_SEQ_Run+0x106>
 8020d66:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8020d68:	3b01      	subs	r3, #1
 8020d6a:	4a32      	ldr	r2, [pc, #200]	; (8020e34 <UTIL_SEQ_Run+0x1ac>)
 8020d6c:	f852 1033 	ldr.w	r1, [r2, r3, lsl #3]
 8020d70:	4b32      	ldr	r3, [pc, #200]	; (8020e3c <UTIL_SEQ_Run+0x1b4>)
 8020d72:	681b      	ldr	r3, [r3, #0]
 8020d74:	2201      	movs	r2, #1
 8020d76:	fa02 f303 	lsl.w	r3, r2, r3
 8020d7a:	43da      	mvns	r2, r3
 8020d7c:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8020d7e:	3b01      	subs	r3, #1
 8020d80:	400a      	ands	r2, r1
 8020d82:	492c      	ldr	r1, [pc, #176]	; (8020e34 <UTIL_SEQ_Run+0x1ac>)
 8020d84:	f841 2033 	str.w	r2, [r1, r3, lsl #3]
 8020d88:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8020d8a:	3b01      	subs	r3, #1
 8020d8c:	62fb      	str	r3, [r7, #44]	; 0x2c
 8020d8e:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8020d90:	2b00      	cmp	r3, #0
 8020d92:	d1e8      	bne.n	8020d66 <UTIL_SEQ_Run+0xde>
 8020d94:	6a3b      	ldr	r3, [r7, #32]
 8020d96:	617b      	str	r3, [r7, #20]
 8020d98:	697b      	ldr	r3, [r7, #20]
 8020d9a:	f383 8810 	msr	PRIMASK, r3
 8020d9e:	bf00      	nop
 8020da0:	4b26      	ldr	r3, [pc, #152]	; (8020e3c <UTIL_SEQ_Run+0x1b4>)
 8020da2:	681b      	ldr	r3, [r3, #0]
 8020da4:	4a27      	ldr	r2, [pc, #156]	; (8020e44 <UTIL_SEQ_Run+0x1bc>)
 8020da6:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8020daa:	4798      	blx	r3
 8020dac:	4b24      	ldr	r3, [pc, #144]	; (8020e40 <UTIL_SEQ_Run+0x1b8>)
 8020dae:	681a      	ldr	r2, [r3, #0]
 8020db0:	4b21      	ldr	r3, [pc, #132]	; (8020e38 <UTIL_SEQ_Run+0x1b0>)
 8020db2:	681b      	ldr	r3, [r3, #0]
 8020db4:	401a      	ands	r2, r3
 8020db6:	4b1e      	ldr	r3, [pc, #120]	; (8020e30 <UTIL_SEQ_Run+0x1a8>)
 8020db8:	681b      	ldr	r3, [r3, #0]
 8020dba:	4013      	ands	r3, r2
 8020dbc:	2b00      	cmp	r3, #0
 8020dbe:	d007      	beq.n	8020dd0 <UTIL_SEQ_Run+0x148>
 8020dc0:	4b21      	ldr	r3, [pc, #132]	; (8020e48 <UTIL_SEQ_Run+0x1c0>)
 8020dc2:	681a      	ldr	r2, [r3, #0]
 8020dc4:	4b21      	ldr	r3, [pc, #132]	; (8020e4c <UTIL_SEQ_Run+0x1c4>)
 8020dc6:	681b      	ldr	r3, [r3, #0]
 8020dc8:	4013      	ands	r3, r2
 8020dca:	2b00      	cmp	r3, #0
 8020dcc:	f43f af6a 	beq.w	8020ca4 <UTIL_SEQ_Run+0x1c>
 8020dd0:	4b1a      	ldr	r3, [pc, #104]	; (8020e3c <UTIL_SEQ_Run+0x1b4>)
 8020dd2:	f04f 32ff 	mov.w	r2, #4294967295
 8020dd6:	601a      	str	r2, [r3, #0]
 8020dd8:	f000 f888 	bl	8020eec <UTIL_SEQ_PreIdle>
 8020ddc:	f3ef 8310 	mrs	r3, PRIMASK
 8020de0:	613b      	str	r3, [r7, #16]
 8020de2:	693b      	ldr	r3, [r7, #16]
 8020de4:	61fb      	str	r3, [r7, #28]
 8020de6:	b672      	cpsid	i
 8020de8:	bf00      	nop
 8020dea:	4b15      	ldr	r3, [pc, #84]	; (8020e40 <UTIL_SEQ_Run+0x1b8>)
 8020dec:	681a      	ldr	r2, [r3, #0]
 8020dee:	4b12      	ldr	r3, [pc, #72]	; (8020e38 <UTIL_SEQ_Run+0x1b0>)
 8020df0:	681b      	ldr	r3, [r3, #0]
 8020df2:	401a      	ands	r2, r3
 8020df4:	4b0e      	ldr	r3, [pc, #56]	; (8020e30 <UTIL_SEQ_Run+0x1a8>)
 8020df6:	681b      	ldr	r3, [r3, #0]
 8020df8:	4013      	ands	r3, r2
 8020dfa:	2b00      	cmp	r3, #0
 8020dfc:	d108      	bne.n	8020e10 <UTIL_SEQ_Run+0x188>
 8020dfe:	4b12      	ldr	r3, [pc, #72]	; (8020e48 <UTIL_SEQ_Run+0x1c0>)
 8020e00:	681a      	ldr	r2, [r3, #0]
 8020e02:	4b12      	ldr	r3, [pc, #72]	; (8020e4c <UTIL_SEQ_Run+0x1c4>)
 8020e04:	681b      	ldr	r3, [r3, #0]
 8020e06:	4013      	ands	r3, r2
 8020e08:	2b00      	cmp	r3, #0
 8020e0a:	d101      	bne.n	8020e10 <UTIL_SEQ_Run+0x188>
 8020e0c:	f7e5 f954 	bl	80060b8 <UTIL_SEQ_Idle>
 8020e10:	69fb      	ldr	r3, [r7, #28]
 8020e12:	60fb      	str	r3, [r7, #12]
 8020e14:	68fb      	ldr	r3, [r7, #12]
 8020e16:	f383 8810 	msr	PRIMASK, r3
 8020e1a:	bf00      	nop
 8020e1c:	f000 f86c 	bl	8020ef8 <UTIL_SEQ_PostIdle>
 8020e20:	4a03      	ldr	r2, [pc, #12]	; (8020e30 <UTIL_SEQ_Run+0x1a8>)
 8020e22:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8020e24:	6013      	str	r3, [r2, #0]
 8020e26:	bf00      	nop
 8020e28:	3730      	adds	r7, #48	; 0x30
 8020e2a:	46bd      	mov	sp, r7
 8020e2c:	bd80      	pop	{r7, pc}
 8020e2e:	bf00      	nop
 8020e30:	200001d0 	.word	0x200001d0
 8020e34:	200019f0 	.word	0x200019f0
 8020e38:	200001cc 	.word	0x200001cc
 8020e3c:	2000196c 	.word	0x2000196c
 8020e40:	20001960 	.word	0x20001960
 8020e44:	20001970 	.word	0x20001970
 8020e48:	20001964 	.word	0x20001964
 8020e4c:	20001968 	.word	0x20001968

08020e50 <UTIL_SEQ_RegTask>:
 8020e50:	b580      	push	{r7, lr}
 8020e52:	b088      	sub	sp, #32
 8020e54:	af00      	add	r7, sp, #0
 8020e56:	60f8      	str	r0, [r7, #12]
 8020e58:	60b9      	str	r1, [r7, #8]
 8020e5a:	607a      	str	r2, [r7, #4]
 8020e5c:	f3ef 8310 	mrs	r3, PRIMASK
 8020e60:	617b      	str	r3, [r7, #20]
 8020e62:	697b      	ldr	r3, [r7, #20]
 8020e64:	61fb      	str	r3, [r7, #28]
 8020e66:	b672      	cpsid	i
 8020e68:	bf00      	nop
 8020e6a:	68f8      	ldr	r0, [r7, #12]
 8020e6c:	f000 f84a 	bl	8020f04 <SEQ_BitPosition>
 8020e70:	4603      	mov	r3, r0
 8020e72:	4619      	mov	r1, r3
 8020e74:	4a06      	ldr	r2, [pc, #24]	; (8020e90 <UTIL_SEQ_RegTask+0x40>)
 8020e76:	687b      	ldr	r3, [r7, #4]
 8020e78:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
 8020e7c:	69fb      	ldr	r3, [r7, #28]
 8020e7e:	61bb      	str	r3, [r7, #24]
 8020e80:	69bb      	ldr	r3, [r7, #24]
 8020e82:	f383 8810 	msr	PRIMASK, r3
 8020e86:	bf00      	nop
 8020e88:	bf00      	nop
 8020e8a:	3720      	adds	r7, #32
 8020e8c:	46bd      	mov	sp, r7
 8020e8e:	bd80      	pop	{r7, pc}
 8020e90:	20001970 	.word	0x20001970

08020e94 <UTIL_SEQ_SetTask>:
 8020e94:	b480      	push	{r7}
 8020e96:	b087      	sub	sp, #28
 8020e98:	af00      	add	r7, sp, #0
 8020e9a:	6078      	str	r0, [r7, #4]
 8020e9c:	6039      	str	r1, [r7, #0]
 8020e9e:	f3ef 8310 	mrs	r3, PRIMASK
 8020ea2:	60fb      	str	r3, [r7, #12]
 8020ea4:	68fb      	ldr	r3, [r7, #12]
 8020ea6:	617b      	str	r3, [r7, #20]
 8020ea8:	b672      	cpsid	i
 8020eaa:	bf00      	nop
 8020eac:	4b0d      	ldr	r3, [pc, #52]	; (8020ee4 <UTIL_SEQ_SetTask+0x50>)
 8020eae:	681a      	ldr	r2, [r3, #0]
 8020eb0:	687b      	ldr	r3, [r7, #4]
 8020eb2:	4313      	orrs	r3, r2
 8020eb4:	4a0b      	ldr	r2, [pc, #44]	; (8020ee4 <UTIL_SEQ_SetTask+0x50>)
 8020eb6:	6013      	str	r3, [r2, #0]
 8020eb8:	4a0b      	ldr	r2, [pc, #44]	; (8020ee8 <UTIL_SEQ_SetTask+0x54>)
 8020eba:	683b      	ldr	r3, [r7, #0]
 8020ebc:	f852 2033 	ldr.w	r2, [r2, r3, lsl #3]
 8020ec0:	687b      	ldr	r3, [r7, #4]
 8020ec2:	431a      	orrs	r2, r3
 8020ec4:	4908      	ldr	r1, [pc, #32]	; (8020ee8 <UTIL_SEQ_SetTask+0x54>)
 8020ec6:	683b      	ldr	r3, [r7, #0]
 8020ec8:	f841 2033 	str.w	r2, [r1, r3, lsl #3]
 8020ecc:	697b      	ldr	r3, [r7, #20]
 8020ece:	613b      	str	r3, [r7, #16]
 8020ed0:	693b      	ldr	r3, [r7, #16]
 8020ed2:	f383 8810 	msr	PRIMASK, r3
 8020ed6:	bf00      	nop
 8020ed8:	bf00      	nop
 8020eda:	371c      	adds	r7, #28
 8020edc:	46bd      	mov	sp, r7
 8020ede:	bc80      	pop	{r7}
 8020ee0:	4770      	bx	lr
 8020ee2:	bf00      	nop
 8020ee4:	20001960 	.word	0x20001960
 8020ee8:	200019f0 	.word	0x200019f0

08020eec <UTIL_SEQ_PreIdle>:
 8020eec:	b480      	push	{r7}
 8020eee:	af00      	add	r7, sp, #0
 8020ef0:	bf00      	nop
 8020ef2:	46bd      	mov	sp, r7
 8020ef4:	bc80      	pop	{r7}
 8020ef6:	4770      	bx	lr

08020ef8 <UTIL_SEQ_PostIdle>:
 8020ef8:	b480      	push	{r7}
 8020efa:	af00      	add	r7, sp, #0
 8020efc:	bf00      	nop
 8020efe:	46bd      	mov	sp, r7
 8020f00:	bc80      	pop	{r7}
 8020f02:	4770      	bx	lr

08020f04 <SEQ_BitPosition>:
 8020f04:	b480      	push	{r7}
 8020f06:	b085      	sub	sp, #20
 8020f08:	af00      	add	r7, sp, #0
 8020f0a:	6078      	str	r0, [r7, #4]
 8020f0c:	2300      	movs	r3, #0
 8020f0e:	73fb      	strb	r3, [r7, #15]
 8020f10:	687b      	ldr	r3, [r7, #4]
 8020f12:	0c1b      	lsrs	r3, r3, #16
 8020f14:	041b      	lsls	r3, r3, #16
 8020f16:	2b00      	cmp	r3, #0
 8020f18:	d104      	bne.n	8020f24 <SEQ_BitPosition+0x20>
 8020f1a:	2310      	movs	r3, #16
 8020f1c:	73fb      	strb	r3, [r7, #15]
 8020f1e:	687b      	ldr	r3, [r7, #4]
 8020f20:	041b      	lsls	r3, r3, #16
 8020f22:	607b      	str	r3, [r7, #4]
 8020f24:	687b      	ldr	r3, [r7, #4]
 8020f26:	f003 437f 	and.w	r3, r3, #4278190080	; 0xff000000
 8020f2a:	2b00      	cmp	r3, #0
 8020f2c:	d105      	bne.n	8020f3a <SEQ_BitPosition+0x36>
 8020f2e:	7bfb      	ldrb	r3, [r7, #15]
 8020f30:	3308      	adds	r3, #8
 8020f32:	73fb      	strb	r3, [r7, #15]
 8020f34:	687b      	ldr	r3, [r7, #4]
 8020f36:	021b      	lsls	r3, r3, #8
 8020f38:	607b      	str	r3, [r7, #4]
 8020f3a:	687b      	ldr	r3, [r7, #4]
 8020f3c:	f003 4370 	and.w	r3, r3, #4026531840	; 0xf0000000
 8020f40:	2b00      	cmp	r3, #0
 8020f42:	d105      	bne.n	8020f50 <SEQ_BitPosition+0x4c>
 8020f44:	7bfb      	ldrb	r3, [r7, #15]
 8020f46:	3304      	adds	r3, #4
 8020f48:	73fb      	strb	r3, [r7, #15]
 8020f4a:	687b      	ldr	r3, [r7, #4]
 8020f4c:	011b      	lsls	r3, r3, #4
 8020f4e:	607b      	str	r3, [r7, #4]
 8020f50:	687b      	ldr	r3, [r7, #4]
 8020f52:	0f1b      	lsrs	r3, r3, #28
 8020f54:	4a06      	ldr	r2, [pc, #24]	; (8020f70 <SEQ_BitPosition+0x6c>)
 8020f56:	5cd2      	ldrb	r2, [r2, r3]
 8020f58:	7bfb      	ldrb	r3, [r7, #15]
 8020f5a:	4413      	add	r3, r2
 8020f5c:	73fb      	strb	r3, [r7, #15]
 8020f5e:	7bfb      	ldrb	r3, [r7, #15]
 8020f60:	f1c3 031f 	rsb	r3, r3, #31
 8020f64:	b2db      	uxtb	r3, r3
 8020f66:	4618      	mov	r0, r3
 8020f68:	3714      	adds	r7, #20
 8020f6a:	46bd      	mov	sp, r7
 8020f6c:	bc80      	pop	{r7}
 8020f6e:	4770      	bx	lr
 8020f70:	0802696c 	.word	0x0802696c

08020f74 <UTIL_TIMER_Init>:
 8020f74:	b580      	push	{r7, lr}
 8020f76:	af00      	add	r7, sp, #0
 8020f78:	4b04      	ldr	r3, [pc, #16]	; (8020f8c <UTIL_TIMER_Init+0x18>)
 8020f7a:	2200      	movs	r2, #0
 8020f7c:	601a      	str	r2, [r3, #0]
 8020f7e:	4b04      	ldr	r3, [pc, #16]	; (8020f90 <UTIL_TIMER_Init+0x1c>)
 8020f80:	681b      	ldr	r3, [r3, #0]
 8020f82:	4798      	blx	r3
 8020f84:	4603      	mov	r3, r0
 8020f86:	4618      	mov	r0, r3
 8020f88:	bd80      	pop	{r7, pc}
 8020f8a:	bf00      	nop
 8020f8c:	20001a00 	.word	0x20001a00
 8020f90:	0802635c 	.word	0x0802635c

08020f94 <UTIL_TIMER_Create>:
 8020f94:	b580      	push	{r7, lr}
 8020f96:	b084      	sub	sp, #16
 8020f98:	af00      	add	r7, sp, #0
 8020f9a:	60f8      	str	r0, [r7, #12]
 8020f9c:	60b9      	str	r1, [r7, #8]
 8020f9e:	603b      	str	r3, [r7, #0]
 8020fa0:	4613      	mov	r3, r2
 8020fa2:	71fb      	strb	r3, [r7, #7]
 8020fa4:	68fb      	ldr	r3, [r7, #12]
 8020fa6:	2b00      	cmp	r3, #0
 8020fa8:	d023      	beq.n	8020ff2 <UTIL_TIMER_Create+0x5e>
 8020faa:	683b      	ldr	r3, [r7, #0]
 8020fac:	2b00      	cmp	r3, #0
 8020fae:	d020      	beq.n	8020ff2 <UTIL_TIMER_Create+0x5e>
 8020fb0:	68fb      	ldr	r3, [r7, #12]
 8020fb2:	2200      	movs	r2, #0
 8020fb4:	601a      	str	r2, [r3, #0]
 8020fb6:	4b11      	ldr	r3, [pc, #68]	; (8020ffc <UTIL_TIMER_Create+0x68>)
 8020fb8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8020fba:	68b8      	ldr	r0, [r7, #8]
 8020fbc:	4798      	blx	r3
 8020fbe:	4602      	mov	r2, r0
 8020fc0:	68fb      	ldr	r3, [r7, #12]
 8020fc2:	605a      	str	r2, [r3, #4]
 8020fc4:	68fb      	ldr	r3, [r7, #12]
 8020fc6:	2200      	movs	r2, #0
 8020fc8:	721a      	strb	r2, [r3, #8]
 8020fca:	68fb      	ldr	r3, [r7, #12]
 8020fcc:	2200      	movs	r2, #0
 8020fce:	725a      	strb	r2, [r3, #9]
 8020fd0:	68fb      	ldr	r3, [r7, #12]
 8020fd2:	2200      	movs	r2, #0
 8020fd4:	729a      	strb	r2, [r3, #10]
 8020fd6:	68fb      	ldr	r3, [r7, #12]
 8020fd8:	683a      	ldr	r2, [r7, #0]
 8020fda:	60da      	str	r2, [r3, #12]
 8020fdc:	68fb      	ldr	r3, [r7, #12]
 8020fde:	69ba      	ldr	r2, [r7, #24]
 8020fe0:	611a      	str	r2, [r3, #16]
 8020fe2:	68fb      	ldr	r3, [r7, #12]
 8020fe4:	79fa      	ldrb	r2, [r7, #7]
 8020fe6:	72da      	strb	r2, [r3, #11]
 8020fe8:	68fb      	ldr	r3, [r7, #12]
 8020fea:	2200      	movs	r2, #0
 8020fec:	615a      	str	r2, [r3, #20]
 8020fee:	2300      	movs	r3, #0
 8020ff0:	e000      	b.n	8020ff4 <UTIL_TIMER_Create+0x60>
 8020ff2:	2301      	movs	r3, #1
 8020ff4:	4618      	mov	r0, r3
 8020ff6:	3710      	adds	r7, #16
 8020ff8:	46bd      	mov	sp, r7
 8020ffa:	bd80      	pop	{r7, pc}
 8020ffc:	0802635c 	.word	0x0802635c

08021000 <UTIL_TIMER_Start>:
 8021000:	b580      	push	{r7, lr}
 8021002:	b08a      	sub	sp, #40	; 0x28
 8021004:	af00      	add	r7, sp, #0
 8021006:	6078      	str	r0, [r7, #4]
 8021008:	2300      	movs	r3, #0
 802100a:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 802100e:	687b      	ldr	r3, [r7, #4]
 8021010:	2b00      	cmp	r3, #0
 8021012:	d056      	beq.n	80210c2 <UTIL_TIMER_Start+0xc2>
 8021014:	6878      	ldr	r0, [r7, #4]
 8021016:	f000 f9a9 	bl	802136c <TimerExists>
 802101a:	4603      	mov	r3, r0
 802101c:	f083 0301 	eor.w	r3, r3, #1
 8021020:	b2db      	uxtb	r3, r3
 8021022:	2b00      	cmp	r3, #0
 8021024:	d04d      	beq.n	80210c2 <UTIL_TIMER_Start+0xc2>
 8021026:	687b      	ldr	r3, [r7, #4]
 8021028:	7a5b      	ldrb	r3, [r3, #9]
 802102a:	2b00      	cmp	r3, #0
 802102c:	d149      	bne.n	80210c2 <UTIL_TIMER_Start+0xc2>
 802102e:	f3ef 8310 	mrs	r3, PRIMASK
 8021032:	613b      	str	r3, [r7, #16]
 8021034:	693b      	ldr	r3, [r7, #16]
 8021036:	61fb      	str	r3, [r7, #28]
 8021038:	b672      	cpsid	i
 802103a:	bf00      	nop
 802103c:	687b      	ldr	r3, [r7, #4]
 802103e:	685b      	ldr	r3, [r3, #4]
 8021040:	623b      	str	r3, [r7, #32]
 8021042:	4b24      	ldr	r3, [pc, #144]	; (80210d4 <UTIL_TIMER_Start+0xd4>)
 8021044:	6a1b      	ldr	r3, [r3, #32]
 8021046:	4798      	blx	r3
 8021048:	61b8      	str	r0, [r7, #24]
 802104a:	6a3a      	ldr	r2, [r7, #32]
 802104c:	69bb      	ldr	r3, [r7, #24]
 802104e:	429a      	cmp	r2, r3
 8021050:	d201      	bcs.n	8021056 <UTIL_TIMER_Start+0x56>
 8021052:	69bb      	ldr	r3, [r7, #24]
 8021054:	623b      	str	r3, [r7, #32]
 8021056:	687b      	ldr	r3, [r7, #4]
 8021058:	6a3a      	ldr	r2, [r7, #32]
 802105a:	601a      	str	r2, [r3, #0]
 802105c:	687b      	ldr	r3, [r7, #4]
 802105e:	2200      	movs	r2, #0
 8021060:	721a      	strb	r2, [r3, #8]
 8021062:	687b      	ldr	r3, [r7, #4]
 8021064:	2201      	movs	r2, #1
 8021066:	725a      	strb	r2, [r3, #9]
 8021068:	687b      	ldr	r3, [r7, #4]
 802106a:	2200      	movs	r2, #0
 802106c:	729a      	strb	r2, [r3, #10]
 802106e:	4b1a      	ldr	r3, [pc, #104]	; (80210d8 <UTIL_TIMER_Start+0xd8>)
 8021070:	681b      	ldr	r3, [r3, #0]
 8021072:	2b00      	cmp	r3, #0
 8021074:	d106      	bne.n	8021084 <UTIL_TIMER_Start+0x84>
 8021076:	4b17      	ldr	r3, [pc, #92]	; (80210d4 <UTIL_TIMER_Start+0xd4>)
 8021078:	691b      	ldr	r3, [r3, #16]
 802107a:	4798      	blx	r3
 802107c:	6878      	ldr	r0, [r7, #4]
 802107e:	f000 f9eb 	bl	8021458 <TimerInsertNewHeadTimer>
 8021082:	e017      	b.n	80210b4 <UTIL_TIMER_Start+0xb4>
 8021084:	4b13      	ldr	r3, [pc, #76]	; (80210d4 <UTIL_TIMER_Start+0xd4>)
 8021086:	699b      	ldr	r3, [r3, #24]
 8021088:	4798      	blx	r3
 802108a:	6178      	str	r0, [r7, #20]
 802108c:	687b      	ldr	r3, [r7, #4]
 802108e:	681a      	ldr	r2, [r3, #0]
 8021090:	697b      	ldr	r3, [r7, #20]
 8021092:	441a      	add	r2, r3
 8021094:	687b      	ldr	r3, [r7, #4]
 8021096:	601a      	str	r2, [r3, #0]
 8021098:	687b      	ldr	r3, [r7, #4]
 802109a:	681a      	ldr	r2, [r3, #0]
 802109c:	4b0e      	ldr	r3, [pc, #56]	; (80210d8 <UTIL_TIMER_Start+0xd8>)
 802109e:	681b      	ldr	r3, [r3, #0]
 80210a0:	681b      	ldr	r3, [r3, #0]
 80210a2:	429a      	cmp	r2, r3
 80210a4:	d203      	bcs.n	80210ae <UTIL_TIMER_Start+0xae>
 80210a6:	6878      	ldr	r0, [r7, #4]
 80210a8:	f000 f9d6 	bl	8021458 <TimerInsertNewHeadTimer>
 80210ac:	e002      	b.n	80210b4 <UTIL_TIMER_Start+0xb4>
 80210ae:	6878      	ldr	r0, [r7, #4]
 80210b0:	f000 f9a2 	bl	80213f8 <TimerInsertTimer>
 80210b4:	69fb      	ldr	r3, [r7, #28]
 80210b6:	60fb      	str	r3, [r7, #12]
 80210b8:	68fb      	ldr	r3, [r7, #12]
 80210ba:	f383 8810 	msr	PRIMASK, r3
 80210be:	bf00      	nop
 80210c0:	e002      	b.n	80210c8 <UTIL_TIMER_Start+0xc8>
 80210c2:	2301      	movs	r3, #1
 80210c4:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 80210c8:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 80210cc:	4618      	mov	r0, r3
 80210ce:	3728      	adds	r7, #40	; 0x28
 80210d0:	46bd      	mov	sp, r7
 80210d2:	bd80      	pop	{r7, pc}
 80210d4:	0802635c 	.word	0x0802635c
 80210d8:	20001a00 	.word	0x20001a00

080210dc <UTIL_TIMER_Stop>:
 80210dc:	b580      	push	{r7, lr}
 80210de:	b088      	sub	sp, #32
 80210e0:	af00      	add	r7, sp, #0
 80210e2:	6078      	str	r0, [r7, #4]
 80210e4:	2300      	movs	r3, #0
 80210e6:	77fb      	strb	r3, [r7, #31]
 80210e8:	687b      	ldr	r3, [r7, #4]
 80210ea:	2b00      	cmp	r3, #0
 80210ec:	d05b      	beq.n	80211a6 <UTIL_TIMER_Stop+0xca>
 80210ee:	f3ef 8310 	mrs	r3, PRIMASK
 80210f2:	60fb      	str	r3, [r7, #12]
 80210f4:	68fb      	ldr	r3, [r7, #12]
 80210f6:	613b      	str	r3, [r7, #16]
 80210f8:	b672      	cpsid	i
 80210fa:	bf00      	nop
 80210fc:	4b2d      	ldr	r3, [pc, #180]	; (80211b4 <UTIL_TIMER_Stop+0xd8>)
 80210fe:	681b      	ldr	r3, [r3, #0]
 8021100:	61bb      	str	r3, [r7, #24]
 8021102:	4b2c      	ldr	r3, [pc, #176]	; (80211b4 <UTIL_TIMER_Stop+0xd8>)
 8021104:	681b      	ldr	r3, [r3, #0]
 8021106:	617b      	str	r3, [r7, #20]
 8021108:	687b      	ldr	r3, [r7, #4]
 802110a:	2201      	movs	r2, #1
 802110c:	729a      	strb	r2, [r3, #10]
 802110e:	4b29      	ldr	r3, [pc, #164]	; (80211b4 <UTIL_TIMER_Stop+0xd8>)
 8021110:	681b      	ldr	r3, [r3, #0]
 8021112:	2b00      	cmp	r3, #0
 8021114:	d041      	beq.n	802119a <UTIL_TIMER_Stop+0xbe>
 8021116:	687b      	ldr	r3, [r7, #4]
 8021118:	2200      	movs	r2, #0
 802111a:	725a      	strb	r2, [r3, #9]
 802111c:	4b25      	ldr	r3, [pc, #148]	; (80211b4 <UTIL_TIMER_Stop+0xd8>)
 802111e:	681b      	ldr	r3, [r3, #0]
 8021120:	687a      	ldr	r2, [r7, #4]
 8021122:	429a      	cmp	r2, r3
 8021124:	d134      	bne.n	8021190 <UTIL_TIMER_Stop+0xb4>
 8021126:	4b23      	ldr	r3, [pc, #140]	; (80211b4 <UTIL_TIMER_Stop+0xd8>)
 8021128:	681b      	ldr	r3, [r3, #0]
 802112a:	2200      	movs	r2, #0
 802112c:	721a      	strb	r2, [r3, #8]
 802112e:	4b21      	ldr	r3, [pc, #132]	; (80211b4 <UTIL_TIMER_Stop+0xd8>)
 8021130:	681b      	ldr	r3, [r3, #0]
 8021132:	695b      	ldr	r3, [r3, #20]
 8021134:	2b00      	cmp	r3, #0
 8021136:	d00a      	beq.n	802114e <UTIL_TIMER_Stop+0x72>
 8021138:	4b1e      	ldr	r3, [pc, #120]	; (80211b4 <UTIL_TIMER_Stop+0xd8>)
 802113a:	681b      	ldr	r3, [r3, #0]
 802113c:	695b      	ldr	r3, [r3, #20]
 802113e:	4a1d      	ldr	r2, [pc, #116]	; (80211b4 <UTIL_TIMER_Stop+0xd8>)
 8021140:	6013      	str	r3, [r2, #0]
 8021142:	4b1c      	ldr	r3, [pc, #112]	; (80211b4 <UTIL_TIMER_Stop+0xd8>)
 8021144:	681b      	ldr	r3, [r3, #0]
 8021146:	4618      	mov	r0, r3
 8021148:	f000 f92c 	bl	80213a4 <TimerSetTimeout>
 802114c:	e023      	b.n	8021196 <UTIL_TIMER_Stop+0xba>
 802114e:	4b1a      	ldr	r3, [pc, #104]	; (80211b8 <UTIL_TIMER_Stop+0xdc>)
 8021150:	68db      	ldr	r3, [r3, #12]
 8021152:	4798      	blx	r3
 8021154:	4b17      	ldr	r3, [pc, #92]	; (80211b4 <UTIL_TIMER_Stop+0xd8>)
 8021156:	2200      	movs	r2, #0
 8021158:	601a      	str	r2, [r3, #0]
 802115a:	e01c      	b.n	8021196 <UTIL_TIMER_Stop+0xba>
 802115c:	697a      	ldr	r2, [r7, #20]
 802115e:	687b      	ldr	r3, [r7, #4]
 8021160:	429a      	cmp	r2, r3
 8021162:	d110      	bne.n	8021186 <UTIL_TIMER_Stop+0xaa>
 8021164:	697b      	ldr	r3, [r7, #20]
 8021166:	695b      	ldr	r3, [r3, #20]
 8021168:	2b00      	cmp	r3, #0
 802116a:	d006      	beq.n	802117a <UTIL_TIMER_Stop+0x9e>
 802116c:	697b      	ldr	r3, [r7, #20]
 802116e:	695b      	ldr	r3, [r3, #20]
 8021170:	617b      	str	r3, [r7, #20]
 8021172:	69bb      	ldr	r3, [r7, #24]
 8021174:	697a      	ldr	r2, [r7, #20]
 8021176:	615a      	str	r2, [r3, #20]
 8021178:	e00d      	b.n	8021196 <UTIL_TIMER_Stop+0xba>
 802117a:	2300      	movs	r3, #0
 802117c:	617b      	str	r3, [r7, #20]
 802117e:	69bb      	ldr	r3, [r7, #24]
 8021180:	697a      	ldr	r2, [r7, #20]
 8021182:	615a      	str	r2, [r3, #20]
 8021184:	e007      	b.n	8021196 <UTIL_TIMER_Stop+0xba>
 8021186:	697b      	ldr	r3, [r7, #20]
 8021188:	61bb      	str	r3, [r7, #24]
 802118a:	697b      	ldr	r3, [r7, #20]
 802118c:	695b      	ldr	r3, [r3, #20]
 802118e:	617b      	str	r3, [r7, #20]
 8021190:	697b      	ldr	r3, [r7, #20]
 8021192:	2b00      	cmp	r3, #0
 8021194:	d1e2      	bne.n	802115c <UTIL_TIMER_Stop+0x80>
 8021196:	2300      	movs	r3, #0
 8021198:	77fb      	strb	r3, [r7, #31]
 802119a:	693b      	ldr	r3, [r7, #16]
 802119c:	60bb      	str	r3, [r7, #8]
 802119e:	68bb      	ldr	r3, [r7, #8]
 80211a0:	f383 8810 	msr	PRIMASK, r3
 80211a4:	e001      	b.n	80211aa <UTIL_TIMER_Stop+0xce>
 80211a6:	2301      	movs	r3, #1
 80211a8:	77fb      	strb	r3, [r7, #31]
 80211aa:	7ffb      	ldrb	r3, [r7, #31]
 80211ac:	4618      	mov	r0, r3
 80211ae:	3720      	adds	r7, #32
 80211b0:	46bd      	mov	sp, r7
 80211b2:	bd80      	pop	{r7, pc}
 80211b4:	20001a00 	.word	0x20001a00
 80211b8:	0802635c 	.word	0x0802635c

080211bc <UTIL_TIMER_SetPeriod>:
 80211bc:	b580      	push	{r7, lr}
 80211be:	b084      	sub	sp, #16
 80211c0:	af00      	add	r7, sp, #0
 80211c2:	6078      	str	r0, [r7, #4]
 80211c4:	6039      	str	r1, [r7, #0]
 80211c6:	2300      	movs	r3, #0
 80211c8:	73fb      	strb	r3, [r7, #15]
 80211ca:	687b      	ldr	r3, [r7, #4]
 80211cc:	2b00      	cmp	r3, #0
 80211ce:	d102      	bne.n	80211d6 <UTIL_TIMER_SetPeriod+0x1a>
 80211d0:	2301      	movs	r3, #1
 80211d2:	73fb      	strb	r3, [r7, #15]
 80211d4:	e014      	b.n	8021200 <UTIL_TIMER_SetPeriod+0x44>
 80211d6:	4b0d      	ldr	r3, [pc, #52]	; (802120c <UTIL_TIMER_SetPeriod+0x50>)
 80211d8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80211da:	6838      	ldr	r0, [r7, #0]
 80211dc:	4798      	blx	r3
 80211de:	4602      	mov	r2, r0
 80211e0:	687b      	ldr	r3, [r7, #4]
 80211e2:	605a      	str	r2, [r3, #4]
 80211e4:	6878      	ldr	r0, [r7, #4]
 80211e6:	f000 f8c1 	bl	802136c <TimerExists>
 80211ea:	4603      	mov	r3, r0
 80211ec:	2b00      	cmp	r3, #0
 80211ee:	d007      	beq.n	8021200 <UTIL_TIMER_SetPeriod+0x44>
 80211f0:	6878      	ldr	r0, [r7, #4]
 80211f2:	f7ff ff73 	bl	80210dc <UTIL_TIMER_Stop>
 80211f6:	6878      	ldr	r0, [r7, #4]
 80211f8:	f7ff ff02 	bl	8021000 <UTIL_TIMER_Start>
 80211fc:	4603      	mov	r3, r0
 80211fe:	73fb      	strb	r3, [r7, #15]
 8021200:	7bfb      	ldrb	r3, [r7, #15]
 8021202:	4618      	mov	r0, r3
 8021204:	3710      	adds	r7, #16
 8021206:	46bd      	mov	sp, r7
 8021208:	bd80      	pop	{r7, pc}
 802120a:	bf00      	nop
 802120c:	0802635c 	.word	0x0802635c

08021210 <UTIL_TIMER_IRQ_Handler>:
 8021210:	b590      	push	{r4, r7, lr}
 8021212:	b089      	sub	sp, #36	; 0x24
 8021214:	af00      	add	r7, sp, #0
 8021216:	f3ef 8310 	mrs	r3, PRIMASK
 802121a:	60bb      	str	r3, [r7, #8]
 802121c:	68bb      	ldr	r3, [r7, #8]
 802121e:	61bb      	str	r3, [r7, #24]
 8021220:	b672      	cpsid	i
 8021222:	bf00      	nop
 8021224:	4b38      	ldr	r3, [pc, #224]	; (8021308 <UTIL_TIMER_IRQ_Handler+0xf8>)
 8021226:	695b      	ldr	r3, [r3, #20]
 8021228:	4798      	blx	r3
 802122a:	6178      	str	r0, [r7, #20]
 802122c:	4b36      	ldr	r3, [pc, #216]	; (8021308 <UTIL_TIMER_IRQ_Handler+0xf8>)
 802122e:	691b      	ldr	r3, [r3, #16]
 8021230:	4798      	blx	r3
 8021232:	6138      	str	r0, [r7, #16]
 8021234:	693a      	ldr	r2, [r7, #16]
 8021236:	697b      	ldr	r3, [r7, #20]
 8021238:	1ad3      	subs	r3, r2, r3
 802123a:	60fb      	str	r3, [r7, #12]
 802123c:	4b33      	ldr	r3, [pc, #204]	; (802130c <UTIL_TIMER_IRQ_Handler+0xfc>)
 802123e:	681b      	ldr	r3, [r3, #0]
 8021240:	2b00      	cmp	r3, #0
 8021242:	d037      	beq.n	80212b4 <UTIL_TIMER_IRQ_Handler+0xa4>
 8021244:	4b31      	ldr	r3, [pc, #196]	; (802130c <UTIL_TIMER_IRQ_Handler+0xfc>)
 8021246:	681b      	ldr	r3, [r3, #0]
 8021248:	61fb      	str	r3, [r7, #28]
 802124a:	69fb      	ldr	r3, [r7, #28]
 802124c:	681b      	ldr	r3, [r3, #0]
 802124e:	68fa      	ldr	r2, [r7, #12]
 8021250:	429a      	cmp	r2, r3
 8021252:	d206      	bcs.n	8021262 <UTIL_TIMER_IRQ_Handler+0x52>
 8021254:	69fb      	ldr	r3, [r7, #28]
 8021256:	681a      	ldr	r2, [r3, #0]
 8021258:	68fb      	ldr	r3, [r7, #12]
 802125a:	1ad2      	subs	r2, r2, r3
 802125c:	69fb      	ldr	r3, [r7, #28]
 802125e:	601a      	str	r2, [r3, #0]
 8021260:	e002      	b.n	8021268 <UTIL_TIMER_IRQ_Handler+0x58>
 8021262:	69fb      	ldr	r3, [r7, #28]
 8021264:	2200      	movs	r2, #0
 8021266:	601a      	str	r2, [r3, #0]
 8021268:	69fb      	ldr	r3, [r7, #28]
 802126a:	695b      	ldr	r3, [r3, #20]
 802126c:	61fb      	str	r3, [r7, #28]
 802126e:	69fb      	ldr	r3, [r7, #28]
 8021270:	2b00      	cmp	r3, #0
 8021272:	d1ea      	bne.n	802124a <UTIL_TIMER_IRQ_Handler+0x3a>
 8021274:	e01e      	b.n	80212b4 <UTIL_TIMER_IRQ_Handler+0xa4>
 8021276:	4b25      	ldr	r3, [pc, #148]	; (802130c <UTIL_TIMER_IRQ_Handler+0xfc>)
 8021278:	681b      	ldr	r3, [r3, #0]
 802127a:	61fb      	str	r3, [r7, #28]
 802127c:	4b23      	ldr	r3, [pc, #140]	; (802130c <UTIL_TIMER_IRQ_Handler+0xfc>)
 802127e:	681b      	ldr	r3, [r3, #0]
 8021280:	695b      	ldr	r3, [r3, #20]
 8021282:	4a22      	ldr	r2, [pc, #136]	; (802130c <UTIL_TIMER_IRQ_Handler+0xfc>)
 8021284:	6013      	str	r3, [r2, #0]
 8021286:	69fb      	ldr	r3, [r7, #28]
 8021288:	2200      	movs	r2, #0
 802128a:	721a      	strb	r2, [r3, #8]
 802128c:	69fb      	ldr	r3, [r7, #28]
 802128e:	2200      	movs	r2, #0
 8021290:	725a      	strb	r2, [r3, #9]
 8021292:	69fb      	ldr	r3, [r7, #28]
 8021294:	68db      	ldr	r3, [r3, #12]
 8021296:	69fa      	ldr	r2, [r7, #28]
 8021298:	6912      	ldr	r2, [r2, #16]
 802129a:	4610      	mov	r0, r2
 802129c:	4798      	blx	r3
 802129e:	69fb      	ldr	r3, [r7, #28]
 80212a0:	7adb      	ldrb	r3, [r3, #11]
 80212a2:	2b01      	cmp	r3, #1
 80212a4:	d106      	bne.n	80212b4 <UTIL_TIMER_IRQ_Handler+0xa4>
 80212a6:	69fb      	ldr	r3, [r7, #28]
 80212a8:	7a9b      	ldrb	r3, [r3, #10]
 80212aa:	2b00      	cmp	r3, #0
 80212ac:	d102      	bne.n	80212b4 <UTIL_TIMER_IRQ_Handler+0xa4>
 80212ae:	69f8      	ldr	r0, [r7, #28]
 80212b0:	f7ff fea6 	bl	8021000 <UTIL_TIMER_Start>
 80212b4:	4b15      	ldr	r3, [pc, #84]	; (802130c <UTIL_TIMER_IRQ_Handler+0xfc>)
 80212b6:	681b      	ldr	r3, [r3, #0]
 80212b8:	2b00      	cmp	r3, #0
 80212ba:	d00d      	beq.n	80212d8 <UTIL_TIMER_IRQ_Handler+0xc8>
 80212bc:	4b13      	ldr	r3, [pc, #76]	; (802130c <UTIL_TIMER_IRQ_Handler+0xfc>)
 80212be:	681b      	ldr	r3, [r3, #0]
 80212c0:	681b      	ldr	r3, [r3, #0]
 80212c2:	2b00      	cmp	r3, #0
 80212c4:	d0d7      	beq.n	8021276 <UTIL_TIMER_IRQ_Handler+0x66>
 80212c6:	4b11      	ldr	r3, [pc, #68]	; (802130c <UTIL_TIMER_IRQ_Handler+0xfc>)
 80212c8:	681b      	ldr	r3, [r3, #0]
 80212ca:	681c      	ldr	r4, [r3, #0]
 80212cc:	4b0e      	ldr	r3, [pc, #56]	; (8021308 <UTIL_TIMER_IRQ_Handler+0xf8>)
 80212ce:	699b      	ldr	r3, [r3, #24]
 80212d0:	4798      	blx	r3
 80212d2:	4603      	mov	r3, r0
 80212d4:	429c      	cmp	r4, r3
 80212d6:	d3ce      	bcc.n	8021276 <UTIL_TIMER_IRQ_Handler+0x66>
 80212d8:	4b0c      	ldr	r3, [pc, #48]	; (802130c <UTIL_TIMER_IRQ_Handler+0xfc>)
 80212da:	681b      	ldr	r3, [r3, #0]
 80212dc:	2b00      	cmp	r3, #0
 80212de:	d009      	beq.n	80212f4 <UTIL_TIMER_IRQ_Handler+0xe4>
 80212e0:	4b0a      	ldr	r3, [pc, #40]	; (802130c <UTIL_TIMER_IRQ_Handler+0xfc>)
 80212e2:	681b      	ldr	r3, [r3, #0]
 80212e4:	7a1b      	ldrb	r3, [r3, #8]
 80212e6:	2b00      	cmp	r3, #0
 80212e8:	d104      	bne.n	80212f4 <UTIL_TIMER_IRQ_Handler+0xe4>
 80212ea:	4b08      	ldr	r3, [pc, #32]	; (802130c <UTIL_TIMER_IRQ_Handler+0xfc>)
 80212ec:	681b      	ldr	r3, [r3, #0]
 80212ee:	4618      	mov	r0, r3
 80212f0:	f000 f858 	bl	80213a4 <TimerSetTimeout>
 80212f4:	69bb      	ldr	r3, [r7, #24]
 80212f6:	607b      	str	r3, [r7, #4]
 80212f8:	687b      	ldr	r3, [r7, #4]
 80212fa:	f383 8810 	msr	PRIMASK, r3
 80212fe:	bf00      	nop
 8021300:	bf00      	nop
 8021302:	3724      	adds	r7, #36	; 0x24
 8021304:	46bd      	mov	sp, r7
 8021306:	bd90      	pop	{r4, r7, pc}
 8021308:	0802635c 	.word	0x0802635c
 802130c:	20001a00 	.word	0x20001a00

08021310 <UTIL_TIMER_GetCurrentTime>:
 8021310:	b580      	push	{r7, lr}
 8021312:	b082      	sub	sp, #8
 8021314:	af00      	add	r7, sp, #0
 8021316:	4b06      	ldr	r3, [pc, #24]	; (8021330 <UTIL_TIMER_GetCurrentTime+0x20>)
 8021318:	69db      	ldr	r3, [r3, #28]
 802131a:	4798      	blx	r3
 802131c:	6078      	str	r0, [r7, #4]
 802131e:	4b04      	ldr	r3, [pc, #16]	; (8021330 <UTIL_TIMER_GetCurrentTime+0x20>)
 8021320:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8021322:	6878      	ldr	r0, [r7, #4]
 8021324:	4798      	blx	r3
 8021326:	4603      	mov	r3, r0
 8021328:	4618      	mov	r0, r3
 802132a:	3708      	adds	r7, #8
 802132c:	46bd      	mov	sp, r7
 802132e:	bd80      	pop	{r7, pc}
 8021330:	0802635c 	.word	0x0802635c

08021334 <UTIL_TIMER_GetElapsedTime>:
 8021334:	b580      	push	{r7, lr}
 8021336:	b084      	sub	sp, #16
 8021338:	af00      	add	r7, sp, #0
 802133a:	6078      	str	r0, [r7, #4]
 802133c:	4b0a      	ldr	r3, [pc, #40]	; (8021368 <UTIL_TIMER_GetElapsedTime+0x34>)
 802133e:	69db      	ldr	r3, [r3, #28]
 8021340:	4798      	blx	r3
 8021342:	60f8      	str	r0, [r7, #12]
 8021344:	4b08      	ldr	r3, [pc, #32]	; (8021368 <UTIL_TIMER_GetElapsedTime+0x34>)
 8021346:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8021348:	6878      	ldr	r0, [r7, #4]
 802134a:	4798      	blx	r3
 802134c:	60b8      	str	r0, [r7, #8]
 802134e:	4b06      	ldr	r3, [pc, #24]	; (8021368 <UTIL_TIMER_GetElapsedTime+0x34>)
 8021350:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8021352:	68f9      	ldr	r1, [r7, #12]
 8021354:	68ba      	ldr	r2, [r7, #8]
 8021356:	1a8a      	subs	r2, r1, r2
 8021358:	4610      	mov	r0, r2
 802135a:	4798      	blx	r3
 802135c:	4603      	mov	r3, r0
 802135e:	4618      	mov	r0, r3
 8021360:	3710      	adds	r7, #16
 8021362:	46bd      	mov	sp, r7
 8021364:	bd80      	pop	{r7, pc}
 8021366:	bf00      	nop
 8021368:	0802635c 	.word	0x0802635c

0802136c <TimerExists>:
 802136c:	b480      	push	{r7}
 802136e:	b085      	sub	sp, #20
 8021370:	af00      	add	r7, sp, #0
 8021372:	6078      	str	r0, [r7, #4]
 8021374:	4b0a      	ldr	r3, [pc, #40]	; (80213a0 <TimerExists+0x34>)
 8021376:	681b      	ldr	r3, [r3, #0]
 8021378:	60fb      	str	r3, [r7, #12]
 802137a:	e008      	b.n	802138e <TimerExists+0x22>
 802137c:	68fa      	ldr	r2, [r7, #12]
 802137e:	687b      	ldr	r3, [r7, #4]
 8021380:	429a      	cmp	r2, r3
 8021382:	d101      	bne.n	8021388 <TimerExists+0x1c>
 8021384:	2301      	movs	r3, #1
 8021386:	e006      	b.n	8021396 <TimerExists+0x2a>
 8021388:	68fb      	ldr	r3, [r7, #12]
 802138a:	695b      	ldr	r3, [r3, #20]
 802138c:	60fb      	str	r3, [r7, #12]
 802138e:	68fb      	ldr	r3, [r7, #12]
 8021390:	2b00      	cmp	r3, #0
 8021392:	d1f3      	bne.n	802137c <TimerExists+0x10>
 8021394:	2300      	movs	r3, #0
 8021396:	4618      	mov	r0, r3
 8021398:	3714      	adds	r7, #20
 802139a:	46bd      	mov	sp, r7
 802139c:	bc80      	pop	{r7}
 802139e:	4770      	bx	lr
 80213a0:	20001a00 	.word	0x20001a00

080213a4 <TimerSetTimeout>:
 80213a4:	b590      	push	{r4, r7, lr}
 80213a6:	b085      	sub	sp, #20
 80213a8:	af00      	add	r7, sp, #0
 80213aa:	6078      	str	r0, [r7, #4]
 80213ac:	4b11      	ldr	r3, [pc, #68]	; (80213f4 <TimerSetTimeout+0x50>)
 80213ae:	6a1b      	ldr	r3, [r3, #32]
 80213b0:	4798      	blx	r3
 80213b2:	60f8      	str	r0, [r7, #12]
 80213b4:	687b      	ldr	r3, [r7, #4]
 80213b6:	2201      	movs	r2, #1
 80213b8:	721a      	strb	r2, [r3, #8]
 80213ba:	687b      	ldr	r3, [r7, #4]
 80213bc:	681c      	ldr	r4, [r3, #0]
 80213be:	4b0d      	ldr	r3, [pc, #52]	; (80213f4 <TimerSetTimeout+0x50>)
 80213c0:	699b      	ldr	r3, [r3, #24]
 80213c2:	4798      	blx	r3
 80213c4:	4602      	mov	r2, r0
 80213c6:	68fb      	ldr	r3, [r7, #12]
 80213c8:	4413      	add	r3, r2
 80213ca:	429c      	cmp	r4, r3
 80213cc:	d207      	bcs.n	80213de <TimerSetTimeout+0x3a>
 80213ce:	4b09      	ldr	r3, [pc, #36]	; (80213f4 <TimerSetTimeout+0x50>)
 80213d0:	699b      	ldr	r3, [r3, #24]
 80213d2:	4798      	blx	r3
 80213d4:	4602      	mov	r2, r0
 80213d6:	68fb      	ldr	r3, [r7, #12]
 80213d8:	441a      	add	r2, r3
 80213da:	687b      	ldr	r3, [r7, #4]
 80213dc:	601a      	str	r2, [r3, #0]
 80213de:	4b05      	ldr	r3, [pc, #20]	; (80213f4 <TimerSetTimeout+0x50>)
 80213e0:	689b      	ldr	r3, [r3, #8]
 80213e2:	687a      	ldr	r2, [r7, #4]
 80213e4:	6812      	ldr	r2, [r2, #0]
 80213e6:	4610      	mov	r0, r2
 80213e8:	4798      	blx	r3
 80213ea:	bf00      	nop
 80213ec:	3714      	adds	r7, #20
 80213ee:	46bd      	mov	sp, r7
 80213f0:	bd90      	pop	{r4, r7, pc}
 80213f2:	bf00      	nop
 80213f4:	0802635c 	.word	0x0802635c

080213f8 <TimerInsertTimer>:
 80213f8:	b480      	push	{r7}
 80213fa:	b085      	sub	sp, #20
 80213fc:	af00      	add	r7, sp, #0
 80213fe:	6078      	str	r0, [r7, #4]
 8021400:	4b14      	ldr	r3, [pc, #80]	; (8021454 <TimerInsertTimer+0x5c>)
 8021402:	681b      	ldr	r3, [r3, #0]
 8021404:	60fb      	str	r3, [r7, #12]
 8021406:	4b13      	ldr	r3, [pc, #76]	; (8021454 <TimerInsertTimer+0x5c>)
 8021408:	681b      	ldr	r3, [r3, #0]
 802140a:	695b      	ldr	r3, [r3, #20]
 802140c:	60bb      	str	r3, [r7, #8]
 802140e:	e012      	b.n	8021436 <TimerInsertTimer+0x3e>
 8021410:	687b      	ldr	r3, [r7, #4]
 8021412:	681a      	ldr	r2, [r3, #0]
 8021414:	68bb      	ldr	r3, [r7, #8]
 8021416:	681b      	ldr	r3, [r3, #0]
 8021418:	429a      	cmp	r2, r3
 802141a:	d905      	bls.n	8021428 <TimerInsertTimer+0x30>
 802141c:	68bb      	ldr	r3, [r7, #8]
 802141e:	60fb      	str	r3, [r7, #12]
 8021420:	68bb      	ldr	r3, [r7, #8]
 8021422:	695b      	ldr	r3, [r3, #20]
 8021424:	60bb      	str	r3, [r7, #8]
 8021426:	e006      	b.n	8021436 <TimerInsertTimer+0x3e>
 8021428:	68fb      	ldr	r3, [r7, #12]
 802142a:	687a      	ldr	r2, [r7, #4]
 802142c:	615a      	str	r2, [r3, #20]
 802142e:	687b      	ldr	r3, [r7, #4]
 8021430:	68ba      	ldr	r2, [r7, #8]
 8021432:	615a      	str	r2, [r3, #20]
 8021434:	e009      	b.n	802144a <TimerInsertTimer+0x52>
 8021436:	68fb      	ldr	r3, [r7, #12]
 8021438:	695b      	ldr	r3, [r3, #20]
 802143a:	2b00      	cmp	r3, #0
 802143c:	d1e8      	bne.n	8021410 <TimerInsertTimer+0x18>
 802143e:	68fb      	ldr	r3, [r7, #12]
 8021440:	687a      	ldr	r2, [r7, #4]
 8021442:	615a      	str	r2, [r3, #20]
 8021444:	687b      	ldr	r3, [r7, #4]
 8021446:	2200      	movs	r2, #0
 8021448:	615a      	str	r2, [r3, #20]
 802144a:	3714      	adds	r7, #20
 802144c:	46bd      	mov	sp, r7
 802144e:	bc80      	pop	{r7}
 8021450:	4770      	bx	lr
 8021452:	bf00      	nop
 8021454:	20001a00 	.word	0x20001a00

08021458 <TimerInsertNewHeadTimer>:
 8021458:	b580      	push	{r7, lr}
 802145a:	b084      	sub	sp, #16
 802145c:	af00      	add	r7, sp, #0
 802145e:	6078      	str	r0, [r7, #4]
 8021460:	4b0b      	ldr	r3, [pc, #44]	; (8021490 <TimerInsertNewHeadTimer+0x38>)
 8021462:	681b      	ldr	r3, [r3, #0]
 8021464:	60fb      	str	r3, [r7, #12]
 8021466:	68fb      	ldr	r3, [r7, #12]
 8021468:	2b00      	cmp	r3, #0
 802146a:	d002      	beq.n	8021472 <TimerInsertNewHeadTimer+0x1a>
 802146c:	68fb      	ldr	r3, [r7, #12]
 802146e:	2200      	movs	r2, #0
 8021470:	721a      	strb	r2, [r3, #8]
 8021472:	687b      	ldr	r3, [r7, #4]
 8021474:	68fa      	ldr	r2, [r7, #12]
 8021476:	615a      	str	r2, [r3, #20]
 8021478:	4a05      	ldr	r2, [pc, #20]	; (8021490 <TimerInsertNewHeadTimer+0x38>)
 802147a:	687b      	ldr	r3, [r7, #4]
 802147c:	6013      	str	r3, [r2, #0]
 802147e:	4b04      	ldr	r3, [pc, #16]	; (8021490 <TimerInsertNewHeadTimer+0x38>)
 8021480:	681b      	ldr	r3, [r3, #0]
 8021482:	4618      	mov	r0, r3
 8021484:	f7ff ff8e 	bl	80213a4 <TimerSetTimeout>
 8021488:	bf00      	nop
 802148a:	3710      	adds	r7, #16
 802148c:	46bd      	mov	sp, r7
 802148e:	bd80      	pop	{r7, pc}
 8021490:	20001a00 	.word	0x20001a00

08021494 <UTIL_ADV_TRACE_Init>:
 8021494:	b580      	push	{r7, lr}
 8021496:	af00      	add	r7, sp, #0
 8021498:	2218      	movs	r2, #24
 802149a:	2100      	movs	r1, #0
 802149c:	4807      	ldr	r0, [pc, #28]	; (80214bc <UTIL_ADV_TRACE_Init+0x28>)
 802149e:	f7ff f874 	bl	802058a <UTIL_MEM_set_8>
 80214a2:	f44f 7200 	mov.w	r2, #512	; 0x200
 80214a6:	2100      	movs	r1, #0
 80214a8:	4805      	ldr	r0, [pc, #20]	; (80214c0 <UTIL_ADV_TRACE_Init+0x2c>)
 80214aa:	f7ff f86e 	bl	802058a <UTIL_MEM_set_8>
 80214ae:	4b05      	ldr	r3, [pc, #20]	; (80214c4 <UTIL_ADV_TRACE_Init+0x30>)
 80214b0:	681b      	ldr	r3, [r3, #0]
 80214b2:	4805      	ldr	r0, [pc, #20]	; (80214c8 <UTIL_ADV_TRACE_Init+0x34>)
 80214b4:	4798      	blx	r3
 80214b6:	4603      	mov	r3, r0
 80214b8:	4618      	mov	r0, r3
 80214ba:	bd80      	pop	{r7, pc}
 80214bc:	20001a04 	.word	0x20001a04
 80214c0:	20001a1c 	.word	0x20001a1c
 80214c4:	0802639c 	.word	0x0802639c
 80214c8:	08021715 	.word	0x08021715

080214cc <UTIL_ADV_TRACE_COND_FSend>:
 80214cc:	b408      	push	{r3}
 80214ce:	b580      	push	{r7, lr}
 80214d0:	b08d      	sub	sp, #52	; 0x34
 80214d2:	af00      	add	r7, sp, #0
 80214d4:	60f8      	str	r0, [r7, #12]
 80214d6:	60b9      	str	r1, [r7, #8]
 80214d8:	607a      	str	r2, [r7, #4]
 80214da:	2300      	movs	r3, #0
 80214dc:	82fb      	strh	r3, [r7, #22]
 80214de:	2300      	movs	r3, #0
 80214e0:	85bb      	strh	r3, [r7, #44]	; 0x2c
 80214e2:	4b38      	ldr	r3, [pc, #224]	; (80215c4 <UTIL_ADV_TRACE_COND_FSend+0xf8>)
 80214e4:	7a1b      	ldrb	r3, [r3, #8]
 80214e6:	461a      	mov	r2, r3
 80214e8:	68fb      	ldr	r3, [r7, #12]
 80214ea:	4293      	cmp	r3, r2
 80214ec:	d902      	bls.n	80214f4 <UTIL_ADV_TRACE_COND_FSend+0x28>
 80214ee:	f06f 0304 	mvn.w	r3, #4
 80214f2:	e05f      	b.n	80215b4 <UTIL_ADV_TRACE_COND_FSend+0xe8>
 80214f4:	4b33      	ldr	r3, [pc, #204]	; (80215c4 <UTIL_ADV_TRACE_COND_FSend+0xf8>)
 80214f6:	68da      	ldr	r2, [r3, #12]
 80214f8:	68bb      	ldr	r3, [r7, #8]
 80214fa:	4013      	ands	r3, r2
 80214fc:	68ba      	ldr	r2, [r7, #8]
 80214fe:	429a      	cmp	r2, r3
 8021500:	d002      	beq.n	8021508 <UTIL_ADV_TRACE_COND_FSend+0x3c>
 8021502:	f06f 0305 	mvn.w	r3, #5
 8021506:	e055      	b.n	80215b4 <UTIL_ADV_TRACE_COND_FSend+0xe8>
 8021508:	4b2e      	ldr	r3, [pc, #184]	; (80215c4 <UTIL_ADV_TRACE_COND_FSend+0xf8>)
 802150a:	685b      	ldr	r3, [r3, #4]
 802150c:	2b00      	cmp	r3, #0
 802150e:	d00a      	beq.n	8021526 <UTIL_ADV_TRACE_COND_FSend+0x5a>
 8021510:	687b      	ldr	r3, [r7, #4]
 8021512:	2b00      	cmp	r3, #0
 8021514:	d007      	beq.n	8021526 <UTIL_ADV_TRACE_COND_FSend+0x5a>
 8021516:	4b2b      	ldr	r3, [pc, #172]	; (80215c4 <UTIL_ADV_TRACE_COND_FSend+0xf8>)
 8021518:	685b      	ldr	r3, [r3, #4]
 802151a:	f107 0116 	add.w	r1, r7, #22
 802151e:	f107 0218 	add.w	r2, r7, #24
 8021522:	4610      	mov	r0, r2
 8021524:	4798      	blx	r3
 8021526:	f107 0340 	add.w	r3, r7, #64	; 0x40
 802152a:	62bb      	str	r3, [r7, #40]	; 0x28
 802152c:	6abb      	ldr	r3, [r7, #40]	; 0x28
 802152e:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
 8021530:	f44f 7180 	mov.w	r1, #256	; 0x100
 8021534:	4824      	ldr	r0, [pc, #144]	; (80215c8 <UTIL_ADV_TRACE_COND_FSend+0xfc>)
 8021536:	f7ff fa51 	bl	80209dc <tiny_vsnprintf_like>
 802153a:	4603      	mov	r3, r0
 802153c:	85bb      	strh	r3, [r7, #44]	; 0x2c
 802153e:	f000 f9ef 	bl	8021920 <TRACE_Lock>
 8021542:	8afa      	ldrh	r2, [r7, #22]
 8021544:	8dbb      	ldrh	r3, [r7, #44]	; 0x2c
 8021546:	4413      	add	r3, r2
 8021548:	b29b      	uxth	r3, r3
 802154a:	f107 0214 	add.w	r2, r7, #20
 802154e:	4611      	mov	r1, r2
 8021550:	4618      	mov	r0, r3
 8021552:	f000 f967 	bl	8021824 <TRACE_AllocateBufer>
 8021556:	4603      	mov	r3, r0
 8021558:	f1b3 3fff 	cmp.w	r3, #4294967295
 802155c:	d026      	beq.n	80215ac <UTIL_ADV_TRACE_COND_FSend+0xe0>
 802155e:	2300      	movs	r3, #0
 8021560:	85fb      	strh	r3, [r7, #46]	; 0x2e
 8021562:	e00f      	b.n	8021584 <UTIL_ADV_TRACE_COND_FSend+0xb8>
 8021564:	8dfb      	ldrh	r3, [r7, #46]	; 0x2e
 8021566:	8aba      	ldrh	r2, [r7, #20]
 8021568:	f107 0130 	add.w	r1, r7, #48	; 0x30
 802156c:	440b      	add	r3, r1
 802156e:	f813 1c18 	ldrb.w	r1, [r3, #-24]
 8021572:	4b16      	ldr	r3, [pc, #88]	; (80215cc <UTIL_ADV_TRACE_COND_FSend+0x100>)
 8021574:	5499      	strb	r1, [r3, r2]
 8021576:	8abb      	ldrh	r3, [r7, #20]
 8021578:	3301      	adds	r3, #1
 802157a:	b29b      	uxth	r3, r3
 802157c:	82bb      	strh	r3, [r7, #20]
 802157e:	8dfb      	ldrh	r3, [r7, #46]	; 0x2e
 8021580:	3301      	adds	r3, #1
 8021582:	85fb      	strh	r3, [r7, #46]	; 0x2e
 8021584:	8afb      	ldrh	r3, [r7, #22]
 8021586:	8dfa      	ldrh	r2, [r7, #46]	; 0x2e
 8021588:	429a      	cmp	r2, r3
 802158a:	d3eb      	bcc.n	8021564 <UTIL_ADV_TRACE_COND_FSend+0x98>
 802158c:	8abb      	ldrh	r3, [r7, #20]
 802158e:	461a      	mov	r2, r3
 8021590:	4b0e      	ldr	r3, [pc, #56]	; (80215cc <UTIL_ADV_TRACE_COND_FSend+0x100>)
 8021592:	18d0      	adds	r0, r2, r3
 8021594:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8021596:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
 8021598:	f44f 7180 	mov.w	r1, #256	; 0x100
 802159c:	f7ff fa1e 	bl	80209dc <tiny_vsnprintf_like>
 80215a0:	f000 f9dc 	bl	802195c <TRACE_UnLock>
 80215a4:	f000 f832 	bl	802160c <TRACE_Send>
 80215a8:	4603      	mov	r3, r0
 80215aa:	e003      	b.n	80215b4 <UTIL_ADV_TRACE_COND_FSend+0xe8>
 80215ac:	f000 f9d6 	bl	802195c <TRACE_UnLock>
 80215b0:	f06f 0302 	mvn.w	r3, #2
 80215b4:	4618      	mov	r0, r3
 80215b6:	3734      	adds	r7, #52	; 0x34
 80215b8:	46bd      	mov	sp, r7
 80215ba:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 80215be:	b001      	add	sp, #4
 80215c0:	4770      	bx	lr
 80215c2:	bf00      	nop
 80215c4:	20001a04 	.word	0x20001a04
 80215c8:	20001c1c 	.word	0x20001c1c
 80215cc:	20001a1c 	.word	0x20001a1c

080215d0 <UTIL_ADV_TRACE_RegisterTimeStampFunction>:
 80215d0:	b480      	push	{r7}
 80215d2:	b083      	sub	sp, #12
 80215d4:	af00      	add	r7, sp, #0
 80215d6:	6078      	str	r0, [r7, #4]
 80215d8:	4a03      	ldr	r2, [pc, #12]	; (80215e8 <UTIL_ADV_TRACE_RegisterTimeStampFunction+0x18>)
 80215da:	687b      	ldr	r3, [r7, #4]
 80215dc:	6053      	str	r3, [r2, #4]
 80215de:	bf00      	nop
 80215e0:	370c      	adds	r7, #12
 80215e2:	46bd      	mov	sp, r7
 80215e4:	bc80      	pop	{r7}
 80215e6:	4770      	bx	lr
 80215e8:	20001a04 	.word	0x20001a04

080215ec <UTIL_ADV_TRACE_SetVerboseLevel>:
 80215ec:	b480      	push	{r7}
 80215ee:	b083      	sub	sp, #12
 80215f0:	af00      	add	r7, sp, #0
 80215f2:	4603      	mov	r3, r0
 80215f4:	71fb      	strb	r3, [r7, #7]
 80215f6:	4a04      	ldr	r2, [pc, #16]	; (8021608 <UTIL_ADV_TRACE_SetVerboseLevel+0x1c>)
 80215f8:	79fb      	ldrb	r3, [r7, #7]
 80215fa:	7213      	strb	r3, [r2, #8]
 80215fc:	bf00      	nop
 80215fe:	370c      	adds	r7, #12
 8021600:	46bd      	mov	sp, r7
 8021602:	bc80      	pop	{r7}
 8021604:	4770      	bx	lr
 8021606:	bf00      	nop
 8021608:	20001a04 	.word	0x20001a04

0802160c <TRACE_Send>:
 802160c:	b580      	push	{r7, lr}
 802160e:	b088      	sub	sp, #32
 8021610:	af00      	add	r7, sp, #0
 8021612:	2300      	movs	r3, #0
 8021614:	77fb      	strb	r3, [r7, #31]
 8021616:	2300      	movs	r3, #0
 8021618:	61bb      	str	r3, [r7, #24]
 802161a:	f3ef 8310 	mrs	r3, PRIMASK
 802161e:	613b      	str	r3, [r7, #16]
 8021620:	693b      	ldr	r3, [r7, #16]
 8021622:	617b      	str	r3, [r7, #20]
 8021624:	b672      	cpsid	i
 8021626:	bf00      	nop
 8021628:	f000 f9b6 	bl	8021998 <TRACE_IsLocked>
 802162c:	4603      	mov	r3, r0
 802162e:	2b00      	cmp	r3, #0
 8021630:	d15d      	bne.n	80216ee <TRACE_Send+0xe2>
 8021632:	f000 f975 	bl	8021920 <TRACE_Lock>
 8021636:	4b34      	ldr	r3, [pc, #208]	; (8021708 <TRACE_Send+0xfc>)
 8021638:	8a1a      	ldrh	r2, [r3, #16]
 802163a:	4b33      	ldr	r3, [pc, #204]	; (8021708 <TRACE_Send+0xfc>)
 802163c:	8a5b      	ldrh	r3, [r3, #18]
 802163e:	429a      	cmp	r2, r3
 8021640:	d04d      	beq.n	80216de <TRACE_Send+0xd2>
 8021642:	4b31      	ldr	r3, [pc, #196]	; (8021708 <TRACE_Send+0xfc>)
 8021644:	789b      	ldrb	r3, [r3, #2]
 8021646:	2b01      	cmp	r3, #1
 8021648:	d117      	bne.n	802167a <TRACE_Send+0x6e>
 802164a:	4b2f      	ldr	r3, [pc, #188]	; (8021708 <TRACE_Send+0xfc>)
 802164c:	881a      	ldrh	r2, [r3, #0]
 802164e:	4b2e      	ldr	r3, [pc, #184]	; (8021708 <TRACE_Send+0xfc>)
 8021650:	8a1b      	ldrh	r3, [r3, #16]
 8021652:	1ad3      	subs	r3, r2, r3
 8021654:	b29a      	uxth	r2, r3
 8021656:	4b2c      	ldr	r3, [pc, #176]	; (8021708 <TRACE_Send+0xfc>)
 8021658:	829a      	strh	r2, [r3, #20]
 802165a:	4b2b      	ldr	r3, [pc, #172]	; (8021708 <TRACE_Send+0xfc>)
 802165c:	2202      	movs	r2, #2
 802165e:	709a      	strb	r2, [r3, #2]
 8021660:	4b29      	ldr	r3, [pc, #164]	; (8021708 <TRACE_Send+0xfc>)
 8021662:	2200      	movs	r2, #0
 8021664:	801a      	strh	r2, [r3, #0]
 8021666:	4b28      	ldr	r3, [pc, #160]	; (8021708 <TRACE_Send+0xfc>)
 8021668:	8a9b      	ldrh	r3, [r3, #20]
 802166a:	2b00      	cmp	r3, #0
 802166c:	d105      	bne.n	802167a <TRACE_Send+0x6e>
 802166e:	4b26      	ldr	r3, [pc, #152]	; (8021708 <TRACE_Send+0xfc>)
 8021670:	2200      	movs	r2, #0
 8021672:	709a      	strb	r2, [r3, #2]
 8021674:	4b24      	ldr	r3, [pc, #144]	; (8021708 <TRACE_Send+0xfc>)
 8021676:	2200      	movs	r2, #0
 8021678:	821a      	strh	r2, [r3, #16]
 802167a:	4b23      	ldr	r3, [pc, #140]	; (8021708 <TRACE_Send+0xfc>)
 802167c:	789b      	ldrb	r3, [r3, #2]
 802167e:	2b00      	cmp	r3, #0
 8021680:	d115      	bne.n	80216ae <TRACE_Send+0xa2>
 8021682:	4b21      	ldr	r3, [pc, #132]	; (8021708 <TRACE_Send+0xfc>)
 8021684:	8a5a      	ldrh	r2, [r3, #18]
 8021686:	4b20      	ldr	r3, [pc, #128]	; (8021708 <TRACE_Send+0xfc>)
 8021688:	8a1b      	ldrh	r3, [r3, #16]
 802168a:	429a      	cmp	r2, r3
 802168c:	d908      	bls.n	80216a0 <TRACE_Send+0x94>
 802168e:	4b1e      	ldr	r3, [pc, #120]	; (8021708 <TRACE_Send+0xfc>)
 8021690:	8a5a      	ldrh	r2, [r3, #18]
 8021692:	4b1d      	ldr	r3, [pc, #116]	; (8021708 <TRACE_Send+0xfc>)
 8021694:	8a1b      	ldrh	r3, [r3, #16]
 8021696:	1ad3      	subs	r3, r2, r3
 8021698:	b29a      	uxth	r2, r3
 802169a:	4b1b      	ldr	r3, [pc, #108]	; (8021708 <TRACE_Send+0xfc>)
 802169c:	829a      	strh	r2, [r3, #20]
 802169e:	e006      	b.n	80216ae <TRACE_Send+0xa2>
 80216a0:	4b19      	ldr	r3, [pc, #100]	; (8021708 <TRACE_Send+0xfc>)
 80216a2:	8a1b      	ldrh	r3, [r3, #16]
 80216a4:	f5c3 7300 	rsb	r3, r3, #512	; 0x200
 80216a8:	b29a      	uxth	r2, r3
 80216aa:	4b17      	ldr	r3, [pc, #92]	; (8021708 <TRACE_Send+0xfc>)
 80216ac:	829a      	strh	r2, [r3, #20]
 80216ae:	4b16      	ldr	r3, [pc, #88]	; (8021708 <TRACE_Send+0xfc>)
 80216b0:	8a1b      	ldrh	r3, [r3, #16]
 80216b2:	461a      	mov	r2, r3
 80216b4:	4b15      	ldr	r3, [pc, #84]	; (802170c <TRACE_Send+0x100>)
 80216b6:	4413      	add	r3, r2
 80216b8:	61bb      	str	r3, [r7, #24]
 80216ba:	697b      	ldr	r3, [r7, #20]
 80216bc:	60fb      	str	r3, [r7, #12]
 80216be:	68fb      	ldr	r3, [r7, #12]
 80216c0:	f383 8810 	msr	PRIMASK, r3
 80216c4:	bf00      	nop
 80216c6:	f7e4 fe55 	bl	8006374 <UTIL_ADV_TRACE_PreSendHook>
 80216ca:	4b11      	ldr	r3, [pc, #68]	; (8021710 <TRACE_Send+0x104>)
 80216cc:	68db      	ldr	r3, [r3, #12]
 80216ce:	4a0e      	ldr	r2, [pc, #56]	; (8021708 <TRACE_Send+0xfc>)
 80216d0:	8a92      	ldrh	r2, [r2, #20]
 80216d2:	4611      	mov	r1, r2
 80216d4:	69b8      	ldr	r0, [r7, #24]
 80216d6:	4798      	blx	r3
 80216d8:	4603      	mov	r3, r0
 80216da:	77fb      	strb	r3, [r7, #31]
 80216dc:	e00d      	b.n	80216fa <TRACE_Send+0xee>
 80216de:	f000 f93d 	bl	802195c <TRACE_UnLock>
 80216e2:	697b      	ldr	r3, [r7, #20]
 80216e4:	60bb      	str	r3, [r7, #8]
 80216e6:	68bb      	ldr	r3, [r7, #8]
 80216e8:	f383 8810 	msr	PRIMASK, r3
 80216ec:	e005      	b.n	80216fa <TRACE_Send+0xee>
 80216ee:	697b      	ldr	r3, [r7, #20]
 80216f0:	607b      	str	r3, [r7, #4]
 80216f2:	687b      	ldr	r3, [r7, #4]
 80216f4:	f383 8810 	msr	PRIMASK, r3
 80216f8:	bf00      	nop
 80216fa:	f997 301f 	ldrsb.w	r3, [r7, #31]
 80216fe:	4618      	mov	r0, r3
 8021700:	3720      	adds	r7, #32
 8021702:	46bd      	mov	sp, r7
 8021704:	bd80      	pop	{r7, pc}
 8021706:	bf00      	nop
 8021708:	20001a04 	.word	0x20001a04
 802170c:	20001a1c 	.word	0x20001a1c
 8021710:	0802639c 	.word	0x0802639c

08021714 <TRACE_TxCpltCallback>:
 8021714:	b580      	push	{r7, lr}
 8021716:	b086      	sub	sp, #24
 8021718:	af00      	add	r7, sp, #0
 802171a:	6078      	str	r0, [r7, #4]
 802171c:	f3ef 8310 	mrs	r3, PRIMASK
 8021720:	613b      	str	r3, [r7, #16]
 8021722:	693b      	ldr	r3, [r7, #16]
 8021724:	617b      	str	r3, [r7, #20]
 8021726:	b672      	cpsid	i
 8021728:	bf00      	nop
 802172a:	4b3b      	ldr	r3, [pc, #236]	; (8021818 <TRACE_TxCpltCallback+0x104>)
 802172c:	789b      	ldrb	r3, [r3, #2]
 802172e:	2b02      	cmp	r3, #2
 8021730:	d106      	bne.n	8021740 <TRACE_TxCpltCallback+0x2c>
 8021732:	4b39      	ldr	r3, [pc, #228]	; (8021818 <TRACE_TxCpltCallback+0x104>)
 8021734:	2200      	movs	r2, #0
 8021736:	709a      	strb	r2, [r3, #2]
 8021738:	4b37      	ldr	r3, [pc, #220]	; (8021818 <TRACE_TxCpltCallback+0x104>)
 802173a:	2200      	movs	r2, #0
 802173c:	821a      	strh	r2, [r3, #16]
 802173e:	e00a      	b.n	8021756 <TRACE_TxCpltCallback+0x42>
 8021740:	4b35      	ldr	r3, [pc, #212]	; (8021818 <TRACE_TxCpltCallback+0x104>)
 8021742:	8a1a      	ldrh	r2, [r3, #16]
 8021744:	4b34      	ldr	r3, [pc, #208]	; (8021818 <TRACE_TxCpltCallback+0x104>)
 8021746:	8a9b      	ldrh	r3, [r3, #20]
 8021748:	4413      	add	r3, r2
 802174a:	b29b      	uxth	r3, r3
 802174c:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8021750:	b29a      	uxth	r2, r3
 8021752:	4b31      	ldr	r3, [pc, #196]	; (8021818 <TRACE_TxCpltCallback+0x104>)
 8021754:	821a      	strh	r2, [r3, #16]
 8021756:	4b30      	ldr	r3, [pc, #192]	; (8021818 <TRACE_TxCpltCallback+0x104>)
 8021758:	8a1a      	ldrh	r2, [r3, #16]
 802175a:	4b2f      	ldr	r3, [pc, #188]	; (8021818 <TRACE_TxCpltCallback+0x104>)
 802175c:	8a5b      	ldrh	r3, [r3, #18]
 802175e:	429a      	cmp	r2, r3
 8021760:	d04b      	beq.n	80217fa <TRACE_TxCpltCallback+0xe6>
 8021762:	4b2d      	ldr	r3, [pc, #180]	; (8021818 <TRACE_TxCpltCallback+0x104>)
 8021764:	8adb      	ldrh	r3, [r3, #22]
 8021766:	2b01      	cmp	r3, #1
 8021768:	d147      	bne.n	80217fa <TRACE_TxCpltCallback+0xe6>
 802176a:	4b2b      	ldr	r3, [pc, #172]	; (8021818 <TRACE_TxCpltCallback+0x104>)
 802176c:	789b      	ldrb	r3, [r3, #2]
 802176e:	2b01      	cmp	r3, #1
 8021770:	d117      	bne.n	80217a2 <TRACE_TxCpltCallback+0x8e>
 8021772:	4b29      	ldr	r3, [pc, #164]	; (8021818 <TRACE_TxCpltCallback+0x104>)
 8021774:	881a      	ldrh	r2, [r3, #0]
 8021776:	4b28      	ldr	r3, [pc, #160]	; (8021818 <TRACE_TxCpltCallback+0x104>)
 8021778:	8a1b      	ldrh	r3, [r3, #16]
 802177a:	1ad3      	subs	r3, r2, r3
 802177c:	b29a      	uxth	r2, r3
 802177e:	4b26      	ldr	r3, [pc, #152]	; (8021818 <TRACE_TxCpltCallback+0x104>)
 8021780:	829a      	strh	r2, [r3, #20]
 8021782:	4b25      	ldr	r3, [pc, #148]	; (8021818 <TRACE_TxCpltCallback+0x104>)
 8021784:	2202      	movs	r2, #2
 8021786:	709a      	strb	r2, [r3, #2]
 8021788:	4b23      	ldr	r3, [pc, #140]	; (8021818 <TRACE_TxCpltCallback+0x104>)
 802178a:	2200      	movs	r2, #0
 802178c:	801a      	strh	r2, [r3, #0]
 802178e:	4b22      	ldr	r3, [pc, #136]	; (8021818 <TRACE_TxCpltCallback+0x104>)
 8021790:	8a9b      	ldrh	r3, [r3, #20]
 8021792:	2b00      	cmp	r3, #0
 8021794:	d105      	bne.n	80217a2 <TRACE_TxCpltCallback+0x8e>
 8021796:	4b20      	ldr	r3, [pc, #128]	; (8021818 <TRACE_TxCpltCallback+0x104>)
 8021798:	2200      	movs	r2, #0
 802179a:	709a      	strb	r2, [r3, #2]
 802179c:	4b1e      	ldr	r3, [pc, #120]	; (8021818 <TRACE_TxCpltCallback+0x104>)
 802179e:	2200      	movs	r2, #0
 80217a0:	821a      	strh	r2, [r3, #16]
 80217a2:	4b1d      	ldr	r3, [pc, #116]	; (8021818 <TRACE_TxCpltCallback+0x104>)
 80217a4:	789b      	ldrb	r3, [r3, #2]
 80217a6:	2b00      	cmp	r3, #0
 80217a8:	d115      	bne.n	80217d6 <TRACE_TxCpltCallback+0xc2>
 80217aa:	4b1b      	ldr	r3, [pc, #108]	; (8021818 <TRACE_TxCpltCallback+0x104>)
 80217ac:	8a5a      	ldrh	r2, [r3, #18]
 80217ae:	4b1a      	ldr	r3, [pc, #104]	; (8021818 <TRACE_TxCpltCallback+0x104>)
 80217b0:	8a1b      	ldrh	r3, [r3, #16]
 80217b2:	429a      	cmp	r2, r3
 80217b4:	d908      	bls.n	80217c8 <TRACE_TxCpltCallback+0xb4>
 80217b6:	4b18      	ldr	r3, [pc, #96]	; (8021818 <TRACE_TxCpltCallback+0x104>)
 80217b8:	8a5a      	ldrh	r2, [r3, #18]
 80217ba:	4b17      	ldr	r3, [pc, #92]	; (8021818 <TRACE_TxCpltCallback+0x104>)
 80217bc:	8a1b      	ldrh	r3, [r3, #16]
 80217be:	1ad3      	subs	r3, r2, r3
 80217c0:	b29a      	uxth	r2, r3
 80217c2:	4b15      	ldr	r3, [pc, #84]	; (8021818 <TRACE_TxCpltCallback+0x104>)
 80217c4:	829a      	strh	r2, [r3, #20]
 80217c6:	e006      	b.n	80217d6 <TRACE_TxCpltCallback+0xc2>
 80217c8:	4b13      	ldr	r3, [pc, #76]	; (8021818 <TRACE_TxCpltCallback+0x104>)
 80217ca:	8a1b      	ldrh	r3, [r3, #16]
 80217cc:	f5c3 7300 	rsb	r3, r3, #512	; 0x200
 80217d0:	b29a      	uxth	r2, r3
 80217d2:	4b11      	ldr	r3, [pc, #68]	; (8021818 <TRACE_TxCpltCallback+0x104>)
 80217d4:	829a      	strh	r2, [r3, #20]
 80217d6:	697b      	ldr	r3, [r7, #20]
 80217d8:	60fb      	str	r3, [r7, #12]
 80217da:	68fb      	ldr	r3, [r7, #12]
 80217dc:	f383 8810 	msr	PRIMASK, r3
 80217e0:	bf00      	nop
 80217e2:	4b0e      	ldr	r3, [pc, #56]	; (802181c <TRACE_TxCpltCallback+0x108>)
 80217e4:	68db      	ldr	r3, [r3, #12]
 80217e6:	4a0c      	ldr	r2, [pc, #48]	; (8021818 <TRACE_TxCpltCallback+0x104>)
 80217e8:	8a12      	ldrh	r2, [r2, #16]
 80217ea:	4611      	mov	r1, r2
 80217ec:	4a0c      	ldr	r2, [pc, #48]	; (8021820 <TRACE_TxCpltCallback+0x10c>)
 80217ee:	440a      	add	r2, r1
 80217f0:	4909      	ldr	r1, [pc, #36]	; (8021818 <TRACE_TxCpltCallback+0x104>)
 80217f2:	8a89      	ldrh	r1, [r1, #20]
 80217f4:	4610      	mov	r0, r2
 80217f6:	4798      	blx	r3
 80217f8:	e00a      	b.n	8021810 <TRACE_TxCpltCallback+0xfc>
 80217fa:	f7e4 fdc3 	bl	8006384 <UTIL_ADV_TRACE_PostSendHook>
 80217fe:	697b      	ldr	r3, [r7, #20]
 8021800:	60bb      	str	r3, [r7, #8]
 8021802:	68bb      	ldr	r3, [r7, #8]
 8021804:	f383 8810 	msr	PRIMASK, r3
 8021808:	bf00      	nop
 802180a:	f000 f8a7 	bl	802195c <TRACE_UnLock>
 802180e:	bf00      	nop
 8021810:	bf00      	nop
 8021812:	3718      	adds	r7, #24
 8021814:	46bd      	mov	sp, r7
 8021816:	bd80      	pop	{r7, pc}
 8021818:	20001a04 	.word	0x20001a04
 802181c:	0802639c 	.word	0x0802639c
 8021820:	20001a1c 	.word	0x20001a1c

08021824 <TRACE_AllocateBufer>:
 8021824:	b480      	push	{r7}
 8021826:	b087      	sub	sp, #28
 8021828:	af00      	add	r7, sp, #0
 802182a:	4603      	mov	r3, r0
 802182c:	6039      	str	r1, [r7, #0]
 802182e:	80fb      	strh	r3, [r7, #6]
 8021830:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8021834:	82bb      	strh	r3, [r7, #20]
 8021836:	f3ef 8310 	mrs	r3, PRIMASK
 802183a:	60fb      	str	r3, [r7, #12]
 802183c:	68fb      	ldr	r3, [r7, #12]
 802183e:	613b      	str	r3, [r7, #16]
 8021840:	b672      	cpsid	i
 8021842:	bf00      	nop
 8021844:	4b35      	ldr	r3, [pc, #212]	; (802191c <TRACE_AllocateBufer+0xf8>)
 8021846:	8a5a      	ldrh	r2, [r3, #18]
 8021848:	4b34      	ldr	r3, [pc, #208]	; (802191c <TRACE_AllocateBufer+0xf8>)
 802184a:	8a1b      	ldrh	r3, [r3, #16]
 802184c:	429a      	cmp	r2, r3
 802184e:	d11b      	bne.n	8021888 <TRACE_AllocateBufer+0x64>
 8021850:	4b32      	ldr	r3, [pc, #200]	; (802191c <TRACE_AllocateBufer+0xf8>)
 8021852:	8a5b      	ldrh	r3, [r3, #18]
 8021854:	f5c3 7300 	rsb	r3, r3, #512	; 0x200
 8021858:	82fb      	strh	r3, [r7, #22]
 802185a:	88fa      	ldrh	r2, [r7, #6]
 802185c:	8afb      	ldrh	r3, [r7, #22]
 802185e:	429a      	cmp	r2, r3
 8021860:	d33a      	bcc.n	80218d8 <TRACE_AllocateBufer+0xb4>
 8021862:	4b2e      	ldr	r3, [pc, #184]	; (802191c <TRACE_AllocateBufer+0xf8>)
 8021864:	8a1b      	ldrh	r3, [r3, #16]
 8021866:	88fa      	ldrh	r2, [r7, #6]
 8021868:	429a      	cmp	r2, r3
 802186a:	d235      	bcs.n	80218d8 <TRACE_AllocateBufer+0xb4>
 802186c:	4b2b      	ldr	r3, [pc, #172]	; (802191c <TRACE_AllocateBufer+0xf8>)
 802186e:	2201      	movs	r2, #1
 8021870:	709a      	strb	r2, [r3, #2]
 8021872:	4b2a      	ldr	r3, [pc, #168]	; (802191c <TRACE_AllocateBufer+0xf8>)
 8021874:	8a5a      	ldrh	r2, [r3, #18]
 8021876:	4b29      	ldr	r3, [pc, #164]	; (802191c <TRACE_AllocateBufer+0xf8>)
 8021878:	801a      	strh	r2, [r3, #0]
 802187a:	4b28      	ldr	r3, [pc, #160]	; (802191c <TRACE_AllocateBufer+0xf8>)
 802187c:	8a1b      	ldrh	r3, [r3, #16]
 802187e:	82fb      	strh	r3, [r7, #22]
 8021880:	4b26      	ldr	r3, [pc, #152]	; (802191c <TRACE_AllocateBufer+0xf8>)
 8021882:	2200      	movs	r2, #0
 8021884:	825a      	strh	r2, [r3, #18]
 8021886:	e027      	b.n	80218d8 <TRACE_AllocateBufer+0xb4>
 8021888:	4b24      	ldr	r3, [pc, #144]	; (802191c <TRACE_AllocateBufer+0xf8>)
 802188a:	8a5a      	ldrh	r2, [r3, #18]
 802188c:	4b23      	ldr	r3, [pc, #140]	; (802191c <TRACE_AllocateBufer+0xf8>)
 802188e:	8a1b      	ldrh	r3, [r3, #16]
 8021890:	429a      	cmp	r2, r3
 8021892:	d91b      	bls.n	80218cc <TRACE_AllocateBufer+0xa8>
 8021894:	4b21      	ldr	r3, [pc, #132]	; (802191c <TRACE_AllocateBufer+0xf8>)
 8021896:	8a5b      	ldrh	r3, [r3, #18]
 8021898:	f5c3 7300 	rsb	r3, r3, #512	; 0x200
 802189c:	82fb      	strh	r3, [r7, #22]
 802189e:	88fa      	ldrh	r2, [r7, #6]
 80218a0:	8afb      	ldrh	r3, [r7, #22]
 80218a2:	429a      	cmp	r2, r3
 80218a4:	d318      	bcc.n	80218d8 <TRACE_AllocateBufer+0xb4>
 80218a6:	4b1d      	ldr	r3, [pc, #116]	; (802191c <TRACE_AllocateBufer+0xf8>)
 80218a8:	8a1b      	ldrh	r3, [r3, #16]
 80218aa:	88fa      	ldrh	r2, [r7, #6]
 80218ac:	429a      	cmp	r2, r3
 80218ae:	d213      	bcs.n	80218d8 <TRACE_AllocateBufer+0xb4>
 80218b0:	4b1a      	ldr	r3, [pc, #104]	; (802191c <TRACE_AllocateBufer+0xf8>)
 80218b2:	2201      	movs	r2, #1
 80218b4:	709a      	strb	r2, [r3, #2]
 80218b6:	4b19      	ldr	r3, [pc, #100]	; (802191c <TRACE_AllocateBufer+0xf8>)
 80218b8:	8a5a      	ldrh	r2, [r3, #18]
 80218ba:	4b18      	ldr	r3, [pc, #96]	; (802191c <TRACE_AllocateBufer+0xf8>)
 80218bc:	801a      	strh	r2, [r3, #0]
 80218be:	4b17      	ldr	r3, [pc, #92]	; (802191c <TRACE_AllocateBufer+0xf8>)
 80218c0:	8a1b      	ldrh	r3, [r3, #16]
 80218c2:	82fb      	strh	r3, [r7, #22]
 80218c4:	4b15      	ldr	r3, [pc, #84]	; (802191c <TRACE_AllocateBufer+0xf8>)
 80218c6:	2200      	movs	r2, #0
 80218c8:	825a      	strh	r2, [r3, #18]
 80218ca:	e005      	b.n	80218d8 <TRACE_AllocateBufer+0xb4>
 80218cc:	4b13      	ldr	r3, [pc, #76]	; (802191c <TRACE_AllocateBufer+0xf8>)
 80218ce:	8a1a      	ldrh	r2, [r3, #16]
 80218d0:	4b12      	ldr	r3, [pc, #72]	; (802191c <TRACE_AllocateBufer+0xf8>)
 80218d2:	8a5b      	ldrh	r3, [r3, #18]
 80218d4:	1ad3      	subs	r3, r2, r3
 80218d6:	82fb      	strh	r3, [r7, #22]
 80218d8:	8afa      	ldrh	r2, [r7, #22]
 80218da:	88fb      	ldrh	r3, [r7, #6]
 80218dc:	429a      	cmp	r2, r3
 80218de:	d90f      	bls.n	8021900 <TRACE_AllocateBufer+0xdc>
 80218e0:	4b0e      	ldr	r3, [pc, #56]	; (802191c <TRACE_AllocateBufer+0xf8>)
 80218e2:	8a5a      	ldrh	r2, [r3, #18]
 80218e4:	683b      	ldr	r3, [r7, #0]
 80218e6:	801a      	strh	r2, [r3, #0]
 80218e8:	4b0c      	ldr	r3, [pc, #48]	; (802191c <TRACE_AllocateBufer+0xf8>)
 80218ea:	8a5a      	ldrh	r2, [r3, #18]
 80218ec:	88fb      	ldrh	r3, [r7, #6]
 80218ee:	4413      	add	r3, r2
 80218f0:	b29b      	uxth	r3, r3
 80218f2:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80218f6:	b29a      	uxth	r2, r3
 80218f8:	4b08      	ldr	r3, [pc, #32]	; (802191c <TRACE_AllocateBufer+0xf8>)
 80218fa:	825a      	strh	r2, [r3, #18]
 80218fc:	2300      	movs	r3, #0
 80218fe:	82bb      	strh	r3, [r7, #20]
 8021900:	693b      	ldr	r3, [r7, #16]
 8021902:	60bb      	str	r3, [r7, #8]
 8021904:	68bb      	ldr	r3, [r7, #8]
 8021906:	f383 8810 	msr	PRIMASK, r3
 802190a:	bf00      	nop
 802190c:	f9b7 3014 	ldrsh.w	r3, [r7, #20]
 8021910:	4618      	mov	r0, r3
 8021912:	371c      	adds	r7, #28
 8021914:	46bd      	mov	sp, r7
 8021916:	bc80      	pop	{r7}
 8021918:	4770      	bx	lr
 802191a:	bf00      	nop
 802191c:	20001a04 	.word	0x20001a04

08021920 <TRACE_Lock>:
 8021920:	b480      	push	{r7}
 8021922:	b085      	sub	sp, #20
 8021924:	af00      	add	r7, sp, #0
 8021926:	f3ef 8310 	mrs	r3, PRIMASK
 802192a:	607b      	str	r3, [r7, #4]
 802192c:	687b      	ldr	r3, [r7, #4]
 802192e:	60fb      	str	r3, [r7, #12]
 8021930:	b672      	cpsid	i
 8021932:	bf00      	nop
 8021934:	4b08      	ldr	r3, [pc, #32]	; (8021958 <TRACE_Lock+0x38>)
 8021936:	8adb      	ldrh	r3, [r3, #22]
 8021938:	3301      	adds	r3, #1
 802193a:	b29a      	uxth	r2, r3
 802193c:	4b06      	ldr	r3, [pc, #24]	; (8021958 <TRACE_Lock+0x38>)
 802193e:	82da      	strh	r2, [r3, #22]
 8021940:	68fb      	ldr	r3, [r7, #12]
 8021942:	60bb      	str	r3, [r7, #8]
 8021944:	68bb      	ldr	r3, [r7, #8]
 8021946:	f383 8810 	msr	PRIMASK, r3
 802194a:	bf00      	nop
 802194c:	bf00      	nop
 802194e:	3714      	adds	r7, #20
 8021950:	46bd      	mov	sp, r7
 8021952:	bc80      	pop	{r7}
 8021954:	4770      	bx	lr
 8021956:	bf00      	nop
 8021958:	20001a04 	.word	0x20001a04

0802195c <TRACE_UnLock>:
 802195c:	b480      	push	{r7}
 802195e:	b085      	sub	sp, #20
 8021960:	af00      	add	r7, sp, #0
 8021962:	f3ef 8310 	mrs	r3, PRIMASK
 8021966:	607b      	str	r3, [r7, #4]
 8021968:	687b      	ldr	r3, [r7, #4]
 802196a:	60fb      	str	r3, [r7, #12]
 802196c:	b672      	cpsid	i
 802196e:	bf00      	nop
 8021970:	4b08      	ldr	r3, [pc, #32]	; (8021994 <TRACE_UnLock+0x38>)
 8021972:	8adb      	ldrh	r3, [r3, #22]
 8021974:	3b01      	subs	r3, #1
 8021976:	b29a      	uxth	r2, r3
 8021978:	4b06      	ldr	r3, [pc, #24]	; (8021994 <TRACE_UnLock+0x38>)
 802197a:	82da      	strh	r2, [r3, #22]
 802197c:	68fb      	ldr	r3, [r7, #12]
 802197e:	60bb      	str	r3, [r7, #8]
 8021980:	68bb      	ldr	r3, [r7, #8]
 8021982:	f383 8810 	msr	PRIMASK, r3
 8021986:	bf00      	nop
 8021988:	bf00      	nop
 802198a:	3714      	adds	r7, #20
 802198c:	46bd      	mov	sp, r7
 802198e:	bc80      	pop	{r7}
 8021990:	4770      	bx	lr
 8021992:	bf00      	nop
 8021994:	20001a04 	.word	0x20001a04

08021998 <TRACE_IsLocked>:
 8021998:	b480      	push	{r7}
 802199a:	af00      	add	r7, sp, #0
 802199c:	4b05      	ldr	r3, [pc, #20]	; (80219b4 <TRACE_IsLocked+0x1c>)
 802199e:	8adb      	ldrh	r3, [r3, #22]
 80219a0:	2b00      	cmp	r3, #0
 80219a2:	bf14      	ite	ne
 80219a4:	2301      	movne	r3, #1
 80219a6:	2300      	moveq	r3, #0
 80219a8:	b2db      	uxtb	r3, r3
 80219aa:	4618      	mov	r0, r3
 80219ac:	46bd      	mov	sp, r7
 80219ae:	bc80      	pop	{r7}
 80219b0:	4770      	bx	lr
 80219b2:	bf00      	nop
 80219b4:	20001a04 	.word	0x20001a04

080219b8 <floor>:
 80219b8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80219bc:	f3c1 580a 	ubfx	r8, r1, #20, #11
 80219c0:	f2a8 36ff 	subw	r6, r8, #1023	; 0x3ff
 80219c4:	2e13      	cmp	r6, #19
 80219c6:	4602      	mov	r2, r0
 80219c8:	460b      	mov	r3, r1
 80219ca:	4607      	mov	r7, r0
 80219cc:	460c      	mov	r4, r1
 80219ce:	4605      	mov	r5, r0
 80219d0:	dc34      	bgt.n	8021a3c <floor+0x84>
 80219d2:	2e00      	cmp	r6, #0
 80219d4:	da15      	bge.n	8021a02 <floor+0x4a>
 80219d6:	a334      	add	r3, pc, #208	; (adr r3, 8021aa8 <floor+0xf0>)
 80219d8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80219dc:	f7de fc2e 	bl	800023c <__adddf3>
 80219e0:	2200      	movs	r2, #0
 80219e2:	2300      	movs	r3, #0
 80219e4:	f7df f870 	bl	8000ac8 <__aeabi_dcmpgt>
 80219e8:	b140      	cbz	r0, 80219fc <floor+0x44>
 80219ea:	2c00      	cmp	r4, #0
 80219ec:	da59      	bge.n	8021aa2 <floor+0xea>
 80219ee:	f024 4300 	bic.w	r3, r4, #2147483648	; 0x80000000
 80219f2:	ea57 0503 	orrs.w	r5, r7, r3
 80219f6:	d001      	beq.n	80219fc <floor+0x44>
 80219f8:	4c2d      	ldr	r4, [pc, #180]	; (8021ab0 <floor+0xf8>)
 80219fa:	2500      	movs	r5, #0
 80219fc:	4623      	mov	r3, r4
 80219fe:	462f      	mov	r7, r5
 8021a00:	e025      	b.n	8021a4e <floor+0x96>
 8021a02:	4a2c      	ldr	r2, [pc, #176]	; (8021ab4 <floor+0xfc>)
 8021a04:	fa42 f806 	asr.w	r8, r2, r6
 8021a08:	ea01 0208 	and.w	r2, r1, r8
 8021a0c:	4302      	orrs	r2, r0
 8021a0e:	d01e      	beq.n	8021a4e <floor+0x96>
 8021a10:	a325      	add	r3, pc, #148	; (adr r3, 8021aa8 <floor+0xf0>)
 8021a12:	e9d3 2300 	ldrd	r2, r3, [r3]
 8021a16:	f7de fc11 	bl	800023c <__adddf3>
 8021a1a:	2200      	movs	r2, #0
 8021a1c:	2300      	movs	r3, #0
 8021a1e:	f7df f853 	bl	8000ac8 <__aeabi_dcmpgt>
 8021a22:	2800      	cmp	r0, #0
 8021a24:	d0ea      	beq.n	80219fc <floor+0x44>
 8021a26:	2c00      	cmp	r4, #0
 8021a28:	bfbe      	ittt	lt
 8021a2a:	f44f 1380 	movlt.w	r3, #1048576	; 0x100000
 8021a2e:	fa43 f606 	asrlt.w	r6, r3, r6
 8021a32:	19a4      	addlt	r4, r4, r6
 8021a34:	ea24 0408 	bic.w	r4, r4, r8
 8021a38:	2500      	movs	r5, #0
 8021a3a:	e7df      	b.n	80219fc <floor+0x44>
 8021a3c:	2e33      	cmp	r6, #51	; 0x33
 8021a3e:	dd0a      	ble.n	8021a56 <floor+0x9e>
 8021a40:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 8021a44:	d103      	bne.n	8021a4e <floor+0x96>
 8021a46:	f7de fbf9 	bl	800023c <__adddf3>
 8021a4a:	4607      	mov	r7, r0
 8021a4c:	460b      	mov	r3, r1
 8021a4e:	4638      	mov	r0, r7
 8021a50:	4619      	mov	r1, r3
 8021a52:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8021a56:	f2a8 4813 	subw	r8, r8, #1043	; 0x413
 8021a5a:	f04f 32ff 	mov.w	r2, #4294967295
 8021a5e:	fa22 f808 	lsr.w	r8, r2, r8
 8021a62:	ea18 0f00 	tst.w	r8, r0
 8021a66:	d0f2      	beq.n	8021a4e <floor+0x96>
 8021a68:	a30f      	add	r3, pc, #60	; (adr r3, 8021aa8 <floor+0xf0>)
 8021a6a:	e9d3 2300 	ldrd	r2, r3, [r3]
 8021a6e:	f7de fbe5 	bl	800023c <__adddf3>
 8021a72:	2200      	movs	r2, #0
 8021a74:	2300      	movs	r3, #0
 8021a76:	f7df f827 	bl	8000ac8 <__aeabi_dcmpgt>
 8021a7a:	2800      	cmp	r0, #0
 8021a7c:	d0be      	beq.n	80219fc <floor+0x44>
 8021a7e:	2c00      	cmp	r4, #0
 8021a80:	da02      	bge.n	8021a88 <floor+0xd0>
 8021a82:	2e14      	cmp	r6, #20
 8021a84:	d103      	bne.n	8021a8e <floor+0xd6>
 8021a86:	3401      	adds	r4, #1
 8021a88:	ea25 0508 	bic.w	r5, r5, r8
 8021a8c:	e7b6      	b.n	80219fc <floor+0x44>
 8021a8e:	2301      	movs	r3, #1
 8021a90:	f1c6 0634 	rsb	r6, r6, #52	; 0x34
 8021a94:	fa03 f606 	lsl.w	r6, r3, r6
 8021a98:	4435      	add	r5, r6
 8021a9a:	42bd      	cmp	r5, r7
 8021a9c:	bf38      	it	cc
 8021a9e:	18e4      	addcc	r4, r4, r3
 8021aa0:	e7f2      	b.n	8021a88 <floor+0xd0>
 8021aa2:	2500      	movs	r5, #0
 8021aa4:	462c      	mov	r4, r5
 8021aa6:	e7a9      	b.n	80219fc <floor+0x44>
 8021aa8:	8800759c 	.word	0x8800759c
 8021aac:	7e37e43c 	.word	0x7e37e43c
 8021ab0:	bff00000 	.word	0xbff00000
 8021ab4:	000fffff 	.word	0x000fffff

08021ab8 <sin>:
 8021ab8:	b530      	push	{r4, r5, lr}
 8021aba:	4a20      	ldr	r2, [pc, #128]	; (8021b3c <sin+0x84>)
 8021abc:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
 8021ac0:	4293      	cmp	r3, r2
 8021ac2:	b087      	sub	sp, #28
 8021ac4:	dc06      	bgt.n	8021ad4 <sin+0x1c>
 8021ac6:	2300      	movs	r3, #0
 8021ac8:	9300      	str	r3, [sp, #0]
 8021aca:	2200      	movs	r2, #0
 8021acc:	2300      	movs	r3, #0
 8021ace:	f001 ff2f 	bl	8023930 <__kernel_sin>
 8021ad2:	e006      	b.n	8021ae2 <sin+0x2a>
 8021ad4:	4a1a      	ldr	r2, [pc, #104]	; (8021b40 <sin+0x88>)
 8021ad6:	4293      	cmp	r3, r2
 8021ad8:	dd05      	ble.n	8021ae6 <sin+0x2e>
 8021ada:	4602      	mov	r2, r0
 8021adc:	460b      	mov	r3, r1
 8021ade:	f7de fbab 	bl	8000238 <__aeabi_dsub>
 8021ae2:	b007      	add	sp, #28
 8021ae4:	bd30      	pop	{r4, r5, pc}
 8021ae6:	aa02      	add	r2, sp, #8
 8021ae8:	f000 fe4a 	bl	8022780 <__ieee754_rem_pio2>
 8021aec:	f000 0003 	and.w	r0, r0, #3
 8021af0:	2801      	cmp	r0, #1
 8021af2:	d009      	beq.n	8021b08 <sin+0x50>
 8021af4:	2802      	cmp	r0, #2
 8021af6:	d00e      	beq.n	8021b16 <sin+0x5e>
 8021af8:	b9c0      	cbnz	r0, 8021b2c <sin+0x74>
 8021afa:	2301      	movs	r3, #1
 8021afc:	9300      	str	r3, [sp, #0]
 8021afe:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8021b02:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8021b06:	e7e2      	b.n	8021ace <sin+0x16>
 8021b08:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8021b0c:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8021b10:	f001 fb06 	bl	8023120 <__kernel_cos>
 8021b14:	e7e5      	b.n	8021ae2 <sin+0x2a>
 8021b16:	2301      	movs	r3, #1
 8021b18:	9300      	str	r3, [sp, #0]
 8021b1a:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8021b1e:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8021b22:	f001 ff05 	bl	8023930 <__kernel_sin>
 8021b26:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8021b2a:	e7da      	b.n	8021ae2 <sin+0x2a>
 8021b2c:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8021b30:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8021b34:	f001 faf4 	bl	8023120 <__kernel_cos>
 8021b38:	e7f5      	b.n	8021b26 <sin+0x6e>
 8021b3a:	bf00      	nop
 8021b3c:	3fe921fb 	.word	0x3fe921fb
 8021b40:	7fefffff 	.word	0x7fefffff

08021b44 <cosf>:
 8021b44:	b507      	push	{r0, r1, r2, lr}
 8021b46:	4a18      	ldr	r2, [pc, #96]	; (8021ba8 <cosf+0x64>)
 8021b48:	f020 4300 	bic.w	r3, r0, #2147483648	; 0x80000000
 8021b4c:	4293      	cmp	r3, r2
 8021b4e:	4601      	mov	r1, r0
 8021b50:	dc03      	bgt.n	8021b5a <cosf+0x16>
 8021b52:	2100      	movs	r1, #0
 8021b54:	f001 ffa2 	bl	8023a9c <__kernel_cosf>
 8021b58:	e004      	b.n	8021b64 <cosf+0x20>
 8021b5a:	f1b3 4fff 	cmp.w	r3, #2139095040	; 0x7f800000
 8021b5e:	db04      	blt.n	8021b6a <cosf+0x26>
 8021b60:	f7df f84e 	bl	8000c00 <__aeabi_fsub>
 8021b64:	b003      	add	sp, #12
 8021b66:	f85d fb04 	ldr.w	pc, [sp], #4
 8021b6a:	4669      	mov	r1, sp
 8021b6c:	f001 f92a 	bl	8022dc4 <__ieee754_rem_pio2f>
 8021b70:	f000 0203 	and.w	r2, r0, #3
 8021b74:	2a01      	cmp	r2, #1
 8021b76:	d005      	beq.n	8021b84 <cosf+0x40>
 8021b78:	2a02      	cmp	r2, #2
 8021b7a:	d00a      	beq.n	8021b92 <cosf+0x4e>
 8021b7c:	b972      	cbnz	r2, 8021b9c <cosf+0x58>
 8021b7e:	9901      	ldr	r1, [sp, #4]
 8021b80:	9800      	ldr	r0, [sp, #0]
 8021b82:	e7e7      	b.n	8021b54 <cosf+0x10>
 8021b84:	9901      	ldr	r1, [sp, #4]
 8021b86:	9800      	ldr	r0, [sp, #0]
 8021b88:	f002 fabe 	bl	8024108 <__kernel_sinf>
 8021b8c:	f100 4000 	add.w	r0, r0, #2147483648	; 0x80000000
 8021b90:	e7e8      	b.n	8021b64 <cosf+0x20>
 8021b92:	9901      	ldr	r1, [sp, #4]
 8021b94:	9800      	ldr	r0, [sp, #0]
 8021b96:	f001 ff81 	bl	8023a9c <__kernel_cosf>
 8021b9a:	e7f7      	b.n	8021b8c <cosf+0x48>
 8021b9c:	9901      	ldr	r1, [sp, #4]
 8021b9e:	9800      	ldr	r0, [sp, #0]
 8021ba0:	2201      	movs	r2, #1
 8021ba2:	f002 fab1 	bl	8024108 <__kernel_sinf>
 8021ba6:	e7dd      	b.n	8021b64 <cosf+0x20>
 8021ba8:	3f490fd8 	.word	0x3f490fd8

08021bac <pow>:
 8021bac:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8021bb0:	461f      	mov	r7, r3
 8021bb2:	4680      	mov	r8, r0
 8021bb4:	4689      	mov	r9, r1
 8021bb6:	4616      	mov	r6, r2
 8021bb8:	f000 f8ca 	bl	8021d50 <__ieee754_pow>
 8021bbc:	4b4d      	ldr	r3, [pc, #308]	; (8021cf4 <pow+0x148>)
 8021bbe:	f993 3000 	ldrsb.w	r3, [r3]
 8021bc2:	3301      	adds	r3, #1
 8021bc4:	4604      	mov	r4, r0
 8021bc6:	460d      	mov	r5, r1
 8021bc8:	d015      	beq.n	8021bf6 <pow+0x4a>
 8021bca:	4632      	mov	r2, r6
 8021bcc:	463b      	mov	r3, r7
 8021bce:	4630      	mov	r0, r6
 8021bd0:	4639      	mov	r1, r7
 8021bd2:	f7de ff83 	bl	8000adc <__aeabi_dcmpun>
 8021bd6:	b970      	cbnz	r0, 8021bf6 <pow+0x4a>
 8021bd8:	4642      	mov	r2, r8
 8021bda:	464b      	mov	r3, r9
 8021bdc:	4640      	mov	r0, r8
 8021bde:	4649      	mov	r1, r9
 8021be0:	f7de ff7c 	bl	8000adc <__aeabi_dcmpun>
 8021be4:	2200      	movs	r2, #0
 8021be6:	2300      	movs	r3, #0
 8021be8:	b148      	cbz	r0, 8021bfe <pow+0x52>
 8021bea:	4630      	mov	r0, r6
 8021bec:	4639      	mov	r1, r7
 8021bee:	f7de ff43 	bl	8000a78 <__aeabi_dcmpeq>
 8021bf2:	2800      	cmp	r0, #0
 8021bf4:	d17b      	bne.n	8021cee <pow+0x142>
 8021bf6:	4620      	mov	r0, r4
 8021bf8:	4629      	mov	r1, r5
 8021bfa:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8021bfe:	4640      	mov	r0, r8
 8021c00:	4649      	mov	r1, r9
 8021c02:	f7de ff39 	bl	8000a78 <__aeabi_dcmpeq>
 8021c06:	b1e0      	cbz	r0, 8021c42 <pow+0x96>
 8021c08:	2200      	movs	r2, #0
 8021c0a:	2300      	movs	r3, #0
 8021c0c:	4630      	mov	r0, r6
 8021c0e:	4639      	mov	r1, r7
 8021c10:	f7de ff32 	bl	8000a78 <__aeabi_dcmpeq>
 8021c14:	2800      	cmp	r0, #0
 8021c16:	d16a      	bne.n	8021cee <pow+0x142>
 8021c18:	4630      	mov	r0, r6
 8021c1a:	4639      	mov	r1, r7
 8021c1c:	f002 faed 	bl	80241fa <finite>
 8021c20:	2800      	cmp	r0, #0
 8021c22:	d0e8      	beq.n	8021bf6 <pow+0x4a>
 8021c24:	2200      	movs	r2, #0
 8021c26:	2300      	movs	r3, #0
 8021c28:	4630      	mov	r0, r6
 8021c2a:	4639      	mov	r1, r7
 8021c2c:	f7de ff2e 	bl	8000a8c <__aeabi_dcmplt>
 8021c30:	2800      	cmp	r0, #0
 8021c32:	d0e0      	beq.n	8021bf6 <pow+0x4a>
 8021c34:	f002 fd9c 	bl	8024770 <__errno>
 8021c38:	2321      	movs	r3, #33	; 0x21
 8021c3a:	6003      	str	r3, [r0, #0]
 8021c3c:	2400      	movs	r4, #0
 8021c3e:	4d2e      	ldr	r5, [pc, #184]	; (8021cf8 <pow+0x14c>)
 8021c40:	e7d9      	b.n	8021bf6 <pow+0x4a>
 8021c42:	4620      	mov	r0, r4
 8021c44:	4629      	mov	r1, r5
 8021c46:	f002 fad8 	bl	80241fa <finite>
 8021c4a:	bba8      	cbnz	r0, 8021cb8 <pow+0x10c>
 8021c4c:	4640      	mov	r0, r8
 8021c4e:	4649      	mov	r1, r9
 8021c50:	f002 fad3 	bl	80241fa <finite>
 8021c54:	b380      	cbz	r0, 8021cb8 <pow+0x10c>
 8021c56:	4630      	mov	r0, r6
 8021c58:	4639      	mov	r1, r7
 8021c5a:	f002 face 	bl	80241fa <finite>
 8021c5e:	b358      	cbz	r0, 8021cb8 <pow+0x10c>
 8021c60:	4622      	mov	r2, r4
 8021c62:	462b      	mov	r3, r5
 8021c64:	4620      	mov	r0, r4
 8021c66:	4629      	mov	r1, r5
 8021c68:	f7de ff38 	bl	8000adc <__aeabi_dcmpun>
 8021c6c:	b160      	cbz	r0, 8021c88 <pow+0xdc>
 8021c6e:	f002 fd7f 	bl	8024770 <__errno>
 8021c72:	2321      	movs	r3, #33	; 0x21
 8021c74:	6003      	str	r3, [r0, #0]
 8021c76:	2200      	movs	r2, #0
 8021c78:	2300      	movs	r3, #0
 8021c7a:	4610      	mov	r0, r2
 8021c7c:	4619      	mov	r1, r3
 8021c7e:	f7de fdbd 	bl	80007fc <__aeabi_ddiv>
 8021c82:	4604      	mov	r4, r0
 8021c84:	460d      	mov	r5, r1
 8021c86:	e7b6      	b.n	8021bf6 <pow+0x4a>
 8021c88:	f002 fd72 	bl	8024770 <__errno>
 8021c8c:	2322      	movs	r3, #34	; 0x22
 8021c8e:	6003      	str	r3, [r0, #0]
 8021c90:	2200      	movs	r2, #0
 8021c92:	2300      	movs	r3, #0
 8021c94:	4640      	mov	r0, r8
 8021c96:	4649      	mov	r1, r9
 8021c98:	f7de fef8 	bl	8000a8c <__aeabi_dcmplt>
 8021c9c:	2400      	movs	r4, #0
 8021c9e:	b148      	cbz	r0, 8021cb4 <pow+0x108>
 8021ca0:	4630      	mov	r0, r6
 8021ca2:	4639      	mov	r1, r7
 8021ca4:	f002 fab6 	bl	8024214 <rint>
 8021ca8:	4632      	mov	r2, r6
 8021caa:	463b      	mov	r3, r7
 8021cac:	f7de fee4 	bl	8000a78 <__aeabi_dcmpeq>
 8021cb0:	2800      	cmp	r0, #0
 8021cb2:	d0c4      	beq.n	8021c3e <pow+0x92>
 8021cb4:	4d11      	ldr	r5, [pc, #68]	; (8021cfc <pow+0x150>)
 8021cb6:	e79e      	b.n	8021bf6 <pow+0x4a>
 8021cb8:	2200      	movs	r2, #0
 8021cba:	2300      	movs	r3, #0
 8021cbc:	4620      	mov	r0, r4
 8021cbe:	4629      	mov	r1, r5
 8021cc0:	f7de feda 	bl	8000a78 <__aeabi_dcmpeq>
 8021cc4:	2800      	cmp	r0, #0
 8021cc6:	d096      	beq.n	8021bf6 <pow+0x4a>
 8021cc8:	4640      	mov	r0, r8
 8021cca:	4649      	mov	r1, r9
 8021ccc:	f002 fa95 	bl	80241fa <finite>
 8021cd0:	2800      	cmp	r0, #0
 8021cd2:	d090      	beq.n	8021bf6 <pow+0x4a>
 8021cd4:	4630      	mov	r0, r6
 8021cd6:	4639      	mov	r1, r7
 8021cd8:	f002 fa8f 	bl	80241fa <finite>
 8021cdc:	2800      	cmp	r0, #0
 8021cde:	d08a      	beq.n	8021bf6 <pow+0x4a>
 8021ce0:	f002 fd46 	bl	8024770 <__errno>
 8021ce4:	2322      	movs	r3, #34	; 0x22
 8021ce6:	6003      	str	r3, [r0, #0]
 8021ce8:	2400      	movs	r4, #0
 8021cea:	2500      	movs	r5, #0
 8021cec:	e783      	b.n	8021bf6 <pow+0x4a>
 8021cee:	4d04      	ldr	r5, [pc, #16]	; (8021d00 <pow+0x154>)
 8021cf0:	2400      	movs	r4, #0
 8021cf2:	e780      	b.n	8021bf6 <pow+0x4a>
 8021cf4:	200001d4 	.word	0x200001d4
 8021cf8:	fff00000 	.word	0xfff00000
 8021cfc:	7ff00000 	.word	0x7ff00000
 8021d00:	3ff00000 	.word	0x3ff00000

08021d04 <atan2f>:
 8021d04:	f000 bfd8 	b.w	8022cb8 <__ieee754_atan2f>

08021d08 <sqrtf>:
 8021d08:	b538      	push	{r3, r4, r5, lr}
 8021d0a:	4605      	mov	r5, r0
 8021d0c:	f001 f9b8 	bl	8023080 <__ieee754_sqrtf>
 8021d10:	4b0d      	ldr	r3, [pc, #52]	; (8021d48 <sqrtf+0x40>)
 8021d12:	f993 3000 	ldrsb.w	r3, [r3]
 8021d16:	3301      	adds	r3, #1
 8021d18:	4604      	mov	r4, r0
 8021d1a:	d012      	beq.n	8021d42 <sqrtf+0x3a>
 8021d1c:	4629      	mov	r1, r5
 8021d1e:	4628      	mov	r0, r5
 8021d20:	f7df fa3e 	bl	80011a0 <__aeabi_fcmpun>
 8021d24:	b968      	cbnz	r0, 8021d42 <sqrtf+0x3a>
 8021d26:	2100      	movs	r1, #0
 8021d28:	4628      	mov	r0, r5
 8021d2a:	f7df fa11 	bl	8001150 <__aeabi_fcmplt>
 8021d2e:	b140      	cbz	r0, 8021d42 <sqrtf+0x3a>
 8021d30:	f002 fd1e 	bl	8024770 <__errno>
 8021d34:	2321      	movs	r3, #33	; 0x21
 8021d36:	2100      	movs	r1, #0
 8021d38:	6003      	str	r3, [r0, #0]
 8021d3a:	4608      	mov	r0, r1
 8021d3c:	f7df f91e 	bl	8000f7c <__aeabi_fdiv>
 8021d40:	4604      	mov	r4, r0
 8021d42:	4620      	mov	r0, r4
 8021d44:	bd38      	pop	{r3, r4, r5, pc}
 8021d46:	bf00      	nop
 8021d48:	200001d4 	.word	0x200001d4
 8021d4c:	00000000 	.word	0x00000000

08021d50 <__ieee754_pow>:
 8021d50:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021d54:	b093      	sub	sp, #76	; 0x4c
 8021d56:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8021d5a:	e9dd 2602 	ldrd	r2, r6, [sp, #8]
 8021d5e:	f026 4500 	bic.w	r5, r6, #2147483648	; 0x80000000
 8021d62:	ea55 0302 	orrs.w	r3, r5, r2
 8021d66:	4607      	mov	r7, r0
 8021d68:	4688      	mov	r8, r1
 8021d6a:	f000 84bf 	beq.w	80226ec <__ieee754_pow+0x99c>
 8021d6e:	4b7e      	ldr	r3, [pc, #504]	; (8021f68 <__ieee754_pow+0x218>)
 8021d70:	f021 4400 	bic.w	r4, r1, #2147483648	; 0x80000000
 8021d74:	429c      	cmp	r4, r3
 8021d76:	4689      	mov	r9, r1
 8021d78:	4682      	mov	sl, r0
 8021d7a:	dc09      	bgt.n	8021d90 <__ieee754_pow+0x40>
 8021d7c:	d103      	bne.n	8021d86 <__ieee754_pow+0x36>
 8021d7e:	b978      	cbnz	r0, 8021da0 <__ieee754_pow+0x50>
 8021d80:	42a5      	cmp	r5, r4
 8021d82:	dd02      	ble.n	8021d8a <__ieee754_pow+0x3a>
 8021d84:	e00c      	b.n	8021da0 <__ieee754_pow+0x50>
 8021d86:	429d      	cmp	r5, r3
 8021d88:	dc02      	bgt.n	8021d90 <__ieee754_pow+0x40>
 8021d8a:	429d      	cmp	r5, r3
 8021d8c:	d10e      	bne.n	8021dac <__ieee754_pow+0x5c>
 8021d8e:	b16a      	cbz	r2, 8021dac <__ieee754_pow+0x5c>
 8021d90:	f104 4440 	add.w	r4, r4, #3221225472	; 0xc0000000
 8021d94:	f504 1480 	add.w	r4, r4, #1048576	; 0x100000
 8021d98:	ea54 030a 	orrs.w	r3, r4, sl
 8021d9c:	f000 84a6 	beq.w	80226ec <__ieee754_pow+0x99c>
 8021da0:	4872      	ldr	r0, [pc, #456]	; (8021f6c <__ieee754_pow+0x21c>)
 8021da2:	b013      	add	sp, #76	; 0x4c
 8021da4:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021da8:	f002 ba2e 	b.w	8024208 <nan>
 8021dac:	f1b9 0f00 	cmp.w	r9, #0
 8021db0:	da39      	bge.n	8021e26 <__ieee754_pow+0xd6>
 8021db2:	4b6f      	ldr	r3, [pc, #444]	; (8021f70 <__ieee754_pow+0x220>)
 8021db4:	429d      	cmp	r5, r3
 8021db6:	dc54      	bgt.n	8021e62 <__ieee754_pow+0x112>
 8021db8:	f1a3 7354 	sub.w	r3, r3, #55574528	; 0x3500000
 8021dbc:	429d      	cmp	r5, r3
 8021dbe:	f340 84a6 	ble.w	802270e <__ieee754_pow+0x9be>
 8021dc2:	152b      	asrs	r3, r5, #20
 8021dc4:	f2a3 33ff 	subw	r3, r3, #1023	; 0x3ff
 8021dc8:	2b14      	cmp	r3, #20
 8021dca:	dd0f      	ble.n	8021dec <__ieee754_pow+0x9c>
 8021dcc:	f1c3 0334 	rsb	r3, r3, #52	; 0x34
 8021dd0:	fa22 f103 	lsr.w	r1, r2, r3
 8021dd4:	fa01 f303 	lsl.w	r3, r1, r3
 8021dd8:	4293      	cmp	r3, r2
 8021dda:	f040 8498 	bne.w	802270e <__ieee754_pow+0x9be>
 8021dde:	f001 0101 	and.w	r1, r1, #1
 8021de2:	f1c1 0302 	rsb	r3, r1, #2
 8021de6:	9300      	str	r3, [sp, #0]
 8021de8:	b182      	cbz	r2, 8021e0c <__ieee754_pow+0xbc>
 8021dea:	e05e      	b.n	8021eaa <__ieee754_pow+0x15a>
 8021dec:	2a00      	cmp	r2, #0
 8021dee:	d15a      	bne.n	8021ea6 <__ieee754_pow+0x156>
 8021df0:	f1c3 0314 	rsb	r3, r3, #20
 8021df4:	fa45 f103 	asr.w	r1, r5, r3
 8021df8:	fa01 f303 	lsl.w	r3, r1, r3
 8021dfc:	42ab      	cmp	r3, r5
 8021dfe:	f040 8483 	bne.w	8022708 <__ieee754_pow+0x9b8>
 8021e02:	f001 0101 	and.w	r1, r1, #1
 8021e06:	f1c1 0302 	rsb	r3, r1, #2
 8021e0a:	9300      	str	r3, [sp, #0]
 8021e0c:	4b59      	ldr	r3, [pc, #356]	; (8021f74 <__ieee754_pow+0x224>)
 8021e0e:	429d      	cmp	r5, r3
 8021e10:	d130      	bne.n	8021e74 <__ieee754_pow+0x124>
 8021e12:	2e00      	cmp	r6, #0
 8021e14:	f280 8474 	bge.w	8022700 <__ieee754_pow+0x9b0>
 8021e18:	4956      	ldr	r1, [pc, #344]	; (8021f74 <__ieee754_pow+0x224>)
 8021e1a:	463a      	mov	r2, r7
 8021e1c:	4643      	mov	r3, r8
 8021e1e:	2000      	movs	r0, #0
 8021e20:	f7de fcec 	bl	80007fc <__aeabi_ddiv>
 8021e24:	e02f      	b.n	8021e86 <__ieee754_pow+0x136>
 8021e26:	2300      	movs	r3, #0
 8021e28:	9300      	str	r3, [sp, #0]
 8021e2a:	2a00      	cmp	r2, #0
 8021e2c:	d13d      	bne.n	8021eaa <__ieee754_pow+0x15a>
 8021e2e:	4b4e      	ldr	r3, [pc, #312]	; (8021f68 <__ieee754_pow+0x218>)
 8021e30:	429d      	cmp	r5, r3
 8021e32:	d1eb      	bne.n	8021e0c <__ieee754_pow+0xbc>
 8021e34:	f104 4340 	add.w	r3, r4, #3221225472	; 0xc0000000
 8021e38:	f503 1380 	add.w	r3, r3, #1048576	; 0x100000
 8021e3c:	ea53 030a 	orrs.w	r3, r3, sl
 8021e40:	f000 8454 	beq.w	80226ec <__ieee754_pow+0x99c>
 8021e44:	4b4c      	ldr	r3, [pc, #304]	; (8021f78 <__ieee754_pow+0x228>)
 8021e46:	429c      	cmp	r4, r3
 8021e48:	dd0d      	ble.n	8021e66 <__ieee754_pow+0x116>
 8021e4a:	2e00      	cmp	r6, #0
 8021e4c:	f280 8454 	bge.w	80226f8 <__ieee754_pow+0x9a8>
 8021e50:	f04f 0b00 	mov.w	fp, #0
 8021e54:	f04f 0c00 	mov.w	ip, #0
 8021e58:	4658      	mov	r0, fp
 8021e5a:	4661      	mov	r1, ip
 8021e5c:	b013      	add	sp, #76	; 0x4c
 8021e5e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021e62:	2302      	movs	r3, #2
 8021e64:	e7e0      	b.n	8021e28 <__ieee754_pow+0xd8>
 8021e66:	2e00      	cmp	r6, #0
 8021e68:	daf2      	bge.n	8021e50 <__ieee754_pow+0x100>
 8021e6a:	e9dd b302 	ldrd	fp, r3, [sp, #8]
 8021e6e:	f103 4c00 	add.w	ip, r3, #2147483648	; 0x80000000
 8021e72:	e7f1      	b.n	8021e58 <__ieee754_pow+0x108>
 8021e74:	f1b6 4f80 	cmp.w	r6, #1073741824	; 0x40000000
 8021e78:	d108      	bne.n	8021e8c <__ieee754_pow+0x13c>
 8021e7a:	463a      	mov	r2, r7
 8021e7c:	4643      	mov	r3, r8
 8021e7e:	4638      	mov	r0, r7
 8021e80:	4641      	mov	r1, r8
 8021e82:	f7de fb91 	bl	80005a8 <__aeabi_dmul>
 8021e86:	4683      	mov	fp, r0
 8021e88:	468c      	mov	ip, r1
 8021e8a:	e7e5      	b.n	8021e58 <__ieee754_pow+0x108>
 8021e8c:	4b3b      	ldr	r3, [pc, #236]	; (8021f7c <__ieee754_pow+0x22c>)
 8021e8e:	429e      	cmp	r6, r3
 8021e90:	d10b      	bne.n	8021eaa <__ieee754_pow+0x15a>
 8021e92:	f1b9 0f00 	cmp.w	r9, #0
 8021e96:	db08      	blt.n	8021eaa <__ieee754_pow+0x15a>
 8021e98:	4638      	mov	r0, r7
 8021e9a:	4641      	mov	r1, r8
 8021e9c:	b013      	add	sp, #76	; 0x4c
 8021e9e:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021ea2:	f000 be5d 	b.w	8022b60 <__ieee754_sqrt>
 8021ea6:	2300      	movs	r3, #0
 8021ea8:	9300      	str	r3, [sp, #0]
 8021eaa:	4638      	mov	r0, r7
 8021eac:	4641      	mov	r1, r8
 8021eae:	f002 f9a1 	bl	80241f4 <fabs>
 8021eb2:	4683      	mov	fp, r0
 8021eb4:	468c      	mov	ip, r1
 8021eb6:	f1ba 0f00 	cmp.w	sl, #0
 8021eba:	d129      	bne.n	8021f10 <__ieee754_pow+0x1c0>
 8021ebc:	b124      	cbz	r4, 8021ec8 <__ieee754_pow+0x178>
 8021ebe:	4b2d      	ldr	r3, [pc, #180]	; (8021f74 <__ieee754_pow+0x224>)
 8021ec0:	f029 4240 	bic.w	r2, r9, #3221225472	; 0xc0000000
 8021ec4:	429a      	cmp	r2, r3
 8021ec6:	d123      	bne.n	8021f10 <__ieee754_pow+0x1c0>
 8021ec8:	2e00      	cmp	r6, #0
 8021eca:	da07      	bge.n	8021edc <__ieee754_pow+0x18c>
 8021ecc:	465a      	mov	r2, fp
 8021ece:	4663      	mov	r3, ip
 8021ed0:	4928      	ldr	r1, [pc, #160]	; (8021f74 <__ieee754_pow+0x224>)
 8021ed2:	2000      	movs	r0, #0
 8021ed4:	f7de fc92 	bl	80007fc <__aeabi_ddiv>
 8021ed8:	4683      	mov	fp, r0
 8021eda:	468c      	mov	ip, r1
 8021edc:	f1b9 0f00 	cmp.w	r9, #0
 8021ee0:	daba      	bge.n	8021e58 <__ieee754_pow+0x108>
 8021ee2:	9b00      	ldr	r3, [sp, #0]
 8021ee4:	f104 4440 	add.w	r4, r4, #3221225472	; 0xc0000000
 8021ee8:	f504 1480 	add.w	r4, r4, #1048576	; 0x100000
 8021eec:	4323      	orrs	r3, r4
 8021eee:	d108      	bne.n	8021f02 <__ieee754_pow+0x1b2>
 8021ef0:	465a      	mov	r2, fp
 8021ef2:	4663      	mov	r3, ip
 8021ef4:	4658      	mov	r0, fp
 8021ef6:	4661      	mov	r1, ip
 8021ef8:	f7de f99e 	bl	8000238 <__aeabi_dsub>
 8021efc:	4602      	mov	r2, r0
 8021efe:	460b      	mov	r3, r1
 8021f00:	e78e      	b.n	8021e20 <__ieee754_pow+0xd0>
 8021f02:	9b00      	ldr	r3, [sp, #0]
 8021f04:	2b01      	cmp	r3, #1
 8021f06:	d1a7      	bne.n	8021e58 <__ieee754_pow+0x108>
 8021f08:	f10c 4300 	add.w	r3, ip, #2147483648	; 0x80000000
 8021f0c:	469c      	mov	ip, r3
 8021f0e:	e7a3      	b.n	8021e58 <__ieee754_pow+0x108>
 8021f10:	ea4f 73d9 	mov.w	r3, r9, lsr #31
 8021f14:	3b01      	subs	r3, #1
 8021f16:	930c      	str	r3, [sp, #48]	; 0x30
 8021f18:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8021f1a:	9b00      	ldr	r3, [sp, #0]
 8021f1c:	4313      	orrs	r3, r2
 8021f1e:	d104      	bne.n	8021f2a <__ieee754_pow+0x1da>
 8021f20:	463a      	mov	r2, r7
 8021f22:	4643      	mov	r3, r8
 8021f24:	4638      	mov	r0, r7
 8021f26:	4641      	mov	r1, r8
 8021f28:	e7e6      	b.n	8021ef8 <__ieee754_pow+0x1a8>
 8021f2a:	4b15      	ldr	r3, [pc, #84]	; (8021f80 <__ieee754_pow+0x230>)
 8021f2c:	429d      	cmp	r5, r3
 8021f2e:	f340 80f9 	ble.w	8022124 <__ieee754_pow+0x3d4>
 8021f32:	f103 7304 	add.w	r3, r3, #34603008	; 0x2100000
 8021f36:	429d      	cmp	r5, r3
 8021f38:	4b0f      	ldr	r3, [pc, #60]	; (8021f78 <__ieee754_pow+0x228>)
 8021f3a:	dd09      	ble.n	8021f50 <__ieee754_pow+0x200>
 8021f3c:	429c      	cmp	r4, r3
 8021f3e:	dc0c      	bgt.n	8021f5a <__ieee754_pow+0x20a>
 8021f40:	2e00      	cmp	r6, #0
 8021f42:	da85      	bge.n	8021e50 <__ieee754_pow+0x100>
 8021f44:	a306      	add	r3, pc, #24	; (adr r3, 8021f60 <__ieee754_pow+0x210>)
 8021f46:	e9d3 2300 	ldrd	r2, r3, [r3]
 8021f4a:	4610      	mov	r0, r2
 8021f4c:	4619      	mov	r1, r3
 8021f4e:	e798      	b.n	8021e82 <__ieee754_pow+0x132>
 8021f50:	429c      	cmp	r4, r3
 8021f52:	dbf5      	blt.n	8021f40 <__ieee754_pow+0x1f0>
 8021f54:	4b07      	ldr	r3, [pc, #28]	; (8021f74 <__ieee754_pow+0x224>)
 8021f56:	429c      	cmp	r4, r3
 8021f58:	dd14      	ble.n	8021f84 <__ieee754_pow+0x234>
 8021f5a:	2e00      	cmp	r6, #0
 8021f5c:	dcf2      	bgt.n	8021f44 <__ieee754_pow+0x1f4>
 8021f5e:	e777      	b.n	8021e50 <__ieee754_pow+0x100>
 8021f60:	8800759c 	.word	0x8800759c
 8021f64:	7e37e43c 	.word	0x7e37e43c
 8021f68:	7ff00000 	.word	0x7ff00000
 8021f6c:	08027009 	.word	0x08027009
 8021f70:	433fffff 	.word	0x433fffff
 8021f74:	3ff00000 	.word	0x3ff00000
 8021f78:	3fefffff 	.word	0x3fefffff
 8021f7c:	3fe00000 	.word	0x3fe00000
 8021f80:	41e00000 	.word	0x41e00000
 8021f84:	4661      	mov	r1, ip
 8021f86:	4b62      	ldr	r3, [pc, #392]	; (8022110 <__ieee754_pow+0x3c0>)
 8021f88:	2200      	movs	r2, #0
 8021f8a:	4658      	mov	r0, fp
 8021f8c:	f7de f954 	bl	8000238 <__aeabi_dsub>
 8021f90:	a355      	add	r3, pc, #340	; (adr r3, 80220e8 <__ieee754_pow+0x398>)
 8021f92:	e9d3 2300 	ldrd	r2, r3, [r3]
 8021f96:	4604      	mov	r4, r0
 8021f98:	460d      	mov	r5, r1
 8021f9a:	f7de fb05 	bl	80005a8 <__aeabi_dmul>
 8021f9e:	a354      	add	r3, pc, #336	; (adr r3, 80220f0 <__ieee754_pow+0x3a0>)
 8021fa0:	e9d3 2300 	ldrd	r2, r3, [r3]
 8021fa4:	4606      	mov	r6, r0
 8021fa6:	460f      	mov	r7, r1
 8021fa8:	4620      	mov	r0, r4
 8021faa:	4629      	mov	r1, r5
 8021fac:	f7de fafc 	bl	80005a8 <__aeabi_dmul>
 8021fb0:	4b58      	ldr	r3, [pc, #352]	; (8022114 <__ieee754_pow+0x3c4>)
 8021fb2:	4682      	mov	sl, r0
 8021fb4:	468b      	mov	fp, r1
 8021fb6:	2200      	movs	r2, #0
 8021fb8:	4620      	mov	r0, r4
 8021fba:	4629      	mov	r1, r5
 8021fbc:	f7de faf4 	bl	80005a8 <__aeabi_dmul>
 8021fc0:	4602      	mov	r2, r0
 8021fc2:	460b      	mov	r3, r1
 8021fc4:	a14c      	add	r1, pc, #304	; (adr r1, 80220f8 <__ieee754_pow+0x3a8>)
 8021fc6:	e9d1 0100 	ldrd	r0, r1, [r1]
 8021fca:	f7de f935 	bl	8000238 <__aeabi_dsub>
 8021fce:	4622      	mov	r2, r4
 8021fd0:	462b      	mov	r3, r5
 8021fd2:	f7de fae9 	bl	80005a8 <__aeabi_dmul>
 8021fd6:	4602      	mov	r2, r0
 8021fd8:	460b      	mov	r3, r1
 8021fda:	2000      	movs	r0, #0
 8021fdc:	494e      	ldr	r1, [pc, #312]	; (8022118 <__ieee754_pow+0x3c8>)
 8021fde:	f7de f92b 	bl	8000238 <__aeabi_dsub>
 8021fe2:	4622      	mov	r2, r4
 8021fe4:	462b      	mov	r3, r5
 8021fe6:	4680      	mov	r8, r0
 8021fe8:	4689      	mov	r9, r1
 8021fea:	4620      	mov	r0, r4
 8021fec:	4629      	mov	r1, r5
 8021fee:	f7de fadb 	bl	80005a8 <__aeabi_dmul>
 8021ff2:	4602      	mov	r2, r0
 8021ff4:	460b      	mov	r3, r1
 8021ff6:	4640      	mov	r0, r8
 8021ff8:	4649      	mov	r1, r9
 8021ffa:	f7de fad5 	bl	80005a8 <__aeabi_dmul>
 8021ffe:	a340      	add	r3, pc, #256	; (adr r3, 8022100 <__ieee754_pow+0x3b0>)
 8022000:	e9d3 2300 	ldrd	r2, r3, [r3]
 8022004:	f7de fad0 	bl	80005a8 <__aeabi_dmul>
 8022008:	4602      	mov	r2, r0
 802200a:	460b      	mov	r3, r1
 802200c:	4650      	mov	r0, sl
 802200e:	4659      	mov	r1, fp
 8022010:	f7de f912 	bl	8000238 <__aeabi_dsub>
 8022014:	4602      	mov	r2, r0
 8022016:	460b      	mov	r3, r1
 8022018:	4604      	mov	r4, r0
 802201a:	460d      	mov	r5, r1
 802201c:	4630      	mov	r0, r6
 802201e:	4639      	mov	r1, r7
 8022020:	f7de f90c 	bl	800023c <__adddf3>
 8022024:	f04f 0a00 	mov.w	sl, #0
 8022028:	4632      	mov	r2, r6
 802202a:	463b      	mov	r3, r7
 802202c:	4650      	mov	r0, sl
 802202e:	468b      	mov	fp, r1
 8022030:	f7de f902 	bl	8000238 <__aeabi_dsub>
 8022034:	4602      	mov	r2, r0
 8022036:	460b      	mov	r3, r1
 8022038:	4620      	mov	r0, r4
 802203a:	4629      	mov	r1, r5
 802203c:	f7de f8fc 	bl	8000238 <__aeabi_dsub>
 8022040:	9b00      	ldr	r3, [sp, #0]
 8022042:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8022044:	3b01      	subs	r3, #1
 8022046:	4313      	orrs	r3, r2
 8022048:	e9dd 6702 	ldrd	r6, r7, [sp, #8]
 802204c:	bf0c      	ite	eq
 802204e:	4b33      	ldreq	r3, [pc, #204]	; (802211c <__ieee754_pow+0x3cc>)
 8022050:	4b2f      	ldrne	r3, [pc, #188]	; (8022110 <__ieee754_pow+0x3c0>)
 8022052:	2600      	movs	r6, #0
 8022054:	2200      	movs	r2, #0
 8022056:	e9cd 2300 	strd	r2, r3, [sp]
 802205a:	4604      	mov	r4, r0
 802205c:	460d      	mov	r5, r1
 802205e:	4632      	mov	r2, r6
 8022060:	463b      	mov	r3, r7
 8022062:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8022066:	f7de f8e7 	bl	8000238 <__aeabi_dsub>
 802206a:	4652      	mov	r2, sl
 802206c:	465b      	mov	r3, fp
 802206e:	f7de fa9b 	bl	80005a8 <__aeabi_dmul>
 8022072:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8022076:	4680      	mov	r8, r0
 8022078:	4689      	mov	r9, r1
 802207a:	4620      	mov	r0, r4
 802207c:	4629      	mov	r1, r5
 802207e:	f7de fa93 	bl	80005a8 <__aeabi_dmul>
 8022082:	4602      	mov	r2, r0
 8022084:	460b      	mov	r3, r1
 8022086:	4640      	mov	r0, r8
 8022088:	4649      	mov	r1, r9
 802208a:	f7de f8d7 	bl	800023c <__adddf3>
 802208e:	4632      	mov	r2, r6
 8022090:	463b      	mov	r3, r7
 8022092:	4680      	mov	r8, r0
 8022094:	4689      	mov	r9, r1
 8022096:	4650      	mov	r0, sl
 8022098:	4659      	mov	r1, fp
 802209a:	f7de fa85 	bl	80005a8 <__aeabi_dmul>
 802209e:	460b      	mov	r3, r1
 80220a0:	4604      	mov	r4, r0
 80220a2:	460d      	mov	r5, r1
 80220a4:	4602      	mov	r2, r0
 80220a6:	4649      	mov	r1, r9
 80220a8:	4640      	mov	r0, r8
 80220aa:	e9cd 4502 	strd	r4, r5, [sp, #8]
 80220ae:	f7de f8c5 	bl	800023c <__adddf3>
 80220b2:	4b1b      	ldr	r3, [pc, #108]	; (8022120 <__ieee754_pow+0x3d0>)
 80220b4:	4299      	cmp	r1, r3
 80220b6:	4682      	mov	sl, r0
 80220b8:	460f      	mov	r7, r1
 80220ba:	460e      	mov	r6, r1
 80220bc:	f340 82ef 	ble.w	802269e <__ieee754_pow+0x94e>
 80220c0:	f101 433f 	add.w	r3, r1, #3204448256	; 0xbf000000
 80220c4:	f503 03e0 	add.w	r3, r3, #7340032	; 0x700000
 80220c8:	4303      	orrs	r3, r0
 80220ca:	f000 81e9 	beq.w	80224a0 <__ieee754_pow+0x750>
 80220ce:	a30e      	add	r3, pc, #56	; (adr r3, 8022108 <__ieee754_pow+0x3b8>)
 80220d0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80220d4:	e9dd 0100 	ldrd	r0, r1, [sp]
 80220d8:	f7de fa66 	bl	80005a8 <__aeabi_dmul>
 80220dc:	a30a      	add	r3, pc, #40	; (adr r3, 8022108 <__ieee754_pow+0x3b8>)
 80220de:	e9d3 2300 	ldrd	r2, r3, [r3]
 80220e2:	e6ce      	b.n	8021e82 <__ieee754_pow+0x132>
 80220e4:	f3af 8000 	nop.w
 80220e8:	60000000 	.word	0x60000000
 80220ec:	3ff71547 	.word	0x3ff71547
 80220f0:	f85ddf44 	.word	0xf85ddf44
 80220f4:	3e54ae0b 	.word	0x3e54ae0b
 80220f8:	55555555 	.word	0x55555555
 80220fc:	3fd55555 	.word	0x3fd55555
 8022100:	652b82fe 	.word	0x652b82fe
 8022104:	3ff71547 	.word	0x3ff71547
 8022108:	8800759c 	.word	0x8800759c
 802210c:	7e37e43c 	.word	0x7e37e43c
 8022110:	3ff00000 	.word	0x3ff00000
 8022114:	3fd00000 	.word	0x3fd00000
 8022118:	3fe00000 	.word	0x3fe00000
 802211c:	bff00000 	.word	0xbff00000
 8022120:	408fffff 	.word	0x408fffff
 8022124:	4bd4      	ldr	r3, [pc, #848]	; (8022478 <__ieee754_pow+0x728>)
 8022126:	ea09 0303 	and.w	r3, r9, r3
 802212a:	2200      	movs	r2, #0
 802212c:	b943      	cbnz	r3, 8022140 <__ieee754_pow+0x3f0>
 802212e:	4658      	mov	r0, fp
 8022130:	4bd2      	ldr	r3, [pc, #840]	; (802247c <__ieee754_pow+0x72c>)
 8022132:	4661      	mov	r1, ip
 8022134:	f7de fa38 	bl	80005a8 <__aeabi_dmul>
 8022138:	f06f 0234 	mvn.w	r2, #52	; 0x34
 802213c:	4683      	mov	fp, r0
 802213e:	460c      	mov	r4, r1
 8022140:	1523      	asrs	r3, r4, #20
 8022142:	f2a3 33ff 	subw	r3, r3, #1023	; 0x3ff
 8022146:	4413      	add	r3, r2
 8022148:	930b      	str	r3, [sp, #44]	; 0x2c
 802214a:	4bcd      	ldr	r3, [pc, #820]	; (8022480 <__ieee754_pow+0x730>)
 802214c:	f3c4 0413 	ubfx	r4, r4, #0, #20
 8022150:	f044 557f 	orr.w	r5, r4, #1069547520	; 0x3fc00000
 8022154:	429c      	cmp	r4, r3
 8022156:	f445 1540 	orr.w	r5, r5, #3145728	; 0x300000
 802215a:	dd08      	ble.n	802216e <__ieee754_pow+0x41e>
 802215c:	4bc9      	ldr	r3, [pc, #804]	; (8022484 <__ieee754_pow+0x734>)
 802215e:	429c      	cmp	r4, r3
 8022160:	f340 819c 	ble.w	802249c <__ieee754_pow+0x74c>
 8022164:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8022166:	3301      	adds	r3, #1
 8022168:	930b      	str	r3, [sp, #44]	; 0x2c
 802216a:	f5a5 1580 	sub.w	r5, r5, #1048576	; 0x100000
 802216e:	2600      	movs	r6, #0
 8022170:	00f3      	lsls	r3, r6, #3
 8022172:	930d      	str	r3, [sp, #52]	; 0x34
 8022174:	4bc4      	ldr	r3, [pc, #784]	; (8022488 <__ieee754_pow+0x738>)
 8022176:	eb03 03c6 	add.w	r3, r3, r6, lsl #3
 802217a:	e9d3 3400 	ldrd	r3, r4, [r3]
 802217e:	4658      	mov	r0, fp
 8022180:	e9cd 3408 	strd	r3, r4, [sp, #32]
 8022184:	461a      	mov	r2, r3
 8022186:	4629      	mov	r1, r5
 8022188:	4623      	mov	r3, r4
 802218a:	f7de f855 	bl	8000238 <__aeabi_dsub>
 802218e:	46da      	mov	sl, fp
 8022190:	4652      	mov	r2, sl
 8022192:	462b      	mov	r3, r5
 8022194:	e9cd 010e 	strd	r0, r1, [sp, #56]	; 0x38
 8022198:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
 802219c:	f7de f84e 	bl	800023c <__adddf3>
 80221a0:	4602      	mov	r2, r0
 80221a2:	460b      	mov	r3, r1
 80221a4:	2000      	movs	r0, #0
 80221a6:	49b9      	ldr	r1, [pc, #740]	; (802248c <__ieee754_pow+0x73c>)
 80221a8:	f7de fb28 	bl	80007fc <__aeabi_ddiv>
 80221ac:	4602      	mov	r2, r0
 80221ae:	460b      	mov	r3, r1
 80221b0:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 80221b4:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	; 0x38
 80221b8:	f7de f9f6 	bl	80005a8 <__aeabi_dmul>
 80221bc:	e9cd 0106 	strd	r0, r1, [sp, #24]
 80221c0:	e9dd 3406 	ldrd	r3, r4, [sp, #24]
 80221c4:	e9cd 3404 	strd	r3, r4, [sp, #16]
 80221c8:	2300      	movs	r3, #0
 80221ca:	9304      	str	r3, [sp, #16]
 80221cc:	e9dd 8904 	ldrd	r8, r9, [sp, #16]
 80221d0:	46ab      	mov	fp, r5
 80221d2:	106d      	asrs	r5, r5, #1
 80221d4:	f045 5500 	orr.w	r5, r5, #536870912	; 0x20000000
 80221d8:	f505 2500 	add.w	r5, r5, #524288	; 0x80000
 80221dc:	eb05 4386 	add.w	r3, r5, r6, lsl #18
 80221e0:	2200      	movs	r2, #0
 80221e2:	4640      	mov	r0, r8
 80221e4:	4649      	mov	r1, r9
 80221e6:	4614      	mov	r4, r2
 80221e8:	461d      	mov	r5, r3
 80221ea:	f7de f9dd 	bl	80005a8 <__aeabi_dmul>
 80221ee:	4602      	mov	r2, r0
 80221f0:	460b      	mov	r3, r1
 80221f2:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	; 0x38
 80221f6:	f7de f81f 	bl	8000238 <__aeabi_dsub>
 80221fa:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 80221fe:	4606      	mov	r6, r0
 8022200:	460f      	mov	r7, r1
 8022202:	4620      	mov	r0, r4
 8022204:	4629      	mov	r1, r5
 8022206:	f7de f817 	bl	8000238 <__aeabi_dsub>
 802220a:	4602      	mov	r2, r0
 802220c:	460b      	mov	r3, r1
 802220e:	4650      	mov	r0, sl
 8022210:	4659      	mov	r1, fp
 8022212:	f7de f811 	bl	8000238 <__aeabi_dsub>
 8022216:	4642      	mov	r2, r8
 8022218:	464b      	mov	r3, r9
 802221a:	f7de f9c5 	bl	80005a8 <__aeabi_dmul>
 802221e:	4602      	mov	r2, r0
 8022220:	460b      	mov	r3, r1
 8022222:	4630      	mov	r0, r6
 8022224:	4639      	mov	r1, r7
 8022226:	f7de f807 	bl	8000238 <__aeabi_dsub>
 802222a:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 802222e:	f7de f9bb 	bl	80005a8 <__aeabi_dmul>
 8022232:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8022236:	e9cd 0108 	strd	r0, r1, [sp, #32]
 802223a:	4610      	mov	r0, r2
 802223c:	4619      	mov	r1, r3
 802223e:	f7de f9b3 	bl	80005a8 <__aeabi_dmul>
 8022242:	a37b      	add	r3, pc, #492	; (adr r3, 8022430 <__ieee754_pow+0x6e0>)
 8022244:	e9d3 2300 	ldrd	r2, r3, [r3]
 8022248:	4604      	mov	r4, r0
 802224a:	460d      	mov	r5, r1
 802224c:	f7de f9ac 	bl	80005a8 <__aeabi_dmul>
 8022250:	a379      	add	r3, pc, #484	; (adr r3, 8022438 <__ieee754_pow+0x6e8>)
 8022252:	e9d3 2300 	ldrd	r2, r3, [r3]
 8022256:	f7dd fff1 	bl	800023c <__adddf3>
 802225a:	4622      	mov	r2, r4
 802225c:	462b      	mov	r3, r5
 802225e:	f7de f9a3 	bl	80005a8 <__aeabi_dmul>
 8022262:	a377      	add	r3, pc, #476	; (adr r3, 8022440 <__ieee754_pow+0x6f0>)
 8022264:	e9d3 2300 	ldrd	r2, r3, [r3]
 8022268:	f7dd ffe8 	bl	800023c <__adddf3>
 802226c:	4622      	mov	r2, r4
 802226e:	462b      	mov	r3, r5
 8022270:	f7de f99a 	bl	80005a8 <__aeabi_dmul>
 8022274:	a374      	add	r3, pc, #464	; (adr r3, 8022448 <__ieee754_pow+0x6f8>)
 8022276:	e9d3 2300 	ldrd	r2, r3, [r3]
 802227a:	f7dd ffdf 	bl	800023c <__adddf3>
 802227e:	4622      	mov	r2, r4
 8022280:	462b      	mov	r3, r5
 8022282:	f7de f991 	bl	80005a8 <__aeabi_dmul>
 8022286:	a372      	add	r3, pc, #456	; (adr r3, 8022450 <__ieee754_pow+0x700>)
 8022288:	e9d3 2300 	ldrd	r2, r3, [r3]
 802228c:	f7dd ffd6 	bl	800023c <__adddf3>
 8022290:	4622      	mov	r2, r4
 8022292:	462b      	mov	r3, r5
 8022294:	f7de f988 	bl	80005a8 <__aeabi_dmul>
 8022298:	a36f      	add	r3, pc, #444	; (adr r3, 8022458 <__ieee754_pow+0x708>)
 802229a:	e9d3 2300 	ldrd	r2, r3, [r3]
 802229e:	f7dd ffcd 	bl	800023c <__adddf3>
 80222a2:	4622      	mov	r2, r4
 80222a4:	4606      	mov	r6, r0
 80222a6:	460f      	mov	r7, r1
 80222a8:	462b      	mov	r3, r5
 80222aa:	4620      	mov	r0, r4
 80222ac:	4629      	mov	r1, r5
 80222ae:	f7de f97b 	bl	80005a8 <__aeabi_dmul>
 80222b2:	4602      	mov	r2, r0
 80222b4:	460b      	mov	r3, r1
 80222b6:	4630      	mov	r0, r6
 80222b8:	4639      	mov	r1, r7
 80222ba:	f7de f975 	bl	80005a8 <__aeabi_dmul>
 80222be:	4642      	mov	r2, r8
 80222c0:	4604      	mov	r4, r0
 80222c2:	460d      	mov	r5, r1
 80222c4:	464b      	mov	r3, r9
 80222c6:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 80222ca:	f7dd ffb7 	bl	800023c <__adddf3>
 80222ce:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 80222d2:	f7de f969 	bl	80005a8 <__aeabi_dmul>
 80222d6:	4622      	mov	r2, r4
 80222d8:	462b      	mov	r3, r5
 80222da:	f7dd ffaf 	bl	800023c <__adddf3>
 80222de:	4642      	mov	r2, r8
 80222e0:	4606      	mov	r6, r0
 80222e2:	460f      	mov	r7, r1
 80222e4:	464b      	mov	r3, r9
 80222e6:	4640      	mov	r0, r8
 80222e8:	4649      	mov	r1, r9
 80222ea:	f7de f95d 	bl	80005a8 <__aeabi_dmul>
 80222ee:	4b68      	ldr	r3, [pc, #416]	; (8022490 <__ieee754_pow+0x740>)
 80222f0:	2200      	movs	r2, #0
 80222f2:	4682      	mov	sl, r0
 80222f4:	468b      	mov	fp, r1
 80222f6:	f7dd ffa1 	bl	800023c <__adddf3>
 80222fa:	4632      	mov	r2, r6
 80222fc:	463b      	mov	r3, r7
 80222fe:	f7dd ff9d 	bl	800023c <__adddf3>
 8022302:	9c04      	ldr	r4, [sp, #16]
 8022304:	460d      	mov	r5, r1
 8022306:	4622      	mov	r2, r4
 8022308:	460b      	mov	r3, r1
 802230a:	4640      	mov	r0, r8
 802230c:	4649      	mov	r1, r9
 802230e:	f7de f94b 	bl	80005a8 <__aeabi_dmul>
 8022312:	4b5f      	ldr	r3, [pc, #380]	; (8022490 <__ieee754_pow+0x740>)
 8022314:	4680      	mov	r8, r0
 8022316:	4689      	mov	r9, r1
 8022318:	2200      	movs	r2, #0
 802231a:	4620      	mov	r0, r4
 802231c:	4629      	mov	r1, r5
 802231e:	f7dd ff8b 	bl	8000238 <__aeabi_dsub>
 8022322:	4652      	mov	r2, sl
 8022324:	465b      	mov	r3, fp
 8022326:	f7dd ff87 	bl	8000238 <__aeabi_dsub>
 802232a:	4602      	mov	r2, r0
 802232c:	460b      	mov	r3, r1
 802232e:	4630      	mov	r0, r6
 8022330:	4639      	mov	r1, r7
 8022332:	f7dd ff81 	bl	8000238 <__aeabi_dsub>
 8022336:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 802233a:	f7de f935 	bl	80005a8 <__aeabi_dmul>
 802233e:	4622      	mov	r2, r4
 8022340:	4606      	mov	r6, r0
 8022342:	460f      	mov	r7, r1
 8022344:	462b      	mov	r3, r5
 8022346:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
 802234a:	f7de f92d 	bl	80005a8 <__aeabi_dmul>
 802234e:	4602      	mov	r2, r0
 8022350:	460b      	mov	r3, r1
 8022352:	4630      	mov	r0, r6
 8022354:	4639      	mov	r1, r7
 8022356:	f7dd ff71 	bl	800023c <__adddf3>
 802235a:	4606      	mov	r6, r0
 802235c:	460f      	mov	r7, r1
 802235e:	4602      	mov	r2, r0
 8022360:	460b      	mov	r3, r1
 8022362:	4640      	mov	r0, r8
 8022364:	4649      	mov	r1, r9
 8022366:	f7dd ff69 	bl	800023c <__adddf3>
 802236a:	9c04      	ldr	r4, [sp, #16]
 802236c:	a33c      	add	r3, pc, #240	; (adr r3, 8022460 <__ieee754_pow+0x710>)
 802236e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8022372:	4620      	mov	r0, r4
 8022374:	460d      	mov	r5, r1
 8022376:	f7de f917 	bl	80005a8 <__aeabi_dmul>
 802237a:	4642      	mov	r2, r8
 802237c:	e9cd 0106 	strd	r0, r1, [sp, #24]
 8022380:	464b      	mov	r3, r9
 8022382:	4620      	mov	r0, r4
 8022384:	4629      	mov	r1, r5
 8022386:	f7dd ff57 	bl	8000238 <__aeabi_dsub>
 802238a:	4602      	mov	r2, r0
 802238c:	460b      	mov	r3, r1
 802238e:	4630      	mov	r0, r6
 8022390:	4639      	mov	r1, r7
 8022392:	f7dd ff51 	bl	8000238 <__aeabi_dsub>
 8022396:	a334      	add	r3, pc, #208	; (adr r3, 8022468 <__ieee754_pow+0x718>)
 8022398:	e9d3 2300 	ldrd	r2, r3, [r3]
 802239c:	f7de f904 	bl	80005a8 <__aeabi_dmul>
 80223a0:	a333      	add	r3, pc, #204	; (adr r3, 8022470 <__ieee754_pow+0x720>)
 80223a2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80223a6:	4606      	mov	r6, r0
 80223a8:	460f      	mov	r7, r1
 80223aa:	4620      	mov	r0, r4
 80223ac:	4629      	mov	r1, r5
 80223ae:	f7de f8fb 	bl	80005a8 <__aeabi_dmul>
 80223b2:	4602      	mov	r2, r0
 80223b4:	460b      	mov	r3, r1
 80223b6:	4630      	mov	r0, r6
 80223b8:	4639      	mov	r1, r7
 80223ba:	f7dd ff3f 	bl	800023c <__adddf3>
 80223be:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80223c0:	4b34      	ldr	r3, [pc, #208]	; (8022494 <__ieee754_pow+0x744>)
 80223c2:	4413      	add	r3, r2
 80223c4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80223c8:	f7dd ff38 	bl	800023c <__adddf3>
 80223cc:	4680      	mov	r8, r0
 80223ce:	980b      	ldr	r0, [sp, #44]	; 0x2c
 80223d0:	4689      	mov	r9, r1
 80223d2:	f7de f87f 	bl	80004d4 <__aeabi_i2d>
 80223d6:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80223d8:	4b2f      	ldr	r3, [pc, #188]	; (8022498 <__ieee754_pow+0x748>)
 80223da:	4413      	add	r3, r2
 80223dc:	e9d3 6700 	ldrd	r6, r7, [r3]
 80223e0:	4604      	mov	r4, r0
 80223e2:	460d      	mov	r5, r1
 80223e4:	4642      	mov	r2, r8
 80223e6:	464b      	mov	r3, r9
 80223e8:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 80223ec:	f7dd ff26 	bl	800023c <__adddf3>
 80223f0:	4632      	mov	r2, r6
 80223f2:	463b      	mov	r3, r7
 80223f4:	f7dd ff22 	bl	800023c <__adddf3>
 80223f8:	4622      	mov	r2, r4
 80223fa:	462b      	mov	r3, r5
 80223fc:	f7dd ff1e 	bl	800023c <__adddf3>
 8022400:	f8dd a010 	ldr.w	sl, [sp, #16]
 8022404:	4622      	mov	r2, r4
 8022406:	462b      	mov	r3, r5
 8022408:	4650      	mov	r0, sl
 802240a:	468b      	mov	fp, r1
 802240c:	f7dd ff14 	bl	8000238 <__aeabi_dsub>
 8022410:	4632      	mov	r2, r6
 8022412:	463b      	mov	r3, r7
 8022414:	f7dd ff10 	bl	8000238 <__aeabi_dsub>
 8022418:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 802241c:	f7dd ff0c 	bl	8000238 <__aeabi_dsub>
 8022420:	4602      	mov	r2, r0
 8022422:	460b      	mov	r3, r1
 8022424:	4640      	mov	r0, r8
 8022426:	4649      	mov	r1, r9
 8022428:	e608      	b.n	802203c <__ieee754_pow+0x2ec>
 802242a:	bf00      	nop
 802242c:	f3af 8000 	nop.w
 8022430:	4a454eef 	.word	0x4a454eef
 8022434:	3fca7e28 	.word	0x3fca7e28
 8022438:	93c9db65 	.word	0x93c9db65
 802243c:	3fcd864a 	.word	0x3fcd864a
 8022440:	a91d4101 	.word	0xa91d4101
 8022444:	3fd17460 	.word	0x3fd17460
 8022448:	518f264d 	.word	0x518f264d
 802244c:	3fd55555 	.word	0x3fd55555
 8022450:	db6fabff 	.word	0xdb6fabff
 8022454:	3fdb6db6 	.word	0x3fdb6db6
 8022458:	33333303 	.word	0x33333303
 802245c:	3fe33333 	.word	0x3fe33333
 8022460:	e0000000 	.word	0xe0000000
 8022464:	3feec709 	.word	0x3feec709
 8022468:	dc3a03fd 	.word	0xdc3a03fd
 802246c:	3feec709 	.word	0x3feec709
 8022470:	145b01f5 	.word	0x145b01f5
 8022474:	be3e2fe0 	.word	0xbe3e2fe0
 8022478:	7ff00000 	.word	0x7ff00000
 802247c:	43400000 	.word	0x43400000
 8022480:	0003988e 	.word	0x0003988e
 8022484:	000bb679 	.word	0x000bb679
 8022488:	08026980 	.word	0x08026980
 802248c:	3ff00000 	.word	0x3ff00000
 8022490:	40080000 	.word	0x40080000
 8022494:	080269a0 	.word	0x080269a0
 8022498:	08026990 	.word	0x08026990
 802249c:	2601      	movs	r6, #1
 802249e:	e667      	b.n	8022170 <__ieee754_pow+0x420>
 80224a0:	a39d      	add	r3, pc, #628	; (adr r3, 8022718 <__ieee754_pow+0x9c8>)
 80224a2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80224a6:	4640      	mov	r0, r8
 80224a8:	4649      	mov	r1, r9
 80224aa:	f7dd fec7 	bl	800023c <__adddf3>
 80224ae:	4622      	mov	r2, r4
 80224b0:	e9cd 0104 	strd	r0, r1, [sp, #16]
 80224b4:	462b      	mov	r3, r5
 80224b6:	4650      	mov	r0, sl
 80224b8:	4639      	mov	r1, r7
 80224ba:	f7dd febd 	bl	8000238 <__aeabi_dsub>
 80224be:	4602      	mov	r2, r0
 80224c0:	460b      	mov	r3, r1
 80224c2:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 80224c6:	f7de faff 	bl	8000ac8 <__aeabi_dcmpgt>
 80224ca:	2800      	cmp	r0, #0
 80224cc:	f47f adff 	bne.w	80220ce <__ieee754_pow+0x37e>
 80224d0:	4aa5      	ldr	r2, [pc, #660]	; (8022768 <__ieee754_pow+0xa18>)
 80224d2:	f026 4300 	bic.w	r3, r6, #2147483648	; 0x80000000
 80224d6:	4293      	cmp	r3, r2
 80224d8:	f340 8103 	ble.w	80226e2 <__ieee754_pow+0x992>
 80224dc:	151b      	asrs	r3, r3, #20
 80224de:	f44f 1a80 	mov.w	sl, #1048576	; 0x100000
 80224e2:	f2a3 33fe 	subw	r3, r3, #1022	; 0x3fe
 80224e6:	fa4a f303 	asr.w	r3, sl, r3
 80224ea:	4433      	add	r3, r6
 80224ec:	f3c3 520a 	ubfx	r2, r3, #20, #11
 80224f0:	4f9e      	ldr	r7, [pc, #632]	; (802276c <__ieee754_pow+0xa1c>)
 80224f2:	f2a2 32ff 	subw	r2, r2, #1023	; 0x3ff
 80224f6:	4117      	asrs	r7, r2
 80224f8:	f3c3 0a13 	ubfx	sl, r3, #0, #20
 80224fc:	2000      	movs	r0, #0
 80224fe:	ea23 0107 	bic.w	r1, r3, r7
 8022502:	f1c2 0214 	rsb	r2, r2, #20
 8022506:	f44a 1a80 	orr.w	sl, sl, #1048576	; 0x100000
 802250a:	fa4a fa02 	asr.w	sl, sl, r2
 802250e:	2e00      	cmp	r6, #0
 8022510:	4602      	mov	r2, r0
 8022512:	460b      	mov	r3, r1
 8022514:	4620      	mov	r0, r4
 8022516:	4629      	mov	r1, r5
 8022518:	bfb8      	it	lt
 802251a:	f1ca 0a00 	rsblt	sl, sl, #0
 802251e:	f7dd fe8b 	bl	8000238 <__aeabi_dsub>
 8022522:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8022526:	4642      	mov	r2, r8
 8022528:	464b      	mov	r3, r9
 802252a:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 802252e:	f7dd fe85 	bl	800023c <__adddf3>
 8022532:	2400      	movs	r4, #0
 8022534:	a37a      	add	r3, pc, #488	; (adr r3, 8022720 <__ieee754_pow+0x9d0>)
 8022536:	e9d3 2300 	ldrd	r2, r3, [r3]
 802253a:	4620      	mov	r0, r4
 802253c:	460d      	mov	r5, r1
 802253e:	f7de f833 	bl	80005a8 <__aeabi_dmul>
 8022542:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8022546:	4606      	mov	r6, r0
 8022548:	460f      	mov	r7, r1
 802254a:	4620      	mov	r0, r4
 802254c:	4629      	mov	r1, r5
 802254e:	f7dd fe73 	bl	8000238 <__aeabi_dsub>
 8022552:	4602      	mov	r2, r0
 8022554:	460b      	mov	r3, r1
 8022556:	4640      	mov	r0, r8
 8022558:	4649      	mov	r1, r9
 802255a:	f7dd fe6d 	bl	8000238 <__aeabi_dsub>
 802255e:	a372      	add	r3, pc, #456	; (adr r3, 8022728 <__ieee754_pow+0x9d8>)
 8022560:	e9d3 2300 	ldrd	r2, r3, [r3]
 8022564:	f7de f820 	bl	80005a8 <__aeabi_dmul>
 8022568:	a371      	add	r3, pc, #452	; (adr r3, 8022730 <__ieee754_pow+0x9e0>)
 802256a:	e9d3 2300 	ldrd	r2, r3, [r3]
 802256e:	4680      	mov	r8, r0
 8022570:	4689      	mov	r9, r1
 8022572:	4620      	mov	r0, r4
 8022574:	4629      	mov	r1, r5
 8022576:	f7de f817 	bl	80005a8 <__aeabi_dmul>
 802257a:	4602      	mov	r2, r0
 802257c:	460b      	mov	r3, r1
 802257e:	4640      	mov	r0, r8
 8022580:	4649      	mov	r1, r9
 8022582:	f7dd fe5b 	bl	800023c <__adddf3>
 8022586:	4604      	mov	r4, r0
 8022588:	460d      	mov	r5, r1
 802258a:	4602      	mov	r2, r0
 802258c:	460b      	mov	r3, r1
 802258e:	4630      	mov	r0, r6
 8022590:	4639      	mov	r1, r7
 8022592:	f7dd fe53 	bl	800023c <__adddf3>
 8022596:	4632      	mov	r2, r6
 8022598:	463b      	mov	r3, r7
 802259a:	4680      	mov	r8, r0
 802259c:	4689      	mov	r9, r1
 802259e:	f7dd fe4b 	bl	8000238 <__aeabi_dsub>
 80225a2:	4602      	mov	r2, r0
 80225a4:	460b      	mov	r3, r1
 80225a6:	4620      	mov	r0, r4
 80225a8:	4629      	mov	r1, r5
 80225aa:	f7dd fe45 	bl	8000238 <__aeabi_dsub>
 80225ae:	4642      	mov	r2, r8
 80225b0:	4606      	mov	r6, r0
 80225b2:	460f      	mov	r7, r1
 80225b4:	464b      	mov	r3, r9
 80225b6:	4640      	mov	r0, r8
 80225b8:	4649      	mov	r1, r9
 80225ba:	f7dd fff5 	bl	80005a8 <__aeabi_dmul>
 80225be:	a35e      	add	r3, pc, #376	; (adr r3, 8022738 <__ieee754_pow+0x9e8>)
 80225c0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80225c4:	4604      	mov	r4, r0
 80225c6:	460d      	mov	r5, r1
 80225c8:	f7dd ffee 	bl	80005a8 <__aeabi_dmul>
 80225cc:	a35c      	add	r3, pc, #368	; (adr r3, 8022740 <__ieee754_pow+0x9f0>)
 80225ce:	e9d3 2300 	ldrd	r2, r3, [r3]
 80225d2:	f7dd fe31 	bl	8000238 <__aeabi_dsub>
 80225d6:	4622      	mov	r2, r4
 80225d8:	462b      	mov	r3, r5
 80225da:	f7dd ffe5 	bl	80005a8 <__aeabi_dmul>
 80225de:	a35a      	add	r3, pc, #360	; (adr r3, 8022748 <__ieee754_pow+0x9f8>)
 80225e0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80225e4:	f7dd fe2a 	bl	800023c <__adddf3>
 80225e8:	4622      	mov	r2, r4
 80225ea:	462b      	mov	r3, r5
 80225ec:	f7dd ffdc 	bl	80005a8 <__aeabi_dmul>
 80225f0:	a357      	add	r3, pc, #348	; (adr r3, 8022750 <__ieee754_pow+0xa00>)
 80225f2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80225f6:	f7dd fe1f 	bl	8000238 <__aeabi_dsub>
 80225fa:	4622      	mov	r2, r4
 80225fc:	462b      	mov	r3, r5
 80225fe:	f7dd ffd3 	bl	80005a8 <__aeabi_dmul>
 8022602:	a355      	add	r3, pc, #340	; (adr r3, 8022758 <__ieee754_pow+0xa08>)
 8022604:	e9d3 2300 	ldrd	r2, r3, [r3]
 8022608:	f7dd fe18 	bl	800023c <__adddf3>
 802260c:	4622      	mov	r2, r4
 802260e:	462b      	mov	r3, r5
 8022610:	f7dd ffca 	bl	80005a8 <__aeabi_dmul>
 8022614:	4602      	mov	r2, r0
 8022616:	460b      	mov	r3, r1
 8022618:	4640      	mov	r0, r8
 802261a:	4649      	mov	r1, r9
 802261c:	f7dd fe0c 	bl	8000238 <__aeabi_dsub>
 8022620:	4604      	mov	r4, r0
 8022622:	460d      	mov	r5, r1
 8022624:	4602      	mov	r2, r0
 8022626:	460b      	mov	r3, r1
 8022628:	4640      	mov	r0, r8
 802262a:	4649      	mov	r1, r9
 802262c:	f7dd ffbc 	bl	80005a8 <__aeabi_dmul>
 8022630:	2200      	movs	r2, #0
 8022632:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8022636:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 802263a:	4620      	mov	r0, r4
 802263c:	4629      	mov	r1, r5
 802263e:	f7dd fdfb 	bl	8000238 <__aeabi_dsub>
 8022642:	4602      	mov	r2, r0
 8022644:	460b      	mov	r3, r1
 8022646:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 802264a:	f7de f8d7 	bl	80007fc <__aeabi_ddiv>
 802264e:	4632      	mov	r2, r6
 8022650:	4604      	mov	r4, r0
 8022652:	460d      	mov	r5, r1
 8022654:	463b      	mov	r3, r7
 8022656:	4640      	mov	r0, r8
 8022658:	4649      	mov	r1, r9
 802265a:	f7dd ffa5 	bl	80005a8 <__aeabi_dmul>
 802265e:	4632      	mov	r2, r6
 8022660:	463b      	mov	r3, r7
 8022662:	f7dd fdeb 	bl	800023c <__adddf3>
 8022666:	4602      	mov	r2, r0
 8022668:	460b      	mov	r3, r1
 802266a:	4620      	mov	r0, r4
 802266c:	4629      	mov	r1, r5
 802266e:	f7dd fde3 	bl	8000238 <__aeabi_dsub>
 8022672:	4642      	mov	r2, r8
 8022674:	464b      	mov	r3, r9
 8022676:	f7dd fddf 	bl	8000238 <__aeabi_dsub>
 802267a:	4602      	mov	r2, r0
 802267c:	460b      	mov	r3, r1
 802267e:	2000      	movs	r0, #0
 8022680:	493b      	ldr	r1, [pc, #236]	; (8022770 <__ieee754_pow+0xa20>)
 8022682:	f7dd fdd9 	bl	8000238 <__aeabi_dsub>
 8022686:	eb01 540a 	add.w	r4, r1, sl, lsl #20
 802268a:	f5b4 1f80 	cmp.w	r4, #1048576	; 0x100000
 802268e:	da2b      	bge.n	80226e8 <__ieee754_pow+0x998>
 8022690:	4652      	mov	r2, sl
 8022692:	f001 fe49 	bl	8024328 <scalbn>
 8022696:	e9dd 2300 	ldrd	r2, r3, [sp]
 802269a:	f7ff bbf2 	b.w	8021e82 <__ieee754_pow+0x132>
 802269e:	4b35      	ldr	r3, [pc, #212]	; (8022774 <__ieee754_pow+0xa24>)
 80226a0:	f021 4700 	bic.w	r7, r1, #2147483648	; 0x80000000
 80226a4:	429f      	cmp	r7, r3
 80226a6:	f77f af13 	ble.w	80224d0 <__ieee754_pow+0x780>
 80226aa:	4b33      	ldr	r3, [pc, #204]	; (8022778 <__ieee754_pow+0xa28>)
 80226ac:	440b      	add	r3, r1
 80226ae:	4303      	orrs	r3, r0
 80226b0:	d00b      	beq.n	80226ca <__ieee754_pow+0x97a>
 80226b2:	a32b      	add	r3, pc, #172	; (adr r3, 8022760 <__ieee754_pow+0xa10>)
 80226b4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80226b8:	e9dd 0100 	ldrd	r0, r1, [sp]
 80226bc:	f7dd ff74 	bl	80005a8 <__aeabi_dmul>
 80226c0:	a327      	add	r3, pc, #156	; (adr r3, 8022760 <__ieee754_pow+0xa10>)
 80226c2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80226c6:	f7ff bbdc 	b.w	8021e82 <__ieee754_pow+0x132>
 80226ca:	4622      	mov	r2, r4
 80226cc:	462b      	mov	r3, r5
 80226ce:	f7dd fdb3 	bl	8000238 <__aeabi_dsub>
 80226d2:	4642      	mov	r2, r8
 80226d4:	464b      	mov	r3, r9
 80226d6:	f7de f9ed 	bl	8000ab4 <__aeabi_dcmpge>
 80226da:	2800      	cmp	r0, #0
 80226dc:	f43f aef8 	beq.w	80224d0 <__ieee754_pow+0x780>
 80226e0:	e7e7      	b.n	80226b2 <__ieee754_pow+0x962>
 80226e2:	f04f 0a00 	mov.w	sl, #0
 80226e6:	e71e      	b.n	8022526 <__ieee754_pow+0x7d6>
 80226e8:	4621      	mov	r1, r4
 80226ea:	e7d4      	b.n	8022696 <__ieee754_pow+0x946>
 80226ec:	f8df c080 	ldr.w	ip, [pc, #128]	; 8022770 <__ieee754_pow+0xa20>
 80226f0:	f04f 0b00 	mov.w	fp, #0
 80226f4:	f7ff bbb0 	b.w	8021e58 <__ieee754_pow+0x108>
 80226f8:	e9dd bc02 	ldrd	fp, ip, [sp, #8]
 80226fc:	f7ff bbac 	b.w	8021e58 <__ieee754_pow+0x108>
 8022700:	4638      	mov	r0, r7
 8022702:	4641      	mov	r1, r8
 8022704:	f7ff bbbf 	b.w	8021e86 <__ieee754_pow+0x136>
 8022708:	9200      	str	r2, [sp, #0]
 802270a:	f7ff bb7f 	b.w	8021e0c <__ieee754_pow+0xbc>
 802270e:	2300      	movs	r3, #0
 8022710:	f7ff bb69 	b.w	8021de6 <__ieee754_pow+0x96>
 8022714:	f3af 8000 	nop.w
 8022718:	652b82fe 	.word	0x652b82fe
 802271c:	3c971547 	.word	0x3c971547
 8022720:	00000000 	.word	0x00000000
 8022724:	3fe62e43 	.word	0x3fe62e43
 8022728:	fefa39ef 	.word	0xfefa39ef
 802272c:	3fe62e42 	.word	0x3fe62e42
 8022730:	0ca86c39 	.word	0x0ca86c39
 8022734:	be205c61 	.word	0xbe205c61
 8022738:	72bea4d0 	.word	0x72bea4d0
 802273c:	3e663769 	.word	0x3e663769
 8022740:	c5d26bf1 	.word	0xc5d26bf1
 8022744:	3ebbbd41 	.word	0x3ebbbd41
 8022748:	af25de2c 	.word	0xaf25de2c
 802274c:	3f11566a 	.word	0x3f11566a
 8022750:	16bebd93 	.word	0x16bebd93
 8022754:	3f66c16c 	.word	0x3f66c16c
 8022758:	5555553e 	.word	0x5555553e
 802275c:	3fc55555 	.word	0x3fc55555
 8022760:	c2f8f359 	.word	0xc2f8f359
 8022764:	01a56e1f 	.word	0x01a56e1f
 8022768:	3fe00000 	.word	0x3fe00000
 802276c:	000fffff 	.word	0x000fffff
 8022770:	3ff00000 	.word	0x3ff00000
 8022774:	4090cbff 	.word	0x4090cbff
 8022778:	3f6f3400 	.word	0x3f6f3400
 802277c:	00000000 	.word	0x00000000

08022780 <__ieee754_rem_pio2>:
 8022780:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022784:	4614      	mov	r4, r2
 8022786:	4ac4      	ldr	r2, [pc, #784]	; (8022a98 <__ieee754_rem_pio2+0x318>)
 8022788:	b08d      	sub	sp, #52	; 0x34
 802278a:	f021 4a00 	bic.w	sl, r1, #2147483648	; 0x80000000
 802278e:	4592      	cmp	sl, r2
 8022790:	9104      	str	r1, [sp, #16]
 8022792:	dc07      	bgt.n	80227a4 <__ieee754_rem_pio2+0x24>
 8022794:	2200      	movs	r2, #0
 8022796:	2300      	movs	r3, #0
 8022798:	e9c4 0100 	strd	r0, r1, [r4]
 802279c:	e9c4 2302 	strd	r2, r3, [r4, #8]
 80227a0:	2500      	movs	r5, #0
 80227a2:	e024      	b.n	80227ee <__ieee754_rem_pio2+0x6e>
 80227a4:	4abd      	ldr	r2, [pc, #756]	; (8022a9c <__ieee754_rem_pio2+0x31c>)
 80227a6:	4592      	cmp	sl, r2
 80227a8:	dc72      	bgt.n	8022890 <__ieee754_rem_pio2+0x110>
 80227aa:	9b04      	ldr	r3, [sp, #16]
 80227ac:	4dbc      	ldr	r5, [pc, #752]	; (8022aa0 <__ieee754_rem_pio2+0x320>)
 80227ae:	2b00      	cmp	r3, #0
 80227b0:	a3ab      	add	r3, pc, #684	; (adr r3, 8022a60 <__ieee754_rem_pio2+0x2e0>)
 80227b2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80227b6:	dd36      	ble.n	8022826 <__ieee754_rem_pio2+0xa6>
 80227b8:	f7dd fd3e 	bl	8000238 <__aeabi_dsub>
 80227bc:	45aa      	cmp	sl, r5
 80227be:	4606      	mov	r6, r0
 80227c0:	460f      	mov	r7, r1
 80227c2:	d018      	beq.n	80227f6 <__ieee754_rem_pio2+0x76>
 80227c4:	a3a8      	add	r3, pc, #672	; (adr r3, 8022a68 <__ieee754_rem_pio2+0x2e8>)
 80227c6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80227ca:	f7dd fd35 	bl	8000238 <__aeabi_dsub>
 80227ce:	4602      	mov	r2, r0
 80227d0:	460b      	mov	r3, r1
 80227d2:	e9c4 2300 	strd	r2, r3, [r4]
 80227d6:	4630      	mov	r0, r6
 80227d8:	4639      	mov	r1, r7
 80227da:	f7dd fd2d 	bl	8000238 <__aeabi_dsub>
 80227de:	a3a2      	add	r3, pc, #648	; (adr r3, 8022a68 <__ieee754_rem_pio2+0x2e8>)
 80227e0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80227e4:	f7dd fd28 	bl	8000238 <__aeabi_dsub>
 80227e8:	e9c4 0102 	strd	r0, r1, [r4, #8]
 80227ec:	2501      	movs	r5, #1
 80227ee:	4628      	mov	r0, r5
 80227f0:	b00d      	add	sp, #52	; 0x34
 80227f2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80227f6:	a39e      	add	r3, pc, #632	; (adr r3, 8022a70 <__ieee754_rem_pio2+0x2f0>)
 80227f8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80227fc:	f7dd fd1c 	bl	8000238 <__aeabi_dsub>
 8022800:	a39d      	add	r3, pc, #628	; (adr r3, 8022a78 <__ieee754_rem_pio2+0x2f8>)
 8022802:	e9d3 2300 	ldrd	r2, r3, [r3]
 8022806:	4606      	mov	r6, r0
 8022808:	460f      	mov	r7, r1
 802280a:	f7dd fd15 	bl	8000238 <__aeabi_dsub>
 802280e:	4602      	mov	r2, r0
 8022810:	460b      	mov	r3, r1
 8022812:	e9c4 2300 	strd	r2, r3, [r4]
 8022816:	4630      	mov	r0, r6
 8022818:	4639      	mov	r1, r7
 802281a:	f7dd fd0d 	bl	8000238 <__aeabi_dsub>
 802281e:	a396      	add	r3, pc, #600	; (adr r3, 8022a78 <__ieee754_rem_pio2+0x2f8>)
 8022820:	e9d3 2300 	ldrd	r2, r3, [r3]
 8022824:	e7de      	b.n	80227e4 <__ieee754_rem_pio2+0x64>
 8022826:	f7dd fd09 	bl	800023c <__adddf3>
 802282a:	45aa      	cmp	sl, r5
 802282c:	4606      	mov	r6, r0
 802282e:	460f      	mov	r7, r1
 8022830:	d016      	beq.n	8022860 <__ieee754_rem_pio2+0xe0>
 8022832:	a38d      	add	r3, pc, #564	; (adr r3, 8022a68 <__ieee754_rem_pio2+0x2e8>)
 8022834:	e9d3 2300 	ldrd	r2, r3, [r3]
 8022838:	f7dd fd00 	bl	800023c <__adddf3>
 802283c:	4602      	mov	r2, r0
 802283e:	460b      	mov	r3, r1
 8022840:	e9c4 2300 	strd	r2, r3, [r4]
 8022844:	4630      	mov	r0, r6
 8022846:	4639      	mov	r1, r7
 8022848:	f7dd fcf6 	bl	8000238 <__aeabi_dsub>
 802284c:	a386      	add	r3, pc, #536	; (adr r3, 8022a68 <__ieee754_rem_pio2+0x2e8>)
 802284e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8022852:	f7dd fcf3 	bl	800023c <__adddf3>
 8022856:	f04f 35ff 	mov.w	r5, #4294967295
 802285a:	e9c4 0102 	strd	r0, r1, [r4, #8]
 802285e:	e7c6      	b.n	80227ee <__ieee754_rem_pio2+0x6e>
 8022860:	a383      	add	r3, pc, #524	; (adr r3, 8022a70 <__ieee754_rem_pio2+0x2f0>)
 8022862:	e9d3 2300 	ldrd	r2, r3, [r3]
 8022866:	f7dd fce9 	bl	800023c <__adddf3>
 802286a:	a383      	add	r3, pc, #524	; (adr r3, 8022a78 <__ieee754_rem_pio2+0x2f8>)
 802286c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8022870:	4606      	mov	r6, r0
 8022872:	460f      	mov	r7, r1
 8022874:	f7dd fce2 	bl	800023c <__adddf3>
 8022878:	4602      	mov	r2, r0
 802287a:	460b      	mov	r3, r1
 802287c:	e9c4 2300 	strd	r2, r3, [r4]
 8022880:	4630      	mov	r0, r6
 8022882:	4639      	mov	r1, r7
 8022884:	f7dd fcd8 	bl	8000238 <__aeabi_dsub>
 8022888:	a37b      	add	r3, pc, #492	; (adr r3, 8022a78 <__ieee754_rem_pio2+0x2f8>)
 802288a:	e9d3 2300 	ldrd	r2, r3, [r3]
 802288e:	e7e0      	b.n	8022852 <__ieee754_rem_pio2+0xd2>
 8022890:	4a84      	ldr	r2, [pc, #528]	; (8022aa4 <__ieee754_rem_pio2+0x324>)
 8022892:	4592      	cmp	sl, r2
 8022894:	f300 80d5 	bgt.w	8022a42 <__ieee754_rem_pio2+0x2c2>
 8022898:	f001 fcac 	bl	80241f4 <fabs>
 802289c:	a378      	add	r3, pc, #480	; (adr r3, 8022a80 <__ieee754_rem_pio2+0x300>)
 802289e:	e9d3 2300 	ldrd	r2, r3, [r3]
 80228a2:	4606      	mov	r6, r0
 80228a4:	460f      	mov	r7, r1
 80228a6:	f7dd fe7f 	bl	80005a8 <__aeabi_dmul>
 80228aa:	4b7f      	ldr	r3, [pc, #508]	; (8022aa8 <__ieee754_rem_pio2+0x328>)
 80228ac:	2200      	movs	r2, #0
 80228ae:	f7dd fcc5 	bl	800023c <__adddf3>
 80228b2:	f7de f929 	bl	8000b08 <__aeabi_d2iz>
 80228b6:	4605      	mov	r5, r0
 80228b8:	f7dd fe0c 	bl	80004d4 <__aeabi_i2d>
 80228bc:	4602      	mov	r2, r0
 80228be:	460b      	mov	r3, r1
 80228c0:	e9cd 2302 	strd	r2, r3, [sp, #8]
 80228c4:	a366      	add	r3, pc, #408	; (adr r3, 8022a60 <__ieee754_rem_pio2+0x2e0>)
 80228c6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80228ca:	f7dd fe6d 	bl	80005a8 <__aeabi_dmul>
 80228ce:	4602      	mov	r2, r0
 80228d0:	460b      	mov	r3, r1
 80228d2:	4630      	mov	r0, r6
 80228d4:	4639      	mov	r1, r7
 80228d6:	f7dd fcaf 	bl	8000238 <__aeabi_dsub>
 80228da:	a363      	add	r3, pc, #396	; (adr r3, 8022a68 <__ieee754_rem_pio2+0x2e8>)
 80228dc:	e9d3 2300 	ldrd	r2, r3, [r3]
 80228e0:	4680      	mov	r8, r0
 80228e2:	4689      	mov	r9, r1
 80228e4:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80228e8:	f7dd fe5e 	bl	80005a8 <__aeabi_dmul>
 80228ec:	2d1f      	cmp	r5, #31
 80228ee:	4606      	mov	r6, r0
 80228f0:	460f      	mov	r7, r1
 80228f2:	dc0e      	bgt.n	8022912 <__ieee754_rem_pio2+0x192>
 80228f4:	4b6d      	ldr	r3, [pc, #436]	; (8022aac <__ieee754_rem_pio2+0x32c>)
 80228f6:	1e6a      	subs	r2, r5, #1
 80228f8:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80228fc:	4553      	cmp	r3, sl
 80228fe:	d008      	beq.n	8022912 <__ieee754_rem_pio2+0x192>
 8022900:	4632      	mov	r2, r6
 8022902:	463b      	mov	r3, r7
 8022904:	4640      	mov	r0, r8
 8022906:	4649      	mov	r1, r9
 8022908:	f7dd fc96 	bl	8000238 <__aeabi_dsub>
 802290c:	e9c4 0100 	strd	r0, r1, [r4]
 8022910:	e013      	b.n	802293a <__ieee754_rem_pio2+0x1ba>
 8022912:	463b      	mov	r3, r7
 8022914:	4632      	mov	r2, r6
 8022916:	4640      	mov	r0, r8
 8022918:	4649      	mov	r1, r9
 802291a:	f7dd fc8d 	bl	8000238 <__aeabi_dsub>
 802291e:	ea4f 532a 	mov.w	r3, sl, asr #20
 8022922:	9305      	str	r3, [sp, #20]
 8022924:	f3c1 530a 	ubfx	r3, r1, #20, #11
 8022928:	ebc3 5a1a 	rsb	sl, r3, sl, lsr #20
 802292c:	f1ba 0f10 	cmp.w	sl, #16
 8022930:	dc1f      	bgt.n	8022972 <__ieee754_rem_pio2+0x1f2>
 8022932:	4602      	mov	r2, r0
 8022934:	460b      	mov	r3, r1
 8022936:	e9c4 2300 	strd	r2, r3, [r4]
 802293a:	e9d4 2a00 	ldrd	r2, sl, [r4]
 802293e:	4640      	mov	r0, r8
 8022940:	4653      	mov	r3, sl
 8022942:	4649      	mov	r1, r9
 8022944:	f7dd fc78 	bl	8000238 <__aeabi_dsub>
 8022948:	4632      	mov	r2, r6
 802294a:	463b      	mov	r3, r7
 802294c:	f7dd fc74 	bl	8000238 <__aeabi_dsub>
 8022950:	e9c4 0102 	strd	r0, r1, [r4, #8]
 8022954:	460b      	mov	r3, r1
 8022956:	9904      	ldr	r1, [sp, #16]
 8022958:	2900      	cmp	r1, #0
 802295a:	4602      	mov	r2, r0
 802295c:	f6bf af47 	bge.w	80227ee <__ieee754_rem_pio2+0x6e>
 8022960:	f10a 4100 	add.w	r1, sl, #2147483648	; 0x80000000
 8022964:	e9c4 1201 	strd	r1, r2, [r4, #4]
 8022968:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 802296c:	60e3      	str	r3, [r4, #12]
 802296e:	426d      	negs	r5, r5
 8022970:	e73d      	b.n	80227ee <__ieee754_rem_pio2+0x6e>
 8022972:	a33f      	add	r3, pc, #252	; (adr r3, 8022a70 <__ieee754_rem_pio2+0x2f0>)
 8022974:	e9d3 2300 	ldrd	r2, r3, [r3]
 8022978:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 802297c:	f7dd fe14 	bl	80005a8 <__aeabi_dmul>
 8022980:	4606      	mov	r6, r0
 8022982:	460f      	mov	r7, r1
 8022984:	4602      	mov	r2, r0
 8022986:	460b      	mov	r3, r1
 8022988:	4640      	mov	r0, r8
 802298a:	4649      	mov	r1, r9
 802298c:	f7dd fc54 	bl	8000238 <__aeabi_dsub>
 8022990:	4602      	mov	r2, r0
 8022992:	460b      	mov	r3, r1
 8022994:	4682      	mov	sl, r0
 8022996:	468b      	mov	fp, r1
 8022998:	4640      	mov	r0, r8
 802299a:	4649      	mov	r1, r9
 802299c:	f7dd fc4c 	bl	8000238 <__aeabi_dsub>
 80229a0:	4632      	mov	r2, r6
 80229a2:	463b      	mov	r3, r7
 80229a4:	f7dd fc48 	bl	8000238 <__aeabi_dsub>
 80229a8:	a333      	add	r3, pc, #204	; (adr r3, 8022a78 <__ieee754_rem_pio2+0x2f8>)
 80229aa:	e9d3 2300 	ldrd	r2, r3, [r3]
 80229ae:	4606      	mov	r6, r0
 80229b0:	460f      	mov	r7, r1
 80229b2:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80229b6:	f7dd fdf7 	bl	80005a8 <__aeabi_dmul>
 80229ba:	4632      	mov	r2, r6
 80229bc:	463b      	mov	r3, r7
 80229be:	f7dd fc3b 	bl	8000238 <__aeabi_dsub>
 80229c2:	4602      	mov	r2, r0
 80229c4:	460b      	mov	r3, r1
 80229c6:	4606      	mov	r6, r0
 80229c8:	460f      	mov	r7, r1
 80229ca:	4650      	mov	r0, sl
 80229cc:	4659      	mov	r1, fp
 80229ce:	f7dd fc33 	bl	8000238 <__aeabi_dsub>
 80229d2:	9a05      	ldr	r2, [sp, #20]
 80229d4:	f3c1 530a 	ubfx	r3, r1, #20, #11
 80229d8:	1ad3      	subs	r3, r2, r3
 80229da:	2b31      	cmp	r3, #49	; 0x31
 80229dc:	dc06      	bgt.n	80229ec <__ieee754_rem_pio2+0x26c>
 80229de:	4602      	mov	r2, r0
 80229e0:	460b      	mov	r3, r1
 80229e2:	e9c4 2300 	strd	r2, r3, [r4]
 80229e6:	46d0      	mov	r8, sl
 80229e8:	46d9      	mov	r9, fp
 80229ea:	e7a6      	b.n	802293a <__ieee754_rem_pio2+0x1ba>
 80229ec:	a326      	add	r3, pc, #152	; (adr r3, 8022a88 <__ieee754_rem_pio2+0x308>)
 80229ee:	e9d3 2300 	ldrd	r2, r3, [r3]
 80229f2:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80229f6:	f7dd fdd7 	bl	80005a8 <__aeabi_dmul>
 80229fa:	4606      	mov	r6, r0
 80229fc:	460f      	mov	r7, r1
 80229fe:	4602      	mov	r2, r0
 8022a00:	460b      	mov	r3, r1
 8022a02:	4650      	mov	r0, sl
 8022a04:	4659      	mov	r1, fp
 8022a06:	f7dd fc17 	bl	8000238 <__aeabi_dsub>
 8022a0a:	4602      	mov	r2, r0
 8022a0c:	460b      	mov	r3, r1
 8022a0e:	4680      	mov	r8, r0
 8022a10:	4689      	mov	r9, r1
 8022a12:	4650      	mov	r0, sl
 8022a14:	4659      	mov	r1, fp
 8022a16:	f7dd fc0f 	bl	8000238 <__aeabi_dsub>
 8022a1a:	4632      	mov	r2, r6
 8022a1c:	463b      	mov	r3, r7
 8022a1e:	f7dd fc0b 	bl	8000238 <__aeabi_dsub>
 8022a22:	a31b      	add	r3, pc, #108	; (adr r3, 8022a90 <__ieee754_rem_pio2+0x310>)
 8022a24:	e9d3 2300 	ldrd	r2, r3, [r3]
 8022a28:	4606      	mov	r6, r0
 8022a2a:	460f      	mov	r7, r1
 8022a2c:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8022a30:	f7dd fdba 	bl	80005a8 <__aeabi_dmul>
 8022a34:	4632      	mov	r2, r6
 8022a36:	463b      	mov	r3, r7
 8022a38:	f7dd fbfe 	bl	8000238 <__aeabi_dsub>
 8022a3c:	4606      	mov	r6, r0
 8022a3e:	460f      	mov	r7, r1
 8022a40:	e75e      	b.n	8022900 <__ieee754_rem_pio2+0x180>
 8022a42:	4a1b      	ldr	r2, [pc, #108]	; (8022ab0 <__ieee754_rem_pio2+0x330>)
 8022a44:	4592      	cmp	sl, r2
 8022a46:	dd35      	ble.n	8022ab4 <__ieee754_rem_pio2+0x334>
 8022a48:	4602      	mov	r2, r0
 8022a4a:	460b      	mov	r3, r1
 8022a4c:	f7dd fbf4 	bl	8000238 <__aeabi_dsub>
 8022a50:	e9c4 0102 	strd	r0, r1, [r4, #8]
 8022a54:	e9c4 0100 	strd	r0, r1, [r4]
 8022a58:	e6a2      	b.n	80227a0 <__ieee754_rem_pio2+0x20>
 8022a5a:	bf00      	nop
 8022a5c:	f3af 8000 	nop.w
 8022a60:	54400000 	.word	0x54400000
 8022a64:	3ff921fb 	.word	0x3ff921fb
 8022a68:	1a626331 	.word	0x1a626331
 8022a6c:	3dd0b461 	.word	0x3dd0b461
 8022a70:	1a600000 	.word	0x1a600000
 8022a74:	3dd0b461 	.word	0x3dd0b461
 8022a78:	2e037073 	.word	0x2e037073
 8022a7c:	3ba3198a 	.word	0x3ba3198a
 8022a80:	6dc9c883 	.word	0x6dc9c883
 8022a84:	3fe45f30 	.word	0x3fe45f30
 8022a88:	2e000000 	.word	0x2e000000
 8022a8c:	3ba3198a 	.word	0x3ba3198a
 8022a90:	252049c1 	.word	0x252049c1
 8022a94:	397b839a 	.word	0x397b839a
 8022a98:	3fe921fb 	.word	0x3fe921fb
 8022a9c:	4002d97b 	.word	0x4002d97b
 8022aa0:	3ff921fb 	.word	0x3ff921fb
 8022aa4:	413921fb 	.word	0x413921fb
 8022aa8:	3fe00000 	.word	0x3fe00000
 8022aac:	080269b0 	.word	0x080269b0
 8022ab0:	7fefffff 	.word	0x7fefffff
 8022ab4:	ea4f 552a 	mov.w	r5, sl, asr #20
 8022ab8:	f2a5 4516 	subw	r5, r5, #1046	; 0x416
 8022abc:	ebaa 5105 	sub.w	r1, sl, r5, lsl #20
 8022ac0:	460f      	mov	r7, r1
 8022ac2:	4606      	mov	r6, r0
 8022ac4:	f7de f820 	bl	8000b08 <__aeabi_d2iz>
 8022ac8:	f7dd fd04 	bl	80004d4 <__aeabi_i2d>
 8022acc:	4602      	mov	r2, r0
 8022ace:	460b      	mov	r3, r1
 8022ad0:	4630      	mov	r0, r6
 8022ad2:	4639      	mov	r1, r7
 8022ad4:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8022ad8:	f7dd fbae 	bl	8000238 <__aeabi_dsub>
 8022adc:	4b1e      	ldr	r3, [pc, #120]	; (8022b58 <__ieee754_rem_pio2+0x3d8>)
 8022ade:	2200      	movs	r2, #0
 8022ae0:	f7dd fd62 	bl	80005a8 <__aeabi_dmul>
 8022ae4:	460f      	mov	r7, r1
 8022ae6:	4606      	mov	r6, r0
 8022ae8:	f7de f80e 	bl	8000b08 <__aeabi_d2iz>
 8022aec:	f7dd fcf2 	bl	80004d4 <__aeabi_i2d>
 8022af0:	4602      	mov	r2, r0
 8022af2:	460b      	mov	r3, r1
 8022af4:	4630      	mov	r0, r6
 8022af6:	4639      	mov	r1, r7
 8022af8:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8022afc:	f7dd fb9c 	bl	8000238 <__aeabi_dsub>
 8022b00:	4b15      	ldr	r3, [pc, #84]	; (8022b58 <__ieee754_rem_pio2+0x3d8>)
 8022b02:	2200      	movs	r2, #0
 8022b04:	f7dd fd50 	bl	80005a8 <__aeabi_dmul>
 8022b08:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
 8022b0c:	f10d 0928 	add.w	r9, sp, #40	; 0x28
 8022b10:	f04f 0803 	mov.w	r8, #3
 8022b14:	2600      	movs	r6, #0
 8022b16:	2700      	movs	r7, #0
 8022b18:	e879 0102 	ldrd	r0, r1, [r9], #-8
 8022b1c:	4632      	mov	r2, r6
 8022b1e:	463b      	mov	r3, r7
 8022b20:	46c2      	mov	sl, r8
 8022b22:	f108 38ff 	add.w	r8, r8, #4294967295
 8022b26:	f7dd ffa7 	bl	8000a78 <__aeabi_dcmpeq>
 8022b2a:	2800      	cmp	r0, #0
 8022b2c:	d1f4      	bne.n	8022b18 <__ieee754_rem_pio2+0x398>
 8022b2e:	4b0b      	ldr	r3, [pc, #44]	; (8022b5c <__ieee754_rem_pio2+0x3dc>)
 8022b30:	9301      	str	r3, [sp, #4]
 8022b32:	2302      	movs	r3, #2
 8022b34:	9300      	str	r3, [sp, #0]
 8022b36:	462a      	mov	r2, r5
 8022b38:	4653      	mov	r3, sl
 8022b3a:	4621      	mov	r1, r4
 8022b3c:	a806      	add	r0, sp, #24
 8022b3e:	f000 fbad 	bl	802329c <__kernel_rem_pio2>
 8022b42:	9b04      	ldr	r3, [sp, #16]
 8022b44:	2b00      	cmp	r3, #0
 8022b46:	4605      	mov	r5, r0
 8022b48:	f6bf ae51 	bge.w	80227ee <__ieee754_rem_pio2+0x6e>
 8022b4c:	6863      	ldr	r3, [r4, #4]
 8022b4e:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 8022b52:	6063      	str	r3, [r4, #4]
 8022b54:	68e3      	ldr	r3, [r4, #12]
 8022b56:	e707      	b.n	8022968 <__ieee754_rem_pio2+0x1e8>
 8022b58:	41700000 	.word	0x41700000
 8022b5c:	08026a30 	.word	0x08026a30

08022b60 <__ieee754_sqrt>:
 8022b60:	f8df c150 	ldr.w	ip, [pc, #336]	; 8022cb4 <__ieee754_sqrt+0x154>
 8022b64:	ea3c 0c01 	bics.w	ip, ip, r1
 8022b68:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8022b6c:	460b      	mov	r3, r1
 8022b6e:	4606      	mov	r6, r0
 8022b70:	460d      	mov	r5, r1
 8022b72:	460a      	mov	r2, r1
 8022b74:	4607      	mov	r7, r0
 8022b76:	4604      	mov	r4, r0
 8022b78:	d10e      	bne.n	8022b98 <__ieee754_sqrt+0x38>
 8022b7a:	4602      	mov	r2, r0
 8022b7c:	f7dd fd14 	bl	80005a8 <__aeabi_dmul>
 8022b80:	4602      	mov	r2, r0
 8022b82:	460b      	mov	r3, r1
 8022b84:	4630      	mov	r0, r6
 8022b86:	4629      	mov	r1, r5
 8022b88:	f7dd fb58 	bl	800023c <__adddf3>
 8022b8c:	4606      	mov	r6, r0
 8022b8e:	460d      	mov	r5, r1
 8022b90:	4630      	mov	r0, r6
 8022b92:	4629      	mov	r1, r5
 8022b94:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8022b98:	2900      	cmp	r1, #0
 8022b9a:	dc0d      	bgt.n	8022bb8 <__ieee754_sqrt+0x58>
 8022b9c:	f021 4c00 	bic.w	ip, r1, #2147483648	; 0x80000000
 8022ba0:	ea5c 0707 	orrs.w	r7, ip, r7
 8022ba4:	d0f4      	beq.n	8022b90 <__ieee754_sqrt+0x30>
 8022ba6:	b139      	cbz	r1, 8022bb8 <__ieee754_sqrt+0x58>
 8022ba8:	4602      	mov	r2, r0
 8022baa:	f7dd fb45 	bl	8000238 <__aeabi_dsub>
 8022bae:	4602      	mov	r2, r0
 8022bb0:	460b      	mov	r3, r1
 8022bb2:	f7dd fe23 	bl	80007fc <__aeabi_ddiv>
 8022bb6:	e7e9      	b.n	8022b8c <__ieee754_sqrt+0x2c>
 8022bb8:	1512      	asrs	r2, r2, #20
 8022bba:	d074      	beq.n	8022ca6 <__ieee754_sqrt+0x146>
 8022bbc:	07d5      	lsls	r5, r2, #31
 8022bbe:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8022bc2:	f443 1180 	orr.w	r1, r3, #1048576	; 0x100000
 8022bc6:	bf5e      	ittt	pl
 8022bc8:	0fe3      	lsrpl	r3, r4, #31
 8022bca:	0064      	lslpl	r4, r4, #1
 8022bcc:	eb03 0141 	addpl.w	r1, r3, r1, lsl #1
 8022bd0:	f2a2 36ff 	subw	r6, r2, #1023	; 0x3ff
 8022bd4:	0fe3      	lsrs	r3, r4, #31
 8022bd6:	2000      	movs	r0, #0
 8022bd8:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 8022bdc:	1076      	asrs	r6, r6, #1
 8022bde:	0064      	lsls	r4, r4, #1
 8022be0:	2516      	movs	r5, #22
 8022be2:	4601      	mov	r1, r0
 8022be4:	f44f 1200 	mov.w	r2, #2097152	; 0x200000
 8022be8:	188f      	adds	r7, r1, r2
 8022bea:	429f      	cmp	r7, r3
 8022bec:	bfde      	ittt	le
 8022bee:	1bdb      	suble	r3, r3, r7
 8022bf0:	18b9      	addle	r1, r7, r2
 8022bf2:	1880      	addle	r0, r0, r2
 8022bf4:	005b      	lsls	r3, r3, #1
 8022bf6:	3d01      	subs	r5, #1
 8022bf8:	eb03 73d4 	add.w	r3, r3, r4, lsr #31
 8022bfc:	ea4f 0252 	mov.w	r2, r2, lsr #1
 8022c00:	ea4f 0444 	mov.w	r4, r4, lsl #1
 8022c04:	d1f0      	bne.n	8022be8 <__ieee754_sqrt+0x88>
 8022c06:	462a      	mov	r2, r5
 8022c08:	f04f 0e20 	mov.w	lr, #32
 8022c0c:	f04f 4700 	mov.w	r7, #2147483648	; 0x80000000
 8022c10:	428b      	cmp	r3, r1
 8022c12:	eb07 0c05 	add.w	ip, r7, r5
 8022c16:	dc02      	bgt.n	8022c1e <__ieee754_sqrt+0xbe>
 8022c18:	d113      	bne.n	8022c42 <__ieee754_sqrt+0xe2>
 8022c1a:	45a4      	cmp	ip, r4
 8022c1c:	d811      	bhi.n	8022c42 <__ieee754_sqrt+0xe2>
 8022c1e:	f1bc 0f00 	cmp.w	ip, #0
 8022c22:	eb0c 0507 	add.w	r5, ip, r7
 8022c26:	da43      	bge.n	8022cb0 <__ieee754_sqrt+0x150>
 8022c28:	2d00      	cmp	r5, #0
 8022c2a:	db41      	blt.n	8022cb0 <__ieee754_sqrt+0x150>
 8022c2c:	f101 0801 	add.w	r8, r1, #1
 8022c30:	1a5b      	subs	r3, r3, r1
 8022c32:	45a4      	cmp	ip, r4
 8022c34:	bf88      	it	hi
 8022c36:	f103 33ff 	addhi.w	r3, r3, #4294967295
 8022c3a:	eba4 040c 	sub.w	r4, r4, ip
 8022c3e:	443a      	add	r2, r7
 8022c40:	4641      	mov	r1, r8
 8022c42:	005b      	lsls	r3, r3, #1
 8022c44:	f1be 0e01 	subs.w	lr, lr, #1
 8022c48:	eb03 73d4 	add.w	r3, r3, r4, lsr #31
 8022c4c:	ea4f 0757 	mov.w	r7, r7, lsr #1
 8022c50:	ea4f 0444 	mov.w	r4, r4, lsl #1
 8022c54:	d1dc      	bne.n	8022c10 <__ieee754_sqrt+0xb0>
 8022c56:	4323      	orrs	r3, r4
 8022c58:	d006      	beq.n	8022c68 <__ieee754_sqrt+0x108>
 8022c5a:	1c54      	adds	r4, r2, #1
 8022c5c:	bf13      	iteet	ne
 8022c5e:	3201      	addne	r2, #1
 8022c60:	3001      	addeq	r0, #1
 8022c62:	4672      	moveq	r2, lr
 8022c64:	f022 0201 	bicne.w	r2, r2, #1
 8022c68:	1043      	asrs	r3, r0, #1
 8022c6a:	07c1      	lsls	r1, r0, #31
 8022c6c:	ea4f 0252 	mov.w	r2, r2, lsr #1
 8022c70:	f103 537f 	add.w	r3, r3, #1069547520	; 0x3fc00000
 8022c74:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
 8022c78:	bf48      	it	mi
 8022c7a:	f042 4200 	orrmi.w	r2, r2, #2147483648	; 0x80000000
 8022c7e:	eb03 5106 	add.w	r1, r3, r6, lsl #20
 8022c82:	4610      	mov	r0, r2
 8022c84:	e782      	b.n	8022b8c <__ieee754_sqrt+0x2c>
 8022c86:	0ae3      	lsrs	r3, r4, #11
 8022c88:	3915      	subs	r1, #21
 8022c8a:	0564      	lsls	r4, r4, #21
 8022c8c:	2b00      	cmp	r3, #0
 8022c8e:	d0fa      	beq.n	8022c86 <__ieee754_sqrt+0x126>
 8022c90:	02de      	lsls	r6, r3, #11
 8022c92:	d50a      	bpl.n	8022caa <__ieee754_sqrt+0x14a>
 8022c94:	f1c2 0020 	rsb	r0, r2, #32
 8022c98:	fa24 f000 	lsr.w	r0, r4, r0
 8022c9c:	1e55      	subs	r5, r2, #1
 8022c9e:	4094      	lsls	r4, r2
 8022ca0:	4303      	orrs	r3, r0
 8022ca2:	1b4a      	subs	r2, r1, r5
 8022ca4:	e78a      	b.n	8022bbc <__ieee754_sqrt+0x5c>
 8022ca6:	4611      	mov	r1, r2
 8022ca8:	e7f0      	b.n	8022c8c <__ieee754_sqrt+0x12c>
 8022caa:	005b      	lsls	r3, r3, #1
 8022cac:	3201      	adds	r2, #1
 8022cae:	e7ef      	b.n	8022c90 <__ieee754_sqrt+0x130>
 8022cb0:	4688      	mov	r8, r1
 8022cb2:	e7bd      	b.n	8022c30 <__ieee754_sqrt+0xd0>
 8022cb4:	7ff00000 	.word	0x7ff00000

08022cb8 <__ieee754_atan2f>:
 8022cb8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8022cba:	f021 4600 	bic.w	r6, r1, #2147483648	; 0x80000000
 8022cbe:	f1b6 4fff 	cmp.w	r6, #2139095040	; 0x7f800000
 8022cc2:	4603      	mov	r3, r0
 8022cc4:	dc05      	bgt.n	8022cd2 <__ieee754_atan2f+0x1a>
 8022cc6:	f020 4200 	bic.w	r2, r0, #2147483648	; 0x80000000
 8022cca:	f1b2 4fff 	cmp.w	r2, #2139095040	; 0x7f800000
 8022cce:	4607      	mov	r7, r0
 8022cd0:	dd04      	ble.n	8022cdc <__ieee754_atan2f+0x24>
 8022cd2:	4618      	mov	r0, r3
 8022cd4:	f7dd ff96 	bl	8000c04 <__addsf3>
 8022cd8:	4603      	mov	r3, r0
 8022cda:	e011      	b.n	8022d00 <__ieee754_atan2f+0x48>
 8022cdc:	f1b1 5f7e 	cmp.w	r1, #1065353216	; 0x3f800000
 8022ce0:	d103      	bne.n	8022cea <__ieee754_atan2f+0x32>
 8022ce2:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8022ce6:	f001 bba5 	b.w	8024434 <atanf>
 8022cea:	178c      	asrs	r4, r1, #30
 8022cec:	f004 0402 	and.w	r4, r4, #2
 8022cf0:	ea44 74d0 	orr.w	r4, r4, r0, lsr #31
 8022cf4:	b932      	cbnz	r2, 8022d04 <__ieee754_atan2f+0x4c>
 8022cf6:	2c02      	cmp	r4, #2
 8022cf8:	d04c      	beq.n	8022d94 <__ieee754_atan2f+0xdc>
 8022cfa:	2c03      	cmp	r4, #3
 8022cfc:	d100      	bne.n	8022d00 <__ieee754_atan2f+0x48>
 8022cfe:	4b29      	ldr	r3, [pc, #164]	; (8022da4 <__ieee754_atan2f+0xec>)
 8022d00:	4618      	mov	r0, r3
 8022d02:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8022d04:	b91e      	cbnz	r6, 8022d0e <__ieee754_atan2f+0x56>
 8022d06:	2f00      	cmp	r7, #0
 8022d08:	da4a      	bge.n	8022da0 <__ieee754_atan2f+0xe8>
 8022d0a:	4b27      	ldr	r3, [pc, #156]	; (8022da8 <__ieee754_atan2f+0xf0>)
 8022d0c:	e7f8      	b.n	8022d00 <__ieee754_atan2f+0x48>
 8022d0e:	f1b6 4fff 	cmp.w	r6, #2139095040	; 0x7f800000
 8022d12:	d10e      	bne.n	8022d32 <__ieee754_atan2f+0x7a>
 8022d14:	f1b2 4fff 	cmp.w	r2, #2139095040	; 0x7f800000
 8022d18:	f104 34ff 	add.w	r4, r4, #4294967295
 8022d1c:	d105      	bne.n	8022d2a <__ieee754_atan2f+0x72>
 8022d1e:	2c02      	cmp	r4, #2
 8022d20:	d83a      	bhi.n	8022d98 <__ieee754_atan2f+0xe0>
 8022d22:	4b22      	ldr	r3, [pc, #136]	; (8022dac <__ieee754_atan2f+0xf4>)
 8022d24:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
 8022d28:	e7ea      	b.n	8022d00 <__ieee754_atan2f+0x48>
 8022d2a:	2c02      	cmp	r4, #2
 8022d2c:	d836      	bhi.n	8022d9c <__ieee754_atan2f+0xe4>
 8022d2e:	4b20      	ldr	r3, [pc, #128]	; (8022db0 <__ieee754_atan2f+0xf8>)
 8022d30:	e7f8      	b.n	8022d24 <__ieee754_atan2f+0x6c>
 8022d32:	f1b2 4fff 	cmp.w	r2, #2139095040	; 0x7f800000
 8022d36:	d0e6      	beq.n	8022d06 <__ieee754_atan2f+0x4e>
 8022d38:	1b92      	subs	r2, r2, r6
 8022d3a:	f1b2 5ff4 	cmp.w	r2, #511705088	; 0x1e800000
 8022d3e:	ea4f 50e2 	mov.w	r0, r2, asr #23
 8022d42:	da17      	bge.n	8022d74 <__ieee754_atan2f+0xbc>
 8022d44:	2900      	cmp	r1, #0
 8022d46:	da01      	bge.n	8022d4c <__ieee754_atan2f+0x94>
 8022d48:	303c      	adds	r0, #60	; 0x3c
 8022d4a:	db15      	blt.n	8022d78 <__ieee754_atan2f+0xc0>
 8022d4c:	4618      	mov	r0, r3
 8022d4e:	f7de f915 	bl	8000f7c <__aeabi_fdiv>
 8022d52:	f001 fc7b 	bl	802464c <fabsf>
 8022d56:	f001 fb6d 	bl	8024434 <atanf>
 8022d5a:	4603      	mov	r3, r0
 8022d5c:	2c01      	cmp	r4, #1
 8022d5e:	d00d      	beq.n	8022d7c <__ieee754_atan2f+0xc4>
 8022d60:	2c02      	cmp	r4, #2
 8022d62:	d00e      	beq.n	8022d82 <__ieee754_atan2f+0xca>
 8022d64:	2c00      	cmp	r4, #0
 8022d66:	d0cb      	beq.n	8022d00 <__ieee754_atan2f+0x48>
 8022d68:	4912      	ldr	r1, [pc, #72]	; (8022db4 <__ieee754_atan2f+0xfc>)
 8022d6a:	4618      	mov	r0, r3
 8022d6c:	f7dd ff4a 	bl	8000c04 <__addsf3>
 8022d70:	4911      	ldr	r1, [pc, #68]	; (8022db8 <__ieee754_atan2f+0x100>)
 8022d72:	e00c      	b.n	8022d8e <__ieee754_atan2f+0xd6>
 8022d74:	4b11      	ldr	r3, [pc, #68]	; (8022dbc <__ieee754_atan2f+0x104>)
 8022d76:	e7f1      	b.n	8022d5c <__ieee754_atan2f+0xa4>
 8022d78:	2300      	movs	r3, #0
 8022d7a:	e7ef      	b.n	8022d5c <__ieee754_atan2f+0xa4>
 8022d7c:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 8022d80:	e7be      	b.n	8022d00 <__ieee754_atan2f+0x48>
 8022d82:	490c      	ldr	r1, [pc, #48]	; (8022db4 <__ieee754_atan2f+0xfc>)
 8022d84:	4618      	mov	r0, r3
 8022d86:	f7dd ff3d 	bl	8000c04 <__addsf3>
 8022d8a:	4601      	mov	r1, r0
 8022d8c:	480a      	ldr	r0, [pc, #40]	; (8022db8 <__ieee754_atan2f+0x100>)
 8022d8e:	f7dd ff37 	bl	8000c00 <__aeabi_fsub>
 8022d92:	e7a1      	b.n	8022cd8 <__ieee754_atan2f+0x20>
 8022d94:	4b08      	ldr	r3, [pc, #32]	; (8022db8 <__ieee754_atan2f+0x100>)
 8022d96:	e7b3      	b.n	8022d00 <__ieee754_atan2f+0x48>
 8022d98:	4b09      	ldr	r3, [pc, #36]	; (8022dc0 <__ieee754_atan2f+0x108>)
 8022d9a:	e7b1      	b.n	8022d00 <__ieee754_atan2f+0x48>
 8022d9c:	2300      	movs	r3, #0
 8022d9e:	e7af      	b.n	8022d00 <__ieee754_atan2f+0x48>
 8022da0:	4b06      	ldr	r3, [pc, #24]	; (8022dbc <__ieee754_atan2f+0x104>)
 8022da2:	e7ad      	b.n	8022d00 <__ieee754_atan2f+0x48>
 8022da4:	c0490fdb 	.word	0xc0490fdb
 8022da8:	bfc90fdb 	.word	0xbfc90fdb
 8022dac:	08026b38 	.word	0x08026b38
 8022db0:	08026b44 	.word	0x08026b44
 8022db4:	33bbbd2e 	.word	0x33bbbd2e
 8022db8:	40490fdb 	.word	0x40490fdb
 8022dbc:	3fc90fdb 	.word	0x3fc90fdb
 8022dc0:	3f490fdb 	.word	0x3f490fdb

08022dc4 <__ieee754_rem_pio2f>:
 8022dc4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022dc8:	4aa0      	ldr	r2, [pc, #640]	; (802304c <__ieee754_rem_pio2f+0x288>)
 8022dca:	f020 4600 	bic.w	r6, r0, #2147483648	; 0x80000000
 8022dce:	4296      	cmp	r6, r2
 8022dd0:	b087      	sub	sp, #28
 8022dd2:	460c      	mov	r4, r1
 8022dd4:	4682      	mov	sl, r0
 8022dd6:	dc04      	bgt.n	8022de2 <__ieee754_rem_pio2f+0x1e>
 8022dd8:	2300      	movs	r3, #0
 8022dda:	6008      	str	r0, [r1, #0]
 8022ddc:	604b      	str	r3, [r1, #4]
 8022dde:	2500      	movs	r5, #0
 8022de0:	e01a      	b.n	8022e18 <__ieee754_rem_pio2f+0x54>
 8022de2:	4a9b      	ldr	r2, [pc, #620]	; (8023050 <__ieee754_rem_pio2f+0x28c>)
 8022de4:	4296      	cmp	r6, r2
 8022de6:	dc4b      	bgt.n	8022e80 <__ieee754_rem_pio2f+0xbc>
 8022de8:	2800      	cmp	r0, #0
 8022dea:	499a      	ldr	r1, [pc, #616]	; (8023054 <__ieee754_rem_pio2f+0x290>)
 8022dec:	4f9a      	ldr	r7, [pc, #616]	; (8023058 <__ieee754_rem_pio2f+0x294>)
 8022dee:	f026 060f 	bic.w	r6, r6, #15
 8022df2:	dd23      	ble.n	8022e3c <__ieee754_rem_pio2f+0x78>
 8022df4:	f7dd ff04 	bl	8000c00 <__aeabi_fsub>
 8022df8:	42be      	cmp	r6, r7
 8022dfa:	4605      	mov	r5, r0
 8022dfc:	d010      	beq.n	8022e20 <__ieee754_rem_pio2f+0x5c>
 8022dfe:	4997      	ldr	r1, [pc, #604]	; (802305c <__ieee754_rem_pio2f+0x298>)
 8022e00:	f7dd fefe 	bl	8000c00 <__aeabi_fsub>
 8022e04:	4601      	mov	r1, r0
 8022e06:	6020      	str	r0, [r4, #0]
 8022e08:	4628      	mov	r0, r5
 8022e0a:	f7dd fef9 	bl	8000c00 <__aeabi_fsub>
 8022e0e:	4993      	ldr	r1, [pc, #588]	; (802305c <__ieee754_rem_pio2f+0x298>)
 8022e10:	f7dd fef6 	bl	8000c00 <__aeabi_fsub>
 8022e14:	2501      	movs	r5, #1
 8022e16:	6060      	str	r0, [r4, #4]
 8022e18:	4628      	mov	r0, r5
 8022e1a:	b007      	add	sp, #28
 8022e1c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8022e20:	498f      	ldr	r1, [pc, #572]	; (8023060 <__ieee754_rem_pio2f+0x29c>)
 8022e22:	f7dd feed 	bl	8000c00 <__aeabi_fsub>
 8022e26:	498f      	ldr	r1, [pc, #572]	; (8023064 <__ieee754_rem_pio2f+0x2a0>)
 8022e28:	4605      	mov	r5, r0
 8022e2a:	f7dd fee9 	bl	8000c00 <__aeabi_fsub>
 8022e2e:	4601      	mov	r1, r0
 8022e30:	6020      	str	r0, [r4, #0]
 8022e32:	4628      	mov	r0, r5
 8022e34:	f7dd fee4 	bl	8000c00 <__aeabi_fsub>
 8022e38:	498a      	ldr	r1, [pc, #552]	; (8023064 <__ieee754_rem_pio2f+0x2a0>)
 8022e3a:	e7e9      	b.n	8022e10 <__ieee754_rem_pio2f+0x4c>
 8022e3c:	f7dd fee2 	bl	8000c04 <__addsf3>
 8022e40:	42be      	cmp	r6, r7
 8022e42:	4605      	mov	r5, r0
 8022e44:	d00e      	beq.n	8022e64 <__ieee754_rem_pio2f+0xa0>
 8022e46:	4985      	ldr	r1, [pc, #532]	; (802305c <__ieee754_rem_pio2f+0x298>)
 8022e48:	f7dd fedc 	bl	8000c04 <__addsf3>
 8022e4c:	4601      	mov	r1, r0
 8022e4e:	6020      	str	r0, [r4, #0]
 8022e50:	4628      	mov	r0, r5
 8022e52:	f7dd fed5 	bl	8000c00 <__aeabi_fsub>
 8022e56:	4981      	ldr	r1, [pc, #516]	; (802305c <__ieee754_rem_pio2f+0x298>)
 8022e58:	f7dd fed4 	bl	8000c04 <__addsf3>
 8022e5c:	f04f 35ff 	mov.w	r5, #4294967295
 8022e60:	6060      	str	r0, [r4, #4]
 8022e62:	e7d9      	b.n	8022e18 <__ieee754_rem_pio2f+0x54>
 8022e64:	497e      	ldr	r1, [pc, #504]	; (8023060 <__ieee754_rem_pio2f+0x29c>)
 8022e66:	f7dd fecd 	bl	8000c04 <__addsf3>
 8022e6a:	497e      	ldr	r1, [pc, #504]	; (8023064 <__ieee754_rem_pio2f+0x2a0>)
 8022e6c:	4605      	mov	r5, r0
 8022e6e:	f7dd fec9 	bl	8000c04 <__addsf3>
 8022e72:	4601      	mov	r1, r0
 8022e74:	6020      	str	r0, [r4, #0]
 8022e76:	4628      	mov	r0, r5
 8022e78:	f7dd fec2 	bl	8000c00 <__aeabi_fsub>
 8022e7c:	4979      	ldr	r1, [pc, #484]	; (8023064 <__ieee754_rem_pio2f+0x2a0>)
 8022e7e:	e7eb      	b.n	8022e58 <__ieee754_rem_pio2f+0x94>
 8022e80:	4a79      	ldr	r2, [pc, #484]	; (8023068 <__ieee754_rem_pio2f+0x2a4>)
 8022e82:	4296      	cmp	r6, r2
 8022e84:	f300 8091 	bgt.w	8022faa <__ieee754_rem_pio2f+0x1e6>
 8022e88:	f001 fbe0 	bl	802464c <fabsf>
 8022e8c:	4977      	ldr	r1, [pc, #476]	; (802306c <__ieee754_rem_pio2f+0x2a8>)
 8022e8e:	4607      	mov	r7, r0
 8022e90:	f7dd ffc0 	bl	8000e14 <__aeabi_fmul>
 8022e94:	f04f 517c 	mov.w	r1, #1056964608	; 0x3f000000
 8022e98:	f7dd feb4 	bl	8000c04 <__addsf3>
 8022e9c:	f7de f996 	bl	80011cc <__aeabi_f2iz>
 8022ea0:	4605      	mov	r5, r0
 8022ea2:	f7dd ff63 	bl	8000d6c <__aeabi_i2f>
 8022ea6:	496b      	ldr	r1, [pc, #428]	; (8023054 <__ieee754_rem_pio2f+0x290>)
 8022ea8:	4681      	mov	r9, r0
 8022eaa:	f7dd ffb3 	bl	8000e14 <__aeabi_fmul>
 8022eae:	4601      	mov	r1, r0
 8022eb0:	4638      	mov	r0, r7
 8022eb2:	f7dd fea5 	bl	8000c00 <__aeabi_fsub>
 8022eb6:	4969      	ldr	r1, [pc, #420]	; (802305c <__ieee754_rem_pio2f+0x298>)
 8022eb8:	4680      	mov	r8, r0
 8022eba:	4648      	mov	r0, r9
 8022ebc:	f7dd ffaa 	bl	8000e14 <__aeabi_fmul>
 8022ec0:	2d1f      	cmp	r5, #31
 8022ec2:	4607      	mov	r7, r0
 8022ec4:	dc0c      	bgt.n	8022ee0 <__ieee754_rem_pio2f+0x11c>
 8022ec6:	4a6a      	ldr	r2, [pc, #424]	; (8023070 <__ieee754_rem_pio2f+0x2ac>)
 8022ec8:	1e69      	subs	r1, r5, #1
 8022eca:	f026 03ff 	bic.w	r3, r6, #255	; 0xff
 8022ece:	f852 2021 	ldr.w	r2, [r2, r1, lsl #2]
 8022ed2:	4293      	cmp	r3, r2
 8022ed4:	d004      	beq.n	8022ee0 <__ieee754_rem_pio2f+0x11c>
 8022ed6:	4639      	mov	r1, r7
 8022ed8:	4640      	mov	r0, r8
 8022eda:	f7dd fe91 	bl	8000c00 <__aeabi_fsub>
 8022ede:	e00b      	b.n	8022ef8 <__ieee754_rem_pio2f+0x134>
 8022ee0:	4639      	mov	r1, r7
 8022ee2:	4640      	mov	r0, r8
 8022ee4:	f7dd fe8c 	bl	8000c00 <__aeabi_fsub>
 8022ee8:	f3c0 53c7 	ubfx	r3, r0, #23, #8
 8022eec:	ea4f 5be6 	mov.w	fp, r6, asr #23
 8022ef0:	ebc3 56d6 	rsb	r6, r3, r6, lsr #23
 8022ef4:	2e08      	cmp	r6, #8
 8022ef6:	dc01      	bgt.n	8022efc <__ieee754_rem_pio2f+0x138>
 8022ef8:	6020      	str	r0, [r4, #0]
 8022efa:	e026      	b.n	8022f4a <__ieee754_rem_pio2f+0x186>
 8022efc:	4958      	ldr	r1, [pc, #352]	; (8023060 <__ieee754_rem_pio2f+0x29c>)
 8022efe:	4648      	mov	r0, r9
 8022f00:	f7dd ff88 	bl	8000e14 <__aeabi_fmul>
 8022f04:	4607      	mov	r7, r0
 8022f06:	4601      	mov	r1, r0
 8022f08:	4640      	mov	r0, r8
 8022f0a:	f7dd fe79 	bl	8000c00 <__aeabi_fsub>
 8022f0e:	4601      	mov	r1, r0
 8022f10:	4606      	mov	r6, r0
 8022f12:	4640      	mov	r0, r8
 8022f14:	f7dd fe74 	bl	8000c00 <__aeabi_fsub>
 8022f18:	4639      	mov	r1, r7
 8022f1a:	f7dd fe71 	bl	8000c00 <__aeabi_fsub>
 8022f1e:	4951      	ldr	r1, [pc, #324]	; (8023064 <__ieee754_rem_pio2f+0x2a0>)
 8022f20:	4607      	mov	r7, r0
 8022f22:	4648      	mov	r0, r9
 8022f24:	f7dd ff76 	bl	8000e14 <__aeabi_fmul>
 8022f28:	4639      	mov	r1, r7
 8022f2a:	f7dd fe69 	bl	8000c00 <__aeabi_fsub>
 8022f2e:	4601      	mov	r1, r0
 8022f30:	4607      	mov	r7, r0
 8022f32:	4630      	mov	r0, r6
 8022f34:	f7dd fe64 	bl	8000c00 <__aeabi_fsub>
 8022f38:	f3c0 53c7 	ubfx	r3, r0, #23, #8
 8022f3c:	ebab 0b03 	sub.w	fp, fp, r3
 8022f40:	f1bb 0f19 	cmp.w	fp, #25
 8022f44:	dc16      	bgt.n	8022f74 <__ieee754_rem_pio2f+0x1b0>
 8022f46:	6020      	str	r0, [r4, #0]
 8022f48:	46b0      	mov	r8, r6
 8022f4a:	6826      	ldr	r6, [r4, #0]
 8022f4c:	4640      	mov	r0, r8
 8022f4e:	4631      	mov	r1, r6
 8022f50:	f7dd fe56 	bl	8000c00 <__aeabi_fsub>
 8022f54:	4639      	mov	r1, r7
 8022f56:	f7dd fe53 	bl	8000c00 <__aeabi_fsub>
 8022f5a:	f1ba 0f00 	cmp.w	sl, #0
 8022f5e:	6060      	str	r0, [r4, #4]
 8022f60:	f6bf af5a 	bge.w	8022e18 <__ieee754_rem_pio2f+0x54>
 8022f64:	f106 4600 	add.w	r6, r6, #2147483648	; 0x80000000
 8022f68:	f100 4000 	add.w	r0, r0, #2147483648	; 0x80000000
 8022f6c:	6026      	str	r6, [r4, #0]
 8022f6e:	6060      	str	r0, [r4, #4]
 8022f70:	426d      	negs	r5, r5
 8022f72:	e751      	b.n	8022e18 <__ieee754_rem_pio2f+0x54>
 8022f74:	493f      	ldr	r1, [pc, #252]	; (8023074 <__ieee754_rem_pio2f+0x2b0>)
 8022f76:	4648      	mov	r0, r9
 8022f78:	f7dd ff4c 	bl	8000e14 <__aeabi_fmul>
 8022f7c:	4607      	mov	r7, r0
 8022f7e:	4601      	mov	r1, r0
 8022f80:	4630      	mov	r0, r6
 8022f82:	f7dd fe3d 	bl	8000c00 <__aeabi_fsub>
 8022f86:	4601      	mov	r1, r0
 8022f88:	4680      	mov	r8, r0
 8022f8a:	4630      	mov	r0, r6
 8022f8c:	f7dd fe38 	bl	8000c00 <__aeabi_fsub>
 8022f90:	4639      	mov	r1, r7
 8022f92:	f7dd fe35 	bl	8000c00 <__aeabi_fsub>
 8022f96:	4938      	ldr	r1, [pc, #224]	; (8023078 <__ieee754_rem_pio2f+0x2b4>)
 8022f98:	4606      	mov	r6, r0
 8022f9a:	4648      	mov	r0, r9
 8022f9c:	f7dd ff3a 	bl	8000e14 <__aeabi_fmul>
 8022fa0:	4631      	mov	r1, r6
 8022fa2:	f7dd fe2d 	bl	8000c00 <__aeabi_fsub>
 8022fa6:	4607      	mov	r7, r0
 8022fa8:	e795      	b.n	8022ed6 <__ieee754_rem_pio2f+0x112>
 8022faa:	f1b6 4fff 	cmp.w	r6, #2139095040	; 0x7f800000
 8022fae:	db05      	blt.n	8022fbc <__ieee754_rem_pio2f+0x1f8>
 8022fb0:	4601      	mov	r1, r0
 8022fb2:	f7dd fe25 	bl	8000c00 <__aeabi_fsub>
 8022fb6:	6060      	str	r0, [r4, #4]
 8022fb8:	6020      	str	r0, [r4, #0]
 8022fba:	e710      	b.n	8022dde <__ieee754_rem_pio2f+0x1a>
 8022fbc:	15f7      	asrs	r7, r6, #23
 8022fbe:	3f86      	subs	r7, #134	; 0x86
 8022fc0:	eba6 56c7 	sub.w	r6, r6, r7, lsl #23
 8022fc4:	4630      	mov	r0, r6
 8022fc6:	f7de f901 	bl	80011cc <__aeabi_f2iz>
 8022fca:	f7dd fecf 	bl	8000d6c <__aeabi_i2f>
 8022fce:	4601      	mov	r1, r0
 8022fd0:	9003      	str	r0, [sp, #12]
 8022fd2:	4630      	mov	r0, r6
 8022fd4:	f7dd fe14 	bl	8000c00 <__aeabi_fsub>
 8022fd8:	f04f 4187 	mov.w	r1, #1132462080	; 0x43800000
 8022fdc:	f7dd ff1a 	bl	8000e14 <__aeabi_fmul>
 8022fe0:	4606      	mov	r6, r0
 8022fe2:	f7de f8f3 	bl	80011cc <__aeabi_f2iz>
 8022fe6:	f7dd fec1 	bl	8000d6c <__aeabi_i2f>
 8022fea:	4601      	mov	r1, r0
 8022fec:	9004      	str	r0, [sp, #16]
 8022fee:	4605      	mov	r5, r0
 8022ff0:	4630      	mov	r0, r6
 8022ff2:	f7dd fe05 	bl	8000c00 <__aeabi_fsub>
 8022ff6:	f04f 4187 	mov.w	r1, #1132462080	; 0x43800000
 8022ffa:	f7dd ff0b 	bl	8000e14 <__aeabi_fmul>
 8022ffe:	2100      	movs	r1, #0
 8023000:	9005      	str	r0, [sp, #20]
 8023002:	f7de f89b 	bl	800113c <__aeabi_fcmpeq>
 8023006:	b1f0      	cbz	r0, 8023046 <__ieee754_rem_pio2f+0x282>
 8023008:	2100      	movs	r1, #0
 802300a:	4628      	mov	r0, r5
 802300c:	f7de f896 	bl	800113c <__aeabi_fcmpeq>
 8023010:	2800      	cmp	r0, #0
 8023012:	bf14      	ite	ne
 8023014:	2301      	movne	r3, #1
 8023016:	2302      	moveq	r3, #2
 8023018:	4a18      	ldr	r2, [pc, #96]	; (802307c <__ieee754_rem_pio2f+0x2b8>)
 802301a:	9201      	str	r2, [sp, #4]
 802301c:	2202      	movs	r2, #2
 802301e:	9200      	str	r2, [sp, #0]
 8023020:	4621      	mov	r1, r4
 8023022:	463a      	mov	r2, r7
 8023024:	a803      	add	r0, sp, #12
 8023026:	f000 fdb9 	bl	8023b9c <__kernel_rem_pio2f>
 802302a:	f1ba 0f00 	cmp.w	sl, #0
 802302e:	4605      	mov	r5, r0
 8023030:	f6bf aef2 	bge.w	8022e18 <__ieee754_rem_pio2f+0x54>
 8023034:	6823      	ldr	r3, [r4, #0]
 8023036:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 802303a:	6023      	str	r3, [r4, #0]
 802303c:	6863      	ldr	r3, [r4, #4]
 802303e:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 8023042:	6063      	str	r3, [r4, #4]
 8023044:	e794      	b.n	8022f70 <__ieee754_rem_pio2f+0x1ac>
 8023046:	2303      	movs	r3, #3
 8023048:	e7e6      	b.n	8023018 <__ieee754_rem_pio2f+0x254>
 802304a:	bf00      	nop
 802304c:	3f490fd8 	.word	0x3f490fd8
 8023050:	4016cbe3 	.word	0x4016cbe3
 8023054:	3fc90f80 	.word	0x3fc90f80
 8023058:	3fc90fd0 	.word	0x3fc90fd0
 802305c:	37354443 	.word	0x37354443
 8023060:	37354400 	.word	0x37354400
 8023064:	2e85a308 	.word	0x2e85a308
 8023068:	43490f80 	.word	0x43490f80
 802306c:	3f22f984 	.word	0x3f22f984
 8023070:	08026b50 	.word	0x08026b50
 8023074:	2e85a300 	.word	0x2e85a300
 8023078:	248d3132 	.word	0x248d3132
 802307c:	08026bd0 	.word	0x08026bd0

08023080 <__ieee754_sqrtf>:
 8023080:	f020 4200 	bic.w	r2, r0, #2147483648	; 0x80000000
 8023084:	f1b2 4fff 	cmp.w	r2, #2139095040	; 0x7f800000
 8023088:	b570      	push	{r4, r5, r6, lr}
 802308a:	4603      	mov	r3, r0
 802308c:	4604      	mov	r4, r0
 802308e:	d309      	bcc.n	80230a4 <__ieee754_sqrtf+0x24>
 8023090:	4601      	mov	r1, r0
 8023092:	f7dd febf 	bl	8000e14 <__aeabi_fmul>
 8023096:	4601      	mov	r1, r0
 8023098:	4620      	mov	r0, r4
 802309a:	f7dd fdb3 	bl	8000c04 <__addsf3>
 802309e:	4604      	mov	r4, r0
 80230a0:	4620      	mov	r0, r4
 80230a2:	bd70      	pop	{r4, r5, r6, pc}
 80230a4:	2a00      	cmp	r2, #0
 80230a6:	d0fb      	beq.n	80230a0 <__ieee754_sqrtf+0x20>
 80230a8:	2800      	cmp	r0, #0
 80230aa:	da06      	bge.n	80230ba <__ieee754_sqrtf+0x3a>
 80230ac:	4601      	mov	r1, r0
 80230ae:	f7dd fda7 	bl	8000c00 <__aeabi_fsub>
 80230b2:	4601      	mov	r1, r0
 80230b4:	f7dd ff62 	bl	8000f7c <__aeabi_fdiv>
 80230b8:	e7f1      	b.n	802309e <__ieee754_sqrtf+0x1e>
 80230ba:	f010 42ff 	ands.w	r2, r0, #2139095040	; 0x7f800000
 80230be:	ea4f 51e0 	mov.w	r1, r0, asr #23
 80230c2:	d027      	beq.n	8023114 <__ieee754_sqrtf+0x94>
 80230c4:	f3c3 0216 	ubfx	r2, r3, #0, #23
 80230c8:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 80230cc:	07cb      	lsls	r3, r1, #31
 80230ce:	f1a1 007f 	sub.w	r0, r1, #127	; 0x7f
 80230d2:	bf58      	it	pl
 80230d4:	0052      	lslpl	r2, r2, #1
 80230d6:	2300      	movs	r3, #0
 80230d8:	1040      	asrs	r0, r0, #1
 80230da:	0052      	lsls	r2, r2, #1
 80230dc:	2419      	movs	r4, #25
 80230de:	461e      	mov	r6, r3
 80230e0:	f04f 7180 	mov.w	r1, #16777216	; 0x1000000
 80230e4:	1875      	adds	r5, r6, r1
 80230e6:	4295      	cmp	r5, r2
 80230e8:	bfde      	ittt	le
 80230ea:	186e      	addle	r6, r5, r1
 80230ec:	1b52      	suble	r2, r2, r5
 80230ee:	185b      	addle	r3, r3, r1
 80230f0:	3c01      	subs	r4, #1
 80230f2:	ea4f 0242 	mov.w	r2, r2, lsl #1
 80230f6:	ea4f 0151 	mov.w	r1, r1, lsr #1
 80230fa:	d1f3      	bne.n	80230e4 <__ieee754_sqrtf+0x64>
 80230fc:	b112      	cbz	r2, 8023104 <__ieee754_sqrtf+0x84>
 80230fe:	3301      	adds	r3, #1
 8023100:	f023 0301 	bic.w	r3, r3, #1
 8023104:	105c      	asrs	r4, r3, #1
 8023106:	f104 547c 	add.w	r4, r4, #1056964608	; 0x3f000000
 802310a:	eb04 54c0 	add.w	r4, r4, r0, lsl #23
 802310e:	e7c7      	b.n	80230a0 <__ieee754_sqrtf+0x20>
 8023110:	005b      	lsls	r3, r3, #1
 8023112:	3201      	adds	r2, #1
 8023114:	0218      	lsls	r0, r3, #8
 8023116:	d5fb      	bpl.n	8023110 <__ieee754_sqrtf+0x90>
 8023118:	3a01      	subs	r2, #1
 802311a:	1a89      	subs	r1, r1, r2
 802311c:	e7d2      	b.n	80230c4 <__ieee754_sqrtf+0x44>
	...

08023120 <__kernel_cos>:
 8023120:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023124:	f021 4600 	bic.w	r6, r1, #2147483648	; 0x80000000
 8023128:	f1b6 5f79 	cmp.w	r6, #1044381696	; 0x3e400000
 802312c:	e9cd 2300 	strd	r2, r3, [sp]
 8023130:	4680      	mov	r8, r0
 8023132:	460f      	mov	r7, r1
 8023134:	da04      	bge.n	8023140 <__kernel_cos+0x20>
 8023136:	f7dd fce7 	bl	8000b08 <__aeabi_d2iz>
 802313a:	2800      	cmp	r0, #0
 802313c:	f000 8086 	beq.w	802324c <__kernel_cos+0x12c>
 8023140:	4642      	mov	r2, r8
 8023142:	463b      	mov	r3, r7
 8023144:	4640      	mov	r0, r8
 8023146:	4639      	mov	r1, r7
 8023148:	f7dd fa2e 	bl	80005a8 <__aeabi_dmul>
 802314c:	4b4e      	ldr	r3, [pc, #312]	; (8023288 <__kernel_cos+0x168>)
 802314e:	2200      	movs	r2, #0
 8023150:	4604      	mov	r4, r0
 8023152:	460d      	mov	r5, r1
 8023154:	f7dd fa28 	bl	80005a8 <__aeabi_dmul>
 8023158:	a33f      	add	r3, pc, #252	; (adr r3, 8023258 <__kernel_cos+0x138>)
 802315a:	e9d3 2300 	ldrd	r2, r3, [r3]
 802315e:	4682      	mov	sl, r0
 8023160:	468b      	mov	fp, r1
 8023162:	4620      	mov	r0, r4
 8023164:	4629      	mov	r1, r5
 8023166:	f7dd fa1f 	bl	80005a8 <__aeabi_dmul>
 802316a:	a33d      	add	r3, pc, #244	; (adr r3, 8023260 <__kernel_cos+0x140>)
 802316c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8023170:	f7dd f864 	bl	800023c <__adddf3>
 8023174:	4622      	mov	r2, r4
 8023176:	462b      	mov	r3, r5
 8023178:	f7dd fa16 	bl	80005a8 <__aeabi_dmul>
 802317c:	a33a      	add	r3, pc, #232	; (adr r3, 8023268 <__kernel_cos+0x148>)
 802317e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8023182:	f7dd f859 	bl	8000238 <__aeabi_dsub>
 8023186:	4622      	mov	r2, r4
 8023188:	462b      	mov	r3, r5
 802318a:	f7dd fa0d 	bl	80005a8 <__aeabi_dmul>
 802318e:	a338      	add	r3, pc, #224	; (adr r3, 8023270 <__kernel_cos+0x150>)
 8023190:	e9d3 2300 	ldrd	r2, r3, [r3]
 8023194:	f7dd f852 	bl	800023c <__adddf3>
 8023198:	4622      	mov	r2, r4
 802319a:	462b      	mov	r3, r5
 802319c:	f7dd fa04 	bl	80005a8 <__aeabi_dmul>
 80231a0:	a335      	add	r3, pc, #212	; (adr r3, 8023278 <__kernel_cos+0x158>)
 80231a2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80231a6:	f7dd f847 	bl	8000238 <__aeabi_dsub>
 80231aa:	4622      	mov	r2, r4
 80231ac:	462b      	mov	r3, r5
 80231ae:	f7dd f9fb 	bl	80005a8 <__aeabi_dmul>
 80231b2:	a333      	add	r3, pc, #204	; (adr r3, 8023280 <__kernel_cos+0x160>)
 80231b4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80231b8:	f7dd f840 	bl	800023c <__adddf3>
 80231bc:	4622      	mov	r2, r4
 80231be:	462b      	mov	r3, r5
 80231c0:	f7dd f9f2 	bl	80005a8 <__aeabi_dmul>
 80231c4:	4622      	mov	r2, r4
 80231c6:	462b      	mov	r3, r5
 80231c8:	f7dd f9ee 	bl	80005a8 <__aeabi_dmul>
 80231cc:	e9dd 2300 	ldrd	r2, r3, [sp]
 80231d0:	4604      	mov	r4, r0
 80231d2:	460d      	mov	r5, r1
 80231d4:	4640      	mov	r0, r8
 80231d6:	4639      	mov	r1, r7
 80231d8:	f7dd f9e6 	bl	80005a8 <__aeabi_dmul>
 80231dc:	460b      	mov	r3, r1
 80231de:	4602      	mov	r2, r0
 80231e0:	4629      	mov	r1, r5
 80231e2:	4620      	mov	r0, r4
 80231e4:	f7dd f828 	bl	8000238 <__aeabi_dsub>
 80231e8:	4b28      	ldr	r3, [pc, #160]	; (802328c <__kernel_cos+0x16c>)
 80231ea:	429e      	cmp	r6, r3
 80231ec:	4680      	mov	r8, r0
 80231ee:	4689      	mov	r9, r1
 80231f0:	dc0e      	bgt.n	8023210 <__kernel_cos+0xf0>
 80231f2:	4602      	mov	r2, r0
 80231f4:	460b      	mov	r3, r1
 80231f6:	4650      	mov	r0, sl
 80231f8:	4659      	mov	r1, fp
 80231fa:	f7dd f81d 	bl	8000238 <__aeabi_dsub>
 80231fe:	460b      	mov	r3, r1
 8023200:	4923      	ldr	r1, [pc, #140]	; (8023290 <__kernel_cos+0x170>)
 8023202:	4602      	mov	r2, r0
 8023204:	2000      	movs	r0, #0
 8023206:	f7dd f817 	bl	8000238 <__aeabi_dsub>
 802320a:	b003      	add	sp, #12
 802320c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8023210:	4b20      	ldr	r3, [pc, #128]	; (8023294 <__kernel_cos+0x174>)
 8023212:	491f      	ldr	r1, [pc, #124]	; (8023290 <__kernel_cos+0x170>)
 8023214:	429e      	cmp	r6, r3
 8023216:	bfcc      	ite	gt
 8023218:	4d1f      	ldrgt	r5, [pc, #124]	; (8023298 <__kernel_cos+0x178>)
 802321a:	f5a6 1500 	suble.w	r5, r6, #2097152	; 0x200000
 802321e:	2400      	movs	r4, #0
 8023220:	4622      	mov	r2, r4
 8023222:	462b      	mov	r3, r5
 8023224:	2000      	movs	r0, #0
 8023226:	f7dd f807 	bl	8000238 <__aeabi_dsub>
 802322a:	4622      	mov	r2, r4
 802322c:	4606      	mov	r6, r0
 802322e:	460f      	mov	r7, r1
 8023230:	462b      	mov	r3, r5
 8023232:	4650      	mov	r0, sl
 8023234:	4659      	mov	r1, fp
 8023236:	f7dc ffff 	bl	8000238 <__aeabi_dsub>
 802323a:	4642      	mov	r2, r8
 802323c:	464b      	mov	r3, r9
 802323e:	f7dc fffb 	bl	8000238 <__aeabi_dsub>
 8023242:	4602      	mov	r2, r0
 8023244:	460b      	mov	r3, r1
 8023246:	4630      	mov	r0, r6
 8023248:	4639      	mov	r1, r7
 802324a:	e7dc      	b.n	8023206 <__kernel_cos+0xe6>
 802324c:	4910      	ldr	r1, [pc, #64]	; (8023290 <__kernel_cos+0x170>)
 802324e:	2000      	movs	r0, #0
 8023250:	e7db      	b.n	802320a <__kernel_cos+0xea>
 8023252:	bf00      	nop
 8023254:	f3af 8000 	nop.w
 8023258:	be8838d4 	.word	0xbe8838d4
 802325c:	bda8fae9 	.word	0xbda8fae9
 8023260:	bdb4b1c4 	.word	0xbdb4b1c4
 8023264:	3e21ee9e 	.word	0x3e21ee9e
 8023268:	809c52ad 	.word	0x809c52ad
 802326c:	3e927e4f 	.word	0x3e927e4f
 8023270:	19cb1590 	.word	0x19cb1590
 8023274:	3efa01a0 	.word	0x3efa01a0
 8023278:	16c15177 	.word	0x16c15177
 802327c:	3f56c16c 	.word	0x3f56c16c
 8023280:	5555554c 	.word	0x5555554c
 8023284:	3fa55555 	.word	0x3fa55555
 8023288:	3fe00000 	.word	0x3fe00000
 802328c:	3fd33332 	.word	0x3fd33332
 8023290:	3ff00000 	.word	0x3ff00000
 8023294:	3fe90000 	.word	0x3fe90000
 8023298:	3fd20000 	.word	0x3fd20000

0802329c <__kernel_rem_pio2>:
 802329c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80232a0:	f5ad 7d19 	sub.w	sp, sp, #612	; 0x264
 80232a4:	f112 0f14 	cmn.w	r2, #20
 80232a8:	9308      	str	r3, [sp, #32]
 80232aa:	9101      	str	r1, [sp, #4]
 80232ac:	4bbf      	ldr	r3, [pc, #764]	; (80235ac <__kernel_rem_pio2+0x310>)
 80232ae:	99a2      	ldr	r1, [sp, #648]	; 0x288
 80232b0:	9009      	str	r0, [sp, #36]	; 0x24
 80232b2:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 80232b6:	9304      	str	r3, [sp, #16]
 80232b8:	9b08      	ldr	r3, [sp, #32]
 80232ba:	f103 33ff 	add.w	r3, r3, #4294967295
 80232be:	bfa8      	it	ge
 80232c0:	1ed4      	subge	r4, r2, #3
 80232c2:	9306      	str	r3, [sp, #24]
 80232c4:	bfb2      	itee	lt
 80232c6:	2400      	movlt	r4, #0
 80232c8:	2318      	movge	r3, #24
 80232ca:	fb94 f4f3 	sdivge	r4, r4, r3
 80232ce:	f06f 0317 	mvn.w	r3, #23
 80232d2:	fb04 3303 	mla	r3, r4, r3, r3
 80232d6:	eb03 0a02 	add.w	sl, r3, r2
 80232da:	9a06      	ldr	r2, [sp, #24]
 80232dc:	9b04      	ldr	r3, [sp, #16]
 80232de:	eb03 0802 	add.w	r8, r3, r2
 80232e2:	9ba3      	ldr	r3, [sp, #652]	; 0x28c
 80232e4:	1aa7      	subs	r7, r4, r2
 80232e6:	eb03 0987 	add.w	r9, r3, r7, lsl #2
 80232ea:	ae20      	add	r6, sp, #128	; 0x80
 80232ec:	2500      	movs	r5, #0
 80232ee:	2200      	movs	r2, #0
 80232f0:	2300      	movs	r3, #0
 80232f2:	4545      	cmp	r5, r8
 80232f4:	dd19      	ble.n	802332a <__kernel_rem_pio2+0x8e>
 80232f6:	9b08      	ldr	r3, [sp, #32]
 80232f8:	f8dd 8018 	ldr.w	r8, [sp, #24]
 80232fc:	aa20      	add	r2, sp, #128	; 0x80
 80232fe:	eb02 05c3 	add.w	r5, r2, r3, lsl #3
 8023302:	f1c3 0301 	rsb	r3, r3, #1
 8023306:	f50d 7be0 	add.w	fp, sp, #448	; 0x1c0
 802330a:	9307      	str	r3, [sp, #28]
 802330c:	9b07      	ldr	r3, [sp, #28]
 802330e:	9a04      	ldr	r2, [sp, #16]
 8023310:	4443      	add	r3, r8
 8023312:	429a      	cmp	r2, r3
 8023314:	db36      	blt.n	8023384 <__kernel_rem_pio2+0xe8>
 8023316:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023318:	2200      	movs	r2, #0
 802331a:	f1a3 0908 	sub.w	r9, r3, #8
 802331e:	2300      	movs	r3, #0
 8023320:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8023324:	462f      	mov	r7, r5
 8023326:	2600      	movs	r6, #0
 8023328:	e01f      	b.n	802336a <__kernel_rem_pio2+0xce>
 802332a:	42ef      	cmn	r7, r5
 802332c:	d40b      	bmi.n	8023346 <__kernel_rem_pio2+0xaa>
 802332e:	f859 0025 	ldr.w	r0, [r9, r5, lsl #2]
 8023332:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8023336:	f7dd f8cd 	bl	80004d4 <__aeabi_i2d>
 802333a:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 802333e:	e8e6 0102 	strd	r0, r1, [r6], #8
 8023342:	3501      	adds	r5, #1
 8023344:	e7d5      	b.n	80232f2 <__kernel_rem_pio2+0x56>
 8023346:	4610      	mov	r0, r2
 8023348:	4619      	mov	r1, r3
 802334a:	e7f8      	b.n	802333e <__kernel_rem_pio2+0xa2>
 802334c:	e9d7 2300 	ldrd	r2, r3, [r7]
 8023350:	e9f9 0102 	ldrd	r0, r1, [r9, #8]!
 8023354:	f7dd f928 	bl	80005a8 <__aeabi_dmul>
 8023358:	4602      	mov	r2, r0
 802335a:	460b      	mov	r3, r1
 802335c:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8023360:	f7dc ff6c 	bl	800023c <__adddf3>
 8023364:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8023368:	3601      	adds	r6, #1
 802336a:	9b06      	ldr	r3, [sp, #24]
 802336c:	429e      	cmp	r6, r3
 802336e:	f1a7 0708 	sub.w	r7, r7, #8
 8023372:	ddeb      	ble.n	802334c <__kernel_rem_pio2+0xb0>
 8023374:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8023378:	3508      	adds	r5, #8
 802337a:	e8eb 2302 	strd	r2, r3, [fp], #8
 802337e:	f108 0801 	add.w	r8, r8, #1
 8023382:	e7c3      	b.n	802330c <__kernel_rem_pio2+0x70>
 8023384:	9b04      	ldr	r3, [sp, #16]
 8023386:	9f04      	ldr	r7, [sp, #16]
 8023388:	aa0c      	add	r2, sp, #48	; 0x30
 802338a:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 802338e:	930b      	str	r3, [sp, #44]	; 0x2c
 8023390:	9ba3      	ldr	r3, [sp, #652]	; 0x28c
 8023392:	eb03 0384 	add.w	r3, r3, r4, lsl #2
 8023396:	930a      	str	r3, [sp, #40]	; 0x28
 8023398:	ab98      	add	r3, sp, #608	; 0x260
 802339a:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 802339e:	e953 4528 	ldrd	r4, r5, [r3, #-160]	; 0xa0
 80233a2:	f10d 0b30 	add.w	fp, sp, #48	; 0x30
 80233a6:	f8cd b008 	str.w	fp, [sp, #8]
 80233aa:	463e      	mov	r6, r7
 80233ac:	2e00      	cmp	r6, #0
 80233ae:	dc71      	bgt.n	8023494 <__kernel_rem_pio2+0x1f8>
 80233b0:	4652      	mov	r2, sl
 80233b2:	4620      	mov	r0, r4
 80233b4:	4629      	mov	r1, r5
 80233b6:	f000 ffb7 	bl	8024328 <scalbn>
 80233ba:	2200      	movs	r2, #0
 80233bc:	f04f 537f 	mov.w	r3, #1069547520	; 0x3fc00000
 80233c0:	4604      	mov	r4, r0
 80233c2:	460d      	mov	r5, r1
 80233c4:	f7dd f8f0 	bl	80005a8 <__aeabi_dmul>
 80233c8:	f7fe faf6 	bl	80219b8 <floor>
 80233cc:	4b78      	ldr	r3, [pc, #480]	; (80235b0 <__kernel_rem_pio2+0x314>)
 80233ce:	2200      	movs	r2, #0
 80233d0:	f7dd f8ea 	bl	80005a8 <__aeabi_dmul>
 80233d4:	4602      	mov	r2, r0
 80233d6:	460b      	mov	r3, r1
 80233d8:	4620      	mov	r0, r4
 80233da:	4629      	mov	r1, r5
 80233dc:	f7dc ff2c 	bl	8000238 <__aeabi_dsub>
 80233e0:	460d      	mov	r5, r1
 80233e2:	4604      	mov	r4, r0
 80233e4:	f7dd fb90 	bl	8000b08 <__aeabi_d2iz>
 80233e8:	9007      	str	r0, [sp, #28]
 80233ea:	f7dd f873 	bl	80004d4 <__aeabi_i2d>
 80233ee:	4602      	mov	r2, r0
 80233f0:	460b      	mov	r3, r1
 80233f2:	4620      	mov	r0, r4
 80233f4:	4629      	mov	r1, r5
 80233f6:	f7dc ff1f 	bl	8000238 <__aeabi_dsub>
 80233fa:	f1ba 0f00 	cmp.w	sl, #0
 80233fe:	4680      	mov	r8, r0
 8023400:	4689      	mov	r9, r1
 8023402:	dd70      	ble.n	80234e6 <__kernel_rem_pio2+0x24a>
 8023404:	1e7a      	subs	r2, r7, #1
 8023406:	ab0c      	add	r3, sp, #48	; 0x30
 8023408:	9c07      	ldr	r4, [sp, #28]
 802340a:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 802340e:	f1ca 0118 	rsb	r1, sl, #24
 8023412:	fa40 f301 	asr.w	r3, r0, r1
 8023416:	441c      	add	r4, r3
 8023418:	408b      	lsls	r3, r1
 802341a:	1ac0      	subs	r0, r0, r3
 802341c:	ab0c      	add	r3, sp, #48	; 0x30
 802341e:	9407      	str	r4, [sp, #28]
 8023420:	f843 0022 	str.w	r0, [r3, r2, lsl #2]
 8023424:	f1ca 0317 	rsb	r3, sl, #23
 8023428:	fa40 f303 	asr.w	r3, r0, r3
 802342c:	9302      	str	r3, [sp, #8]
 802342e:	9b02      	ldr	r3, [sp, #8]
 8023430:	2b00      	cmp	r3, #0
 8023432:	dd66      	ble.n	8023502 <__kernel_rem_pio2+0x266>
 8023434:	9b07      	ldr	r3, [sp, #28]
 8023436:	2200      	movs	r2, #0
 8023438:	3301      	adds	r3, #1
 802343a:	9307      	str	r3, [sp, #28]
 802343c:	4614      	mov	r4, r2
 802343e:	f06f 417f 	mvn.w	r1, #4278190080	; 0xff000000
 8023442:	4297      	cmp	r7, r2
 8023444:	f300 809f 	bgt.w	8023586 <__kernel_rem_pio2+0x2ea>
 8023448:	f1ba 0f00 	cmp.w	sl, #0
 802344c:	dd07      	ble.n	802345e <__kernel_rem_pio2+0x1c2>
 802344e:	f1ba 0f01 	cmp.w	sl, #1
 8023452:	f000 80b9 	beq.w	80235c8 <__kernel_rem_pio2+0x32c>
 8023456:	f1ba 0f02 	cmp.w	sl, #2
 802345a:	f000 80bf 	beq.w	80235dc <__kernel_rem_pio2+0x340>
 802345e:	9b02      	ldr	r3, [sp, #8]
 8023460:	2b02      	cmp	r3, #2
 8023462:	d14e      	bne.n	8023502 <__kernel_rem_pio2+0x266>
 8023464:	4642      	mov	r2, r8
 8023466:	464b      	mov	r3, r9
 8023468:	4952      	ldr	r1, [pc, #328]	; (80235b4 <__kernel_rem_pio2+0x318>)
 802346a:	2000      	movs	r0, #0
 802346c:	f7dc fee4 	bl	8000238 <__aeabi_dsub>
 8023470:	4680      	mov	r8, r0
 8023472:	4689      	mov	r9, r1
 8023474:	2c00      	cmp	r4, #0
 8023476:	d044      	beq.n	8023502 <__kernel_rem_pio2+0x266>
 8023478:	4652      	mov	r2, sl
 802347a:	494e      	ldr	r1, [pc, #312]	; (80235b4 <__kernel_rem_pio2+0x318>)
 802347c:	2000      	movs	r0, #0
 802347e:	f000 ff53 	bl	8024328 <scalbn>
 8023482:	4602      	mov	r2, r0
 8023484:	460b      	mov	r3, r1
 8023486:	4640      	mov	r0, r8
 8023488:	4649      	mov	r1, r9
 802348a:	f7dc fed5 	bl	8000238 <__aeabi_dsub>
 802348e:	4680      	mov	r8, r0
 8023490:	4689      	mov	r9, r1
 8023492:	e036      	b.n	8023502 <__kernel_rem_pio2+0x266>
 8023494:	4b48      	ldr	r3, [pc, #288]	; (80235b8 <__kernel_rem_pio2+0x31c>)
 8023496:	2200      	movs	r2, #0
 8023498:	4620      	mov	r0, r4
 802349a:	4629      	mov	r1, r5
 802349c:	f7dd f884 	bl	80005a8 <__aeabi_dmul>
 80234a0:	f7dd fb32 	bl	8000b08 <__aeabi_d2iz>
 80234a4:	f7dd f816 	bl	80004d4 <__aeabi_i2d>
 80234a8:	4b44      	ldr	r3, [pc, #272]	; (80235bc <__kernel_rem_pio2+0x320>)
 80234aa:	2200      	movs	r2, #0
 80234ac:	4680      	mov	r8, r0
 80234ae:	4689      	mov	r9, r1
 80234b0:	f7dd f87a 	bl	80005a8 <__aeabi_dmul>
 80234b4:	4602      	mov	r2, r0
 80234b6:	460b      	mov	r3, r1
 80234b8:	4620      	mov	r0, r4
 80234ba:	4629      	mov	r1, r5
 80234bc:	f7dc febc 	bl	8000238 <__aeabi_dsub>
 80234c0:	f7dd fb22 	bl	8000b08 <__aeabi_d2iz>
 80234c4:	9b02      	ldr	r3, [sp, #8]
 80234c6:	f843 0b04 	str.w	r0, [r3], #4
 80234ca:	3e01      	subs	r6, #1
 80234cc:	9302      	str	r3, [sp, #8]
 80234ce:	ab70      	add	r3, sp, #448	; 0x1c0
 80234d0:	eb03 03c6 	add.w	r3, r3, r6, lsl #3
 80234d4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80234d8:	4640      	mov	r0, r8
 80234da:	4649      	mov	r1, r9
 80234dc:	f7dc feae 	bl	800023c <__adddf3>
 80234e0:	4604      	mov	r4, r0
 80234e2:	460d      	mov	r5, r1
 80234e4:	e762      	b.n	80233ac <__kernel_rem_pio2+0x110>
 80234e6:	d105      	bne.n	80234f4 <__kernel_rem_pio2+0x258>
 80234e8:	1e7b      	subs	r3, r7, #1
 80234ea:	aa0c      	add	r2, sp, #48	; 0x30
 80234ec:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 80234f0:	15c3      	asrs	r3, r0, #23
 80234f2:	e79b      	b.n	802342c <__kernel_rem_pio2+0x190>
 80234f4:	4b32      	ldr	r3, [pc, #200]	; (80235c0 <__kernel_rem_pio2+0x324>)
 80234f6:	2200      	movs	r2, #0
 80234f8:	f7dd fadc 	bl	8000ab4 <__aeabi_dcmpge>
 80234fc:	2800      	cmp	r0, #0
 80234fe:	d13f      	bne.n	8023580 <__kernel_rem_pio2+0x2e4>
 8023500:	9002      	str	r0, [sp, #8]
 8023502:	2200      	movs	r2, #0
 8023504:	2300      	movs	r3, #0
 8023506:	4640      	mov	r0, r8
 8023508:	4649      	mov	r1, r9
 802350a:	f7dd fab5 	bl	8000a78 <__aeabi_dcmpeq>
 802350e:	2800      	cmp	r0, #0
 8023510:	f000 80b5 	beq.w	802367e <__kernel_rem_pio2+0x3e2>
 8023514:	1e7c      	subs	r4, r7, #1
 8023516:	4623      	mov	r3, r4
 8023518:	2200      	movs	r2, #0
 802351a:	9904      	ldr	r1, [sp, #16]
 802351c:	428b      	cmp	r3, r1
 802351e:	da64      	bge.n	80235ea <__kernel_rem_pio2+0x34e>
 8023520:	2a00      	cmp	r2, #0
 8023522:	d078      	beq.n	8023616 <__kernel_rem_pio2+0x37a>
 8023524:	ab0c      	add	r3, sp, #48	; 0x30
 8023526:	f1aa 0a18 	sub.w	sl, sl, #24
 802352a:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
 802352e:	2b00      	cmp	r3, #0
 8023530:	f000 80a3 	beq.w	802367a <__kernel_rem_pio2+0x3de>
 8023534:	4652      	mov	r2, sl
 8023536:	491f      	ldr	r1, [pc, #124]	; (80235b4 <__kernel_rem_pio2+0x318>)
 8023538:	f8df 907c 	ldr.w	r9, [pc, #124]	; 80235b8 <__kernel_rem_pio2+0x31c>
 802353c:	2000      	movs	r0, #0
 802353e:	f000 fef3 	bl	8024328 <scalbn>
 8023542:	00e3      	lsls	r3, r4, #3
 8023544:	9306      	str	r3, [sp, #24]
 8023546:	ab70      	add	r3, sp, #448	; 0x1c0
 8023548:	4606      	mov	r6, r0
 802354a:	460f      	mov	r7, r1
 802354c:	eb03 0bc4 	add.w	fp, r3, r4, lsl #3
 8023550:	46a2      	mov	sl, r4
 8023552:	f04f 0800 	mov.w	r8, #0
 8023556:	f1ba 0f00 	cmp.w	sl, #0
 802355a:	f280 80c6 	bge.w	80236ea <__kernel_rem_pio2+0x44e>
 802355e:	4627      	mov	r7, r4
 8023560:	f04f 0800 	mov.w	r8, #0
 8023564:	2f00      	cmp	r7, #0
 8023566:	f2c0 80f3 	blt.w	8023750 <__kernel_rem_pio2+0x4b4>
 802356a:	4b16      	ldr	r3, [pc, #88]	; (80235c4 <__kernel_rem_pio2+0x328>)
 802356c:	461d      	mov	r5, r3
 802356e:	ab70      	add	r3, sp, #448	; 0x1c0
 8023570:	eb03 09c7 	add.w	r9, r3, r7, lsl #3
 8023574:	f04f 0a00 	mov.w	sl, #0
 8023578:	f04f 0b00 	mov.w	fp, #0
 802357c:	2600      	movs	r6, #0
 802357e:	e0d9      	b.n	8023734 <__kernel_rem_pio2+0x498>
 8023580:	2302      	movs	r3, #2
 8023582:	9302      	str	r3, [sp, #8]
 8023584:	e756      	b.n	8023434 <__kernel_rem_pio2+0x198>
 8023586:	f8db 3000 	ldr.w	r3, [fp]
 802358a:	b954      	cbnz	r4, 80235a2 <__kernel_rem_pio2+0x306>
 802358c:	b123      	cbz	r3, 8023598 <__kernel_rem_pio2+0x2fc>
 802358e:	f1c3 7380 	rsb	r3, r3, #16777216	; 0x1000000
 8023592:	f8cb 3000 	str.w	r3, [fp]
 8023596:	2301      	movs	r3, #1
 8023598:	3201      	adds	r2, #1
 802359a:	f10b 0b04 	add.w	fp, fp, #4
 802359e:	461c      	mov	r4, r3
 80235a0:	e74f      	b.n	8023442 <__kernel_rem_pio2+0x1a6>
 80235a2:	1acb      	subs	r3, r1, r3
 80235a4:	f8cb 3000 	str.w	r3, [fp]
 80235a8:	4623      	mov	r3, r4
 80235aa:	e7f5      	b.n	8023598 <__kernel_rem_pio2+0x2fc>
 80235ac:	08026f28 	.word	0x08026f28
 80235b0:	40200000 	.word	0x40200000
 80235b4:	3ff00000 	.word	0x3ff00000
 80235b8:	3e700000 	.word	0x3e700000
 80235bc:	41700000 	.word	0x41700000
 80235c0:	3fe00000 	.word	0x3fe00000
 80235c4:	08026ee8 	.word	0x08026ee8
 80235c8:	1e7a      	subs	r2, r7, #1
 80235ca:	ab0c      	add	r3, sp, #48	; 0x30
 80235cc:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80235d0:	f3c3 0316 	ubfx	r3, r3, #0, #23
 80235d4:	a90c      	add	r1, sp, #48	; 0x30
 80235d6:	f841 3022 	str.w	r3, [r1, r2, lsl #2]
 80235da:	e740      	b.n	802345e <__kernel_rem_pio2+0x1c2>
 80235dc:	1e7a      	subs	r2, r7, #1
 80235de:	ab0c      	add	r3, sp, #48	; 0x30
 80235e0:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80235e4:	f3c3 0315 	ubfx	r3, r3, #0, #22
 80235e8:	e7f4      	b.n	80235d4 <__kernel_rem_pio2+0x338>
 80235ea:	a90c      	add	r1, sp, #48	; 0x30
 80235ec:	f851 1023 	ldr.w	r1, [r1, r3, lsl #2]
 80235f0:	3b01      	subs	r3, #1
 80235f2:	430a      	orrs	r2, r1
 80235f4:	e791      	b.n	802351a <__kernel_rem_pio2+0x27e>
 80235f6:	3401      	adds	r4, #1
 80235f8:	f853 2d04 	ldr.w	r2, [r3, #-4]!
 80235fc:	2a00      	cmp	r2, #0
 80235fe:	d0fa      	beq.n	80235f6 <__kernel_rem_pio2+0x35a>
 8023600:	9b08      	ldr	r3, [sp, #32]
 8023602:	18fd      	adds	r5, r7, r3
 8023604:	ab20      	add	r3, sp, #128	; 0x80
 8023606:	1c7e      	adds	r6, r7, #1
 8023608:	eb03 05c5 	add.w	r5, r3, r5, lsl #3
 802360c:	443c      	add	r4, r7
 802360e:	42b4      	cmp	r4, r6
 8023610:	da04      	bge.n	802361c <__kernel_rem_pio2+0x380>
 8023612:	4627      	mov	r7, r4
 8023614:	e6c0      	b.n	8023398 <__kernel_rem_pio2+0xfc>
 8023616:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8023618:	2401      	movs	r4, #1
 802361a:	e7ed      	b.n	80235f8 <__kernel_rem_pio2+0x35c>
 802361c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802361e:	f853 0026 	ldr.w	r0, [r3, r6, lsl #2]
 8023622:	f7dc ff57 	bl	80004d4 <__aeabi_i2d>
 8023626:	462f      	mov	r7, r5
 8023628:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802362a:	e8e7 0102 	strd	r0, r1, [r7], #8
 802362e:	3b08      	subs	r3, #8
 8023630:	9302      	str	r3, [sp, #8]
 8023632:	f04f 0b00 	mov.w	fp, #0
 8023636:	f04f 0800 	mov.w	r8, #0
 802363a:	f04f 0900 	mov.w	r9, #0
 802363e:	9b06      	ldr	r3, [sp, #24]
 8023640:	459b      	cmp	fp, r3
 8023642:	dd07      	ble.n	8023654 <__kernel_rem_pio2+0x3b8>
 8023644:	ab70      	add	r3, sp, #448	; 0x1c0
 8023646:	eb03 03c6 	add.w	r3, r3, r6, lsl #3
 802364a:	e9c3 8900 	strd	r8, r9, [r3]
 802364e:	3601      	adds	r6, #1
 8023650:	463d      	mov	r5, r7
 8023652:	e7dc      	b.n	802360e <__kernel_rem_pio2+0x372>
 8023654:	9902      	ldr	r1, [sp, #8]
 8023656:	e9f1 2302 	ldrd	r2, r3, [r1, #8]!
 802365a:	9102      	str	r1, [sp, #8]
 802365c:	e875 0102 	ldrd	r0, r1, [r5], #-8
 8023660:	f7dc ffa2 	bl	80005a8 <__aeabi_dmul>
 8023664:	4602      	mov	r2, r0
 8023666:	460b      	mov	r3, r1
 8023668:	4640      	mov	r0, r8
 802366a:	4649      	mov	r1, r9
 802366c:	f7dc fde6 	bl	800023c <__adddf3>
 8023670:	f10b 0b01 	add.w	fp, fp, #1
 8023674:	4680      	mov	r8, r0
 8023676:	4689      	mov	r9, r1
 8023678:	e7e1      	b.n	802363e <__kernel_rem_pio2+0x3a2>
 802367a:	3c01      	subs	r4, #1
 802367c:	e752      	b.n	8023524 <__kernel_rem_pio2+0x288>
 802367e:	f1ca 0200 	rsb	r2, sl, #0
 8023682:	4640      	mov	r0, r8
 8023684:	4649      	mov	r1, r9
 8023686:	f000 fe4f 	bl	8024328 <scalbn>
 802368a:	4ba6      	ldr	r3, [pc, #664]	; (8023924 <__kernel_rem_pio2+0x688>)
 802368c:	2200      	movs	r2, #0
 802368e:	4604      	mov	r4, r0
 8023690:	460d      	mov	r5, r1
 8023692:	f7dd fa0f 	bl	8000ab4 <__aeabi_dcmpge>
 8023696:	b1f8      	cbz	r0, 80236d8 <__kernel_rem_pio2+0x43c>
 8023698:	4ba3      	ldr	r3, [pc, #652]	; (8023928 <__kernel_rem_pio2+0x68c>)
 802369a:	2200      	movs	r2, #0
 802369c:	4620      	mov	r0, r4
 802369e:	4629      	mov	r1, r5
 80236a0:	f7dc ff82 	bl	80005a8 <__aeabi_dmul>
 80236a4:	f7dd fa30 	bl	8000b08 <__aeabi_d2iz>
 80236a8:	4606      	mov	r6, r0
 80236aa:	f7dc ff13 	bl	80004d4 <__aeabi_i2d>
 80236ae:	4b9d      	ldr	r3, [pc, #628]	; (8023924 <__kernel_rem_pio2+0x688>)
 80236b0:	2200      	movs	r2, #0
 80236b2:	f7dc ff79 	bl	80005a8 <__aeabi_dmul>
 80236b6:	460b      	mov	r3, r1
 80236b8:	4602      	mov	r2, r0
 80236ba:	4629      	mov	r1, r5
 80236bc:	4620      	mov	r0, r4
 80236be:	f7dc fdbb 	bl	8000238 <__aeabi_dsub>
 80236c2:	f7dd fa21 	bl	8000b08 <__aeabi_d2iz>
 80236c6:	1c7c      	adds	r4, r7, #1
 80236c8:	ab0c      	add	r3, sp, #48	; 0x30
 80236ca:	f10a 0a18 	add.w	sl, sl, #24
 80236ce:	f843 0027 	str.w	r0, [r3, r7, lsl #2]
 80236d2:	f843 6024 	str.w	r6, [r3, r4, lsl #2]
 80236d6:	e72d      	b.n	8023534 <__kernel_rem_pio2+0x298>
 80236d8:	4620      	mov	r0, r4
 80236da:	4629      	mov	r1, r5
 80236dc:	f7dd fa14 	bl	8000b08 <__aeabi_d2iz>
 80236e0:	ab0c      	add	r3, sp, #48	; 0x30
 80236e2:	463c      	mov	r4, r7
 80236e4:	f843 0027 	str.w	r0, [r3, r7, lsl #2]
 80236e8:	e724      	b.n	8023534 <__kernel_rem_pio2+0x298>
 80236ea:	ab0c      	add	r3, sp, #48	; 0x30
 80236ec:	f853 002a 	ldr.w	r0, [r3, sl, lsl #2]
 80236f0:	f7dc fef0 	bl	80004d4 <__aeabi_i2d>
 80236f4:	4632      	mov	r2, r6
 80236f6:	463b      	mov	r3, r7
 80236f8:	f7dc ff56 	bl	80005a8 <__aeabi_dmul>
 80236fc:	4642      	mov	r2, r8
 80236fe:	e86b 0102 	strd	r0, r1, [fp], #-8
 8023702:	464b      	mov	r3, r9
 8023704:	4630      	mov	r0, r6
 8023706:	4639      	mov	r1, r7
 8023708:	f7dc ff4e 	bl	80005a8 <__aeabi_dmul>
 802370c:	f10a 3aff 	add.w	sl, sl, #4294967295
 8023710:	4606      	mov	r6, r0
 8023712:	460f      	mov	r7, r1
 8023714:	e71f      	b.n	8023556 <__kernel_rem_pio2+0x2ba>
 8023716:	e8f9 2302 	ldrd	r2, r3, [r9], #8
 802371a:	e8f5 0102 	ldrd	r0, r1, [r5], #8
 802371e:	f7dc ff43 	bl	80005a8 <__aeabi_dmul>
 8023722:	4602      	mov	r2, r0
 8023724:	460b      	mov	r3, r1
 8023726:	4650      	mov	r0, sl
 8023728:	4659      	mov	r1, fp
 802372a:	f7dc fd87 	bl	800023c <__adddf3>
 802372e:	3601      	adds	r6, #1
 8023730:	4682      	mov	sl, r0
 8023732:	468b      	mov	fp, r1
 8023734:	9b04      	ldr	r3, [sp, #16]
 8023736:	429e      	cmp	r6, r3
 8023738:	dc01      	bgt.n	802373e <__kernel_rem_pio2+0x4a2>
 802373a:	45b0      	cmp	r8, r6
 802373c:	daeb      	bge.n	8023716 <__kernel_rem_pio2+0x47a>
 802373e:	ab48      	add	r3, sp, #288	; 0x120
 8023740:	eb03 03c8 	add.w	r3, r3, r8, lsl #3
 8023744:	e9c3 ab00 	strd	sl, fp, [r3]
 8023748:	3f01      	subs	r7, #1
 802374a:	f108 0801 	add.w	r8, r8, #1
 802374e:	e709      	b.n	8023564 <__kernel_rem_pio2+0x2c8>
 8023750:	9ba2      	ldr	r3, [sp, #648]	; 0x288
 8023752:	2b02      	cmp	r3, #2
 8023754:	dc09      	bgt.n	802376a <__kernel_rem_pio2+0x4ce>
 8023756:	2b00      	cmp	r3, #0
 8023758:	dc34      	bgt.n	80237c4 <__kernel_rem_pio2+0x528>
 802375a:	d05e      	beq.n	802381a <__kernel_rem_pio2+0x57e>
 802375c:	9b07      	ldr	r3, [sp, #28]
 802375e:	f003 0007 	and.w	r0, r3, #7
 8023762:	f50d 7d19 	add.w	sp, sp, #612	; 0x264
 8023766:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802376a:	9ba2      	ldr	r3, [sp, #648]	; 0x288
 802376c:	2b03      	cmp	r3, #3
 802376e:	d1f5      	bne.n	802375c <__kernel_rem_pio2+0x4c0>
 8023770:	9a06      	ldr	r2, [sp, #24]
 8023772:	ab48      	add	r3, sp, #288	; 0x120
 8023774:	441a      	add	r2, r3
 8023776:	4615      	mov	r5, r2
 8023778:	4692      	mov	sl, r2
 802377a:	46a3      	mov	fp, r4
 802377c:	f1bb 0f00 	cmp.w	fp, #0
 8023780:	dc7a      	bgt.n	8023878 <__kernel_rem_pio2+0x5dc>
 8023782:	46aa      	mov	sl, r5
 8023784:	46a3      	mov	fp, r4
 8023786:	f1bb 0f01 	cmp.w	fp, #1
 802378a:	f300 8094 	bgt.w	80238b6 <__kernel_rem_pio2+0x61a>
 802378e:	2700      	movs	r7, #0
 8023790:	463e      	mov	r6, r7
 8023792:	2c01      	cmp	r4, #1
 8023794:	f300 80ae 	bgt.w	80238f4 <__kernel_rem_pio2+0x658>
 8023798:	9b02      	ldr	r3, [sp, #8]
 802379a:	e9dd 5048 	ldrd	r5, r0, [sp, #288]	; 0x120
 802379e:	e9dd 414a 	ldrd	r4, r1, [sp, #296]	; 0x128
 80237a2:	2b00      	cmp	r3, #0
 80237a4:	f040 80b0 	bne.w	8023908 <__kernel_rem_pio2+0x66c>
 80237a8:	4603      	mov	r3, r0
 80237aa:	9801      	ldr	r0, [sp, #4]
 80237ac:	462a      	mov	r2, r5
 80237ae:	e9c0 2300 	strd	r2, r3, [r0]
 80237b2:	4622      	mov	r2, r4
 80237b4:	460b      	mov	r3, r1
 80237b6:	e9c0 2302 	strd	r2, r3, [r0, #8]
 80237ba:	463a      	mov	r2, r7
 80237bc:	4633      	mov	r3, r6
 80237be:	e9c0 2304 	strd	r2, r3, [r0, #16]
 80237c2:	e7cb      	b.n	802375c <__kernel_rem_pio2+0x4c0>
 80237c4:	9a06      	ldr	r2, [sp, #24]
 80237c6:	ab48      	add	r3, sp, #288	; 0x120
 80237c8:	441a      	add	r2, r3
 80237ca:	2000      	movs	r0, #0
 80237cc:	4615      	mov	r5, r2
 80237ce:	46a0      	mov	r8, r4
 80237d0:	4601      	mov	r1, r0
 80237d2:	f1b8 0f00 	cmp.w	r8, #0
 80237d6:	da3c      	bge.n	8023852 <__kernel_rem_pio2+0x5b6>
 80237d8:	9b02      	ldr	r3, [sp, #8]
 80237da:	2b00      	cmp	r3, #0
 80237dc:	d040      	beq.n	8023860 <__kernel_rem_pio2+0x5c4>
 80237de:	f101 4500 	add.w	r5, r1, #2147483648	; 0x80000000
 80237e2:	462b      	mov	r3, r5
 80237e4:	9d01      	ldr	r5, [sp, #4]
 80237e6:	4602      	mov	r2, r0
 80237e8:	e9c5 2300 	strd	r2, r3, [r5]
 80237ec:	460b      	mov	r3, r1
 80237ee:	e9dd 0148 	ldrd	r0, r1, [sp, #288]	; 0x120
 80237f2:	f7dc fd21 	bl	8000238 <__aeabi_dsub>
 80237f6:	ad48      	add	r5, sp, #288	; 0x120
 80237f8:	4684      	mov	ip, r0
 80237fa:	460f      	mov	r7, r1
 80237fc:	2601      	movs	r6, #1
 80237fe:	42b4      	cmp	r4, r6
 8023800:	f105 0508 	add.w	r5, r5, #8
 8023804:	da2e      	bge.n	8023864 <__kernel_rem_pio2+0x5c8>
 8023806:	9b02      	ldr	r3, [sp, #8]
 8023808:	b10b      	cbz	r3, 802380e <__kernel_rem_pio2+0x572>
 802380a:	f107 4700 	add.w	r7, r7, #2147483648	; 0x80000000
 802380e:	9901      	ldr	r1, [sp, #4]
 8023810:	4662      	mov	r2, ip
 8023812:	463b      	mov	r3, r7
 8023814:	e9c1 2302 	strd	r2, r3, [r1, #8]
 8023818:	e7a0      	b.n	802375c <__kernel_rem_pio2+0x4c0>
 802381a:	9a06      	ldr	r2, [sp, #24]
 802381c:	9ea2      	ldr	r6, [sp, #648]	; 0x288
 802381e:	ab48      	add	r3, sp, #288	; 0x120
 8023820:	441a      	add	r2, r3
 8023822:	4615      	mov	r5, r2
 8023824:	4637      	mov	r7, r6
 8023826:	2c00      	cmp	r4, #0
 8023828:	da09      	bge.n	802383e <__kernel_rem_pio2+0x5a2>
 802382a:	9b02      	ldr	r3, [sp, #8]
 802382c:	b10b      	cbz	r3, 8023832 <__kernel_rem_pio2+0x596>
 802382e:	f107 4700 	add.w	r7, r7, #2147483648	; 0x80000000
 8023832:	9901      	ldr	r1, [sp, #4]
 8023834:	4632      	mov	r2, r6
 8023836:	463b      	mov	r3, r7
 8023838:	e9c1 2300 	strd	r2, r3, [r1]
 802383c:	e78e      	b.n	802375c <__kernel_rem_pio2+0x4c0>
 802383e:	4630      	mov	r0, r6
 8023840:	4639      	mov	r1, r7
 8023842:	e875 2302 	ldrd	r2, r3, [r5], #-8
 8023846:	f7dc fcf9 	bl	800023c <__adddf3>
 802384a:	3c01      	subs	r4, #1
 802384c:	4606      	mov	r6, r0
 802384e:	460f      	mov	r7, r1
 8023850:	e7e9      	b.n	8023826 <__kernel_rem_pio2+0x58a>
 8023852:	e875 2302 	ldrd	r2, r3, [r5], #-8
 8023856:	f7dc fcf1 	bl	800023c <__adddf3>
 802385a:	f108 38ff 	add.w	r8, r8, #4294967295
 802385e:	e7b8      	b.n	80237d2 <__kernel_rem_pio2+0x536>
 8023860:	460d      	mov	r5, r1
 8023862:	e7be      	b.n	80237e2 <__kernel_rem_pio2+0x546>
 8023864:	4660      	mov	r0, ip
 8023866:	4639      	mov	r1, r7
 8023868:	e9d5 2300 	ldrd	r2, r3, [r5]
 802386c:	f7dc fce6 	bl	800023c <__adddf3>
 8023870:	3601      	adds	r6, #1
 8023872:	4684      	mov	ip, r0
 8023874:	460f      	mov	r7, r1
 8023876:	e7c2      	b.n	80237fe <__kernel_rem_pio2+0x562>
 8023878:	e9da 6700 	ldrd	r6, r7, [sl]
 802387c:	e95a 8902 	ldrd	r8, r9, [sl, #-8]
 8023880:	4632      	mov	r2, r6
 8023882:	463b      	mov	r3, r7
 8023884:	4640      	mov	r0, r8
 8023886:	4649      	mov	r1, r9
 8023888:	f7dc fcd8 	bl	800023c <__adddf3>
 802388c:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8023890:	4602      	mov	r2, r0
 8023892:	460b      	mov	r3, r1
 8023894:	4640      	mov	r0, r8
 8023896:	4649      	mov	r1, r9
 8023898:	f7dc fcce 	bl	8000238 <__aeabi_dsub>
 802389c:	4632      	mov	r2, r6
 802389e:	463b      	mov	r3, r7
 80238a0:	f7dc fccc 	bl	800023c <__adddf3>
 80238a4:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 80238a8:	e86a 0102 	strd	r0, r1, [sl], #-8
 80238ac:	f10b 3bff 	add.w	fp, fp, #4294967295
 80238b0:	e9ca 2300 	strd	r2, r3, [sl]
 80238b4:	e762      	b.n	802377c <__kernel_rem_pio2+0x4e0>
 80238b6:	e9da 8900 	ldrd	r8, r9, [sl]
 80238ba:	e95a 6702 	ldrd	r6, r7, [sl, #-8]
 80238be:	4642      	mov	r2, r8
 80238c0:	464b      	mov	r3, r9
 80238c2:	4630      	mov	r0, r6
 80238c4:	4639      	mov	r1, r7
 80238c6:	f7dc fcb9 	bl	800023c <__adddf3>
 80238ca:	e9cd 0104 	strd	r0, r1, [sp, #16]
 80238ce:	4602      	mov	r2, r0
 80238d0:	460b      	mov	r3, r1
 80238d2:	4630      	mov	r0, r6
 80238d4:	4639      	mov	r1, r7
 80238d6:	f7dc fcaf 	bl	8000238 <__aeabi_dsub>
 80238da:	4642      	mov	r2, r8
 80238dc:	464b      	mov	r3, r9
 80238de:	f7dc fcad 	bl	800023c <__adddf3>
 80238e2:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 80238e6:	e86a 0102 	strd	r0, r1, [sl], #-8
 80238ea:	f10b 3bff 	add.w	fp, fp, #4294967295
 80238ee:	e9ca 2300 	strd	r2, r3, [sl]
 80238f2:	e748      	b.n	8023786 <__kernel_rem_pio2+0x4ea>
 80238f4:	4638      	mov	r0, r7
 80238f6:	4631      	mov	r1, r6
 80238f8:	e875 2302 	ldrd	r2, r3, [r5], #-8
 80238fc:	f7dc fc9e 	bl	800023c <__adddf3>
 8023900:	3c01      	subs	r4, #1
 8023902:	4607      	mov	r7, r0
 8023904:	460e      	mov	r6, r1
 8023906:	e744      	b.n	8023792 <__kernel_rem_pio2+0x4f6>
 8023908:	9b01      	ldr	r3, [sp, #4]
 802390a:	f100 4000 	add.w	r0, r0, #2147483648	; 0x80000000
 802390e:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8023912:	f106 4600 	add.w	r6, r6, #2147483648	; 0x80000000
 8023916:	e9c3 0401 	strd	r0, r4, [r3, #4]
 802391a:	e9c3 1703 	strd	r1, r7, [r3, #12]
 802391e:	601d      	str	r5, [r3, #0]
 8023920:	615e      	str	r6, [r3, #20]
 8023922:	e71b      	b.n	802375c <__kernel_rem_pio2+0x4c0>
 8023924:	41700000 	.word	0x41700000
 8023928:	3e700000 	.word	0x3e700000
 802392c:	00000000 	.word	0x00000000

08023930 <__kernel_sin>:
 8023930:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8023934:	b086      	sub	sp, #24
 8023936:	e9cd 2300 	strd	r2, r3, [sp]
 802393a:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
 802393e:	f1b3 5f79 	cmp.w	r3, #1044381696	; 0x3e400000
 8023942:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8023944:	4682      	mov	sl, r0
 8023946:	460c      	mov	r4, r1
 8023948:	da03      	bge.n	8023952 <__kernel_sin+0x22>
 802394a:	f7dd f8dd 	bl	8000b08 <__aeabi_d2iz>
 802394e:	2800      	cmp	r0, #0
 8023950:	d050      	beq.n	80239f4 <__kernel_sin+0xc4>
 8023952:	4652      	mov	r2, sl
 8023954:	4623      	mov	r3, r4
 8023956:	4650      	mov	r0, sl
 8023958:	4621      	mov	r1, r4
 802395a:	f7dc fe25 	bl	80005a8 <__aeabi_dmul>
 802395e:	4606      	mov	r6, r0
 8023960:	460f      	mov	r7, r1
 8023962:	4602      	mov	r2, r0
 8023964:	460b      	mov	r3, r1
 8023966:	4650      	mov	r0, sl
 8023968:	4621      	mov	r1, r4
 802396a:	f7dc fe1d 	bl	80005a8 <__aeabi_dmul>
 802396e:	a33e      	add	r3, pc, #248	; (adr r3, 8023a68 <__kernel_sin+0x138>)
 8023970:	e9d3 2300 	ldrd	r2, r3, [r3]
 8023974:	4680      	mov	r8, r0
 8023976:	4689      	mov	r9, r1
 8023978:	4630      	mov	r0, r6
 802397a:	4639      	mov	r1, r7
 802397c:	f7dc fe14 	bl	80005a8 <__aeabi_dmul>
 8023980:	a33b      	add	r3, pc, #236	; (adr r3, 8023a70 <__kernel_sin+0x140>)
 8023982:	e9d3 2300 	ldrd	r2, r3, [r3]
 8023986:	f7dc fc57 	bl	8000238 <__aeabi_dsub>
 802398a:	4632      	mov	r2, r6
 802398c:	463b      	mov	r3, r7
 802398e:	f7dc fe0b 	bl	80005a8 <__aeabi_dmul>
 8023992:	a339      	add	r3, pc, #228	; (adr r3, 8023a78 <__kernel_sin+0x148>)
 8023994:	e9d3 2300 	ldrd	r2, r3, [r3]
 8023998:	f7dc fc50 	bl	800023c <__adddf3>
 802399c:	4632      	mov	r2, r6
 802399e:	463b      	mov	r3, r7
 80239a0:	f7dc fe02 	bl	80005a8 <__aeabi_dmul>
 80239a4:	a336      	add	r3, pc, #216	; (adr r3, 8023a80 <__kernel_sin+0x150>)
 80239a6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80239aa:	f7dc fc45 	bl	8000238 <__aeabi_dsub>
 80239ae:	4632      	mov	r2, r6
 80239b0:	463b      	mov	r3, r7
 80239b2:	f7dc fdf9 	bl	80005a8 <__aeabi_dmul>
 80239b6:	a334      	add	r3, pc, #208	; (adr r3, 8023a88 <__kernel_sin+0x158>)
 80239b8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80239bc:	f7dc fc3e 	bl	800023c <__adddf3>
 80239c0:	e9cd 0102 	strd	r0, r1, [sp, #8]
 80239c4:	b9dd      	cbnz	r5, 80239fe <__kernel_sin+0xce>
 80239c6:	4602      	mov	r2, r0
 80239c8:	460b      	mov	r3, r1
 80239ca:	4630      	mov	r0, r6
 80239cc:	4639      	mov	r1, r7
 80239ce:	f7dc fdeb 	bl	80005a8 <__aeabi_dmul>
 80239d2:	a32f      	add	r3, pc, #188	; (adr r3, 8023a90 <__kernel_sin+0x160>)
 80239d4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80239d8:	f7dc fc2e 	bl	8000238 <__aeabi_dsub>
 80239dc:	4642      	mov	r2, r8
 80239de:	464b      	mov	r3, r9
 80239e0:	f7dc fde2 	bl	80005a8 <__aeabi_dmul>
 80239e4:	4602      	mov	r2, r0
 80239e6:	460b      	mov	r3, r1
 80239e8:	4650      	mov	r0, sl
 80239ea:	4621      	mov	r1, r4
 80239ec:	f7dc fc26 	bl	800023c <__adddf3>
 80239f0:	4682      	mov	sl, r0
 80239f2:	460c      	mov	r4, r1
 80239f4:	4650      	mov	r0, sl
 80239f6:	4621      	mov	r1, r4
 80239f8:	b006      	add	sp, #24
 80239fa:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80239fe:	e9dd 0100 	ldrd	r0, r1, [sp]
 8023a02:	4b25      	ldr	r3, [pc, #148]	; (8023a98 <__kernel_sin+0x168>)
 8023a04:	2200      	movs	r2, #0
 8023a06:	f7dc fdcf 	bl	80005a8 <__aeabi_dmul>
 8023a0a:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8023a0e:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8023a12:	4640      	mov	r0, r8
 8023a14:	4649      	mov	r1, r9
 8023a16:	f7dc fdc7 	bl	80005a8 <__aeabi_dmul>
 8023a1a:	4602      	mov	r2, r0
 8023a1c:	460b      	mov	r3, r1
 8023a1e:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8023a22:	f7dc fc09 	bl	8000238 <__aeabi_dsub>
 8023a26:	4632      	mov	r2, r6
 8023a28:	463b      	mov	r3, r7
 8023a2a:	f7dc fdbd 	bl	80005a8 <__aeabi_dmul>
 8023a2e:	e9dd 2300 	ldrd	r2, r3, [sp]
 8023a32:	f7dc fc01 	bl	8000238 <__aeabi_dsub>
 8023a36:	a316      	add	r3, pc, #88	; (adr r3, 8023a90 <__kernel_sin+0x160>)
 8023a38:	e9d3 2300 	ldrd	r2, r3, [r3]
 8023a3c:	4606      	mov	r6, r0
 8023a3e:	460f      	mov	r7, r1
 8023a40:	4640      	mov	r0, r8
 8023a42:	4649      	mov	r1, r9
 8023a44:	f7dc fdb0 	bl	80005a8 <__aeabi_dmul>
 8023a48:	4602      	mov	r2, r0
 8023a4a:	460b      	mov	r3, r1
 8023a4c:	4630      	mov	r0, r6
 8023a4e:	4639      	mov	r1, r7
 8023a50:	f7dc fbf4 	bl	800023c <__adddf3>
 8023a54:	4602      	mov	r2, r0
 8023a56:	460b      	mov	r3, r1
 8023a58:	4650      	mov	r0, sl
 8023a5a:	4621      	mov	r1, r4
 8023a5c:	f7dc fbec 	bl	8000238 <__aeabi_dsub>
 8023a60:	e7c6      	b.n	80239f0 <__kernel_sin+0xc0>
 8023a62:	bf00      	nop
 8023a64:	f3af 8000 	nop.w
 8023a68:	5acfd57c 	.word	0x5acfd57c
 8023a6c:	3de5d93a 	.word	0x3de5d93a
 8023a70:	8a2b9ceb 	.word	0x8a2b9ceb
 8023a74:	3e5ae5e6 	.word	0x3e5ae5e6
 8023a78:	57b1fe7d 	.word	0x57b1fe7d
 8023a7c:	3ec71de3 	.word	0x3ec71de3
 8023a80:	19c161d5 	.word	0x19c161d5
 8023a84:	3f2a01a0 	.word	0x3f2a01a0
 8023a88:	1110f8a6 	.word	0x1110f8a6
 8023a8c:	3f811111 	.word	0x3f811111
 8023a90:	55555549 	.word	0x55555549
 8023a94:	3fc55555 	.word	0x3fc55555
 8023a98:	3fe00000 	.word	0x3fe00000

08023a9c <__kernel_cosf>:
 8023a9c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8023aa0:	f020 4400 	bic.w	r4, r0, #2147483648	; 0x80000000
 8023aa4:	f1b4 5f48 	cmp.w	r4, #838860800	; 0x32000000
 8023aa8:	4606      	mov	r6, r0
 8023aaa:	4688      	mov	r8, r1
 8023aac:	da03      	bge.n	8023ab6 <__kernel_cosf+0x1a>
 8023aae:	f7dd fb8d 	bl	80011cc <__aeabi_f2iz>
 8023ab2:	2800      	cmp	r0, #0
 8023ab4:	d05c      	beq.n	8023b70 <__kernel_cosf+0xd4>
 8023ab6:	4631      	mov	r1, r6
 8023ab8:	4630      	mov	r0, r6
 8023aba:	f7dd f9ab 	bl	8000e14 <__aeabi_fmul>
 8023abe:	f04f 517c 	mov.w	r1, #1056964608	; 0x3f000000
 8023ac2:	4605      	mov	r5, r0
 8023ac4:	f7dd f9a6 	bl	8000e14 <__aeabi_fmul>
 8023ac8:	492b      	ldr	r1, [pc, #172]	; (8023b78 <__kernel_cosf+0xdc>)
 8023aca:	4607      	mov	r7, r0
 8023acc:	4628      	mov	r0, r5
 8023ace:	f7dd f9a1 	bl	8000e14 <__aeabi_fmul>
 8023ad2:	492a      	ldr	r1, [pc, #168]	; (8023b7c <__kernel_cosf+0xe0>)
 8023ad4:	f7dd f896 	bl	8000c04 <__addsf3>
 8023ad8:	4629      	mov	r1, r5
 8023ada:	f7dd f99b 	bl	8000e14 <__aeabi_fmul>
 8023ade:	4928      	ldr	r1, [pc, #160]	; (8023b80 <__kernel_cosf+0xe4>)
 8023ae0:	f7dd f88e 	bl	8000c00 <__aeabi_fsub>
 8023ae4:	4629      	mov	r1, r5
 8023ae6:	f7dd f995 	bl	8000e14 <__aeabi_fmul>
 8023aea:	4926      	ldr	r1, [pc, #152]	; (8023b84 <__kernel_cosf+0xe8>)
 8023aec:	f7dd f88a 	bl	8000c04 <__addsf3>
 8023af0:	4629      	mov	r1, r5
 8023af2:	f7dd f98f 	bl	8000e14 <__aeabi_fmul>
 8023af6:	4924      	ldr	r1, [pc, #144]	; (8023b88 <__kernel_cosf+0xec>)
 8023af8:	f7dd f882 	bl	8000c00 <__aeabi_fsub>
 8023afc:	4629      	mov	r1, r5
 8023afe:	f7dd f989 	bl	8000e14 <__aeabi_fmul>
 8023b02:	4922      	ldr	r1, [pc, #136]	; (8023b8c <__kernel_cosf+0xf0>)
 8023b04:	f7dd f87e 	bl	8000c04 <__addsf3>
 8023b08:	4629      	mov	r1, r5
 8023b0a:	f7dd f983 	bl	8000e14 <__aeabi_fmul>
 8023b0e:	4629      	mov	r1, r5
 8023b10:	f7dd f980 	bl	8000e14 <__aeabi_fmul>
 8023b14:	4641      	mov	r1, r8
 8023b16:	4605      	mov	r5, r0
 8023b18:	4630      	mov	r0, r6
 8023b1a:	f7dd f97b 	bl	8000e14 <__aeabi_fmul>
 8023b1e:	4601      	mov	r1, r0
 8023b20:	4628      	mov	r0, r5
 8023b22:	f7dd f86d 	bl	8000c00 <__aeabi_fsub>
 8023b26:	4b1a      	ldr	r3, [pc, #104]	; (8023b90 <__kernel_cosf+0xf4>)
 8023b28:	429c      	cmp	r4, r3
 8023b2a:	4605      	mov	r5, r0
 8023b2c:	dc0a      	bgt.n	8023b44 <__kernel_cosf+0xa8>
 8023b2e:	4601      	mov	r1, r0
 8023b30:	4638      	mov	r0, r7
 8023b32:	f7dd f865 	bl	8000c00 <__aeabi_fsub>
 8023b36:	4601      	mov	r1, r0
 8023b38:	f04f 507e 	mov.w	r0, #1065353216	; 0x3f800000
 8023b3c:	f7dd f860 	bl	8000c00 <__aeabi_fsub>
 8023b40:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8023b44:	4b13      	ldr	r3, [pc, #76]	; (8023b94 <__kernel_cosf+0xf8>)
 8023b46:	429c      	cmp	r4, r3
 8023b48:	bfcc      	ite	gt
 8023b4a:	4c13      	ldrgt	r4, [pc, #76]	; (8023b98 <__kernel_cosf+0xfc>)
 8023b4c:	f104 447f 	addle.w	r4, r4, #4278190080	; 0xff000000
 8023b50:	4621      	mov	r1, r4
 8023b52:	f04f 507e 	mov.w	r0, #1065353216	; 0x3f800000
 8023b56:	f7dd f853 	bl	8000c00 <__aeabi_fsub>
 8023b5a:	4621      	mov	r1, r4
 8023b5c:	4606      	mov	r6, r0
 8023b5e:	4638      	mov	r0, r7
 8023b60:	f7dd f84e 	bl	8000c00 <__aeabi_fsub>
 8023b64:	4629      	mov	r1, r5
 8023b66:	f7dd f84b 	bl	8000c00 <__aeabi_fsub>
 8023b6a:	4601      	mov	r1, r0
 8023b6c:	4630      	mov	r0, r6
 8023b6e:	e7e5      	b.n	8023b3c <__kernel_cosf+0xa0>
 8023b70:	f04f 507e 	mov.w	r0, #1065353216	; 0x3f800000
 8023b74:	e7e4      	b.n	8023b40 <__kernel_cosf+0xa4>
 8023b76:	bf00      	nop
 8023b78:	ad47d74e 	.word	0xad47d74e
 8023b7c:	310f74f6 	.word	0x310f74f6
 8023b80:	3493f27c 	.word	0x3493f27c
 8023b84:	37d00d01 	.word	0x37d00d01
 8023b88:	3ab60b61 	.word	0x3ab60b61
 8023b8c:	3d2aaaab 	.word	0x3d2aaaab
 8023b90:	3e999999 	.word	0x3e999999
 8023b94:	3f480000 	.word	0x3f480000
 8023b98:	3e900000 	.word	0x3e900000

08023b9c <__kernel_rem_pio2f>:
 8023b9c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023ba0:	b0db      	sub	sp, #364	; 0x16c
 8023ba2:	9202      	str	r2, [sp, #8]
 8023ba4:	9304      	str	r3, [sp, #16]
 8023ba6:	9a64      	ldr	r2, [sp, #400]	; 0x190
 8023ba8:	4bc5      	ldr	r3, [pc, #788]	; (8023ec0 <__kernel_rem_pio2f+0x324>)
 8023baa:	9005      	str	r0, [sp, #20]
 8023bac:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8023bb0:	9301      	str	r3, [sp, #4]
 8023bb2:	9b04      	ldr	r3, [sp, #16]
 8023bb4:	9100      	str	r1, [sp, #0]
 8023bb6:	3b01      	subs	r3, #1
 8023bb8:	9303      	str	r3, [sp, #12]
 8023bba:	9b02      	ldr	r3, [sp, #8]
 8023bbc:	1d1a      	adds	r2, r3, #4
 8023bbe:	f2c0 809b 	blt.w	8023cf8 <__kernel_rem_pio2f+0x15c>
 8023bc2:	1edc      	subs	r4, r3, #3
 8023bc4:	bf48      	it	mi
 8023bc6:	1d1c      	addmi	r4, r3, #4
 8023bc8:	10e4      	asrs	r4, r4, #3
 8023bca:	1c67      	adds	r7, r4, #1
 8023bcc:	00fb      	lsls	r3, r7, #3
 8023bce:	9306      	str	r3, [sp, #24]
 8023bd0:	9b02      	ldr	r3, [sp, #8]
 8023bd2:	9a03      	ldr	r2, [sp, #12]
 8023bd4:	eba3 07c7 	sub.w	r7, r3, r7, lsl #3
 8023bd8:	9b01      	ldr	r3, [sp, #4]
 8023bda:	eb03 0802 	add.w	r8, r3, r2
 8023bde:	9b65      	ldr	r3, [sp, #404]	; 0x194
 8023be0:	1aa6      	subs	r6, r4, r2
 8023be2:	eb03 0986 	add.w	r9, r3, r6, lsl #2
 8023be6:	2500      	movs	r5, #0
 8023be8:	f04f 0a00 	mov.w	sl, #0
 8023bec:	f10d 0b78 	add.w	fp, sp, #120	; 0x78
 8023bf0:	4545      	cmp	r5, r8
 8023bf2:	f340 8083 	ble.w	8023cfc <__kernel_rem_pio2f+0x160>
 8023bf6:	9b04      	ldr	r3, [sp, #16]
 8023bf8:	aa1e      	add	r2, sp, #120	; 0x78
 8023bfa:	eb02 0583 	add.w	r5, r2, r3, lsl #2
 8023bfe:	f04f 0800 	mov.w	r8, #0
 8023c02:	f04f 0b00 	mov.w	fp, #0
 8023c06:	ab46      	add	r3, sp, #280	; 0x118
 8023c08:	9a01      	ldr	r2, [sp, #4]
 8023c0a:	4590      	cmp	r8, r2
 8023c0c:	f340 809c 	ble.w	8023d48 <__kernel_rem_pio2f+0x1ac>
 8023c10:	4613      	mov	r3, r2
 8023c12:	aa0a      	add	r2, sp, #40	; 0x28
 8023c14:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8023c18:	9308      	str	r3, [sp, #32]
 8023c1a:	9b65      	ldr	r3, [sp, #404]	; 0x194
 8023c1c:	f8dd 8004 	ldr.w	r8, [sp, #4]
 8023c20:	eb03 0384 	add.w	r3, r3, r4, lsl #2
 8023c24:	9307      	str	r3, [sp, #28]
 8023c26:	ab5a      	add	r3, sp, #360	; 0x168
 8023c28:	eb03 0388 	add.w	r3, r3, r8, lsl #2
 8023c2c:	ad0a      	add	r5, sp, #40	; 0x28
 8023c2e:	f853 4c50 	ldr.w	r4, [r3, #-80]
 8023c32:	462e      	mov	r6, r5
 8023c34:	46c3      	mov	fp, r8
 8023c36:	f04f 4987 	mov.w	r9, #1132462080	; 0x43800000
 8023c3a:	f50d 7a8c 	add.w	sl, sp, #280	; 0x118
 8023c3e:	f1bb 0f00 	cmp.w	fp, #0
 8023c42:	f300 8086 	bgt.w	8023d52 <__kernel_rem_pio2f+0x1b6>
 8023c46:	4639      	mov	r1, r7
 8023c48:	4620      	mov	r0, r4
 8023c4a:	f000 fd45 	bl	80246d8 <scalbnf>
 8023c4e:	f04f 5178 	mov.w	r1, #1040187392	; 0x3e000000
 8023c52:	4604      	mov	r4, r0
 8023c54:	f7dd f8de 	bl	8000e14 <__aeabi_fmul>
 8023c58:	f000 fcfc 	bl	8024654 <floorf>
 8023c5c:	f04f 4182 	mov.w	r1, #1090519040	; 0x41000000
 8023c60:	f7dd f8d8 	bl	8000e14 <__aeabi_fmul>
 8023c64:	4601      	mov	r1, r0
 8023c66:	4620      	mov	r0, r4
 8023c68:	f7dc ffca 	bl	8000c00 <__aeabi_fsub>
 8023c6c:	4604      	mov	r4, r0
 8023c6e:	f7dd faad 	bl	80011cc <__aeabi_f2iz>
 8023c72:	4606      	mov	r6, r0
 8023c74:	f7dd f87a 	bl	8000d6c <__aeabi_i2f>
 8023c78:	4601      	mov	r1, r0
 8023c7a:	4620      	mov	r0, r4
 8023c7c:	f7dc ffc0 	bl	8000c00 <__aeabi_fsub>
 8023c80:	2f00      	cmp	r7, #0
 8023c82:	4681      	mov	r9, r0
 8023c84:	f340 8084 	ble.w	8023d90 <__kernel_rem_pio2f+0x1f4>
 8023c88:	f108 32ff 	add.w	r2, r8, #4294967295
 8023c8c:	ab0a      	add	r3, sp, #40	; 0x28
 8023c8e:	f1c7 0108 	rsb	r1, r7, #8
 8023c92:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 8023c96:	fa44 f301 	asr.w	r3, r4, r1
 8023c9a:	441e      	add	r6, r3
 8023c9c:	408b      	lsls	r3, r1
 8023c9e:	1ae4      	subs	r4, r4, r3
 8023ca0:	ab0a      	add	r3, sp, #40	; 0x28
 8023ca2:	f1c7 0007 	rsb	r0, r7, #7
 8023ca6:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 8023caa:	4104      	asrs	r4, r0
 8023cac:	2c00      	cmp	r4, #0
 8023cae:	dd7e      	ble.n	8023dae <__kernel_rem_pio2f+0x212>
 8023cb0:	2200      	movs	r2, #0
 8023cb2:	3601      	adds	r6, #1
 8023cb4:	4692      	mov	sl, r2
 8023cb6:	4590      	cmp	r8, r2
 8023cb8:	f300 80b0 	bgt.w	8023e1c <__kernel_rem_pio2f+0x280>
 8023cbc:	2f00      	cmp	r7, #0
 8023cbe:	dd05      	ble.n	8023ccc <__kernel_rem_pio2f+0x130>
 8023cc0:	2f01      	cmp	r7, #1
 8023cc2:	f000 80bd 	beq.w	8023e40 <__kernel_rem_pio2f+0x2a4>
 8023cc6:	2f02      	cmp	r7, #2
 8023cc8:	f000 80c5 	beq.w	8023e56 <__kernel_rem_pio2f+0x2ba>
 8023ccc:	2c02      	cmp	r4, #2
 8023cce:	d16e      	bne.n	8023dae <__kernel_rem_pio2f+0x212>
 8023cd0:	4649      	mov	r1, r9
 8023cd2:	f04f 507e 	mov.w	r0, #1065353216	; 0x3f800000
 8023cd6:	f7dc ff93 	bl	8000c00 <__aeabi_fsub>
 8023cda:	4681      	mov	r9, r0
 8023cdc:	f1ba 0f00 	cmp.w	sl, #0
 8023ce0:	d065      	beq.n	8023dae <__kernel_rem_pio2f+0x212>
 8023ce2:	4639      	mov	r1, r7
 8023ce4:	f04f 507e 	mov.w	r0, #1065353216	; 0x3f800000
 8023ce8:	f000 fcf6 	bl	80246d8 <scalbnf>
 8023cec:	4601      	mov	r1, r0
 8023cee:	4648      	mov	r0, r9
 8023cf0:	f7dc ff86 	bl	8000c00 <__aeabi_fsub>
 8023cf4:	4681      	mov	r9, r0
 8023cf6:	e05a      	b.n	8023dae <__kernel_rem_pio2f+0x212>
 8023cf8:	2400      	movs	r4, #0
 8023cfa:	e766      	b.n	8023bca <__kernel_rem_pio2f+0x2e>
 8023cfc:	42ee      	cmn	r6, r5
 8023cfe:	d407      	bmi.n	8023d10 <__kernel_rem_pio2f+0x174>
 8023d00:	f859 0025 	ldr.w	r0, [r9, r5, lsl #2]
 8023d04:	f7dd f832 	bl	8000d6c <__aeabi_i2f>
 8023d08:	f84b 0025 	str.w	r0, [fp, r5, lsl #2]
 8023d0c:	3501      	adds	r5, #1
 8023d0e:	e76f      	b.n	8023bf0 <__kernel_rem_pio2f+0x54>
 8023d10:	4650      	mov	r0, sl
 8023d12:	e7f9      	b.n	8023d08 <__kernel_rem_pio2f+0x16c>
 8023d14:	9b05      	ldr	r3, [sp, #20]
 8023d16:	f8da 1000 	ldr.w	r1, [sl]
 8023d1a:	f853 0029 	ldr.w	r0, [r3, r9, lsl #2]
 8023d1e:	f7dd f879 	bl	8000e14 <__aeabi_fmul>
 8023d22:	4601      	mov	r1, r0
 8023d24:	4630      	mov	r0, r6
 8023d26:	f7dc ff6d 	bl	8000c04 <__addsf3>
 8023d2a:	f109 0901 	add.w	r9, r9, #1
 8023d2e:	4606      	mov	r6, r0
 8023d30:	ab46      	add	r3, sp, #280	; 0x118
 8023d32:	9a03      	ldr	r2, [sp, #12]
 8023d34:	4591      	cmp	r9, r2
 8023d36:	f1aa 0a04 	sub.w	sl, sl, #4
 8023d3a:	ddeb      	ble.n	8023d14 <__kernel_rem_pio2f+0x178>
 8023d3c:	f843 6028 	str.w	r6, [r3, r8, lsl #2]
 8023d40:	3504      	adds	r5, #4
 8023d42:	f108 0801 	add.w	r8, r8, #1
 8023d46:	e75f      	b.n	8023c08 <__kernel_rem_pio2f+0x6c>
 8023d48:	46aa      	mov	sl, r5
 8023d4a:	465e      	mov	r6, fp
 8023d4c:	f04f 0900 	mov.w	r9, #0
 8023d50:	e7ef      	b.n	8023d32 <__kernel_rem_pio2f+0x196>
 8023d52:	f04f 516e 	mov.w	r1, #998244352	; 0x3b800000
 8023d56:	4620      	mov	r0, r4
 8023d58:	f7dd f85c 	bl	8000e14 <__aeabi_fmul>
 8023d5c:	f7dd fa36 	bl	80011cc <__aeabi_f2iz>
 8023d60:	f7dd f804 	bl	8000d6c <__aeabi_i2f>
 8023d64:	4649      	mov	r1, r9
 8023d66:	9009      	str	r0, [sp, #36]	; 0x24
 8023d68:	f7dd f854 	bl	8000e14 <__aeabi_fmul>
 8023d6c:	4601      	mov	r1, r0
 8023d6e:	4620      	mov	r0, r4
 8023d70:	f7dc ff46 	bl	8000c00 <__aeabi_fsub>
 8023d74:	f7dd fa2a 	bl	80011cc <__aeabi_f2iz>
 8023d78:	f10b 3bff 	add.w	fp, fp, #4294967295
 8023d7c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023d7e:	f846 0b04 	str.w	r0, [r6], #4
 8023d82:	f85a 102b 	ldr.w	r1, [sl, fp, lsl #2]
 8023d86:	4618      	mov	r0, r3
 8023d88:	f7dc ff3c 	bl	8000c04 <__addsf3>
 8023d8c:	4604      	mov	r4, r0
 8023d8e:	e756      	b.n	8023c3e <__kernel_rem_pio2f+0xa2>
 8023d90:	d106      	bne.n	8023da0 <__kernel_rem_pio2f+0x204>
 8023d92:	f108 33ff 	add.w	r3, r8, #4294967295
 8023d96:	aa0a      	add	r2, sp, #40	; 0x28
 8023d98:	f852 4023 	ldr.w	r4, [r2, r3, lsl #2]
 8023d9c:	1224      	asrs	r4, r4, #8
 8023d9e:	e785      	b.n	8023cac <__kernel_rem_pio2f+0x110>
 8023da0:	f04f 517c 	mov.w	r1, #1056964608	; 0x3f000000
 8023da4:	f7dd f9e8 	bl	8001178 <__aeabi_fcmpge>
 8023da8:	4604      	mov	r4, r0
 8023daa:	2800      	cmp	r0, #0
 8023dac:	d134      	bne.n	8023e18 <__kernel_rem_pio2f+0x27c>
 8023dae:	2100      	movs	r1, #0
 8023db0:	4648      	mov	r0, r9
 8023db2:	f7dd f9c3 	bl	800113c <__aeabi_fcmpeq>
 8023db6:	2800      	cmp	r0, #0
 8023db8:	f000 809a 	beq.w	8023ef0 <__kernel_rem_pio2f+0x354>
 8023dbc:	f108 35ff 	add.w	r5, r8, #4294967295
 8023dc0:	462b      	mov	r3, r5
 8023dc2:	2200      	movs	r2, #0
 8023dc4:	9901      	ldr	r1, [sp, #4]
 8023dc6:	428b      	cmp	r3, r1
 8023dc8:	da4d      	bge.n	8023e66 <__kernel_rem_pio2f+0x2ca>
 8023dca:	2a00      	cmp	r2, #0
 8023dcc:	d07c      	beq.n	8023ec8 <__kernel_rem_pio2f+0x32c>
 8023dce:	ab0a      	add	r3, sp, #40	; 0x28
 8023dd0:	3f08      	subs	r7, #8
 8023dd2:	f853 3025 	ldr.w	r3, [r3, r5, lsl #2]
 8023dd6:	2b00      	cmp	r3, #0
 8023dd8:	f000 8088 	beq.w	8023eec <__kernel_rem_pio2f+0x350>
 8023ddc:	4639      	mov	r1, r7
 8023dde:	f04f 507e 	mov.w	r0, #1065353216	; 0x3f800000
 8023de2:	f000 fc79 	bl	80246d8 <scalbnf>
 8023de6:	46aa      	mov	sl, r5
 8023de8:	4681      	mov	r9, r0
 8023dea:	af46      	add	r7, sp, #280	; 0x118
 8023dec:	f04f 586e 	mov.w	r8, #998244352	; 0x3b800000
 8023df0:	f1ba 0f00 	cmp.w	sl, #0
 8023df4:	f280 80b1 	bge.w	8023f5a <__kernel_rem_pio2f+0x3be>
 8023df8:	46a9      	mov	r9, r5
 8023dfa:	f04f 0a00 	mov.w	sl, #0
 8023dfe:	2200      	movs	r2, #0
 8023e00:	f1b9 0f00 	cmp.w	r9, #0
 8023e04:	f2c0 80db 	blt.w	8023fbe <__kernel_rem_pio2f+0x422>
 8023e08:	a946      	add	r1, sp, #280	; 0x118
 8023e0a:	4b2e      	ldr	r3, [pc, #184]	; (8023ec4 <__kernel_rem_pio2f+0x328>)
 8023e0c:	eb01 0b89 	add.w	fp, r1, r9, lsl #2
 8023e10:	4617      	mov	r7, r2
 8023e12:	f04f 0800 	mov.w	r8, #0
 8023e16:	e0c3      	b.n	8023fa0 <__kernel_rem_pio2f+0x404>
 8023e18:	2402      	movs	r4, #2
 8023e1a:	e749      	b.n	8023cb0 <__kernel_rem_pio2f+0x114>
 8023e1c:	682b      	ldr	r3, [r5, #0]
 8023e1e:	f1ba 0f00 	cmp.w	sl, #0
 8023e22:	d108      	bne.n	8023e36 <__kernel_rem_pio2f+0x29a>
 8023e24:	b11b      	cbz	r3, 8023e2e <__kernel_rem_pio2f+0x292>
 8023e26:	f5c3 7380 	rsb	r3, r3, #256	; 0x100
 8023e2a:	602b      	str	r3, [r5, #0]
 8023e2c:	2301      	movs	r3, #1
 8023e2e:	3201      	adds	r2, #1
 8023e30:	3504      	adds	r5, #4
 8023e32:	469a      	mov	sl, r3
 8023e34:	e73f      	b.n	8023cb6 <__kernel_rem_pio2f+0x11a>
 8023e36:	f1c3 03ff 	rsb	r3, r3, #255	; 0xff
 8023e3a:	602b      	str	r3, [r5, #0]
 8023e3c:	4653      	mov	r3, sl
 8023e3e:	e7f6      	b.n	8023e2e <__kernel_rem_pio2f+0x292>
 8023e40:	f108 32ff 	add.w	r2, r8, #4294967295
 8023e44:	ab0a      	add	r3, sp, #40	; 0x28
 8023e46:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8023e4a:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8023e4e:	a90a      	add	r1, sp, #40	; 0x28
 8023e50:	f841 3022 	str.w	r3, [r1, r2, lsl #2]
 8023e54:	e73a      	b.n	8023ccc <__kernel_rem_pio2f+0x130>
 8023e56:	f108 32ff 	add.w	r2, r8, #4294967295
 8023e5a:	ab0a      	add	r3, sp, #40	; 0x28
 8023e5c:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8023e60:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8023e64:	e7f3      	b.n	8023e4e <__kernel_rem_pio2f+0x2b2>
 8023e66:	a90a      	add	r1, sp, #40	; 0x28
 8023e68:	f851 1023 	ldr.w	r1, [r1, r3, lsl #2]
 8023e6c:	3b01      	subs	r3, #1
 8023e6e:	430a      	orrs	r2, r1
 8023e70:	e7a8      	b.n	8023dc4 <__kernel_rem_pio2f+0x228>
 8023e72:	3301      	adds	r3, #1
 8023e74:	f852 1d04 	ldr.w	r1, [r2, #-4]!
 8023e78:	2900      	cmp	r1, #0
 8023e7a:	d0fa      	beq.n	8023e72 <__kernel_rem_pio2f+0x2d6>
 8023e7c:	9a04      	ldr	r2, [sp, #16]
 8023e7e:	eb08 0402 	add.w	r4, r8, r2
 8023e82:	aa1e      	add	r2, sp, #120	; 0x78
 8023e84:	f108 0501 	add.w	r5, r8, #1
 8023e88:	eb02 0484 	add.w	r4, r2, r4, lsl #2
 8023e8c:	4498      	add	r8, r3
 8023e8e:	f50d 798c 	add.w	r9, sp, #280	; 0x118
 8023e92:	45a8      	cmp	r8, r5
 8023e94:	f6ff aec7 	blt.w	8023c26 <__kernel_rem_pio2f+0x8a>
 8023e98:	9b07      	ldr	r3, [sp, #28]
 8023e9a:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 8023e9e:	f7dc ff65 	bl	8000d6c <__aeabi_i2f>
 8023ea2:	46a3      	mov	fp, r4
 8023ea4:	f04f 0a00 	mov.w	sl, #0
 8023ea8:	f84b 0b04 	str.w	r0, [fp], #4
 8023eac:	2600      	movs	r6, #0
 8023eae:	9b03      	ldr	r3, [sp, #12]
 8023eb0:	459a      	cmp	sl, r3
 8023eb2:	dd0c      	ble.n	8023ece <__kernel_rem_pio2f+0x332>
 8023eb4:	f849 6025 	str.w	r6, [r9, r5, lsl #2]
 8023eb8:	465c      	mov	r4, fp
 8023eba:	3501      	adds	r5, #1
 8023ebc:	e7e9      	b.n	8023e92 <__kernel_rem_pio2f+0x2f6>
 8023ebe:	bf00      	nop
 8023ec0:	08026f64 	.word	0x08026f64
 8023ec4:	08026f38 	.word	0x08026f38
 8023ec8:	9a08      	ldr	r2, [sp, #32]
 8023eca:	2301      	movs	r3, #1
 8023ecc:	e7d2      	b.n	8023e74 <__kernel_rem_pio2f+0x2d8>
 8023ece:	9b05      	ldr	r3, [sp, #20]
 8023ed0:	f854 0904 	ldr.w	r0, [r4], #-4
 8023ed4:	f853 102a 	ldr.w	r1, [r3, sl, lsl #2]
 8023ed8:	f7dc ff9c 	bl	8000e14 <__aeabi_fmul>
 8023edc:	4601      	mov	r1, r0
 8023ede:	4630      	mov	r0, r6
 8023ee0:	f7dc fe90 	bl	8000c04 <__addsf3>
 8023ee4:	f10a 0a01 	add.w	sl, sl, #1
 8023ee8:	4606      	mov	r6, r0
 8023eea:	e7e0      	b.n	8023eae <__kernel_rem_pio2f+0x312>
 8023eec:	3d01      	subs	r5, #1
 8023eee:	e76e      	b.n	8023dce <__kernel_rem_pio2f+0x232>
 8023ef0:	9b06      	ldr	r3, [sp, #24]
 8023ef2:	9a02      	ldr	r2, [sp, #8]
 8023ef4:	4648      	mov	r0, r9
 8023ef6:	1a99      	subs	r1, r3, r2
 8023ef8:	f000 fbee 	bl	80246d8 <scalbnf>
 8023efc:	f04f 4187 	mov.w	r1, #1132462080	; 0x43800000
 8023f00:	4605      	mov	r5, r0
 8023f02:	f7dd f939 	bl	8001178 <__aeabi_fcmpge>
 8023f06:	b300      	cbz	r0, 8023f4a <__kernel_rem_pio2f+0x3ae>
 8023f08:	f04f 516e 	mov.w	r1, #998244352	; 0x3b800000
 8023f0c:	4628      	mov	r0, r5
 8023f0e:	f7dc ff81 	bl	8000e14 <__aeabi_fmul>
 8023f12:	f7dd f95b 	bl	80011cc <__aeabi_f2iz>
 8023f16:	f7dc ff29 	bl	8000d6c <__aeabi_i2f>
 8023f1a:	f04f 4187 	mov.w	r1, #1132462080	; 0x43800000
 8023f1e:	4681      	mov	r9, r0
 8023f20:	f7dc ff78 	bl	8000e14 <__aeabi_fmul>
 8023f24:	4601      	mov	r1, r0
 8023f26:	4628      	mov	r0, r5
 8023f28:	f7dc fe6a 	bl	8000c00 <__aeabi_fsub>
 8023f2c:	f7dd f94e 	bl	80011cc <__aeabi_f2iz>
 8023f30:	ab0a      	add	r3, sp, #40	; 0x28
 8023f32:	f108 0501 	add.w	r5, r8, #1
 8023f36:	f843 0028 	str.w	r0, [r3, r8, lsl #2]
 8023f3a:	4648      	mov	r0, r9
 8023f3c:	f7dd f946 	bl	80011cc <__aeabi_f2iz>
 8023f40:	ab0a      	add	r3, sp, #40	; 0x28
 8023f42:	3708      	adds	r7, #8
 8023f44:	f843 0025 	str.w	r0, [r3, r5, lsl #2]
 8023f48:	e748      	b.n	8023ddc <__kernel_rem_pio2f+0x240>
 8023f4a:	4628      	mov	r0, r5
 8023f4c:	f7dd f93e 	bl	80011cc <__aeabi_f2iz>
 8023f50:	ab0a      	add	r3, sp, #40	; 0x28
 8023f52:	4645      	mov	r5, r8
 8023f54:	f843 0028 	str.w	r0, [r3, r8, lsl #2]
 8023f58:	e740      	b.n	8023ddc <__kernel_rem_pio2f+0x240>
 8023f5a:	ab0a      	add	r3, sp, #40	; 0x28
 8023f5c:	f853 002a 	ldr.w	r0, [r3, sl, lsl #2]
 8023f60:	f7dc ff04 	bl	8000d6c <__aeabi_i2f>
 8023f64:	4649      	mov	r1, r9
 8023f66:	f7dc ff55 	bl	8000e14 <__aeabi_fmul>
 8023f6a:	4641      	mov	r1, r8
 8023f6c:	f847 002a 	str.w	r0, [r7, sl, lsl #2]
 8023f70:	4648      	mov	r0, r9
 8023f72:	f7dc ff4f 	bl	8000e14 <__aeabi_fmul>
 8023f76:	f10a 3aff 	add.w	sl, sl, #4294967295
 8023f7a:	4681      	mov	r9, r0
 8023f7c:	e738      	b.n	8023df0 <__kernel_rem_pio2f+0x254>
 8023f7e:	f853 0b04 	ldr.w	r0, [r3], #4
 8023f82:	f85b 1b04 	ldr.w	r1, [fp], #4
 8023f86:	9203      	str	r2, [sp, #12]
 8023f88:	9302      	str	r3, [sp, #8]
 8023f8a:	f7dc ff43 	bl	8000e14 <__aeabi_fmul>
 8023f8e:	4601      	mov	r1, r0
 8023f90:	4638      	mov	r0, r7
 8023f92:	f7dc fe37 	bl	8000c04 <__addsf3>
 8023f96:	e9dd 3202 	ldrd	r3, r2, [sp, #8]
 8023f9a:	4607      	mov	r7, r0
 8023f9c:	f108 0801 	add.w	r8, r8, #1
 8023fa0:	9901      	ldr	r1, [sp, #4]
 8023fa2:	4588      	cmp	r8, r1
 8023fa4:	dc01      	bgt.n	8023faa <__kernel_rem_pio2f+0x40e>
 8023fa6:	45c2      	cmp	sl, r8
 8023fa8:	dae9      	bge.n	8023f7e <__kernel_rem_pio2f+0x3e2>
 8023faa:	ab5a      	add	r3, sp, #360	; 0x168
 8023fac:	eb03 038a 	add.w	r3, r3, sl, lsl #2
 8023fb0:	f109 39ff 	add.w	r9, r9, #4294967295
 8023fb4:	f843 7ca0 	str.w	r7, [r3, #-160]
 8023fb8:	f10a 0a01 	add.w	sl, sl, #1
 8023fbc:	e720      	b.n	8023e00 <__kernel_rem_pio2f+0x264>
 8023fbe:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8023fc0:	2b02      	cmp	r3, #2
 8023fc2:	dc07      	bgt.n	8023fd4 <__kernel_rem_pio2f+0x438>
 8023fc4:	2b00      	cmp	r3, #0
 8023fc6:	dc4d      	bgt.n	8024064 <__kernel_rem_pio2f+0x4c8>
 8023fc8:	d02e      	beq.n	8024028 <__kernel_rem_pio2f+0x48c>
 8023fca:	f006 0007 	and.w	r0, r6, #7
 8023fce:	b05b      	add	sp, #364	; 0x16c
 8023fd0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8023fd4:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8023fd6:	2b03      	cmp	r3, #3
 8023fd8:	d1f7      	bne.n	8023fca <__kernel_rem_pio2f+0x42e>
 8023fda:	f10d 0bc8 	add.w	fp, sp, #200	; 0xc8
 8023fde:	eb0b 0785 	add.w	r7, fp, r5, lsl #2
 8023fe2:	46b8      	mov	r8, r7
 8023fe4:	46aa      	mov	sl, r5
 8023fe6:	f1ba 0f00 	cmp.w	sl, #0
 8023fea:	dc48      	bgt.n	802407e <__kernel_rem_pio2f+0x4e2>
 8023fec:	46a9      	mov	r9, r5
 8023fee:	f1b9 0f01 	cmp.w	r9, #1
 8023ff2:	dc5f      	bgt.n	80240b4 <__kernel_rem_pio2f+0x518>
 8023ff4:	2000      	movs	r0, #0
 8023ff6:	2d01      	cmp	r5, #1
 8023ff8:	dc75      	bgt.n	80240e6 <__kernel_rem_pio2f+0x54a>
 8023ffa:	9a32      	ldr	r2, [sp, #200]	; 0xc8
 8023ffc:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 8023ffe:	2c00      	cmp	r4, #0
 8024000:	d177      	bne.n	80240f2 <__kernel_rem_pio2f+0x556>
 8024002:	9900      	ldr	r1, [sp, #0]
 8024004:	600a      	str	r2, [r1, #0]
 8024006:	604b      	str	r3, [r1, #4]
 8024008:	460a      	mov	r2, r1
 802400a:	6090      	str	r0, [r2, #8]
 802400c:	e7dd      	b.n	8023fca <__kernel_rem_pio2f+0x42e>
 802400e:	f857 1025 	ldr.w	r1, [r7, r5, lsl #2]
 8024012:	f7dc fdf7 	bl	8000c04 <__addsf3>
 8024016:	3d01      	subs	r5, #1
 8024018:	2d00      	cmp	r5, #0
 802401a:	daf8      	bge.n	802400e <__kernel_rem_pio2f+0x472>
 802401c:	b10c      	cbz	r4, 8024022 <__kernel_rem_pio2f+0x486>
 802401e:	f100 4000 	add.w	r0, r0, #2147483648	; 0x80000000
 8024022:	9b00      	ldr	r3, [sp, #0]
 8024024:	6018      	str	r0, [r3, #0]
 8024026:	e7d0      	b.n	8023fca <__kernel_rem_pio2f+0x42e>
 8024028:	2000      	movs	r0, #0
 802402a:	af32      	add	r7, sp, #200	; 0xc8
 802402c:	e7f4      	b.n	8024018 <__kernel_rem_pio2f+0x47c>
 802402e:	f858 1027 	ldr.w	r1, [r8, r7, lsl #2]
 8024032:	f7dc fde7 	bl	8000c04 <__addsf3>
 8024036:	3f01      	subs	r7, #1
 8024038:	2f00      	cmp	r7, #0
 802403a:	daf8      	bge.n	802402e <__kernel_rem_pio2f+0x492>
 802403c:	b1bc      	cbz	r4, 802406e <__kernel_rem_pio2f+0x4d2>
 802403e:	f100 4300 	add.w	r3, r0, #2147483648	; 0x80000000
 8024042:	9a00      	ldr	r2, [sp, #0]
 8024044:	4601      	mov	r1, r0
 8024046:	6013      	str	r3, [r2, #0]
 8024048:	9832      	ldr	r0, [sp, #200]	; 0xc8
 802404a:	f7dc fdd9 	bl	8000c00 <__aeabi_fsub>
 802404e:	2701      	movs	r7, #1
 8024050:	f10d 08c8 	add.w	r8, sp, #200	; 0xc8
 8024054:	42bd      	cmp	r5, r7
 8024056:	da0c      	bge.n	8024072 <__kernel_rem_pio2f+0x4d6>
 8024058:	b10c      	cbz	r4, 802405e <__kernel_rem_pio2f+0x4c2>
 802405a:	f100 4000 	add.w	r0, r0, #2147483648	; 0x80000000
 802405e:	9b00      	ldr	r3, [sp, #0]
 8024060:	6058      	str	r0, [r3, #4]
 8024062:	e7b2      	b.n	8023fca <__kernel_rem_pio2f+0x42e>
 8024064:	462f      	mov	r7, r5
 8024066:	2000      	movs	r0, #0
 8024068:	f10d 08c8 	add.w	r8, sp, #200	; 0xc8
 802406c:	e7e4      	b.n	8024038 <__kernel_rem_pio2f+0x49c>
 802406e:	4603      	mov	r3, r0
 8024070:	e7e7      	b.n	8024042 <__kernel_rem_pio2f+0x4a6>
 8024072:	f858 1027 	ldr.w	r1, [r8, r7, lsl #2]
 8024076:	f7dc fdc5 	bl	8000c04 <__addsf3>
 802407a:	3701      	adds	r7, #1
 802407c:	e7ea      	b.n	8024054 <__kernel_rem_pio2f+0x4b8>
 802407e:	f8d8 3000 	ldr.w	r3, [r8]
 8024082:	f858 2c04 	ldr.w	r2, [r8, #-4]
 8024086:	9302      	str	r3, [sp, #8]
 8024088:	4619      	mov	r1, r3
 802408a:	4610      	mov	r0, r2
 802408c:	9201      	str	r2, [sp, #4]
 802408e:	f7dc fdb9 	bl	8000c04 <__addsf3>
 8024092:	9a01      	ldr	r2, [sp, #4]
 8024094:	4601      	mov	r1, r0
 8024096:	4681      	mov	r9, r0
 8024098:	4610      	mov	r0, r2
 802409a:	f7dc fdb1 	bl	8000c00 <__aeabi_fsub>
 802409e:	9b02      	ldr	r3, [sp, #8]
 80240a0:	4619      	mov	r1, r3
 80240a2:	f7dc fdaf 	bl	8000c04 <__addsf3>
 80240a6:	f848 0904 	str.w	r0, [r8], #-4
 80240aa:	f10a 3aff 	add.w	sl, sl, #4294967295
 80240ae:	f8c8 9000 	str.w	r9, [r8]
 80240b2:	e798      	b.n	8023fe6 <__kernel_rem_pio2f+0x44a>
 80240b4:	f857 3c04 	ldr.w	r3, [r7, #-4]
 80240b8:	f8d7 a000 	ldr.w	sl, [r7]
 80240bc:	9301      	str	r3, [sp, #4]
 80240be:	4651      	mov	r1, sl
 80240c0:	4618      	mov	r0, r3
 80240c2:	f7dc fd9f 	bl	8000c04 <__addsf3>
 80240c6:	9b01      	ldr	r3, [sp, #4]
 80240c8:	4601      	mov	r1, r0
 80240ca:	4680      	mov	r8, r0
 80240cc:	4618      	mov	r0, r3
 80240ce:	f7dc fd97 	bl	8000c00 <__aeabi_fsub>
 80240d2:	4651      	mov	r1, sl
 80240d4:	f7dc fd96 	bl	8000c04 <__addsf3>
 80240d8:	f847 0904 	str.w	r0, [r7], #-4
 80240dc:	f109 39ff 	add.w	r9, r9, #4294967295
 80240e0:	f8c7 8000 	str.w	r8, [r7]
 80240e4:	e783      	b.n	8023fee <__kernel_rem_pio2f+0x452>
 80240e6:	f85b 1025 	ldr.w	r1, [fp, r5, lsl #2]
 80240ea:	f7dc fd8b 	bl	8000c04 <__addsf3>
 80240ee:	3d01      	subs	r5, #1
 80240f0:	e781      	b.n	8023ff6 <__kernel_rem_pio2f+0x45a>
 80240f2:	9900      	ldr	r1, [sp, #0]
 80240f4:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 80240f8:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 80240fc:	600a      	str	r2, [r1, #0]
 80240fe:	604b      	str	r3, [r1, #4]
 8024100:	460a      	mov	r2, r1
 8024102:	f100 4000 	add.w	r0, r0, #2147483648	; 0x80000000
 8024106:	e780      	b.n	802400a <__kernel_rem_pio2f+0x46e>

08024108 <__kernel_sinf>:
 8024108:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802410c:	f020 4300 	bic.w	r3, r0, #2147483648	; 0x80000000
 8024110:	f1b3 5f48 	cmp.w	r3, #838860800	; 0x32000000
 8024114:	4604      	mov	r4, r0
 8024116:	460f      	mov	r7, r1
 8024118:	4691      	mov	r9, r2
 802411a:	da03      	bge.n	8024124 <__kernel_sinf+0x1c>
 802411c:	f7dd f856 	bl	80011cc <__aeabi_f2iz>
 8024120:	2800      	cmp	r0, #0
 8024122:	d035      	beq.n	8024190 <__kernel_sinf+0x88>
 8024124:	4621      	mov	r1, r4
 8024126:	4620      	mov	r0, r4
 8024128:	f7dc fe74 	bl	8000e14 <__aeabi_fmul>
 802412c:	4605      	mov	r5, r0
 802412e:	4601      	mov	r1, r0
 8024130:	4620      	mov	r0, r4
 8024132:	f7dc fe6f 	bl	8000e14 <__aeabi_fmul>
 8024136:	4929      	ldr	r1, [pc, #164]	; (80241dc <__kernel_sinf+0xd4>)
 8024138:	4606      	mov	r6, r0
 802413a:	4628      	mov	r0, r5
 802413c:	f7dc fe6a 	bl	8000e14 <__aeabi_fmul>
 8024140:	4927      	ldr	r1, [pc, #156]	; (80241e0 <__kernel_sinf+0xd8>)
 8024142:	f7dc fd5d 	bl	8000c00 <__aeabi_fsub>
 8024146:	4629      	mov	r1, r5
 8024148:	f7dc fe64 	bl	8000e14 <__aeabi_fmul>
 802414c:	4925      	ldr	r1, [pc, #148]	; (80241e4 <__kernel_sinf+0xdc>)
 802414e:	f7dc fd59 	bl	8000c04 <__addsf3>
 8024152:	4629      	mov	r1, r5
 8024154:	f7dc fe5e 	bl	8000e14 <__aeabi_fmul>
 8024158:	4923      	ldr	r1, [pc, #140]	; (80241e8 <__kernel_sinf+0xe0>)
 802415a:	f7dc fd51 	bl	8000c00 <__aeabi_fsub>
 802415e:	4629      	mov	r1, r5
 8024160:	f7dc fe58 	bl	8000e14 <__aeabi_fmul>
 8024164:	4921      	ldr	r1, [pc, #132]	; (80241ec <__kernel_sinf+0xe4>)
 8024166:	f7dc fd4d 	bl	8000c04 <__addsf3>
 802416a:	4680      	mov	r8, r0
 802416c:	f1b9 0f00 	cmp.w	r9, #0
 8024170:	d111      	bne.n	8024196 <__kernel_sinf+0x8e>
 8024172:	4601      	mov	r1, r0
 8024174:	4628      	mov	r0, r5
 8024176:	f7dc fe4d 	bl	8000e14 <__aeabi_fmul>
 802417a:	491d      	ldr	r1, [pc, #116]	; (80241f0 <__kernel_sinf+0xe8>)
 802417c:	f7dc fd40 	bl	8000c00 <__aeabi_fsub>
 8024180:	4631      	mov	r1, r6
 8024182:	f7dc fe47 	bl	8000e14 <__aeabi_fmul>
 8024186:	4601      	mov	r1, r0
 8024188:	4620      	mov	r0, r4
 802418a:	f7dc fd3b 	bl	8000c04 <__addsf3>
 802418e:	4604      	mov	r4, r0
 8024190:	4620      	mov	r0, r4
 8024192:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8024196:	f04f 517c 	mov.w	r1, #1056964608	; 0x3f000000
 802419a:	4638      	mov	r0, r7
 802419c:	f7dc fe3a 	bl	8000e14 <__aeabi_fmul>
 80241a0:	4641      	mov	r1, r8
 80241a2:	4681      	mov	r9, r0
 80241a4:	4630      	mov	r0, r6
 80241a6:	f7dc fe35 	bl	8000e14 <__aeabi_fmul>
 80241aa:	4601      	mov	r1, r0
 80241ac:	4648      	mov	r0, r9
 80241ae:	f7dc fd27 	bl	8000c00 <__aeabi_fsub>
 80241b2:	4629      	mov	r1, r5
 80241b4:	f7dc fe2e 	bl	8000e14 <__aeabi_fmul>
 80241b8:	4639      	mov	r1, r7
 80241ba:	f7dc fd21 	bl	8000c00 <__aeabi_fsub>
 80241be:	490c      	ldr	r1, [pc, #48]	; (80241f0 <__kernel_sinf+0xe8>)
 80241c0:	4605      	mov	r5, r0
 80241c2:	4630      	mov	r0, r6
 80241c4:	f7dc fe26 	bl	8000e14 <__aeabi_fmul>
 80241c8:	4601      	mov	r1, r0
 80241ca:	4628      	mov	r0, r5
 80241cc:	f7dc fd1a 	bl	8000c04 <__addsf3>
 80241d0:	4601      	mov	r1, r0
 80241d2:	4620      	mov	r0, r4
 80241d4:	f7dc fd14 	bl	8000c00 <__aeabi_fsub>
 80241d8:	e7d9      	b.n	802418e <__kernel_sinf+0x86>
 80241da:	bf00      	nop
 80241dc:	2f2ec9d3 	.word	0x2f2ec9d3
 80241e0:	32d72f34 	.word	0x32d72f34
 80241e4:	3638ef1b 	.word	0x3638ef1b
 80241e8:	39500d01 	.word	0x39500d01
 80241ec:	3c088889 	.word	0x3c088889
 80241f0:	3e2aaaab 	.word	0x3e2aaaab

080241f4 <fabs>:
 80241f4:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80241f8:	4770      	bx	lr

080241fa <finite>:
 80241fa:	f041 4000 	orr.w	r0, r1, #2147483648	; 0x80000000
 80241fe:	f500 1080 	add.w	r0, r0, #1048576	; 0x100000
 8024202:	0fc0      	lsrs	r0, r0, #31
 8024204:	4770      	bx	lr
	...

08024208 <nan>:
 8024208:	4901      	ldr	r1, [pc, #4]	; (8024210 <nan+0x8>)
 802420a:	2000      	movs	r0, #0
 802420c:	4770      	bx	lr
 802420e:	bf00      	nop
 8024210:	7ff80000 	.word	0x7ff80000

08024214 <rint>:
 8024214:	f3c1 5c0a 	ubfx	ip, r1, #20, #11
 8024218:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 802421a:	f2ac 37ff 	subw	r7, ip, #1023	; 0x3ff
 802421e:	2f13      	cmp	r7, #19
 8024220:	4602      	mov	r2, r0
 8024222:	460b      	mov	r3, r1
 8024224:	460c      	mov	r4, r1
 8024226:	4605      	mov	r5, r0
 8024228:	ea4f 76d1 	mov.w	r6, r1, lsr #31
 802422c:	dc59      	bgt.n	80242e2 <rint+0xce>
 802422e:	2f00      	cmp	r7, #0
 8024230:	da2a      	bge.n	8024288 <rint+0x74>
 8024232:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8024236:	4301      	orrs	r1, r0
 8024238:	d022      	beq.n	8024280 <rint+0x6c>
 802423a:	f3c3 0113 	ubfx	r1, r3, #0, #20
 802423e:	4301      	orrs	r1, r0
 8024240:	424d      	negs	r5, r1
 8024242:	430d      	orrs	r5, r1
 8024244:	4936      	ldr	r1, [pc, #216]	; (8024320 <rint+0x10c>)
 8024246:	0c5c      	lsrs	r4, r3, #17
 8024248:	0b2d      	lsrs	r5, r5, #12
 802424a:	f405 2500 	and.w	r5, r5, #524288	; 0x80000
 802424e:	0464      	lsls	r4, r4, #17
 8024250:	eb01 01c6 	add.w	r1, r1, r6, lsl #3
 8024254:	ea45 0304 	orr.w	r3, r5, r4
 8024258:	e9d1 4500 	ldrd	r4, r5, [r1]
 802425c:	4620      	mov	r0, r4
 802425e:	4629      	mov	r1, r5
 8024260:	f7db ffec 	bl	800023c <__adddf3>
 8024264:	e9cd 0100 	strd	r0, r1, [sp]
 8024268:	462b      	mov	r3, r5
 802426a:	e9dd 0100 	ldrd	r0, r1, [sp]
 802426e:	4622      	mov	r2, r4
 8024270:	f7db ffe2 	bl	8000238 <__aeabi_dsub>
 8024274:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
 8024278:	ea43 71c6 	orr.w	r1, r3, r6, lsl #31
 802427c:	4602      	mov	r2, r0
 802427e:	460b      	mov	r3, r1
 8024280:	4610      	mov	r0, r2
 8024282:	4619      	mov	r1, r3
 8024284:	b003      	add	sp, #12
 8024286:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8024288:	4926      	ldr	r1, [pc, #152]	; (8024324 <rint+0x110>)
 802428a:	4139      	asrs	r1, r7
 802428c:	ea03 0001 	and.w	r0, r3, r1
 8024290:	4310      	orrs	r0, r2
 8024292:	d0f5      	beq.n	8024280 <rint+0x6c>
 8024294:	084b      	lsrs	r3, r1, #1
 8024296:	ea04 0151 	and.w	r1, r4, r1, lsr #1
 802429a:	ea52 0501 	orrs.w	r5, r2, r1
 802429e:	d00c      	beq.n	80242ba <rint+0xa6>
 80242a0:	ea24 0303 	bic.w	r3, r4, r3
 80242a4:	f44f 2480 	mov.w	r4, #262144	; 0x40000
 80242a8:	2f13      	cmp	r7, #19
 80242aa:	fa44 f707 	asr.w	r7, r4, r7
 80242ae:	bf0c      	ite	eq
 80242b0:	f04f 4500 	moveq.w	r5, #2147483648	; 0x80000000
 80242b4:	2500      	movne	r5, #0
 80242b6:	ea43 0407 	orr.w	r4, r3, r7
 80242ba:	4919      	ldr	r1, [pc, #100]	; (8024320 <rint+0x10c>)
 80242bc:	eb01 06c6 	add.w	r6, r1, r6, lsl #3
 80242c0:	4623      	mov	r3, r4
 80242c2:	462a      	mov	r2, r5
 80242c4:	e9d6 4500 	ldrd	r4, r5, [r6]
 80242c8:	4620      	mov	r0, r4
 80242ca:	4629      	mov	r1, r5
 80242cc:	f7db ffb6 	bl	800023c <__adddf3>
 80242d0:	e9cd 0100 	strd	r0, r1, [sp]
 80242d4:	e9dd 0100 	ldrd	r0, r1, [sp]
 80242d8:	4622      	mov	r2, r4
 80242da:	462b      	mov	r3, r5
 80242dc:	f7db ffac 	bl	8000238 <__aeabi_dsub>
 80242e0:	e7cc      	b.n	802427c <rint+0x68>
 80242e2:	2f33      	cmp	r7, #51	; 0x33
 80242e4:	dd05      	ble.n	80242f2 <rint+0xde>
 80242e6:	f5b7 6f80 	cmp.w	r7, #1024	; 0x400
 80242ea:	d1c9      	bne.n	8024280 <rint+0x6c>
 80242ec:	f7db ffa6 	bl	800023c <__adddf3>
 80242f0:	e7c4      	b.n	802427c <rint+0x68>
 80242f2:	f2ac 4c13 	subw	ip, ip, #1043	; 0x413
 80242f6:	f04f 31ff 	mov.w	r1, #4294967295
 80242fa:	fa21 f10c 	lsr.w	r1, r1, ip
 80242fe:	4208      	tst	r0, r1
 8024300:	d0be      	beq.n	8024280 <rint+0x6c>
 8024302:	ea10 0251 	ands.w	r2, r0, r1, lsr #1
 8024306:	ea4f 0351 	mov.w	r3, r1, lsr #1
 802430a:	bf1f      	itttt	ne
 802430c:	f04f 4580 	movne.w	r5, #1073741824	; 0x40000000
 8024310:	ea20 0303 	bicne.w	r3, r0, r3
 8024314:	fa45 fc0c 	asrne.w	ip, r5, ip
 8024318:	ea43 050c 	orrne.w	r5, r3, ip
 802431c:	e7cd      	b.n	80242ba <rint+0xa6>
 802431e:	bf00      	nop
 8024320:	08026f70 	.word	0x08026f70
 8024324:	000fffff 	.word	0x000fffff

08024328 <scalbn>:
 8024328:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802432a:	f3c1 560a 	ubfx	r6, r1, #20, #11
 802432e:	4604      	mov	r4, r0
 8024330:	460d      	mov	r5, r1
 8024332:	4617      	mov	r7, r2
 8024334:	460b      	mov	r3, r1
 8024336:	b996      	cbnz	r6, 802435e <scalbn+0x36>
 8024338:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
 802433c:	4303      	orrs	r3, r0
 802433e:	d039      	beq.n	80243b4 <scalbn+0x8c>
 8024340:	4b35      	ldr	r3, [pc, #212]	; (8024418 <scalbn+0xf0>)
 8024342:	2200      	movs	r2, #0
 8024344:	f7dc f930 	bl	80005a8 <__aeabi_dmul>
 8024348:	4b34      	ldr	r3, [pc, #208]	; (802441c <scalbn+0xf4>)
 802434a:	429f      	cmp	r7, r3
 802434c:	4604      	mov	r4, r0
 802434e:	460d      	mov	r5, r1
 8024350:	da0f      	bge.n	8024372 <scalbn+0x4a>
 8024352:	a32d      	add	r3, pc, #180	; (adr r3, 8024408 <scalbn+0xe0>)
 8024354:	e9d3 2300 	ldrd	r2, r3, [r3]
 8024358:	f7dc f926 	bl	80005a8 <__aeabi_dmul>
 802435c:	e006      	b.n	802436c <scalbn+0x44>
 802435e:	f240 72ff 	movw	r2, #2047	; 0x7ff
 8024362:	4296      	cmp	r6, r2
 8024364:	d10a      	bne.n	802437c <scalbn+0x54>
 8024366:	4602      	mov	r2, r0
 8024368:	f7db ff68 	bl	800023c <__adddf3>
 802436c:	4604      	mov	r4, r0
 802436e:	460d      	mov	r5, r1
 8024370:	e020      	b.n	80243b4 <scalbn+0x8c>
 8024372:	460b      	mov	r3, r1
 8024374:	f3c1 510a 	ubfx	r1, r1, #20, #11
 8024378:	f1a1 0636 	sub.w	r6, r1, #54	; 0x36
 802437c:	19b9      	adds	r1, r7, r6
 802437e:	f240 72fe 	movw	r2, #2046	; 0x7fe
 8024382:	4291      	cmp	r1, r2
 8024384:	dd0e      	ble.n	80243a4 <scalbn+0x7c>
 8024386:	f005 4400 	and.w	r4, r5, #2147483648	; 0x80000000
 802438a:	f044 41fc 	orr.w	r1, r4, #2113929216	; 0x7e000000
 802438e:	f441 115f 	orr.w	r1, r1, #3653632	; 0x37c000
 8024392:	f441 5110 	orr.w	r1, r1, #9216	; 0x2400
 8024396:	a31e      	add	r3, pc, #120	; (adr r3, 8024410 <scalbn+0xe8>)
 8024398:	e9d3 2300 	ldrd	r2, r3, [r3]
 802439c:	4820      	ldr	r0, [pc, #128]	; (8024420 <scalbn+0xf8>)
 802439e:	f041 013c 	orr.w	r1, r1, #60	; 0x3c
 80243a2:	e7d9      	b.n	8024358 <scalbn+0x30>
 80243a4:	2900      	cmp	r1, #0
 80243a6:	dd08      	ble.n	80243ba <scalbn+0x92>
 80243a8:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 80243ac:	f423 03e0 	bic.w	r3, r3, #7340032	; 0x700000
 80243b0:	ea43 5501 	orr.w	r5, r3, r1, lsl #20
 80243b4:	4620      	mov	r0, r4
 80243b6:	4629      	mov	r1, r5
 80243b8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80243ba:	f111 0f35 	cmn.w	r1, #53	; 0x35
 80243be:	da16      	bge.n	80243ee <scalbn+0xc6>
 80243c0:	f24c 3350 	movw	r3, #50000	; 0xc350
 80243c4:	429f      	cmp	r7, r3
 80243c6:	ea4f 73d5 	mov.w	r3, r5, lsr #31
 80243ca:	dd08      	ble.n	80243de <scalbn+0xb6>
 80243cc:	4c15      	ldr	r4, [pc, #84]	; (8024424 <scalbn+0xfc>)
 80243ce:	4814      	ldr	r0, [pc, #80]	; (8024420 <scalbn+0xf8>)
 80243d0:	f363 74df 	bfi	r4, r3, #31, #1
 80243d4:	a30e      	add	r3, pc, #56	; (adr r3, 8024410 <scalbn+0xe8>)
 80243d6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80243da:	4621      	mov	r1, r4
 80243dc:	e7bc      	b.n	8024358 <scalbn+0x30>
 80243de:	4c12      	ldr	r4, [pc, #72]	; (8024428 <scalbn+0x100>)
 80243e0:	4812      	ldr	r0, [pc, #72]	; (802442c <scalbn+0x104>)
 80243e2:	f363 74df 	bfi	r4, r3, #31, #1
 80243e6:	a308      	add	r3, pc, #32	; (adr r3, 8024408 <scalbn+0xe0>)
 80243e8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80243ec:	e7f5      	b.n	80243da <scalbn+0xb2>
 80243ee:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 80243f2:	3136      	adds	r1, #54	; 0x36
 80243f4:	f423 03e0 	bic.w	r3, r3, #7340032	; 0x700000
 80243f8:	ea43 5501 	orr.w	r5, r3, r1, lsl #20
 80243fc:	4620      	mov	r0, r4
 80243fe:	4b0c      	ldr	r3, [pc, #48]	; (8024430 <scalbn+0x108>)
 8024400:	4629      	mov	r1, r5
 8024402:	2200      	movs	r2, #0
 8024404:	e7a8      	b.n	8024358 <scalbn+0x30>
 8024406:	bf00      	nop
 8024408:	c2f8f359 	.word	0xc2f8f359
 802440c:	01a56e1f 	.word	0x01a56e1f
 8024410:	8800759c 	.word	0x8800759c
 8024414:	7e37e43c 	.word	0x7e37e43c
 8024418:	43500000 	.word	0x43500000
 802441c:	ffff3cb0 	.word	0xffff3cb0
 8024420:	8800759c 	.word	0x8800759c
 8024424:	7e37e43c 	.word	0x7e37e43c
 8024428:	01a56e1f 	.word	0x01a56e1f
 802442c:	c2f8f359 	.word	0xc2f8f359
 8024430:	3c900000 	.word	0x3c900000

08024434 <atanf>:
 8024434:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8024438:	f020 4500 	bic.w	r5, r0, #2147483648	; 0x80000000
 802443c:	f1b5 4fa1 	cmp.w	r5, #1350565888	; 0x50800000
 8024440:	4604      	mov	r4, r0
 8024442:	4680      	mov	r8, r0
 8024444:	db0e      	blt.n	8024464 <atanf+0x30>
 8024446:	f1b5 4fff 	cmp.w	r5, #2139095040	; 0x7f800000
 802444a:	dd04      	ble.n	8024456 <atanf+0x22>
 802444c:	4601      	mov	r1, r0
 802444e:	f7dc fbd9 	bl	8000c04 <__addsf3>
 8024452:	4604      	mov	r4, r0
 8024454:	e003      	b.n	802445e <atanf+0x2a>
 8024456:	2800      	cmp	r0, #0
 8024458:	f300 80ce 	bgt.w	80245f8 <atanf+0x1c4>
 802445c:	4c67      	ldr	r4, [pc, #412]	; (80245fc <atanf+0x1c8>)
 802445e:	4620      	mov	r0, r4
 8024460:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8024464:	4b66      	ldr	r3, [pc, #408]	; (8024600 <atanf+0x1cc>)
 8024466:	429d      	cmp	r5, r3
 8024468:	dc0e      	bgt.n	8024488 <atanf+0x54>
 802446a:	f1b5 5f44 	cmp.w	r5, #822083584	; 0x31000000
 802446e:	da08      	bge.n	8024482 <atanf+0x4e>
 8024470:	4964      	ldr	r1, [pc, #400]	; (8024604 <atanf+0x1d0>)
 8024472:	f7dc fbc7 	bl	8000c04 <__addsf3>
 8024476:	f04f 517e 	mov.w	r1, #1065353216	; 0x3f800000
 802447a:	f7dc fe87 	bl	800118c <__aeabi_fcmpgt>
 802447e:	2800      	cmp	r0, #0
 8024480:	d1ed      	bne.n	802445e <atanf+0x2a>
 8024482:	f04f 36ff 	mov.w	r6, #4294967295
 8024486:	e01c      	b.n	80244c2 <atanf+0x8e>
 8024488:	f000 f8e0 	bl	802464c <fabsf>
 802448c:	4b5e      	ldr	r3, [pc, #376]	; (8024608 <atanf+0x1d4>)
 802448e:	429d      	cmp	r5, r3
 8024490:	4604      	mov	r4, r0
 8024492:	dc7c      	bgt.n	802458e <atanf+0x15a>
 8024494:	f5a3 03d0 	sub.w	r3, r3, #6815744	; 0x680000
 8024498:	429d      	cmp	r5, r3
 802449a:	dc67      	bgt.n	802456c <atanf+0x138>
 802449c:	4601      	mov	r1, r0
 802449e:	f7dc fbb1 	bl	8000c04 <__addsf3>
 80244a2:	f04f 517e 	mov.w	r1, #1065353216	; 0x3f800000
 80244a6:	f7dc fbab 	bl	8000c00 <__aeabi_fsub>
 80244aa:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
 80244ae:	4605      	mov	r5, r0
 80244b0:	4620      	mov	r0, r4
 80244b2:	f7dc fba7 	bl	8000c04 <__addsf3>
 80244b6:	4601      	mov	r1, r0
 80244b8:	4628      	mov	r0, r5
 80244ba:	f7dc fd5f 	bl	8000f7c <__aeabi_fdiv>
 80244be:	2600      	movs	r6, #0
 80244c0:	4604      	mov	r4, r0
 80244c2:	4621      	mov	r1, r4
 80244c4:	4620      	mov	r0, r4
 80244c6:	f7dc fca5 	bl	8000e14 <__aeabi_fmul>
 80244ca:	4601      	mov	r1, r0
 80244cc:	4607      	mov	r7, r0
 80244ce:	f7dc fca1 	bl	8000e14 <__aeabi_fmul>
 80244d2:	494e      	ldr	r1, [pc, #312]	; (802460c <atanf+0x1d8>)
 80244d4:	4605      	mov	r5, r0
 80244d6:	f7dc fc9d 	bl	8000e14 <__aeabi_fmul>
 80244da:	494d      	ldr	r1, [pc, #308]	; (8024610 <atanf+0x1dc>)
 80244dc:	f7dc fb92 	bl	8000c04 <__addsf3>
 80244e0:	4629      	mov	r1, r5
 80244e2:	f7dc fc97 	bl	8000e14 <__aeabi_fmul>
 80244e6:	494b      	ldr	r1, [pc, #300]	; (8024614 <atanf+0x1e0>)
 80244e8:	f7dc fb8c 	bl	8000c04 <__addsf3>
 80244ec:	4629      	mov	r1, r5
 80244ee:	f7dc fc91 	bl	8000e14 <__aeabi_fmul>
 80244f2:	4949      	ldr	r1, [pc, #292]	; (8024618 <atanf+0x1e4>)
 80244f4:	f7dc fb86 	bl	8000c04 <__addsf3>
 80244f8:	4629      	mov	r1, r5
 80244fa:	f7dc fc8b 	bl	8000e14 <__aeabi_fmul>
 80244fe:	4947      	ldr	r1, [pc, #284]	; (802461c <atanf+0x1e8>)
 8024500:	f7dc fb80 	bl	8000c04 <__addsf3>
 8024504:	4629      	mov	r1, r5
 8024506:	f7dc fc85 	bl	8000e14 <__aeabi_fmul>
 802450a:	4945      	ldr	r1, [pc, #276]	; (8024620 <atanf+0x1ec>)
 802450c:	f7dc fb7a 	bl	8000c04 <__addsf3>
 8024510:	4639      	mov	r1, r7
 8024512:	f7dc fc7f 	bl	8000e14 <__aeabi_fmul>
 8024516:	4943      	ldr	r1, [pc, #268]	; (8024624 <atanf+0x1f0>)
 8024518:	4607      	mov	r7, r0
 802451a:	4628      	mov	r0, r5
 802451c:	f7dc fc7a 	bl	8000e14 <__aeabi_fmul>
 8024520:	4941      	ldr	r1, [pc, #260]	; (8024628 <atanf+0x1f4>)
 8024522:	f7dc fb6d 	bl	8000c00 <__aeabi_fsub>
 8024526:	4629      	mov	r1, r5
 8024528:	f7dc fc74 	bl	8000e14 <__aeabi_fmul>
 802452c:	493f      	ldr	r1, [pc, #252]	; (802462c <atanf+0x1f8>)
 802452e:	f7dc fb67 	bl	8000c00 <__aeabi_fsub>
 8024532:	4629      	mov	r1, r5
 8024534:	f7dc fc6e 	bl	8000e14 <__aeabi_fmul>
 8024538:	493d      	ldr	r1, [pc, #244]	; (8024630 <atanf+0x1fc>)
 802453a:	f7dc fb61 	bl	8000c00 <__aeabi_fsub>
 802453e:	4629      	mov	r1, r5
 8024540:	f7dc fc68 	bl	8000e14 <__aeabi_fmul>
 8024544:	493b      	ldr	r1, [pc, #236]	; (8024634 <atanf+0x200>)
 8024546:	f7dc fb5b 	bl	8000c00 <__aeabi_fsub>
 802454a:	4629      	mov	r1, r5
 802454c:	f7dc fc62 	bl	8000e14 <__aeabi_fmul>
 8024550:	4601      	mov	r1, r0
 8024552:	4638      	mov	r0, r7
 8024554:	f7dc fb56 	bl	8000c04 <__addsf3>
 8024558:	4621      	mov	r1, r4
 802455a:	f7dc fc5b 	bl	8000e14 <__aeabi_fmul>
 802455e:	1c73      	adds	r3, r6, #1
 8024560:	4601      	mov	r1, r0
 8024562:	d133      	bne.n	80245cc <atanf+0x198>
 8024564:	4620      	mov	r0, r4
 8024566:	f7dc fb4b 	bl	8000c00 <__aeabi_fsub>
 802456a:	e772      	b.n	8024452 <atanf+0x1e>
 802456c:	f04f 517e 	mov.w	r1, #1065353216	; 0x3f800000
 8024570:	f7dc fb46 	bl	8000c00 <__aeabi_fsub>
 8024574:	f04f 517e 	mov.w	r1, #1065353216	; 0x3f800000
 8024578:	4605      	mov	r5, r0
 802457a:	4620      	mov	r0, r4
 802457c:	f7dc fb42 	bl	8000c04 <__addsf3>
 8024580:	4601      	mov	r1, r0
 8024582:	4628      	mov	r0, r5
 8024584:	f7dc fcfa 	bl	8000f7c <__aeabi_fdiv>
 8024588:	2601      	movs	r6, #1
 802458a:	4604      	mov	r4, r0
 802458c:	e799      	b.n	80244c2 <atanf+0x8e>
 802458e:	4b2a      	ldr	r3, [pc, #168]	; (8024638 <atanf+0x204>)
 8024590:	429d      	cmp	r5, r3
 8024592:	dc14      	bgt.n	80245be <atanf+0x18a>
 8024594:	f04f 517f 	mov.w	r1, #1069547520	; 0x3fc00000
 8024598:	f7dc fb32 	bl	8000c00 <__aeabi_fsub>
 802459c:	f04f 517f 	mov.w	r1, #1069547520	; 0x3fc00000
 80245a0:	4605      	mov	r5, r0
 80245a2:	4620      	mov	r0, r4
 80245a4:	f7dc fc36 	bl	8000e14 <__aeabi_fmul>
 80245a8:	f04f 517e 	mov.w	r1, #1065353216	; 0x3f800000
 80245ac:	f7dc fb2a 	bl	8000c04 <__addsf3>
 80245b0:	4601      	mov	r1, r0
 80245b2:	4628      	mov	r0, r5
 80245b4:	f7dc fce2 	bl	8000f7c <__aeabi_fdiv>
 80245b8:	2602      	movs	r6, #2
 80245ba:	4604      	mov	r4, r0
 80245bc:	e781      	b.n	80244c2 <atanf+0x8e>
 80245be:	4601      	mov	r1, r0
 80245c0:	481e      	ldr	r0, [pc, #120]	; (802463c <atanf+0x208>)
 80245c2:	f7dc fcdb 	bl	8000f7c <__aeabi_fdiv>
 80245c6:	2603      	movs	r6, #3
 80245c8:	4604      	mov	r4, r0
 80245ca:	e77a      	b.n	80244c2 <atanf+0x8e>
 80245cc:	4b1c      	ldr	r3, [pc, #112]	; (8024640 <atanf+0x20c>)
 80245ce:	f853 1026 	ldr.w	r1, [r3, r6, lsl #2]
 80245d2:	f7dc fb15 	bl	8000c00 <__aeabi_fsub>
 80245d6:	4621      	mov	r1, r4
 80245d8:	f7dc fb12 	bl	8000c00 <__aeabi_fsub>
 80245dc:	4b19      	ldr	r3, [pc, #100]	; (8024644 <atanf+0x210>)
 80245de:	4601      	mov	r1, r0
 80245e0:	f853 0026 	ldr.w	r0, [r3, r6, lsl #2]
 80245e4:	f7dc fb0c 	bl	8000c00 <__aeabi_fsub>
 80245e8:	f1b8 0f00 	cmp.w	r8, #0
 80245ec:	4604      	mov	r4, r0
 80245ee:	f6bf af36 	bge.w	802445e <atanf+0x2a>
 80245f2:	f100 4000 	add.w	r0, r0, #2147483648	; 0x80000000
 80245f6:	e72c      	b.n	8024452 <atanf+0x1e>
 80245f8:	4c13      	ldr	r4, [pc, #76]	; (8024648 <atanf+0x214>)
 80245fa:	e730      	b.n	802445e <atanf+0x2a>
 80245fc:	bfc90fdb 	.word	0xbfc90fdb
 8024600:	3edfffff 	.word	0x3edfffff
 8024604:	7149f2ca 	.word	0x7149f2ca
 8024608:	3f97ffff 	.word	0x3f97ffff
 802460c:	3c8569d7 	.word	0x3c8569d7
 8024610:	3d4bda59 	.word	0x3d4bda59
 8024614:	3d886b35 	.word	0x3d886b35
 8024618:	3dba2e6e 	.word	0x3dba2e6e
 802461c:	3e124925 	.word	0x3e124925
 8024620:	3eaaaaab 	.word	0x3eaaaaab
 8024624:	bd15a221 	.word	0xbd15a221
 8024628:	3d6ef16b 	.word	0x3d6ef16b
 802462c:	3d9d8795 	.word	0x3d9d8795
 8024630:	3de38e38 	.word	0x3de38e38
 8024634:	3e4ccccd 	.word	0x3e4ccccd
 8024638:	401bffff 	.word	0x401bffff
 802463c:	bf800000 	.word	0xbf800000
 8024640:	08026f90 	.word	0x08026f90
 8024644:	08026f80 	.word	0x08026f80
 8024648:	3fc90fdb 	.word	0x3fc90fdb

0802464c <fabsf>:
 802464c:	f020 4000 	bic.w	r0, r0, #2147483648	; 0x80000000
 8024650:	4770      	bx	lr
	...

08024654 <floorf>:
 8024654:	b570      	push	{r4, r5, r6, lr}
 8024656:	f3c0 55c7 	ubfx	r5, r0, #23, #8
 802465a:	3d7f      	subs	r5, #127	; 0x7f
 802465c:	2d16      	cmp	r5, #22
 802465e:	4601      	mov	r1, r0
 8024660:	4604      	mov	r4, r0
 8024662:	f020 4600 	bic.w	r6, r0, #2147483648	; 0x80000000
 8024666:	dc26      	bgt.n	80246b6 <floorf+0x62>
 8024668:	2d00      	cmp	r5, #0
 802466a:	da0e      	bge.n	802468a <floorf+0x36>
 802466c:	4917      	ldr	r1, [pc, #92]	; (80246cc <floorf+0x78>)
 802466e:	f7dc fac9 	bl	8000c04 <__addsf3>
 8024672:	2100      	movs	r1, #0
 8024674:	f7dc fd8a 	bl	800118c <__aeabi_fcmpgt>
 8024678:	b128      	cbz	r0, 8024686 <floorf+0x32>
 802467a:	2c00      	cmp	r4, #0
 802467c:	da23      	bge.n	80246c6 <floorf+0x72>
 802467e:	4b14      	ldr	r3, [pc, #80]	; (80246d0 <floorf+0x7c>)
 8024680:	2e00      	cmp	r6, #0
 8024682:	bf18      	it	ne
 8024684:	461c      	movne	r4, r3
 8024686:	4621      	mov	r1, r4
 8024688:	e01b      	b.n	80246c2 <floorf+0x6e>
 802468a:	4e12      	ldr	r6, [pc, #72]	; (80246d4 <floorf+0x80>)
 802468c:	412e      	asrs	r6, r5
 802468e:	4230      	tst	r0, r6
 8024690:	d017      	beq.n	80246c2 <floorf+0x6e>
 8024692:	490e      	ldr	r1, [pc, #56]	; (80246cc <floorf+0x78>)
 8024694:	f7dc fab6 	bl	8000c04 <__addsf3>
 8024698:	2100      	movs	r1, #0
 802469a:	f7dc fd77 	bl	800118c <__aeabi_fcmpgt>
 802469e:	2800      	cmp	r0, #0
 80246a0:	d0f1      	beq.n	8024686 <floorf+0x32>
 80246a2:	2c00      	cmp	r4, #0
 80246a4:	bfbe      	ittt	lt
 80246a6:	f44f 0300 	movlt.w	r3, #8388608	; 0x800000
 80246aa:	fa43 f505 	asrlt.w	r5, r3, r5
 80246ae:	1964      	addlt	r4, r4, r5
 80246b0:	ea24 0406 	bic.w	r4, r4, r6
 80246b4:	e7e7      	b.n	8024686 <floorf+0x32>
 80246b6:	f1b6 4fff 	cmp.w	r6, #2139095040	; 0x7f800000
 80246ba:	d302      	bcc.n	80246c2 <floorf+0x6e>
 80246bc:	f7dc faa2 	bl	8000c04 <__addsf3>
 80246c0:	4601      	mov	r1, r0
 80246c2:	4608      	mov	r0, r1
 80246c4:	bd70      	pop	{r4, r5, r6, pc}
 80246c6:	2400      	movs	r4, #0
 80246c8:	e7dd      	b.n	8024686 <floorf+0x32>
 80246ca:	bf00      	nop
 80246cc:	7149f2ca 	.word	0x7149f2ca
 80246d0:	bf800000 	.word	0xbf800000
 80246d4:	007fffff 	.word	0x007fffff

080246d8 <scalbnf>:
 80246d8:	f030 4200 	bics.w	r2, r0, #2147483648	; 0x80000000
 80246dc:	b538      	push	{r3, r4, r5, lr}
 80246de:	4603      	mov	r3, r0
 80246e0:	460d      	mov	r5, r1
 80246e2:	4604      	mov	r4, r0
 80246e4:	d02a      	beq.n	802473c <scalbnf+0x64>
 80246e6:	f1b2 4fff 	cmp.w	r2, #2139095040	; 0x7f800000
 80246ea:	d304      	bcc.n	80246f6 <scalbnf+0x1e>
 80246ec:	4601      	mov	r1, r0
 80246ee:	f7dc fa89 	bl	8000c04 <__addsf3>
 80246f2:	4603      	mov	r3, r0
 80246f4:	e022      	b.n	802473c <scalbnf+0x64>
 80246f6:	f010 4fff 	tst.w	r0, #2139095040	; 0x7f800000
 80246fa:	d117      	bne.n	802472c <scalbnf+0x54>
 80246fc:	f04f 4198 	mov.w	r1, #1275068416	; 0x4c000000
 8024700:	f7dc fb88 	bl	8000e14 <__aeabi_fmul>
 8024704:	4a17      	ldr	r2, [pc, #92]	; (8024764 <scalbnf+0x8c>)
 8024706:	4295      	cmp	r5, r2
 8024708:	4603      	mov	r3, r0
 802470a:	db0b      	blt.n	8024724 <scalbnf+0x4c>
 802470c:	f3c0 52c7 	ubfx	r2, r0, #23, #8
 8024710:	4604      	mov	r4, r0
 8024712:	3a19      	subs	r2, #25
 8024714:	442a      	add	r2, r5
 8024716:	2afe      	cmp	r2, #254	; 0xfe
 8024718:	dd0a      	ble.n	8024730 <scalbnf+0x58>
 802471a:	4913      	ldr	r1, [pc, #76]	; (8024768 <scalbnf+0x90>)
 802471c:	4618      	mov	r0, r3
 802471e:	f361 001e 	bfi	r0, r1, #0, #31
 8024722:	e000      	b.n	8024726 <scalbnf+0x4e>
 8024724:	4911      	ldr	r1, [pc, #68]	; (802476c <scalbnf+0x94>)
 8024726:	f7dc fb75 	bl	8000e14 <__aeabi_fmul>
 802472a:	e7e2      	b.n	80246f2 <scalbnf+0x1a>
 802472c:	0dd2      	lsrs	r2, r2, #23
 802472e:	e7f1      	b.n	8024714 <scalbnf+0x3c>
 8024730:	2a00      	cmp	r2, #0
 8024732:	dd05      	ble.n	8024740 <scalbnf+0x68>
 8024734:	f024 40ff 	bic.w	r0, r4, #2139095040	; 0x7f800000
 8024738:	ea40 53c2 	orr.w	r3, r0, r2, lsl #23
 802473c:	4618      	mov	r0, r3
 802473e:	bd38      	pop	{r3, r4, r5, pc}
 8024740:	f112 0f16 	cmn.w	r2, #22
 8024744:	da05      	bge.n	8024752 <scalbnf+0x7a>
 8024746:	f24c 3250 	movw	r2, #50000	; 0xc350
 802474a:	4295      	cmp	r5, r2
 802474c:	dce5      	bgt.n	802471a <scalbnf+0x42>
 802474e:	4907      	ldr	r1, [pc, #28]	; (802476c <scalbnf+0x94>)
 8024750:	e7e4      	b.n	802471c <scalbnf+0x44>
 8024752:	3219      	adds	r2, #25
 8024754:	f024 44ff 	bic.w	r4, r4, #2139095040	; 0x7f800000
 8024758:	f04f 514c 	mov.w	r1, #855638016	; 0x33000000
 802475c:	ea44 50c2 	orr.w	r0, r4, r2, lsl #23
 8024760:	e7e1      	b.n	8024726 <scalbnf+0x4e>
 8024762:	bf00      	nop
 8024764:	ffff3cb0 	.word	0xffff3cb0
 8024768:	7149f2ca 	.word	0x7149f2ca
 802476c:	0da24260 	.word	0x0da24260

08024770 <__errno>:
 8024770:	4b01      	ldr	r3, [pc, #4]	; (8024778 <__errno+0x8>)
 8024772:	6818      	ldr	r0, [r3, #0]
 8024774:	4770      	bx	lr
 8024776:	bf00      	nop
 8024778:	200001d8 	.word	0x200001d8

0802477c <__libc_init_array>:
 802477c:	b570      	push	{r4, r5, r6, lr}
 802477e:	4d0d      	ldr	r5, [pc, #52]	; (80247b4 <__libc_init_array+0x38>)
 8024780:	4c0d      	ldr	r4, [pc, #52]	; (80247b8 <__libc_init_array+0x3c>)
 8024782:	1b64      	subs	r4, r4, r5
 8024784:	10a4      	asrs	r4, r4, #2
 8024786:	2600      	movs	r6, #0
 8024788:	42a6      	cmp	r6, r4
 802478a:	d109      	bne.n	80247a0 <__libc_init_array+0x24>
 802478c:	4d0b      	ldr	r5, [pc, #44]	; (80247bc <__libc_init_array+0x40>)
 802478e:	4c0c      	ldr	r4, [pc, #48]	; (80247c0 <__libc_init_array+0x44>)
 8024790:	f001 f842 	bl	8025818 <_init>
 8024794:	1b64      	subs	r4, r4, r5
 8024796:	10a4      	asrs	r4, r4, #2
 8024798:	2600      	movs	r6, #0
 802479a:	42a6      	cmp	r6, r4
 802479c:	d105      	bne.n	80247aa <__libc_init_array+0x2e>
 802479e:	bd70      	pop	{r4, r5, r6, pc}
 80247a0:	f855 3b04 	ldr.w	r3, [r5], #4
 80247a4:	4798      	blx	r3
 80247a6:	3601      	adds	r6, #1
 80247a8:	e7ee      	b.n	8024788 <__libc_init_array+0xc>
 80247aa:	f855 3b04 	ldr.w	r3, [r5], #4
 80247ae:	4798      	blx	r3
 80247b0:	3601      	adds	r6, #1
 80247b2:	e7f2      	b.n	802479a <__libc_init_array+0x1e>
 80247b4:	08027184 	.word	0x08027184
 80247b8:	08027184 	.word	0x08027184
 80247bc:	08027184 	.word	0x08027184
 80247c0:	0802718c 	.word	0x0802718c

080247c4 <memset>:
 80247c4:	4402      	add	r2, r0
 80247c6:	4603      	mov	r3, r0
 80247c8:	4293      	cmp	r3, r2
 80247ca:	d100      	bne.n	80247ce <memset+0xa>
 80247cc:	4770      	bx	lr
 80247ce:	f803 1b01 	strb.w	r1, [r3], #1
 80247d2:	e7f9      	b.n	80247c8 <memset+0x4>

080247d4 <iprintf>:
 80247d4:	b40f      	push	{r0, r1, r2, r3}
 80247d6:	4b0a      	ldr	r3, [pc, #40]	; (8024800 <iprintf+0x2c>)
 80247d8:	b513      	push	{r0, r1, r4, lr}
 80247da:	681c      	ldr	r4, [r3, #0]
 80247dc:	b124      	cbz	r4, 80247e8 <iprintf+0x14>
 80247de:	69a3      	ldr	r3, [r4, #24]
 80247e0:	b913      	cbnz	r3, 80247e8 <iprintf+0x14>
 80247e2:	4620      	mov	r0, r4
 80247e4:	f000 fa5e 	bl	8024ca4 <__sinit>
 80247e8:	ab05      	add	r3, sp, #20
 80247ea:	9a04      	ldr	r2, [sp, #16]
 80247ec:	68a1      	ldr	r1, [r4, #8]
 80247ee:	9301      	str	r3, [sp, #4]
 80247f0:	4620      	mov	r0, r4
 80247f2:	f000 fc2b 	bl	802504c <_vfiprintf_r>
 80247f6:	b002      	add	sp, #8
 80247f8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80247fc:	b004      	add	sp, #16
 80247fe:	4770      	bx	lr
 8024800:	200001d8 	.word	0x200001d8

08024804 <_puts_r>:
 8024804:	b570      	push	{r4, r5, r6, lr}
 8024806:	460e      	mov	r6, r1
 8024808:	4605      	mov	r5, r0
 802480a:	b118      	cbz	r0, 8024814 <_puts_r+0x10>
 802480c:	6983      	ldr	r3, [r0, #24]
 802480e:	b90b      	cbnz	r3, 8024814 <_puts_r+0x10>
 8024810:	f000 fa48 	bl	8024ca4 <__sinit>
 8024814:	69ab      	ldr	r3, [r5, #24]
 8024816:	68ac      	ldr	r4, [r5, #8]
 8024818:	b913      	cbnz	r3, 8024820 <_puts_r+0x1c>
 802481a:	4628      	mov	r0, r5
 802481c:	f000 fa42 	bl	8024ca4 <__sinit>
 8024820:	4b2c      	ldr	r3, [pc, #176]	; (80248d4 <_puts_r+0xd0>)
 8024822:	429c      	cmp	r4, r3
 8024824:	d120      	bne.n	8024868 <_puts_r+0x64>
 8024826:	686c      	ldr	r4, [r5, #4]
 8024828:	6e63      	ldr	r3, [r4, #100]	; 0x64
 802482a:	07db      	lsls	r3, r3, #31
 802482c:	d405      	bmi.n	802483a <_puts_r+0x36>
 802482e:	89a3      	ldrh	r3, [r4, #12]
 8024830:	0598      	lsls	r0, r3, #22
 8024832:	d402      	bmi.n	802483a <_puts_r+0x36>
 8024834:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8024836:	f000 fad3 	bl	8024de0 <__retarget_lock_acquire_recursive>
 802483a:	89a3      	ldrh	r3, [r4, #12]
 802483c:	0719      	lsls	r1, r3, #28
 802483e:	d51d      	bpl.n	802487c <_puts_r+0x78>
 8024840:	6923      	ldr	r3, [r4, #16]
 8024842:	b1db      	cbz	r3, 802487c <_puts_r+0x78>
 8024844:	3e01      	subs	r6, #1
 8024846:	68a3      	ldr	r3, [r4, #8]
 8024848:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 802484c:	3b01      	subs	r3, #1
 802484e:	60a3      	str	r3, [r4, #8]
 8024850:	bb39      	cbnz	r1, 80248a2 <_puts_r+0x9e>
 8024852:	2b00      	cmp	r3, #0
 8024854:	da38      	bge.n	80248c8 <_puts_r+0xc4>
 8024856:	4622      	mov	r2, r4
 8024858:	210a      	movs	r1, #10
 802485a:	4628      	mov	r0, r5
 802485c:	f000 f848 	bl	80248f0 <__swbuf_r>
 8024860:	3001      	adds	r0, #1
 8024862:	d011      	beq.n	8024888 <_puts_r+0x84>
 8024864:	250a      	movs	r5, #10
 8024866:	e011      	b.n	802488c <_puts_r+0x88>
 8024868:	4b1b      	ldr	r3, [pc, #108]	; (80248d8 <_puts_r+0xd4>)
 802486a:	429c      	cmp	r4, r3
 802486c:	d101      	bne.n	8024872 <_puts_r+0x6e>
 802486e:	68ac      	ldr	r4, [r5, #8]
 8024870:	e7da      	b.n	8024828 <_puts_r+0x24>
 8024872:	4b1a      	ldr	r3, [pc, #104]	; (80248dc <_puts_r+0xd8>)
 8024874:	429c      	cmp	r4, r3
 8024876:	bf08      	it	eq
 8024878:	68ec      	ldreq	r4, [r5, #12]
 802487a:	e7d5      	b.n	8024828 <_puts_r+0x24>
 802487c:	4621      	mov	r1, r4
 802487e:	4628      	mov	r0, r5
 8024880:	f000 f888 	bl	8024994 <__swsetup_r>
 8024884:	2800      	cmp	r0, #0
 8024886:	d0dd      	beq.n	8024844 <_puts_r+0x40>
 8024888:	f04f 35ff 	mov.w	r5, #4294967295
 802488c:	6e63      	ldr	r3, [r4, #100]	; 0x64
 802488e:	07da      	lsls	r2, r3, #31
 8024890:	d405      	bmi.n	802489e <_puts_r+0x9a>
 8024892:	89a3      	ldrh	r3, [r4, #12]
 8024894:	059b      	lsls	r3, r3, #22
 8024896:	d402      	bmi.n	802489e <_puts_r+0x9a>
 8024898:	6da0      	ldr	r0, [r4, #88]	; 0x58
 802489a:	f000 faa2 	bl	8024de2 <__retarget_lock_release_recursive>
 802489e:	4628      	mov	r0, r5
 80248a0:	bd70      	pop	{r4, r5, r6, pc}
 80248a2:	2b00      	cmp	r3, #0
 80248a4:	da04      	bge.n	80248b0 <_puts_r+0xac>
 80248a6:	69a2      	ldr	r2, [r4, #24]
 80248a8:	429a      	cmp	r2, r3
 80248aa:	dc06      	bgt.n	80248ba <_puts_r+0xb6>
 80248ac:	290a      	cmp	r1, #10
 80248ae:	d004      	beq.n	80248ba <_puts_r+0xb6>
 80248b0:	6823      	ldr	r3, [r4, #0]
 80248b2:	1c5a      	adds	r2, r3, #1
 80248b4:	6022      	str	r2, [r4, #0]
 80248b6:	7019      	strb	r1, [r3, #0]
 80248b8:	e7c5      	b.n	8024846 <_puts_r+0x42>
 80248ba:	4622      	mov	r2, r4
 80248bc:	4628      	mov	r0, r5
 80248be:	f000 f817 	bl	80248f0 <__swbuf_r>
 80248c2:	3001      	adds	r0, #1
 80248c4:	d1bf      	bne.n	8024846 <_puts_r+0x42>
 80248c6:	e7df      	b.n	8024888 <_puts_r+0x84>
 80248c8:	6823      	ldr	r3, [r4, #0]
 80248ca:	250a      	movs	r5, #10
 80248cc:	1c5a      	adds	r2, r3, #1
 80248ce:	6022      	str	r2, [r4, #0]
 80248d0:	701d      	strb	r5, [r3, #0]
 80248d2:	e7db      	b.n	802488c <_puts_r+0x88>
 80248d4:	08026fc4 	.word	0x08026fc4
 80248d8:	08026fe4 	.word	0x08026fe4
 80248dc:	08026fa4 	.word	0x08026fa4

080248e0 <puts>:
 80248e0:	4b02      	ldr	r3, [pc, #8]	; (80248ec <puts+0xc>)
 80248e2:	4601      	mov	r1, r0
 80248e4:	6818      	ldr	r0, [r3, #0]
 80248e6:	f7ff bf8d 	b.w	8024804 <_puts_r>
 80248ea:	bf00      	nop
 80248ec:	200001d8 	.word	0x200001d8

080248f0 <__swbuf_r>:
 80248f0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80248f2:	460e      	mov	r6, r1
 80248f4:	4614      	mov	r4, r2
 80248f6:	4605      	mov	r5, r0
 80248f8:	b118      	cbz	r0, 8024902 <__swbuf_r+0x12>
 80248fa:	6983      	ldr	r3, [r0, #24]
 80248fc:	b90b      	cbnz	r3, 8024902 <__swbuf_r+0x12>
 80248fe:	f000 f9d1 	bl	8024ca4 <__sinit>
 8024902:	4b21      	ldr	r3, [pc, #132]	; (8024988 <__swbuf_r+0x98>)
 8024904:	429c      	cmp	r4, r3
 8024906:	d12b      	bne.n	8024960 <__swbuf_r+0x70>
 8024908:	686c      	ldr	r4, [r5, #4]
 802490a:	69a3      	ldr	r3, [r4, #24]
 802490c:	60a3      	str	r3, [r4, #8]
 802490e:	89a3      	ldrh	r3, [r4, #12]
 8024910:	071a      	lsls	r2, r3, #28
 8024912:	d52f      	bpl.n	8024974 <__swbuf_r+0x84>
 8024914:	6923      	ldr	r3, [r4, #16]
 8024916:	b36b      	cbz	r3, 8024974 <__swbuf_r+0x84>
 8024918:	6923      	ldr	r3, [r4, #16]
 802491a:	6820      	ldr	r0, [r4, #0]
 802491c:	1ac0      	subs	r0, r0, r3
 802491e:	6963      	ldr	r3, [r4, #20]
 8024920:	b2f6      	uxtb	r6, r6
 8024922:	4283      	cmp	r3, r0
 8024924:	4637      	mov	r7, r6
 8024926:	dc04      	bgt.n	8024932 <__swbuf_r+0x42>
 8024928:	4621      	mov	r1, r4
 802492a:	4628      	mov	r0, r5
 802492c:	f000 f926 	bl	8024b7c <_fflush_r>
 8024930:	bb30      	cbnz	r0, 8024980 <__swbuf_r+0x90>
 8024932:	68a3      	ldr	r3, [r4, #8]
 8024934:	3b01      	subs	r3, #1
 8024936:	60a3      	str	r3, [r4, #8]
 8024938:	6823      	ldr	r3, [r4, #0]
 802493a:	1c5a      	adds	r2, r3, #1
 802493c:	6022      	str	r2, [r4, #0]
 802493e:	701e      	strb	r6, [r3, #0]
 8024940:	6963      	ldr	r3, [r4, #20]
 8024942:	3001      	adds	r0, #1
 8024944:	4283      	cmp	r3, r0
 8024946:	d004      	beq.n	8024952 <__swbuf_r+0x62>
 8024948:	89a3      	ldrh	r3, [r4, #12]
 802494a:	07db      	lsls	r3, r3, #31
 802494c:	d506      	bpl.n	802495c <__swbuf_r+0x6c>
 802494e:	2e0a      	cmp	r6, #10
 8024950:	d104      	bne.n	802495c <__swbuf_r+0x6c>
 8024952:	4621      	mov	r1, r4
 8024954:	4628      	mov	r0, r5
 8024956:	f000 f911 	bl	8024b7c <_fflush_r>
 802495a:	b988      	cbnz	r0, 8024980 <__swbuf_r+0x90>
 802495c:	4638      	mov	r0, r7
 802495e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8024960:	4b0a      	ldr	r3, [pc, #40]	; (802498c <__swbuf_r+0x9c>)
 8024962:	429c      	cmp	r4, r3
 8024964:	d101      	bne.n	802496a <__swbuf_r+0x7a>
 8024966:	68ac      	ldr	r4, [r5, #8]
 8024968:	e7cf      	b.n	802490a <__swbuf_r+0x1a>
 802496a:	4b09      	ldr	r3, [pc, #36]	; (8024990 <__swbuf_r+0xa0>)
 802496c:	429c      	cmp	r4, r3
 802496e:	bf08      	it	eq
 8024970:	68ec      	ldreq	r4, [r5, #12]
 8024972:	e7ca      	b.n	802490a <__swbuf_r+0x1a>
 8024974:	4621      	mov	r1, r4
 8024976:	4628      	mov	r0, r5
 8024978:	f000 f80c 	bl	8024994 <__swsetup_r>
 802497c:	2800      	cmp	r0, #0
 802497e:	d0cb      	beq.n	8024918 <__swbuf_r+0x28>
 8024980:	f04f 37ff 	mov.w	r7, #4294967295
 8024984:	e7ea      	b.n	802495c <__swbuf_r+0x6c>
 8024986:	bf00      	nop
 8024988:	08026fc4 	.word	0x08026fc4
 802498c:	08026fe4 	.word	0x08026fe4
 8024990:	08026fa4 	.word	0x08026fa4

08024994 <__swsetup_r>:
 8024994:	4b32      	ldr	r3, [pc, #200]	; (8024a60 <__swsetup_r+0xcc>)
 8024996:	b570      	push	{r4, r5, r6, lr}
 8024998:	681d      	ldr	r5, [r3, #0]
 802499a:	4606      	mov	r6, r0
 802499c:	460c      	mov	r4, r1
 802499e:	b125      	cbz	r5, 80249aa <__swsetup_r+0x16>
 80249a0:	69ab      	ldr	r3, [r5, #24]
 80249a2:	b913      	cbnz	r3, 80249aa <__swsetup_r+0x16>
 80249a4:	4628      	mov	r0, r5
 80249a6:	f000 f97d 	bl	8024ca4 <__sinit>
 80249aa:	4b2e      	ldr	r3, [pc, #184]	; (8024a64 <__swsetup_r+0xd0>)
 80249ac:	429c      	cmp	r4, r3
 80249ae:	d10f      	bne.n	80249d0 <__swsetup_r+0x3c>
 80249b0:	686c      	ldr	r4, [r5, #4]
 80249b2:	89a3      	ldrh	r3, [r4, #12]
 80249b4:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80249b8:	0719      	lsls	r1, r3, #28
 80249ba:	d42c      	bmi.n	8024a16 <__swsetup_r+0x82>
 80249bc:	06dd      	lsls	r5, r3, #27
 80249be:	d411      	bmi.n	80249e4 <__swsetup_r+0x50>
 80249c0:	2309      	movs	r3, #9
 80249c2:	6033      	str	r3, [r6, #0]
 80249c4:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 80249c8:	81a3      	strh	r3, [r4, #12]
 80249ca:	f04f 30ff 	mov.w	r0, #4294967295
 80249ce:	e03e      	b.n	8024a4e <__swsetup_r+0xba>
 80249d0:	4b25      	ldr	r3, [pc, #148]	; (8024a68 <__swsetup_r+0xd4>)
 80249d2:	429c      	cmp	r4, r3
 80249d4:	d101      	bne.n	80249da <__swsetup_r+0x46>
 80249d6:	68ac      	ldr	r4, [r5, #8]
 80249d8:	e7eb      	b.n	80249b2 <__swsetup_r+0x1e>
 80249da:	4b24      	ldr	r3, [pc, #144]	; (8024a6c <__swsetup_r+0xd8>)
 80249dc:	429c      	cmp	r4, r3
 80249de:	bf08      	it	eq
 80249e0:	68ec      	ldreq	r4, [r5, #12]
 80249e2:	e7e6      	b.n	80249b2 <__swsetup_r+0x1e>
 80249e4:	0758      	lsls	r0, r3, #29
 80249e6:	d512      	bpl.n	8024a0e <__swsetup_r+0x7a>
 80249e8:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80249ea:	b141      	cbz	r1, 80249fe <__swsetup_r+0x6a>
 80249ec:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80249f0:	4299      	cmp	r1, r3
 80249f2:	d002      	beq.n	80249fa <__swsetup_r+0x66>
 80249f4:	4630      	mov	r0, r6
 80249f6:	f000 fa59 	bl	8024eac <_free_r>
 80249fa:	2300      	movs	r3, #0
 80249fc:	6363      	str	r3, [r4, #52]	; 0x34
 80249fe:	89a3      	ldrh	r3, [r4, #12]
 8024a00:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8024a04:	81a3      	strh	r3, [r4, #12]
 8024a06:	2300      	movs	r3, #0
 8024a08:	6063      	str	r3, [r4, #4]
 8024a0a:	6923      	ldr	r3, [r4, #16]
 8024a0c:	6023      	str	r3, [r4, #0]
 8024a0e:	89a3      	ldrh	r3, [r4, #12]
 8024a10:	f043 0308 	orr.w	r3, r3, #8
 8024a14:	81a3      	strh	r3, [r4, #12]
 8024a16:	6923      	ldr	r3, [r4, #16]
 8024a18:	b94b      	cbnz	r3, 8024a2e <__swsetup_r+0x9a>
 8024a1a:	89a3      	ldrh	r3, [r4, #12]
 8024a1c:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8024a20:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8024a24:	d003      	beq.n	8024a2e <__swsetup_r+0x9a>
 8024a26:	4621      	mov	r1, r4
 8024a28:	4630      	mov	r0, r6
 8024a2a:	f000 f9ff 	bl	8024e2c <__smakebuf_r>
 8024a2e:	89a0      	ldrh	r0, [r4, #12]
 8024a30:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8024a34:	f010 0301 	ands.w	r3, r0, #1
 8024a38:	d00a      	beq.n	8024a50 <__swsetup_r+0xbc>
 8024a3a:	2300      	movs	r3, #0
 8024a3c:	60a3      	str	r3, [r4, #8]
 8024a3e:	6963      	ldr	r3, [r4, #20]
 8024a40:	425b      	negs	r3, r3
 8024a42:	61a3      	str	r3, [r4, #24]
 8024a44:	6923      	ldr	r3, [r4, #16]
 8024a46:	b943      	cbnz	r3, 8024a5a <__swsetup_r+0xc6>
 8024a48:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8024a4c:	d1ba      	bne.n	80249c4 <__swsetup_r+0x30>
 8024a4e:	bd70      	pop	{r4, r5, r6, pc}
 8024a50:	0781      	lsls	r1, r0, #30
 8024a52:	bf58      	it	pl
 8024a54:	6963      	ldrpl	r3, [r4, #20]
 8024a56:	60a3      	str	r3, [r4, #8]
 8024a58:	e7f4      	b.n	8024a44 <__swsetup_r+0xb0>
 8024a5a:	2000      	movs	r0, #0
 8024a5c:	e7f7      	b.n	8024a4e <__swsetup_r+0xba>
 8024a5e:	bf00      	nop
 8024a60:	200001d8 	.word	0x200001d8
 8024a64:	08026fc4 	.word	0x08026fc4
 8024a68:	08026fe4 	.word	0x08026fe4
 8024a6c:	08026fa4 	.word	0x08026fa4

08024a70 <__sflush_r>:
 8024a70:	898a      	ldrh	r2, [r1, #12]
 8024a72:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8024a76:	4605      	mov	r5, r0
 8024a78:	0710      	lsls	r0, r2, #28
 8024a7a:	460c      	mov	r4, r1
 8024a7c:	d458      	bmi.n	8024b30 <__sflush_r+0xc0>
 8024a7e:	684b      	ldr	r3, [r1, #4]
 8024a80:	2b00      	cmp	r3, #0
 8024a82:	dc05      	bgt.n	8024a90 <__sflush_r+0x20>
 8024a84:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8024a86:	2b00      	cmp	r3, #0
 8024a88:	dc02      	bgt.n	8024a90 <__sflush_r+0x20>
 8024a8a:	2000      	movs	r0, #0
 8024a8c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8024a90:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8024a92:	2e00      	cmp	r6, #0
 8024a94:	d0f9      	beq.n	8024a8a <__sflush_r+0x1a>
 8024a96:	2300      	movs	r3, #0
 8024a98:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8024a9c:	682f      	ldr	r7, [r5, #0]
 8024a9e:	602b      	str	r3, [r5, #0]
 8024aa0:	d032      	beq.n	8024b08 <__sflush_r+0x98>
 8024aa2:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8024aa4:	89a3      	ldrh	r3, [r4, #12]
 8024aa6:	075a      	lsls	r2, r3, #29
 8024aa8:	d505      	bpl.n	8024ab6 <__sflush_r+0x46>
 8024aaa:	6863      	ldr	r3, [r4, #4]
 8024aac:	1ac0      	subs	r0, r0, r3
 8024aae:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8024ab0:	b10b      	cbz	r3, 8024ab6 <__sflush_r+0x46>
 8024ab2:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8024ab4:	1ac0      	subs	r0, r0, r3
 8024ab6:	2300      	movs	r3, #0
 8024ab8:	4602      	mov	r2, r0
 8024aba:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8024abc:	6a21      	ldr	r1, [r4, #32]
 8024abe:	4628      	mov	r0, r5
 8024ac0:	47b0      	blx	r6
 8024ac2:	1c43      	adds	r3, r0, #1
 8024ac4:	89a3      	ldrh	r3, [r4, #12]
 8024ac6:	d106      	bne.n	8024ad6 <__sflush_r+0x66>
 8024ac8:	6829      	ldr	r1, [r5, #0]
 8024aca:	291d      	cmp	r1, #29
 8024acc:	d82c      	bhi.n	8024b28 <__sflush_r+0xb8>
 8024ace:	4a2a      	ldr	r2, [pc, #168]	; (8024b78 <__sflush_r+0x108>)
 8024ad0:	40ca      	lsrs	r2, r1
 8024ad2:	07d6      	lsls	r6, r2, #31
 8024ad4:	d528      	bpl.n	8024b28 <__sflush_r+0xb8>
 8024ad6:	2200      	movs	r2, #0
 8024ad8:	6062      	str	r2, [r4, #4]
 8024ada:	04d9      	lsls	r1, r3, #19
 8024adc:	6922      	ldr	r2, [r4, #16]
 8024ade:	6022      	str	r2, [r4, #0]
 8024ae0:	d504      	bpl.n	8024aec <__sflush_r+0x7c>
 8024ae2:	1c42      	adds	r2, r0, #1
 8024ae4:	d101      	bne.n	8024aea <__sflush_r+0x7a>
 8024ae6:	682b      	ldr	r3, [r5, #0]
 8024ae8:	b903      	cbnz	r3, 8024aec <__sflush_r+0x7c>
 8024aea:	6560      	str	r0, [r4, #84]	; 0x54
 8024aec:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8024aee:	602f      	str	r7, [r5, #0]
 8024af0:	2900      	cmp	r1, #0
 8024af2:	d0ca      	beq.n	8024a8a <__sflush_r+0x1a>
 8024af4:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8024af8:	4299      	cmp	r1, r3
 8024afa:	d002      	beq.n	8024b02 <__sflush_r+0x92>
 8024afc:	4628      	mov	r0, r5
 8024afe:	f000 f9d5 	bl	8024eac <_free_r>
 8024b02:	2000      	movs	r0, #0
 8024b04:	6360      	str	r0, [r4, #52]	; 0x34
 8024b06:	e7c1      	b.n	8024a8c <__sflush_r+0x1c>
 8024b08:	6a21      	ldr	r1, [r4, #32]
 8024b0a:	2301      	movs	r3, #1
 8024b0c:	4628      	mov	r0, r5
 8024b0e:	47b0      	blx	r6
 8024b10:	1c41      	adds	r1, r0, #1
 8024b12:	d1c7      	bne.n	8024aa4 <__sflush_r+0x34>
 8024b14:	682b      	ldr	r3, [r5, #0]
 8024b16:	2b00      	cmp	r3, #0
 8024b18:	d0c4      	beq.n	8024aa4 <__sflush_r+0x34>
 8024b1a:	2b1d      	cmp	r3, #29
 8024b1c:	d001      	beq.n	8024b22 <__sflush_r+0xb2>
 8024b1e:	2b16      	cmp	r3, #22
 8024b20:	d101      	bne.n	8024b26 <__sflush_r+0xb6>
 8024b22:	602f      	str	r7, [r5, #0]
 8024b24:	e7b1      	b.n	8024a8a <__sflush_r+0x1a>
 8024b26:	89a3      	ldrh	r3, [r4, #12]
 8024b28:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8024b2c:	81a3      	strh	r3, [r4, #12]
 8024b2e:	e7ad      	b.n	8024a8c <__sflush_r+0x1c>
 8024b30:	690f      	ldr	r7, [r1, #16]
 8024b32:	2f00      	cmp	r7, #0
 8024b34:	d0a9      	beq.n	8024a8a <__sflush_r+0x1a>
 8024b36:	0793      	lsls	r3, r2, #30
 8024b38:	680e      	ldr	r6, [r1, #0]
 8024b3a:	bf08      	it	eq
 8024b3c:	694b      	ldreq	r3, [r1, #20]
 8024b3e:	600f      	str	r7, [r1, #0]
 8024b40:	bf18      	it	ne
 8024b42:	2300      	movne	r3, #0
 8024b44:	eba6 0807 	sub.w	r8, r6, r7
 8024b48:	608b      	str	r3, [r1, #8]
 8024b4a:	f1b8 0f00 	cmp.w	r8, #0
 8024b4e:	dd9c      	ble.n	8024a8a <__sflush_r+0x1a>
 8024b50:	6a21      	ldr	r1, [r4, #32]
 8024b52:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8024b54:	4643      	mov	r3, r8
 8024b56:	463a      	mov	r2, r7
 8024b58:	4628      	mov	r0, r5
 8024b5a:	47b0      	blx	r6
 8024b5c:	2800      	cmp	r0, #0
 8024b5e:	dc06      	bgt.n	8024b6e <__sflush_r+0xfe>
 8024b60:	89a3      	ldrh	r3, [r4, #12]
 8024b62:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8024b66:	81a3      	strh	r3, [r4, #12]
 8024b68:	f04f 30ff 	mov.w	r0, #4294967295
 8024b6c:	e78e      	b.n	8024a8c <__sflush_r+0x1c>
 8024b6e:	4407      	add	r7, r0
 8024b70:	eba8 0800 	sub.w	r8, r8, r0
 8024b74:	e7e9      	b.n	8024b4a <__sflush_r+0xda>
 8024b76:	bf00      	nop
 8024b78:	20400001 	.word	0x20400001

08024b7c <_fflush_r>:
 8024b7c:	b538      	push	{r3, r4, r5, lr}
 8024b7e:	690b      	ldr	r3, [r1, #16]
 8024b80:	4605      	mov	r5, r0
 8024b82:	460c      	mov	r4, r1
 8024b84:	b913      	cbnz	r3, 8024b8c <_fflush_r+0x10>
 8024b86:	2500      	movs	r5, #0
 8024b88:	4628      	mov	r0, r5
 8024b8a:	bd38      	pop	{r3, r4, r5, pc}
 8024b8c:	b118      	cbz	r0, 8024b96 <_fflush_r+0x1a>
 8024b8e:	6983      	ldr	r3, [r0, #24]
 8024b90:	b90b      	cbnz	r3, 8024b96 <_fflush_r+0x1a>
 8024b92:	f000 f887 	bl	8024ca4 <__sinit>
 8024b96:	4b14      	ldr	r3, [pc, #80]	; (8024be8 <_fflush_r+0x6c>)
 8024b98:	429c      	cmp	r4, r3
 8024b9a:	d11b      	bne.n	8024bd4 <_fflush_r+0x58>
 8024b9c:	686c      	ldr	r4, [r5, #4]
 8024b9e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8024ba2:	2b00      	cmp	r3, #0
 8024ba4:	d0ef      	beq.n	8024b86 <_fflush_r+0xa>
 8024ba6:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8024ba8:	07d0      	lsls	r0, r2, #31
 8024baa:	d404      	bmi.n	8024bb6 <_fflush_r+0x3a>
 8024bac:	0599      	lsls	r1, r3, #22
 8024bae:	d402      	bmi.n	8024bb6 <_fflush_r+0x3a>
 8024bb0:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8024bb2:	f000 f915 	bl	8024de0 <__retarget_lock_acquire_recursive>
 8024bb6:	4628      	mov	r0, r5
 8024bb8:	4621      	mov	r1, r4
 8024bba:	f7ff ff59 	bl	8024a70 <__sflush_r>
 8024bbe:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8024bc0:	07da      	lsls	r2, r3, #31
 8024bc2:	4605      	mov	r5, r0
 8024bc4:	d4e0      	bmi.n	8024b88 <_fflush_r+0xc>
 8024bc6:	89a3      	ldrh	r3, [r4, #12]
 8024bc8:	059b      	lsls	r3, r3, #22
 8024bca:	d4dd      	bmi.n	8024b88 <_fflush_r+0xc>
 8024bcc:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8024bce:	f000 f908 	bl	8024de2 <__retarget_lock_release_recursive>
 8024bd2:	e7d9      	b.n	8024b88 <_fflush_r+0xc>
 8024bd4:	4b05      	ldr	r3, [pc, #20]	; (8024bec <_fflush_r+0x70>)
 8024bd6:	429c      	cmp	r4, r3
 8024bd8:	d101      	bne.n	8024bde <_fflush_r+0x62>
 8024bda:	68ac      	ldr	r4, [r5, #8]
 8024bdc:	e7df      	b.n	8024b9e <_fflush_r+0x22>
 8024bde:	4b04      	ldr	r3, [pc, #16]	; (8024bf0 <_fflush_r+0x74>)
 8024be0:	429c      	cmp	r4, r3
 8024be2:	bf08      	it	eq
 8024be4:	68ec      	ldreq	r4, [r5, #12]
 8024be6:	e7da      	b.n	8024b9e <_fflush_r+0x22>
 8024be8:	08026fc4 	.word	0x08026fc4
 8024bec:	08026fe4 	.word	0x08026fe4
 8024bf0:	08026fa4 	.word	0x08026fa4

08024bf4 <std>:
 8024bf4:	2300      	movs	r3, #0
 8024bf6:	b510      	push	{r4, lr}
 8024bf8:	4604      	mov	r4, r0
 8024bfa:	e9c0 3300 	strd	r3, r3, [r0]
 8024bfe:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8024c02:	6083      	str	r3, [r0, #8]
 8024c04:	8181      	strh	r1, [r0, #12]
 8024c06:	6643      	str	r3, [r0, #100]	; 0x64
 8024c08:	81c2      	strh	r2, [r0, #14]
 8024c0a:	6183      	str	r3, [r0, #24]
 8024c0c:	4619      	mov	r1, r3
 8024c0e:	2208      	movs	r2, #8
 8024c10:	305c      	adds	r0, #92	; 0x5c
 8024c12:	f7ff fdd7 	bl	80247c4 <memset>
 8024c16:	4b05      	ldr	r3, [pc, #20]	; (8024c2c <std+0x38>)
 8024c18:	6263      	str	r3, [r4, #36]	; 0x24
 8024c1a:	4b05      	ldr	r3, [pc, #20]	; (8024c30 <std+0x3c>)
 8024c1c:	62a3      	str	r3, [r4, #40]	; 0x28
 8024c1e:	4b05      	ldr	r3, [pc, #20]	; (8024c34 <std+0x40>)
 8024c20:	62e3      	str	r3, [r4, #44]	; 0x2c
 8024c22:	4b05      	ldr	r3, [pc, #20]	; (8024c38 <std+0x44>)
 8024c24:	6224      	str	r4, [r4, #32]
 8024c26:	6323      	str	r3, [r4, #48]	; 0x30
 8024c28:	bd10      	pop	{r4, pc}
 8024c2a:	bf00      	nop
 8024c2c:	080255f5 	.word	0x080255f5
 8024c30:	08025617 	.word	0x08025617
 8024c34:	0802564f 	.word	0x0802564f
 8024c38:	08025673 	.word	0x08025673

08024c3c <_cleanup_r>:
 8024c3c:	4901      	ldr	r1, [pc, #4]	; (8024c44 <_cleanup_r+0x8>)
 8024c3e:	f000 b8af 	b.w	8024da0 <_fwalk_reent>
 8024c42:	bf00      	nop
 8024c44:	08024b7d 	.word	0x08024b7d

08024c48 <__sfmoreglue>:
 8024c48:	b570      	push	{r4, r5, r6, lr}
 8024c4a:	1e4a      	subs	r2, r1, #1
 8024c4c:	2568      	movs	r5, #104	; 0x68
 8024c4e:	4355      	muls	r5, r2
 8024c50:	460e      	mov	r6, r1
 8024c52:	f105 0174 	add.w	r1, r5, #116	; 0x74
 8024c56:	f000 f977 	bl	8024f48 <_malloc_r>
 8024c5a:	4604      	mov	r4, r0
 8024c5c:	b140      	cbz	r0, 8024c70 <__sfmoreglue+0x28>
 8024c5e:	2100      	movs	r1, #0
 8024c60:	e9c0 1600 	strd	r1, r6, [r0]
 8024c64:	300c      	adds	r0, #12
 8024c66:	60a0      	str	r0, [r4, #8]
 8024c68:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8024c6c:	f7ff fdaa 	bl	80247c4 <memset>
 8024c70:	4620      	mov	r0, r4
 8024c72:	bd70      	pop	{r4, r5, r6, pc}

08024c74 <__sfp_lock_acquire>:
 8024c74:	4801      	ldr	r0, [pc, #4]	; (8024c7c <__sfp_lock_acquire+0x8>)
 8024c76:	f000 b8b3 	b.w	8024de0 <__retarget_lock_acquire_recursive>
 8024c7a:	bf00      	nop
 8024c7c:	2000208c 	.word	0x2000208c

08024c80 <__sfp_lock_release>:
 8024c80:	4801      	ldr	r0, [pc, #4]	; (8024c88 <__sfp_lock_release+0x8>)
 8024c82:	f000 b8ae 	b.w	8024de2 <__retarget_lock_release_recursive>
 8024c86:	bf00      	nop
 8024c88:	2000208c 	.word	0x2000208c

08024c8c <__sinit_lock_acquire>:
 8024c8c:	4801      	ldr	r0, [pc, #4]	; (8024c94 <__sinit_lock_acquire+0x8>)
 8024c8e:	f000 b8a7 	b.w	8024de0 <__retarget_lock_acquire_recursive>
 8024c92:	bf00      	nop
 8024c94:	20002087 	.word	0x20002087

08024c98 <__sinit_lock_release>:
 8024c98:	4801      	ldr	r0, [pc, #4]	; (8024ca0 <__sinit_lock_release+0x8>)
 8024c9a:	f000 b8a2 	b.w	8024de2 <__retarget_lock_release_recursive>
 8024c9e:	bf00      	nop
 8024ca0:	20002087 	.word	0x20002087

08024ca4 <__sinit>:
 8024ca4:	b510      	push	{r4, lr}
 8024ca6:	4604      	mov	r4, r0
 8024ca8:	f7ff fff0 	bl	8024c8c <__sinit_lock_acquire>
 8024cac:	69a3      	ldr	r3, [r4, #24]
 8024cae:	b11b      	cbz	r3, 8024cb8 <__sinit+0x14>
 8024cb0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8024cb4:	f7ff bff0 	b.w	8024c98 <__sinit_lock_release>
 8024cb8:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 8024cbc:	6523      	str	r3, [r4, #80]	; 0x50
 8024cbe:	4b13      	ldr	r3, [pc, #76]	; (8024d0c <__sinit+0x68>)
 8024cc0:	4a13      	ldr	r2, [pc, #76]	; (8024d10 <__sinit+0x6c>)
 8024cc2:	681b      	ldr	r3, [r3, #0]
 8024cc4:	62a2      	str	r2, [r4, #40]	; 0x28
 8024cc6:	42a3      	cmp	r3, r4
 8024cc8:	bf04      	itt	eq
 8024cca:	2301      	moveq	r3, #1
 8024ccc:	61a3      	streq	r3, [r4, #24]
 8024cce:	4620      	mov	r0, r4
 8024cd0:	f000 f820 	bl	8024d14 <__sfp>
 8024cd4:	6060      	str	r0, [r4, #4]
 8024cd6:	4620      	mov	r0, r4
 8024cd8:	f000 f81c 	bl	8024d14 <__sfp>
 8024cdc:	60a0      	str	r0, [r4, #8]
 8024cde:	4620      	mov	r0, r4
 8024ce0:	f000 f818 	bl	8024d14 <__sfp>
 8024ce4:	2200      	movs	r2, #0
 8024ce6:	60e0      	str	r0, [r4, #12]
 8024ce8:	2104      	movs	r1, #4
 8024cea:	6860      	ldr	r0, [r4, #4]
 8024cec:	f7ff ff82 	bl	8024bf4 <std>
 8024cf0:	68a0      	ldr	r0, [r4, #8]
 8024cf2:	2201      	movs	r2, #1
 8024cf4:	2109      	movs	r1, #9
 8024cf6:	f7ff ff7d 	bl	8024bf4 <std>
 8024cfa:	68e0      	ldr	r0, [r4, #12]
 8024cfc:	2202      	movs	r2, #2
 8024cfe:	2112      	movs	r1, #18
 8024d00:	f7ff ff78 	bl	8024bf4 <std>
 8024d04:	2301      	movs	r3, #1
 8024d06:	61a3      	str	r3, [r4, #24]
 8024d08:	e7d2      	b.n	8024cb0 <__sinit+0xc>
 8024d0a:	bf00      	nop
 8024d0c:	08026fa0 	.word	0x08026fa0
 8024d10:	08024c3d 	.word	0x08024c3d

08024d14 <__sfp>:
 8024d14:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8024d16:	4607      	mov	r7, r0
 8024d18:	f7ff ffac 	bl	8024c74 <__sfp_lock_acquire>
 8024d1c:	4b1e      	ldr	r3, [pc, #120]	; (8024d98 <__sfp+0x84>)
 8024d1e:	681e      	ldr	r6, [r3, #0]
 8024d20:	69b3      	ldr	r3, [r6, #24]
 8024d22:	b913      	cbnz	r3, 8024d2a <__sfp+0x16>
 8024d24:	4630      	mov	r0, r6
 8024d26:	f7ff ffbd 	bl	8024ca4 <__sinit>
 8024d2a:	3648      	adds	r6, #72	; 0x48
 8024d2c:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8024d30:	3b01      	subs	r3, #1
 8024d32:	d503      	bpl.n	8024d3c <__sfp+0x28>
 8024d34:	6833      	ldr	r3, [r6, #0]
 8024d36:	b30b      	cbz	r3, 8024d7c <__sfp+0x68>
 8024d38:	6836      	ldr	r6, [r6, #0]
 8024d3a:	e7f7      	b.n	8024d2c <__sfp+0x18>
 8024d3c:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8024d40:	b9d5      	cbnz	r5, 8024d78 <__sfp+0x64>
 8024d42:	4b16      	ldr	r3, [pc, #88]	; (8024d9c <__sfp+0x88>)
 8024d44:	60e3      	str	r3, [r4, #12]
 8024d46:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8024d4a:	6665      	str	r5, [r4, #100]	; 0x64
 8024d4c:	f000 f847 	bl	8024dde <__retarget_lock_init_recursive>
 8024d50:	f7ff ff96 	bl	8024c80 <__sfp_lock_release>
 8024d54:	e9c4 5501 	strd	r5, r5, [r4, #4]
 8024d58:	e9c4 5504 	strd	r5, r5, [r4, #16]
 8024d5c:	6025      	str	r5, [r4, #0]
 8024d5e:	61a5      	str	r5, [r4, #24]
 8024d60:	2208      	movs	r2, #8
 8024d62:	4629      	mov	r1, r5
 8024d64:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8024d68:	f7ff fd2c 	bl	80247c4 <memset>
 8024d6c:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8024d70:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8024d74:	4620      	mov	r0, r4
 8024d76:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8024d78:	3468      	adds	r4, #104	; 0x68
 8024d7a:	e7d9      	b.n	8024d30 <__sfp+0x1c>
 8024d7c:	2104      	movs	r1, #4
 8024d7e:	4638      	mov	r0, r7
 8024d80:	f7ff ff62 	bl	8024c48 <__sfmoreglue>
 8024d84:	4604      	mov	r4, r0
 8024d86:	6030      	str	r0, [r6, #0]
 8024d88:	2800      	cmp	r0, #0
 8024d8a:	d1d5      	bne.n	8024d38 <__sfp+0x24>
 8024d8c:	f7ff ff78 	bl	8024c80 <__sfp_lock_release>
 8024d90:	230c      	movs	r3, #12
 8024d92:	603b      	str	r3, [r7, #0]
 8024d94:	e7ee      	b.n	8024d74 <__sfp+0x60>
 8024d96:	bf00      	nop
 8024d98:	08026fa0 	.word	0x08026fa0
 8024d9c:	ffff0001 	.word	0xffff0001

08024da0 <_fwalk_reent>:
 8024da0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8024da4:	4606      	mov	r6, r0
 8024da6:	4688      	mov	r8, r1
 8024da8:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8024dac:	2700      	movs	r7, #0
 8024dae:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8024db2:	f1b9 0901 	subs.w	r9, r9, #1
 8024db6:	d505      	bpl.n	8024dc4 <_fwalk_reent+0x24>
 8024db8:	6824      	ldr	r4, [r4, #0]
 8024dba:	2c00      	cmp	r4, #0
 8024dbc:	d1f7      	bne.n	8024dae <_fwalk_reent+0xe>
 8024dbe:	4638      	mov	r0, r7
 8024dc0:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8024dc4:	89ab      	ldrh	r3, [r5, #12]
 8024dc6:	2b01      	cmp	r3, #1
 8024dc8:	d907      	bls.n	8024dda <_fwalk_reent+0x3a>
 8024dca:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8024dce:	3301      	adds	r3, #1
 8024dd0:	d003      	beq.n	8024dda <_fwalk_reent+0x3a>
 8024dd2:	4629      	mov	r1, r5
 8024dd4:	4630      	mov	r0, r6
 8024dd6:	47c0      	blx	r8
 8024dd8:	4307      	orrs	r7, r0
 8024dda:	3568      	adds	r5, #104	; 0x68
 8024ddc:	e7e9      	b.n	8024db2 <_fwalk_reent+0x12>

08024dde <__retarget_lock_init_recursive>:
 8024dde:	4770      	bx	lr

08024de0 <__retarget_lock_acquire_recursive>:
 8024de0:	4770      	bx	lr

08024de2 <__retarget_lock_release_recursive>:
 8024de2:	4770      	bx	lr

08024de4 <__swhatbuf_r>:
 8024de4:	b570      	push	{r4, r5, r6, lr}
 8024de6:	460e      	mov	r6, r1
 8024de8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8024dec:	2900      	cmp	r1, #0
 8024dee:	b096      	sub	sp, #88	; 0x58
 8024df0:	4614      	mov	r4, r2
 8024df2:	461d      	mov	r5, r3
 8024df4:	da07      	bge.n	8024e06 <__swhatbuf_r+0x22>
 8024df6:	2300      	movs	r3, #0
 8024df8:	602b      	str	r3, [r5, #0]
 8024dfa:	89b3      	ldrh	r3, [r6, #12]
 8024dfc:	061a      	lsls	r2, r3, #24
 8024dfe:	d410      	bmi.n	8024e22 <__swhatbuf_r+0x3e>
 8024e00:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8024e04:	e00e      	b.n	8024e24 <__swhatbuf_r+0x40>
 8024e06:	466a      	mov	r2, sp
 8024e08:	f000 fc5a 	bl	80256c0 <_fstat_r>
 8024e0c:	2800      	cmp	r0, #0
 8024e0e:	dbf2      	blt.n	8024df6 <__swhatbuf_r+0x12>
 8024e10:	9a01      	ldr	r2, [sp, #4]
 8024e12:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8024e16:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8024e1a:	425a      	negs	r2, r3
 8024e1c:	415a      	adcs	r2, r3
 8024e1e:	602a      	str	r2, [r5, #0]
 8024e20:	e7ee      	b.n	8024e00 <__swhatbuf_r+0x1c>
 8024e22:	2340      	movs	r3, #64	; 0x40
 8024e24:	2000      	movs	r0, #0
 8024e26:	6023      	str	r3, [r4, #0]
 8024e28:	b016      	add	sp, #88	; 0x58
 8024e2a:	bd70      	pop	{r4, r5, r6, pc}

08024e2c <__smakebuf_r>:
 8024e2c:	898b      	ldrh	r3, [r1, #12]
 8024e2e:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8024e30:	079d      	lsls	r5, r3, #30
 8024e32:	4606      	mov	r6, r0
 8024e34:	460c      	mov	r4, r1
 8024e36:	d507      	bpl.n	8024e48 <__smakebuf_r+0x1c>
 8024e38:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8024e3c:	6023      	str	r3, [r4, #0]
 8024e3e:	6123      	str	r3, [r4, #16]
 8024e40:	2301      	movs	r3, #1
 8024e42:	6163      	str	r3, [r4, #20]
 8024e44:	b002      	add	sp, #8
 8024e46:	bd70      	pop	{r4, r5, r6, pc}
 8024e48:	ab01      	add	r3, sp, #4
 8024e4a:	466a      	mov	r2, sp
 8024e4c:	f7ff ffca 	bl	8024de4 <__swhatbuf_r>
 8024e50:	9900      	ldr	r1, [sp, #0]
 8024e52:	4605      	mov	r5, r0
 8024e54:	4630      	mov	r0, r6
 8024e56:	f000 f877 	bl	8024f48 <_malloc_r>
 8024e5a:	b948      	cbnz	r0, 8024e70 <__smakebuf_r+0x44>
 8024e5c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8024e60:	059a      	lsls	r2, r3, #22
 8024e62:	d4ef      	bmi.n	8024e44 <__smakebuf_r+0x18>
 8024e64:	f023 0303 	bic.w	r3, r3, #3
 8024e68:	f043 0302 	orr.w	r3, r3, #2
 8024e6c:	81a3      	strh	r3, [r4, #12]
 8024e6e:	e7e3      	b.n	8024e38 <__smakebuf_r+0xc>
 8024e70:	4b0d      	ldr	r3, [pc, #52]	; (8024ea8 <__smakebuf_r+0x7c>)
 8024e72:	62b3      	str	r3, [r6, #40]	; 0x28
 8024e74:	89a3      	ldrh	r3, [r4, #12]
 8024e76:	6020      	str	r0, [r4, #0]
 8024e78:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8024e7c:	81a3      	strh	r3, [r4, #12]
 8024e7e:	9b00      	ldr	r3, [sp, #0]
 8024e80:	6163      	str	r3, [r4, #20]
 8024e82:	9b01      	ldr	r3, [sp, #4]
 8024e84:	6120      	str	r0, [r4, #16]
 8024e86:	b15b      	cbz	r3, 8024ea0 <__smakebuf_r+0x74>
 8024e88:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8024e8c:	4630      	mov	r0, r6
 8024e8e:	f000 fc29 	bl	80256e4 <_isatty_r>
 8024e92:	b128      	cbz	r0, 8024ea0 <__smakebuf_r+0x74>
 8024e94:	89a3      	ldrh	r3, [r4, #12]
 8024e96:	f023 0303 	bic.w	r3, r3, #3
 8024e9a:	f043 0301 	orr.w	r3, r3, #1
 8024e9e:	81a3      	strh	r3, [r4, #12]
 8024ea0:	89a0      	ldrh	r0, [r4, #12]
 8024ea2:	4305      	orrs	r5, r0
 8024ea4:	81a5      	strh	r5, [r4, #12]
 8024ea6:	e7cd      	b.n	8024e44 <__smakebuf_r+0x18>
 8024ea8:	08024c3d 	.word	0x08024c3d

08024eac <_free_r>:
 8024eac:	b538      	push	{r3, r4, r5, lr}
 8024eae:	4605      	mov	r5, r0
 8024eb0:	2900      	cmp	r1, #0
 8024eb2:	d045      	beq.n	8024f40 <_free_r+0x94>
 8024eb4:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8024eb8:	1f0c      	subs	r4, r1, #4
 8024eba:	2b00      	cmp	r3, #0
 8024ebc:	bfb8      	it	lt
 8024ebe:	18e4      	addlt	r4, r4, r3
 8024ec0:	f000 fc40 	bl	8025744 <__malloc_lock>
 8024ec4:	4a1f      	ldr	r2, [pc, #124]	; (8024f44 <_free_r+0x98>)
 8024ec6:	6813      	ldr	r3, [r2, #0]
 8024ec8:	4610      	mov	r0, r2
 8024eca:	b933      	cbnz	r3, 8024eda <_free_r+0x2e>
 8024ecc:	6063      	str	r3, [r4, #4]
 8024ece:	6014      	str	r4, [r2, #0]
 8024ed0:	4628      	mov	r0, r5
 8024ed2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8024ed6:	f000 bc3b 	b.w	8025750 <__malloc_unlock>
 8024eda:	42a3      	cmp	r3, r4
 8024edc:	d90b      	bls.n	8024ef6 <_free_r+0x4a>
 8024ede:	6821      	ldr	r1, [r4, #0]
 8024ee0:	1862      	adds	r2, r4, r1
 8024ee2:	4293      	cmp	r3, r2
 8024ee4:	bf04      	itt	eq
 8024ee6:	681a      	ldreq	r2, [r3, #0]
 8024ee8:	685b      	ldreq	r3, [r3, #4]
 8024eea:	6063      	str	r3, [r4, #4]
 8024eec:	bf04      	itt	eq
 8024eee:	1852      	addeq	r2, r2, r1
 8024ef0:	6022      	streq	r2, [r4, #0]
 8024ef2:	6004      	str	r4, [r0, #0]
 8024ef4:	e7ec      	b.n	8024ed0 <_free_r+0x24>
 8024ef6:	461a      	mov	r2, r3
 8024ef8:	685b      	ldr	r3, [r3, #4]
 8024efa:	b10b      	cbz	r3, 8024f00 <_free_r+0x54>
 8024efc:	42a3      	cmp	r3, r4
 8024efe:	d9fa      	bls.n	8024ef6 <_free_r+0x4a>
 8024f00:	6811      	ldr	r1, [r2, #0]
 8024f02:	1850      	adds	r0, r2, r1
 8024f04:	42a0      	cmp	r0, r4
 8024f06:	d10b      	bne.n	8024f20 <_free_r+0x74>
 8024f08:	6820      	ldr	r0, [r4, #0]
 8024f0a:	4401      	add	r1, r0
 8024f0c:	1850      	adds	r0, r2, r1
 8024f0e:	4283      	cmp	r3, r0
 8024f10:	6011      	str	r1, [r2, #0]
 8024f12:	d1dd      	bne.n	8024ed0 <_free_r+0x24>
 8024f14:	6818      	ldr	r0, [r3, #0]
 8024f16:	685b      	ldr	r3, [r3, #4]
 8024f18:	6053      	str	r3, [r2, #4]
 8024f1a:	4401      	add	r1, r0
 8024f1c:	6011      	str	r1, [r2, #0]
 8024f1e:	e7d7      	b.n	8024ed0 <_free_r+0x24>
 8024f20:	d902      	bls.n	8024f28 <_free_r+0x7c>
 8024f22:	230c      	movs	r3, #12
 8024f24:	602b      	str	r3, [r5, #0]
 8024f26:	e7d3      	b.n	8024ed0 <_free_r+0x24>
 8024f28:	6820      	ldr	r0, [r4, #0]
 8024f2a:	1821      	adds	r1, r4, r0
 8024f2c:	428b      	cmp	r3, r1
 8024f2e:	bf04      	itt	eq
 8024f30:	6819      	ldreq	r1, [r3, #0]
 8024f32:	685b      	ldreq	r3, [r3, #4]
 8024f34:	6063      	str	r3, [r4, #4]
 8024f36:	bf04      	itt	eq
 8024f38:	1809      	addeq	r1, r1, r0
 8024f3a:	6021      	streq	r1, [r4, #0]
 8024f3c:	6054      	str	r4, [r2, #4]
 8024f3e:	e7c7      	b.n	8024ed0 <_free_r+0x24>
 8024f40:	bd38      	pop	{r3, r4, r5, pc}
 8024f42:	bf00      	nop
 8024f44:	20001d1c 	.word	0x20001d1c

08024f48 <_malloc_r>:
 8024f48:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8024f4a:	1ccd      	adds	r5, r1, #3
 8024f4c:	f025 0503 	bic.w	r5, r5, #3
 8024f50:	3508      	adds	r5, #8
 8024f52:	2d0c      	cmp	r5, #12
 8024f54:	bf38      	it	cc
 8024f56:	250c      	movcc	r5, #12
 8024f58:	2d00      	cmp	r5, #0
 8024f5a:	4606      	mov	r6, r0
 8024f5c:	db01      	blt.n	8024f62 <_malloc_r+0x1a>
 8024f5e:	42a9      	cmp	r1, r5
 8024f60:	d903      	bls.n	8024f6a <_malloc_r+0x22>
 8024f62:	230c      	movs	r3, #12
 8024f64:	6033      	str	r3, [r6, #0]
 8024f66:	2000      	movs	r0, #0
 8024f68:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8024f6a:	f000 fbeb 	bl	8025744 <__malloc_lock>
 8024f6e:	4921      	ldr	r1, [pc, #132]	; (8024ff4 <_malloc_r+0xac>)
 8024f70:	680a      	ldr	r2, [r1, #0]
 8024f72:	4614      	mov	r4, r2
 8024f74:	b99c      	cbnz	r4, 8024f9e <_malloc_r+0x56>
 8024f76:	4f20      	ldr	r7, [pc, #128]	; (8024ff8 <_malloc_r+0xb0>)
 8024f78:	683b      	ldr	r3, [r7, #0]
 8024f7a:	b923      	cbnz	r3, 8024f86 <_malloc_r+0x3e>
 8024f7c:	4621      	mov	r1, r4
 8024f7e:	4630      	mov	r0, r6
 8024f80:	f000 fb28 	bl	80255d4 <_sbrk_r>
 8024f84:	6038      	str	r0, [r7, #0]
 8024f86:	4629      	mov	r1, r5
 8024f88:	4630      	mov	r0, r6
 8024f8a:	f000 fb23 	bl	80255d4 <_sbrk_r>
 8024f8e:	1c43      	adds	r3, r0, #1
 8024f90:	d123      	bne.n	8024fda <_malloc_r+0x92>
 8024f92:	230c      	movs	r3, #12
 8024f94:	6033      	str	r3, [r6, #0]
 8024f96:	4630      	mov	r0, r6
 8024f98:	f000 fbda 	bl	8025750 <__malloc_unlock>
 8024f9c:	e7e3      	b.n	8024f66 <_malloc_r+0x1e>
 8024f9e:	6823      	ldr	r3, [r4, #0]
 8024fa0:	1b5b      	subs	r3, r3, r5
 8024fa2:	d417      	bmi.n	8024fd4 <_malloc_r+0x8c>
 8024fa4:	2b0b      	cmp	r3, #11
 8024fa6:	d903      	bls.n	8024fb0 <_malloc_r+0x68>
 8024fa8:	6023      	str	r3, [r4, #0]
 8024faa:	441c      	add	r4, r3
 8024fac:	6025      	str	r5, [r4, #0]
 8024fae:	e004      	b.n	8024fba <_malloc_r+0x72>
 8024fb0:	6863      	ldr	r3, [r4, #4]
 8024fb2:	42a2      	cmp	r2, r4
 8024fb4:	bf0c      	ite	eq
 8024fb6:	600b      	streq	r3, [r1, #0]
 8024fb8:	6053      	strne	r3, [r2, #4]
 8024fba:	4630      	mov	r0, r6
 8024fbc:	f000 fbc8 	bl	8025750 <__malloc_unlock>
 8024fc0:	f104 000b 	add.w	r0, r4, #11
 8024fc4:	1d23      	adds	r3, r4, #4
 8024fc6:	f020 0007 	bic.w	r0, r0, #7
 8024fca:	1ac2      	subs	r2, r0, r3
 8024fcc:	d0cc      	beq.n	8024f68 <_malloc_r+0x20>
 8024fce:	1a1b      	subs	r3, r3, r0
 8024fd0:	50a3      	str	r3, [r4, r2]
 8024fd2:	e7c9      	b.n	8024f68 <_malloc_r+0x20>
 8024fd4:	4622      	mov	r2, r4
 8024fd6:	6864      	ldr	r4, [r4, #4]
 8024fd8:	e7cc      	b.n	8024f74 <_malloc_r+0x2c>
 8024fda:	1cc4      	adds	r4, r0, #3
 8024fdc:	f024 0403 	bic.w	r4, r4, #3
 8024fe0:	42a0      	cmp	r0, r4
 8024fe2:	d0e3      	beq.n	8024fac <_malloc_r+0x64>
 8024fe4:	1a21      	subs	r1, r4, r0
 8024fe6:	4630      	mov	r0, r6
 8024fe8:	f000 faf4 	bl	80255d4 <_sbrk_r>
 8024fec:	3001      	adds	r0, #1
 8024fee:	d1dd      	bne.n	8024fac <_malloc_r+0x64>
 8024ff0:	e7cf      	b.n	8024f92 <_malloc_r+0x4a>
 8024ff2:	bf00      	nop
 8024ff4:	20001d1c 	.word	0x20001d1c
 8024ff8:	20001d20 	.word	0x20001d20

08024ffc <__sfputc_r>:
 8024ffc:	6893      	ldr	r3, [r2, #8]
 8024ffe:	3b01      	subs	r3, #1
 8025000:	2b00      	cmp	r3, #0
 8025002:	b410      	push	{r4}
 8025004:	6093      	str	r3, [r2, #8]
 8025006:	da07      	bge.n	8025018 <__sfputc_r+0x1c>
 8025008:	6994      	ldr	r4, [r2, #24]
 802500a:	42a3      	cmp	r3, r4
 802500c:	db01      	blt.n	8025012 <__sfputc_r+0x16>
 802500e:	290a      	cmp	r1, #10
 8025010:	d102      	bne.n	8025018 <__sfputc_r+0x1c>
 8025012:	bc10      	pop	{r4}
 8025014:	f7ff bc6c 	b.w	80248f0 <__swbuf_r>
 8025018:	6813      	ldr	r3, [r2, #0]
 802501a:	1c58      	adds	r0, r3, #1
 802501c:	6010      	str	r0, [r2, #0]
 802501e:	7019      	strb	r1, [r3, #0]
 8025020:	4608      	mov	r0, r1
 8025022:	bc10      	pop	{r4}
 8025024:	4770      	bx	lr

08025026 <__sfputs_r>:
 8025026:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8025028:	4606      	mov	r6, r0
 802502a:	460f      	mov	r7, r1
 802502c:	4614      	mov	r4, r2
 802502e:	18d5      	adds	r5, r2, r3
 8025030:	42ac      	cmp	r4, r5
 8025032:	d101      	bne.n	8025038 <__sfputs_r+0x12>
 8025034:	2000      	movs	r0, #0
 8025036:	e007      	b.n	8025048 <__sfputs_r+0x22>
 8025038:	f814 1b01 	ldrb.w	r1, [r4], #1
 802503c:	463a      	mov	r2, r7
 802503e:	4630      	mov	r0, r6
 8025040:	f7ff ffdc 	bl	8024ffc <__sfputc_r>
 8025044:	1c43      	adds	r3, r0, #1
 8025046:	d1f3      	bne.n	8025030 <__sfputs_r+0xa>
 8025048:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0802504c <_vfiprintf_r>:
 802504c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025050:	460d      	mov	r5, r1
 8025052:	b09d      	sub	sp, #116	; 0x74
 8025054:	4614      	mov	r4, r2
 8025056:	4698      	mov	r8, r3
 8025058:	4606      	mov	r6, r0
 802505a:	b118      	cbz	r0, 8025064 <_vfiprintf_r+0x18>
 802505c:	6983      	ldr	r3, [r0, #24]
 802505e:	b90b      	cbnz	r3, 8025064 <_vfiprintf_r+0x18>
 8025060:	f7ff fe20 	bl	8024ca4 <__sinit>
 8025064:	4b89      	ldr	r3, [pc, #548]	; (802528c <_vfiprintf_r+0x240>)
 8025066:	429d      	cmp	r5, r3
 8025068:	d11b      	bne.n	80250a2 <_vfiprintf_r+0x56>
 802506a:	6875      	ldr	r5, [r6, #4]
 802506c:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802506e:	07d9      	lsls	r1, r3, #31
 8025070:	d405      	bmi.n	802507e <_vfiprintf_r+0x32>
 8025072:	89ab      	ldrh	r3, [r5, #12]
 8025074:	059a      	lsls	r2, r3, #22
 8025076:	d402      	bmi.n	802507e <_vfiprintf_r+0x32>
 8025078:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802507a:	f7ff feb1 	bl	8024de0 <__retarget_lock_acquire_recursive>
 802507e:	89ab      	ldrh	r3, [r5, #12]
 8025080:	071b      	lsls	r3, r3, #28
 8025082:	d501      	bpl.n	8025088 <_vfiprintf_r+0x3c>
 8025084:	692b      	ldr	r3, [r5, #16]
 8025086:	b9eb      	cbnz	r3, 80250c4 <_vfiprintf_r+0x78>
 8025088:	4629      	mov	r1, r5
 802508a:	4630      	mov	r0, r6
 802508c:	f7ff fc82 	bl	8024994 <__swsetup_r>
 8025090:	b1c0      	cbz	r0, 80250c4 <_vfiprintf_r+0x78>
 8025092:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8025094:	07dc      	lsls	r4, r3, #31
 8025096:	d50e      	bpl.n	80250b6 <_vfiprintf_r+0x6a>
 8025098:	f04f 30ff 	mov.w	r0, #4294967295
 802509c:	b01d      	add	sp, #116	; 0x74
 802509e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80250a2:	4b7b      	ldr	r3, [pc, #492]	; (8025290 <_vfiprintf_r+0x244>)
 80250a4:	429d      	cmp	r5, r3
 80250a6:	d101      	bne.n	80250ac <_vfiprintf_r+0x60>
 80250a8:	68b5      	ldr	r5, [r6, #8]
 80250aa:	e7df      	b.n	802506c <_vfiprintf_r+0x20>
 80250ac:	4b79      	ldr	r3, [pc, #484]	; (8025294 <_vfiprintf_r+0x248>)
 80250ae:	429d      	cmp	r5, r3
 80250b0:	bf08      	it	eq
 80250b2:	68f5      	ldreq	r5, [r6, #12]
 80250b4:	e7da      	b.n	802506c <_vfiprintf_r+0x20>
 80250b6:	89ab      	ldrh	r3, [r5, #12]
 80250b8:	0598      	lsls	r0, r3, #22
 80250ba:	d4ed      	bmi.n	8025098 <_vfiprintf_r+0x4c>
 80250bc:	6da8      	ldr	r0, [r5, #88]	; 0x58
 80250be:	f7ff fe90 	bl	8024de2 <__retarget_lock_release_recursive>
 80250c2:	e7e9      	b.n	8025098 <_vfiprintf_r+0x4c>
 80250c4:	2300      	movs	r3, #0
 80250c6:	9309      	str	r3, [sp, #36]	; 0x24
 80250c8:	2320      	movs	r3, #32
 80250ca:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 80250ce:	f8cd 800c 	str.w	r8, [sp, #12]
 80250d2:	2330      	movs	r3, #48	; 0x30
 80250d4:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 8025298 <_vfiprintf_r+0x24c>
 80250d8:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 80250dc:	f04f 0901 	mov.w	r9, #1
 80250e0:	4623      	mov	r3, r4
 80250e2:	469a      	mov	sl, r3
 80250e4:	f813 2b01 	ldrb.w	r2, [r3], #1
 80250e8:	b10a      	cbz	r2, 80250ee <_vfiprintf_r+0xa2>
 80250ea:	2a25      	cmp	r2, #37	; 0x25
 80250ec:	d1f9      	bne.n	80250e2 <_vfiprintf_r+0x96>
 80250ee:	ebba 0b04 	subs.w	fp, sl, r4
 80250f2:	d00b      	beq.n	802510c <_vfiprintf_r+0xc0>
 80250f4:	465b      	mov	r3, fp
 80250f6:	4622      	mov	r2, r4
 80250f8:	4629      	mov	r1, r5
 80250fa:	4630      	mov	r0, r6
 80250fc:	f7ff ff93 	bl	8025026 <__sfputs_r>
 8025100:	3001      	adds	r0, #1
 8025102:	f000 80aa 	beq.w	802525a <_vfiprintf_r+0x20e>
 8025106:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8025108:	445a      	add	r2, fp
 802510a:	9209      	str	r2, [sp, #36]	; 0x24
 802510c:	f89a 3000 	ldrb.w	r3, [sl]
 8025110:	2b00      	cmp	r3, #0
 8025112:	f000 80a2 	beq.w	802525a <_vfiprintf_r+0x20e>
 8025116:	2300      	movs	r3, #0
 8025118:	f04f 32ff 	mov.w	r2, #4294967295
 802511c:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8025120:	f10a 0a01 	add.w	sl, sl, #1
 8025124:	9304      	str	r3, [sp, #16]
 8025126:	9307      	str	r3, [sp, #28]
 8025128:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 802512c:	931a      	str	r3, [sp, #104]	; 0x68
 802512e:	4654      	mov	r4, sl
 8025130:	2205      	movs	r2, #5
 8025132:	f814 1b01 	ldrb.w	r1, [r4], #1
 8025136:	4858      	ldr	r0, [pc, #352]	; (8025298 <_vfiprintf_r+0x24c>)
 8025138:	f7db f82a 	bl	8000190 <memchr>
 802513c:	9a04      	ldr	r2, [sp, #16]
 802513e:	b9d8      	cbnz	r0, 8025178 <_vfiprintf_r+0x12c>
 8025140:	06d1      	lsls	r1, r2, #27
 8025142:	bf44      	itt	mi
 8025144:	2320      	movmi	r3, #32
 8025146:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 802514a:	0713      	lsls	r3, r2, #28
 802514c:	bf44      	itt	mi
 802514e:	232b      	movmi	r3, #43	; 0x2b
 8025150:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8025154:	f89a 3000 	ldrb.w	r3, [sl]
 8025158:	2b2a      	cmp	r3, #42	; 0x2a
 802515a:	d015      	beq.n	8025188 <_vfiprintf_r+0x13c>
 802515c:	9a07      	ldr	r2, [sp, #28]
 802515e:	4654      	mov	r4, sl
 8025160:	2000      	movs	r0, #0
 8025162:	f04f 0c0a 	mov.w	ip, #10
 8025166:	4621      	mov	r1, r4
 8025168:	f811 3b01 	ldrb.w	r3, [r1], #1
 802516c:	3b30      	subs	r3, #48	; 0x30
 802516e:	2b09      	cmp	r3, #9
 8025170:	d94e      	bls.n	8025210 <_vfiprintf_r+0x1c4>
 8025172:	b1b0      	cbz	r0, 80251a2 <_vfiprintf_r+0x156>
 8025174:	9207      	str	r2, [sp, #28]
 8025176:	e014      	b.n	80251a2 <_vfiprintf_r+0x156>
 8025178:	eba0 0308 	sub.w	r3, r0, r8
 802517c:	fa09 f303 	lsl.w	r3, r9, r3
 8025180:	4313      	orrs	r3, r2
 8025182:	9304      	str	r3, [sp, #16]
 8025184:	46a2      	mov	sl, r4
 8025186:	e7d2      	b.n	802512e <_vfiprintf_r+0xe2>
 8025188:	9b03      	ldr	r3, [sp, #12]
 802518a:	1d19      	adds	r1, r3, #4
 802518c:	681b      	ldr	r3, [r3, #0]
 802518e:	9103      	str	r1, [sp, #12]
 8025190:	2b00      	cmp	r3, #0
 8025192:	bfbb      	ittet	lt
 8025194:	425b      	neglt	r3, r3
 8025196:	f042 0202 	orrlt.w	r2, r2, #2
 802519a:	9307      	strge	r3, [sp, #28]
 802519c:	9307      	strlt	r3, [sp, #28]
 802519e:	bfb8      	it	lt
 80251a0:	9204      	strlt	r2, [sp, #16]
 80251a2:	7823      	ldrb	r3, [r4, #0]
 80251a4:	2b2e      	cmp	r3, #46	; 0x2e
 80251a6:	d10c      	bne.n	80251c2 <_vfiprintf_r+0x176>
 80251a8:	7863      	ldrb	r3, [r4, #1]
 80251aa:	2b2a      	cmp	r3, #42	; 0x2a
 80251ac:	d135      	bne.n	802521a <_vfiprintf_r+0x1ce>
 80251ae:	9b03      	ldr	r3, [sp, #12]
 80251b0:	1d1a      	adds	r2, r3, #4
 80251b2:	681b      	ldr	r3, [r3, #0]
 80251b4:	9203      	str	r2, [sp, #12]
 80251b6:	2b00      	cmp	r3, #0
 80251b8:	bfb8      	it	lt
 80251ba:	f04f 33ff 	movlt.w	r3, #4294967295
 80251be:	3402      	adds	r4, #2
 80251c0:	9305      	str	r3, [sp, #20]
 80251c2:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 80252a8 <_vfiprintf_r+0x25c>
 80251c6:	7821      	ldrb	r1, [r4, #0]
 80251c8:	2203      	movs	r2, #3
 80251ca:	4650      	mov	r0, sl
 80251cc:	f7da ffe0 	bl	8000190 <memchr>
 80251d0:	b140      	cbz	r0, 80251e4 <_vfiprintf_r+0x198>
 80251d2:	2340      	movs	r3, #64	; 0x40
 80251d4:	eba0 000a 	sub.w	r0, r0, sl
 80251d8:	fa03 f000 	lsl.w	r0, r3, r0
 80251dc:	9b04      	ldr	r3, [sp, #16]
 80251de:	4303      	orrs	r3, r0
 80251e0:	3401      	adds	r4, #1
 80251e2:	9304      	str	r3, [sp, #16]
 80251e4:	f814 1b01 	ldrb.w	r1, [r4], #1
 80251e8:	482c      	ldr	r0, [pc, #176]	; (802529c <_vfiprintf_r+0x250>)
 80251ea:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 80251ee:	2206      	movs	r2, #6
 80251f0:	f7da ffce 	bl	8000190 <memchr>
 80251f4:	2800      	cmp	r0, #0
 80251f6:	d03f      	beq.n	8025278 <_vfiprintf_r+0x22c>
 80251f8:	4b29      	ldr	r3, [pc, #164]	; (80252a0 <_vfiprintf_r+0x254>)
 80251fa:	bb1b      	cbnz	r3, 8025244 <_vfiprintf_r+0x1f8>
 80251fc:	9b03      	ldr	r3, [sp, #12]
 80251fe:	3307      	adds	r3, #7
 8025200:	f023 0307 	bic.w	r3, r3, #7
 8025204:	3308      	adds	r3, #8
 8025206:	9303      	str	r3, [sp, #12]
 8025208:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802520a:	443b      	add	r3, r7
 802520c:	9309      	str	r3, [sp, #36]	; 0x24
 802520e:	e767      	b.n	80250e0 <_vfiprintf_r+0x94>
 8025210:	fb0c 3202 	mla	r2, ip, r2, r3
 8025214:	460c      	mov	r4, r1
 8025216:	2001      	movs	r0, #1
 8025218:	e7a5      	b.n	8025166 <_vfiprintf_r+0x11a>
 802521a:	2300      	movs	r3, #0
 802521c:	3401      	adds	r4, #1
 802521e:	9305      	str	r3, [sp, #20]
 8025220:	4619      	mov	r1, r3
 8025222:	f04f 0c0a 	mov.w	ip, #10
 8025226:	4620      	mov	r0, r4
 8025228:	f810 2b01 	ldrb.w	r2, [r0], #1
 802522c:	3a30      	subs	r2, #48	; 0x30
 802522e:	2a09      	cmp	r2, #9
 8025230:	d903      	bls.n	802523a <_vfiprintf_r+0x1ee>
 8025232:	2b00      	cmp	r3, #0
 8025234:	d0c5      	beq.n	80251c2 <_vfiprintf_r+0x176>
 8025236:	9105      	str	r1, [sp, #20]
 8025238:	e7c3      	b.n	80251c2 <_vfiprintf_r+0x176>
 802523a:	fb0c 2101 	mla	r1, ip, r1, r2
 802523e:	4604      	mov	r4, r0
 8025240:	2301      	movs	r3, #1
 8025242:	e7f0      	b.n	8025226 <_vfiprintf_r+0x1da>
 8025244:	ab03      	add	r3, sp, #12
 8025246:	9300      	str	r3, [sp, #0]
 8025248:	462a      	mov	r2, r5
 802524a:	4b16      	ldr	r3, [pc, #88]	; (80252a4 <_vfiprintf_r+0x258>)
 802524c:	a904      	add	r1, sp, #16
 802524e:	4630      	mov	r0, r6
 8025250:	f3af 8000 	nop.w
 8025254:	4607      	mov	r7, r0
 8025256:	1c78      	adds	r0, r7, #1
 8025258:	d1d6      	bne.n	8025208 <_vfiprintf_r+0x1bc>
 802525a:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802525c:	07d9      	lsls	r1, r3, #31
 802525e:	d405      	bmi.n	802526c <_vfiprintf_r+0x220>
 8025260:	89ab      	ldrh	r3, [r5, #12]
 8025262:	059a      	lsls	r2, r3, #22
 8025264:	d402      	bmi.n	802526c <_vfiprintf_r+0x220>
 8025266:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8025268:	f7ff fdbb 	bl	8024de2 <__retarget_lock_release_recursive>
 802526c:	89ab      	ldrh	r3, [r5, #12]
 802526e:	065b      	lsls	r3, r3, #25
 8025270:	f53f af12 	bmi.w	8025098 <_vfiprintf_r+0x4c>
 8025274:	9809      	ldr	r0, [sp, #36]	; 0x24
 8025276:	e711      	b.n	802509c <_vfiprintf_r+0x50>
 8025278:	ab03      	add	r3, sp, #12
 802527a:	9300      	str	r3, [sp, #0]
 802527c:	462a      	mov	r2, r5
 802527e:	4b09      	ldr	r3, [pc, #36]	; (80252a4 <_vfiprintf_r+0x258>)
 8025280:	a904      	add	r1, sp, #16
 8025282:	4630      	mov	r0, r6
 8025284:	f000 f880 	bl	8025388 <_printf_i>
 8025288:	e7e4      	b.n	8025254 <_vfiprintf_r+0x208>
 802528a:	bf00      	nop
 802528c:	08026fc4 	.word	0x08026fc4
 8025290:	08026fe4 	.word	0x08026fe4
 8025294:	08026fa4 	.word	0x08026fa4
 8025298:	08027004 	.word	0x08027004
 802529c:	0802700e 	.word	0x0802700e
 80252a0:	00000000 	.word	0x00000000
 80252a4:	08025027 	.word	0x08025027
 80252a8:	0802700a 	.word	0x0802700a

080252ac <_printf_common>:
 80252ac:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80252b0:	4616      	mov	r6, r2
 80252b2:	4699      	mov	r9, r3
 80252b4:	688a      	ldr	r2, [r1, #8]
 80252b6:	690b      	ldr	r3, [r1, #16]
 80252b8:	f8dd 8020 	ldr.w	r8, [sp, #32]
 80252bc:	4293      	cmp	r3, r2
 80252be:	bfb8      	it	lt
 80252c0:	4613      	movlt	r3, r2
 80252c2:	6033      	str	r3, [r6, #0]
 80252c4:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 80252c8:	4607      	mov	r7, r0
 80252ca:	460c      	mov	r4, r1
 80252cc:	b10a      	cbz	r2, 80252d2 <_printf_common+0x26>
 80252ce:	3301      	adds	r3, #1
 80252d0:	6033      	str	r3, [r6, #0]
 80252d2:	6823      	ldr	r3, [r4, #0]
 80252d4:	0699      	lsls	r1, r3, #26
 80252d6:	bf42      	ittt	mi
 80252d8:	6833      	ldrmi	r3, [r6, #0]
 80252da:	3302      	addmi	r3, #2
 80252dc:	6033      	strmi	r3, [r6, #0]
 80252de:	6825      	ldr	r5, [r4, #0]
 80252e0:	f015 0506 	ands.w	r5, r5, #6
 80252e4:	d106      	bne.n	80252f4 <_printf_common+0x48>
 80252e6:	f104 0a19 	add.w	sl, r4, #25
 80252ea:	68e3      	ldr	r3, [r4, #12]
 80252ec:	6832      	ldr	r2, [r6, #0]
 80252ee:	1a9b      	subs	r3, r3, r2
 80252f0:	42ab      	cmp	r3, r5
 80252f2:	dc26      	bgt.n	8025342 <_printf_common+0x96>
 80252f4:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 80252f8:	1e13      	subs	r3, r2, #0
 80252fa:	6822      	ldr	r2, [r4, #0]
 80252fc:	bf18      	it	ne
 80252fe:	2301      	movne	r3, #1
 8025300:	0692      	lsls	r2, r2, #26
 8025302:	d42b      	bmi.n	802535c <_printf_common+0xb0>
 8025304:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8025308:	4649      	mov	r1, r9
 802530a:	4638      	mov	r0, r7
 802530c:	47c0      	blx	r8
 802530e:	3001      	adds	r0, #1
 8025310:	d01e      	beq.n	8025350 <_printf_common+0xa4>
 8025312:	6823      	ldr	r3, [r4, #0]
 8025314:	68e5      	ldr	r5, [r4, #12]
 8025316:	6832      	ldr	r2, [r6, #0]
 8025318:	f003 0306 	and.w	r3, r3, #6
 802531c:	2b04      	cmp	r3, #4
 802531e:	bf08      	it	eq
 8025320:	1aad      	subeq	r5, r5, r2
 8025322:	68a3      	ldr	r3, [r4, #8]
 8025324:	6922      	ldr	r2, [r4, #16]
 8025326:	bf0c      	ite	eq
 8025328:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 802532c:	2500      	movne	r5, #0
 802532e:	4293      	cmp	r3, r2
 8025330:	bfc4      	itt	gt
 8025332:	1a9b      	subgt	r3, r3, r2
 8025334:	18ed      	addgt	r5, r5, r3
 8025336:	2600      	movs	r6, #0
 8025338:	341a      	adds	r4, #26
 802533a:	42b5      	cmp	r5, r6
 802533c:	d11a      	bne.n	8025374 <_printf_common+0xc8>
 802533e:	2000      	movs	r0, #0
 8025340:	e008      	b.n	8025354 <_printf_common+0xa8>
 8025342:	2301      	movs	r3, #1
 8025344:	4652      	mov	r2, sl
 8025346:	4649      	mov	r1, r9
 8025348:	4638      	mov	r0, r7
 802534a:	47c0      	blx	r8
 802534c:	3001      	adds	r0, #1
 802534e:	d103      	bne.n	8025358 <_printf_common+0xac>
 8025350:	f04f 30ff 	mov.w	r0, #4294967295
 8025354:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8025358:	3501      	adds	r5, #1
 802535a:	e7c6      	b.n	80252ea <_printf_common+0x3e>
 802535c:	18e1      	adds	r1, r4, r3
 802535e:	1c5a      	adds	r2, r3, #1
 8025360:	2030      	movs	r0, #48	; 0x30
 8025362:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8025366:	4422      	add	r2, r4
 8025368:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 802536c:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8025370:	3302      	adds	r3, #2
 8025372:	e7c7      	b.n	8025304 <_printf_common+0x58>
 8025374:	2301      	movs	r3, #1
 8025376:	4622      	mov	r2, r4
 8025378:	4649      	mov	r1, r9
 802537a:	4638      	mov	r0, r7
 802537c:	47c0      	blx	r8
 802537e:	3001      	adds	r0, #1
 8025380:	d0e6      	beq.n	8025350 <_printf_common+0xa4>
 8025382:	3601      	adds	r6, #1
 8025384:	e7d9      	b.n	802533a <_printf_common+0x8e>
	...

08025388 <_printf_i>:
 8025388:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 802538c:	460c      	mov	r4, r1
 802538e:	4691      	mov	r9, r2
 8025390:	7e27      	ldrb	r7, [r4, #24]
 8025392:	990c      	ldr	r1, [sp, #48]	; 0x30
 8025394:	2f78      	cmp	r7, #120	; 0x78
 8025396:	4680      	mov	r8, r0
 8025398:	469a      	mov	sl, r3
 802539a:	f104 0243 	add.w	r2, r4, #67	; 0x43
 802539e:	d807      	bhi.n	80253b0 <_printf_i+0x28>
 80253a0:	2f62      	cmp	r7, #98	; 0x62
 80253a2:	d80a      	bhi.n	80253ba <_printf_i+0x32>
 80253a4:	2f00      	cmp	r7, #0
 80253a6:	f000 80d8 	beq.w	802555a <_printf_i+0x1d2>
 80253aa:	2f58      	cmp	r7, #88	; 0x58
 80253ac:	f000 80a3 	beq.w	80254f6 <_printf_i+0x16e>
 80253b0:	f104 0642 	add.w	r6, r4, #66	; 0x42
 80253b4:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 80253b8:	e03a      	b.n	8025430 <_printf_i+0xa8>
 80253ba:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 80253be:	2b15      	cmp	r3, #21
 80253c0:	d8f6      	bhi.n	80253b0 <_printf_i+0x28>
 80253c2:	a001      	add	r0, pc, #4	; (adr r0, 80253c8 <_printf_i+0x40>)
 80253c4:	f850 f023 	ldr.w	pc, [r0, r3, lsl #2]
 80253c8:	08025421 	.word	0x08025421
 80253cc:	08025435 	.word	0x08025435
 80253d0:	080253b1 	.word	0x080253b1
 80253d4:	080253b1 	.word	0x080253b1
 80253d8:	080253b1 	.word	0x080253b1
 80253dc:	080253b1 	.word	0x080253b1
 80253e0:	08025435 	.word	0x08025435
 80253e4:	080253b1 	.word	0x080253b1
 80253e8:	080253b1 	.word	0x080253b1
 80253ec:	080253b1 	.word	0x080253b1
 80253f0:	080253b1 	.word	0x080253b1
 80253f4:	08025541 	.word	0x08025541
 80253f8:	08025465 	.word	0x08025465
 80253fc:	08025523 	.word	0x08025523
 8025400:	080253b1 	.word	0x080253b1
 8025404:	080253b1 	.word	0x080253b1
 8025408:	08025563 	.word	0x08025563
 802540c:	080253b1 	.word	0x080253b1
 8025410:	08025465 	.word	0x08025465
 8025414:	080253b1 	.word	0x080253b1
 8025418:	080253b1 	.word	0x080253b1
 802541c:	0802552b 	.word	0x0802552b
 8025420:	680b      	ldr	r3, [r1, #0]
 8025422:	1d1a      	adds	r2, r3, #4
 8025424:	681b      	ldr	r3, [r3, #0]
 8025426:	600a      	str	r2, [r1, #0]
 8025428:	f104 0642 	add.w	r6, r4, #66	; 0x42
 802542c:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8025430:	2301      	movs	r3, #1
 8025432:	e0a3      	b.n	802557c <_printf_i+0x1f4>
 8025434:	6825      	ldr	r5, [r4, #0]
 8025436:	6808      	ldr	r0, [r1, #0]
 8025438:	062e      	lsls	r6, r5, #24
 802543a:	f100 0304 	add.w	r3, r0, #4
 802543e:	d50a      	bpl.n	8025456 <_printf_i+0xce>
 8025440:	6805      	ldr	r5, [r0, #0]
 8025442:	600b      	str	r3, [r1, #0]
 8025444:	2d00      	cmp	r5, #0
 8025446:	da03      	bge.n	8025450 <_printf_i+0xc8>
 8025448:	232d      	movs	r3, #45	; 0x2d
 802544a:	426d      	negs	r5, r5
 802544c:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8025450:	485e      	ldr	r0, [pc, #376]	; (80255cc <_printf_i+0x244>)
 8025452:	230a      	movs	r3, #10
 8025454:	e019      	b.n	802548a <_printf_i+0x102>
 8025456:	f015 0f40 	tst.w	r5, #64	; 0x40
 802545a:	6805      	ldr	r5, [r0, #0]
 802545c:	600b      	str	r3, [r1, #0]
 802545e:	bf18      	it	ne
 8025460:	b22d      	sxthne	r5, r5
 8025462:	e7ef      	b.n	8025444 <_printf_i+0xbc>
 8025464:	680b      	ldr	r3, [r1, #0]
 8025466:	6825      	ldr	r5, [r4, #0]
 8025468:	1d18      	adds	r0, r3, #4
 802546a:	6008      	str	r0, [r1, #0]
 802546c:	0628      	lsls	r0, r5, #24
 802546e:	d501      	bpl.n	8025474 <_printf_i+0xec>
 8025470:	681d      	ldr	r5, [r3, #0]
 8025472:	e002      	b.n	802547a <_printf_i+0xf2>
 8025474:	0669      	lsls	r1, r5, #25
 8025476:	d5fb      	bpl.n	8025470 <_printf_i+0xe8>
 8025478:	881d      	ldrh	r5, [r3, #0]
 802547a:	4854      	ldr	r0, [pc, #336]	; (80255cc <_printf_i+0x244>)
 802547c:	2f6f      	cmp	r7, #111	; 0x6f
 802547e:	bf0c      	ite	eq
 8025480:	2308      	moveq	r3, #8
 8025482:	230a      	movne	r3, #10
 8025484:	2100      	movs	r1, #0
 8025486:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 802548a:	6866      	ldr	r6, [r4, #4]
 802548c:	60a6      	str	r6, [r4, #8]
 802548e:	2e00      	cmp	r6, #0
 8025490:	bfa2      	ittt	ge
 8025492:	6821      	ldrge	r1, [r4, #0]
 8025494:	f021 0104 	bicge.w	r1, r1, #4
 8025498:	6021      	strge	r1, [r4, #0]
 802549a:	b90d      	cbnz	r5, 80254a0 <_printf_i+0x118>
 802549c:	2e00      	cmp	r6, #0
 802549e:	d04d      	beq.n	802553c <_printf_i+0x1b4>
 80254a0:	4616      	mov	r6, r2
 80254a2:	fbb5 f1f3 	udiv	r1, r5, r3
 80254a6:	fb03 5711 	mls	r7, r3, r1, r5
 80254aa:	5dc7      	ldrb	r7, [r0, r7]
 80254ac:	f806 7d01 	strb.w	r7, [r6, #-1]!
 80254b0:	462f      	mov	r7, r5
 80254b2:	42bb      	cmp	r3, r7
 80254b4:	460d      	mov	r5, r1
 80254b6:	d9f4      	bls.n	80254a2 <_printf_i+0x11a>
 80254b8:	2b08      	cmp	r3, #8
 80254ba:	d10b      	bne.n	80254d4 <_printf_i+0x14c>
 80254bc:	6823      	ldr	r3, [r4, #0]
 80254be:	07df      	lsls	r7, r3, #31
 80254c0:	d508      	bpl.n	80254d4 <_printf_i+0x14c>
 80254c2:	6923      	ldr	r3, [r4, #16]
 80254c4:	6861      	ldr	r1, [r4, #4]
 80254c6:	4299      	cmp	r1, r3
 80254c8:	bfde      	ittt	le
 80254ca:	2330      	movle	r3, #48	; 0x30
 80254cc:	f806 3c01 	strble.w	r3, [r6, #-1]
 80254d0:	f106 36ff 	addle.w	r6, r6, #4294967295
 80254d4:	1b92      	subs	r2, r2, r6
 80254d6:	6122      	str	r2, [r4, #16]
 80254d8:	f8cd a000 	str.w	sl, [sp]
 80254dc:	464b      	mov	r3, r9
 80254de:	aa03      	add	r2, sp, #12
 80254e0:	4621      	mov	r1, r4
 80254e2:	4640      	mov	r0, r8
 80254e4:	f7ff fee2 	bl	80252ac <_printf_common>
 80254e8:	3001      	adds	r0, #1
 80254ea:	d14c      	bne.n	8025586 <_printf_i+0x1fe>
 80254ec:	f04f 30ff 	mov.w	r0, #4294967295
 80254f0:	b004      	add	sp, #16
 80254f2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80254f6:	4835      	ldr	r0, [pc, #212]	; (80255cc <_printf_i+0x244>)
 80254f8:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 80254fc:	6823      	ldr	r3, [r4, #0]
 80254fe:	680e      	ldr	r6, [r1, #0]
 8025500:	061f      	lsls	r7, r3, #24
 8025502:	f856 5b04 	ldr.w	r5, [r6], #4
 8025506:	600e      	str	r6, [r1, #0]
 8025508:	d514      	bpl.n	8025534 <_printf_i+0x1ac>
 802550a:	07d9      	lsls	r1, r3, #31
 802550c:	bf44      	itt	mi
 802550e:	f043 0320 	orrmi.w	r3, r3, #32
 8025512:	6023      	strmi	r3, [r4, #0]
 8025514:	b91d      	cbnz	r5, 802551e <_printf_i+0x196>
 8025516:	6823      	ldr	r3, [r4, #0]
 8025518:	f023 0320 	bic.w	r3, r3, #32
 802551c:	6023      	str	r3, [r4, #0]
 802551e:	2310      	movs	r3, #16
 8025520:	e7b0      	b.n	8025484 <_printf_i+0xfc>
 8025522:	6823      	ldr	r3, [r4, #0]
 8025524:	f043 0320 	orr.w	r3, r3, #32
 8025528:	6023      	str	r3, [r4, #0]
 802552a:	2378      	movs	r3, #120	; 0x78
 802552c:	4828      	ldr	r0, [pc, #160]	; (80255d0 <_printf_i+0x248>)
 802552e:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8025532:	e7e3      	b.n	80254fc <_printf_i+0x174>
 8025534:	065e      	lsls	r6, r3, #25
 8025536:	bf48      	it	mi
 8025538:	b2ad      	uxthmi	r5, r5
 802553a:	e7e6      	b.n	802550a <_printf_i+0x182>
 802553c:	4616      	mov	r6, r2
 802553e:	e7bb      	b.n	80254b8 <_printf_i+0x130>
 8025540:	680b      	ldr	r3, [r1, #0]
 8025542:	6826      	ldr	r6, [r4, #0]
 8025544:	6960      	ldr	r0, [r4, #20]
 8025546:	1d1d      	adds	r5, r3, #4
 8025548:	600d      	str	r5, [r1, #0]
 802554a:	0635      	lsls	r5, r6, #24
 802554c:	681b      	ldr	r3, [r3, #0]
 802554e:	d501      	bpl.n	8025554 <_printf_i+0x1cc>
 8025550:	6018      	str	r0, [r3, #0]
 8025552:	e002      	b.n	802555a <_printf_i+0x1d2>
 8025554:	0671      	lsls	r1, r6, #25
 8025556:	d5fb      	bpl.n	8025550 <_printf_i+0x1c8>
 8025558:	8018      	strh	r0, [r3, #0]
 802555a:	2300      	movs	r3, #0
 802555c:	6123      	str	r3, [r4, #16]
 802555e:	4616      	mov	r6, r2
 8025560:	e7ba      	b.n	80254d8 <_printf_i+0x150>
 8025562:	680b      	ldr	r3, [r1, #0]
 8025564:	1d1a      	adds	r2, r3, #4
 8025566:	600a      	str	r2, [r1, #0]
 8025568:	681e      	ldr	r6, [r3, #0]
 802556a:	6862      	ldr	r2, [r4, #4]
 802556c:	2100      	movs	r1, #0
 802556e:	4630      	mov	r0, r6
 8025570:	f7da fe0e 	bl	8000190 <memchr>
 8025574:	b108      	cbz	r0, 802557a <_printf_i+0x1f2>
 8025576:	1b80      	subs	r0, r0, r6
 8025578:	6060      	str	r0, [r4, #4]
 802557a:	6863      	ldr	r3, [r4, #4]
 802557c:	6123      	str	r3, [r4, #16]
 802557e:	2300      	movs	r3, #0
 8025580:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8025584:	e7a8      	b.n	80254d8 <_printf_i+0x150>
 8025586:	6923      	ldr	r3, [r4, #16]
 8025588:	4632      	mov	r2, r6
 802558a:	4649      	mov	r1, r9
 802558c:	4640      	mov	r0, r8
 802558e:	47d0      	blx	sl
 8025590:	3001      	adds	r0, #1
 8025592:	d0ab      	beq.n	80254ec <_printf_i+0x164>
 8025594:	6823      	ldr	r3, [r4, #0]
 8025596:	079b      	lsls	r3, r3, #30
 8025598:	d413      	bmi.n	80255c2 <_printf_i+0x23a>
 802559a:	68e0      	ldr	r0, [r4, #12]
 802559c:	9b03      	ldr	r3, [sp, #12]
 802559e:	4298      	cmp	r0, r3
 80255a0:	bfb8      	it	lt
 80255a2:	4618      	movlt	r0, r3
 80255a4:	e7a4      	b.n	80254f0 <_printf_i+0x168>
 80255a6:	2301      	movs	r3, #1
 80255a8:	4632      	mov	r2, r6
 80255aa:	4649      	mov	r1, r9
 80255ac:	4640      	mov	r0, r8
 80255ae:	47d0      	blx	sl
 80255b0:	3001      	adds	r0, #1
 80255b2:	d09b      	beq.n	80254ec <_printf_i+0x164>
 80255b4:	3501      	adds	r5, #1
 80255b6:	68e3      	ldr	r3, [r4, #12]
 80255b8:	9903      	ldr	r1, [sp, #12]
 80255ba:	1a5b      	subs	r3, r3, r1
 80255bc:	42ab      	cmp	r3, r5
 80255be:	dcf2      	bgt.n	80255a6 <_printf_i+0x21e>
 80255c0:	e7eb      	b.n	802559a <_printf_i+0x212>
 80255c2:	2500      	movs	r5, #0
 80255c4:	f104 0619 	add.w	r6, r4, #25
 80255c8:	e7f5      	b.n	80255b6 <_printf_i+0x22e>
 80255ca:	bf00      	nop
 80255cc:	08027015 	.word	0x08027015
 80255d0:	08027026 	.word	0x08027026

080255d4 <_sbrk_r>:
 80255d4:	b538      	push	{r3, r4, r5, lr}
 80255d6:	4d06      	ldr	r5, [pc, #24]	; (80255f0 <_sbrk_r+0x1c>)
 80255d8:	2300      	movs	r3, #0
 80255da:	4604      	mov	r4, r0
 80255dc:	4608      	mov	r0, r1
 80255de:	602b      	str	r3, [r5, #0]
 80255e0:	f7e1 f87e 	bl	80066e0 <_sbrk>
 80255e4:	1c43      	adds	r3, r0, #1
 80255e6:	d102      	bne.n	80255ee <_sbrk_r+0x1a>
 80255e8:	682b      	ldr	r3, [r5, #0]
 80255ea:	b103      	cbz	r3, 80255ee <_sbrk_r+0x1a>
 80255ec:	6023      	str	r3, [r4, #0]
 80255ee:	bd38      	pop	{r3, r4, r5, pc}
 80255f0:	20002090 	.word	0x20002090

080255f4 <__sread>:
 80255f4:	b510      	push	{r4, lr}
 80255f6:	460c      	mov	r4, r1
 80255f8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80255fc:	f000 f8ae 	bl	802575c <_read_r>
 8025600:	2800      	cmp	r0, #0
 8025602:	bfab      	itete	ge
 8025604:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8025606:	89a3      	ldrhlt	r3, [r4, #12]
 8025608:	181b      	addge	r3, r3, r0
 802560a:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 802560e:	bfac      	ite	ge
 8025610:	6563      	strge	r3, [r4, #84]	; 0x54
 8025612:	81a3      	strhlt	r3, [r4, #12]
 8025614:	bd10      	pop	{r4, pc}

08025616 <__swrite>:
 8025616:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802561a:	461f      	mov	r7, r3
 802561c:	898b      	ldrh	r3, [r1, #12]
 802561e:	05db      	lsls	r3, r3, #23
 8025620:	4605      	mov	r5, r0
 8025622:	460c      	mov	r4, r1
 8025624:	4616      	mov	r6, r2
 8025626:	d505      	bpl.n	8025634 <__swrite+0x1e>
 8025628:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802562c:	2302      	movs	r3, #2
 802562e:	2200      	movs	r2, #0
 8025630:	f000 f868 	bl	8025704 <_lseek_r>
 8025634:	89a3      	ldrh	r3, [r4, #12]
 8025636:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 802563a:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 802563e:	81a3      	strh	r3, [r4, #12]
 8025640:	4632      	mov	r2, r6
 8025642:	463b      	mov	r3, r7
 8025644:	4628      	mov	r0, r5
 8025646:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802564a:	f000 b817 	b.w	802567c <_write_r>

0802564e <__sseek>:
 802564e:	b510      	push	{r4, lr}
 8025650:	460c      	mov	r4, r1
 8025652:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8025656:	f000 f855 	bl	8025704 <_lseek_r>
 802565a:	1c43      	adds	r3, r0, #1
 802565c:	89a3      	ldrh	r3, [r4, #12]
 802565e:	bf15      	itete	ne
 8025660:	6560      	strne	r0, [r4, #84]	; 0x54
 8025662:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8025666:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 802566a:	81a3      	strheq	r3, [r4, #12]
 802566c:	bf18      	it	ne
 802566e:	81a3      	strhne	r3, [r4, #12]
 8025670:	bd10      	pop	{r4, pc}

08025672 <__sclose>:
 8025672:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8025676:	f000 b813 	b.w	80256a0 <_close_r>
	...

0802567c <_write_r>:
 802567c:	b538      	push	{r3, r4, r5, lr}
 802567e:	4d07      	ldr	r5, [pc, #28]	; (802569c <_write_r+0x20>)
 8025680:	4604      	mov	r4, r0
 8025682:	4608      	mov	r0, r1
 8025684:	4611      	mov	r1, r2
 8025686:	2200      	movs	r2, #0
 8025688:	602a      	str	r2, [r5, #0]
 802568a:	461a      	mov	r2, r3
 802568c:	f7e0 ffdc 	bl	8006648 <_write>
 8025690:	1c43      	adds	r3, r0, #1
 8025692:	d102      	bne.n	802569a <_write_r+0x1e>
 8025694:	682b      	ldr	r3, [r5, #0]
 8025696:	b103      	cbz	r3, 802569a <_write_r+0x1e>
 8025698:	6023      	str	r3, [r4, #0]
 802569a:	bd38      	pop	{r3, r4, r5, pc}
 802569c:	20002090 	.word	0x20002090

080256a0 <_close_r>:
 80256a0:	b538      	push	{r3, r4, r5, lr}
 80256a2:	4d06      	ldr	r5, [pc, #24]	; (80256bc <_close_r+0x1c>)
 80256a4:	2300      	movs	r3, #0
 80256a6:	4604      	mov	r4, r0
 80256a8:	4608      	mov	r0, r1
 80256aa:	602b      	str	r3, [r5, #0]
 80256ac:	f7e0 ffe8 	bl	8006680 <_close>
 80256b0:	1c43      	adds	r3, r0, #1
 80256b2:	d102      	bne.n	80256ba <_close_r+0x1a>
 80256b4:	682b      	ldr	r3, [r5, #0]
 80256b6:	b103      	cbz	r3, 80256ba <_close_r+0x1a>
 80256b8:	6023      	str	r3, [r4, #0]
 80256ba:	bd38      	pop	{r3, r4, r5, pc}
 80256bc:	20002090 	.word	0x20002090

080256c0 <_fstat_r>:
 80256c0:	b538      	push	{r3, r4, r5, lr}
 80256c2:	4d07      	ldr	r5, [pc, #28]	; (80256e0 <_fstat_r+0x20>)
 80256c4:	2300      	movs	r3, #0
 80256c6:	4604      	mov	r4, r0
 80256c8:	4608      	mov	r0, r1
 80256ca:	4611      	mov	r1, r2
 80256cc:	602b      	str	r3, [r5, #0]
 80256ce:	f7e0 ffe2 	bl	8006696 <_fstat>
 80256d2:	1c43      	adds	r3, r0, #1
 80256d4:	d102      	bne.n	80256dc <_fstat_r+0x1c>
 80256d6:	682b      	ldr	r3, [r5, #0]
 80256d8:	b103      	cbz	r3, 80256dc <_fstat_r+0x1c>
 80256da:	6023      	str	r3, [r4, #0]
 80256dc:	bd38      	pop	{r3, r4, r5, pc}
 80256de:	bf00      	nop
 80256e0:	20002090 	.word	0x20002090

080256e4 <_isatty_r>:
 80256e4:	b538      	push	{r3, r4, r5, lr}
 80256e6:	4d06      	ldr	r5, [pc, #24]	; (8025700 <_isatty_r+0x1c>)
 80256e8:	2300      	movs	r3, #0
 80256ea:	4604      	mov	r4, r0
 80256ec:	4608      	mov	r0, r1
 80256ee:	602b      	str	r3, [r5, #0]
 80256f0:	f7e0 ffe0 	bl	80066b4 <_isatty>
 80256f4:	1c43      	adds	r3, r0, #1
 80256f6:	d102      	bne.n	80256fe <_isatty_r+0x1a>
 80256f8:	682b      	ldr	r3, [r5, #0]
 80256fa:	b103      	cbz	r3, 80256fe <_isatty_r+0x1a>
 80256fc:	6023      	str	r3, [r4, #0]
 80256fe:	bd38      	pop	{r3, r4, r5, pc}
 8025700:	20002090 	.word	0x20002090

08025704 <_lseek_r>:
 8025704:	b538      	push	{r3, r4, r5, lr}
 8025706:	4d07      	ldr	r5, [pc, #28]	; (8025724 <_lseek_r+0x20>)
 8025708:	4604      	mov	r4, r0
 802570a:	4608      	mov	r0, r1
 802570c:	4611      	mov	r1, r2
 802570e:	2200      	movs	r2, #0
 8025710:	602a      	str	r2, [r5, #0]
 8025712:	461a      	mov	r2, r3
 8025714:	f7e0 ffd8 	bl	80066c8 <_lseek>
 8025718:	1c43      	adds	r3, r0, #1
 802571a:	d102      	bne.n	8025722 <_lseek_r+0x1e>
 802571c:	682b      	ldr	r3, [r5, #0]
 802571e:	b103      	cbz	r3, 8025722 <_lseek_r+0x1e>
 8025720:	6023      	str	r3, [r4, #0]
 8025722:	bd38      	pop	{r3, r4, r5, pc}
 8025724:	20002090 	.word	0x20002090

08025728 <memcpy>:
 8025728:	440a      	add	r2, r1
 802572a:	4291      	cmp	r1, r2
 802572c:	f100 33ff 	add.w	r3, r0, #4294967295
 8025730:	d100      	bne.n	8025734 <memcpy+0xc>
 8025732:	4770      	bx	lr
 8025734:	b510      	push	{r4, lr}
 8025736:	f811 4b01 	ldrb.w	r4, [r1], #1
 802573a:	f803 4f01 	strb.w	r4, [r3, #1]!
 802573e:	4291      	cmp	r1, r2
 8025740:	d1f9      	bne.n	8025736 <memcpy+0xe>
 8025742:	bd10      	pop	{r4, pc}

08025744 <__malloc_lock>:
 8025744:	4801      	ldr	r0, [pc, #4]	; (802574c <__malloc_lock+0x8>)
 8025746:	f7ff bb4b 	b.w	8024de0 <__retarget_lock_acquire_recursive>
 802574a:	bf00      	nop
 802574c:	20002088 	.word	0x20002088

08025750 <__malloc_unlock>:
 8025750:	4801      	ldr	r0, [pc, #4]	; (8025758 <__malloc_unlock+0x8>)
 8025752:	f7ff bb46 	b.w	8024de2 <__retarget_lock_release_recursive>
 8025756:	bf00      	nop
 8025758:	20002088 	.word	0x20002088

0802575c <_read_r>:
 802575c:	b538      	push	{r3, r4, r5, lr}
 802575e:	4d07      	ldr	r5, [pc, #28]	; (802577c <_read_r+0x20>)
 8025760:	4604      	mov	r4, r0
 8025762:	4608      	mov	r0, r1
 8025764:	4611      	mov	r1, r2
 8025766:	2200      	movs	r2, #0
 8025768:	602a      	str	r2, [r5, #0]
 802576a:	461a      	mov	r2, r3
 802576c:	f7e0 ff4f 	bl	800660e <_read>
 8025770:	1c43      	adds	r3, r0, #1
 8025772:	d102      	bne.n	802577a <_read_r+0x1e>
 8025774:	682b      	ldr	r3, [r5, #0]
 8025776:	b103      	cbz	r3, 802577a <_read_r+0x1e>
 8025778:	6023      	str	r3, [r4, #0]
 802577a:	bd38      	pop	{r3, r4, r5, pc}
 802577c:	20002090 	.word	0x20002090

08025780 <abort>:
 8025780:	b508      	push	{r3, lr}
 8025782:	2006      	movs	r0, #6
 8025784:	f000 f82c 	bl	80257e0 <raise>
 8025788:	2001      	movs	r0, #1
 802578a:	f7e0 ff36 	bl	80065fa <_exit>

0802578e <_raise_r>:
 802578e:	291f      	cmp	r1, #31
 8025790:	b538      	push	{r3, r4, r5, lr}
 8025792:	4604      	mov	r4, r0
 8025794:	460d      	mov	r5, r1
 8025796:	d904      	bls.n	80257a2 <_raise_r+0x14>
 8025798:	2316      	movs	r3, #22
 802579a:	6003      	str	r3, [r0, #0]
 802579c:	f04f 30ff 	mov.w	r0, #4294967295
 80257a0:	bd38      	pop	{r3, r4, r5, pc}
 80257a2:	6c42      	ldr	r2, [r0, #68]	; 0x44
 80257a4:	b112      	cbz	r2, 80257ac <_raise_r+0x1e>
 80257a6:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 80257aa:	b94b      	cbnz	r3, 80257c0 <_raise_r+0x32>
 80257ac:	4620      	mov	r0, r4
 80257ae:	f000 f831 	bl	8025814 <_getpid_r>
 80257b2:	462a      	mov	r2, r5
 80257b4:	4601      	mov	r1, r0
 80257b6:	4620      	mov	r0, r4
 80257b8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80257bc:	f000 b818 	b.w	80257f0 <_kill_r>
 80257c0:	2b01      	cmp	r3, #1
 80257c2:	d00a      	beq.n	80257da <_raise_r+0x4c>
 80257c4:	1c59      	adds	r1, r3, #1
 80257c6:	d103      	bne.n	80257d0 <_raise_r+0x42>
 80257c8:	2316      	movs	r3, #22
 80257ca:	6003      	str	r3, [r0, #0]
 80257cc:	2001      	movs	r0, #1
 80257ce:	e7e7      	b.n	80257a0 <_raise_r+0x12>
 80257d0:	2400      	movs	r4, #0
 80257d2:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 80257d6:	4628      	mov	r0, r5
 80257d8:	4798      	blx	r3
 80257da:	2000      	movs	r0, #0
 80257dc:	e7e0      	b.n	80257a0 <_raise_r+0x12>
	...

080257e0 <raise>:
 80257e0:	4b02      	ldr	r3, [pc, #8]	; (80257ec <raise+0xc>)
 80257e2:	4601      	mov	r1, r0
 80257e4:	6818      	ldr	r0, [r3, #0]
 80257e6:	f7ff bfd2 	b.w	802578e <_raise_r>
 80257ea:	bf00      	nop
 80257ec:	200001d8 	.word	0x200001d8

080257f0 <_kill_r>:
 80257f0:	b538      	push	{r3, r4, r5, lr}
 80257f2:	4d07      	ldr	r5, [pc, #28]	; (8025810 <_kill_r+0x20>)
 80257f4:	2300      	movs	r3, #0
 80257f6:	4604      	mov	r4, r0
 80257f8:	4608      	mov	r0, r1
 80257fa:	4611      	mov	r1, r2
 80257fc:	602b      	str	r3, [r5, #0]
 80257fe:	f7e0 feec 	bl	80065da <_kill>
 8025802:	1c43      	adds	r3, r0, #1
 8025804:	d102      	bne.n	802580c <_kill_r+0x1c>
 8025806:	682b      	ldr	r3, [r5, #0]
 8025808:	b103      	cbz	r3, 802580c <_kill_r+0x1c>
 802580a:	6023      	str	r3, [r4, #0]
 802580c:	bd38      	pop	{r3, r4, r5, pc}
 802580e:	bf00      	nop
 8025810:	20002090 	.word	0x20002090

08025814 <_getpid_r>:
 8025814:	f7e0 beda 	b.w	80065cc <_getpid>

08025818 <_init>:
 8025818:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802581a:	bf00      	nop
 802581c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 802581e:	bc08      	pop	{r3}
 8025820:	469e      	mov	lr, r3
 8025822:	4770      	bx	lr

08025824 <_fini>:
 8025824:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8025826:	bf00      	nop
 8025828:	bcf8      	pop	{r3, r4, r5, r6, r7}
 802582a:	bc08      	pop	{r3}
 802582c:	469e      	mov	lr, r3
 802582e:	4770      	bx	lr
